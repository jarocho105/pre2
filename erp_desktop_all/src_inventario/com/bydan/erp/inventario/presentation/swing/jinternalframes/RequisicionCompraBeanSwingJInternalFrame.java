/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.inventario.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.inventario.util.RequisicionCompraConstantesFunciones;
import com.bydan.erp.inventario.util.RequisicionCompraParameterReturnGeneral;
//import com.bydan.erp.inventario.util.RequisicionCompraParameterGeneral;
//import com.bydan.erp.inventario.presentation.report.source.RequisicionCompraBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.inventario.resources.reportes.AuxiliarReportes;


import com.bydan.erp.inventario.util.*;
import com.bydan.erp.inventario.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.inventario.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class RequisicionCompraBeanSwingJInternalFrame extends RequisicionCompraJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(RequisicionCompraBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<RequisicionCompra> requisicioncompraValidator = new ClassValidator<RequisicionCompra>(RequisicionCompra.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public RequisicionCompra requisicioncompra;	
	public RequisicionCompra requisicioncompraAux;
	public RequisicionCompra requisicioncompraAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public RequisicionCompra requisicioncompraTotales;
	public Long idRequisicionCompraActual;
	public Long iIdNuevoRequisicionCompra=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboModulo="";

	public List<Modulo> modulosForeignKey;

	public List<Modulo> getmodulosForeignKey() {
		return modulosForeignKey;
	}

	public void setmodulosForeignKey(List<Modulo> modulosForeignKey) {
		this.modulosForeignKey = modulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Modulo moduloForeignKey;

	public Modulo getmoduloForeignKey() {
		return moduloForeignKey;
	}

	public void setmoduloForeignKey(Modulo moduloForeignKey) {
		this.moduloForeignKey = moduloForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboUsuario="";

	public List<Usuario> usuariosForeignKey;

	public List<Usuario> getusuariosForeignKey() {
		return usuariosForeignKey;
	}

	public void setusuariosForeignKey(List<Usuario> usuariosForeignKey) {
		this.usuariosForeignKey = usuariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Usuario usuarioForeignKey;

	public Usuario getusuarioForeignKey() {
		return usuarioForeignKey;
	}

	public void setusuarioForeignKey(Usuario usuarioForeignKey) {
		this.usuarioForeignKey = usuarioForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboEstadoRequisicionCompra="";

	public List<EstadoRequisicion> estadorequisicioncomprasForeignKey;

	public List<EstadoRequisicion> getestadorequisicioncomprasForeignKey() {
		return estadorequisicioncomprasForeignKey;
	}

	public void setestadorequisicioncomprasForeignKey(List<EstadoRequisicion> estadorequisicioncomprasForeignKey) {
		this.estadorequisicioncomprasForeignKey = estadorequisicioncomprasForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoRequisicion estadorequisicioncompraForeignKey;

	public EstadoRequisicion getestadorequisicioncompraForeignKey() {
		return estadorequisicioncompraForeignKey;
	}

	public void setestadorequisicioncompraForeignKey(EstadoRequisicion estadorequisicioncompraForeignKey) {
		this.estadorequisicioncompraForeignKey = estadorequisicioncompraForeignKey;
	}

	public String sFinalQueryComboEmpleado="";

	public List<Empleado> empleadosForeignKey;

	public List<Empleado> getempleadosForeignKey() {
		return empleadosForeignKey;
	}

	public void setempleadosForeignKey(List<Empleado> empleadosForeignKey) {
		this.empleadosForeignKey = empleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoForeignKey;

	public Empleado getempleadoForeignKey() {
		return empleadoForeignKey;
	}

	public void setempleadoForeignKey(Empleado empleadoForeignKey) {
		this.empleadoForeignKey = empleadoForeignKey;
	}

	public String sFinalQueryComboFormato="";

	public List<Formato> formatosForeignKey;

	public List<Formato> getformatosForeignKey() {
		return formatosForeignKey;
	}

	public void setformatosForeignKey(List<Formato> formatosForeignKey) {
		this.formatosForeignKey = formatosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatoForeignKey;

	public Formato getformatoForeignKey() {
		return formatoForeignKey;
	}

	public void setformatoForeignKey(Formato formatoForeignKey) {
		this.formatoForeignKey = formatoForeignKey;
	}

	public String sFinalQueryComboTipoCambio="";

	public List<TipoCambio> tipocambiosForeignKey;

	public List<TipoCambio> gettipocambiosForeignKey() {
		return tipocambiosForeignKey;
	}

	public void settipocambiosForeignKey(List<TipoCambio> tipocambiosForeignKey) {
		this.tipocambiosForeignKey = tipocambiosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCambio tipocambioForeignKey;

	public TipoCambio gettipocambioForeignKey() {
		return tipocambioForeignKey;
	}

	public void settipocambioForeignKey(TipoCambio tipocambioForeignKey) {
		this.tipocambioForeignKey = tipocambioForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idEmpleadoActual=0L;

	public Long getidEmpleadoActual() {
		return idEmpleadoActual;
	}

	public void setidEmpleadoActual(Long idEmpleadoActual) {
		this.idEmpleadoActual= idEmpleadoActual;
	}
	public Long idTipoCambioActual=0L;

	public Long getidTipoCambioActual() {
		return idTipoCambioActual;
	}

	public void setidTipoCambioActual(Long idTipoCambioActual) {
		this.idTipoCambioActual= idTipoCambioActual;
	}
	
	

	public Boolean isTienePermisosDetalleRequisicionCompra=false;

	public Boolean getIsTienePermisosDetalleRequisicionCompra() {
		return isTienePermisosDetalleRequisicionCompra;
	}

	public void setIsTienePermisosDetalleRequisicionCompra(Boolean isTienePermisosDetalleRequisicionCompra) {
		this.isTienePermisosDetalleRequisicionCompra= isTienePermisosDetalleRequisicionCompra;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoRequisicionCompra;
	public Boolean isPermisoNuevoRequisicionCompra;
	public Boolean isPermisoActualizarRequisicionCompra;
	public Boolean isPermisoActualizarOriginalRequisicionCompra;
	public Boolean isPermisoEliminarRequisicionCompra;
	public Boolean isPermisoGuardarCambiosRequisicionCompra;
	public Boolean isPermisoConsultaRequisicionCompra;
	public Boolean isPermisoBusquedaRequisicionCompra;
	public Boolean isPermisoReporteRequisicionCompra;
	public Boolean isPermisoPaginacionMedioRequisicionCompra;
	public Boolean isPermisoPaginacionAltoRequisicionCompra;
	public Boolean isPermisoPaginacionTodoRequisicionCompra;
	public Boolean isPermisoCopiarRequisicionCompra;
	public Boolean isPermisoVerFormRequisicionCompra;
	public Boolean isPermisoDuplicarRequisicionCompra;
	public Boolean isPermisoOrdenRequisicionCompra;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public RequisicionCompraParameterReturnGeneral requisicioncompraReturnGeneral;
	public RequisicionCompraParameterReturnGeneral requisicioncompraParameterGeneral;
	
	

	public DetalleRequisicionCompraLogic detallerequisicioncompraLogic=null;

	public DetalleRequisicionCompraLogic getDetalleRequisicionCompraLogic() {
		return detallerequisicioncompraLogic;
	}

	public void setDetalleRequisicionCompraLogic(DetalleRequisicionCompraLogic detallerequisicioncompraLogic) {
		this.detallerequisicioncompraLogic = detallerequisicioncompraLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoRequisicionCompra=false;
	public Boolean esParaAccionDesdeFormularioRequisicionCompra=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected RequisicionCompraSessionBeanAdditional requisicioncompraSessionBeanAdditional=null;
	
	public RequisicionCompraSessionBeanAdditional getRequisicionCompraSessionBeanAdditional() {
		return this.requisicioncompraSessionBeanAdditional;
	}
	
	public void setRequisicionCompraSessionBeanAdditional(RequisicionCompraSessionBeanAdditional requisicioncompraSessionBeanAdditional) {
		try {
			this.requisicioncompraSessionBeanAdditional=requisicioncompraSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected RequisicionCompraBeanSwingJInternalFrameAdditional requisicioncompraBeanSwingJInternalFrameAdditional=null;
	//public class RequisicionCompraBeanSwingJInternalFrame
	
	public RequisicionCompraBeanSwingJInternalFrameAdditional getRequisicionCompraBeanSwingJInternalFrameAdditional() {
		return this.requisicioncompraBeanSwingJInternalFrameAdditional;
	}
	
	public void setRequisicionCompraBeanSwingJInternalFrameAdditional(RequisicionCompraBeanSwingJInternalFrameAdditional requisicioncompraBeanSwingJInternalFrameAdditional) {
		try {
			this.requisicioncompraBeanSwingJInternalFrameAdditional=requisicioncompraBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public RequisicionCompraLogic requisicioncompraLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public RequisicionCompra requisicioncompraBean;
	public RequisicionCompraConstantesFunciones requisicioncompraConstantesFunciones;
	//public RequisicionCompraParameterReturnGeneral requisicioncompraReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public ModuloLogic moduloLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public ClienteLogic clienteLogic;
	public UsuarioLogic usuarioLogic;
	public MonedaLogic monedaLogic;
	public EstadoRequisicionLogic estadorequisicioncompraLogic;
	public EmpleadoLogic empleadoLogic;
	public FormatoLogic formatoLogic;
	public TipoCambioLogic tipocambioLogic;
	
	//PARAMETROS
	
	
	//public List<RequisicionCompra> requisicioncompras;	
	//public List<RequisicionCompra> requisicioncomprasEliminados;
	//public List<RequisicionCompra> requisicioncomprasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoRequisicionCompra=false;
	public Boolean isVisibilidadCeldaDuplicarRequisicionCompra=true;
	public Boolean isVisibilidadCeldaCopiarRequisicionCompra=true;
	public Boolean isVisibilidadCeldaVerFormRequisicionCompra=true;
	public Boolean isVisibilidadCeldaOrdenRequisicionCompra=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesRequisicionCompra=false;
	public Boolean isVisibilidadCeldaModificarRequisicionCompra=false;
	public Boolean isVisibilidadCeldaActualizarRequisicionCompra=false;
	public Boolean isVisibilidadCeldaEliminarRequisicionCompra=false;
	public Boolean isVisibilidadCeldaCancelarRequisicionCompra=false;
	public Boolean isVisibilidadCeldaGuardarRequisicionCompra=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosRequisicionCompra=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpleado=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoRequisicionCompra=false;
	public Boolean isVisibilidadFK_IdFormato=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdModulo=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoCambio=false;
	public Boolean isVisibilidadFK_IdUsuario=false;
	
	public Long getiIdNuevoRequisicionCompra() {
		return this.iIdNuevoRequisicionCompra;
	}

	public void setiIdNuevoRequisicionCompra(Long iIdNuevoRequisicionCompra) {
		this.iIdNuevoRequisicionCompra = iIdNuevoRequisicionCompra;
	}
	
	public Long getidRequisicionCompraActual() {
		return this.idRequisicionCompraActual;
	}

	public void setidRequisicionCompraActual(Long idRequisicionCompraActual) {
		this.idRequisicionCompraActual = idRequisicionCompraActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public RequisicionCompra getrequisicioncompra() {
		return this.requisicioncompra;
	}

	public void setrequisicioncompra(RequisicionCompra requisicioncompra) {
		this.requisicioncompra = requisicioncompra;
	}
	
	public RequisicionCompra getrequisicioncompraAux() {
		return this.requisicioncompraAux;
	}

	public void setrequisicioncompraAux(RequisicionCompra requisicioncompraAux) {
		this.requisicioncompraAux = requisicioncompraAux;
	}				
	
	public RequisicionCompra getrequisicioncompraAnterior() {
		return this.requisicioncompraAnterior;
	}

	public void setrequisicioncompraAnterior(RequisicionCompra requisicioncompraAnterior) {
		this.requisicioncompraAnterior = requisicioncompraAnterior;
	}	
	
	public RequisicionCompra getrequisicioncompraTotales() {
		return this.requisicioncompraTotales;
	}

	public void setrequisicioncompraTotales(RequisicionCompra requisicioncompraTotales) {
		this.requisicioncompraTotales = requisicioncompraTotales;
	}	
	
	public RequisicionCompra getrequisicioncompraBean() {
		return this.requisicioncompraBean;
	}

	public void setrequisicioncompraBean(RequisicionCompra requisicioncompraBean) {
		this.requisicioncompraBean = requisicioncompraBean;
	}	
	
	public RequisicionCompraParameterReturnGeneral getrequisicioncompraReturnGeneral() {
		return this.requisicioncompraReturnGeneral;
	}

	public void setrequisicioncompraReturnGeneral(RequisicionCompraParameterReturnGeneral requisicioncompraReturnGeneral) {
		this.requisicioncompraReturnGeneral = requisicioncompraReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empleadoFK_IdEmpleado=-1L;

	public Long getid_empleadoFK_IdEmpleado() {
		return this.id_empleadoFK_IdEmpleado;
	}

	public void setid_empleadoFK_IdEmpleado(Long id_empleadoFK_IdEmpleado) {
		this.id_empleadoFK_IdEmpleado = id_empleadoFK_IdEmpleado;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_requisicion_compraFK_IdEstadoRequisicionCompra=-1L;

	public Long getid_estado_requisicion_compraFK_IdEstadoRequisicionCompra() {
		return this.id_estado_requisicion_compraFK_IdEstadoRequisicionCompra;
	}

	public void setid_estado_requisicion_compraFK_IdEstadoRequisicionCompra(Long id_estado_requisicion_compraFK_IdEstadoRequisicionCompra) {
		this.id_estado_requisicion_compraFK_IdEstadoRequisicionCompra = id_estado_requisicion_compraFK_IdEstadoRequisicionCompra;
	}

	public Long id_formatoFK_IdFormato=null;

	public Long getid_formatoFK_IdFormato() {
		return this.id_formatoFK_IdFormato;
	}

	public void setid_formatoFK_IdFormato(Long id_formatoFK_IdFormato) {
		this.id_formatoFK_IdFormato = id_formatoFK_IdFormato;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_moduloFK_IdModulo=-1L;

	public Long getid_moduloFK_IdModulo() {
		return this.id_moduloFK_IdModulo;
	}

	public void setid_moduloFK_IdModulo(Long id_moduloFK_IdModulo) {
		this.id_moduloFK_IdModulo = id_moduloFK_IdModulo;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_cambioFK_IdTipoCambio=null;

	public Long getid_tipo_cambioFK_IdTipoCambio() {
		return this.id_tipo_cambioFK_IdTipoCambio;
	}

	public void setid_tipo_cambioFK_IdTipoCambio(Long id_tipo_cambioFK_IdTipoCambio) {
		this.id_tipo_cambioFK_IdTipoCambio = id_tipo_cambioFK_IdTipoCambio;
	}

	public Long id_usuarioFK_IdUsuario=-1L;

	public Long getid_usuarioFK_IdUsuario() {
		return this.id_usuarioFK_IdUsuario;
	}

	public void setid_usuarioFK_IdUsuario(Long id_usuarioFK_IdUsuario) {
		this.id_usuarioFK_IdUsuario = id_usuarioFK_IdUsuario;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public RequisicionCompraLogic getRequisicionCompraLogic()	{		
		return requisicioncompraLogic;
	}

	public void setRequisicionCompraLogic(RequisicionCompraLogic requisicioncompraLogic) {
		this.requisicioncompraLogic = requisicioncompraLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoRequisicionCompra() {
		return isEsNuevoRequisicionCompra;
	}

	public void setIsEsNuevoRequisicionCompra(Boolean isEsNuevoRequisicionCompra) {
		this.isEsNuevoRequisicionCompra = isEsNuevoRequisicionCompra;
	}

	public Boolean getEsParaAccionDesdeFormularioRequisicionCompra() {
		return esParaAccionDesdeFormularioRequisicionCompra;
	}
	
	public void setEsParaAccionDesdeFormularioRequisicionCompra(Boolean esParaAccionDesdeFormularioRequisicionCompra) {
		this.esParaAccionDesdeFormularioRequisicionCompra = esParaAccionDesdeFormularioRequisicionCompra;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(requisicioncompraSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(requisicioncompraSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.modulosForeignKey=new ArrayList<Modulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ModuloLogic moduloLogic=new ModuloLogic();

			//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

					moduloLogic.getTodosModulosWithConnection(sFinalQuery,new Pagination());

					this.modulosForeignKey=moduloLogic.getModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					moduloLogic.getEntityWithConnection(requisicioncompraSessionBean.getlidModuloActual());
					this.modulosForeignKey.add(moduloLogic.getModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(requisicioncompraSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(requisicioncompraSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(requisicioncompraSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(requisicioncompraSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(requisicioncompraSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUsuariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.usuariosForeignKey=new ArrayList<Usuario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UsuarioLogic usuarioLogic=new UsuarioLogic();

			//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

					usuarioLogic.getTodosUsuariosWithConnection(sFinalQuery,new Pagination());

					this.usuariosForeignKey=usuarioLogic.getUsuarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUsuario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					usuarioLogic.getEntityWithConnection(requisicioncompraSessionBean.getlidUsuarioActual());
					this.usuariosForeignKey.add(usuarioLogic.getUsuario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(requisicioncompraSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoRequisicionComprasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadorequisicioncomprasForeignKey=new ArrayList<EstadoRequisicion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoRequisicionLogic estadorequisicionLogic=new EstadoRequisicionLogic();

			//estadorequisicionLogic.getEstadoRequisicionDataAccess().setIsForForeingKeyData(true);

			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoRequisicionCompra()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadorequisicioncompraLogic.getEstadoRequisicionDataAccess().setIsForForeingKeyData(true);

					estadorequisicionLogic.getTodosEstadoRequisicionsWithConnection(sFinalQuery,new Pagination());

					this.estadorequisicioncomprasForeignKey=estadorequisicionLogic.getEstadoRequisicions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoRequisicionCompra(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadorequisicionLogic.getEntityWithConnection(requisicioncompraSessionBean.getlidEstadoRequisicionCompraActual());
					this.estadorequisicioncomprasForeignKey.add(estadorequisicionLogic.getEstadoRequisicion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadosForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadosForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(requisicioncompraSessionBean.getlidEmpleadoActual());
					this.empleadosForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatosForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Formato formatoNulo = new Formato();

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatosForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.formatosForeignKey.add(0, formatoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormato(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(requisicioncompraSessionBean.getlidFormatoActual());
					this.formatosForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoCambiosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCambio tipocambioNulo = new TipoCambio();

			TipoCambioLogic tipocambioLogic=new TipoCambioLogic();

			//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

					tipocambioLogic.getTodosTipoCambiosWithConnection(sFinalQuery,new Pagination());

					this.tipocambiosForeignKey=tipocambioLogic.getTipoCambios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.tipocambiosForeignKey.add(0, tipocambioNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCambio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(requisicioncompraSessionBean.getlidTipoCambioActual());
					this.tipocambiosForeignKey.add(tipocambioLogic.getTipoCambio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.requisicioncompra!=null) {
						this.requisicioncompra.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empresaRequisicionCompra.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaRequisicionCompra.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empresaRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empresaRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaRequisicionCompraGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaRequisicionCompraGenerico!=null && jComboBoxid_empresaRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_empresaRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.requisicioncompra!=null) {
						this.requisicioncompra.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_sucursalRequisicionCompra.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalRequisicionCompra.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_sucursalRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_sucursalRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalRequisicionCompraGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalRequisicionCompraGenerico!=null && jComboBoxid_sucursalRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_sucursalRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualModuloForeignKey(Long idModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(moduloTemp!=null) {

					if(this.requisicioncompra!=null) {
						this.requisicioncompra.setModulo(moduloTemp);
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_moduloRequisicionCompra.setSelectedItem(moduloTemp);
					}
				} else {
					//jComboBoxid_moduloRequisicionCompra.setSelectedItem(moduloTemp);
					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_moduloRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_moduloRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualModuloForeignKeyDescripcion(Long idModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}


			sDescripcion=ModuloConstantesFunciones.getModuloDescripcion(moduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualModuloForeignKeyGenerico(Long idModuloSeleccionado,JComboBox jComboBoxid_moduloRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(moduloTemp!=null) {
				jComboBoxid_moduloRequisicionCompraGenerico.setSelectedItem(moduloTemp);
			} else {
				if(jComboBoxid_moduloRequisicionCompraGenerico!=null && jComboBoxid_moduloRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_moduloRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.requisicioncompra!=null) {
						this.requisicioncompra.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioRequisicionCompra.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioRequisicionCompraGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioRequisicionCompraGenerico!=null && jComboBoxid_ejercicioRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.requisicioncompra!=null) {
						this.requisicioncompra.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoRequisicionCompra.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoRequisicionCompraGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoRequisicionCompraGenerico!=null && jComboBoxid_periodoRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_periodoRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.requisicioncompra!=null) {
						this.requisicioncompra.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_anioRequisicionCompra.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioRequisicionCompra.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_anioRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_anioRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioRequisicionCompraGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioRequisicionCompraGenerico!=null && jComboBoxid_anioRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_anioRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.requisicioncompra!=null) {
						this.requisicioncompra.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_mesRequisicionCompra.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesRequisicionCompra.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_mesRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_mesRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesRequisicionCompraGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesRequisicionCompraGenerico!=null && jComboBoxid_mesRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_mesRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.requisicioncompra!=null) {
						this.requisicioncompra.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_clienteRequisicionCompra.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteRequisicionCompra.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_clienteRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_clienteRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteRequisicionCompra!=null) {
						jComboBoxid_clienteFK_IdClienteRequisicionCompra.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteRequisicionCompra!=null) {
							//jComboBoxid_clienteFK_IdClienteRequisicionCompra.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteRequisicionCompra.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteRequisicionCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteRequisicionCompraGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteRequisicionCompraGenerico!=null && jComboBoxid_clienteRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_clienteRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUsuarioForeignKey(Long idUsuarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(usuarioTemp!=null) {

					if(this.requisicioncompra!=null) {
						this.requisicioncompra.setUsuario(usuarioTemp);
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_usuarioRequisicionCompra.setSelectedItem(usuarioTemp);
					}
				} else {
					//jComboBoxid_usuarioRequisicionCompra.setSelectedItem(usuarioTemp);
					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_usuarioRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_usuarioRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUsuarioForeignKeyDescripcion(Long idUsuarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}


			sDescripcion=UsuarioConstantesFunciones.getUsuarioDescripcion(usuarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUsuarioForeignKeyGenerico(Long idUsuarioSeleccionado,JComboBox jComboBoxid_usuarioRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(usuarioTemp!=null) {
				jComboBoxid_usuarioRequisicionCompraGenerico.setSelectedItem(usuarioTemp);
			} else {
				if(jComboBoxid_usuarioRequisicionCompraGenerico!=null && jComboBoxid_usuarioRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_usuarioRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.requisicioncompra!=null) {
						this.requisicioncompra.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_monedaRequisicionCompra.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaRequisicionCompra.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_monedaRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_monedaRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaRequisicionCompraGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaRequisicionCompraGenerico!=null && jComboBoxid_monedaRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_monedaRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoRequisicionCompraForeignKey(Long idEstadoRequisicionCompraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoRequisicion  estadorequisicioncompraTemp=null;

			for(EstadoRequisicion estadorequisicioncompraAux:estadorequisicioncomprasForeignKey) {
				if(estadorequisicioncompraAux.getId()!=null && estadorequisicioncompraAux.getId().equals(idEstadoRequisicionCompraSeleccionado)) {
					estadorequisicioncompraTemp=estadorequisicioncompraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadorequisicioncompraTemp!=null) {

					if(this.requisicioncompra!=null) {
						this.requisicioncompra.setEstadoRequisicionCompra(estadorequisicioncompraTemp);
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_estado_requisicion_compraRequisicionCompra.setSelectedItem(estadorequisicioncompraTemp);
					}
				} else {
					//jComboBoxid_estado_requisicion_compraRequisicionCompra.setSelectedItem(estadorequisicioncompraTemp);
					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_estado_requisicion_compraRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_estado_requisicion_compraRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoRequisicionCompra") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadorequisicioncompraTemp!=null && jComboBoxid_estado_requisicion_compraFK_IdEstadoRequisicionCompraRequisicionCompra!=null) {
						jComboBoxid_estado_requisicion_compraFK_IdEstadoRequisicionCompraRequisicionCompra.setSelectedItem(estadorequisicioncompraTemp);
					} else {
						if(jComboBoxid_estado_requisicion_compraFK_IdEstadoRequisicionCompraRequisicionCompra!=null) {
							//jComboBoxid_estado_requisicion_compraFK_IdEstadoRequisicionCompraRequisicionCompra.setSelectedItem(estadorequisicioncompraTemp);
							if(jComboBoxid_estado_requisicion_compraFK_IdEstadoRequisicionCompraRequisicionCompra.getItemCount()>0) {
								jComboBoxid_estado_requisicion_compraFK_IdEstadoRequisicionCompraRequisicionCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoRequisicionCompraForeignKeyDescripcion(Long idEstadoRequisicionCompraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoRequisicion  estadorequisicioncompraTemp=null;

			for(EstadoRequisicion estadorequisicioncompraAux:estadorequisicioncomprasForeignKey) {
				if(estadorequisicioncompraAux.getId()!=null && estadorequisicioncompraAux.getId().equals(idEstadoRequisicionCompraSeleccionado)) {
					estadorequisicioncompraTemp=estadorequisicioncompraAux;
					break;
				}
			}


			sDescripcion=EstadoRequisicionConstantesFunciones.getEstadoRequisicionDescripcion(estadorequisicioncompraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoRequisicionCompraForeignKeyGenerico(Long idEstadoRequisicionCompraSeleccionado,JComboBox jComboBoxid_estado_requisicion_compraRequisicionCompraGenerico)throws Exception
	{
		try
		{
			EstadoRequisicion  estadorequisicioncompraTemp=null;

			for(EstadoRequisicion estadorequisicioncompraAux:estadorequisicioncomprasForeignKey) {
				if(estadorequisicioncompraAux.getId()!=null && estadorequisicioncompraAux.getId().equals(idEstadoRequisicionCompraSeleccionado)) {
					estadorequisicioncompraTemp=estadorequisicioncompraAux;
					break;
				}
			}

			if(estadorequisicioncompraTemp!=null) {
				jComboBoxid_estado_requisicion_compraRequisicionCompraGenerico.setSelectedItem(estadorequisicioncompraTemp);
			} else {
				if(jComboBoxid_estado_requisicion_compraRequisicionCompraGenerico!=null && jComboBoxid_estado_requisicion_compraRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_estado_requisicion_compraRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoForeignKey(Long idEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoTemp!=null) {

					if(this.requisicioncompra!=null) {
						this.requisicioncompra.setEmpleado(empleadoTemp);
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empleadoRequisicionCompra.setSelectedItem(empleadoTemp);
					}
				} else {
					//jComboBoxid_empleadoRequisicionCompra.setSelectedItem(empleadoTemp);
					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empleadoRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empleadoRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(empleadoTemp!=null && jComboBoxid_empleadoFK_IdEmpleadoRequisicionCompra!=null) {
						jComboBoxid_empleadoFK_IdEmpleadoRequisicionCompra.setSelectedItem(empleadoTemp);
					} else {
						if(jComboBoxid_empleadoFK_IdEmpleadoRequisicionCompra!=null) {
							//jComboBoxid_empleadoFK_IdEmpleadoRequisicionCompra.setSelectedItem(empleadoTemp);
							if(jComboBoxid_empleadoFK_IdEmpleadoRequisicionCompra.getItemCount()>0) {
								jComboBoxid_empleadoFK_IdEmpleadoRequisicionCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoForeignKeyDescripcion(Long idEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoForeignKeyGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxid_empleadoRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(empleadoTemp!=null) {
				jComboBoxid_empleadoRequisicionCompraGenerico.setSelectedItem(empleadoTemp);
			} else {
				if(jComboBoxid_empleadoRequisicionCompraGenerico!=null && jComboBoxid_empleadoRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_empleadoRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoForeignKey(Long idFormatoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatoTemp!=null) {

					if(this.requisicioncompra!=null) {
						this.requisicioncompra.setFormato(formatoTemp);
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_formatoRequisicionCompra.setSelectedItem(formatoTemp);
					}
				} else {
					//jComboBoxid_formatoRequisicionCompra.setSelectedItem(formatoTemp);
					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_formatoRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_formatoRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoForeignKeyDescripcion(Long idFormatoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoForeignKeyGenerico(Long idFormatoSeleccionado,JComboBox jComboBoxid_formatoRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(formatoTemp!=null) {
				jComboBoxid_formatoRequisicionCompraGenerico.setSelectedItem(formatoTemp);
			} else {
				if(jComboBoxid_formatoRequisicionCompraGenerico!=null && jComboBoxid_formatoRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_formatoRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoCambioForeignKey(Long idTipoCambioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocambioTemp!=null) {

					if(this.requisicioncompra!=null) {
						this.requisicioncompra.setTipoCambio(tipocambioTemp);
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_tipo_cambioRequisicionCompra.setSelectedItem(tipocambioTemp);
					}
				} else {
					//jComboBoxid_tipo_cambioRequisicionCompra.setSelectedItem(tipocambioTemp);
					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_tipo_cambioRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_tipo_cambioRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCambioForeignKeyDescripcion(Long idTipoCambioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}


			sDescripcion=TipoCambioConstantesFunciones.getTipoCambioDescripcion(tipocambioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCambioForeignKeyGenerico(Long idTipoCambioSeleccionado,JComboBox jComboBoxid_tipo_cambioRequisicionCompraGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(tipocambioTemp!=null) {
				jComboBoxid_tipo_cambioRequisicionCompraGenerico.setSelectedItem(tipocambioTemp);
			} else {
				if(jComboBoxid_tipo_cambioRequisicionCompraGenerico!=null && jComboBoxid_tipo_cambioRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_tipo_cambioRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(RequisicionCompra requisicioncompra,JComboBox jComboBoxid_empresaRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaRequisicionCompraGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empresaRequisicionCompra.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaRequisicionCompraGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				requisicioncompra.setid_empresa(empresaAux.getId());
				requisicioncompra.setempresa_descripcion(RequisicionCompraConstantesFunciones.getEmpresaDescripcion(empresaAux));
				requisicioncompra.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(RequisicionCompra requisicioncompra,JComboBox jComboBoxid_sucursalRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalRequisicionCompraGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_sucursalRequisicionCompra.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalRequisicionCompraGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				requisicioncompra.setid_sucursal(sucursalAux.getId());
				requisicioncompra.setsucursal_descripcion(RequisicionCompraConstantesFunciones.getSucursalDescripcion(sucursalAux));
				requisicioncompra.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarModuloForeignKey(RequisicionCompra requisicioncompra,JComboBox jComboBoxid_moduloRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Modulo  moduloAux=new Modulo();

			if(jComboBoxid_moduloRequisicionCompraGenerico==null) {
				moduloAux=(Modulo)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_moduloRequisicionCompra.getSelectedItem();
			} else {
				moduloAux=(Modulo)jComboBoxid_moduloRequisicionCompraGenerico.getSelectedItem();
			}

			if(moduloAux!=null && moduloAux.getId()!=null) {
				requisicioncompra.setid_modulo(moduloAux.getId());
				requisicioncompra.setmodulo_descripcion(RequisicionCompraConstantesFunciones.getModuloDescripcion(moduloAux));
				requisicioncompra.setModulo(moduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(RequisicionCompra requisicioncompra,JComboBox jComboBoxid_ejercicioRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioRequisicionCompraGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioRequisicionCompraGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				requisicioncompra.setid_ejercicio(ejercicioAux.getId());
				requisicioncompra.setejercicio_descripcion(RequisicionCompraConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				requisicioncompra.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(RequisicionCompra requisicioncompra,JComboBox jComboBoxid_periodoRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoRequisicionCompraGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoRequisicionCompraGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				requisicioncompra.setid_periodo(periodoAux.getId());
				requisicioncompra.setperiodo_descripcion(RequisicionCompraConstantesFunciones.getPeriodoDescripcion(periodoAux));
				requisicioncompra.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(RequisicionCompra requisicioncompra,JComboBox jComboBoxid_anioRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioRequisicionCompraGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_anioRequisicionCompra.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioRequisicionCompraGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				requisicioncompra.setid_anio(anioAux.getId());
				requisicioncompra.setanio_descripcion(RequisicionCompraConstantesFunciones.getAnioDescripcion(anioAux));
				requisicioncompra.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(RequisicionCompra requisicioncompra,JComboBox jComboBoxid_mesRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesRequisicionCompraGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_mesRequisicionCompra.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesRequisicionCompraGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				requisicioncompra.setid_mes(mesAux.getId());
				requisicioncompra.setmes_descripcion(RequisicionCompraConstantesFunciones.getMesDescripcion(mesAux));
				requisicioncompra.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(RequisicionCompra requisicioncompra,JComboBox jComboBoxid_clienteRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteRequisicionCompraGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_clienteRequisicionCompra.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteRequisicionCompraGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				requisicioncompra.setid_cliente(clienteAux.getId());
				requisicioncompra.setcliente_descripcion(RequisicionCompraConstantesFunciones.getClienteDescripcion(clienteAux));
				requisicioncompra.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUsuarioForeignKey(RequisicionCompra requisicioncompra,JComboBox jComboBoxid_usuarioRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioAux=new Usuario();

			if(jComboBoxid_usuarioRequisicionCompraGenerico==null) {
				usuarioAux=(Usuario)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_usuarioRequisicionCompra.getSelectedItem();
			} else {
				usuarioAux=(Usuario)jComboBoxid_usuarioRequisicionCompraGenerico.getSelectedItem();
			}

			if(usuarioAux!=null && usuarioAux.getId()!=null) {
				requisicioncompra.setid_usuario(usuarioAux.getId());
				requisicioncompra.setusuario_descripcion(RequisicionCompraConstantesFunciones.getUsuarioDescripcion(usuarioAux));
				requisicioncompra.setUsuario(usuarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(RequisicionCompra requisicioncompra,JComboBox jComboBoxid_monedaRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaRequisicionCompraGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_monedaRequisicionCompra.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaRequisicionCompraGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				requisicioncompra.setid_moneda(monedaAux.getId());
				requisicioncompra.setmoneda_descripcion(RequisicionCompraConstantesFunciones.getMonedaDescripcion(monedaAux));
				requisicioncompra.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoRequisicionCompraForeignKey(RequisicionCompra requisicioncompra,JComboBox jComboBoxid_estado_requisicion_compraRequisicionCompraGenerico)throws Exception
	{
		try
		{
			EstadoRequisicion  estadorequisicionAux=new EstadoRequisicion();

			if(jComboBoxid_estado_requisicion_compraRequisicionCompraGenerico==null) {
				estadorequisicionAux=(EstadoRequisicion)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_estado_requisicion_compraRequisicionCompra.getSelectedItem();
			} else {
				estadorequisicionAux=(EstadoRequisicion)jComboBoxid_estado_requisicion_compraRequisicionCompraGenerico.getSelectedItem();
			}

			if(estadorequisicionAux!=null && estadorequisicionAux.getId()!=null) {
				requisicioncompra.setid_estado_requisicion_compra(estadorequisicionAux.getId());
				requisicioncompra.setestadorequisicioncompra_descripcion(RequisicionCompraConstantesFunciones.getEstadoRequisicionCompraDescripcion(estadorequisicionAux));
				requisicioncompra.setEstadoRequisicionCompra(estadorequisicionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoForeignKey(RequisicionCompra requisicioncompra,JComboBox jComboBoxid_empleadoRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleadoRequisicionCompraGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empleadoRequisicionCompra.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleadoRequisicionCompraGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				requisicioncompra.setid_empleado(empleadoAux.getId());
				requisicioncompra.setempleado_descripcion(RequisicionCompraConstantesFunciones.getEmpleadoDescripcion(empleadoAux));
				requisicioncompra.setEmpleado(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoForeignKey(RequisicionCompra requisicioncompra,JComboBox jComboBoxid_formatoRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formatoRequisicionCompraGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_formatoRequisicionCompra.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formatoRequisicionCompraGenerico.getSelectedItem();
			}

			if(formatoAux!=null) {
				requisicioncompra.setid_formato(formatoAux.getId());
				requisicioncompra.setformato_descripcion(RequisicionCompraConstantesFunciones.getFormatoDescripcion(formatoAux));
				requisicioncompra.setFormato(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCambioForeignKey(RequisicionCompra requisicioncompra,JComboBox jComboBoxid_tipo_cambioRequisicionCompraGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioAux=new TipoCambio();

			if(jComboBoxid_tipo_cambioRequisicionCompraGenerico==null) {
				tipocambioAux=(TipoCambio)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_tipo_cambioRequisicionCompra.getSelectedItem();
			} else {
				tipocambioAux=(TipoCambio)jComboBoxid_tipo_cambioRequisicionCompraGenerico.getSelectedItem();
			}

			if(tipocambioAux!=null) {
				requisicioncompra.setid_tipo_cambio(tipocambioAux.getId());
				requisicioncompra.settipocambio_descripcion(RequisicionCompraConstantesFunciones.getTipoCambioDescripcion(tipocambioAux));
				requisicioncompra.setTipoCambio(tipocambioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empresaRequisicionCompra.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empresaRequisicionCompra.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
					}

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_sucursalRequisicionCompra.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_sucursalRequisicionCompra.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
					}

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_moduloRequisicionCompra.removeAllItems();

							for(Modulo modulo:this.modulosForeignKey) {
								this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_moduloRequisicionCompra.addItem(modulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
					}

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
					}

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
					}

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_anioRequisicionCompra.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_anioRequisicionCompra.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
					}

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_mesRequisicionCompra.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_mesRequisicionCompra.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
					}

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_clienteRequisicionCompra.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_clienteRequisicionCompra.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
					}

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteRequisicionCompra.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteRequisicionCompra.addItem(cliente);
							}
						}

						if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUsuariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUsuario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_usuarioRequisicionCompra.removeAllItems();

							for(Usuario usuario:this.usuariosForeignKey) {
								this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_usuarioRequisicionCompra.addItem(usuario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
					}

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_monedaRequisicionCompra.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_monedaRequisicionCompra.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
					}

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoRequisicionComprasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoRequisicion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_estado_requisicion_compraRequisicionCompra.removeAllItems();

							for(EstadoRequisicion estadorequisicioncompra:this.estadorequisicioncomprasForeignKey) {
								this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_estado_requisicion_compraRequisicionCompra.addItem(estadorequisicioncompra);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
					}

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoRequisicionCompra") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_requisicion_compraFK_IdEstadoRequisicionCompraRequisicionCompra.removeAllItems();

							for(EstadoRequisicion estadorequisicioncompra:this.estadorequisicioncomprasForeignKey) {
								this.jComboBoxid_estado_requisicion_compraFK_IdEstadoRequisicionCompraRequisicionCompra.addItem(estadorequisicioncompra);
							}
						}

						if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empleadoRequisicionCompra.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empleadoRequisicionCompra.addItem(empleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
					}

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoRequisicionCompra.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jComboBoxid_empleadoFK_IdEmpleadoRequisicionCompra.addItem(empleado);
							}
						}

						if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_formatoRequisicionCompra.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_formatoRequisicionCompra.addItem(formato);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
					}

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCambiosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCambio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_tipo_cambioRequisicionCompra.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_tipo_cambioRequisicionCompra.addItem(tipocambio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { 
					}

					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empresaRequisicionCompra.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empresaRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_sucursalRequisicionCompra.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_sucursalRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameModuloForeignKey(Modulo modulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_moduloRequisicionCompra.setSelectedItem(modulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_moduloRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_anioRequisicionCompra.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_anioRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_mesRequisicionCompra.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_mesRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_clienteRequisicionCompra.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_clienteRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteRequisicionCompra.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteRequisicionCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUsuarioForeignKey(Usuario usuario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_usuarioRequisicionCompra.setSelectedItem(usuario);
						}
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_usuarioRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_monedaRequisicionCompra.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_monedaRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoRequisicionCompraForeignKey(EstadoRequisicion estadorequisicioncompra,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_estado_requisicion_compraRequisicionCompra.setSelectedItem(estadorequisicioncompra);
						}
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_estado_requisicion_compraRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_requisicion_compraFK_IdEstadoRequisicionCompraRequisicionCompra.setSelectedItem(estadorequisicioncompra);
						} else {
							this.jComboBoxid_estado_requisicion_compraFK_IdEstadoRequisicionCompraRequisicionCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoForeignKey(Empleado empleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empleadoRequisicionCompra.setSelectedItem(empleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empleadoRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empleadoFK_IdEmpleadoRequisicionCompra.setSelectedItem(empleado);
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoRequisicionCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoForeignKey(Formato formato,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_formatoRequisicionCompra.setSelectedItem(formato);
						}
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_formatoRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoCambioForeignKey(TipoCambio tipocambio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_tipo_cambioRequisicionCompra.setSelectedItem(tipocambio);
						}
					} else {
						if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_tipo_cambioRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesRequisicionCompra() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			RequisicionCompraConstantesFunciones.refrescarForeignKeysDescripcionesRequisicionCompra(this.requisicioncompraLogic.getRequisicionCompras());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			RequisicionCompraConstantesFunciones.refrescarForeignKeysDescripcionesRequisicionCompra(this.requisicioncompras);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Modulo.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(Usuario.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(EstadoRequisicion.class));
		classes.add(new Classe(Empleado.class));
		classes.add(new Classe(Formato.class));
		classes.add(new Classe(TipoCambio.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//requisicioncompraLogic.setRequisicionCompras(this.requisicioncompras);
			requisicioncompraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public RequisicionCompraParameterReturnGeneral getRequisicionCompraParameterGeneral() {
		return this.requisicioncompraParameterGeneral;
	}
	
	public void setRequisicionCompraParameterGeneral(RequisicionCompraParameterReturnGeneral requisicioncompraParameterGeneral) {
		this.requisicioncompraParameterGeneral = requisicioncompraParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoRequisicionCompra() {
		return isPermisoTodoRequisicionCompra;
	}

	public void setIsPermisoTodoRequisicionCompra(Boolean isPermisoTodoRequisicionCompra) {
		this.isPermisoTodoRequisicionCompra = isPermisoTodoRequisicionCompra;
	}

	public Boolean getIsPermisoNuevoRequisicionCompra() {
		return isPermisoNuevoRequisicionCompra;
	}

	public void setIsPermisoNuevoRequisicionCompra(Boolean isPermisoNuevoRequisicionCompra) {
		this.isPermisoNuevoRequisicionCompra = isPermisoNuevoRequisicionCompra;
	}

	public Boolean getIsPermisoActualizarRequisicionCompra() {
		return isPermisoActualizarRequisicionCompra;
	}

	public void setIsPermisoActualizarRequisicionCompra(Boolean isPermisoActualizarRequisicionCompra) {
		this.isPermisoActualizarRequisicionCompra = isPermisoActualizarRequisicionCompra;
	}

	public Boolean getIsPermisoEliminarRequisicionCompra() {
		return isPermisoEliminarRequisicionCompra;
	}

	public void setIsPermisoEliminarRequisicionCompra(Boolean isPermisoEliminarRequisicionCompra) {
		this.isPermisoEliminarRequisicionCompra = isPermisoEliminarRequisicionCompra;
	}

	public Boolean getIsPermisoGuardarCambiosRequisicionCompra() {
		return isPermisoGuardarCambiosRequisicionCompra;
	}

	public void setIsPermisoGuardarCambiosRequisicionCompra(Boolean isPermisoGuardarCambiosRequisicionCompra) {
		this.isPermisoGuardarCambiosRequisicionCompra = isPermisoGuardarCambiosRequisicionCompra;
	}
	
	public Boolean getIsPermisoConsultaRequisicionCompra() {
		return isPermisoConsultaRequisicionCompra;
	}

	public void setIsPermisoConsultaRequisicionCompra(Boolean isPermisoConsultaRequisicionCompra) {
		this.isPermisoConsultaRequisicionCompra = isPermisoConsultaRequisicionCompra;
	}

	public Boolean getIsPermisoBusquedaRequisicionCompra() {
		return isPermisoBusquedaRequisicionCompra;
	}

	public void setIsPermisoBusquedaRequisicionCompra(Boolean isPermisoBusquedaRequisicionCompra) {
		this.isPermisoBusquedaRequisicionCompra = isPermisoBusquedaRequisicionCompra;
	}

	public Boolean getIsPermisoReporteRequisicionCompra() {
		return isPermisoReporteRequisicionCompra;
	}

	public void setIsPermisoReporteRequisicionCompra(Boolean isPermisoReporteRequisicionCompra) {
		this.isPermisoReporteRequisicionCompra = isPermisoReporteRequisicionCompra;
	}
	
	public Boolean getIsPermisoPaginacionMedioRequisicionCompra() {
		return isPermisoPaginacionMedioRequisicionCompra;
	}

	public void setIsPermisoPaginacionMedioRequisicionCompra(Boolean isPermisoPaginacionMedioRequisicionCompra) {
		this.isPermisoPaginacionMedioRequisicionCompra = isPermisoPaginacionMedioRequisicionCompra;
	}
	
	public Boolean getIsPermisoPaginacionTodoRequisicionCompra() {
		return isPermisoPaginacionTodoRequisicionCompra;
	}

	public void setIsPermisoPaginacionTodoRequisicionCompra(Boolean isPermisoPaginacionTodoRequisicionCompra) {
		this.isPermisoPaginacionTodoRequisicionCompra = isPermisoPaginacionTodoRequisicionCompra;
	}
	
	public Boolean getIsPermisoPaginacionAltoRequisicionCompra() {
		return isPermisoPaginacionAltoRequisicionCompra;
	}

	public void setIsPermisoPaginacionAltoRequisicionCompra(Boolean isPermisoPaginacionAltoRequisicionCompra) {
		this.isPermisoPaginacionAltoRequisicionCompra = isPermisoPaginacionAltoRequisicionCompra;
	}
	
	public Boolean getIsPermisoCopiarRequisicionCompra() {
		return isPermisoCopiarRequisicionCompra;
	}

	public void setIsPermisoCopiarRequisicionCompra(Boolean isPermisoCopiarRequisicionCompra) {
		this.isPermisoCopiarRequisicionCompra = isPermisoCopiarRequisicionCompra;
	}
	
	public Boolean getIsPermisoVerFormRequisicionCompra() {
		return isPermisoVerFormRequisicionCompra;
	}

	public void setIsPermisoVerFormRequisicionCompra(Boolean isPermisoVerFormRequisicionCompra) {
		this.isPermisoVerFormRequisicionCompra = isPermisoVerFormRequisicionCompra;
	}
	
	public Boolean getIsPermisoDuplicarRequisicionCompra() {
		return isPermisoDuplicarRequisicionCompra;
	}

	public void setIsPermisoDuplicarRequisicionCompra(Boolean isPermisoDuplicarRequisicionCompra) {
		this.isPermisoDuplicarRequisicionCompra = isPermisoDuplicarRequisicionCompra;
	}
	
	public Boolean getIsPermisoOrdenRequisicionCompra() {
		return isPermisoOrdenRequisicionCompra;
	}

	public void setIsPermisoOrdenRequisicionCompra(Boolean isPermisoOrdenRequisicionCompra) {
		this.isPermisoOrdenRequisicionCompra = isPermisoOrdenRequisicionCompra;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRequisicionCompra() {
		return isVisibilidadCeldaNuevoRequisicionCompra;
	}

	public void setIsVisibilidadCeldaNuevoRequisicionCompra(Boolean isVisibilidadCeldaNuevoRequisicionCompra) {
		this.isVisibilidadCeldaNuevoRequisicionCompra = isVisibilidadCeldaNuevoRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarRequisicionCompra() {
		return isVisibilidadCeldaDuplicarRequisicionCompra;
	}

	public void setIsVisibilidadCeldaDuplicarRequisicionCompra(Boolean isVisibilidadCeldaDuplicarRequisicionCompra) {
		this.isVisibilidadCeldaDuplicarRequisicionCompra = isVisibilidadCeldaDuplicarRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarRequisicionCompra() {
		return isVisibilidadCeldaCopiarRequisicionCompra;
	}

	public void setIsVisibilidadCeldaCopiarRequisicionCompra(Boolean isVisibilidadCeldaCopiarRequisicionCompra) {
		this.isVisibilidadCeldaCopiarRequisicionCompra = isVisibilidadCeldaCopiarRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormRequisicionCompra() {
		return isVisibilidadCeldaVerFormRequisicionCompra;
	}

	public void setIsVisibilidadCeldaVerFormRequisicionCompra(Boolean isVisibilidadCeldaVerFormRequisicionCompra) {
		this.isVisibilidadCeldaVerFormRequisicionCompra = isVisibilidadCeldaVerFormRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenRequisicionCompra() {
		return isVisibilidadCeldaOrdenRequisicionCompra;
	}

	public void setIsVisibilidadCeldaOrdenRequisicionCompra(Boolean isVisibilidadCeldaOrdenRequisicionCompra) {
		this.isVisibilidadCeldaOrdenRequisicionCompra = isVisibilidadCeldaOrdenRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesRequisicionCompra() {
		return isVisibilidadCeldaNuevoRelacionesRequisicionCompra;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesRequisicionCompra(Boolean isVisibilidadCeldaNuevoRelacionesRequisicionCompra) {
		this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra = isVisibilidadCeldaNuevoRelacionesRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaModificarRequisicionCompra() {
		return isVisibilidadCeldaModificarRequisicionCompra;
	}

	public void setIsVisibilidadCeldaModificarRequisicionCompra(Boolean isVisibilidadCeldaModificarRequisicionCompra) {
		this.isVisibilidadCeldaModificarRequisicionCompra = isVisibilidadCeldaModificarRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarRequisicionCompra() {
		return isVisibilidadCeldaActualizarRequisicionCompra;
	}

	public void setIsVisibilidadCeldaActualizarRequisicionCompra(Boolean isVisibilidadCeldaActualizarRequisicionCompra) {
		this.isVisibilidadCeldaActualizarRequisicionCompra = isVisibilidadCeldaActualizarRequisicionCompra;
	}

	public Boolean getIsVisibilidadCeldaEliminarRequisicionCompra() {
		return isVisibilidadCeldaEliminarRequisicionCompra;
	}

	public void setIsVisibilidadCeldaEliminarRequisicionCompra(Boolean isVisibilidadCeldaEliminarRequisicionCompra) {
		this.isVisibilidadCeldaEliminarRequisicionCompra = isVisibilidadCeldaEliminarRequisicionCompra;
	}

	public Boolean getIsVisibilidadCeldaCancelarRequisicionCompra() {
		return isVisibilidadCeldaCancelarRequisicionCompra;
	}

	public void setIsVisibilidadCeldaCancelarRequisicionCompra(Boolean isVisibilidadCeldaCancelarRequisicionCompra) {
		this.isVisibilidadCeldaCancelarRequisicionCompra = isVisibilidadCeldaCancelarRequisicionCompra;
	}

	public Boolean getIsVisibilidadCeldaGuardarRequisicionCompra() {
		return isVisibilidadCeldaGuardarRequisicionCompra;
	}

	public void setIsVisibilidadCeldaGuardarRequisicionCompra(Boolean isVisibilidadCeldaGuardarRequisicionCompra) {
		this.isVisibilidadCeldaGuardarRequisicionCompra = isVisibilidadCeldaGuardarRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosRequisicionCompra() {
		return isVisibilidadCeldaGuardarCambiosRequisicionCompra;
	}

	public void setIsVisibilidadCeldaGuardarCambiosRequisicionCompra(Boolean isVisibilidadCeldaGuardarCambiosRequisicionCompra) {
		this.isVisibilidadCeldaGuardarCambiosRequisicionCompra = isVisibilidadCeldaGuardarCambiosRequisicionCompra;
	}
		
	public RequisicionCompraSessionBean getrequisicioncompraSessionBean() {
		return this.requisicioncompraSessionBean;
	}
	
	public void setrequisicioncompraSessionBean(RequisicionCompraSessionBean requisicioncompraSessionBean) {
		this.requisicioncompraSessionBean=requisicioncompraSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpleado() {
		return this.isVisibilidadFK_IdEmpleado;
	}

	public void setisVisibilidadFK_IdEmpleado(Boolean isVisibilidadFK_IdEmpleado) {
		this.isVisibilidadFK_IdEmpleado=isVisibilidadFK_IdEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoRequisicionCompra() {
		return this.isVisibilidadFK_IdEstadoRequisicionCompra;
	}

	public void setisVisibilidadFK_IdEstadoRequisicionCompra(Boolean isVisibilidadFK_IdEstadoRequisicionCompra) {
		this.isVisibilidadFK_IdEstadoRequisicionCompra=isVisibilidadFK_IdEstadoRequisicionCompra;
	}

	public Boolean getisVisibilidadFK_IdFormato() {
		return this.isVisibilidadFK_IdFormato;
	}

	public void setisVisibilidadFK_IdFormato(Boolean isVisibilidadFK_IdFormato) {
		this.isVisibilidadFK_IdFormato=isVisibilidadFK_IdFormato;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdModulo() {
		return this.isVisibilidadFK_IdModulo;
	}

	public void setisVisibilidadFK_IdModulo(Boolean isVisibilidadFK_IdModulo) {
		this.isVisibilidadFK_IdModulo=isVisibilidadFK_IdModulo;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoCambio() {
		return this.isVisibilidadFK_IdTipoCambio;
	}

	public void setisVisibilidadFK_IdTipoCambio(Boolean isVisibilidadFK_IdTipoCambio) {
		this.isVisibilidadFK_IdTipoCambio=isVisibilidadFK_IdTipoCambio;
	}

	public Boolean getisVisibilidadFK_IdUsuario() {
		return this.isVisibilidadFK_IdUsuario;
	}

	public void setisVisibilidadFK_IdUsuario(Boolean isVisibilidadFK_IdUsuario) {
		this.isVisibilidadFK_IdUsuario=isVisibilidadFK_IdUsuario;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(RequisicionCompra requisicioncompra)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(requisicioncompra,null);
				this.setActualParaGuardarSucursalForeignKey(requisicioncompra,null);
				this.setActualParaGuardarModuloForeignKey(requisicioncompra,null);
				this.setActualParaGuardarEjercicioForeignKey(requisicioncompra,null);
				this.setActualParaGuardarPeriodoForeignKey(requisicioncompra,null);
				this.setActualParaGuardarAnioForeignKey(requisicioncompra,null);
				this.setActualParaGuardarMesForeignKey(requisicioncompra,null);
				this.setActualParaGuardarClienteForeignKey(requisicioncompra,null);
				this.setActualParaGuardarUsuarioForeignKey(requisicioncompra,null);
				this.setActualParaGuardarMonedaForeignKey(requisicioncompra,null);
				this.setActualParaGuardarEstadoRequisicionCompraForeignKey(requisicioncompra,null);
				this.setActualParaGuardarEmpleadoForeignKey(requisicioncompra,null);
				this.setActualParaGuardarFormatoForeignKey(requisicioncompra,null);
				this.setActualParaGuardarTipoCambioForeignKey(requisicioncompra,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(RequisicionCompra requisicioncompra,RequisicionCompra requisicioncompraAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalRequisicionCompra(requisicioncompra);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		requisicioncompraAux.setId(requisicioncompra.getId());
		requisicioncompraAux.setVersionRow(requisicioncompra.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessRequisicionCompra();
		
			int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = requisicioncompraValidator.getInvalidValues(this.requisicioncompra);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			requisicioncompraLogic.setDatosCliente(datosCliente);
			requisicioncompraLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				requisicioncompraAux=new  RequisicionCompra();
				
				requisicioncompraAux.setIsNew(true);
				requisicioncompraAux.setIsChanged(true);
				
				requisicioncompraAux.setRequisicionCompraOriginal(this.requisicioncompra);
				
				requisicioncompraAux.setId(this.requisicioncompra.getId());	
				requisicioncompraAux.setVersionRow(this.requisicioncompra.getVersionRow());	
				requisicioncompraAux.setid_empresa(this.requisicioncompra.getid_empresa());	
				requisicioncompraAux.setid_sucursal(this.requisicioncompra.getid_sucursal());	
				requisicioncompraAux.setid_modulo(this.requisicioncompra.getid_modulo());	
				requisicioncompraAux.setid_ejercicio(this.requisicioncompra.getid_ejercicio());	
				requisicioncompraAux.setid_periodo(this.requisicioncompra.getid_periodo());	
				requisicioncompraAux.setid_anio(this.requisicioncompra.getid_anio());	
				requisicioncompraAux.setid_mes(this.requisicioncompra.getid_mes());	
				requisicioncompraAux.setnumero_secuencial(this.requisicioncompra.getnumero_secuencial());	
				requisicioncompraAux.setid_cliente(this.requisicioncompra.getid_cliente());	
				requisicioncompraAux.setid_usuario(this.requisicioncompra.getid_usuario());	
				requisicioncompraAux.setid_moneda(this.requisicioncompra.getid_moneda());	
				requisicioncompraAux.setid_estado_requisicion_compra(this.requisicioncompra.getid_estado_requisicion_compra());	
				requisicioncompraAux.settotal(this.requisicioncompra.gettotal());	
				requisicioncompraAux.setfecha(this.requisicioncompra.getfecha());	
				requisicioncompraAux.setid_empleado(this.requisicioncompra.getid_empleado());	
				requisicioncompraAux.setresponsable(this.requisicioncompra.getresponsable());	
				requisicioncompraAux.setsolicitado_por(this.requisicioncompra.getsolicitado_por());	
				requisicioncompraAux.setmotivo_solicitud(this.requisicioncompra.getmotivo_solicitud());	
				requisicioncompraAux.setarea_solicitud(this.requisicioncompra.getarea_solicitud());	
				requisicioncompraAux.setpara_uso_de(this.requisicioncompra.getpara_uso_de());	
				requisicioncompraAux.setlugar_entrega(this.requisicioncompra.getlugar_entrega());	
				requisicioncompraAux.setdescripcion(this.requisicioncompra.getdescripcion());	
				requisicioncompraAux.setfecha_emision(this.requisicioncompra.getfecha_emision());	
				requisicioncompraAux.setfecha_entrega(this.requisicioncompra.getfecha_entrega());	
				
				if(this.requisicioncompra.getid_formato()!=null && this.requisicioncompra.getid_formato()>0L) {
					requisicioncompraAux.setid_formato(this.requisicioncompra.getid_formato());
				} else {
					requisicioncompraAux.setid_formato(null);
				}	
				
				if(this.requisicioncompra.getid_tipo_cambio()!=null && this.requisicioncompra.getid_tipo_cambio()>0L) {
					requisicioncompraAux.setid_tipo_cambio(this.requisicioncompra.getid_tipo_cambio());
				} else {
					requisicioncompraAux.setid_tipo_cambio(null);
				}	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.requisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.requisicioncompraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(requisicioncompraAux,requisicioncompraLogic.getRequisicionCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(requisicioncompraAux,requisicioncompras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.requisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.requisicioncompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncompraLogic.saveRequisicionCompras();//WithConnection
						//requisicioncompraLogic.getSetVersionRowRequisicionCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.requisicioncompra,requisicioncompraAux);
					
					this.refrescarForeignKeysDescripcionesRequisicionCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.requisicioncompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.getDetalleRequisicionCompras().addAll(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncomprasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompras.addAll(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncomprasEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								requisicioncompraLogic.saveRequisicionCompraRelaciones(requisicioncompraAux,this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.getDetalleRequisicionCompras());//WithConnection
								//requisicioncompraLogic.getSetVersionRowRequisicionCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.requisicioncompra,requisicioncompraAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.setDetalleRequisicionCompras(new ArrayList<DetalleRequisicionCompra>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompras= new ArrayList<DetalleRequisicionCompra>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.quitarFilaTotales();}
							requisicioncompraAux.setDetalleRequisicionCompras(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.getDetalleRequisicionCompras());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.requisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.requisicioncompraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(requisicioncompraAux,requisicioncompraLogic.getRequisicionCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(requisicioncompraAux,requisicioncompras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.requisicioncompra,requisicioncompraAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				requisicioncompraAux=new  RequisicionCompra();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado() 
					|| (this.requisicioncompraSessionBean.getEsGuardarRelacionado() && this.requisicioncompra.getId()>=0)) {
						
					requisicioncompraAux.setIsNew(false);
				}
				
				requisicioncompraAux.setIsDeleted(false);
			
				requisicioncompraAux.setId(this.requisicioncompra.getId());	
				requisicioncompraAux.setVersionRow(this.requisicioncompra.getVersionRow());	
				requisicioncompraAux.setid_empresa(this.requisicioncompra.getid_empresa());	
				requisicioncompraAux.setid_sucursal(this.requisicioncompra.getid_sucursal());	
				requisicioncompraAux.setid_modulo(this.requisicioncompra.getid_modulo());	
				requisicioncompraAux.setid_ejercicio(this.requisicioncompra.getid_ejercicio());	
				requisicioncompraAux.setid_periodo(this.requisicioncompra.getid_periodo());	
				requisicioncompraAux.setid_anio(this.requisicioncompra.getid_anio());	
				requisicioncompraAux.setid_mes(this.requisicioncompra.getid_mes());	
				requisicioncompraAux.setnumero_secuencial(this.requisicioncompra.getnumero_secuencial());	
				requisicioncompraAux.setid_cliente(this.requisicioncompra.getid_cliente());	
				requisicioncompraAux.setid_usuario(this.requisicioncompra.getid_usuario());	
				requisicioncompraAux.setid_moneda(this.requisicioncompra.getid_moneda());	
				requisicioncompraAux.setid_estado_requisicion_compra(this.requisicioncompra.getid_estado_requisicion_compra());	
				requisicioncompraAux.settotal(this.requisicioncompra.gettotal());	
				requisicioncompraAux.setfecha(this.requisicioncompra.getfecha());	
				requisicioncompraAux.setid_empleado(this.requisicioncompra.getid_empleado());	
				requisicioncompraAux.setresponsable(this.requisicioncompra.getresponsable());	
				requisicioncompraAux.setsolicitado_por(this.requisicioncompra.getsolicitado_por());	
				requisicioncompraAux.setmotivo_solicitud(this.requisicioncompra.getmotivo_solicitud());	
				requisicioncompraAux.setarea_solicitud(this.requisicioncompra.getarea_solicitud());	
				requisicioncompraAux.setpara_uso_de(this.requisicioncompra.getpara_uso_de());	
				requisicioncompraAux.setlugar_entrega(this.requisicioncompra.getlugar_entrega());	
				requisicioncompraAux.setdescripcion(this.requisicioncompra.getdescripcion());	
				requisicioncompraAux.setfecha_emision(this.requisicioncompra.getfecha_emision());	
				requisicioncompraAux.setfecha_entrega(this.requisicioncompra.getfecha_entrega());	
				
				if(this.requisicioncompra.getid_formato()!=null && this.requisicioncompra.getid_formato()>0L) {
					requisicioncompraAux.setid_formato(this.requisicioncompra.getid_formato());
				} else {
					requisicioncompraAux.setid_formato(null);
				}	
				
				if(this.requisicioncompra.getid_tipo_cambio()!=null && this.requisicioncompra.getid_tipo_cambio()>0L) {
					requisicioncompraAux.setid_tipo_cambio(this.requisicioncompra.getid_tipo_cambio());
				} else {
					requisicioncompraAux.setid_tipo_cambio(null);
				}	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(requisicioncompraAux,requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(requisicioncompraAux,requisicioncompras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.requisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.requisicioncompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncompraLogic.saveRequisicionCompras();//WithConnection
						//requisicioncompraLogic.getSetVersionRowRequisicionCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.requisicioncompra,requisicioncompraAux);
					
					this.refrescarForeignKeysDescripcionesRequisicionCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.requisicioncompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.getDetalleRequisicionCompras().addAll(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncomprasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompras.addAll(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncomprasEliminados);
						}
						//ARCHITECTURE
						
						if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								requisicioncompraLogic.saveRequisicionCompraRelaciones(requisicioncompraAux,this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.getDetalleRequisicionCompras());//WithConnection
								//requisicioncompraLogic.getSetVersionRowRequisicionCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.requisicioncompra,requisicioncompraAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.setDetalleRequisicionCompras(new ArrayList<DetalleRequisicionCompra>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompras= new ArrayList<DetalleRequisicionCompra>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.quitarFilaTotales();}
							requisicioncompraAux.setDetalleRequisicionCompras(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.getDetalleRequisicionCompras());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.requisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.requisicioncompraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(requisicioncompraAux,requisicioncompraLogic.getRequisicionCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(requisicioncompraAux,requisicioncompras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.requisicioncompra,requisicioncompraAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				requisicioncompraAux=new  RequisicionCompra();
				
				requisicioncompraAux.setIsNew(false);
				requisicioncompraAux.setIsChanged(false);
				
				requisicioncompraAux.setIsDeleted(true);
				
				requisicioncompraAux.setId(this.requisicioncompra.getId());	
				requisicioncompraAux.setVersionRow(this.requisicioncompra.getVersionRow());	
				requisicioncompraAux.setid_empresa(this.requisicioncompra.getid_empresa());	
				requisicioncompraAux.setid_sucursal(this.requisicioncompra.getid_sucursal());	
				requisicioncompraAux.setid_modulo(this.requisicioncompra.getid_modulo());	
				requisicioncompraAux.setid_ejercicio(this.requisicioncompra.getid_ejercicio());	
				requisicioncompraAux.setid_periodo(this.requisicioncompra.getid_periodo());	
				requisicioncompraAux.setid_anio(this.requisicioncompra.getid_anio());	
				requisicioncompraAux.setid_mes(this.requisicioncompra.getid_mes());	
				requisicioncompraAux.setnumero_secuencial(this.requisicioncompra.getnumero_secuencial());	
				requisicioncompraAux.setid_cliente(this.requisicioncompra.getid_cliente());	
				requisicioncompraAux.setid_usuario(this.requisicioncompra.getid_usuario());	
				requisicioncompraAux.setid_moneda(this.requisicioncompra.getid_moneda());	
				requisicioncompraAux.setid_estado_requisicion_compra(this.requisicioncompra.getid_estado_requisicion_compra());	
				requisicioncompraAux.settotal(this.requisicioncompra.gettotal());	
				requisicioncompraAux.setfecha(this.requisicioncompra.getfecha());	
				requisicioncompraAux.setid_empleado(this.requisicioncompra.getid_empleado());	
				requisicioncompraAux.setresponsable(this.requisicioncompra.getresponsable());	
				requisicioncompraAux.setsolicitado_por(this.requisicioncompra.getsolicitado_por());	
				requisicioncompraAux.setmotivo_solicitud(this.requisicioncompra.getmotivo_solicitud());	
				requisicioncompraAux.setarea_solicitud(this.requisicioncompra.getarea_solicitud());	
				requisicioncompraAux.setpara_uso_de(this.requisicioncompra.getpara_uso_de());	
				requisicioncompraAux.setlugar_entrega(this.requisicioncompra.getlugar_entrega());	
				requisicioncompraAux.setdescripcion(this.requisicioncompra.getdescripcion());	
				requisicioncompraAux.setfecha_emision(this.requisicioncompra.getfecha_emision());	
				requisicioncompraAux.setfecha_entrega(this.requisicioncompra.getfecha_entrega());	
				
				if(this.requisicioncompra.getid_formato()!=null && this.requisicioncompra.getid_formato()>0L) {
					requisicioncompraAux.setid_formato(this.requisicioncompra.getid_formato());
				} else {
					requisicioncompraAux.setid_formato(null);
				}	
				
				if(this.requisicioncompra.getid_tipo_cambio()!=null && this.requisicioncompra.getid_tipo_cambio()>0L) {
					requisicioncompraAux.setid_tipo_cambio(this.requisicioncompra.getid_tipo_cambio());
				} else {
					requisicioncompraAux.setid_tipo_cambio(null);
				}	
				
				if(this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.requisicioncompraAux.getId()>=0) {	
						this.requisicioncomprasEliminados.add(requisicioncompraAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(requisicioncompraAux,requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(requisicioncompraAux,requisicioncompras);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.requisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.requisicioncompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncompraLogic.saveRequisicionCompras();//WithConnection
						//requisicioncompraLogic.getSetVersionRowRequisicionCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.requisicioncompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.getDetalleRequisicionCompras().addAll(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncomprasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompras.addAll(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncomprasEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								requisicioncompraLogic.saveRequisicionCompraRelaciones(requisicioncompraAux,this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.getDetalleRequisicionCompras());//WithConnection
								//requisicioncompraLogic.getSetVersionRowRequisicionCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.setDetalleRequisicionCompras(new ArrayList<DetalleRequisicionCompra>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompras= new ArrayList<DetalleRequisicionCompra>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.quitarFilaTotales();}
							requisicioncompraAux.setDetalleRequisicionCompras(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.getDetalleRequisicionCompras());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.requisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
								|| this.requisicioncompraSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(requisicioncompraAux,requisicioncompraLogic.getRequisicionCompras());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(requisicioncompraAux,requisicioncompras);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getRequisicionCompras().addAll(this.requisicioncomprasEliminados);
					
					requisicioncompraLogic.saveRequisicionCompras();//WithConnection
					//requisicioncompraLogic.getSetVersionRowRequisicionCompras();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesRequisicionCompra();
				
				this.requisicioncomprasEliminados= new ArrayList<RequisicionCompra>();		
			}
			
			if(this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Requisicion Compra GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.requisicioncompra=requisicioncompraAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessRequisicionCompra();
      	}
		
	}	
	
	public void actualizarRelaciones(RequisicionCompra requisicioncompraLocal) throws Exception {
		
		if(this.requisicioncompraSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				requisicioncompraLocal.setDetalleRequisicionCompras(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.getDetalleRequisicionCompras());
			
			} else {
			
				requisicioncompraLocal.setDetalleRequisicionCompras(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompras);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(RequisicionCompra requisicioncompraLocal) throws Exception {	
		if(this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				requisicioncompraLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				requisicioncompraLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ModuloDetalleFormJInternalFrame.class)) {
				ModuloBeanSwingJInternalFrame moduloBeanSwingJInternalFrameLocal=(ModuloBeanSwingJInternalFrame) ((ModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				moduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoModulo(moduloBeanSwingJInternalFrameLocal.getmodulo(),true);
				moduloBeanSwingJInternalFrameLocal.actualizarLista(moduloBeanSwingJInternalFrameLocal.modulo,this.modulosForeignKey);

				moduloBeanSwingJInternalFrameLocal.actualizarRelaciones(moduloBeanSwingJInternalFrameLocal.modulo);

				requisicioncompraLocal.setModulo(moduloBeanSwingJInternalFrameLocal.modulo);

				this.addItemDefectoCombosForeignKeyModulo();
				this.cargarCombosFrameModulosForeignKey("Formulario");
				this.setActualModuloForeignKey(moduloBeanSwingJInternalFrameLocal.modulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				requisicioncompraLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				requisicioncompraLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				requisicioncompraLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				requisicioncompraLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				requisicioncompraLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UsuarioDetalleFormJInternalFrame.class)) {
				UsuarioBeanSwingJInternalFrame usuarioBeanSwingJInternalFrameLocal=(UsuarioBeanSwingJInternalFrame) ((UsuarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				usuarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUsuario(usuarioBeanSwingJInternalFrameLocal.getusuario(),true);
				usuarioBeanSwingJInternalFrameLocal.actualizarLista(usuarioBeanSwingJInternalFrameLocal.usuario,this.usuariosForeignKey);

				usuarioBeanSwingJInternalFrameLocal.actualizarRelaciones(usuarioBeanSwingJInternalFrameLocal.usuario);

				requisicioncompraLocal.setUsuario(usuarioBeanSwingJInternalFrameLocal.usuario);

				this.addItemDefectoCombosForeignKeyUsuario();
				this.cargarCombosFrameUsuariosForeignKey("Formulario");
				this.setActualUsuarioForeignKey(usuarioBeanSwingJInternalFrameLocal.usuario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				requisicioncompraLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoRequisicionDetalleFormJInternalFrame.class)) {
				EstadoRequisicionBeanSwingJInternalFrame estadorequisicioncompraBeanSwingJInternalFrameLocal=(EstadoRequisicionBeanSwingJInternalFrame) ((EstadoRequisicionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadorequisicioncompraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoRequisicion(estadorequisicioncompraBeanSwingJInternalFrameLocal.getestadorequisicion(),true);
				estadorequisicioncompraBeanSwingJInternalFrameLocal.actualizarLista(estadorequisicioncompraBeanSwingJInternalFrameLocal.estadorequisicion,this.estadorequisicioncomprasForeignKey);

				estadorequisicioncompraBeanSwingJInternalFrameLocal.actualizarRelaciones(estadorequisicioncompraBeanSwingJInternalFrameLocal.estadorequisicion);

				requisicioncompraLocal.setEstadoRequisicionCompra(estadorequisicioncompraBeanSwingJInternalFrameLocal.estadorequisicion);

				this.addItemDefectoCombosForeignKeyEstadoRequisicionCompra();
				this.cargarCombosFrameEstadoRequisicionComprasForeignKey("Formulario");
				this.setActualEstadoRequisicionCompraForeignKey(estadorequisicioncompraBeanSwingJInternalFrameLocal.estadorequisicion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoBeanSwingJInternalFrameLocal.actualizarLista(empleadoBeanSwingJInternalFrameLocal.empleado,this.empleadosForeignKey);

				empleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoBeanSwingJInternalFrameLocal.empleado);

				requisicioncompraLocal.setEmpleado(empleadoBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey("Formulario");
				this.setActualEmpleadoForeignKey(empleadoBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatoBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatoBeanSwingJInternalFrameLocal.getformato(),true);
				formatoBeanSwingJInternalFrameLocal.actualizarLista(formatoBeanSwingJInternalFrameLocal.formato,this.formatosForeignKey);

				formatoBeanSwingJInternalFrameLocal.actualizarRelaciones(formatoBeanSwingJInternalFrameLocal.formato);

				requisicioncompraLocal.setFormato(formatoBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey("Formulario");
				this.setActualFormatoForeignKey(formatoBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoCambioDetalleFormJInternalFrame.class)) {
				TipoCambioBeanSwingJInternalFrame tipocambioBeanSwingJInternalFrameLocal=(TipoCambioBeanSwingJInternalFrame) ((TipoCambioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocambioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCambio(tipocambioBeanSwingJInternalFrameLocal.gettipocambio(),true);
				tipocambioBeanSwingJInternalFrameLocal.actualizarLista(tipocambioBeanSwingJInternalFrameLocal.tipocambio,this.tipocambiosForeignKey);

				tipocambioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				requisicioncompraLocal.setTipoCambio(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey("Formulario");
				this.setActualTipoCambioForeignKey(tipocambioBeanSwingJInternalFrameLocal.tipocambio.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarRequisicionCompraActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = requisicioncompraValidator.getInvalidValues(this.requisicioncompra);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(RequisicionCompra requisicioncompra,List<RequisicionCompra> requisicioncompras) throws Exception {
		try	{		
			RequisicionCompraConstantesFunciones.actualizarLista(requisicioncompra,requisicioncompras,this.requisicioncompraSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(RequisicionCompra requisicioncompra,List<RequisicionCompra> requisicioncompras) throws Exception {
		try	{			
			RequisicionCompraConstantesFunciones.actualizarSelectedLista(requisicioncompra,requisicioncompras);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<RequisicionCompra> requisicioncomprasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				requisicioncomprasLocal=this.requisicioncompraLogic.getRequisicionCompras();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				requisicioncomprasLocal=this.requisicioncompras;
			}
			//ARCHITECTURE
		
			for(RequisicionCompra requisicioncompraLocal:requisicioncomprasLocal) {
				if(this.permiteMantenimiento(requisicioncompraLocal) && requisicioncompraLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+RequisicionCompraConstantesFunciones.getRequisicionCompraLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_empresaRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_sucursalRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.IDMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_moduloRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_ejercicioRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_periodoRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_anioRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_mesRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.NUMEROSECUENCIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelnumero_secuencialRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_clienteRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.IDUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_usuarioRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_monedaRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.IDESTADOREQUISICIONCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_estado_requisicion_compraRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabeltotalRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelfechaRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.IDEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_empleadoRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.RESPONSABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelresponsableRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.SOLICITADOPOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelsolicitado_porRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.MOTIVOSOLICITUD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelmotivo_solicitudRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.AREASOLICITUD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelarea_solicitudRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.PARAUSODE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelpara_uso_deRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.LUGARENTREGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabellugar_entregaRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabeldescripcionRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelfecha_emisionRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.FECHAENTREGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelfecha_entregaRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.IDFORMATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_formatoRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RequisicionCompraConstantesFunciones.IDTIPOCAMBIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_tipo_cambioRequisicionCompra,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_empresaRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_sucursalRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_moduloRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_ejercicioRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_periodoRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_anioRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_mesRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelnumero_secuencialRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_clienteRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_usuarioRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_monedaRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_estado_requisicion_compraRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabeltotalRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelfechaRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_empleadoRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelresponsableRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelsolicitado_porRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelmotivo_solicitudRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelarea_solicitudRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelpara_uso_deRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabellugar_entregaRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabeldescripcionRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelfecha_emisionRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelfecha_entregaRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_formatoRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRequisicionCompra.jLabelid_tipo_cambioRequisicionCompra,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("DetalleRequisicionCompra")) {
			if(this.requisicioncompra==null) {
				this.requisicioncompra= new RequisicionCompra();
			}

			if(this.requisicioncompraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoRequisicionCompra
				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);

				this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.getdetallerequisicioncompra().setRequisicionCompra(this.requisicioncompra);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoRequisicionCompra--;	
		
		
		this.requisicioncompraAux=new RequisicionCompra();
		
		this.requisicioncompraAux.setId(this.iIdNuevoRequisicionCompra);
		this.requisicioncompraAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.requisicioncompraLogic.getRequisicionCompras().add(this.requisicioncompraAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.requisicioncompras.add(this.requisicioncompraAux);
		}
		//ARCHITECTURE
		
		this.requisicioncompra=this.requisicioncompraAux;
		
		if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioRequisicionCompra(this.requisicioncompra);
			this.setVariablesObjetoActualToFormularioForeignKeyRequisicionCompra(this.requisicioncompra);
		}
				
		//this.setDefaultControlesRequisicionCompra();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyRequisicionCompra();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyRequisicionCompra();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyRequisicionCompra();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualRequisicionCompra(this.requisicioncompraBean,this.requisicioncompra,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(RequisicionCompraConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.requisicioncompraSessionBean.getConGuardarRelaciones()) {
			classes=RequisicionCompraConstantesFunciones.getClassesRelationshipsOfRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.requisicioncompraReturnGeneral=requisicioncompraLogic.procesarEventosRequisicionComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.requisicioncompraLogic.getRequisicionCompras(),this.requisicioncompra,this.requisicioncompraParameterGeneral,this.isEsNuevoRequisicionCompra,classes);//this.requisicioncompraLogic.getRequisicionCompra()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanRequisicionCompra(this.requisicioncompraReturnGeneral,this.requisicioncompraBean,false);
		
		if(this.requisicioncompraReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyRequisicionCompra(this.requisicioncompraReturnGeneral.getRequisicionCompra());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioRequisicionCompra(this.requisicioncompraReturnGeneral.getRequisicionCompra());
		}
		
		if(this.requisicioncompraReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioRequisicionCompra(this.requisicioncompraReturnGeneral.getRequisicionCompra(),classes);//this.requisicioncompraBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyRequisicionCompra();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyRequisicionCompra();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			RequisicionCompraBeanSwingJInternalFrameAdditional.RecargarFormRequisicionCompra(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingRequisicionCompra(false);
						
			if(requisicioncompraSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraSessionBean.getEsGuardarRelacionado() && DetalleRequisicionCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleRequisicionCompraActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualRequisicionCompra();
			}
			
			this.actualizarVisualTableDatosRequisicionCompra();
			
			this.jTableDatosRequisicionCompra.setRowSelectionInterval(this.getIndiceNuevoRequisicionCompra(), this.getIndiceNuevoRequisicionCompra());
			
			this.seleccionarFilaTablaRequisicionCompraActual();
						
			this.actualizarEstadoCeldasBotonesRequisicionCompra("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesRequisicionCompra(Boolean isHabilitar) throws Exception {
		//
		this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldnumero_secuencialRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarnumero_secuencialRequisicionCompra);//
		this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldtotalRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activartotalRequisicionCompra);//
		this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfechaRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarfechaRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextArearesponsableRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarresponsableRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextAreasolicitado_porRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarsolicitado_porRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextAreamotivo_solicitudRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarmotivo_solicitudRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextAreaarea_solicitudRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activararea_solicitudRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextAreapara_uso_deRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarpara_uso_deRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldlugar_entregaRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarlugar_entregaRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextAreadescripcionRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activardescripcionRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_emisionRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarfecha_emisionRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_entregaRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarfecha_entregaRequisicionCompra);	
		//
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empresaRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarid_empresaRequisicionCompra);//
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_sucursalRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarid_sucursalRequisicionCompra);//
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_moduloRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarid_moduloRequisicionCompra);//
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarid_ejercicioRequisicionCompra);//
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarid_periodoRequisicionCompra);//
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_anioRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarid_anioRequisicionCompra);//
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_mesRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarid_mesRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_clienteRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarid_clienteRequisicionCompra);//
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_usuarioRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarid_usuarioRequisicionCompra);//
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_monedaRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarid_monedaRequisicionCompra);//
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_estado_requisicion_compraRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarid_estado_requisicion_compraRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empleadoRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarid_empleadoRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_formatoRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarid_formatoRequisicionCompra);//
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_tipo_cambioRequisicionCompra.setEnabled(isHabilitar && this.requisicioncompraConstantesFunciones.activarid_tipo_cambioRequisicionCompra);
	};
	
	public void setDefaultControlesRequisicionCompra() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoRequisicionCompra(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.requisicioncompraSessionBean.setConGuardarRelaciones(true);			
			this.requisicioncompraSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormRequisicionCompra.jTabbedPaneRelacionesRequisicionCompra.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.requisicioncompraSessionBean.setConGuardarRelaciones(false);			
			this.requisicioncompraSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormRequisicionCompra.jTabbedPaneRelacionesRequisicionCompra.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoRequisicionCompra() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(RequisicionCompra requisicioncompraAux:this.requisicioncompraLogic.getRequisicionCompras()) {
				if(requisicioncompraAux.getId().equals(this.iIdNuevoRequisicionCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(RequisicionCompra requisicioncompraAux:this.requisicioncompras) {
				if(requisicioncompraAux.getId().equals(this.iIdNuevoRequisicionCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualRequisicionCompra(RequisicionCompra requisicioncompra,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(RequisicionCompra requisicioncompraAux:this.requisicioncompraLogic.getRequisicionCompras()) {
				if(requisicioncompraAux.getId().equals(requisicioncompra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(RequisicionCompra requisicioncompraAux:this.requisicioncompras) {
				if(requisicioncompraAux.getId().equals(requisicioncompra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalRequisicionCompra(RequisicionCompra requisicioncompraOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(RequisicionCompra requisicioncompraAux:this.requisicioncompraLogic.getRequisicionCompras()) {
				if(requisicioncompraAux.getRequisicionCompraOriginal().getId().equals(requisicioncompraOriginal.getId())) {
					existe=true;
					requisicioncompraOriginal.setId(requisicioncompraAux.getId());
					requisicioncompraOriginal.setVersionRow(requisicioncompraAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(RequisicionCompra requisicioncompraAux:this.requisicioncompras) {
				if(requisicioncompraAux.getRequisicionCompraOriginal().getId().equals(requisicioncompraOriginal.getId())) {
					existe=true;
					requisicioncompraOriginal.setId(requisicioncompraAux.getId());
					requisicioncompraOriginal.setVersionRow(requisicioncompraAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosRequisicionCompra(Boolean esParaCancelar) throws Exception {
		requisicioncomprasAux=new ArrayList<RequisicionCompra>();
		requisicioncompraAux=new RequisicionCompra();
		
		if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(RequisicionCompra requisicioncompraAux:this.requisicioncompraLogic.getRequisicionCompras()) {
					if(requisicioncompraAux.getId()<0) {
						requisicioncomprasAux.add(requisicioncompraAux);
					}		
				}
				this.iIdNuevoRequisicionCompra=0L;
				this.requisicioncompraLogic.getRequisicionCompras().removeAll(requisicioncomprasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(RequisicionCompra requisicioncompraAux:this.requisicioncompras) {
					if(requisicioncompraAux.getId()<0) {
						requisicioncomprasAux.add(requisicioncompraAux);
					}		
				}
				this.iIdNuevoRequisicionCompra=0L;
				this.requisicioncompras.removeAll(requisicioncomprasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoRequisicionCompra 
					&& this.requisicioncompraLogic.getRequisicionCompras().size()>0
					) {
					requisicioncompraAux=this.requisicioncompraLogic.getRequisicionCompras().get(this.requisicioncompraLogic.getRequisicionCompras().size() - 1);
				
					if(requisicioncompraAux.getId()<0) {
						this.requisicioncompraLogic.getRequisicionCompras().remove(requisicioncompraAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoRequisicionCompra && this.requisicioncompras.size()>0) {
					requisicioncompraAux=this.requisicioncompras.get(this.requisicioncompras.size() - 1);
				
					if(requisicioncompraAux.getId()<0) {
						this.requisicioncompras.remove(requisicioncompraAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoRequisicionCompra(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(requisicioncompra.getId()<0) {
				this.requisicioncompraLogic.getRequisicionCompras().remove(this.requisicioncompra);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(requisicioncompra.getId()<0) {
				this.requisicioncompras.remove(this.requisicioncompra);
			}
		}			
	}
	
	public void setEstadosInicialesRequisicionCompra(List<RequisicionCompra> requisicioncomprasAux) throws Exception {
		RequisicionCompraConstantesFunciones.setEstadosInicialesRequisicionCompra(requisicioncomprasAux);
	}
	
	public void setEstadosInicialesRequisicionCompra(RequisicionCompra requisicioncompraAux) throws Exception {
		RequisicionCompraConstantesFunciones.setEstadosInicialesRequisicionCompra(requisicioncompraAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarRequisicionCompraActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesRequisicionCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarRequisicionCompraActual()) {
				if(!this.isEsNuevoRequisicionCompra) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesRequisicionCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoRequisicionCompra=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarRequisicionCompraActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Requisicion Compra ?", "MANTENIMIENTO DE Requisicion Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesRequisicionCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(RequisicionCompra requisicioncompra) throws Exception {
		RequisicionCompraConstantesFunciones.seleccionarAsignar(this.requisicioncompra,requisicioncompra);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarRequisicionCompra=this.isPermisoActualizarOriginalRequisicionCompra;
			
			
			this.seleccionarAsignar(requisicioncompra);
			
			

			idClienteActual=requisicioncompra.getid_cliente();
			this.seleccionarClienteActual();

			idEmpleadoActual=requisicioncompra.getid_empleado();
			this.seleccionarEmpleadoActual();

			idTipoCambioActual=requisicioncompra.getid_tipo_cambio();
			this.seleccionarTipoCambioActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			RequisicionCompraConstantesFunciones.quitarEspaciosRequisicionCompra(this.requisicioncompra,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesRequisicionCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.requisicioncompraSessionBean.setsFuncionBusquedaRapida(this.requisicioncompraSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarEmpleadoActual() throws Exception {
		try	{
			Empleado empleadoAux=new Empleado();

			if(this.idEmpleadoActual != null && this.idEmpleadoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(this.idEmpleadoActual);
					empleadoAux= empleadoLogic.getEmpleado();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				empleadosForeignKey=new ArrayList<Empleado>();
				empleadosForeignKey.add(empleadoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarTipoCambioActual() throws Exception {
		try	{
			TipoCambio tipocambioAux=new TipoCambio();

			if(this.idTipoCambioActual != null && this.idTipoCambioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(this.idTipoCambioActual);
					tipocambioAux= tipocambioLogic.getTipoCambio();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				tipocambiosForeignKey=new ArrayList<TipoCambio>();
				tipocambiosForeignKey.add(tipocambioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoRequisicionCompra) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosRequisicionCompra(esParaCancelar);				
				this.cancelarNuevoRequisicionCompra(esParaCancelar);								
			}
			
			this.requisicioncompra=new RequisicionCompra();
			
			this.inicializarRequisicionCompra();
			
			this.actualizarEstadoCeldasBotonesRequisicionCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarRequisicionCompra() throws Exception {
		try {
			RequisicionCompraConstantesFunciones.inicializarRequisicionCompra(this.requisicioncompra);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.requisicioncompraLogic.getRequisicionCompras().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteRequisicionCompras(String sAccionBusqueda,List<RequisicionCompra> requisicioncomprasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="RequisicionCompra"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="RequisicionCompraMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("RequisicionCompraMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="RequisicionCompra"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Requisicion Compras");		
		parameters.put("busquedapor", RequisicionCompraConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(DetalleRequisicionCompra.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					RequisicionCompraLogic requisicioncompraLogicAuxiliar=new RequisicionCompraLogic();
					requisicioncompraLogicAuxiliar.setDatosCliente(requisicioncompraLogic.getDatosCliente());				
					requisicioncompraLogicAuxiliar.setRequisicionCompras(requisicioncomprasParaReportes);
					
					requisicioncompraLogicAuxiliar.cargarRelacionesLoteForeignKeyRequisicionCompraWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					requisicioncomprasParaReportes=requisicioncompraLogicAuxiliar.getRequisicionCompras();
					
					//requisicioncompraLogic.getNewConnexionToDeep();
					
					//for (RequisicionCompra requisicioncompra:requisicioncomprasParaReportes) {
					//	requisicioncompraLogic.deepLoad(requisicioncompra, false, DeepLoadType.INCLUDE, classes);
					//}						
					//requisicioncompraLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//requisicioncompraLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileDetalleRequisicionCompra = AuxiliarReportes.class.getResourceAsStream("DetalleRequisicionCompraDetalleRelacionesDesign.jasper");
			parameters.put("subreport_detallerequisicioncompra", reportFileDetalleRequisicionCompra);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceRequisicionCompra=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			RequisicionCompraConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			RequisicionCompraConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceRequisicionCompra=new JRBeanArrayDataSource(RequisicionCompraJInternalFrame.TraerRequisicionCompraBeans(requisicioncomprasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceRequisicionCompra);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+RequisicionCompraConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+RequisicionCompraConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(RequisicionCompraBean.TraerRequisicionCompraBeans(requisicioncomprasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteRequisicionCompras(sAccionBusqueda,sTipoArchivoReporte,requisicioncomprasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalRequisicionCompras(sAccionBusqueda,sTipoArchivoReporte,requisicioncomprasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoRequisicionCompraActionPerformed(null);
					//this.generarExcelReporteRequisicionCompras(sAccionBusqueda,sTipoArchivoReporte,requisicioncomprasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalRequisicionCompras(sAccionBusqueda,sTipoArchivoReporte,requisicioncomprasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesRequisicionCompras(sAccionBusqueda,sTipoArchivoReporte,requisicioncomprasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesRequisicionCompras(sAccionBusqueda,sTipoArchivoReporte,requisicioncomprasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRequisicionCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<RequisicionCompra> requisicioncomprasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"requisicioncompra";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("RequisicionCompras");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderRequisicionCompra("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(RequisicionCompra requisicioncompra : requisicioncomprasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			RequisicionCompraConstantesFunciones.generarExcelReporteDataRequisicionCompra("NORMAL",row,workbook,requisicioncompra,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderRequisicionCompra(String sTipo,Row row,Workbook workbook) {
		
		RequisicionCompraConstantesFunciones.generarExcelReporteHeaderRequisicionCompra(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalRequisicionCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<RequisicionCompra> requisicioncomprasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"requisicioncompra_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("RequisicionCompras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(RequisicionCompra requisicioncompra : requisicioncomprasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(RequisicionCompraConstantesFunciones.getRequisicionCompraDescripcion(requisicioncompra));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_IDMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getnumero_secuencial());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_IDUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getusuario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_IDESTADOREQUISICIONCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDESTADOREQUISICIONCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getestadorequisicioncompra_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_IDEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getresponsable());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getsolicitado_por());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getmotivo_solicitud());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getarea_solicitud());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_PARAUSODE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_PARAUSODE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getpara_uso_de());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getlugar_entrega());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getfecha_entrega());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_IDFORMATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDFORMATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.getformato_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RequisicionCompraConstantesFunciones.LABEL_IDTIPOCAMBIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDTIPOCAMBIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(requisicioncompra.gettipocambio_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesRequisicionCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<RequisicionCompra> requisicioncomprasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<RequisicionCompra> requisicioncomprasRespaldo=null;
		
		classes=RequisicionCompraConstantesFunciones.getClassesRelationshipsOfRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.requisicioncompraLogic.setDatosCliente(this.datosCliente);
		this.requisicioncompraLogic.setDatosDeep(this.datosDeep);
		this.requisicioncompraLogic.setIsConDeep(true);
		
		requisicioncomprasRespaldo=this.requisicioncompraLogic.getRequisicionCompras();
		
		this.requisicioncompraLogic.setRequisicionCompras(requisicioncomprasParaReportes);	
		this.requisicioncompraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		requisicioncomprasParaReportes=this.requisicioncompraLogic.getRequisicionCompras();
		this.requisicioncompraLogic.setRequisicionCompras(requisicioncomprasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"requisicioncompra_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("RequisicionCompras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderRequisicionCompra("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(RequisicionCompra requisicioncompra : requisicioncomprasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderRequisicionCompra("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			RequisicionCompraConstantesFunciones.generarExcelReporteDataRequisicionCompra("NORMAL",row,workbook,requisicioncompra,cellStyleDataAux);
		
			
			


				//DetalleRequisicionCompra
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DetalleRequisicionCompraConstantesFunciones.SCLASSWEBTITULO))) {

				if(requisicioncompra.getDetalleRequisicionCompras()!=null && requisicioncompra.getDetalleRequisicionCompras().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DetalleRequisicionCompraConstantesFunciones.generarExcelReporteHeaderDetalleRequisicionCompra("RELACIONADO",row,workbook);
				}

				if(requisicioncompra.getDetalleRequisicionCompras()!=null) {
					i2=0;
					for(DetalleRequisicionCompra detallerequisicioncompra : requisicioncompra.getDetalleRequisicionCompras()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DetalleRequisicionCompraConstantesFunciones.generarExcelReporteDataDetalleRequisicionCompra("RELACIONADO",row,workbook,detallerequisicioncompra,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(RequisicionCompraConstantesFunciones.getRequisicionCompraDescripcion(requisicioncompra));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoRequisicionCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoRequisicionCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoRequisicionCompra.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoRequisicionCompra.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessRequisicionCompra() throws Exception {		
		this.startProcessRequisicionCompra(true);
	}
	
	public void startProcessRequisicionCompra(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasRequisicionCompra ,this.jPanelParametrosReportesRequisicionCompra, this.jScrollPanelDatosRequisicionCompra,this.jPanelPaginacionRequisicionCompra, this.jScrollPanelDatosEdicionRequisicionCompra, this.jPanelAccionesRequisicionCompra,this.jPanelAccionesFormularioRequisicionCompra,this.jmenuBarRequisicionCompra,this.jmenuBarDetalleRequisicionCompra,this.jTtoolBarRequisicionCompra,this.jTtoolBarDetalleRequisicionCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasRequisicionCompra=this.jTabbedPaneBusquedasRequisicionCompra; 
		
		final JPanel jPanelParametrosReportesRequisicionCompra=this.jPanelParametrosReportesRequisicionCompra;
		//final JScrollPane jScrollPanelDatosRequisicionCompra=this.jScrollPanelDatosRequisicionCompra;
		final JTable jTableDatosRequisicionCompra=this.jTableDatosRequisicionCompra;		
		final JPanel jPanelPaginacionRequisicionCompra=this.jPanelPaginacionRequisicionCompra;
		//final JScrollPane jScrollPanelDatosEdicionRequisicionCompra=this.jScrollPanelDatosEdicionRequisicionCompra;
		final JPanel jPanelAccionesRequisicionCompra=this.jPanelAccionesRequisicionCompra;
		
		JPanel jPanelCamposAuxiliarRequisicionCompra=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarRequisicionCompra=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
			jPanelCamposAuxiliarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jPanelCamposRequisicionCompra;
			jPanelAccionesFormularioAuxiliarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jPanelAccionesFormularioRequisicionCompra;
		}
		
		final JPanel jPanelCamposRequisicionCompra=jPanelCamposAuxiliarRequisicionCompra;
		final JPanel jPanelAccionesFormularioRequisicionCompra=jPanelAccionesFormularioAuxiliarRequisicionCompra;
		
		
		final JMenuBar jmenuBarRequisicionCompra=this.jmenuBarRequisicionCompra;
		final JToolBar jTtoolBarRequisicionCompra=this.jTtoolBarRequisicionCompra;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarRequisicionCompra=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarRequisicionCompra=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
			jmenuBarDetalleAuxiliarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jmenuBarDetalleRequisicionCompra;
			jTtoolBarDetalleAuxiliarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jTtoolBarDetalleRequisicionCompra;
		}
		
		final JMenuBar jmenuBarDetalleRequisicionCompra=jmenuBarDetalleAuxiliarRequisicionCompra;
		final JToolBar jTtoolBarDetalleRequisicionCompra=jTtoolBarDetalleAuxiliarRequisicionCompra;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasRequisicionCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesRequisicionCompra;
			processRunnable.jTableDatos=jTableDatosRequisicionCompra;
			processRunnable.jPanelCampos=jPanelCamposRequisicionCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionRequisicionCompra;
			processRunnable.jPanelAcciones=jPanelAccionesRequisicionCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioRequisicionCompra;
			
			
			processRunnable.jmenuBar=jmenuBarRequisicionCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleRequisicionCompra;
			processRunnable.jTtoolBar=jTtoolBarRequisicionCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleRequisicionCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasRequisicionCompra ,jPanelParametrosReportesRequisicionCompra,jTableDatosRequisicionCompra, /*jScrollPanelDatosRequisicionCompra,*/jPanelCamposRequisicionCompra,jPanelPaginacionRequisicionCompra, /*jScrollPanelDatosEdicionRequisicionCompra,*/ jPanelAccionesRequisicionCompra,jPanelAccionesFormularioRequisicionCompra,jmenuBarRequisicionCompra,jmenuBarDetalleRequisicionCompra,jTtoolBarRequisicionCompra,jTtoolBarDetalleRequisicionCompra);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasRequisicionCompra ,jPanelParametrosReportesRequisicionCompra, jScrollPanelDatosRequisicionCompra,jPanelPaginacionRequisicionCompra, jScrollPanelDatosEdicionRequisicionCompra, jPanelAccionesRequisicionCompra,jPanelAccionesFormularioRequisicionCompra,jmenuBarRequisicionCompra,jmenuBarDetalleRequisicionCompra,jTtoolBarRequisicionCompra,jTtoolBarDetalleRequisicionCompra);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessRequisicionCompra() {// throws Exception 
		this.finishProcessRequisicionCompra(true);
	}
	
	public void finishProcessRequisicionCompra(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasRequisicionCompra ,this.jPanelParametrosReportesRequisicionCompra, this.jScrollPanelDatosRequisicionCompra,this.jPanelPaginacionRequisicionCompra, this.jScrollPanelDatosEdicionRequisicionCompra, this.jPanelAccionesRequisicionCompra,this.jPanelAccionesFormularioRequisicionCompra,this.jmenuBarRequisicionCompra,this.jmenuBarDetalleRequisicionCompra,this.jTtoolBarRequisicionCompra,this.jTtoolBarDetalleRequisicionCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasRequisicionCompra=this.jTabbedPaneBusquedasRequisicionCompra; 
		
		final JPanel jPanelParametrosReportesRequisicionCompra=this.jPanelParametrosReportesRequisicionCompra;
		//final JScrollPane jScrollPanelDatosRequisicionCompra=this.jScrollPanelDatosRequisicionCompra;
		final JTable jTableDatosRequisicionCompra=this.jTableDatosRequisicionCompra;		
		final JPanel jPanelPaginacionRequisicionCompra=this.jPanelPaginacionRequisicionCompra;
		//final JScrollPane jScrollPanelDatosEdicionRequisicionCompra=this.jScrollPanelDatosEdicionRequisicionCompra;
		final JPanel jPanelAccionesRequisicionCompra=this.jPanelAccionesRequisicionCompra;
		
		JPanel jPanelCamposAuxiliarRequisicionCompra=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarRequisicionCompra=new JPanel();
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
			jPanelCamposAuxiliarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jPanelCamposRequisicionCompra;
			jPanelAccionesFormularioAuxiliarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jPanelAccionesFormularioRequisicionCompra;
		}
		
		final JPanel jPanelCamposRequisicionCompra=jPanelCamposAuxiliarRequisicionCompra;
		final JPanel jPanelAccionesFormularioRequisicionCompra=jPanelAccionesFormularioAuxiliarRequisicionCompra;
		
		
		final JMenuBar jmenuBarRequisicionCompra=this.jmenuBarRequisicionCompra;		
		final JToolBar jTtoolBarRequisicionCompra=this.jTtoolBarRequisicionCompra;
				
		JMenuBar jmenuBarDetalleAuxiliarRequisicionCompra=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarRequisicionCompra=new JToolBar();
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
			jmenuBarDetalleAuxiliarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jmenuBarDetalleRequisicionCompra;
			jTtoolBarDetalleAuxiliarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jTtoolBarDetalleRequisicionCompra;		
		}
		
		final JMenuBar jmenuBarDetalleRequisicionCompra=jmenuBarDetalleAuxiliarRequisicionCompra;
		final JToolBar jTtoolBarDetalleRequisicionCompra=jTtoolBarDetalleAuxiliarRequisicionCompra;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasRequisicionCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesRequisicionCompra;
			processRunnable.jTableDatos=jTableDatosRequisicionCompra;
			processRunnable.jPanelCampos=jPanelCamposRequisicionCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionRequisicionCompra;
			processRunnable.jPanelAcciones=jPanelAccionesRequisicionCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioRequisicionCompra;
			
			
			processRunnable.jmenuBar=jmenuBarRequisicionCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleRequisicionCompra;
			processRunnable.jTtoolBar=jTtoolBarRequisicionCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleRequisicionCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasRequisicionCompra ,jPanelParametrosReportesRequisicionCompra, jTableDatosRequisicionCompra,/*jScrollPanelDatosRequisicionCompra,*/jPanelCamposRequisicionCompra,jPanelPaginacionRequisicionCompra, /*jScrollPanelDatosEdicionRequisicionCompra,*/ jPanelAccionesRequisicionCompra,jPanelAccionesFormularioRequisicionCompra,jmenuBarRequisicionCompra,jmenuBarDetalleRequisicionCompra,jTtoolBarRequisicionCompra,jTtoolBarDetalleRequisicionCompra));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesRequisicionCompra(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarRequisicionCompra(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuRequisicionCompra(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarRequisicionCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarRequisicionCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleRequisicionCompra,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuRequisicionCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarRequisicionCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleRequisicionCompra,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.requisicioncompraConstantesFunciones.getsFinalQueryRequisicionCompra();
		String  finalQueryPaginacionTodos=this.requisicioncompraConstantesFunciones.getsFinalQueryRequisicionCompra();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=RequisicionCompraConstantesFunciones.getArrayColumnasGlobalesNoRequisicionCompra(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=RequisicionCompraConstantesFunciones.getArrayColumnasGlobalesRequisicionCompra(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,RequisicionCompraConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.requisicioncomprasEliminados= new ArrayList<RequisicionCompra>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessRequisicionCompra();
		
				///*RequisicionCompraSessionBean*/this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			
			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=RequisicionCompraConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=RequisicionCompraConstantesFunciones.getClassesForeignKeysOfRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/requisicioncompra."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			requisicioncomprasAux= new ArrayList<RequisicionCompra>();
			
				
			requisicioncompraLogic.setDatosCliente(this.datosCliente);
			requisicioncompraLogic.setDatosDeep(this.datosDeep);
			requisicioncompraLogic.setIsConDeep(true);
			
			
			requisicioncompraLogic.getRequisicionCompraDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					requisicioncompraLogic.getTodosRequisicionCompras(finalQueryGlobal,pagination);
					
					//requisicioncompraLogic.getTodosRequisicionComprasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(requisicioncompraLogic.getRequisicionCompras()==null|| requisicioncompraLogic.getRequisicionCompras().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							requisicioncomprasAux= new ArrayList<RequisicionCompra>();
							requisicioncomprasAux.addAll(requisicioncompraLogic.getRequisicionCompras());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncomprasAux= new ArrayList<RequisicionCompra>();
							requisicioncomprasAux.addAll(requisicioncompras);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							requisicioncompraLogic.getTodosRequisicionCompras(finalQueryGlobal+"",this.pagination);												
							
							//requisicioncompraLogic.getTodosRequisicionComprasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteRequisicionCompras("Todos",requisicioncompraLogic.getRequisicionCompras() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							requisicioncompraLogic.setRequisicionCompras(new ArrayList<RequisicionCompra>());					
							requisicioncompraLogic.getRequisicionCompras().addAll(requisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncompras=new ArrayList<RequisicionCompra>();
							requisicioncompras.addAll(requisicioncomprasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idRequisicionCompra=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idRequisicionCompra=this.idActual;
				
				} else if(this.idRequisicionCompraActual!=null && this.idRequisicionCompraActual!=0L) {
					idRequisicionCompra=idRequisicionCompraActual;
				}
				
					
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndicePorId(idRequisicionCompra);
				
				this.requisicioncompras=new ArrayList<RequisicionCompra>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					requisicioncompraLogic.getEntity(idRequisicionCompra);
					
					//requisicioncompraLogic.getEntityWithConnection(idRequisicionCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.setRequisicionCompras(new ArrayList<RequisicionCompra>());
					requisicioncompraLogic.getRequisicionCompras().add(requisicioncompraLogic.getRequisicionCompra());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompras=new ArrayList<RequisicionCompra>();
					this.requisicioncompras.add(requisicioncompra);
				}
				
				if(requisicioncompraLogic.getRequisicionCompra()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					requisicioncompraLogic.getRequisicionComprasFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=requisicioncompraLogic.getRequisicionCompras()==null||requisicioncompraLogic.getRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=requisicioncompras==null|| requisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncomprasAux=new ArrayList<RequisicionCompra>();
						requisicioncomprasAux.addAll(requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncomprasAux=new ArrayList<RequisicionCompra>();
							requisicioncomprasAux.addAll(requisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							requisicioncompraLogic.getRequisicionComprasFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteRequisicionCompras("FK_IdCliente",requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteRequisicionCompras("FK_IdCliente",requisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncompraLogic.setRequisicionCompras(new ArrayList<RequisicionCompra>());
						requisicioncompraLogic.getRequisicionCompras().addAll(requisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncompras=new ArrayList<RequisicionCompra>();
							requisicioncompras.addAll(requisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					requisicioncompraLogic.getRequisicionComprasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=requisicioncompraLogic.getRequisicionCompras()==null||requisicioncompraLogic.getRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=requisicioncompras==null|| requisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncomprasAux=new ArrayList<RequisicionCompra>();
						requisicioncomprasAux.addAll(requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncomprasAux=new ArrayList<RequisicionCompra>();
							requisicioncomprasAux.addAll(requisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							requisicioncompraLogic.getRequisicionComprasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteRequisicionCompras("FK_IdEjercicio",requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteRequisicionCompras("FK_IdEjercicio",requisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncompraLogic.setRequisicionCompras(new ArrayList<RequisicionCompra>());
						requisicioncompraLogic.getRequisicionCompras().addAll(requisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncompras=new ArrayList<RequisicionCompra>();
							requisicioncompras.addAll(requisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpleado")) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					requisicioncompraLogic.getRequisicionComprasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=requisicioncompraLogic.getRequisicionCompras()==null||requisicioncompraLogic.getRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=requisicioncompras==null|| requisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncomprasAux=new ArrayList<RequisicionCompra>();
						requisicioncomprasAux.addAll(requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncomprasAux=new ArrayList<RequisicionCompra>();
							requisicioncomprasAux.addAll(requisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							requisicioncompraLogic.getRequisicionComprasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteRequisicionCompras("FK_IdEmpleado",requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteRequisicionCompras("FK_IdEmpleado",requisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncompraLogic.setRequisicionCompras(new ArrayList<RequisicionCompra>());
						requisicioncompraLogic.getRequisicionCompras().addAll(requisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncompras=new ArrayList<RequisicionCompra>();
							requisicioncompras.addAll(requisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					requisicioncompraLogic.getRequisicionComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=requisicioncompraLogic.getRequisicionCompras()==null||requisicioncompraLogic.getRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=requisicioncompras==null|| requisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncomprasAux=new ArrayList<RequisicionCompra>();
						requisicioncomprasAux.addAll(requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncomprasAux=new ArrayList<RequisicionCompra>();
							requisicioncomprasAux.addAll(requisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							requisicioncompraLogic.getRequisicionComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteRequisicionCompras("FK_IdEmpresa",requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteRequisicionCompras("FK_IdEmpresa",requisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncompraLogic.setRequisicionCompras(new ArrayList<RequisicionCompra>());
						requisicioncompraLogic.getRequisicionCompras().addAll(requisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncompras=new ArrayList<RequisicionCompra>();
							requisicioncompras.addAll(requisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoRequisicionCompra")) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoRequisicionCompra(id_estado_requisicion_compraFK_IdEstadoRequisicionCompra);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					requisicioncompraLogic.getRequisicionComprasFK_IdEstadoRequisicionCompra(finalQueryGlobal,pagination,id_estado_requisicion_compraFK_IdEstadoRequisicionCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoRequisicionCompra(id_estado_requisicion_compraFK_IdEstadoRequisicionCompra);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoRequisicionCompra(id_estado_requisicion_compraFK_IdEstadoRequisicionCompra);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=requisicioncompraLogic.getRequisicionCompras()==null||requisicioncompraLogic.getRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=requisicioncompras==null|| requisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncomprasAux=new ArrayList<RequisicionCompra>();
						requisicioncomprasAux.addAll(requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncomprasAux=new ArrayList<RequisicionCompra>();
							requisicioncomprasAux.addAll(requisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							requisicioncompraLogic.getRequisicionComprasFK_IdEstadoRequisicionCompra(finalQueryGlobal,pagination,id_estado_requisicion_compraFK_IdEstadoRequisicionCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoRequisicionCompra(id_estado_requisicion_compraFK_IdEstadoRequisicionCompra);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoRequisicionCompra(id_estado_requisicion_compraFK_IdEstadoRequisicionCompra);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteRequisicionCompras("FK_IdEstadoRequisicionCompra",requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteRequisicionCompras("FK_IdEstadoRequisicionCompra",requisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncompraLogic.setRequisicionCompras(new ArrayList<RequisicionCompra>());
						requisicioncompraLogic.getRequisicionCompras().addAll(requisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncompras=new ArrayList<RequisicionCompra>();
							requisicioncompras.addAll(requisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdModulo")) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					requisicioncompraLogic.getRequisicionComprasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=requisicioncompraLogic.getRequisicionCompras()==null||requisicioncompraLogic.getRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=requisicioncompras==null|| requisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncomprasAux=new ArrayList<RequisicionCompra>();
						requisicioncomprasAux.addAll(requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncomprasAux=new ArrayList<RequisicionCompra>();
							requisicioncomprasAux.addAll(requisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							requisicioncompraLogic.getRequisicionComprasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteRequisicionCompras("FK_IdModulo",requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteRequisicionCompras("FK_IdModulo",requisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncompraLogic.setRequisicionCompras(new ArrayList<RequisicionCompra>());
						requisicioncompraLogic.getRequisicionCompras().addAll(requisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncompras=new ArrayList<RequisicionCompra>();
							requisicioncompras.addAll(requisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					requisicioncompraLogic.getRequisicionComprasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=requisicioncompraLogic.getRequisicionCompras()==null||requisicioncompraLogic.getRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=requisicioncompras==null|| requisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncomprasAux=new ArrayList<RequisicionCompra>();
						requisicioncomprasAux.addAll(requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncomprasAux=new ArrayList<RequisicionCompra>();
							requisicioncomprasAux.addAll(requisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							requisicioncompraLogic.getRequisicionComprasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteRequisicionCompras("FK_IdPeriodo",requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteRequisicionCompras("FK_IdPeriodo",requisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncompraLogic.setRequisicionCompras(new ArrayList<RequisicionCompra>());
						requisicioncompraLogic.getRequisicionCompras().addAll(requisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncompras=new ArrayList<RequisicionCompra>();
							requisicioncompras.addAll(requisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					requisicioncompraLogic.getRequisicionComprasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=requisicioncompraLogic.getRequisicionCompras()==null||requisicioncompraLogic.getRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=requisicioncompras==null|| requisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncomprasAux=new ArrayList<RequisicionCompra>();
						requisicioncomprasAux.addAll(requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncomprasAux=new ArrayList<RequisicionCompra>();
							requisicioncomprasAux.addAll(requisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							requisicioncompraLogic.getRequisicionComprasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteRequisicionCompras("FK_IdSucursal",requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteRequisicionCompras("FK_IdSucursal",requisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncompraLogic.setRequisicionCompras(new ArrayList<RequisicionCompra>());
						requisicioncompraLogic.getRequisicionCompras().addAll(requisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncompras=new ArrayList<RequisicionCompra>();
							requisicioncompras.addAll(requisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUsuario")) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					requisicioncompraLogic.getRequisicionComprasFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=requisicioncompraLogic.getRequisicionCompras()==null||requisicioncompraLogic.getRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=requisicioncompras==null|| requisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncomprasAux=new ArrayList<RequisicionCompra>();
						requisicioncomprasAux.addAll(requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncomprasAux=new ArrayList<RequisicionCompra>();
							requisicioncomprasAux.addAll(requisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							requisicioncompraLogic.getRequisicionComprasFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteRequisicionCompras("FK_IdUsuario",requisicioncompraLogic.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteRequisicionCompras("FK_IdUsuario",requisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncompraLogic.setRequisicionCompras(new ArrayList<RequisicionCompra>());
						requisicioncompraLogic.getRequisicionCompras().addAll(requisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncompras=new ArrayList<RequisicionCompra>();
							requisicioncompras.addAll(requisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesRequisicionCompra();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessRequisicionCompra();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=requisicioncompraLogic.getRequisicionCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=requisicioncompras.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=requisicioncompraLogic.getRequisicionCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=requisicioncompras.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(RequisicionCompra requisicioncompra) {
		Boolean permite=true;
		
		if(this.requisicioncompra.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=RequisicionCompraConstantesFunciones.getOrderByListaRequisicionCompra();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=RequisicionCompraConstantesFunciones.getOrderByListaRequisicionCompra();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(RequisicionCompra requisicioncompra:requisicioncompraLogic.getRequisicionCompras()) {
				if(requisicioncompra.getsType().equals(Constantes2.S_TOTALES)) {
					requisicioncompraTotales=requisicioncompra;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(RequisicionCompra requisicioncompra:this.requisicioncompras) {
				if(requisicioncompra.getsType().equals(Constantes2.S_TOTALES)) {
					requisicioncompraTotales=requisicioncompra;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.requisicioncompraAux=new RequisicionCompra();
			this.requisicioncompraAux.setsType(Constantes2.S_TOTALES);
			this.requisicioncompraAux.setIsNew(false);
			this.requisicioncompraAux.setIsChanged(false);
			this.requisicioncompraAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				RequisicionCompraConstantesFunciones.TotalizarValoresFilaRequisicionCompra(this.requisicioncompraLogic.getRequisicionCompras(),this.requisicioncompraAux);
				
				this.requisicioncompraLogic.getRequisicionCompras().add(this.requisicioncompraAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				RequisicionCompraConstantesFunciones.TotalizarValoresFilaRequisicionCompra(this.requisicioncompras,this.requisicioncompraAux);
				
				this.requisicioncompras.add(this.requisicioncompraAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		requisicioncompraTotales=new RequisicionCompra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.requisicioncompraLogic.getRequisicionCompras().remove(requisicioncompraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.requisicioncompras.remove(requisicioncompraTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		requisicioncompraTotales=new RequisicionCompra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(RequisicionCompra requisicioncompra:requisicioncompraLogic.getRequisicionCompras()) {
				if(requisicioncompra.getsType().equals(Constantes2.S_TOTALES)) {
					requisicioncompraTotales=requisicioncompra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				RequisicionCompraConstantesFunciones.TotalizarValoresFilaRequisicionCompra(this.requisicioncompraLogic.getRequisicionCompras(),requisicioncompraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(RequisicionCompra requisicioncompra:this.requisicioncompras) {
				if(requisicioncompra.getsType().equals(Constantes2.S_TOTALES)) {
					requisicioncompraTotales=requisicioncompra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				RequisicionCompraConstantesFunciones.TotalizarValoresFilaRequisicionCompra(this.requisicioncompras,requisicioncompraTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getRequisicionComprasFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRequisicionComprasFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRequisicionComprasFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRequisicionComprasFK_IdEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRequisicionComprasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRequisicionComprasFK_IdEstadoRequisicionCompra()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoRequisicionCompra";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRequisicionComprasFK_IdFormato()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormato";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRequisicionComprasFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRequisicionComprasFK_IdModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRequisicionComprasFK_IdMoneda()throws Exception {
		try {
			sAccionBusqueda="FK_IdMoneda";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRequisicionComprasFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRequisicionComprasFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRequisicionComprasFK_IdTipoCambio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCambio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRequisicionComprasFK_IdUsuario()throws Exception {
		try {
			sAccionBusqueda="FK_IdUsuario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getRequisicionComprasFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getRequisicionComprasFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRequisicionComprasFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getRequisicionComprasFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRequisicionComprasFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getRequisicionComprasFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRequisicionComprasFK_IdEmpleado(String sFinalQuery,Long id_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getRequisicionComprasFK_IdEmpleado(sFinalQuery,this.pagination,id_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRequisicionComprasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getRequisicionComprasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRequisicionComprasFK_IdEstadoRequisicionCompra(String sFinalQuery,Long id_estado_requisicion_compra)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getRequisicionComprasFK_IdEstadoRequisicionCompra(sFinalQuery,this.pagination,id_estado_requisicion_compra);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRequisicionComprasFK_IdFormato(String sFinalQuery,Long id_formato)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getRequisicionComprasFK_IdFormato(sFinalQuery,this.pagination,id_formato);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRequisicionComprasFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getRequisicionComprasFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRequisicionComprasFK_IdModulo(String sFinalQuery,Long id_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getRequisicionComprasFK_IdModulo(sFinalQuery,this.pagination,id_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRequisicionComprasFK_IdMoneda(String sFinalQuery,Long id_moneda)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getRequisicionComprasFK_IdMoneda(sFinalQuery,this.pagination,id_moneda);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRequisicionComprasFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getRequisicionComprasFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRequisicionComprasFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getRequisicionComprasFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRequisicionComprasFK_IdTipoCambio(String sFinalQuery,Long id_tipo_cambio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getRequisicionComprasFK_IdTipoCambio(sFinalQuery,this.pagination,id_tipo_cambio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRequisicionComprasFK_IdUsuario(String sFinalQuery,Long id_usuario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getRequisicionComprasFK_IdUsuario(sFinalQuery,this.pagination,id_usuario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosRequisicionCompra() {
		this.isPermisoTodoRequisicionCompra=false;
		this.isPermisoNuevoRequisicionCompra=false;
		this.isPermisoActualizarRequisicionCompra=false;
		this.isPermisoActualizarOriginalRequisicionCompra=false;
		this.isPermisoEliminarRequisicionCompra=false;
		this.isPermisoGuardarCambiosRequisicionCompra=false;
		this.isPermisoConsultaRequisicionCompra=false;
		this.isPermisoBusquedaRequisicionCompra=false;
		this.isPermisoReporteRequisicionCompra=false;		
		this.isPermisoOrdenRequisicionCompra=false;		
		this.isPermisoPaginacionMedioRequisicionCompra=false;		
		this.isPermisoPaginacionAltoRequisicionCompra=false;
		this.isPermisoPaginacionTodoRequisicionCompra=false;
		this.isPermisoCopiarRequisicionCompra=false;		
		this.isPermisoVerFormRequisicionCompra=false;		
		this.isPermisoDuplicarRequisicionCompra=false;		
		this.isPermisoOrdenRequisicionCompra=false;		
	}
	
	public void setPermisosUsuarioRequisicionCompra(Boolean isPermiso) {
		this.isPermisoTodoRequisicionCompra=isPermiso;
		this.isPermisoNuevoRequisicionCompra=isPermiso;
		this.isPermisoActualizarRequisicionCompra=isPermiso;
		this.isPermisoActualizarOriginalRequisicionCompra=isPermiso;
		this.isPermisoEliminarRequisicionCompra=isPermiso;
		this.isPermisoGuardarCambiosRequisicionCompra=isPermiso;
		this.isPermisoConsultaRequisicionCompra=isPermiso;
		this.isPermisoBusquedaRequisicionCompra=isPermiso;
		this.isPermisoReporteRequisicionCompra=isPermiso;
		this.isPermisoOrdenRequisicionCompra=isPermiso;		
		this.isPermisoPaginacionMedioRequisicionCompra=isPermiso;		
		this.isPermisoPaginacionAltoRequisicionCompra=isPermiso;		
		this.isPermisoPaginacionTodoRequisicionCompra=isPermiso;		
		this.isPermisoCopiarRequisicionCompra=isPermiso;		
		this.isPermisoVerFormRequisicionCompra=isPermiso;		
		this.isPermisoDuplicarRequisicionCompra=isPermiso;
		this.isPermisoOrdenRequisicionCompra=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioRequisicionCompra(Boolean isPermiso) {
		//this.isPermisoTodoRequisicionCompra=isPermiso;
		this.isPermisoNuevoRequisicionCompra=isPermiso;
		this.isPermisoActualizarRequisicionCompra=isPermiso;
		this.isPermisoActualizarOriginalRequisicionCompra=isPermiso;
		this.isPermisoEliminarRequisicionCompra=isPermiso;
		this.isPermisoGuardarCambiosRequisicionCompra=isPermiso;
		//this.isPermisoConsultaRequisicionCompra=isPermiso;
		//this.isPermisoBusquedaRequisicionCompra=isPermiso;
		//this.isPermisoReporteRequisicionCompra=isPermiso;
		//this.isPermisoOrdenRequisicionCompra=isPermiso;		
		//this.isPermisoPaginacionMedioRequisicionCompra=isPermiso;		
		//this.isPermisoPaginacionAltoRequisicionCompra=isPermiso;		
		//this.isPermisoPaginacionTodoRequisicionCompra=isPermiso;		
		//this.isPermisoCopiarRequisicionCompra=isPermiso;		
		//this.isPermisoDuplicarRequisicionCompra=isPermiso;
		//this.isPermisoOrdenRequisicionCompra=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioRequisicionCompraClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(DetalleRequisicionCompraConstantesFunciones.SNOMBREOPCION);
		
		if(RequisicionCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosDetalleRequisicionCompra=false;
		this.isTienePermisosDetalleRequisicionCompra=this.verificarGetPermisosUsuarioOpcionRequisicionCompraClaseRelacionada(this.opcionsRelacionadas,DetalleRequisicionCompraConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebRequisicionCompra(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioRequisicionCompraClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosDetalleRequisicionCompra=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioRequisicionCompraClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionRequisicionCompraClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioRequisicionCompraClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosDetalleRequisicionCompra && this.jInternalFrameDetalleFormRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRequisicionCompra.jTabbedPaneRelacionesRequisicionCompra.remove(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioRequisicionCompra() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(RequisicionCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, RequisicionCompraConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoRequisicionCompra=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarRequisicionCompra=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalRequisicionCompra=this.isPermisoActualizarRequisicionCompra;
			this.isPermisoEliminarRequisicionCompra=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosRequisicionCompra=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaRequisicionCompra=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaRequisicionCompra=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoRequisicionCompra=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteRequisicionCompra=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenRequisicionCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioRequisicionCompra=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoRequisicionCompra=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoRequisicionCompra=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarRequisicionCompra=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormRequisicionCompra=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarRequisicionCompra=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenRequisicionCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosRequisicionCompra.setToolTipText(this.jTableDatosRequisicionCompra.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioRequisicionCompra(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioRequisicionCompra(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(RequisicionCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(RequisicionCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioRequisicionCompra() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosDetalleRequisicionCompra && this.requisicioncompraConstantesFunciones.mostrarDetalleRequisicionCompraRequisicionCompra && !RequisicionCompraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Detalle Requisicion Compra");
			reporte.setsDescripcion("Detalle Requisicion Compra");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyRequisicionCompraListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.modulosForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.usuariosForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.estadorequisicioncomprasForeignKey=new ArrayList();
				this.empleadosForeignKey=new ArrayList();
				this.formatosForeignKey=new ArrayList();
				this.tipocambiosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyRequisicionCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(RequisicionCompraJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyRequisicionCompraListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUsuarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoRequisicionCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUsuarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UsuarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoRequisicionCompraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadorequisicioncomprasForeignKey==null||this.estadorequisicioncomprasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoRequisicionConstantesFunciones.getArrayColumnasGlobalesEstadoRequisicion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoRequisicionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoRequisicionConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoRequisicionComprasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCambioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyRequisicionCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			RequisicionCompraParameterReturnGeneral requisicioncompraReturnGeneral=new RequisicionCompraParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.requisicioncompraConstantesFunciones.cargarid_empresaRequisicionCompra)
					 || (this.esRecargarFks && this.requisicioncompraConstantesFunciones.cargarid_empresaRequisicionCompra)) {

					if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+requisicioncompraSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.requisicioncompraConstantesFunciones.cargarid_sucursalRequisicionCompra)
					 || (this.esRecargarFks && this.requisicioncompraConstantesFunciones.cargarid_sucursalRequisicionCompra)) {

					if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+requisicioncompraSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalModulo="";

				if(((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0) && this.requisicioncompraConstantesFunciones.cargarid_moduloRequisicionCompra)
					 || (this.esRecargarFks && this.requisicioncompraConstantesFunciones.cargarid_moduloRequisicionCompra)) {

					if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalModulo, "");
						finalQueryGlobalModulo+=ModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalModulo=" WHERE " + ConstantesSql.ID + "="+requisicioncompraSessionBean.getlidModuloActual();
					}
				} else {
					finalQueryGlobalModulo="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.requisicioncompraConstantesFunciones.cargarid_ejercicioRequisicionCompra)
					 || (this.esRecargarFks && this.requisicioncompraConstantesFunciones.cargarid_ejercicioRequisicionCompra)) {

					if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+requisicioncompraSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.requisicioncompraConstantesFunciones.cargarid_periodoRequisicionCompra)
					 || (this.esRecargarFks && this.requisicioncompraConstantesFunciones.cargarid_periodoRequisicionCompra)) {

					if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+requisicioncompraSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.requisicioncompraConstantesFunciones.cargarid_anioRequisicionCompra)
					 || (this.esRecargarFks && this.requisicioncompraConstantesFunciones.cargarid_anioRequisicionCompra)) {

					if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+requisicioncompraSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.requisicioncompraConstantesFunciones.cargarid_mesRequisicionCompra)
					 || (this.esRecargarFks && this.requisicioncompraConstantesFunciones.cargarid_mesRequisicionCompra)) {

					if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+requisicioncompraSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.requisicioncompraConstantesFunciones.cargarid_clienteRequisicionCompra)
					 || (this.esRecargarFks && this.requisicioncompraConstantesFunciones.cargarid_clienteRequisicionCompra)) {

					if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+requisicioncompraSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalUsuario="";

				if(((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0) && this.requisicioncompraConstantesFunciones.cargarid_usuarioRequisicionCompra)
					 || (this.esRecargarFks && this.requisicioncompraConstantesFunciones.cargarid_usuarioRequisicionCompra)) {

					if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUsuario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

						finalQueryGlobalUsuario=Funciones.GetFinalQueryAppend(finalQueryGlobalUsuario, "");
						finalQueryGlobalUsuario+=UsuarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUsuario=" WHERE " + ConstantesSql.ID + "="+requisicioncompraSessionBean.getlidUsuarioActual();
					}
				} else {
					finalQueryGlobalUsuario="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.requisicioncompraConstantesFunciones.cargarid_monedaRequisicionCompra)
					 || (this.esRecargarFks && this.requisicioncompraConstantesFunciones.cargarid_monedaRequisicionCompra)) {

					if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+requisicioncompraSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalEstadoRequisicionCompra="";

				if(((this.estadorequisicioncomprasForeignKey==null||this.estadorequisicioncomprasForeignKey.size()<=0) && this.requisicioncompraConstantesFunciones.cargarid_estado_requisicion_compraRequisicionCompra)
					 || (this.esRecargarFks && this.requisicioncompraConstantesFunciones.cargarid_estado_requisicion_compraRequisicionCompra)) {

					if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoRequisicionCompra()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoRequisicionConstantesFunciones.getArrayColumnasGlobalesEstadoRequisicion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoRequisicionCompra=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoRequisicionConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoRequisicionCompra=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoRequisicionCompra, "");
						finalQueryGlobalEstadoRequisicionCompra+=EstadoRequisicionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoRequisicionComprasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoRequisicionCompra=" WHERE " + ConstantesSql.ID + "="+requisicioncompraSessionBean.getlidEstadoRequisicionCompraActual();
					}
				} else {
					finalQueryGlobalEstadoRequisicionCompra="NONE";
				}


				String finalQueryGlobalEmpleado="";

				if(((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0) && this.requisicioncompraConstantesFunciones.cargarid_empleadoRequisicionCompra)
					 || (this.esRecargarFks && this.requisicioncompraConstantesFunciones.cargarid_empleadoRequisicionCompra)) {

					if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleado, "");
						finalQueryGlobalEmpleado+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleado=" WHERE " + ConstantesSql.ID + "="+requisicioncompraSessionBean.getlidEmpleadoActual();
					}
				} else {
					finalQueryGlobalEmpleado="NONE";
				}


				String finalQueryGlobalFormato="";

				if(((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0) && this.requisicioncompraConstantesFunciones.cargarid_formatoRequisicionCompra)
					 || (this.esRecargarFks && this.requisicioncompraConstantesFunciones.cargarid_formatoRequisicionCompra)) {

					if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormato=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormato=Funciones.GetFinalQueryAppend(finalQueryGlobalFormato, "");
						finalQueryGlobalFormato+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormato=" WHERE " + ConstantesSql.ID + "="+requisicioncompraSessionBean.getlidFormatoActual();
					}
				} else {
					finalQueryGlobalFormato="NONE";
				}


				String finalQueryGlobalTipoCambio="";

				if(((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0) && this.requisicioncompraConstantesFunciones.cargarid_tipo_cambioRequisicionCompra)
					 || (this.esRecargarFks && this.requisicioncompraConstantesFunciones.cargarid_tipo_cambioRequisicionCompra)) {

					if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCambio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCambio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCambio, "");
						finalQueryGlobalTipoCambio+=TipoCambioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCambio=" WHERE " + ConstantesSql.ID + "="+requisicioncompraSessionBean.getlidTipoCambioActual();
					}
				} else {
					finalQueryGlobalTipoCambio="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				requisicioncompraReturnGeneral=requisicioncompraLogic.cargarCombosLoteForeignKeyRequisicionCompra(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalModulo,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalCliente,finalQueryGlobalUsuario,finalQueryGlobalMoneda,finalQueryGlobalEstadoRequisicionCompra,finalQueryGlobalEmpleado,finalQueryGlobalFormato,finalQueryGlobalTipoCambio);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=requisicioncompraReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=requisicioncompraReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalModulo.equals("NONE")) {
				this.modulosForeignKey=requisicioncompraReturnGeneral.getmodulosForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=requisicioncompraReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=requisicioncompraReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=requisicioncompraReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=requisicioncompraReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=requisicioncompraReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalUsuario.equals("NONE")) {
				this.usuariosForeignKey=requisicioncompraReturnGeneral.getusuariosForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=requisicioncompraReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalEstadoRequisicionCompra.equals("NONE")) {
				this.estadorequisicioncomprasForeignKey=requisicioncompraReturnGeneral.getestadorequisicioncomprasForeignKey();
			}

			if(!finalQueryGlobalEmpleado.equals("NONE")) {
				this.empleadosForeignKey=requisicioncompraReturnGeneral.getempleadosForeignKey();
			}

			if(!finalQueryGlobalFormato.equals("NONE")) {
				this.formatosForeignKey=requisicioncompraReturnGeneral.getformatosForeignKey();
			}

			if(!finalQueryGlobalTipoCambio.equals("NONE")) {
				this.tipocambiosForeignKey=requisicioncompraReturnGeneral.gettipocambiosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyRequisicionCompra()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyModulo();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyUsuario();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeyEstadoRequisicionCompra();
			this.addItemDefectoCombosForeignKeyEmpleado();
			this.addItemDefectoCombosForeignKeyFormato();
			this.addItemDefectoCombosForeignKeyTipoCambio();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyModulo()throws Exception {
		try {

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				Modulo modulo=new Modulo();
				ModuloConstantesFunciones.setModuloDescripcion(modulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				modulo.setId(null);

				if(!ModuloConstantesFunciones.ExisteEnLista(this.modulosForeignKey,modulo,true)) {

					this.modulosForeignKey.add(0,modulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUsuario()throws Exception {
		try {

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				Usuario usuario=new Usuario();
				UsuarioConstantesFunciones.setUsuarioDescripcion(usuario,Constantes.SMENSAJE_ESCOJA_OPCION);
				usuario.setId(null);

				if(!UsuarioConstantesFunciones.ExisteEnLista(this.usuariosForeignKey,usuario,true)) {

					this.usuariosForeignKey.add(0,usuario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoRequisicionCompra()throws Exception {
		try {

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoRequisicionCompra()) {
				EstadoRequisicion estadorequisicioncompra=new EstadoRequisicion();
				EstadoRequisicionConstantesFunciones.setEstadoRequisicionDescripcion(estadorequisicioncompra,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadorequisicioncompra.setId(null);

				if(!EstadoRequisicionConstantesFunciones.ExisteEnLista(this.estadorequisicioncomprasForeignKey,estadorequisicioncompra,true)) {

					this.estadorequisicioncomprasForeignKey.add(0,estadorequisicioncompra);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				Empleado empleado=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleado.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadosForeignKey,empleado,true)) {

					this.empleadosForeignKey.add(0,empleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormato()throws Exception {
		try {

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				Formato formato=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formato,Constantes.SMENSAJE_ESCOJA_OPCION);
				formato.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatosForeignKey,formato,true)) {

					this.formatosForeignKey.add(0,formato);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoCambio()throws Exception {
		try {

			if(!this.requisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				TipoCambio tipocambio=new TipoCambio();
				TipoCambioConstantesFunciones.setTipoCambioDescripcion(tipocambio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocambio.setId(null);

				if(!TipoCambioConstantesFunciones.ExisteEnLista(this.tipocambiosForeignKey,tipocambio,true)) {

					this.tipocambiosForeignKey.add(0,tipocambio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyRequisicionCompra()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyRequisicionCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyRequisicionCompra()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualModuloForeignKey(this.moduloActual.getId(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
				this.setActualUsuarioForeignKey(this.parametroGeneralUsuario.getid_usuario(),false,"Formulario");
				this.setActualMonedaForeignKey(this.parametroGeneralUsuario.getid_moneda(),false,"Formulario");
			
			
				this.requisicioncompra.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
				this.requisicioncompra.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
				this.requisicioncompra.setfecha_entrega(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyRequisicionCompra();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyRequisicionCompra(RequisicionCompra requisicioncompra)throws Exception {	
		try {
			
			this.setActualClienteForeignKey(requisicioncompra.getid_cliente(),false,"Formulario");
			this.setActualEstadoRequisicionCompraForeignKey(requisicioncompra.getid_estado_requisicion_compra(),false,"Formulario");
			this.setActualEmpleadoForeignKey(requisicioncompra.getid_empleado(),false,"Formulario");
			this.setActualFormatoForeignKey(requisicioncompra.getid_formato(),false,"Formulario");
			this.setActualTipoCambioForeignKey(requisicioncompra.getid_tipo_cambio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyRequisicionCompra(RequisicionCompra requisicioncompra,String sTipoEvento)throws Exception {	
		try {
			
			

				if(requisicioncompra.getCliente()!=null && !sTipoEvento.equals("id_clienteRequisicionCompra")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(requisicioncompra.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(requisicioncompra.getEmpleado()!=null && !sTipoEvento.equals("id_empleadoRequisicionCompra")) { //sTipoEvento Evita Bucle Infinito

					this.empleadosForeignKey=new ArrayList<Empleado>();
					this.empleadosForeignKey.add(requisicioncompra.getEmpleado());

					this.addItemDefectoCombosForeignKeyEmpleado();
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				if(requisicioncompra.getTipoCambio()!=null && !sTipoEvento.equals("id_tipo_cambioRequisicionCompra")) { //sTipoEvento Evita Bucle Infinito

					this.tipocambiosForeignKey=new ArrayList<TipoCambio>();
					this.tipocambiosForeignKey.add(requisicioncompra.getTipoCambio());

					this.addItemDefectoCombosForeignKeyTipoCambio();
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyRequisicionCompra()throws Exception {	
		try {
			
			this.setActualClienteForeignKey(this.requisicioncompraConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualEstadoRequisicionCompraForeignKey(this.requisicioncompraConstantesFunciones.getid_estado_requisicion_compra(),false,"Formulario");
			this.setActualEmpleadoForeignKey(this.requisicioncompraConstantesFunciones.getid_empleado(),false,"Formulario");
			this.setActualFormatoForeignKey(this.requisicioncompraConstantesFunciones.getid_formato(),false,"Formulario");
			this.setActualTipoCambioForeignKey(this.requisicioncompraConstantesFunciones.getid_tipo_cambio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyRequisicionCompra()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}

				this.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,"Formulario");
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyRequisicionCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyRequisicionCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroRequisicionCompra()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyRequisicionCompra()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameModulosForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameUsuariosForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameEstadoRequisicionComprasForeignKey("Todos");
			this.cargarCombosFrameEmpleadosForeignKey("Todos");
			this.cargarCombosFrameFormatosForeignKey("Todos");
			this.cargarCombosFrameTipoCambiosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyRequisicionCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUsuariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoRequisicionComprasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyRequisicionCompra()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empresaRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empresaRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empresaRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_sucursalRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_sucursalRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_sucursalRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_moduloRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_moduloRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_moduloRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_anioRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_anioRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_anioRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_mesRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_mesRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_mesRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_clienteRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_clienteRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_clienteRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_usuarioRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_usuarioRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_usuarioRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_monedaRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_monedaRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_monedaRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_estado_requisicion_compraRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_estado_requisicion_compraRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_estado_requisicion_compraRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empleadoRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empleadoRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empleadoRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_formatoRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_formatoRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_formatoRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_tipo_cambioRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_tipo_cambioRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_tipo_cambioRequisicionCompra.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	




























	
	

	public RequisicionCompraBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public RequisicionCompraBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public RequisicionCompraBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.requisicioncompraSessionBean=new RequisicionCompraSessionBean(); 
		this.requisicioncompraConstantesFunciones=new RequisicionCompraConstantesFunciones(); 
		this.requisicioncompraBean=new RequisicionCompra();//(this.requisicioncompraConstantesFunciones); 		
		this.requisicioncompraReturnGeneral=new RequisicionCompraParameterReturnGeneral(); 
		
		this.requisicioncompraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.requisicioncompraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public RequisicionCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public RequisicionCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public RequisicionCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessRequisicionCompra(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			//OBLIGA VALIDA CON GUARDAR RELACIONES, TAMBIEN EN SWING
			conGuardarRelaciones=true;
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.requisicioncompraConstantesFunciones=new RequisicionCompraConstantesFunciones(); 
			this.requisicioncompraBean=new RequisicionCompra();//this.requisicioncompraConstantesFunciones); 			
			this.requisicioncompraReturnGeneral=new RequisicionCompraParameterReturnGeneral(); 
		
			RequisicionCompraBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Requisicion Compra Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.requisicioncompra=new RequisicionCompra();
			this.requisicioncompras = new ArrayList<RequisicionCompra>();
			this.requisicioncomprasAux = new ArrayList<RequisicionCompra>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic=new RequisicionCompraLogic();
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			//this.requisicioncompraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.requisicioncompraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormRequisicionCompra);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoRequisicionCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoRequisicionCompra);	
					}
					
					if(this.jInternalFrameImportacionRequisicionCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionRequisicionCompra);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByRequisicionCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByRequisicionCompra);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormRequisicionCompra);
				this.jInternalFrameDetalleFormRequisicionCompra.setVisible(false);
				this.jInternalFrameDetalleFormRequisicionCompra.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoRequisicionCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoRequisicionCompra);
					this.jInternalFrameReporteDinamicoRequisicionCompra.setVisible(false);
					this.jInternalFrameReporteDinamicoRequisicionCompra.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionRequisicionCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionRequisicionCompra);
					this.jInternalFrameImportacionRequisicionCompra.setVisible(false);
					this.jInternalFrameImportacionRequisicionCompra.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByRequisicionCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByRequisicionCompra);
					this.jInternalFrameOrderByRequisicionCompra.setVisible(false);
					this.jInternalFrameOrderByRequisicionCompra.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idRequisicionCompraActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=RequisicionCompraConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.requisicioncompraReturnGeneral=new RequisicionCompraParameterReturnGeneral();
			
			this.requisicioncompraParameterGeneral=new RequisicionCompraParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.requisicioncompraLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(RequisicionCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(DetalleRequisicionCompraConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,RequisicionCompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.requisicioncompraSessionBean.getEsGuardarRelacionado(),this.requisicioncompraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,RequisicionCompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.requisicioncompraSessionBean.getEsGuardarRelacionado(),this.requisicioncompraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoRequisicionCompra=false;
			this.isVisibilidadCeldaDuplicarRequisicionCompra=true;
			this.isVisibilidadCeldaCopiarRequisicionCompra=true;
			this.isVisibilidadCeldaVerFormRequisicionCompra=true;
			this.isVisibilidadCeldaOrdenRequisicionCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra=false;
			this.isVisibilidadCeldaModificarRequisicionCompra=false;
			this.isVisibilidadCeldaActualizarRequisicionCompra=false;
			this.isVisibilidadCeldaEliminarRequisicionCompra=false;
			this.isVisibilidadCeldaCancelarRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarCambiosRequisicionCompra=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpleado=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoRequisicionCompra=true;
			this.isVisibilidadFK_IdFormato=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdModulo=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoCambio=true;
			this.isVisibilidadFK_IdUsuario=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesRequisicionCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosRequisicionCompra();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioRequisicionCompra(false);
			
			this.setPermisosUsuarioRequisicionCompra();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado() 
				|| (this.requisicioncompraSessionBean.getEsGuardarRelacionado() && this.requisicioncompraSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioRequisicionCompraClasesRelacionadas();
			}
			
			if(this.requisicioncompraSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioRequisicionCompraClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosRequisicionCompra();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualRequisicionCompra();
			}
			
			if(!this.isPermisoBusquedaRequisicionCompra) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasRequisicionCompra.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioRequisicionCompra,this.isPermisoPaginacionMedioRequisicionCompra,this.isPermisoPaginacionTodoRequisicionCompra);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(RequisicionCompraConstantesFunciones.getTiposSeleccionarRequisicionCompra());
				
				this.tiposColumnasSelect=RequisicionCompraConstantesFunciones.getTiposSeleccionarRequisicionCompra(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectRequisicionCompra();				
				//this.tiposRelacionesSelect=RequisicionCompraConstantesFunciones.getTiposRelacionesRequisicionCompra(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioRequisicionCompra();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioRequisicionCompra(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioRequisicionCompra(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesRequisicionCompra() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.detallerequisicioncompraLogic=new DetalleRequisicionCompraLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.moduloLogic=new ModuloLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.clienteLogic=new ClienteLogic();
			this.usuarioLogic=new UsuarioLogic();
			this.monedaLogic=new MonedaLogic();
			this.estadorequisicioncompraLogic=new EstadoRequisicionLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.formatoLogic=new FormatoLogic();
			this.tipocambioLogic=new TipoCambioLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				requisicioncompraImplementable= (RequisicionCompraImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+RequisicionCompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				requisicioncompraImplementableHome= (RequisicionCompraImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+RequisicionCompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.requisicioncompras= new ArrayList<RequisicionCompra>();
			this.requisicioncomprasEliminados= new ArrayList<RequisicionCompra>();
						
			this.isEsNuevoRequisicionCompra=false;
			this.esParaAccionDesdeFormularioRequisicionCompra=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idClienteActual=0L;
			this.idEmpleadoActual=0L;
			this.idTipoCambioActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.modulosForeignKey=new ArrayList<Modulo>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.usuariosForeignKey=new ArrayList<Usuario>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.estadorequisicioncomprasForeignKey=new ArrayList<EstadoRequisicion>() ;
			this.empleadosForeignKey=new ArrayList<Empleado>() ;
			this.formatosForeignKey=new ArrayList<Formato>() ;
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyRequisicionCompra(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroRequisicionCompra();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			RequisicionCompraBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=RequisicionCompraConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesRequisicionCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingRequisicionCompra(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioRequisicionCompra();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioRequisicionCompra();
			}
			
			RequisicionCompraBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasRequisicionCompra.getTabCount(); i++) {
					this.jTabbedPaneBusquedasRequisicionCompra.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasRequisicionCompra.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessRequisicionCompra(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga RequisicionCompra: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectRequisicionCompra() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(DetalleRequisicionCompraConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DetalleRequisicionCompraConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesRequisicionCompra")) {
				iIndex=this.jInternalFrameDetalleFormRequisicionCompra.jTabbedPaneRelacionesRequisicionCompra.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormRequisicionCompra.jTabbedPaneRelacionesRequisicionCompra.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();	
				
				

				if(sTitle.equals("Detalle Requisicion Compras")) {
					if(!DetalleRequisicionCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessRequisicionCompra();

						this.cargarParteTabPanelRelacionadaDetalleRequisicionCompra(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessRequisicionCompra();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaDetalleRequisicionCompra(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormRequisicionCompra.cargarSessionConBeanSwingJInternalFrameDetalleRequisicionCompra(false,true,iIndex);
		this.jButtonDetalleRequisicionCompraActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDetalleRequisicionCompra();

		//this.jTabbedPaneRelacionesRequisicionCompra.updateUI();
		//this.jTabbedPaneRelacionesRequisicionCompra.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesRequisicionCompra.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("DetalleRequisicionCompra")) {
				int row=this.jTableDatosRequisicionCompra.getSelectedRow();
				jButtonDetalleRequisicionCompraActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Detalle Requisicion Compra")) {

					if(this.isTienePermisosDetalleRequisicionCompra && this.requisicioncompraConstantesFunciones.mostrarDetalleRequisicionCompraRequisicionCompra && !RequisicionCompraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Detalle Requisicion Compras"+"("+DetalleRequisicionCompraConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Detalle Requisicion Compras");

						if(requisicioncompraConstantesFunciones.resaltarDetalleRequisicionCompraRequisicionCompra!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(requisicioncompraConstantesFunciones.resaltarDetalleRequisicionCompraRequisicionCompra);
						}

						jmenuItem.setEnabled(this.requisicioncompraConstantesFunciones.activarDetalleRequisicionCompraRequisicionCompra);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DetalleRequisicionCompra"));

						

						this.jInternalFrameDetalleFormRequisicionCompra.jmenuDetalleRequisicionCompra.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyRequisicionCompra(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyRequisicionCompra(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyRequisicionCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyRequisicionCompraListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyRequisicionCompra();
		
		this.cargarCombosFrameForeignKeyRequisicionCompra();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyRequisicionCompra();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyRequisicionCompra();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoRequisicionCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoRequisicionCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoRequisicionCompra();
				this.cargarCombosFrameEstadoRequisicionComprasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoRequisicionCompra(this.estadorequisicioncomprasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpleado(this.empleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormato(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormato(this.formatosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoRequisicionCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.requisicioncompraSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			
			
			if(jTableDatosRequisicionCompra.getRowCount()>=1) {
				jTableDatosRequisicionCompra.removeRowSelectionInterval(0, jTableDatosRequisicionCompra.getRowCount()-1);						
			}
			
			this.isEsNuevoRequisicionCompra=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoRequisicionCompra(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesRequisicionCompra(true);			
			//this.requisicioncompra=new RequisicionCompra();
			//this.requisicioncompra.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesRequisicionCompra(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualRequisicionCompra() ;
			
			if(RequisicionCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleRequisicionCompra(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.requisicioncompra);	
			this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);				
			
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			
			if(this.requisicioncompraSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar RequisicionCompra: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarRequisicionCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<RequisicionCompra> requisicioncomprasSeleccionados=new ArrayList<RequisicionCompra>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosRequisicionCompra.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosRequisicionCompra.getSelectedRows().length;			
			}
			
			requisicioncomprasSeleccionados=this.getRequisicionComprasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoRequisicionCompra--;			
				//RequisicionCompra requisicioncompraAux= new RequisicionCompra();			
				//requisicioncompraAux.setId(this.iIdNuevoRequisicionCompra);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//RequisicionCompra requisicioncompraOrigen=new RequisicionCompra();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(RequisicionCompra requisicioncompraOrigen : requisicioncomprasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							requisicioncompraOrigen =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							requisicioncompraOrigen =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaRequisicionCompra();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.requisicioncompra.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosRequisicionCompra(requisicioncompraOrigen,this.requisicioncompra,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.requisicioncompraLogic.getRequisicionCompras().add(this.requisicioncompraAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.requisicioncompras.add(this.requisicioncompraAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaRequisicionCompra(false);
				
				this.jTableDatosRequisicionCompra.setRowSelectionInterval(this.getIndiceNuevoRequisicionCompra(), this.getIndiceNuevoRequisicionCompra());
				
				int iLastRow =  this.jTableDatosRequisicionCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosRequisicionCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosRequisicionCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaRequisicionCompra(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<RequisicionCompra> requisicioncomprasSeleccionados=new ArrayList<RequisicionCompra>();									
		
			RequisicionCompra requisicioncompraOrigen=new RequisicionCompra();
			RequisicionCompra requisicioncompraDestino=new RequisicionCompra();
				
			requisicioncomprasSeleccionados=this.getRequisicionComprasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosRequisicionCompra.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || requisicioncomprasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosRequisicionCompra.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncompraOrigen =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						requisicioncompraOrigen =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						requisicioncompraDestino =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						requisicioncompraDestino =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				requisicioncompraOrigen =requisicioncomprasSeleccionados.get(0);
				requisicioncompraDestino =requisicioncomprasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosRequisicionCompra(requisicioncompraOrigen,requisicioncompraDestino,true,false);
				
				requisicioncompraDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(requisicioncompraDestino,requisicioncompraLogic.getRequisicionCompras());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(requisicioncompraDestino,requisicioncompras);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaRequisicionCompra(false);
				
				//this.jTableDatosRequisicionCompra.setRowSelectionInterval(this.getIndiceNuevoRequisicionCompra(), this.getIndiceNuevoRequisicionCompra());
				
				int iLastRow =  this.jTableDatosRequisicionCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosRequisicionCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosRequisicionCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaRequisicionCompra(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormRequisicionCompra.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesRequisicionCompra.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasRequisicionCompra.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesRequisicionCompra.setVisible(!isVisible);
			this.jPanelPaginacionRequisicionCompra.setVisible(!isVisible);
			this.jPanelAccionesRequisicionCompra.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameRequisicionCompra();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoRequisicionCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionRequisicionCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByRequisicionCompra();
			
			this.abrirFrameOrderByRequisicionCompra();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByRequisicionCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleRequisicionCompra(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormRequisicionCompra);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormRequisicionCompra.isMaximum()) {
					this.jInternalFrameDetalleFormRequisicionCompra.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormRequisicionCompra.setSize(this.jInternalFrameDetalleFormRequisicionCompra.iWidthFormulario,this.jInternalFrameDetalleFormRequisicionCompra.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormRequisicionCompra.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormRequisicionCompra.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormRequisicionCompra.isMaximum()) {
						this.jInternalFrameDetalleFormRequisicionCompra.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormRequisicionCompra.jContentPaneDetalleRequisicionCompra.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormRequisicionCompra.jTabbedPaneRelacionesRequisicionCompra.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormRequisicionCompra.jContentPaneDetalleRequisicionCompra.getWidth(),RequisicionCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormRequisicionCompra.jTabbedPaneRelacionesRequisicionCompra.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormRequisicionCompra.jContentPaneDetalleRequisicionCompra.getWidth(),RequisicionCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormRequisicionCompra.jTabbedPaneRelacionesRequisicionCompra.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormRequisicionCompra.jContentPaneDetalleRequisicionCompra.getWidth(),RequisicionCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(DetalleRequisicionCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDetalleRequisicionCompra();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormRequisicionCompra.setVisible(true);
	        this.jInternalFrameDetalleFormRequisicionCompra.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByRequisicionCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByRequisicionCompra==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByRequisicionCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByRequisicionCompra,false,this);
				} else {
					this.jInternalFrameOrderByRequisicionCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByRequisicionCompra,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByRequisicionCompra);
				this.jInternalFrameOrderByRequisicionCompra.setVisible(false);
				this.jInternalFrameOrderByRequisicionCompra.setSelected(false);
				
				this.jInternalFrameOrderByRequisicionCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByRequisicionCompra"));
				
				this.inicializarActualizarBindingTablaOrderByRequisicionCompra();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionRequisicionCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionRequisicionCompra==null) {
				
				this.jInternalFrameImportacionRequisicionCompra=new ImportacionJInternalFrame(RequisicionCompraConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionRequisicionCompra);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionRequisicionCompra);
				this.jInternalFrameImportacionRequisicionCompra.setVisible(false);
				this.jInternalFrameImportacionRequisicionCompra.setSelected(false);


				this.jInternalFrameImportacionRequisicionCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionRequisicionCompra"));
				this.jInternalFrameImportacionRequisicionCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionRequisicionCompra"));
				this.jInternalFrameImportacionRequisicionCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionRequisicionCompra"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoRequisicionCompra() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoRequisicionCompra==null) {
				this.jInternalFrameReporteDinamicoRequisicionCompra=new ReporteDinamicoJInternalFrame(RequisicionCompraConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoRequisicionCompra);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoRequisicionCompra);
				this.jInternalFrameReporteDinamicoRequisicionCompra.setVisible(false);
				this.jInternalFrameReporteDinamicoRequisicionCompra.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoRequisicionCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoRequisicionCompra"));
				this.jInternalFrameReporteDinamicoRequisicionCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoRequisicionCompra"));
				this.jInternalFrameReporteDinamicoRequisicionCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoRequisicionCompra"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualRequisicionCompra();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaDetalleRequisicionCompra() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.jScrollPanelDatosDetalleRequisicionCompra.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormRequisicionCompra.jContentPaneDetalleRequisicionCompra.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.jScrollPanelDatosDetalleRequisicionCompra.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.jScrollPanelDatosDetalleRequisicionCompra.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.jScrollPanelDatosDetalleRequisicionCompra.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleRequisicionCompra() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormRequisicionCompra);
			
	       	this.jInternalFrameDetalleFormRequisicionCompra.setVisible(false);
	        this.jInternalFrameDetalleFormRequisicionCompra.setSelected(false);
			
			//this.jInternalFrameDetalleFormRequisicionCompra.dispose();
			//this.jInternalFrameDetalleFormRequisicionCompra=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoRequisicionCompra() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoRequisicionCompra.setVisible(true);
	        this.jInternalFrameReporteDinamicoRequisicionCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionRequisicionCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionRequisicionCompra.setVisible(true);
	        this.jInternalFrameImportacionRequisicionCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByRequisicionCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByRequisicionCompra.setVisible(true);
	        this.jInternalFrameOrderByRequisicionCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByRequisicionCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByRequisicionCompra.setVisible(false);
	        this.jInternalFrameOrderByRequisicionCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoRequisicionCompra() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoRequisicionCompra.setVisible(false);
	        this.jInternalFrameReporteDinamicoRequisicionCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionRequisicionCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionRequisicionCompra.setVisible(false);
	        this.jInternalFrameImportacionRequisicionCompra.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarRequisicionCompra(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarRequisicionCompra(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesRequisicionCompra(true);
			//this.isEsNuevoRequisicionCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesRequisicionCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesRequisicionCompra(false) ;
			
			if(requisicioncompraSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraSessionBean.getEsGuardarRelacionado() && DetalleRequisicionCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleRequisicionCompraActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(RequisicionCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleRequisicionCompra(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualRequisicionCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaRequisicionCompraActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarRequisicionCompra(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesRequisicionCompra(true);
			//this.isEsNuevoRequisicionCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.requisicioncompra.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesRequisicionCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesRequisicionCompra(false) ;
			
			if(RequisicionCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleRequisicionCompra(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualRequisicionCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Cliente")) {
				if(!this.requisicioncompraConstantesFunciones.cargarid_clienteRequisicionCompra) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingRequisicionCompra(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("Empleado")) {
				if(!this.requisicioncompraConstantesFunciones.cargarid_empleadoRequisicionCompra) {
					this.cargarCombosEmpleadosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingRequisicionCompra(false,false);
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_empleado (id);

				this.recargarComboTablaEmpleado(this.empleadosForeignKey);

			}
			
			if(sType.equals("TipoCambio")) {
				if(!this.requisicioncompraConstantesFunciones.cargarid_tipo_cambioRequisicionCompra) {
					this.cargarCombosTipoCambiosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingRequisicionCompra(false,false);
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_tipo_cambio (id);

				this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
						
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosRequisicionCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosRequisicionCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosRequisicionCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
			
	
	public void recargarComboTablaEstadoRequisicionCompra(List<EstadoRequisicion> estadorequisicioncomprasForeignKey)throws Exception{
		TableColumn tableColumnEstadoRequisicionCompra=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDESTADOREQUISICIONCOMPRA));
		TableCellEditor tableCellEditorEstadoRequisicionCompra =tableColumnEstadoRequisicionCompra.getCellEditor();

		EstadoRequisicionTableCell estadorequisicionTableCellFk=(EstadoRequisicionTableCell)tableCellEditorEstadoRequisicionCompra;

		if(estadorequisicionTableCellFk!=null) {
			estadorequisicionTableCellFk.setestadorequisicionsForeignKey(estadorequisicioncomprasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosRequisicionCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadorequisicionTableCellFk.setRowActual(intSelectedRow);
			//estadorequisicionTableCellFk.setestadorequisicionsForeignKeyActual(estadorequisicioncomprasForeignKey);
		//}


		if(estadorequisicionTableCellFk!=null) {
			estadorequisicionTableCellFk.RecargarEstadoRequisicionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpleado(List<Empleado> empleadosForeignKey)throws Exception{
		TableColumn tableColumnEmpleado=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDEMPLEADO));
		TableCellEditor tableCellEditorEmpleado =tableColumnEmpleado.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleado;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosRequisicionCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadosForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormato(List<Formato> formatosForeignKey)throws Exception{
		TableColumn tableColumnFormato=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDFORMATO));
		TableCellEditor tableCellEditorFormato =tableColumnFormato.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormato;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosRequisicionCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatosForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoCambio(List<TipoCambio> tipocambiosForeignKey)throws Exception{
		TableColumn tableColumnTipoCambio=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDTIPOCAMBIO));
		TableCellEditor tableCellEditorTipoCambio =tableColumnTipoCambio.getCellEditor();

		TipoCambioTableCell tipocambioTableCellFk=(TipoCambioTableCell)tableCellEditorTipoCambio;

		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.settipocambiosForeignKey(tipocambiosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosRequisicionCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocambioTableCellFk.setRowActual(intSelectedRow);
			//tipocambioTableCellFk.settipocambiosForeignKeyActual(tipocambiosForeignKey);
		//}


		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.RecargarTipoCambiosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_empleado (Long id) throws Exception {
		this.setActualEmpleadoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_tipo_cambio (Long id) throws Exception {
		this.setActualTipoCambioForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesRequisicionCompra(false);
			
			//if(!this.isEsNuevoRequisicionCompra) {								
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				
			}
			
			if(this.permiteMantenimiento(this.requisicioncompra)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoRequisicionCompra=true;
					this.inicializarActualizarBindingTablaRequisicionCompra(false);
					this.isEsNuevoRequisicionCompra=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoRequisicionCompra=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoRequisicionCompra=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesRequisicionCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualRequisicionCompra(false);
				
				this.habilitarDeshabilitarControlesRequisicionCompra(false);
			
												
				
				if(RequisicionCompraJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleRequisicionCompra();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoRequisicionCompraActionPerformed(evt,requisicioncompraSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualRequisicionCompra(this.requisicioncompra,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosRequisicionCompra.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,requisicioncompraSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.requisicioncompra.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(RequisicionCompra.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RequisicionCompra.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				this.requisicioncompra.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				this.requisicioncompra.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.requisicioncompra)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((RequisicionCompraModel) this.jTableDatosRequisicionCompra.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoRequisicionCompra=true;
				this.inicializarActualizarBindingTablaRequisicionCompra(false);
				this.isEsNuevoRequisicionCompra=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesRequisicionCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualRequisicionCompra(false);
				
				this.habilitarDeshabilitarControlesRequisicionCompra(false);
				
				
				
				if(RequisicionCompraJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleRequisicionCompra();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosRequisicionCompra.getRowCount()>=1) {
				jTableDatosRequisicionCompra.removeRowSelectionInterval(0, jTableDatosRequisicionCompra.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesRequisicionCompra(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaRequisicionCompra(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesRequisicionCompra(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualRequisicionCompra(false) ;
			
			this.isEsNuevoRequisicionCompra=false;
			
			if(RequisicionCompraJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleRequisicionCompra();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingRequisicionCompra(false);
				
				//SI ES MANUAL
				if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualRequisicionCompra();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoRequisicionCompra--;			
			//RequisicionCompra requisicioncompraAux= new RequisicionCompra();			
			//requisicioncompraAux.setId(this.iIdNuevoRequisicionCompra);
			
			if(this.jInternalFrameDetalleFormRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaRequisicionCompra();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
			
			this.requisicioncompra.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.requisicioncompraLogic.getRequisicionCompras().add(this.requisicioncompraAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.requisicioncompras.add(this.requisicioncompraAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaRequisicionCompra(false);
			
			this.jTableDatosRequisicionCompra.setRowSelectionInterval(this.getIndiceNuevoRequisicionCompra(), this.getIndiceNuevoRequisicionCompra());
			
			int iLastRow =  this.jTableDatosRequisicionCompra.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosRequisicionCompra.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosRequisicionCompra.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaRequisicionCompra(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingRequisicionCompra(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingRequisicionCompra(false);
			
			//SI ES MANUAL
			if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualRequisicionCompra();
			}
			
			//this.abrirFrameTreeRequisicionCompra();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Requisicion CompraS ?", "MANTENIMIENTO DE Requisicion Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionRequisicionCompra.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralRequisicionCompra();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.requisicioncompraReturnGeneral=requisicioncompraLogic.procesarImportacionRequisicionComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.requisicioncompraParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarRequisicionCompraReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionRequisicionCompra.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionRequisicionCompra.setFileImportacion(this.jInternalFrameImportacionRequisicionCompra.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionRequisicionCompra.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionRequisicionCompra.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionRequisicionCompra.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionRequisicionCompra.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<RequisicionCompra> requisicioncomprasSeleccionados=new ArrayList<RequisicionCompra>();		

		requisicioncomprasSeleccionados=this.getRequisicionComprasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("RequisicionCompraBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"RequisicionCompraBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteRequisicionCompras("Todos",requisicioncomprasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoRequisicionCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoRequisicionCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case RequisicionCompraConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Modulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Modulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Modulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Modulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroSecuencial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroSecuencial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroSecuencial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroSecuencial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDUSUARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Usuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Usuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Usuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Usuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDESTADOREQUISICIONCOMPRA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoRequisicionCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoRequisicionCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoRequisicionCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoRequisicionCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_sponsable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_sponsable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_sponsable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_sponsable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_licitadoPor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_licitadoPor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_licitadoPor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_licitadoPor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tivoSolicitud_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tivoSolicitud_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tivoSolicitud_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tivoSolicitud_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_eaSolicitud_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_eaSolicitud_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_eaSolicitud_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_eaSolicitud_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_PARAUSODE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raUsoDe_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raUsoDe_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raUsoDe_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raUsoDe_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_garEntrega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_garEntrega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_garEntrega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_garEntrega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEntrega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEntrega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEntrega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEntrega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDFORMATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Formato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Formato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Formato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Formato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCambio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCambio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCambio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCambio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoRequisicionCompra.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case RequisicionCompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoria="id_modulo";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					sNombreCampoCategoria="numero_secuencial";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoria="id_usuario";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDESTADOREQUISICIONCOMPRA:
					sNombreCampoCategoria="id_estado_requisicion_compra";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoria="id_empleado";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE:
					sNombreCampoCategoria="responsable";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR:
					sNombreCampoCategoria="solicitado_por";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD:
					sNombreCampoCategoria="motivo_solicitud";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD:
					sNombreCampoCategoria="area_solicitud";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_PARAUSODE:
					sNombreCampoCategoria="para_uso_de";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA:
					sNombreCampoCategoria="lugar_entrega";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA:
					sNombreCampoCategoria="fecha_entrega";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoria="id_formato";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoria="id_tipo_cambio";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case RequisicionCompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoriaValor="id_modulo";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					sNombreCampoCategoriaValor="numero_secuencial";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoriaValor="id_usuario";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDESTADOREQUISICIONCOMPRA:
					sNombreCampoCategoriaValor="id_estado_requisicion_compra";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoriaValor="id_empleado";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE:
					sNombreCampoCategoriaValor="responsable";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR:
					sNombreCampoCategoriaValor="solicitado_por";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD:
					sNombreCampoCategoriaValor="motivo_solicitud";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD:
					sNombreCampoCategoriaValor="area_solicitud";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_PARAUSODE:
					sNombreCampoCategoriaValor="para_uso_de";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA:
					sNombreCampoCategoriaValor="lugar_entrega";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA:
					sNombreCampoCategoriaValor="fecha_entrega";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoriaValor="id_formato";
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoriaValor="id_tipo_cambio";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoRequisicionCompra.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoRequisicionCompra.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case RequisicionCompraConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_modulo");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Secuencial",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_secuencial");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_usuario");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDESTADOREQUISICIONCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_requisicion_compra");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Responsable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"responsable");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Solicitado Por",sNombreCampoCategoria,sNombreCampoCategoriaValor,"solicitado_por");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Motivo Solicitud",sNombreCampoCategoria,sNombreCampoCategoriaValor,"motivo_solicitud");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Area Solicitud",sNombreCampoCategoria,sNombreCampoCategoriaValor,"area_solicitud");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_PARAUSODE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Para Uso De",sNombreCampoCategoria,sNombreCampoCategoriaValor,"para_uso_de");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Lugar Entrega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"lugar_entrega");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Entrega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_entrega");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDFORMATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato");
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Cambio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_cambio");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<RequisicionCompra> requisicioncomprasSeleccionados=new ArrayList<RequisicionCompra>();		
		
		requisicioncomprasSeleccionados=this.getRequisicionComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"requisicioncompra";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("RequisicionCompras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoRequisicionCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoRequisicionCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case RequisicionCompraConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDMODULO);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getnumero_secuencial());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDUSUARIO);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getusuario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDESTADOREQUISICIONCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDESTADOREQUISICIONCOMPRA);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getestadorequisicioncompra_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDEMPLEADO);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getresponsable());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getsolicitado_por());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getmotivo_solicitud());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getarea_solicitud());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_PARAUSODE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_PARAUSODE);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getpara_uso_de());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getlugar_entrega());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getfecha_entrega());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDFORMATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDFORMATO);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.getformato_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RequisicionCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDTIPOCAMBIO);
					iRow++;

					for(RequisicionCompra requisicioncompra:requisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(requisicioncompra.gettipocambio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelRequisicionCompra(row);				
			//	iRow++;
			//}				
			
			//for(RequisicionCompra requisicioncompraAux:requisicioncomprasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelRequisicionCompra(requisicioncompraAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingRequisicionCompra(false);
			
			//SI ES MANUAL
			if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualRequisicionCompra();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingRequisicionCompra(false);
			
			//SI ES MANUAL
			if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualRequisicionCompra();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingRequisicionCompra(false);
			
			//SI ES MANUAL
			if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualRequisicionCompra();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaRequisicionCompra() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosRequisicionCompra.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosRequisicionCompra.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosRequisicionCompra.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosRequisicionCompra.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosRequisicionCompra.setMinimumSize(dimensionMinimum);
		this.jTableDatosRequisicionCompra.setMaximumSize(dimensionMaximum);
		this.jTableDatosRequisicionCompra.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingRequisicionCompra(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingRequisicionCompra(esInicializar,true);
	}
	
	public void inicializarActualizarBindingRequisicionCompra(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaRequisicionCompra(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesRequisicionCompra(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasRequisicionCompra(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesRequisicionCompra(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesRequisicionCompra(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !RequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualRequisicionCompra() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaRequisicionCompra();
		
		this.inicializarActualizarBindingBotonesManualRequisicionCompra(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualRequisicionCompra();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesRequisicionCompra() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualRequisicionCompra(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualRequisicionCompra(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosRequisicionCompra.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosRequisicionCompra.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteRequisicionCompra.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormRequisicionCompra.jCheckBoxPostAccionNuevoRequisicionCompra.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormRequisicionCompra.jCheckBoxPostAccionSinCerrarRequisicionCompra.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormRequisicionCompra.jCheckBoxPostAccionSinMensajeRequisicionCompra.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosRequisicionCompra.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosRequisicionCompra.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteRequisicionCompra.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
				this.jInternalFrameDetalleFormRequisicionCompra.jCheckBoxPostAccionNuevoRequisicionCompra.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormRequisicionCompra.jCheckBoxPostAccionSinCerrarRequisicionCompra.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormRequisicionCompra.jCheckBoxPostAccionSinMensajeRequisicionCompra.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionRequisicionCompra.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionRequisicionCompra.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxTiposAccionesFormularioRequisicionCompra.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesRequisicionCompra.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoRequisicionCompra!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesRequisicionCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesRequisicionCompra.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarRequisicionCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesRequisicionCompra.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoRequisicionCompra!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesRequisicionCompra.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralRequisicionCompra.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesRequisicionCompra(Boolean esInicializar) throws Exception {
		try	{	
			if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualRequisicionCompra(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesRequisicionCompra() throws Exception {
		try	{
			if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualRequisicionCompra();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleRequisicionCompra() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxTiposAccionesFormularioRequisicionCompra.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxTiposAccionesFormularioRequisicionCompra.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualRequisicionCompra() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesRequisicionCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesRequisicionCompra.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesRequisicionCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesRequisicionCompra.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesRequisicionCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesRequisicionCompra.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionRequisicionCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionRequisicionCompra.addItem(reporte);
			}
			
			
			if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionRequisicionCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionRequisicionCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesRequisicionCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesRequisicionCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesRequisicionCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesRequisicionCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxTiposAccionesFormularioRequisicionCompra.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxTiposAccionesFormularioRequisicionCompra.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarRequisicionCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarRequisicionCompra.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarRequisicionCompra.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualRequisicionCompra();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualRequisicionCompra() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoRequisicionCompra!=null) {
				this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoRequisicionCompra!=null) {
				this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoRequisicionCompra!=null) {
				
				if(this.jInternalFrameReporteDinamicoRequisicionCompra.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoRequisicionCompra.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoRequisicionCompra.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoRequisicionCompra.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoRequisicionCompra.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoRequisicionCompra.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=RequisicionCompraConstantesFunciones.getTiposSeleccionarRequisicionCompra(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=RequisicionCompraConstantesFunciones.getTiposSeleccionarRequisicionCompra(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoRequisicionCompra.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoRequisicionCompra.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=RequisicionCompraConstantesFunciones.getTiposSeleccionarRequisicionCompra(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoRequisicionCompra.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoRequisicionCompra.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualRequisicionCompra()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_clienteFK_IdClienteRequisicionCompra.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteRequisicionCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_empleadoFK_IdEmpleadoRequisicionCompra.getSelectedItem()!=null){this.id_empleadoFK_IdEmpleado=((Empleado)this.jComboBoxid_empleadoFK_IdEmpleadoRequisicionCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_requisicion_compraFK_IdEstadoRequisicionCompraRequisicionCompra.getSelectedItem()!=null){this.id_estado_requisicion_compraFK_IdEstadoRequisicionCompra=((EstadoRequisicion)this.jComboBoxid_estado_requisicion_compraFK_IdEstadoRequisicionCompraRequisicionCompra.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasRequisicionCompra(Boolean esInicializar) throws Exception {				
		if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualRequisicionCompra();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaRequisicionCompra() throws Exception {
		this.inicializarActualizarBindingTablaRequisicionCompra(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByRequisicionCompra() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByRequisicionCompra.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByRequisicionCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByRequisicionCompra.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByRequisicionCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByRequisicionCompra.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosRequisicionCompraOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompraOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByRequisicionCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByRequisicionCompra.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByRequisicionCompra.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaRequisicionCompra(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=requisicioncompraLogic.getRequisicionCompras().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=requisicioncompras.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosRequisicionCompra.setModel(new RequisicionCompraModel(this.requisicioncompraLogic.getRequisicionCompras(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosRequisicionCompra.setModel(new RequisicionCompraModel(this.requisicioncompras,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByRequisicionCompra!=null && this.jInternalFrameOrderByRequisicionCompra.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByRequisicionCompra();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+RequisicionCompraConstantesFunciones.SCLASSWEBTITULO,requisicioncompraConstantesFunciones.resaltarSeleccionarRequisicionCompra,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+RequisicionCompraConstantesFunciones.SCLASSWEBTITULO,requisicioncompraConstantesFunciones.resaltarSeleccionarRequisicionCompra,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_ID));

		if(this.requisicioncompraConstantesFunciones.mostraridRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.requisicioncompraConstantesFunciones.resaltaridRequisicionCompra,this.requisicioncompraConstantesFunciones.activaridRequisicionCompra,iSizeTabla,this,true,"idRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.requisicioncompraConstantesFunciones.resaltaridRequisicionCompra,this.requisicioncompraConstantesFunciones.activaridRequisicionCompra,this,true,"idRequisicionCompra","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDEMPRESA));

		if(this.requisicioncompraConstantesFunciones.mostrarid_empresaRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_empresaRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_empresaRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_empresaRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_empresaRequisicionCompra,false,"id_empresaRequisicionCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.requisicioncompraConstantesFunciones.mostrarid_sucursalRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_sucursalRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_sucursalRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_sucursalRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_sucursalRequisicionCompra,false,"id_sucursalRequisicionCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDMODULO));

		if(this.requisicioncompraConstantesFunciones.mostrarid_moduloRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_IDMODULO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ModuloTableCell(this.modulosForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_moduloRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_moduloRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new ModuloTableCell(this.modulosForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_moduloRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_moduloRequisicionCompra,false,"id_moduloRequisicionCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.requisicioncompraConstantesFunciones.mostrarid_ejercicioRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_ejercicioRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_ejercicioRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_ejercicioRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_ejercicioRequisicionCompra,false,"id_ejercicioRequisicionCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDPERIODO));

		if(this.requisicioncompraConstantesFunciones.mostrarid_periodoRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_periodoRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_periodoRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_periodoRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_periodoRequisicionCompra,false,"id_periodoRequisicionCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDANIO));

		if(this.requisicioncompraConstantesFunciones.mostrarid_anioRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_anioRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_anioRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_anioRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_anioRequisicionCompra,true,"id_anioRequisicionCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDMES));

		if(this.requisicioncompraConstantesFunciones.mostrarid_mesRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_mesRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_mesRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_mesRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_mesRequisicionCompra,true,"id_mesRequisicionCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL));

		if(this.requisicioncompraConstantesFunciones.mostrarnumero_secuencialRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.requisicioncompraConstantesFunciones.resaltarnumero_secuencialRequisicionCompra,this.requisicioncompraConstantesFunciones.activarnumero_secuencialRequisicionCompra,iSizeTabla,this,true,"numero_secuencialRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.requisicioncompraConstantesFunciones.resaltarnumero_secuencialRequisicionCompra,this.requisicioncompraConstantesFunciones.activarnumero_secuencialRequisicionCompra,this,true,"numero_secuencialRequisicionCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDCLIENTE));

		if(this.requisicioncompraConstantesFunciones.mostrarid_clienteRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_clienteRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_clienteRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_clienteRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_clienteRequisicionCompra,true,"id_clienteRequisicionCompra","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDUSUARIO));

		if(this.requisicioncompraConstantesFunciones.mostrarid_usuarioRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_IDUSUARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new UsuarioTableCell(this.usuariosForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_usuarioRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_usuarioRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new UsuarioTableCell(this.usuariosForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_usuarioRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_usuarioRequisicionCompra,false,"id_usuarioRequisicionCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDESTADOREQUISICIONCOMPRA));

		if(this.requisicioncompraConstantesFunciones.mostrarid_estado_requisicion_compraRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_IDESTADOREQUISICIONCOMPRA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoRequisicionTableCell(this.estadorequisicioncomprasForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_estado_requisicion_compraRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_estado_requisicion_compraRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new EstadoRequisicionTableCell(this.estadorequisicioncomprasForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_estado_requisicion_compraRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_estado_requisicion_compraRequisicionCompra,true,"id_estado_requisicion_compraRequisicionCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDEMPLEADO));

		if(this.requisicioncompraConstantesFunciones.mostrarid_empleadoRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_IDEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadosForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_empleadoRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_empleadoRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadosForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_empleadoRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_empleadoRequisicionCompra,true,"id_empleadoRequisicionCompra","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE));

		if(this.requisicioncompraConstantesFunciones.mostrarresponsableRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.requisicioncompraConstantesFunciones.resaltarresponsableRequisicionCompra,this.requisicioncompraConstantesFunciones.activarresponsableRequisicionCompra,iSizeTabla,this,true,"responsableRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.requisicioncompraConstantesFunciones.resaltarresponsableRequisicionCompra,this.requisicioncompraConstantesFunciones.activarresponsableRequisicionCompra,this,true,"responsableRequisicionCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR));

		if(this.requisicioncompraConstantesFunciones.mostrarsolicitado_porRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.requisicioncompraConstantesFunciones.resaltarsolicitado_porRequisicionCompra,this.requisicioncompraConstantesFunciones.activarsolicitado_porRequisicionCompra,iSizeTabla,this,true,"solicitado_porRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.requisicioncompraConstantesFunciones.resaltarsolicitado_porRequisicionCompra,this.requisicioncompraConstantesFunciones.activarsolicitado_porRequisicionCompra,this,true,"solicitado_porRequisicionCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD));

		if(this.requisicioncompraConstantesFunciones.mostrarmotivo_solicitudRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.requisicioncompraConstantesFunciones.resaltarmotivo_solicitudRequisicionCompra,this.requisicioncompraConstantesFunciones.activarmotivo_solicitudRequisicionCompra,iSizeTabla,this,true,"motivo_solicitudRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.requisicioncompraConstantesFunciones.resaltarmotivo_solicitudRequisicionCompra,this.requisicioncompraConstantesFunciones.activarmotivo_solicitudRequisicionCompra,this,true,"motivo_solicitudRequisicionCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD));

		if(this.requisicioncompraConstantesFunciones.mostrararea_solicitudRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.requisicioncompraConstantesFunciones.resaltararea_solicitudRequisicionCompra,this.requisicioncompraConstantesFunciones.activararea_solicitudRequisicionCompra,iSizeTabla,this,true,"area_solicitudRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.requisicioncompraConstantesFunciones.resaltararea_solicitudRequisicionCompra,this.requisicioncompraConstantesFunciones.activararea_solicitudRequisicionCompra,this,true,"area_solicitudRequisicionCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_PARAUSODE));

		if(this.requisicioncompraConstantesFunciones.mostrarpara_uso_deRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_PARAUSODE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.requisicioncompraConstantesFunciones.resaltarpara_uso_deRequisicionCompra,this.requisicioncompraConstantesFunciones.activarpara_uso_deRequisicionCompra,iSizeTabla,this,true,"para_uso_deRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.requisicioncompraConstantesFunciones.resaltarpara_uso_deRequisicionCompra,this.requisicioncompraConstantesFunciones.activarpara_uso_deRequisicionCompra,this,true,"para_uso_deRequisicionCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA));

		if(this.requisicioncompraConstantesFunciones.mostrarlugar_entregaRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.requisicioncompraConstantesFunciones.resaltarlugar_entregaRequisicionCompra,this.requisicioncompraConstantesFunciones.activarlugar_entregaRequisicionCompra,iSizeTabla,this,true,"lugar_entregaRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.requisicioncompraConstantesFunciones.resaltarlugar_entregaRequisicionCompra,this.requisicioncompraConstantesFunciones.activarlugar_entregaRequisicionCompra,this,true,"lugar_entregaRequisicionCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION));

		if(this.requisicioncompraConstantesFunciones.mostrardescripcionRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.requisicioncompraConstantesFunciones.resaltardescripcionRequisicionCompra,this.requisicioncompraConstantesFunciones.activardescripcionRequisicionCompra,iSizeTabla,this,true,"descripcionRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.requisicioncompraConstantesFunciones.resaltardescripcionRequisicionCompra,this.requisicioncompraConstantesFunciones.activardescripcionRequisicionCompra,this,true,"descripcionRequisicionCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,200));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,200));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,200));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,200));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,200);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION));

		if(this.requisicioncompraConstantesFunciones.mostrarfecha_emisionRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.requisicioncompraConstantesFunciones.resaltarfecha_emisionRequisicionCompra,this.requisicioncompraConstantesFunciones.activarfecha_emisionRequisicionCompra,iSizeTabla,this,true,"fecha_emisionRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.requisicioncompraConstantesFunciones.resaltarfecha_emisionRequisicionCompra,this.requisicioncompraConstantesFunciones.activarfecha_emisionRequisicionCompra,this,true,"fecha_emisionRequisicionCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA));

		if(this.requisicioncompraConstantesFunciones.mostrarfecha_entregaRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.requisicioncompraConstantesFunciones.resaltarfecha_entregaRequisicionCompra,this.requisicioncompraConstantesFunciones.activarfecha_entregaRequisicionCompra,iSizeTabla,this,true,"fecha_entregaRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.requisicioncompraConstantesFunciones.resaltarfecha_entregaRequisicionCompra,this.requisicioncompraConstantesFunciones.activarfecha_entregaRequisicionCompra,this,true,"fecha_entregaRequisicionCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,RequisicionCompraConstantesFunciones.LABEL_IDFORMATO));

		if(this.requisicioncompraConstantesFunciones.mostrarid_formatoRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RequisicionCompraConstantesFunciones.LABEL_IDFORMATO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatosForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_formatoRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_formatoRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatosForeignKey,this.requisicioncompraConstantesFunciones.resaltarid_formatoRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarid_formatoRequisicionCompra,true,"id_formatoRequisicionCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosDetalleRequisicionCompra && this.requisicioncompraConstantesFunciones.mostrarDetalleRequisicionCompraRequisicionCompra && !RequisicionCompraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Detalle Requisicion Compras");
				tableColumn.setHeaderValue("Detalle Requisicion Compras");
				tableColumn.setCellRenderer(new DetalleRequisicionCompraTableCell(requisicioncompraConstantesFunciones.resaltarDetalleRequisicionCompraRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarDetalleRequisicionCompraRequisicionCompra));
				tableColumn.setCellEditor(new DetalleRequisicionCompraTableCell(requisicioncompraConstantesFunciones.resaltarDetalleRequisicionCompraRequisicionCompra,this,this.requisicioncompraConstantesFunciones.activarDetalleRequisicionCompraRequisicionCompra));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosRequisicionCompra.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.requisicioncompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.requisicioncompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosRequisicionCompra.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				//tableColumn= new TableColumn();
				//tableColumn.setIdentifier(sLabelColumnAccion);
				//tableColumn.setHeaderValue(sLabelColumnAccion);
				//tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.requisicioncompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				//tableColumn.setCellEditor(new IdTableCell(this,false,false,this.requisicioncompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				//tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				//tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				//this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				//this.jTableDatosRequisicionCompra.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarRequisicionCompra && this.isPermisoGuardarCambiosRequisicionCompra) {
					//tableColumn= new TableColumn();
					//tableColumn.setIdentifier(Constantes2.S_ELI);
					//tableColumn.setHeaderValue(sLabelColumnAccionEli);
					//tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.requisicioncompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					//tableColumn.setCellEditor(new IdTableCell(this,false,true,this.requisicioncompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					//tableColumn.setPreferredWidth(65); 	 
					//tableColumn.setWidth(65); 	 
					//tableColumn.setMinWidth(65); 
					//tableColumn.setMaxWidth(65);
					
					//this.iWidthTableDefinicion+=65;
						
					//this.jTableDatosRequisicionCompra.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.requisicioncompraSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosRequisicionCompra.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosRequisicionCompra.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarRequisicionCompra && this.isPermisoGuardarCambiosRequisicionCompra) {
				//iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		//iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.requisicioncompraSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarRequisicionCompra && this.isPermisoGuardarCambiosRequisicionCompra) {
				////REUBICA ELIMINAR SIMPLE
				//jTableDatosRequisicionCompra.moveColumn(this.jTableDatosRequisicionCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				//iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		//jTableDatosRequisicionCompra.moveColumn(this.jTableDatosRequisicionCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.requisicioncompraSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosRequisicionCompra.moveColumn(this.jTableDatosRequisicionCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosRequisicionCompra.moveColumn(this.jTableDatosRequisicionCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosRequisicionCompra.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosRequisicionCompra.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosRequisicionCompra,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosRequisicionCompra.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosRequisicionCompra.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!RequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosRequisicionCompra.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosRequisicionCompra.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosRequisicionCompra.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=requisicioncompraLogic.getRequisicionCompras().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=requisicioncompras.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosRequisicionCompra.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosRequisicionCompra();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoRequisicionCompra=false;
					
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			
				if(this.requisicioncompraSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormRequisicionCompra==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosRequisicionCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosRequisicionCompra.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.requisicioncompra.getsType().equals("DUPLICADO")
				   || this.requisicioncompra.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoRequisicionCompra=true;
				
				} else {
					this.isEsNuevoRequisicionCompra=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
					if(this.requisicioncompra.getId()>=0 && !this.requisicioncompra.getIsNew()) {						
						this.isEsNuevoRequisicionCompra=false;
						
					} else {
						this.isEsNuevoRequisicionCompra=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoRequisicionCompra(esRelaciones);						
				
				this.seleccionarRequisicionCompra(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.requisicioncompra.getId()<0) {
					this.isEsNuevoRequisicionCompra=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarRequisicionCompra(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarRequisicionCompra(evt,rowIndex);
				}	
				
				if(this.requisicioncompraSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion RequisicionCompra: " + this.dDif); 
					}
				}								
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarRequisicionCompra(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.requisicioncompra)) {
					if(this.requisicioncompra.getId()>0) {
						this.requisicioncompra.setIsDeleted(true);
						
						this.requisicioncomprasEliminados.add(this.requisicioncompra);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.requisicioncompraLogic.getRequisicionCompras().remove(this.requisicioncompra);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.requisicioncompras.remove(this.requisicioncompra);				
					}
					
					
					((RequisicionCompraModel) this.jTableDatosRequisicionCompra.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaRequisicionCompra(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarRequisicionCompra(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoRequisicionCompra) {
			
			if(this.jInternalFrameDetalleFormRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosRequisicionCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosRequisicionCompra.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioRequisicionCompra(this.requisicioncompra);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.requisicioncompraConstantesFunciones.cargarid_empresaRequisicionCompra || this.requisicioncompraConstantesFunciones.event_dependid_empresaRequisicionCompra) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.requisicioncompra.getid_empresa());
									//this.inicializarActualizarBindingRequisicionCompra(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(requisicioncompra.getEmpresa()!=null) {
							this.empresasForeignKey.add(requisicioncompra.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.requisicioncompra.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.requisicioncompraConstantesFunciones.cargarid_sucursalRequisicionCompra || this.requisicioncompraConstantesFunciones.event_dependid_sucursalRequisicionCompra) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.requisicioncompra.getid_sucursal());
									//this.inicializarActualizarBindingRequisicionCompra(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(requisicioncompra.getSucursal()!=null) {
							this.sucursalsForeignKey.add(requisicioncompra.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.requisicioncompra.getid_sucursal(),false,"Formulario");

					//Modulo
					if(!this.requisicioncompraConstantesFunciones.cargarid_moduloRequisicionCompra || this.requisicioncompraConstantesFunciones.event_dependid_moduloRequisicionCompra) {
						//this.cargarCombosModulosForeignKeyLista(" where id="+this.requisicioncompra.getid_modulo());
									//this.inicializarActualizarBindingRequisicionCompra(false,false);
						this.modulosForeignKey=new ArrayList<Modulo>();

						if(requisicioncompra.getModulo()!=null) {
							this.modulosForeignKey.add(requisicioncompra.getModulo());
						}

						this.addItemDefectoCombosForeignKeyModulo();
						this.cargarCombosFrameModulosForeignKey("Todos");
					}
					this.setActualModuloForeignKey(this.requisicioncompra.getid_modulo(),false,"Formulario");

					//Ejercicio
					if(!this.requisicioncompraConstantesFunciones.cargarid_ejercicioRequisicionCompra || this.requisicioncompraConstantesFunciones.event_dependid_ejercicioRequisicionCompra) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.requisicioncompra.getid_ejercicio());
									//this.inicializarActualizarBindingRequisicionCompra(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(requisicioncompra.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(requisicioncompra.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.requisicioncompra.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.requisicioncompraConstantesFunciones.cargarid_periodoRequisicionCompra || this.requisicioncompraConstantesFunciones.event_dependid_periodoRequisicionCompra) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.requisicioncompra.getid_periodo());
									//this.inicializarActualizarBindingRequisicionCompra(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(requisicioncompra.getPeriodo()!=null) {
							this.periodosForeignKey.add(requisicioncompra.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.requisicioncompra.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.requisicioncompraConstantesFunciones.cargarid_anioRequisicionCompra || this.requisicioncompraConstantesFunciones.event_dependid_anioRequisicionCompra) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.requisicioncompra.getid_anio());
									//this.inicializarActualizarBindingRequisicionCompra(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(requisicioncompra.getAnio()!=null) {
							this.aniosForeignKey.add(requisicioncompra.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.requisicioncompra.getid_anio(),false,"Formulario");

					//Mes
					if(!this.requisicioncompraConstantesFunciones.cargarid_mesRequisicionCompra || this.requisicioncompraConstantesFunciones.event_dependid_mesRequisicionCompra) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.requisicioncompra.getid_mes());
									//this.inicializarActualizarBindingRequisicionCompra(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(requisicioncompra.getMes()!=null) {
							this.messForeignKey.add(requisicioncompra.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.requisicioncompra.getid_mes(),false,"Formulario");

					//Cliente
					if(!this.requisicioncompraConstantesFunciones.cargarid_clienteRequisicionCompra || this.requisicioncompraConstantesFunciones.event_dependid_clienteRequisicionCompra) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.requisicioncompra.getid_cliente());
									//this.inicializarActualizarBindingRequisicionCompra(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(requisicioncompra.getCliente()!=null) {
							this.clientesForeignKey.add(requisicioncompra.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.requisicioncompra.getid_cliente(),false,"Formulario");

					//Usuario
					if(!this.requisicioncompraConstantesFunciones.cargarid_usuarioRequisicionCompra || this.requisicioncompraConstantesFunciones.event_dependid_usuarioRequisicionCompra) {
						//this.cargarCombosUsuariosForeignKeyLista(" where id="+this.requisicioncompra.getid_usuario());
									//this.inicializarActualizarBindingRequisicionCompra(false,false);
						this.usuariosForeignKey=new ArrayList<Usuario>();

						if(requisicioncompra.getUsuario()!=null) {
							this.usuariosForeignKey.add(requisicioncompra.getUsuario());
						}

						this.addItemDefectoCombosForeignKeyUsuario();
						this.cargarCombosFrameUsuariosForeignKey("Todos");
					}
					this.setActualUsuarioForeignKey(this.requisicioncompra.getid_usuario(),false,"Formulario");

					//Moneda
					if(!this.requisicioncompraConstantesFunciones.cargarid_monedaRequisicionCompra || this.requisicioncompraConstantesFunciones.event_dependid_monedaRequisicionCompra) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.requisicioncompra.getid_moneda());
									//this.inicializarActualizarBindingRequisicionCompra(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(requisicioncompra.getMoneda()!=null) {
							this.monedasForeignKey.add(requisicioncompra.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.requisicioncompra.getid_moneda(),false,"Formulario");

					//EstadoRequisicionCompra
					if(!this.requisicioncompraConstantesFunciones.cargarid_estado_requisicion_compraRequisicionCompra || this.requisicioncompraConstantesFunciones.event_dependid_estado_requisicion_compraRequisicionCompra) {
						//this.cargarCombosEstadoRequisicionComprasForeignKeyLista(" where id="+this.requisicioncompra.getid_estado_requisicion_compra());
									//this.inicializarActualizarBindingRequisicionCompra(false,false);
						this.estadorequisicioncomprasForeignKey=new ArrayList<EstadoRequisicion>();

						if(requisicioncompra.getEstadoRequisicionCompra()!=null) {
							this.estadorequisicioncomprasForeignKey.add(requisicioncompra.getEstadoRequisicionCompra());
						}

						this.addItemDefectoCombosForeignKeyEstadoRequisicionCompra();
						this.cargarCombosFrameEstadoRequisicionComprasForeignKey("Todos");
					}
					this.setActualEstadoRequisicionCompraForeignKey(this.requisicioncompra.getid_estado_requisicion_compra(),false,"Formulario");

					//Empleado
					if(!this.requisicioncompraConstantesFunciones.cargarid_empleadoRequisicionCompra || this.requisicioncompraConstantesFunciones.event_dependid_empleadoRequisicionCompra) {
						//this.cargarCombosEmpleadosForeignKeyLista(" where id="+this.requisicioncompra.getid_empleado());
									//this.inicializarActualizarBindingRequisicionCompra(false,false);
						this.empleadosForeignKey=new ArrayList<Empleado>();

						if(requisicioncompra.getEmpleado()!=null) {
							this.empleadosForeignKey.add(requisicioncompra.getEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEmpleado();
						this.cargarCombosFrameEmpleadosForeignKey("Todos");
					}
					this.setActualEmpleadoForeignKey(this.requisicioncompra.getid_empleado(),false,"Formulario");

					//Formato
					if(!this.requisicioncompraConstantesFunciones.cargarid_formatoRequisicionCompra || this.requisicioncompraConstantesFunciones.event_dependid_formatoRequisicionCompra) {
						//this.cargarCombosFormatosForeignKeyLista(" where id="+this.requisicioncompra.getid_formato());
									//this.inicializarActualizarBindingRequisicionCompra(false,false);
						this.formatosForeignKey=new ArrayList<Formato>();

						if(requisicioncompra.getFormato()!=null) {
							this.formatosForeignKey.add(requisicioncompra.getFormato());
						}

						this.addItemDefectoCombosForeignKeyFormato();
						this.cargarCombosFrameFormatosForeignKey("Todos");
					}
					this.setActualFormatoForeignKey(this.requisicioncompra.getid_formato(),false,"Formulario");

					//TipoCambio
					if(!this.requisicioncompraConstantesFunciones.cargarid_tipo_cambioRequisicionCompra || this.requisicioncompraConstantesFunciones.event_dependid_tipo_cambioRequisicionCompra) {
						//this.cargarCombosTipoCambiosForeignKeyLista(" where id="+this.requisicioncompra.getid_tipo_cambio());
									//this.inicializarActualizarBindingRequisicionCompra(false,false);
						this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

						if(requisicioncompra.getTipoCambio()!=null) {
							this.tipocambiosForeignKey.add(requisicioncompra.getTipoCambio());
						}

						this.addItemDefectoCombosForeignKeyTipoCambio();
						this.cargarCombosFrameTipoCambiosForeignKey("Todos");
					}
					this.setActualTipoCambioForeignKey(this.requisicioncompra.getid_tipo_cambio(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesRequisicionCompra("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesRequisicionCompra(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualRequisicionCompra() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoRequisicionCompra(RequisicionCompra requisicioncompra) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoRequisicionCompra(requisicioncompra,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoRequisicionCompra(RequisicionCompra requisicioncompra,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioRequisicionCompra(requisicioncompra);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyRequisicionCompra(requisicioncompra,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyRequisicionCompra(requisicioncompra);
	}
	
	public void setVariablesObjetoActualToFormularioRequisicionCompra(RequisicionCompra requisicioncompra) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormRequisicionCompra.jLabelidRequisicionCompra.setText(requisicioncompra.getId().toString());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldnumero_secuencialRequisicionCompra.setText(requisicioncompra.getnumero_secuencial());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextArearesponsableRequisicionCompra.setText(requisicioncompra.getresponsable());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextAreasolicitado_porRequisicionCompra.setText(requisicioncompra.getsolicitado_por());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextAreamotivo_solicitudRequisicionCompra.setText(requisicioncompra.getmotivo_solicitud());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextAreaarea_solicitudRequisicionCompra.setText(requisicioncompra.getarea_solicitud());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextAreapara_uso_deRequisicionCompra.setText(requisicioncompra.getpara_uso_de());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldlugar_entregaRequisicionCompra.setText(requisicioncompra.getlugar_entrega());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextAreadescripcionRequisicionCompra.setText(requisicioncompra.getdescripcion());
			this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_emisionRequisicionCompra.setDate(requisicioncompra.getfecha_emision());
			this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_entregaRequisicionCompra.setDate(requisicioncompra.getfecha_entrega());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,RequisicionCompra requisicioncompraLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,requisicioncompraLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,RequisicionCompra requisicioncompraLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				requisicioncompraLocal=this.requisicioncompra;
			} else {
				requisicioncompraLocal=this.requisicioncompraAnterior;
			}
		}
		
		if(this.permiteMantenimiento(requisicioncompraLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoRequisicionCompra(requisicioncompraLocal,true);
					
					if(requisicioncompraSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(requisicioncompraLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(requisicioncompraLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoRequisicionCompra(RequisicionCompra requisicioncompra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualRequisicionCompra(requisicioncompra,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(requisicioncompra);
	}
	
	public void setVariablesFormularioToObjetoActualRequisicionCompra(RequisicionCompra requisicioncompra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualRequisicionCompra(requisicioncompra,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualRequisicionCompra(RequisicionCompra requisicioncompra,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormRequisicionCompra.jLabelidRequisicionCompra.getText()==null || this.jInternalFrameDetalleFormRequisicionCompra.jLabelidRequisicionCompra.getText()=="" || this.jInternalFrameDetalleFormRequisicionCompra.jLabelidRequisicionCompra.getText()=="Id") {
				this.jInternalFrameDetalleFormRequisicionCompra.jLabelidRequisicionCompra.setText("0");
			}

			if(conColumnasBase) {requisicioncompra.setId(Long.parseLong(this.jInternalFrameDetalleFormRequisicionCompra.jLabelidRequisicionCompra.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RequisicionCompraConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelIdRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			requisicioncompra.setnumero_secuencial(this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldnumero_secuencialRequisicionCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelnumero_secuencialRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			requisicioncompra.setresponsable(this.jInternalFrameDetalleFormRequisicionCompra.jTextArearesponsableRequisicionCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelresponsableRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			requisicioncompra.setsolicitado_por(this.jInternalFrameDetalleFormRequisicionCompra.jTextAreasolicitado_porRequisicionCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelsolicitado_porRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			requisicioncompra.setmotivo_solicitud(this.jInternalFrameDetalleFormRequisicionCompra.jTextAreamotivo_solicitudRequisicionCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelmotivo_solicitudRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			requisicioncompra.setarea_solicitud(this.jInternalFrameDetalleFormRequisicionCompra.jTextAreaarea_solicitudRequisicionCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelarea_solicitudRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			requisicioncompra.setpara_uso_de(this.jInternalFrameDetalleFormRequisicionCompra.jTextAreapara_uso_deRequisicionCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RequisicionCompraConstantesFunciones.LABEL_PARAUSODE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelpara_uso_deRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			requisicioncompra.setlugar_entrega(this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldlugar_entregaRequisicionCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabellugar_entregaRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			requisicioncompra.setdescripcion(this.jInternalFrameDetalleFormRequisicionCompra.jTextAreadescripcionRequisicionCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabeldescripcionRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			requisicioncompra.setfecha_emision(this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_emisionRequisicionCompra.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelfecha_emisionRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			requisicioncompra.setfecha_entrega(this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_entregaRequisicionCompra.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRequisicionCompra.jLabelfecha_entregaRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualRequisicionCompra(RequisicionCompra requisicioncompraBean,RequisicionCompra requisicioncompra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosRequisicionCompra(RequisicionCompra requisicioncompraOrigen,RequisicionCompra requisicioncompra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && requisicioncompraOrigen.getId()!=null && !requisicioncompraOrigen.getId().equals(0L))) {requisicioncompra.setId(requisicioncompraOrigen.getId());}}
			if(conDefault || (!conDefault && requisicioncompraOrigen.getnumero_secuencial()!=null && !requisicioncompraOrigen.getnumero_secuencial().equals(""))) {requisicioncompra.setnumero_secuencial(requisicioncompraOrigen.getnumero_secuencial());}
			if(conDefault || (!conDefault && requisicioncompraOrigen.gettotal()!=null && !requisicioncompraOrigen.gettotal().equals(0.0))) {requisicioncompra.settotal(requisicioncompraOrigen.gettotal());}
			if(conDefault || (!conDefault && requisicioncompraOrigen.getfecha()!=null && !requisicioncompraOrigen.getfecha().equals(new Date()))) {requisicioncompra.setfecha(requisicioncompraOrigen.getfecha());}
			if(conDefault || (!conDefault && requisicioncompraOrigen.getresponsable()!=null && !requisicioncompraOrigen.getresponsable().equals(""))) {requisicioncompra.setresponsable(requisicioncompraOrigen.getresponsable());}
			if(conDefault || (!conDefault && requisicioncompraOrigen.getsolicitado_por()!=null && !requisicioncompraOrigen.getsolicitado_por().equals(""))) {requisicioncompra.setsolicitado_por(requisicioncompraOrigen.getsolicitado_por());}
			if(conDefault || (!conDefault && requisicioncompraOrigen.getmotivo_solicitud()!=null && !requisicioncompraOrigen.getmotivo_solicitud().equals(""))) {requisicioncompra.setmotivo_solicitud(requisicioncompraOrigen.getmotivo_solicitud());}
			if(conDefault || (!conDefault && requisicioncompraOrigen.getarea_solicitud()!=null && !requisicioncompraOrigen.getarea_solicitud().equals(""))) {requisicioncompra.setarea_solicitud(requisicioncompraOrigen.getarea_solicitud());}
			if(conDefault || (!conDefault && requisicioncompraOrigen.getpara_uso_de()!=null && !requisicioncompraOrigen.getpara_uso_de().equals(""))) {requisicioncompra.setpara_uso_de(requisicioncompraOrigen.getpara_uso_de());}
			if(conDefault || (!conDefault && requisicioncompraOrigen.getlugar_entrega()!=null && !requisicioncompraOrigen.getlugar_entrega().equals(""))) {requisicioncompra.setlugar_entrega(requisicioncompraOrigen.getlugar_entrega());}
			if(conDefault || (!conDefault && requisicioncompraOrigen.getdescripcion()!=null && !requisicioncompraOrigen.getdescripcion().equals(""))) {requisicioncompra.setdescripcion(requisicioncompraOrigen.getdescripcion());}
			if(conDefault || (!conDefault && requisicioncompraOrigen.getfecha_emision()!=null && !requisicioncompraOrigen.getfecha_emision().equals(new Date()))) {requisicioncompra.setfecha_emision(requisicioncompraOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && requisicioncompraOrigen.getfecha_entrega()!=null && !requisicioncompraOrigen.getfecha_entrega().equals(new Date()))) {requisicioncompra.setfecha_entrega(requisicioncompraOrigen.getfecha_entrega());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioRequisicionCompra(RequisicionCompra requisicioncompra) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormRequisicionCompra.jLabelidRequisicionCompra.setText(requisicioncompra.getId().toString());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldnumero_secuencialRequisicionCompra.setText(requisicioncompra.getnumero_secuencial());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextArearesponsableRequisicionCompra.setText(requisicioncompra.getresponsable());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextAreasolicitado_porRequisicionCompra.setText(requisicioncompra.getsolicitado_por());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextAreamotivo_solicitudRequisicionCompra.setText(requisicioncompra.getmotivo_solicitud());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextAreaarea_solicitudRequisicionCompra.setText(requisicioncompra.getarea_solicitud());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextAreapara_uso_deRequisicionCompra.setText(requisicioncompra.getpara_uso_de());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldlugar_entregaRequisicionCompra.setText(requisicioncompra.getlugar_entrega());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextAreadescripcionRequisicionCompra.setText(requisicioncompra.getdescripcion());
			this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_emisionRequisicionCompra.setDate(requisicioncompra.getfecha_emision());
			this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_entregaRequisicionCompra.setDate(requisicioncompra.getfecha_entrega());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioRequisicionCompra(RequisicionCompraBean requisicioncompraBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormRequisicionCompra.jLabelidRequisicionCompra.setText(requisicioncompraBean.getId().toString());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldnumero_secuencialRequisicionCompra.setText(requisicioncompraBean.getnumero_secuencial());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextArearesponsableRequisicionCompra.setText(requisicioncompraBean.getresponsable());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextAreasolicitado_porRequisicionCompra.setText(requisicioncompraBean.getsolicitado_por());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextAreamotivo_solicitudRequisicionCompra.setText(requisicioncompraBean.getmotivo_solicitud());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextAreaarea_solicitudRequisicionCompra.setText(requisicioncompraBean.getarea_solicitud());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextAreapara_uso_deRequisicionCompra.setText(requisicioncompraBean.getpara_uso_de());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldlugar_entregaRequisicionCompra.setText(requisicioncompraBean.getlugar_entrega());
			this.jInternalFrameDetalleFormRequisicionCompra.jTextAreadescripcionRequisicionCompra.setText(requisicioncompraBean.getdescripcion());
			this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_emisionRequisicionCompra.setDate(requisicioncompraBean.getfecha_emision());
			this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_entregaRequisicionCompra.setDate(requisicioncompraBean.getfecha_entrega());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanRequisicionCompra(RequisicionCompraParameterReturnGeneral requisicioncompraReturnGeneral,RequisicionCompraBean requisicioncompraBean,Boolean conDefault) throws Exception { 
		try {
			RequisicionCompra requisicioncompraLocal=new RequisicionCompra();
			
			requisicioncompraLocal=requisicioncompraReturnGeneral.getRequisicionCompra();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && requisicioncompraLocal.getId()!=null && !requisicioncompraLocal.getId().equals(0L))) {requisicioncompraBean.setId(requisicioncompraLocal.getId());}}
			if(conDefault || (!conDefault && requisicioncompraLocal.getnumero_secuencial()!=null && !requisicioncompraLocal.getnumero_secuencial().equals(""))) {requisicioncompraBean.setnumero_secuencial(requisicioncompraLocal.getnumero_secuencial());}
			if(conDefault || (!conDefault && requisicioncompraLocal.getresponsable()!=null && !requisicioncompraLocal.getresponsable().equals(""))) {requisicioncompraBean.setresponsable(requisicioncompraLocal.getresponsable());}
			if(conDefault || (!conDefault && requisicioncompraLocal.getsolicitado_por()!=null && !requisicioncompraLocal.getsolicitado_por().equals(""))) {requisicioncompraBean.setsolicitado_por(requisicioncompraLocal.getsolicitado_por());}
			if(conDefault || (!conDefault && requisicioncompraLocal.getmotivo_solicitud()!=null && !requisicioncompraLocal.getmotivo_solicitud().equals(""))) {requisicioncompraBean.setmotivo_solicitud(requisicioncompraLocal.getmotivo_solicitud());}
			if(conDefault || (!conDefault && requisicioncompraLocal.getarea_solicitud()!=null && !requisicioncompraLocal.getarea_solicitud().equals(""))) {requisicioncompraBean.setarea_solicitud(requisicioncompraLocal.getarea_solicitud());}
			if(conDefault || (!conDefault && requisicioncompraLocal.getpara_uso_de()!=null && !requisicioncompraLocal.getpara_uso_de().equals(""))) {requisicioncompraBean.setpara_uso_de(requisicioncompraLocal.getpara_uso_de());}
			if(conDefault || (!conDefault && requisicioncompraLocal.getlugar_entrega()!=null && !requisicioncompraLocal.getlugar_entrega().equals(""))) {requisicioncompraBean.setlugar_entrega(requisicioncompraLocal.getlugar_entrega());}
			if(conDefault || (!conDefault && requisicioncompraLocal.getdescripcion()!=null && !requisicioncompraLocal.getdescripcion().equals(""))) {requisicioncompraBean.setdescripcion(requisicioncompraLocal.getdescripcion());}
			if(conDefault || (!conDefault && requisicioncompraLocal.getfecha_emision()!=null && !requisicioncompraLocal.getfecha_emision().equals(new Date()))) {requisicioncompraBean.setfecha_emision(requisicioncompraLocal.getfecha_emision());}
			if(conDefault || (!conDefault && requisicioncompraLocal.getfecha_entrega()!=null && !requisicioncompraLocal.getfecha_entrega().equals(new Date()))) {requisicioncompraBean.setfecha_entrega(requisicioncompraLocal.getfecha_entrega());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxRequisicionCompraGenerico(Long idRequisicionCompraSeleccionado,JComboBox jComboBoxRequisicionCompra,List<RequisicionCompra> requisicioncomprasLocal)throws Exception {
		try {
			RequisicionCompra  requisicioncompraTemp=null;

			for(RequisicionCompra requisicioncompraAux:requisicioncomprasLocal) {
				if(requisicioncompraAux.getId()!=null && requisicioncompraAux.getId().equals(idRequisicionCompraSeleccionado)) {
					requisicioncompraTemp=requisicioncompraAux;
					break;
				}
			}

			jComboBoxRequisicionCompra.setSelectedItem(requisicioncompraTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxRequisicionCompraGenerico(JComboBox jComboBoxRequisicionCompra,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxRequisicionCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxRequisicionCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxRequisicionCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxRequisicionCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxRequisicionCompra.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxRequisicionCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxRequisicionCompra.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxRequisicionCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxRequisicionCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxRequisicionCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("DetalleRequisicionCompra")) {
			jButtonDetalleRequisicionCompraActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			requisicioncompra=(RequisicionCompra) requisicioncompraLogic.getRequisicionCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			requisicioncompra =(RequisicionCompra) requisicioncompras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!requisicioncompra.getIsNew() && !requisicioncompra.getIsChanged() && !requisicioncompra.getIsDeleted()) {
				sDescripcion=requisicioncompra.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=requisicioncompra.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!requisicioncompra.getIsNew() && !requisicioncompra.getIsChanged() && !requisicioncompra.getIsDeleted()) {
				sDescripcion=requisicioncompra.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=requisicioncompra.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Modulo")) {
			//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
			if(!requisicioncompra.getIsNew() && !requisicioncompra.getIsChanged() && !requisicioncompra.getIsDeleted()) {
				sDescripcion=requisicioncompra.getmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
				sDescripcion=requisicioncompra.getmodulo_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!requisicioncompra.getIsNew() && !requisicioncompra.getIsChanged() && !requisicioncompra.getIsDeleted()) {
				sDescripcion=requisicioncompra.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=requisicioncompra.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!requisicioncompra.getIsNew() && !requisicioncompra.getIsChanged() && !requisicioncompra.getIsDeleted()) {
				sDescripcion=requisicioncompra.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=requisicioncompra.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!requisicioncompra.getIsNew() && !requisicioncompra.getIsChanged() && !requisicioncompra.getIsDeleted()) {
				sDescripcion=requisicioncompra.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=requisicioncompra.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!requisicioncompra.getIsNew() && !requisicioncompra.getIsChanged() && !requisicioncompra.getIsDeleted()) {
				sDescripcion=requisicioncompra.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=requisicioncompra.getmes_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!requisicioncompra.getIsNew() && !requisicioncompra.getIsChanged() && !requisicioncompra.getIsDeleted()) {
				sDescripcion=requisicioncompra.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=requisicioncompra.getcliente_descripcion();
			}
		}

		if(sTipo.equals("Usuario")) {
			//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
			if(!requisicioncompra.getIsNew() && !requisicioncompra.getIsChanged() && !requisicioncompra.getIsDeleted()) {
				sDescripcion=requisicioncompra.getusuario_descripcion();
			} else {
				//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
				sDescripcion=requisicioncompra.getusuario_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!requisicioncompra.getIsNew() && !requisicioncompra.getIsChanged() && !requisicioncompra.getIsDeleted()) {
				sDescripcion=requisicioncompra.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=requisicioncompra.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("EstadoRequisicionCompra")) {
			//sDescripcion=this.getActualEstadoRequisicionCompraForeignKeyDescripcion((Long)value);
			if(!requisicioncompra.getIsNew() && !requisicioncompra.getIsChanged() && !requisicioncompra.getIsDeleted()) {
				sDescripcion=requisicioncompra.getestadorequisicioncompra_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoRequisicionCompraForeignKeyDescripcion((Long)value);
				sDescripcion=requisicioncompra.getestadorequisicioncompra_descripcion();
			}
		}

		if(sTipo.equals("Empleado")) {
			//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
			if(!requisicioncompra.getIsNew() && !requisicioncompra.getIsChanged() && !requisicioncompra.getIsDeleted()) {
				sDescripcion=requisicioncompra.getempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=requisicioncompra.getempleado_descripcion();
			}
		}

		if(sTipo.equals("Formato")) {
			//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
			if(!requisicioncompra.getIsNew() && !requisicioncompra.getIsChanged() && !requisicioncompra.getIsDeleted()) {
				sDescripcion=requisicioncompra.getformato_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
				sDescripcion=requisicioncompra.getformato_descripcion();
			}
		}

		if(sTipo.equals("TipoCambio")) {
			//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
			if(!requisicioncompra.getIsNew() && !requisicioncompra.getIsChanged() && !requisicioncompra.getIsDeleted()) {
				sDescripcion=requisicioncompra.gettipocambio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
				sDescripcion=requisicioncompra.gettipocambio_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		RequisicionCompra requisicioncompraRow=new RequisicionCompra();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			requisicioncompraRow=(RequisicionCompra) requisicioncompraLogic.getRequisicionCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			requisicioncompraRow=(RequisicionCompra) requisicioncompras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonDetalleRequisicionCompraActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,RequisicionCompra requisicioncompra) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormRequisicionCompra==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra = (RequisicionCompra)this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.requisicioncompra = (RequisicionCompra)this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(requisicioncompra!=null) {
						this.requisicioncompra = requisicioncompra;
					} else {
						this.requisicioncompra = new RequisicionCompra();
					}
				}

				if(this.isTienePermisosDetalleRequisicionCompra && this.permiteMantenimiento(this.requisicioncompra)) {
					DetalleRequisicionCompraBeanSwingJInternalFrame detallerequisicioncompraBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFramePopup=new DetalleRequisicionCompraBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						detallerequisicioncompraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFramePopup;
					} else {
						detallerequisicioncompraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame;
					}

					List<RequisicionCompra> requisicioncompras=new ArrayList<RequisicionCompra>();
					requisicioncompras.add(this.requisicioncompra);
					if(!esRelacionado) {
						//detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraSessionBean.setConGuardarRelaciones(false);
						//detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					detallerequisicioncompraBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormRequisicionCompra.cargarDetalleRequisicionCompraBeanSwingJInternalFrame(requisicioncompras,this.requisicioncompra,detallerequisicioncompraBeanSwingJInternalFrame,/*conInicializar,*/detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraSessionBean.getConGuardarRelaciones(),detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraSessionBean.getEsGuardarRelacionado());
					detallerequisicioncompraBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						detallerequisicioncompraBeanSwingJInternalFrame.actualizarEstadoPanelsDetalleRequisicionCompra("no_relacionado");

						detallerequisicioncompraBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DetalleRequisicionCompraConstantesFunciones.ITAMANIOFILATABLA + (DetalleRequisicionCompraConstantesFunciones.ITAMANIOFILATABLA/2));

						detallerequisicioncompraBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
						TitledBorder titledBorderDetalleRequisicionCompra=(TitledBorder)detallerequisicioncompraBeanSwingJInternalFrame.jScrollPanelDatosDetalleRequisicionCompra.getBorder();

						titledBorderDetalleRequisicionCompra.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Detalle Requisicion Compra");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,detallerequisicioncompraBeanSwingJInternalFrame);
						}

						detallerequisicioncompraBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(detallerequisicioncompraBeanSwingJInternalFrame);

						detallerequisicioncompraBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.requisicioncompraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Detalle Requisicion Compra",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualRequisicionCompra(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoRequisicionCompra && this.isPermisoNuevoRequisicionCompra));			
			this.jButtonDuplicarRequisicionCompra.setVisible((this.isVisibilidadCeldaDuplicarRequisicionCompra && this.isPermisoDuplicarRequisicionCompra));			
			this.jButtonCopiarRequisicionCompra.setVisible((this.isVisibilidadCeldaCopiarRequisicionCompra && this.isPermisoCopiarRequisicionCompra));
			this.jButtonVerFormRequisicionCompra.setVisible((this.isVisibilidadCeldaVerFormRequisicionCompra && this.isPermisoVerFormRequisicionCompra));
			
			this.jButtonAbrirOrderByRequisicionCompra.setVisible((this.isVisibilidadCeldaOrdenRequisicionCompra && this.isPermisoOrdenRequisicionCompra));			
			
			this.jButtonNuevoRelacionesRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra && this.isPermisoNuevoRequisicionCompra));			
			this.jButtonNuevoGuardarCambiosRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoRequisicionCompra && this.isPermisoNuevoRequisicionCompra && this.isPermisoGuardarCambiosRequisicionCompra));
			
			if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonModificarRequisicionCompra.setVisible((this.isVisibilidadCeldaModificarRequisicionCompra && this.isPermisoActualizarRequisicionCompra));	
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonActualizarRequisicionCompra.setVisible((this.isVisibilidadCeldaActualizarRequisicionCompra && this.isPermisoActualizarRequisicionCompra));	
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonEliminarRequisicionCompra.setVisible((this.isVisibilidadCeldaEliminarRequisicionCompra && this.isPermisoEliminarRequisicionCompra));
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonCancelarRequisicionCompra.setVisible(this.isVisibilidadCeldaCancelarRequisicionCompra);							
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonGuardarCambiosRequisicionCompra.setVisible((this.isVisibilidadCeldaGuardarRequisicionCompra && this.isPermisoGuardarCambiosRequisicionCompra));			
			
			}
						
			this.jButtonGuardarCambiosTablaRequisicionCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosRequisicionCompra && this.isPermisoGuardarCambiosRequisicionCompra));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoRequisicionCompra && this.isPermisoNuevoRequisicionCompra));						
			this.jButtonDuplicarToolBarRequisicionCompra.setVisible((this.isVisibilidadCeldaDuplicarRequisicionCompra && this.isPermisoDuplicarRequisicionCompra));						
			this.jButtonCopiarToolBarRequisicionCompra.setVisible((this.isVisibilidadCeldaCopiarRequisicionCompra && this.isPermisoCopiarRequisicionCompra));			
			this.jButtonVerFormToolBarRequisicionCompra.setVisible((this.isVisibilidadCeldaVerFormRequisicionCompra && this.isPermisoVerFormRequisicionCompra));			
			this.jButtonAbrirOrderByToolBarRequisicionCompra.setVisible((this.isVisibilidadCeldaOrdenRequisicionCompra && this.isPermisoOrdenRequisicionCompra));
			this.jButtonNuevoRelacionesToolBarRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra && this.isPermisoNuevoRequisicionCompra));			
			this.jButtonNuevoGuardarCambiosToolBarRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoRequisicionCompra && this.isPermisoNuevoRequisicionCompra && this.isPermisoGuardarCambiosRequisicionCompra));			
			
			if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonModificarToolBarRequisicionCompra.setVisible((this.isVisibilidadCeldaModificarRequisicionCompra && this.isPermisoActualizarRequisicionCompra));	
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonActualizarToolBarRequisicionCompra.setVisible((this.isVisibilidadCeldaActualizarRequisicionCompra  && this.isPermisoActualizarRequisicionCompra));	
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonEliminarToolBarRequisicionCompra.setVisible((this.isVisibilidadCeldaEliminarRequisicionCompra && this.isPermisoEliminarRequisicionCompra));
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonCancelarToolBarRequisicionCompra.setVisible(this.isVisibilidadCeldaCancelarRequisicionCompra);				
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonGuardarCambiosToolBarRequisicionCompra.setVisible((this.isVisibilidadCeldaGuardarRequisicionCompra && this.isPermisoGuardarCambiosRequisicionCompra));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarRequisicionCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosRequisicionCompra && this.isPermisoGuardarCambiosRequisicionCompra));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoRequisicionCompra && this.isPermisoNuevoRequisicionCompra));			
			this.jMenuItemDuplicarRequisicionCompra.setVisible((this.isVisibilidadCeldaDuplicarRequisicionCompra && this.isPermisoDuplicarRequisicionCompra));			
			this.jMenuItemCopiarRequisicionCompra.setVisible((this.isVisibilidadCeldaCopiarRequisicionCompra && this.isPermisoCopiarRequisicionCompra));			
			this.jMenuItemVerFormRequisicionCompra.setVisible((this.isVisibilidadCeldaVerFormRequisicionCompra && this.isPermisoVerFormRequisicionCompra));			
			this.jMenuItemAbrirOrderByRequisicionCompra.setVisible((this.isVisibilidadCeldaOrdenRequisicionCompra && this.isPermisoOrdenRequisicionCompra));			
			//this.jMenuItemMostrarOcultarRequisicionCompra.setVisible((this.isVisibilidadCeldaOrdenRequisicionCompra && this.isPermisoOrdenRequisicionCompra));
			this.jMenuItemDetalleAbrirOrderByRequisicionCompra.setVisible((this.isVisibilidadCeldaOrdenRequisicionCompra && this.isPermisoOrdenRequisicionCompra));			
			//this.jMenuItemDetalleMostrarOcultarRequisicionCompra.setVisible((this.isVisibilidadCeldaOrdenRequisicionCompra && this.isPermisoOrdenRequisicionCompra));			
			this.jMenuItemNuevoRelacionesRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra && this.isPermisoNuevoRequisicionCompra));			
			this.jMenuItemNuevoGuardarCambiosRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoRequisicionCompra && this.isPermisoNuevoRequisicionCompra && this.isPermisoGuardarCambiosRequisicionCompra));									
			
			if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
			this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemModificarRequisicionCompra.setVisible((this.isVisibilidadCeldaModificarRequisicionCompra && this.isPermisoActualizarRequisicionCompra));	
			this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemActualizarRequisicionCompra.setVisible((this.isVisibilidadCeldaActualizarRequisicionCompra && this.isPermisoActualizarRequisicionCompra));	
			this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemEliminarRequisicionCompra.setVisible((this.isVisibilidadCeldaEliminarRequisicionCompra && this.isPermisoEliminarRequisicionCompra));
			this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemCancelarRequisicionCompra.setVisible(this.isVisibilidadCeldaCancelarRequisicionCompra);				
			}
			
			this.jMenuItemGuardarCambiosRequisicionCompra.setVisible((this.isVisibilidadCeldaGuardarRequisicionCompra && this.isPermisoGuardarCambiosRequisicionCompra));						
			this.jMenuItemGuardarCambiosTablaRequisicionCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosRequisicionCompra && this.isPermisoGuardarCambiosRequisicionCompra));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoRequisicionCompra=this.jButtonNuevoRequisicionCompra.isVisible();
			this.isVisibilidadCeldaDuplicarRequisicionCompra=this.jButtonDuplicarRequisicionCompra.isVisible();
			this.isVisibilidadCeldaCopiarRequisicionCompra=this.jButtonCopiarRequisicionCompra.isVisible();
			this.isVisibilidadCeldaVerFormRequisicionCompra=this.jButtonVerFormRequisicionCompra.isVisible();
			
			this.isVisibilidadCeldaOrdenRequisicionCompra=this.jButtonAbrirOrderByRequisicionCompra.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra=this.jButtonNuevoRelacionesRequisicionCompra.isVisible();
			this.isVisibilidadCeldaModificarRequisicionCompra=this.jButtonModificarRequisicionCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
			this.isVisibilidadCeldaActualizarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jButtonActualizarRequisicionCompra.isVisible();
			this.isVisibilidadCeldaEliminarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jButtonEliminarRequisicionCompra.isVisible();
			this.isVisibilidadCeldaCancelarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jButtonCancelarRequisicionCompra.isVisible();
			this.isVisibilidadCeldaGuardarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jButtonGuardarCambiosRequisicionCompra.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosRequisicionCompra=this.jButtonGuardarCambiosTablaRequisicionCompra.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoRequisicionCompra=this.jButtonNuevoToolBarRequisicionCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra=this.jButtonNuevoRelacionesToolBarRequisicionCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
			this.isVisibilidadCeldaModificarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jButtonModificarToolBarRequisicionCompra.isVisible();
			this.isVisibilidadCeldaActualizarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jButtonActualizarToolBarRequisicionCompra.isVisible();
			this.isVisibilidadCeldaEliminarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jButtonEliminarToolBarRequisicionCompra.isVisible();
			this.isVisibilidadCeldaCancelarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jButtonCancelarToolBarRequisicionCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarRequisicionCompra=this.jButtonGuardarCambiosToolBarRequisicionCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosRequisicionCompra=this.jButtonGuardarCambiosTablaToolBarRequisicionCompra.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoRequisicionCompra=this.jMenuItemNuevoRequisicionCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra=this.jMenuItemNuevoRelacionesRequisicionCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
			this.isVisibilidadCeldaModificarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemModificarRequisicionCompra.isVisible();
			this.isVisibilidadCeldaActualizarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemActualizarRequisicionCompra.isVisible();
			this.isVisibilidadCeldaEliminarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemEliminarRequisicionCompra.isVisible();
			this.isVisibilidadCeldaCancelarRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemCancelarRequisicionCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarRequisicionCompra=this.jMenuItemGuardarCambiosRequisicionCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosRequisicionCompra=this.jMenuItemGuardarCambiosTablaRequisicionCompra.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesRequisicionCompra(Boolean esInicializar) {
		if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {			
			if(this.requisicioncompraSessionBean.getConGuardarRelaciones()) {
				//if(this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesRequisicionCompra();
			}
			
			this.inicializarActualizarBindingBotonesManualRequisicionCompra(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualRequisicionCompra() {
		this.jButtonNuevoRequisicionCompra.setVisible(this.isPermisoNuevoRequisicionCompra);			
		this.jButtonDuplicarRequisicionCompra.setVisible(this.isPermisoDuplicarRequisicionCompra);			
		this.jButtonCopiarRequisicionCompra.setVisible(this.isPermisoCopiarRequisicionCompra);			
		this.jButtonVerFormRequisicionCompra.setVisible(this.isPermisoVerFormRequisicionCompra);			
		
		this.jButtonAbrirOrderByRequisicionCompra.setVisible(this.isPermisoOrdenRequisicionCompra);					
		
		this.jButtonNuevoRelacionesRequisicionCompra.setVisible(this.isPermisoNuevoRequisicionCompra);			
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonModificarRequisicionCompra.setVisible(this.isPermisoActualizarRequisicionCompra);	
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonActualizarRequisicionCompra.setVisible(this.isPermisoActualizarRequisicionCompra);	
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonEliminarRequisicionCompra.setVisible(this.isPermisoEliminarRequisicionCompra);
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonCancelarRequisicionCompra.setVisible(this.isVisibilidadCeldaCancelarRequisicionCompra);						
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonGuardarCambiosRequisicionCompra.setVisible(this.isPermisoGuardarCambiosRequisicionCompra);							
		}
		
		this.jButtonGuardarCambiosTablaRequisicionCompra.setVisible(this.isPermisoActualizarRequisicionCompra);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleRequisicionCompra() {
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonModificarRequisicionCompra.setVisible(this.isPermisoActualizarRequisicionCompra);	
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonActualizarRequisicionCompra.setVisible(this.isPermisoActualizarRequisicionCompra);	
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonEliminarRequisicionCompra.setVisible(this.isPermisoEliminarRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonCancelarRequisicionCompra.setVisible(this.isVisibilidadCeldaCancelarRequisicionCompra);							
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonGuardarCambiosRequisicionCompra.setVisible((this.isVisibilidadCeldaGuardarRequisicionCompra && this.isPermisoGuardarCambiosRequisicionCompra));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosRequisicionCompra() {
		if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualRequisicionCompra();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesRequisicionCompra() {
	}
	
	public void jTableDatosRequisicionCompraListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarRequisicionCompra(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.requisicioncompra.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebRequisicionCompra(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.requisicioncompraLogic.getConnexion());

				if(this.requisicioncompra.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.requisicioncompra.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.requisicioncompra.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebRequisicionCompra(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.requisicioncompraLogic.getConnexion());

				if(this.requisicioncompra.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.requisicioncompra.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.requisicioncompra.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_moduloRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomodulo=true;

			idTienePermisomodulo=this.tienePermisosUsuarioEnPaginaWebRequisicionCompra(ModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisomodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);

				this.moduloBeanSwingJInternalFrame=new ModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.moduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.moduloBeanSwingJInternalFrame.getModuloLogic().setConnexion(this.requisicioncompraLogic.getConnexion());

				if(this.requisicioncompra.getid_modulo()!=null) {
					this.moduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.moduloBeanSwingJInternalFrame.setIdActual(this.requisicioncompra.getid_modulo());
					this.moduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaModulo();
				}

				JInternalFrameBase jinternalFrame =this.moduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				TitledBorder titledBordermodulo=(TitledBorder)this.moduloBeanSwingJInternalFrame.jScrollPanelDatosModulo.getBorder();

				titledBordermodulo.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_moduloRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getid_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_modulo = "+this.requisicioncompra.getid_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebRequisicionCompra(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.requisicioncompraLogic.getConnexion());

				if(this.requisicioncompra.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.requisicioncompra.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.requisicioncompra.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebRequisicionCompra(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.requisicioncompraLogic.getConnexion());

				if(this.requisicioncompra.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.requisicioncompra.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.requisicioncompra.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebRequisicionCompra(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.requisicioncompraLogic.getConnexion());

				if(this.requisicioncompra.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.requisicioncompra.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.requisicioncompra.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebRequisicionCompra(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.requisicioncompraLogic.getConnexion());

				if(this.requisicioncompra.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.requisicioncompra.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.requisicioncompra.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_secuencialRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getnumero_secuencial()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_secuencial like '%"+this.requisicioncompra.getnumero_secuencial()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteRequisicionCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderRequisicionCompra=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosRequisicionCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebRequisicionCompra(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.requisicioncompraLogic.getConnexion());

				if(this.requisicioncompra.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.requisicioncompra.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.requisicioncompra.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_usuarioRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisousuario=true;

			idTienePermisousuario=this.tienePermisosUsuarioEnPaginaWebRequisicionCompra(UsuarioConstantesFunciones.CLASSNAME);

			if(idTienePermisousuario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);

				this.usuarioBeanSwingJInternalFrame=new UsuarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.usuarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.usuarioBeanSwingJInternalFrame.getUsuarioLogic().setConnexion(this.requisicioncompraLogic.getConnexion());

				if(this.requisicioncompra.getid_usuario()!=null) {
					this.usuarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.usuarioBeanSwingJInternalFrame.setIdActual(this.requisicioncompra.getid_usuario());
					this.usuarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUsuario();
				}

				JInternalFrameBase jinternalFrame =this.usuarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				TitledBorder titledBorderusuario=(TitledBorder)this.usuarioBeanSwingJInternalFrame.jScrollPanelDatosUsuario.getBorder();

				titledBorderusuario.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Usuario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_usuarioRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getid_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_usuario = "+this.requisicioncompra.getid_usuario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebRequisicionCompra(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.requisicioncompraLogic.getConnexion());

				if(this.requisicioncompra.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.requisicioncompra.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.requisicioncompra.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_requisicion_compraRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadorequisicioncompra=true;

			idTienePermisoestadorequisicioncompra=this.tienePermisosUsuarioEnPaginaWebRequisicionCompra(EstadoRequisicionConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadorequisicioncompra) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);

				this.estadorequisicioncompraBeanSwingJInternalFrame=new EstadoRequisicionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadorequisicioncompraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadorequisicioncompraBeanSwingJInternalFrame.getEstadoRequisicionLogic().setConnexion(this.requisicioncompraLogic.getConnexion());

				if(this.requisicioncompra.getid_estado_requisicion_compra()!=null) {
					this.estadorequisicioncompraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadorequisicioncompraBeanSwingJInternalFrame.setIdActual(this.requisicioncompra.getid_estado_requisicion_compra());
					this.estadorequisicioncompraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadorequisicioncompraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadorequisicioncompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoRequisicion();
				}

				JInternalFrameBase jinternalFrame =this.estadorequisicioncompraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				TitledBorder titledBorderestadorequisicioncompra=(TitledBorder)this.estadorequisicioncompraBeanSwingJInternalFrame.jScrollPanelDatosEstadoRequisicion.getBorder();

				titledBorderestadorequisicioncompra.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Estado Requisicion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_requisicion_compraRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getid_estado_requisicion_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_requisicion_compra = "+this.requisicioncompra.getid_estado_requisicion_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.requisicioncompra.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.requisicioncompra.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleadoRequisicionCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="Empleado";

			if(!this.sFinalQueryGeneral_empleado.equals("")) {
				this.empleadoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_empleado);
				this.empleadoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.empleadoBeanSwingJInternalFrame.procesarBusqueda(this.empleadoBeanSwingJInternalFrame.sAccionBusqueda);
				this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingEmpleado(false);
			}

			if(!this.sFinalQueryComboEmpleado.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderRequisicionCompra=null;
			TitledBorder titledBorderempleado=null;

			if(!this.jScrollPanelDatosRequisicionCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Empleado");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_empleadoRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleado=true;

			idTienePermisoempleado=this.tienePermisosUsuarioEnPaginaWebRequisicionCompra(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);

				this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.requisicioncompraLogic.getConnexion());

				if(this.requisicioncompra.getid_empleado()!=null) {
					this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoBeanSwingJInternalFrame.setIdActual(this.requisicioncompra.getid_empleado());
					this.empleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				TitledBorder titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleadoRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getid_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado = "+this.requisicioncompra.getid_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonresponsableRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getresponsable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where responsable like '%"+this.requisicioncompra.getresponsable()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsolicitado_porRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getsolicitado_por()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where solicitado_por like '%"+this.requisicioncompra.getsolicitado_por()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmotivo_solicitudRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getmotivo_solicitud()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where motivo_solicitud like '%"+this.requisicioncompra.getmotivo_solicitud()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonarea_solicitudRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getarea_solicitud()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where area_solicitud like '%"+this.requisicioncompra.getarea_solicitud()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpara_uso_deRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getpara_uso_de()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where para_uso_de like '%"+this.requisicioncompra.getpara_uso_de()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonlugar_entregaRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getlugar_entrega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where lugar_entrega like '%"+this.requisicioncompra.getlugar_entrega()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.requisicioncompra.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.requisicioncompra.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_entregaRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getfecha_entrega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_entrega = '"+Funciones2.getStringPostgresDate(this.requisicioncompra.getfecha_entrega())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formatoRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformato=true;

			idTienePermisoformato=this.tienePermisosUsuarioEnPaginaWebRequisicionCompra(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformato) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);

				this.formatoBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatoBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.requisicioncompraLogic.getConnexion());

				if(this.requisicioncompra.getid_formato()!=null) {
					this.formatoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatoBeanSwingJInternalFrame.setIdActual(this.requisicioncompra.getid_formato());
					this.formatoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				TitledBorder titledBorderformato=(TitledBorder)this.formatoBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformato.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formatoRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getid_formato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato = "+this.requisicioncompra.getid_formato().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_cambioRequisicionCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="TipoCambio";

			if(!this.sFinalQueryGeneral_tipocambio.equals("")) {
				this.tipocambioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_tipocambio);
				this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.tipocambioBeanSwingJInternalFrame.procesarBusqueda(this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda);
				this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTipoCambio(false);
			}

			if(!this.sFinalQueryComboTipoCambio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderRequisicionCompra=null;
			TitledBorder titledBordertipocambio=null;

			if(!this.jScrollPanelDatosRequisicionCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Tipo Cambio");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_tipo_cambioRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocambio=true;

			idTienePermisotipocambio=this.tienePermisosUsuarioEnPaginaWebRequisicionCompra(TipoCambioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocambio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);

				this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocambioBeanSwingJInternalFrame.getTipoCambioLogic().setConnexion(this.requisicioncompraLogic.getConnexion());

				if(this.requisicioncompra.getid_tipo_cambio()!=null) {
					this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocambioBeanSwingJInternalFrame.setIdActual(this.requisicioncompra.getid_tipo_cambio());
					this.tipocambioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCambio();
				}

				JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRequisicionCompra=(TitledBorder)this.jScrollPanelDatosRequisicionCompra.getBorder();
				TitledBorder titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderRequisicionCompra.getTitle() + " -> Tipo Cambio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_cambioRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.getrequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.requisicioncompra==null) {
						this.requisicioncompra = new RequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);
				}

				if(this.requisicioncompra.getid_tipo_cambio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_cambio = "+this.requisicioncompra.getid_tipo_cambio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRequisicionCompra(false,false);

			this.getRequisicionComprasFK_IdAnio();

			this.inicializarActualizarBindingRequisicionCompra(false);

			//if(RequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRequisicionCompra(false,false);

			this.getRequisicionComprasFK_IdCliente();

			this.inicializarActualizarBindingRequisicionCompra(false);

			//if(RequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRequisicionCompra(false,false);

			this.getRequisicionComprasFK_IdEjercicio();

			this.inicializarActualizarBindingRequisicionCompra(false);

			//if(RequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRequisicionCompra(false,false);

			this.getRequisicionComprasFK_IdEmpleado();

			this.inicializarActualizarBindingRequisicionCompra(false);

			//if(RequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRequisicionCompra(false,false);

			this.getRequisicionComprasFK_IdEmpresa();

			this.inicializarActualizarBindingRequisicionCompra(false);

			//if(RequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoRequisicionCompraRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRequisicionCompra(false,false);

			this.getRequisicionComprasFK_IdEstadoRequisicionCompra();

			this.inicializarActualizarBindingRequisicionCompra(false);

			//if(RequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRequisicionCompra(false,false);

			this.getRequisicionComprasFK_IdFormato();

			this.inicializarActualizarBindingRequisicionCompra(false);

			//if(RequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRequisicionCompra(false,false);

			this.getRequisicionComprasFK_IdMes();

			this.inicializarActualizarBindingRequisicionCompra(false);

			//if(RequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdModuloRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRequisicionCompra(false,false);

			this.getRequisicionComprasFK_IdModulo();

			this.inicializarActualizarBindingRequisicionCompra(false);

			//if(RequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRequisicionCompra(false,false);

			this.getRequisicionComprasFK_IdMoneda();

			this.inicializarActualizarBindingRequisicionCompra(false);

			//if(RequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRequisicionCompra(false,false);

			this.getRequisicionComprasFK_IdPeriodo();

			this.inicializarActualizarBindingRequisicionCompra(false);

			//if(RequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRequisicionCompra(false,false);

			this.getRequisicionComprasFK_IdSucursal();

			this.inicializarActualizarBindingRequisicionCompra(false);

			//if(RequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCambioRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRequisicionCompra(false,false);

			this.getRequisicionComprasFK_IdTipoCambio();

			this.inicializarActualizarBindingRequisicionCompra(false);

			//if(RequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUsuarioRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRequisicionCompra(false,false);

			this.getRequisicionComprasFK_IdUsuario();

			this.inicializarActualizarBindingRequisicionCompra(false);

			//if(RequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.requisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameRequisicionCompra() {
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
		

		if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
			this.jInternalFrameDetalleFormRequisicionCompra.setVisible(false);	    			
			this.jInternalFrameDetalleFormRequisicionCompra.dispose();
			this.jInternalFrameDetalleFormRequisicionCompra=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoRequisicionCompra!=null) {
			this.jInternalFrameReporteDinamicoRequisicionCompra.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoRequisicionCompra.dispose();
			this.jInternalFrameReporteDinamicoRequisicionCompra=null;
		}
		
		if(this.jInternalFrameImportacionRequisicionCompra!=null) {
			this.jInternalFrameImportacionRequisicionCompra.setVisible(false);	    			
			this.jInternalFrameImportacionRequisicionCompra.dispose();
			this.jInternalFrameImportacionRequisicionCompra=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessRequisicionCompra();
			
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			
			
			if(sTipo.equals("NuevoRequisicionCompra")) {
				jButtonNuevoRequisicionCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarRequisicionCompra")) {
				jButtonDuplicarRequisicionCompraActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarRequisicionCompra")) {
				jButtonCopiarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormRequisicionCompra")) {
				jButtonVerFormRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarRequisicionCompra")) {
				jButtonNuevoRequisicionCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarRequisicionCompra")) {
				jButtonDuplicarRequisicionCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoRequisicionCompra")) {
				jButtonNuevoRequisicionCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarRequisicionCompra")) {
				jButtonDuplicarRequisicionCompraActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesRequisicionCompra")) {
				jButtonNuevoRequisicionCompraActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarRequisicionCompra")) {
				jButtonNuevoRequisicionCompraActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesRequisicionCompra")) {
				jButtonNuevoRequisicionCompraActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarRequisicionCompra")) {
				jButtonModificarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarRequisicionCompra")) {
				jButtonModificarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarRequisicionCompra")) {
				jButtonModificarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarRequisicionCompra")) {
				jButtonActualizarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarRequisicionCompra")) {
				jButtonActualizarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarRequisicionCompra")) {
				jButtonActualizarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarRequisicionCompra")) {
				jButtonEliminarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarRequisicionCompra")) {
				jButtonEliminarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarRequisicionCompra")) {
				jButtonEliminarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarRequisicionCompra")) {
				jButtonCancelarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarRequisicionCompra")) {
				jButtonCancelarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarRequisicionCompra")) {
				jButtonCancelarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarRequisicionCompra")) {
				jButtonCerrarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarRequisicionCompra")) {
				jButtonCerrarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarRequisicionCompra")) {
				jButtonCerrarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarRequisicionCompra")) {
				jButtonMostrarOcultarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarRequisicionCompra")) {
				jButtonCancelarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosRequisicionCompra")) {
				jButtonGuardarCambiosRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarRequisicionCompra")) {
				jButtonGuardarCambiosRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarRequisicionCompra")) {
				jButtonCopiarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarRequisicionCompra")) {
				jButtonVerFormRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosRequisicionCompra")) {
				jButtonGuardarCambiosRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarRequisicionCompra")) {
				jButtonCopiarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormRequisicionCompra")) {
				jButtonVerFormRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaRequisicionCompra")) {
				jButtonGuardarCambiosRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarRequisicionCompra")) {
				jButtonGuardarCambiosRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaRequisicionCompra")) {
				jButtonGuardarCambiosRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionRequisicionCompra")) {
				jButtonRecargarInformacionRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarRequisicionCompra")) {
				jButtonRecargarInformacionRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionRequisicionCompra")) {
				jButtonRecargarInformacionRequisicionCompraActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresRequisicionCompra")) {
				jButtonAnterioresRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarRequisicionCompra")) {
				jButtonAnterioresRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreRequisicionCompra")) {
				jButtonAnterioresRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesRequisicionCompra")) {
				jButtonSiguientesRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarRequisicionCompra")) {
				jButtonSiguientesRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesRequisicionCompra")) {
				jButtonSiguientesRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByRequisicionCompra") || sTipo.equals("MenuItemDetalleAbrirOrderByRequisicionCompra")) {
				jButtonAbrirOrderByRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarRequisicionCompra") || sTipo.equals("MenuItemDetalleMostrarOcultarRequisicionCompra")) {
				jButtonMostrarOcultarRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosRequisicionCompra")) {
				jButtonNuevoGuardarCambiosRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarRequisicionCompra")) {
				jButtonNuevoGuardarCambiosRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosRequisicionCompra")) {
				jButtonNuevoGuardarCambiosRequisicionCompraActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoRequisicionCompra")) {
				jButtonCerrarReporteDinamicoRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoRequisicionCompra")) {
				jButtonGenerarReporteDinamicoRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoRequisicionCompra")) {
				
				jButtonGenerarExcelReporteDinamicoRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionRequisicionCompra")) {
				jButtonCerrarImportacionRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionRequisicionCompra")) {
				
				jButtonGenerarImportacionRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionRequisicionCompra")) {
				
				jButtonAbrirImportacionRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesRequisicionCompra")) {
				jComboBoxTiposAccionesRequisicionCompraActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesRequisicionCompra")) {
				jComboBoxTiposRelacionesRequisicionCompraActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioRequisicionCompra")) {
				jComboBoxTiposAccionesRequisicionCompraActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarRequisicionCompra")) {
				
				jComboBoxTiposSeleccionarRequisicionCompraActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralRequisicionCompra")) {
				jTextFieldValorCampoGeneralRequisicionCompraActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByRequisicionCompra")) {
				jButtonAbrirOrderByRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarRequisicionCompra")) {
				jButtonAbrirOrderByRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByRequisicionCompra")) {
				jButtonCerrarOrderByRequisicionCompraActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idRequisicionCompraBusqueda")) {
				this.jButtonidRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaRequisicionCompraUpdate")) {
				this.jButtonid_empresaRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaRequisicionCompraBusqueda")) {
				this.jButtonid_empresaRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalRequisicionCompraUpdate")) {
				this.jButtonid_sucursalRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalRequisicionCompraBusqueda")) {
				this.jButtonid_sucursalRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloRequisicionCompraUpdate")) {
				this.jButtonid_moduloRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloRequisicionCompraBusqueda")) {
				this.jButtonid_moduloRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioRequisicionCompraUpdate")) {
				this.jButtonid_ejercicioRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioRequisicionCompraBusqueda")) {
				this.jButtonid_ejercicioRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoRequisicionCompraUpdate")) {
				this.jButtonid_periodoRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoRequisicionCompraBusqueda")) {
				this.jButtonid_periodoRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioRequisicionCompraUpdate")) {
				this.jButtonid_anioRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioRequisicionCompraBusqueda")) {
				this.jButtonid_anioRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesRequisicionCompraUpdate")) {
				this.jButtonid_mesRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesRequisicionCompraBusqueda")) {
				this.jButtonid_mesRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_secuencialRequisicionCompraBusqueda")) {
				this.jButtonnumero_secuencialRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteRequisicionCompra")) {
				this.jButtonid_clienteRequisicionCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteRequisicionCompraUpdate")) {
				this.jButtonid_clienteRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteRequisicionCompraBusqueda")) {
				this.jButtonid_clienteRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioRequisicionCompraUpdate")) {
				this.jButtonid_usuarioRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioRequisicionCompraBusqueda")) {
				this.jButtonid_usuarioRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaRequisicionCompraUpdate")) {
				this.jButtonid_monedaRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaRequisicionCompraBusqueda")) {
				this.jButtonid_monedaRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_requisicion_compraRequisicionCompraUpdate")) {
				this.jButtonid_estado_requisicion_compraRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_requisicion_compraRequisicionCompraBusqueda")) {
				this.jButtonid_estado_requisicion_compraRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalRequisicionCompraBusqueda")) {
				this.jButtontotalRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaRequisicionCompraBusqueda")) {
				this.jButtonfechaRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoRequisicionCompra")) {
				this.jButtonid_empleadoRequisicionCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoRequisicionCompraUpdate")) {
				this.jButtonid_empleadoRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoRequisicionCompraBusqueda")) {
				this.jButtonid_empleadoRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("responsableRequisicionCompraBusqueda")) {
				this.jButtonresponsableRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("solicitado_porRequisicionCompraBusqueda")) {
				this.jButtonsolicitado_porRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("motivo_solicitudRequisicionCompraBusqueda")) {
				this.jButtonmotivo_solicitudRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("area_solicitudRequisicionCompraBusqueda")) {
				this.jButtonarea_solicitudRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_uso_deRequisicionCompraBusqueda")) {
				this.jButtonpara_uso_deRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("lugar_entregaRequisicionCompraBusqueda")) {
				this.jButtonlugar_entregaRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionRequisicionCompraBusqueda")) {
				this.jButtondescripcionRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionRequisicionCompraBusqueda")) {
				this.jButtonfecha_emisionRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_entregaRequisicionCompraBusqueda")) {
				this.jButtonfecha_entregaRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoRequisicionCompraUpdate")) {
				this.jButtonid_formatoRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoRequisicionCompraBusqueda")) {
				this.jButtonid_formatoRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioRequisicionCompra")) {
				this.jButtonid_tipo_cambioRequisicionCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioRequisicionCompraUpdate")) {
				this.jButtonid_tipo_cambioRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioRequisicionCompraBusqueda")) {
				this.jButtonid_tipo_cambioRequisicionCompraBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_clienteRequisicionCompra")) {
				this.jButtonid_clienteRequisicionCompraActionPerformed(evt);
			}
			else if(sTipo.equals("id_empleadoRequisicionCompra")) {
				this.jButtonid_empleadoRequisicionCompraActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdClienteRequisicionCompra")) {
				this.jButtonFK_IdClienteRequisicionCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpleadoRequisicionCompra")) {
				this.jButtonFK_IdEmpleadoRequisicionCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoRequisicionCompraRequisicionCompra")) {
				this.jButtonFK_IdEstadoRequisicionCompraRequisicionCompraActionPerformed(evt);
			}
			
			;
			
			
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessRequisicionCompra();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaRequisicionCompraActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.requisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				
				


				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RequisicionCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			RequisicionCompra requisicioncompraLocal=null;
			
			if(!this.getEsControlTabla()) {
				requisicioncompraLocal=this.requisicioncompra;
			} else {
				requisicioncompraLocal=this.requisicioncompraAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.requisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
							
				
				


				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RequisicionCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRequisicionCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraAnterior =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.requisicioncompraAnterior =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaRequisicionCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.requisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
								
						
				


				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RequisicionCompra.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.requisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
								
				
				


				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RequisicionCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRequisicionCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraAnterior =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.requisicioncompraAnterior =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.requisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRequisicionCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraAnterior =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.requisicioncompraAnterior =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRequisicionCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.requisicioncompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.requisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
							
				
				


				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RequisicionCompra.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaRequisicionCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompraAnterior =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.requisicioncompraAnterior =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRequisicionCompraActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.requisicioncompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.requisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
								
				
				


				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RequisicionCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRequisicionCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraAnterior =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.requisicioncompraAnterior =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRequisicionCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.requisicioncompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaRequisicionCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.requisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosRequisicionCompra")) {
					jCheckBoxSeleccionarTodosRequisicionCompraItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosRequisicionCompra")) {
					jCheckBoxSeleccionadosRequisicionCompraItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarRequisicionCompra")) {
					
				}
				
				


				
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RequisicionCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.requisicioncompra);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
												
				
				


				
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RequisicionCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaRequisicionCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.requisicioncompraAnterior =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.requisicioncompraAnterior =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaRequisicionCompraActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.requisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaRequisicionCompraActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.requisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RequisicionCompra.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RequisicionCompra.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.requisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.requisicioncompra);
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RequisicionCompra.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RequisicionCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRequisicionCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.requisicioncompraAnterior =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.requisicioncompraAnterior =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarRequisicionCompra")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosRequisicionCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosRequisicionCompra.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.requisicioncompra =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.requisicioncompra =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.requisicioncompra);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarRequisicionCompra")) {
				
				}
				
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarRequisicionCompra")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosRequisicionCompra.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarRequisicionCompra")) {
			
			}
			
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessRequisicionCompra();
			
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			
			if(sTipo.equals("NuevoRequisicionCompra")) {
				jButtonNuevoRequisicionCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarRequisicionCompra")) {
				jButtonDuplicarRequisicionCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarRequisicionCompra")) {
				jButtonCopiarRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormRequisicionCompra")) {
				jButtonVerFormRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesRequisicionCompra")) {
				jButtonNuevoRequisicionCompraActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarRequisicionCompra")) {
				jButtonModificarRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarRequisicionCompra")) {
				jButtonActualizarRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarRequisicionCompra")) {
				jButtonEliminarRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaRequisicionCompra")) {
				jButtonGuardarCambiosRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarRequisicionCompra")) {
				jButtonCancelarRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarRequisicionCompra")) {
				jButtonCerrarRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosRequisicionCompra")) {
				jButtonGuardarCambiosRequisicionCompraActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosRequisicionCompra")) {
				jButtonNuevoGuardarCambiosRequisicionCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByRequisicionCompra")) {
				jButtonAbrirOrderByRequisicionCompraActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionRequisicionCompra")) {
				jButtonRecargarInformacionRequisicionCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresRequisicionCompra")) {
				jButtonAnterioresRequisicionCompraActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesRequisicionCompra")) {
				jButtonSiguientesRequisicionCompraActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idRequisicionCompraBusqueda")) {
				this.jButtonidRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaRequisicionCompraUpdate")) {
				this.jButtonid_empresaRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaRequisicionCompraBusqueda")) {
				this.jButtonid_empresaRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalRequisicionCompraUpdate")) {
				this.jButtonid_sucursalRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalRequisicionCompraBusqueda")) {
				this.jButtonid_sucursalRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloRequisicionCompraUpdate")) {
				this.jButtonid_moduloRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloRequisicionCompraBusqueda")) {
				this.jButtonid_moduloRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioRequisicionCompraUpdate")) {
				this.jButtonid_ejercicioRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioRequisicionCompraBusqueda")) {
				this.jButtonid_ejercicioRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoRequisicionCompraUpdate")) {
				this.jButtonid_periodoRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoRequisicionCompraBusqueda")) {
				this.jButtonid_periodoRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioRequisicionCompraUpdate")) {
				this.jButtonid_anioRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioRequisicionCompraBusqueda")) {
				this.jButtonid_anioRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesRequisicionCompraUpdate")) {
				this.jButtonid_mesRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesRequisicionCompraBusqueda")) {
				this.jButtonid_mesRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_secuencialRequisicionCompraBusqueda")) {
				this.jButtonnumero_secuencialRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteRequisicionCompra")) {
				this.jButtonid_clienteRequisicionCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteRequisicionCompraUpdate")) {
				this.jButtonid_clienteRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteRequisicionCompraBusqueda")) {
				this.jButtonid_clienteRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioRequisicionCompraUpdate")) {
				this.jButtonid_usuarioRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioRequisicionCompraBusqueda")) {
				this.jButtonid_usuarioRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaRequisicionCompraUpdate")) {
				this.jButtonid_monedaRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaRequisicionCompraBusqueda")) {
				this.jButtonid_monedaRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_requisicion_compraRequisicionCompraUpdate")) {
				this.jButtonid_estado_requisicion_compraRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_requisicion_compraRequisicionCompraBusqueda")) {
				this.jButtonid_estado_requisicion_compraRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalRequisicionCompraBusqueda")) {
				this.jButtontotalRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaRequisicionCompraBusqueda")) {
				this.jButtonfechaRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoRequisicionCompra")) {
				this.jButtonid_empleadoRequisicionCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoRequisicionCompraUpdate")) {
				this.jButtonid_empleadoRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoRequisicionCompraBusqueda")) {
				this.jButtonid_empleadoRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("responsableRequisicionCompraBusqueda")) {
				this.jButtonresponsableRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("solicitado_porRequisicionCompraBusqueda")) {
				this.jButtonsolicitado_porRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("motivo_solicitudRequisicionCompraBusqueda")) {
				this.jButtonmotivo_solicitudRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("area_solicitudRequisicionCompraBusqueda")) {
				this.jButtonarea_solicitudRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_uso_deRequisicionCompraBusqueda")) {
				this.jButtonpara_uso_deRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("lugar_entregaRequisicionCompraBusqueda")) {
				this.jButtonlugar_entregaRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionRequisicionCompraBusqueda")) {
				this.jButtondescripcionRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionRequisicionCompraBusqueda")) {
				this.jButtonfecha_emisionRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_entregaRequisicionCompraBusqueda")) {
				this.jButtonfecha_entregaRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoRequisicionCompraUpdate")) {
				this.jButtonid_formatoRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoRequisicionCompraBusqueda")) {
				this.jButtonid_formatoRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioRequisicionCompra")) {
				this.jButtonid_tipo_cambioRequisicionCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioRequisicionCompraUpdate")) {
				this.jButtonid_tipo_cambioRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioRequisicionCompraBusqueda")) {
				this.jButtonid_tipo_cambioRequisicionCompraBusquedaActionPerformed(evt);
			}
			
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessRequisicionCompra();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameRequisicionCompra")) {
				closingInternalFrameRequisicionCompra();
				
			} else if(sTipo.equals("jButtonCancelarRequisicionCompra")) {
				JInternalFrameBase jInternalFrameDetalleFormRequisicionCompra = (JInternalFrameBase)evt.getSource();
	            	
	            RequisicionCompraBeanSwingJInternalFrame jInternalFrameParent=(RequisicionCompraBeanSwingJInternalFrame)jInternalFrameDetalleFormRequisicionCompra.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarRequisicionCompraActionPerformed(null);
			}
			
			RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.requisicioncompra,new Object(),this.requisicioncompraParameterGeneral,this.requisicioncompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormRequisicionCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormRequisicionCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormRequisicionCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.requisicioncompra)) {
			if(!esControlTabla) {
				if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);			
				}
				
				if(this.requisicioncompraSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualRequisicionCompra(this.requisicioncompra,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.requisicioncompraReturnGeneral=requisicioncompraLogic.procesarEventosRequisicionComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.requisicioncompraLogic.getRequisicionCompras(),this.requisicioncompra,this.requisicioncompraParameterGeneral,this.isEsNuevoRequisicionCompra,classes);//this.requisicioncompraLogic.getRequisicionCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanRequisicionCompra(this.requisicioncompraReturnGeneral,this.requisicioncompraBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.requisicioncompraSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanRequisicionCompra(classes,this.requisicioncompraReturnGeneral,this.requisicioncompraBean,false);
					}
						
					if(this.requisicioncompraReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyRequisicionCompra(this.requisicioncompraReturnGeneral.getRequisicionCompra());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioRequisicionCompra(this.requisicioncompraReturnGeneral.getRequisicionCompra());	
					}
						
					if(this.requisicioncompraReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioRequisicionCompra(this.requisicioncompraReturnGeneral.getRequisicionCompra(),classes);//this.requisicioncompraBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioRequisicionCompra(this.requisicioncompra,classes);//this.requisicioncompraBean);									
				}
			
				if(RequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualRequisicionCompra(this.requisicioncompra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysRequisicionCompra(this.requisicioncompra);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.requisicioncompraAnterior!=null) {
						this.requisicioncompra=this.requisicioncompraAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.requisicioncompraReturnGeneral=requisicioncompraLogic.procesarEventosRequisicionComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.requisicioncompraLogic.getRequisicionCompras(),this.requisicioncompra,this.requisicioncompraParameterGeneral,this.isEsNuevoRequisicionCompra,classes);//this.requisicioncompraLogic.getRequisicionCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.requisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.requisicioncompraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.requisicioncompraReturnGeneral.getRequisicionCompra(),requisicioncompraLogic.getRequisicionCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.requisicioncompraReturnGeneral.getRequisicionCompra(),this.requisicioncompras);
				}
				//ARCHITECTURE
				
				//this.jTableDatosRequisicionCompra.repaint();
				
				//((AbstractTableModel) this.jTableDatosRequisicionCompra.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosRequisicionCompra();
			}
		}
	}
	
	public void actualizarVisualTableDatosRequisicionCompra() throws Exception {
		
		RequisicionCompraModel requisicioncompraModel=(RequisicionCompraModel)this.jTableDatosRequisicionCompra.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			requisicioncompraModel.requisicioncompras=this.requisicioncompraLogic.getRequisicionCompras();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			requisicioncompraModel.requisicioncompras=this.requisicioncompras;
		}
		
		
		((RequisicionCompraModel) this.jTableDatosRequisicionCompra.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaRequisicionCompra() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getrequisicioncompraAnterior(),this.requisicioncompraLogic.getRequisicionCompras());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getrequisicioncompraAnterior(),this.requisicioncompras);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosRequisicionCompra();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioRequisicionCompra(RequisicionCompra requisicioncompra,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleRequisicionCompra.class)) {
					this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.setDetalleRequisicionCompras(requisicioncompra.getDetalleRequisicionCompras());
					this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.requisicioncompra,new Object(),generalEntityParameterGeneral,this.requisicioncompraReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.requisicioncompraSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=RequisicionCompraConstantesFunciones.getClassesRelationshipsOfRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=RequisicionCompraConstantesFunciones.getClassesRelationshipsFromStringsOfRequisicionCompra(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormRequisicionCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				RequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.requisicioncompra,new Object(),generalEntityParameterGeneral,this.requisicioncompraReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioRequisicionCompra(RequisicionCompraBean requisicioncompraBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleRequisicionCompra.class)) {
					this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.setDetalleRequisicionCompras(requisicioncompra.getDetalleRequisicionCompras());
					this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanRequisicionCompra(ArrayList<Classe> classes,RequisicionCompraReturnGeneral requisicioncompraReturnGeneral,RequisicionCompraBean requisicioncompraBean,Boolean conDefault) throws Exception {
		
			this.requisicioncompraBean.setDetalleRequisicionCompras(requisicioncompraReturnGeneral.getRequisicionCompra().getDetalleRequisicionCompras());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualRequisicionCompra(RequisicionCompra requisicioncompra,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleRequisicionCompra.class)) {
					requisicioncompra.setDetalleRequisicionCompras(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraBeanSwingJInternalFrame.detallerequisicioncompraLogic.getDetalleRequisicionCompras());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.requisicioncompra)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormRequisicionCompra = new RequisicionCompraDetalleFormJInternalFrame(jDesktopPane,this.requisicioncompraSessionBean.getConGuardarRelaciones(),this.requisicioncompraSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.setVisible(false);
		this.jInternalFrameDetalleFormRequisicionCompra.setSelected(false);						
		
		this.jInternalFrameDetalleFormRequisicionCompra.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormRequisicionCompra.requisicioncompraLogic=this.requisicioncompraLogic;
		
		this.cargarCombosFrameForeignKeyRequisicionCompra("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleRequisicionCompra();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleRequisicionCompra();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyRequisicionCompra("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyRequisicionCompra();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormRequisicionCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarRequisicionCompra"));
		
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonModificarRequisicionCompra.addActionListener(new ButtonActionListener(this,"ModificarRequisicionCompra"));

		
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonModificarToolBarRequisicionCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarRequisicionCompra"));
					
		this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemModificarRequisicionCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarRequisicionCompra"));		
		
		
		
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonActualizarRequisicionCompra.addActionListener (new ButtonActionListener(this,"ActualizarRequisicionCompra"));
		
		
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonActualizarToolBarRequisicionCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarRequisicionCompra"));
						
		this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemActualizarRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarRequisicionCompra"));		
		
		
		
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonEliminarRequisicionCompra.addActionListener (new ButtonActionListener(this,"EliminarRequisicionCompra"));
		
		
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonEliminarToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarRequisicionCompra"));
								
		this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemEliminarRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarRequisicionCompra"));		
		
		
		
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonCancelarRequisicionCompra.addActionListener (new ButtonActionListener(this,"CancelarRequisicionCompra"));
		
		
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonCancelarToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarRequisicionCompra"));
					
		this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemCancelarRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarRequisicionCompra"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemDetalleCerrarRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarRequisicionCompra"));		
		
		
		
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonGuardarCambiosToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarRequisicionCompra"));
		
		
		
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonGuardarCambiosToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarRequisicionCompra"));
		
		
		
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxTiposAccionesFormularioRequisicionCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioRequisicionCompra"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonidRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"idRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empresaRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empresaRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_sucursalRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_sucursalRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_moduloRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_moduloRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_ejercicioRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_ejercicioRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_periodoRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_periodoRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_anioRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_anioRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_mesRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_mesRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonnumero_secuencialRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialRequisicionCompraBusqueda"));
		//jButtonid_clienteRequisicionCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteRequisicionCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_clienteRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_clienteRequisicionCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_clienteRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_clienteRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_clienteRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_usuarioRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_usuarioRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_monedaRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_monedaRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_monedaRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_estado_requisicion_compraRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_requisicion_compraRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_estado_requisicion_compraRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_requisicion_compraRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtontotalRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"totalRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonfechaRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"fechaRequisicionCompraBusqueda"));
		//jButtonid_empleadoRequisicionCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoRequisicionCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empleadoRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_empleadoRequisicionCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empleadoRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empleadoRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonresponsableRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"responsableRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonsolicitado_porRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"solicitado_porRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonmotivo_solicitudRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"motivo_solicitudRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonarea_solicitudRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"area_solicitudRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonpara_uso_deRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"para_uso_deRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonlugar_entregaRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"lugar_entregaRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtondescripcionRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonfecha_emisionRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonfecha_entregaRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_formatoRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formatoRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_formatoRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoRequisicionCompraBusqueda"));
		//jButtonid_tipo_cambioRequisicionCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioRequisicionCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_tipo_cambioRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioRequisicionCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_tipo_cambioRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_tipo_cambioRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioRequisicionCompraBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormRequisicionCompra.jTabbedPaneRelacionesRequisicionCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesRequisicionCompra"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameRequisicionCompra"));
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRequisicionCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarRequisicionCompra"));
		}
		
		this.jTableDatosRequisicionCompra.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarRequisicionCompra"));
		
		this.jTableDatosRequisicionCompra.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarRequisicionCompra"));
		
		this.jButtonNuevoRequisicionCompra.addActionListener(new ButtonActionListener(this,"NuevoRequisicionCompra"));
		
		this.jButtonDuplicarRequisicionCompra.addActionListener(new ButtonActionListener(this,"DuplicarRequisicionCompra"));
		
		this.jButtonCopiarRequisicionCompra.addActionListener(new ButtonActionListener(this,"CopiarRequisicionCompra"));
		
		this.jButtonVerFormRequisicionCompra.addActionListener(new ButtonActionListener(this,"VerFormRequisicionCompra"));
		
		
		this.jButtonNuevoToolBarRequisicionCompra.addActionListener(new ButtonActionListener(this,"NuevoToolBarRequisicionCompra"));
			
		this.jButtonDuplicarToolBarRequisicionCompra.addActionListener(new ButtonActionListener(this,"DuplicarToolBarRequisicionCompra"));
			
		this.jMenuItemNuevoRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoRequisicionCompra"));
			
		this.jMenuItemDuplicarRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarRequisicionCompra"));		
		
		
		this.jButtonNuevoRelacionesRequisicionCompra.addActionListener (new ButtonActionListener(this,"NuevoRelacionesRequisicionCompra"));
		
		
		this.jButtonNuevoRelacionesToolBarRequisicionCompra.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarRequisicionCompra"));
			
		this.jMenuItemNuevoRelacionesRequisicionCompra.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesRequisicionCompra"));		
		
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonModificarRequisicionCompra.addActionListener(new ButtonActionListener(this,"ModificarRequisicionCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonModificarToolBarRequisicionCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarRequisicionCompra"));
			
			this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemModificarRequisicionCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarRequisicionCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonActualizarRequisicionCompra.addActionListener (new ButtonActionListener(this,"ActualizarRequisicionCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonActualizarToolBarRequisicionCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarRequisicionCompra"));
				
			this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemActualizarRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarRequisicionCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonEliminarRequisicionCompra.addActionListener (new ButtonActionListener(this,"EliminarRequisicionCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonEliminarToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarRequisicionCompra"));
						
			this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemEliminarRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarRequisicionCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonCancelarRequisicionCompra.addActionListener (new ButtonActionListener(this,"CancelarRequisicionCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonCancelarToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarRequisicionCompra"));
			
			this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemCancelarRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarRequisicionCompra"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarRequisicionCompra"));		
		
		
		this.jButtonCerrarRequisicionCompra.addActionListener (new ButtonActionListener(this,"CerrarRequisicionCompra"));
		
		
		this.jButtonCerrarToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"CerrarToolBarRequisicionCompra"));
			
		this.jMenuItemCerrarRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemCerrarRequisicionCompra"));
			
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRequisicionCompra.jMenuItemDetalleCerrarRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarRequisicionCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonGuardarCambiosRequisicionCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosRequisicionCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonGuardarCambiosToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarRequisicionCompra"));
		}
		
		this.jButtonCopiarToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"CopiarToolBarRequisicionCompra"));
			
		this.jButtonVerFormToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"VerFormToolBarRequisicionCompra"));
		
		this.jMenuItemGuardarCambiosRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosRequisicionCompra"));
			
		this.jMenuItemCopiarRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemCopiarRequisicionCompra"));		
		
		this.jMenuItemVerFormRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemVerFormRequisicionCompra"));		
		
		
		this.jButtonGuardarCambiosTablaRequisicionCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaRequisicionCompra"));
		
		
		this.jButtonGuardarCambiosTablaToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarRequisicionCompra"));
			
		this.jMenuItemGuardarCambiosTablaRequisicionCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaRequisicionCompra"));		
		
		
		
		this.jButtonRecargarInformacionRequisicionCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionRequisicionCompra"));
					
		this.jButtonRecargarInformacionToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarRequisicionCompra"));
		
		this.jMenuItemRecargarInformacionRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionRequisicionCompra"));		
		
		
		
		this.jButtonAnterioresRequisicionCompra.addActionListener (new ButtonActionListener(this,"AnterioresRequisicionCompra"));
		
		
		this.jButtonAnterioresToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"AnterioresToolBarRequisicionCompra"));
		
		this.jMenuItemAnterioresRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresRequisicionCompra"));		
		
		
		this.jButtonSiguientesRequisicionCompra.addActionListener (new ButtonActionListener(this,"SiguientesRequisicionCompra"));
		
		
		this.jButtonSiguientesToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"SiguientesToolBarRequisicionCompra"));
			
		this.jMenuItemSiguientesRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesRequisicionCompra"));
			
		this.jMenuItemAbrirOrderByRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByRequisicionCompra"));
			
		this.jMenuItemMostrarOcultarRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarRequisicionCompra"));
			
		this.jMenuItemDetalleAbrirOrderByRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByRequisicionCompra"));
			
		this.jMenuItemDetalleMostarOcultarRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarRequisicionCompra"));		
		
		
		this.jButtonNuevoGuardarCambiosRequisicionCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosRequisicionCompra"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarRequisicionCompra"));
			
		this.jMenuItemNuevoGuardarCambiosRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosRequisicionCompra"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosRequisicionCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosRequisicionCompra"));

		this.jCheckBoxSeleccionadosRequisicionCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionadosRequisicionCompra"));
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxTiposAccionesFormularioRequisicionCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioRequisicionCompra"));
		}
		
		
		this.jComboBoxTiposRelacionesRequisicionCompra.addActionListener (new ButtonActionListener(this,"TiposRelacionesRequisicionCompra"));
			
		this.jComboBoxTiposAccionesRequisicionCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesRequisicionCompra"));
					
		this.jComboBoxTiposSeleccionarRequisicionCompra.addActionListener (new ButtonActionListener(this,"TiposSeleccionarRequisicionCompra"));
			
		this.jTextFieldValorCampoGeneralRequisicionCompra.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralRequisicionCompra"));		
		
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonidRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"idRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empresaRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empresaRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_sucursalRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_sucursalRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_moduloRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_moduloRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_ejercicioRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_ejercicioRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_periodoRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_periodoRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_anioRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_anioRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_mesRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_mesRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonnumero_secuencialRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialRequisicionCompraBusqueda"));
		//jButtonid_clienteRequisicionCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteRequisicionCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_clienteRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_clienteRequisicionCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_clienteRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_clienteRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_clienteRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_usuarioRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_usuarioRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_monedaRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_monedaRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_monedaRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_estado_requisicion_compraRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_requisicion_compraRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_estado_requisicion_compraRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_requisicion_compraRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtontotalRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"totalRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonfechaRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"fechaRequisicionCompraBusqueda"));
		//jButtonid_empleadoRequisicionCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoRequisicionCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empleadoRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_empleadoRequisicionCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empleadoRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empleadoRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonresponsableRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"responsableRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonsolicitado_porRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"solicitado_porRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonmotivo_solicitudRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"motivo_solicitudRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonarea_solicitudRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"area_solicitudRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonpara_uso_deRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"para_uso_deRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonlugar_entregaRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"lugar_entregaRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtondescripcionRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonfecha_emisionRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonfecha_entregaRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_formatoRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formatoRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_formatoRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoRequisicionCompraBusqueda"));
		//jButtonid_tipo_cambioRequisicionCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioRequisicionCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_tipo_cambioRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioRequisicionCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_tipo_cambioRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_tipo_cambioRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioRequisicionCompraBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdClienteRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdClienteRequisicionCompra"));

			this.jButtonBuscarFK_IdClienteid_clienteRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_clienteRequisicionCompra"));

			this.jButtonFK_IdEmpleadoRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoRequisicionCompra"));

			this.jButtonBuscarFK_IdEmpleadoid_empleadoRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_empleadoRequisicionCompra"));

			this.jButtonFK_IdEstadoRequisicionCompraRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoRequisicionCompraRequisicionCompra"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoRequisicionCompra!=null) {
				this.jInternalFrameReporteDinamicoRequisicionCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoRequisicionCompra"));
				this.jInternalFrameReporteDinamicoRequisicionCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoRequisicionCompra"));
				this.jInternalFrameReporteDinamicoRequisicionCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoRequisicionCompra"));
			}
			
			//this.jButtonCerrarReporteDinamicoRequisicionCompra.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoRequisicionCompra"));				
			//this.jButtonGenerarReporteDinamicoRequisicionCompra.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoRequisicionCompra"));
			//this.jButtonGenerarExcelReporteDinamicoRequisicionCompra.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoRequisicionCompra"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionRequisicionCompra!=null) {
				this.jInternalFrameImportacionRequisicionCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionRequisicionCompra"));
				this.jInternalFrameImportacionRequisicionCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionRequisicionCompra"));
				this.jInternalFrameImportacionRequisicionCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionRequisicionCompra"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByRequisicionCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByRequisicionCompra"));
			
			this.jButtonAbrirOrderByToolBarRequisicionCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarRequisicionCompra"));			
			
			if(this.jInternalFrameOrderByRequisicionCompra!=null) {
				this.jInternalFrameOrderByRequisicionCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByRequisicionCompra"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRequisicionCompra.jTabbedPaneRelacionesRequisicionCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesRequisicionCompra"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameRequisicionCompra();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormRequisicionCompra.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormRequisicionCompra = (JInternalFrameBase)event.getSource();
	            	
	            RequisicionCompraBeanSwingJInternalFrame jInternalFrameParent=(RequisicionCompraBeanSwingJInternalFrame)jInternalFrameDetalleFormRequisicionCompra.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarRequisicionCompraActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosRequisicionCompra.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosRequisicionCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosRequisicionCompra.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosRequisicionCompra.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoRequisicionCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoRequisicionCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoRequisicionCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRequisicionCompra";
		inputMap = this.jButtonNuevoRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoRequisicionCompraActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoRequisicionCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoRequisicionCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoRequisicionCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesRequisicionCompra";
		inputMap = this.jButtonNuevoRelacionesRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoRequisicionCompraActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarRequisicionCompra";
		inputMap = this.jButtonModificarRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarRequisicionCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarRequisicionCompra";
		inputMap = this.jButtonActualizarRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarRequisicionCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarRequisicionCompra";
		inputMap = this.jButtonEliminarRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarRequisicionCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarRequisicionCompra";
		inputMap = this.jButtonCancelarRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarRequisicionCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarRequisicionCompra";
		inputMap = this.jButtonCerrarRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarRequisicionCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonGuardarCambiosRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosRequisicionCompra";
		inputMap = this.jInternalFrameDetalleFormRequisicionCompra.jButtonGuardarCambiosRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonGuardarCambiosRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosRequisicionCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosRequisicionCompra.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosRequisicionCompraItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesRequisicionCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesRequisicionCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarRequisicionCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarRequisicionCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralRequisicionCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralRequisicionCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonidRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"idRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empresaRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empresaRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_sucursalRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_sucursalRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_moduloRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_moduloRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_ejercicioRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_ejercicioRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_periodoRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_periodoRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_anioRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_anioRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_mesRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_mesRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonnumero_secuencialRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialRequisicionCompraBusqueda"));
		//jButtonid_clienteRequisicionCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteRequisicionCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_clienteRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_clienteRequisicionCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_clienteRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_clienteRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_clienteRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_usuarioRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_usuarioRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_monedaRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_monedaRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_monedaRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_estado_requisicion_compraRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_requisicion_compraRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_estado_requisicion_compraRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_requisicion_compraRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtontotalRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"totalRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonfechaRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"fechaRequisicionCompraBusqueda"));
		//jButtonid_empleadoRequisicionCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoRequisicionCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empleadoRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_empleadoRequisicionCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empleadoRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empleadoRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonresponsableRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"responsableRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonsolicitado_porRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"solicitado_porRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonmotivo_solicitudRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"motivo_solicitudRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonarea_solicitudRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"area_solicitudRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonpara_uso_deRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"para_uso_deRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonlugar_entregaRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"lugar_entregaRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtondescripcionRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonfecha_emisionRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonfecha_entregaRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_formatoRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formatoRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_formatoRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoRequisicionCompraBusqueda"));
		//jButtonid_tipo_cambioRequisicionCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioRequisicionCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_tipo_cambioRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioRequisicionCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_tipo_cambioRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_tipo_cambioRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioRequisicionCompraBusqueda"));
		
		
		this.jButtonFK_IdClienteRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdClienteRequisicionCompra"));

		this.jButtonBuscarFK_IdClienteid_clienteRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_clienteRequisicionCompra"));

		this.jButtonFK_IdEmpleadoRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoRequisicionCompra"));

		this.jButtonBuscarFK_IdEmpleadoid_empleadoRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_empleadoRequisicionCompra"));

		this.jButtonFK_IdEstadoRequisicionCompraRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoRequisicionCompraRequisicionCompra"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarRequisicionCompraActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarRequisicionCompra.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosRequisicionCompra(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(RequisicionCompra requisicioncompraAux:this.requisicioncompraLogic.getRequisicionCompras()) {
					requisicioncompraAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(RequisicionCompra requisicioncompraAux:requisicioncompras) {
					requisicioncompraAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosRequisicionCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingRequisicionCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(RequisicionCompra requisicioncompraAux:this.requisicioncompraLogic.getRequisicionCompras()) {
						requisicioncompraAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(RequisicionCompra requisicioncompraAux:requisicioncompras) {
						requisicioncompraAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(RequisicionCompra requisicioncompraAux:this.requisicioncompraLogic.getRequisicionCompras()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(RequisicionCompra requisicioncompraAux:requisicioncompras) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaRequisicionCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosRequisicionCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosRequisicionCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosRequisicionCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingRequisicionCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosRequisicionCompra.getSelectedRows();
			
			RequisicionCompra requisicioncompraLocal=new RequisicionCompra();
			
			//this.seleccionarTodosRequisicionCompra(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLocal =(RequisicionCompra) this.requisicioncompraLogic.getRequisicionCompras().toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					requisicioncompraLocal =(RequisicionCompra) this.requisicioncompras.toArray()[this.jTableDatosRequisicionCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				requisicioncompraLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(RequisicionCompra requisicioncompraAux:this.requisicioncompraLogic.getRequisicionCompras()) {
						requisicioncompraAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(RequisicionCompra requisicioncompraAux:requisicioncompras) {
						requisicioncompraAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaRequisicionCompra(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosRequisicionCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosRequisicionCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosRequisicionCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualRequisicionCompraItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarRequisicionCompraParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralRequisicionCompraActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingRequisicionCompra(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralRequisicionCompra.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(RequisicionCompra requisicioncompraAux:this.requisicioncompraLogic.getRequisicionCompras()) {
				
						if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
							existe=true;
							requisicioncompraAux.setnumero_secuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							requisicioncompraAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							requisicioncompraAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE)) {
							existe=true;
							requisicioncompraAux.setresponsable(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR)) {
							existe=true;
							requisicioncompraAux.setsolicitado_por(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD)) {
							existe=true;
							requisicioncompraAux.setmotivo_solicitud(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD)) {
							existe=true;
							requisicioncompraAux.setarea_solicitud(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_PARAUSODE)) {
							existe=true;
							requisicioncompraAux.setpara_uso_de(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA)) {
							existe=true;
							requisicioncompraAux.setlugar_entrega(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							requisicioncompraAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							requisicioncompraAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA)) {
							existe=true;
							requisicioncompraAux.setfecha_entrega(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(RequisicionCompra requisicioncompraAux:requisicioncompras) {
					
						if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
							existe=true;
							requisicioncompraAux.setnumero_secuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							requisicioncompraAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							requisicioncompraAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE)) {
							existe=true;
							requisicioncompraAux.setresponsable(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR)) {
							existe=true;
							requisicioncompraAux.setsolicitado_por(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD)) {
							existe=true;
							requisicioncompraAux.setmotivo_solicitud(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD)) {
							existe=true;
							requisicioncompraAux.setarea_solicitud(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_PARAUSODE)) {
							existe=true;
							requisicioncompraAux.setpara_uso_de(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA)) {
							existe=true;
							requisicioncompraAux.setlugar_entrega(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							requisicioncompraAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							requisicioncompraAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA)) {
							existe=true;
							requisicioncompraAux.setfecha_entrega(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaRequisicionCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesRequisicionCompraActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingRequisicionCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioRequisicionCompra=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesRequisicionCompra.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxTiposAccionesFormularioRequisicionCompra.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteRequisicionCompra) {				
					conSplash=true;//false;										
					
					//this.startProcessRequisicionCompra(conSplash);
				
					this.generarReporteRequisicionComprasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesRequisicionCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxTiposAccionesFormularioRequisicionCompra.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoRequisicionComprasSeleccionados();
				//this.jComboBoxTiposAccionesRequisicionCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoRequisicionComprasSeleccionados(false);
				//this.jComboBoxTiposAccionesRequisicionCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoRequisicionComprasSeleccionados(true);
				//this.jComboBoxTiposAccionesRequisicionCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessRequisicionCompra();
				
				this.exportarRequisicionComprasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesRequisicionCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxTiposAccionesFormularioRequisicionCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionRequisicionCompras();
				//this.importarRequisicionCompras();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesRequisicionCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxTiposAccionesFormularioRequisicionCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessRequisicionCompra();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelRequisicionComprasSeleccionados();
				//this.jComboBoxTiposAccionesRequisicionCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Requisicion Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessRequisicionCompra();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoRequisicionCompra)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyRequisicionCompra(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesRequisicionCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxTiposAccionesFormularioRequisicionCompra.setSelectedIndex(0);					
				}	
			} 			
			else if(RequisicionCompraBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteRequisicionCompra) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessRequisicionCompra(conSplash);
					
						//this.actualizarParametrosGeneralRequisicionCompra();
						
						this.generarReporteProcesoAccionRequisicionComprasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesRequisicionCompra.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxTiposAccionesFormularioRequisicionCompra.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(RequisicionCompraBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Requisicion CompraS SELECCIONADOS?", "MANTENIMIENTO DE Requisicion Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessRequisicionCompra();
				
						this.actualizarParametrosGeneralRequisicionCompra();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.requisicioncompraReturnGeneral=requisicioncompraLogic.procesarAccionRequisicionComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.requisicioncompraLogic.getRequisicionCompras(),this.requisicioncompraParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarRequisicionCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesRequisicionCompra.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxTiposAccionesFormularioRequisicionCompra.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralRequisicionCompra();
					
					RequisicionCompraBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarRequisicionCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesRequisicionCompra.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxTiposAccionesFormularioRequisicionCompra.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessRequisicionCompra(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesRequisicionCompraActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessRequisicionCompra();
			
			if(this.jInternalFrameDetalleFormRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<RequisicionCompra> requisicioncomprasSeleccionados=new ArrayList<RequisicionCompra>();		
			RequisicionCompra requisicioncompra=new RequisicionCompra();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingRequisicionCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesRequisicionCompra.getSelectedItem();
			
			
			
			
			requisicioncomprasSeleccionados=this.getRequisicionComprasSeleccionados(true);
			//this.sTipoAccion;
			
			if(requisicioncomprasSeleccionados.size()==1) {
				for(RequisicionCompra requisicioncompraAux:requisicioncomprasSeleccionados) {
					requisicioncompra=requisicioncompraAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Detalle Requisicion Compra")) {
					jButtonDetalleRequisicionCompraActionPerformed(null,rowIndex,true,false,requisicioncompra);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessRequisicionCompra();
			
      		//this.finishProcessRequisicionCompra(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarRequisicionCompraReturnGeneral() throws Exception {
		if(this.requisicioncompraReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.requisicioncompraReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.requisicioncompraReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.requisicioncompraReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.requisicioncompraReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.requisicioncompraReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingRequisicionCompra(false);
		}
		
		if(this.requisicioncompraReturnGeneral.getConRetornoLista() || this.requisicioncompraReturnGeneral.getConRetornoObjeto()) {
			if(this.requisicioncompraReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.requisicioncompraLogic.setRequisicionCompras(this.requisicioncompraReturnGeneral.getRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.requisicioncompraReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.requisicioncompraLogic.setRequisicionCompra(this.requisicioncompraReturnGeneral.getRequisicionCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingRequisicionCompra(false);
		}
	}
	
	public void actualizarParametrosGeneralRequisicionCompra() throws Exception {
		
		
	}
	
	public ArrayList<RequisicionCompra> getRequisicionComprasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<RequisicionCompra> requisicioncomprasSeleccionados=new ArrayList<RequisicionCompra>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioRequisicionCompra) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(RequisicionCompra requisicioncompraAux:requisicioncompraLogic.getRequisicionCompras()) {
					if(requisicioncompraAux.getIsSelected()) {
						requisicioncomprasSeleccionados.add(requisicioncompraAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(RequisicionCompra requisicioncompraAux:this.requisicioncompras) {
					if(requisicioncompraAux.getIsSelected()) {
						requisicioncomprasSeleccionados.add(requisicioncompraAux);				
					}
				}
			}
			
			if(requisicioncomprasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						requisicioncomprasSeleccionados.addAll(this.requisicioncompraLogic.getRequisicionCompras());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						requisicioncomprasSeleccionados.addAll(this.requisicioncompras);				
					}
				}
			}
		} else {
			requisicioncomprasSeleccionados.add(this.requisicioncompra);
		}
		
		return requisicioncomprasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteRequisicionComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalRequisicionComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoRequisicionComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoRequisicionComprasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoRequisicionComprasSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesRequisicionComprasSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Requisicion Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesRequisicionComprasSeleccionados() throws Exception {
		ArrayList<RequisicionCompra> requisicioncomprasSeleccionados=new ArrayList<RequisicionCompra>();		
		
		requisicioncomprasSeleccionados=this.getRequisicionComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteRequisicionCompras("Todos",requisicioncomprasSeleccionados);
		
	}	
	
	public void generarReporteNormalRequisicionComprasSeleccionados() throws Exception {
		ArrayList<RequisicionCompra> requisicioncomprasSeleccionados=new ArrayList<RequisicionCompra>();		
		
		requisicioncomprasSeleccionados=this.getRequisicionComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteRequisicionCompras("Todos",requisicioncomprasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionRequisicionComprasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<RequisicionCompra> requisicioncomprasSeleccionados=new ArrayList<RequisicionCompra>();
		
		requisicioncomprasSeleccionados=this.getRequisicionComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteRequisicionCompras("Todos",requisicioncomprasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoRequisicionComprasSeleccionados() throws Exception {
		ArrayList<RequisicionCompra> requisicioncomprasSeleccionados=new ArrayList<RequisicionCompra>();		
		
		
		this.abrirInicializarFrameReporteDinamicoRequisicionCompra();
		
		
		requisicioncomprasSeleccionados=this.getRequisicionComprasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoRequisicionCompra();
		
		
		//this.generarReporteRequisicionCompras("Todos",requisicioncomprasSeleccionados ,requisicioncompraImplementable,requisicioncompraImplementableHome);
	}
	
	public void mostrarImportacionRequisicionCompras() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionRequisicionCompra();
		
		this.abrirFrameImportacionRequisicionCompra();		
		
			
		//this.generarReporteRequisicionCompras("Todos",requisicioncomprasSeleccionados ,requisicioncompraImplementable,requisicioncompraImplementableHome);
	}
	
	public void importarRequisicionCompras() throws Exception {		
	
	}
	
	public void exportarRequisicionComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelRequisicionComprasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoRequisicionComprasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlRequisicionComprasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Requisicion Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoRequisicionComprasSeleccionados() throws Exception {
		ArrayList<RequisicionCompra> requisicioncomprasSeleccionados=new ArrayList<RequisicionCompra>();		
		
		requisicioncomprasSeleccionados=this.getRequisicionComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"requisicioncompra."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarRequisicionCompra(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(RequisicionCompra requisicioncompraAux:requisicioncomprasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarRequisicionCompra(requisicioncompraAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//requisicioncompraAux.setsDetalleGeneralEntityReporte(requisicioncompraAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarRequisicionCompra(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_IDMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_IDUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_IDESTADOREQUISICIONCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_IDEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_PARAUSODE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_IDFORMATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RequisicionCompraConstantesFunciones.LABEL_IDTIPOCAMBIO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarRequisicionCompra(RequisicionCompra requisicioncompra,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=requisicioncompra.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getnumero_secuencial();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getusuario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getestadorequisicioncompra_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getresponsable();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getsolicitado_por();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getmotivo_solicitud();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getarea_solicitud();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getpara_uso_de();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getlugar_entrega();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getfecha_entrega().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.getformato_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=requisicioncompra.gettipocambio_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelRequisicionComprasSeleccionados() throws Exception {
		ArrayList<RequisicionCompra> requisicioncomprasSeleccionados=new ArrayList<RequisicionCompra>();		
		
		requisicioncomprasSeleccionados=this.getRequisicionComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"requisicioncompra.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("RequisicionCompras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelRequisicionCompra(row);				
				iRow++;
			}				
			
			for(RequisicionCompra requisicioncompraAux:requisicioncomprasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelRequisicionCompra(requisicioncompraAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlRequisicionComprasSeleccionados() throws Exception {
		ArrayList<RequisicionCompra> requisicioncomprasSeleccionados=new ArrayList<RequisicionCompra>();		
		
		requisicioncomprasSeleccionados=this.getRequisicionComprasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"requisicioncompra.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("requisicioncompras");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("requisicioncompra");
			//elementRoot.appendChild(element);
		
			for(RequisicionCompra requisicioncompraAux:requisicioncomprasSeleccionados) {
				element = document.createElement("requisicioncompra");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlRequisicionCompra(requisicioncompraAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelRequisicionCompra(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDESTADOREQUISICIONCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_PARAUSODE);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDFORMATO);
		cell = row.createCell(iColumn++);cell.setCellValue(RequisicionCompraConstantesFunciones.LABEL_IDTIPOCAMBIO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelRequisicionCompra(RequisicionCompra requisicioncompra,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getnumero_secuencial());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getusuario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getestadorequisicioncompra_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getresponsable());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getsolicitado_por());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getmotivo_solicitud());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getarea_solicitud());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getpara_uso_de());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getlugar_entrega());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getfecha_entrega());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.getformato_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(requisicioncompra.gettipocambio_descripcion());				
	}
	
	public void setFilaDatosExportarXmlRequisicionCompra(RequisicionCompra requisicioncompra,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(RequisicionCompraConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(requisicioncompra.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(RequisicionCompraConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(requisicioncompra.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(RequisicionCompraConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(requisicioncompra.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(RequisicionCompraConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(requisicioncompra.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementmodulo_descripcion = document.createElement(RequisicionCompraConstantesFunciones.IDMODULO);
		elementmodulo_descripcion.appendChild(document.createTextNode(requisicioncompra.getmodulo_descripcion()));
		element.appendChild(elementmodulo_descripcion);

		Element elementejercicio_descripcion = document.createElement(RequisicionCompraConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(requisicioncompra.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(RequisicionCompraConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(requisicioncompra.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(RequisicionCompraConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(requisicioncompra.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(RequisicionCompraConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(requisicioncompra.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementnumero_secuencial = document.createElement(RequisicionCompraConstantesFunciones.NUMEROSECUENCIAL);
		elementnumero_secuencial.appendChild(document.createTextNode(requisicioncompra.getnumero_secuencial().trim()));
		element.appendChild(elementnumero_secuencial);

		Element elementcliente_descripcion = document.createElement(RequisicionCompraConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(requisicioncompra.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementusuario_descripcion = document.createElement(RequisicionCompraConstantesFunciones.IDUSUARIO);
		elementusuario_descripcion.appendChild(document.createTextNode(requisicioncompra.getusuario_descripcion()));
		element.appendChild(elementusuario_descripcion);

		Element elementmoneda_descripcion = document.createElement(RequisicionCompraConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(requisicioncompra.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementestadorequisicioncompra_descripcion = document.createElement(RequisicionCompraConstantesFunciones.IDESTADOREQUISICIONCOMPRA);
		elementestadorequisicioncompra_descripcion.appendChild(document.createTextNode(requisicioncompra.getestadorequisicioncompra_descripcion()));
		element.appendChild(elementestadorequisicioncompra_descripcion);

		Element elementtotal = document.createElement(RequisicionCompraConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(requisicioncompra.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementfecha = document.createElement(RequisicionCompraConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(requisicioncompra.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementempleado_descripcion = document.createElement(RequisicionCompraConstantesFunciones.IDEMPLEADO);
		elementempleado_descripcion.appendChild(document.createTextNode(requisicioncompra.getempleado_descripcion()));
		element.appendChild(elementempleado_descripcion);

		Element elementresponsable = document.createElement(RequisicionCompraConstantesFunciones.RESPONSABLE);
		elementresponsable.appendChild(document.createTextNode(requisicioncompra.getresponsable().trim()));
		element.appendChild(elementresponsable);

		Element elementsolicitado_por = document.createElement(RequisicionCompraConstantesFunciones.SOLICITADOPOR);
		elementsolicitado_por.appendChild(document.createTextNode(requisicioncompra.getsolicitado_por().trim()));
		element.appendChild(elementsolicitado_por);

		Element elementmotivo_solicitud = document.createElement(RequisicionCompraConstantesFunciones.MOTIVOSOLICITUD);
		elementmotivo_solicitud.appendChild(document.createTextNode(requisicioncompra.getmotivo_solicitud().trim()));
		element.appendChild(elementmotivo_solicitud);

		Element elementarea_solicitud = document.createElement(RequisicionCompraConstantesFunciones.AREASOLICITUD);
		elementarea_solicitud.appendChild(document.createTextNode(requisicioncompra.getarea_solicitud().trim()));
		element.appendChild(elementarea_solicitud);

		Element elementpara_uso_de = document.createElement(RequisicionCompraConstantesFunciones.PARAUSODE);
		elementpara_uso_de.appendChild(document.createTextNode(requisicioncompra.getpara_uso_de().trim()));
		element.appendChild(elementpara_uso_de);

		Element elementlugar_entrega = document.createElement(RequisicionCompraConstantesFunciones.LUGARENTREGA);
		elementlugar_entrega.appendChild(document.createTextNode(requisicioncompra.getlugar_entrega().trim()));
		element.appendChild(elementlugar_entrega);

		Element elementdescripcion = document.createElement(RequisicionCompraConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(requisicioncompra.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementfecha_emision = document.createElement(RequisicionCompraConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(requisicioncompra.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementfecha_entrega = document.createElement(RequisicionCompraConstantesFunciones.FECHAENTREGA);
		elementfecha_entrega.appendChild(document.createTextNode(requisicioncompra.getfecha_entrega().toString().trim()));
		element.appendChild(elementfecha_entrega);

		Element elementformato_descripcion = document.createElement(RequisicionCompraConstantesFunciones.IDFORMATO);
		elementformato_descripcion.appendChild(document.createTextNode(requisicioncompra.getformato_descripcion()));
		element.appendChild(elementformato_descripcion);

		Element elementtipocambio_descripcion = document.createElement(RequisicionCompraConstantesFunciones.IDTIPOCAMBIO);
		elementtipocambio_descripcion.appendChild(document.createTextNode(requisicioncompra.gettipocambio_descripcion()));
		element.appendChild(elementtipocambio_descripcion);
	}
	
	public void generarReporteGroupGenericoRequisicionComprasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<RequisicionCompra> requisicioncomprasSeleccionados=new ArrayList<RequisicionCompra>();
		
		requisicioncomprasSeleccionados=this.getRequisicionComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoRequisicionCompra(requisicioncomprasSeleccionados);
		
		this.generarReporteRequisicionCompras("Todos",requisicioncomprasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoRequisicionCompra(ArrayList<RequisicionCompra> requisicioncomprasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(RequisicionCompra requisicioncompraAux:requisicioncomprasSeleccionados) {
				requisicioncompraAux.setsDetalleGeneralEntityReporte(requisicioncompraAux.toString());
			
				if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_IDMODULO)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getnumero_secuencial());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_IDUSUARIO)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getusuario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_IDESTADOREQUISICIONCOMPRA)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getestadorequisicioncompra_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(requisicioncompraAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_IDEMPLEADO)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_RESPONSABLE)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getresponsable());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_SOLICITADOPOR)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getsolicitado_por());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getmotivo_solicitud());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_AREASOLICITUD)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getarea_solicitud());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_PARAUSODE)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getpara_uso_de());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_LUGARENTREGA)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getlugar_entrega());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(requisicioncompraAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_FECHAENTREGA)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(requisicioncompraAux.getfecha_entrega()));
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_IDFORMATO)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.getformato_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RequisicionCompraConstantesFunciones.LABEL_IDTIPOCAMBIO)) {
					existe=true;
					requisicioncompraAux.setsDescripcionGeneralEntityReporte1(requisicioncompraAux.gettipocambio_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesRequisicionCompra(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoRequisicionCompra=true;
				this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra=true;
				this.isVisibilidadCeldaGuardarCambiosRequisicionCompra=true;
			}
			
			this.isVisibilidadCeldaModificarRequisicionCompra=false;
			this.isVisibilidadCeldaActualizarRequisicionCompra=false;
			this.isVisibilidadCeldaEliminarRequisicionCompra=false;
			this.isVisibilidadCeldaCancelarRequisicionCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarRequisicionCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarRequisicionCompra=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoRequisicionCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarCambiosRequisicionCompra=false;
			this.isVisibilidadCeldaModificarRequisicionCompra=false;
			this.isVisibilidadCeldaActualizarRequisicionCompra=true;
			this.isVisibilidadCeldaEliminarRequisicionCompra=false;
			this.isVisibilidadCeldaCancelarRequisicionCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarRequisicionCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarRequisicionCompra=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoRequisicionCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarCambiosRequisicionCompra=false;
			this.isVisibilidadCeldaModificarRequisicionCompra=false;
			this.isVisibilidadCeldaActualizarRequisicionCompra=true;
			this.isVisibilidadCeldaEliminarRequisicionCompra=true;
			this.isVisibilidadCeldaCancelarRequisicionCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarRequisicionCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarRequisicionCompra=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoRequisicionCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarCambiosRequisicionCompra=false;
			this.isVisibilidadCeldaModificarRequisicionCompra=false;
			this.isVisibilidadCeldaActualizarRequisicionCompra=true;
			this.isVisibilidadCeldaEliminarRequisicionCompra=false;
			this.isVisibilidadCeldaCancelarRequisicionCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarRequisicionCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarRequisicionCompra=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoRequisicionCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra=true;
			this.isVisibilidadCeldaGuardarCambiosRequisicionCompra=true;
			this.isVisibilidadCeldaModificarRequisicionCompra=false;
			this.isVisibilidadCeldaActualizarRequisicionCompra=false;
			this.isVisibilidadCeldaEliminarRequisicionCompra=false;
			this.isVisibilidadCeldaCancelarRequisicionCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarRequisicionCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarRequisicionCompra=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoRequisicionCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarCambiosRequisicionCompra=false;
			this.isVisibilidadCeldaActualizarRequisicionCompra=false;
			this.isVisibilidadCeldaEliminarRequisicionCompra=false;
			this.isVisibilidadCeldaCancelarRequisicionCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarRequisicionCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarRequisicionCompra=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoRequisicionCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarCambiosRequisicionCompra=false;
			this.isVisibilidadCeldaModificarRequisicionCompra=true;
			this.isVisibilidadCeldaActualizarRequisicionCompra=false;
			this.isVisibilidadCeldaEliminarRequisicionCompra=false;
			this.isVisibilidadCeldaCancelarRequisicionCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarRequisicionCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarRequisicionCompra=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(RequisicionCompraJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoRequisicionCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra=true;
			this.isVisibilidadCeldaGuardarCambiosRequisicionCompra=true;
		} else {
			this.actualizarEstadoPanelsRequisicionCompra(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarRequisicionCompra=false;
			//this.isVisibilidadCeldaVerFormRequisicionCompra=false;
			this.isVisibilidadCeldaDuplicarRequisicionCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!requisicioncompraSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra=false;
		} else {
			this.isVisibilidadCeldaNuevoRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarCambiosRequisicionCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(requisicioncompraSessionBean.getEsGuardarRelacionado()) {
			if(!requisicioncompraSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra=false;												
			}
			
			this.jButtonCerrarRequisicionCompra.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesRequisicionCompra=false;
		}
		
		if(!this.permiteMantenimiento(this.requisicioncompra)) {
			this.isVisibilidadCeldaActualizarRequisicionCompra=false;
			this.isVisibilidadCeldaEliminarRequisicionCompra=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesRequisicionCompra() {
		this.isVisibilidadCeldaNuevoRequisicionCompra=false;
		this.isVisibilidadCeldaGuardarCambiosRequisicionCompra=false;
	}
	
	public void actualizarEstadoPanelsRequisicionCompra(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionRequisicionCompra!=null) {
				this.jScrollPanelDatosEdicionRequisicionCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasRequisicionCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosRequisicionCompra!=null) {
				this.jScrollPanelDatosRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionRequisicionCompra!=null) {
				this.jPanelPaginacionRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesRequisicionCompra!=null) {
				this.jPanelParametrosReportesRequisicionCompra.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionRequisicionCompra!=null) {
				this.jScrollPanelDatosEdicionRequisicionCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasRequisicionCompra.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosRequisicionCompra!=null) {
				this.jScrollPanelDatosRequisicionCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionRequisicionCompra!=null) {
				this.jPanelPaginacionRequisicionCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesRequisicionCompra!=null) {
				this.jPanelParametrosReportesRequisicionCompra.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionRequisicionCompra!=null) {
				this.jScrollPanelDatosEdicionRequisicionCompra.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasRequisicionCompra.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosRequisicionCompra!=null) {
				this.jScrollPanelDatosRequisicionCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionRequisicionCompra!=null) {
				this.jPanelPaginacionRequisicionCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesRequisicionCompra!=null) {
				this.jPanelParametrosReportesRequisicionCompra.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionRequisicionCompra!=null) {
				this.jScrollPanelDatosEdicionRequisicionCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasRequisicionCompra.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosRequisicionCompra!=null) {
				this.jScrollPanelDatosRequisicionCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionRequisicionCompra!=null) {
				this.jPanelPaginacionRequisicionCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesRequisicionCompra!=null) {
				this.jPanelParametrosReportesRequisicionCompra.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionRequisicionCompra!=null) {
				this.jScrollPanelDatosEdicionRequisicionCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasRequisicionCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosRequisicionCompra!=null) {
				this.jScrollPanelDatosRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionRequisicionCompra!=null) {
				this.jPanelPaginacionRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesRequisicionCompra!=null) {
				this.jPanelParametrosReportesRequisicionCompra.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionRequisicionCompra!=null) {
				this.jScrollPanelDatosEdicionRequisicionCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasRequisicionCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosRequisicionCompra!=null) {
				this.jScrollPanelDatosRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionRequisicionCompra!=null) {
				this.jPanelPaginacionRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesRequisicionCompra!=null) {
				this.jPanelParametrosReportesRequisicionCompra.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionRequisicionCompra!=null) {
				this.jScrollPanelDatosEdicionRequisicionCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasRequisicionCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosRequisicionCompra!=null) {
				this.jScrollPanelDatosRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionRequisicionCompra!=null) {
				this.jPanelPaginacionRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesRequisicionCompra!=null) {
				this.jPanelParametrosReportesRequisicionCompra.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasRequisicionCompra!=null) {
					this.jTabbedPaneBusquedasRequisicionCompra.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesRequisicionCompra!=null) {
				this.jPanelParametrosReportesRequisicionCompra.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.requisicioncompraSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasRequisicionCompra.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesRequisicionCompra!=null) {
				this.jPanelParametrosReportesRequisicionCompra.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdClienteRequisicionCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEmpleadoRequisicionCompra);}

			this.isVisibilidadFK_IdEstadoRequisicionCompra=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoRequisicionCompra) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdClienteRequisicionCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEmpleadoRequisicionCompra);}

			this.isVisibilidadFK_IdEstadoRequisicionCompra=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoRequisicionCompra) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaModulo(Boolean isParaModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaModuloNegation=!isParaModulo;

			this.isVisibilidadFK_IdCliente=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdClienteRequisicionCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEmpleadoRequisicionCompra);}

			this.isVisibilidadFK_IdEstadoRequisicionCompra=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoRequisicionCompra) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdClienteRequisicionCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEmpleadoRequisicionCompra);}

			this.isVisibilidadFK_IdEstadoRequisicionCompra=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEstadoRequisicionCompra) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdClienteRequisicionCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEmpleadoRequisicionCompra);}

			this.isVisibilidadFK_IdEstadoRequisicionCompra=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEstadoRequisicionCompra) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdClienteRequisicionCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEmpleadoRequisicionCompra);}

			this.isVisibilidadFK_IdEstadoRequisicionCompra=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEstadoRequisicionCompra) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdClienteRequisicionCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEmpleadoRequisicionCompra);}

			this.isVisibilidadFK_IdEstadoRequisicionCompra=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEstadoRequisicionCompra) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdClienteRequisicionCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEmpleadoRequisicionCompra);}

			this.isVisibilidadFK_IdEstadoRequisicionCompra=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoRequisicionCompra) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaUsuario(Boolean isParaUsuario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUsuarioNegation=!isParaUsuario;

			this.isVisibilidadFK_IdCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdClienteRequisicionCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEmpleadoRequisicionCompra);}

			this.isVisibilidadFK_IdEstadoRequisicionCompra=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEstadoRequisicionCompra) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdClienteRequisicionCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEmpleadoRequisicionCompra);}

			this.isVisibilidadFK_IdEstadoRequisicionCompra=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEstadoRequisicionCompra) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoRequisicionCompra(Boolean isParaEstadoRequisicionCompra){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoRequisicionCompraNegation=!isParaEstadoRequisicionCompra;

			this.isVisibilidadFK_IdCliente=isParaEstadoRequisicionCompraNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdClienteRequisicionCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoRequisicionCompraNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEmpleadoRequisicionCompra);}

			this.isVisibilidadFK_IdEstadoRequisicionCompra=isParaEstadoRequisicionCompra;
			if(!this.isVisibilidadFK_IdEstadoRequisicionCompra) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleado(Boolean isParaEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoNegation=!isParaEmpleado;

			this.isVisibilidadFK_IdCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdClienteRequisicionCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpleado;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEmpleadoRequisicionCompra);}

			this.isVisibilidadFK_IdEstadoRequisicionCompra=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoRequisicionCompra) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormato(Boolean isParaFormato){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoNegation=!isParaFormato;

			this.isVisibilidadFK_IdCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdClienteRequisicionCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEmpleadoRequisicionCompra);}

			this.isVisibilidadFK_IdEstadoRequisicionCompra=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEstadoRequisicionCompra) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoCambio(Boolean isParaTipoCambio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCambioNegation=!isParaTipoCambio;

			this.isVisibilidadFK_IdCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdClienteRequisicionCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEmpleadoRequisicionCompra);}

			this.isVisibilidadFK_IdEstadoRequisicionCompra=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEstadoRequisicionCompra) {this.jTabbedPaneBusquedasRequisicionCompra.remove(jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);}
		}
		
	}
	
	

	public String registrarSesionRequisicionCompraParaDetalleRequisicionCompras() throws Exception {
		Boolean isPaginaPopupDetalleRequisicionCompra=false;

		try {

			if(this.requisicioncompraSessionBean==null) {
				this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraSessionBean==null) {
				this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}

			this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraSessionBean.setsPathNavegacionActual(requisicioncompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DetalleRequisicionCompraConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDetalleRequisicionCompra=this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDetalleRequisicionCompra(true);
			this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDetalleRequisicionCompra(RequisicionCompraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraSessionBean.setisBusquedaDesdeForeignKeySesionRequisicionCompra(true);
			this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraSessionBean.setlidRequisicionCompraActual(this.idRequisicionCompraActual);
			this.jInternalFrameDetalleFormRequisicionCompra.detallerequisicioncompraSessionBean.setNoMantenimiento(true);

			requisicioncompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyRequisicionCompra(true);
			requisicioncompraSessionBean.setlIdRequisicionCompraActualForeignKey(this.idRequisicionCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionRequisicionCompraParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(requisicioncompraSessionBean==null) {
				requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(requisicioncompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.requisicioncompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(RequisicionCompraConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionRequisicionCompra(true);
			//clienteSessionBean.setlidRequisicionCompraActual(this.idRequisicionCompraActual);

			requisicioncompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyRequisicionCompra(true);
			requisicioncompraSessionBean.setlIdRequisicionCompraActualForeignKey(this.idRequisicionCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionRequisicionCompraParaBusquedaEmpleados() throws Exception {
		Boolean isPaginaPopupEmpleado=false;

		try {

			if(requisicioncompraSessionBean==null) {
				requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(empleadoSessionBean==null) {
				empleadoSessionBean=new EmpleadoSessionBean();
			}

			empleadoSessionBean.setsPathNavegacionActual(requisicioncompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoConstantesFunciones.SCLASSWEBTITULO);
			empleadoSessionBean.setisPermiteRecargarInformacion(false);
			empleadoSessionBean.setisPaginaPopup(true);
			isPaginaPopupEmpleado=empleadoSessionBean.getisPaginaPopup();
			empleadoSessionBean.setisPaginaPopup(false);
			empleadoSessionBean.setEstaModoBusqueda(true);
			empleadoSessionBean.setsFuncionBusquedaRapida("window.opener.requisicioncompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_empleado(TO_REPLACE);");
			empleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleado(true);
			empleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleado(RequisicionCompraConstantesFunciones.SNOMBREOPCION);
			//empleadoSessionBean.setisBusquedaDesdeForeignKeySesionRequisicionCompra(true);
			//empleadoSessionBean.setlidRequisicionCompraActual(this.idRequisicionCompraActual);

			requisicioncompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyRequisicionCompra(true);
			requisicioncompraSessionBean.setlIdRequisicionCompraActualForeignKey(this.idRequisicionCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionRequisicionCompraParaBusquedaTipoCambios() throws Exception {
		Boolean isPaginaPopupTipoCambio=false;

		try {

			if(requisicioncompraSessionBean==null) {
				requisicioncompraSessionBean=new RequisicionCompraSessionBean();
			}

			if(tipocambioSessionBean==null) {
				tipocambioSessionBean=new TipoCambioSessionBean();
			}

			tipocambioSessionBean.setsPathNavegacionActual(requisicioncompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TipoCambioConstantesFunciones.SCLASSWEBTITULO);
			tipocambioSessionBean.setisPermiteRecargarInformacion(false);
			tipocambioSessionBean.setisPaginaPopup(true);
			isPaginaPopupTipoCambio=tipocambioSessionBean.getisPaginaPopup();
			tipocambioSessionBean.setisPaginaPopup(false);
			tipocambioSessionBean.setEstaModoBusqueda(true);
			tipocambioSessionBean.setsFuncionBusquedaRapida("window.opener.requisicioncompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_tipo_cambio(TO_REPLACE);");
			tipocambioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTipoCambio(true);
			tipocambioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTipoCambio(RequisicionCompraConstantesFunciones.SNOMBREOPCION);
			//tipocambioSessionBean.setisBusquedaDesdeForeignKeySesionRequisicionCompra(true);
			//tipocambioSessionBean.setlidRequisicionCompraActual(this.idRequisicionCompraActual);

			requisicioncompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyRequisicionCompra(true);
			requisicioncompraSessionBean.setlIdRequisicionCompraActualForeignKey(this.idRequisicionCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//RequisicionCompraSessionBean requisicioncompraSessionBean=new RequisicionCompraSessionBean();
		
		if(this.requisicioncompraSessionBean==null) {
			this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
		}
		
		this.requisicioncompraSessionBean.setsUltimaBusquedaRequisicionCompra(this.getsAccionBusqueda());
		this.requisicioncompraSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.requisicioncompraSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			requisicioncompraSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			requisicioncompraSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
			requisicioncompraSessionBean.setid_empleado(this.getid_empleadoFK_IdEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			requisicioncompraSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoRequisicionCompra")) {
			requisicioncompraSessionBean.setid_estado_requisicion_compra(this.getid_estado_requisicion_compraFK_IdEstadoRequisicionCompra());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
			requisicioncompraSessionBean.setid_modulo(this.getid_moduloFK_IdModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			requisicioncompraSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			requisicioncompraSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
			requisicioncompraSessionBean.setid_usuario(this.getid_usuarioFK_IdUsuario());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//RequisicionCompraSessionBean requisicioncompraSessionBean=new RequisicionCompraSessionBean();
		
		if(this.requisicioncompraSessionBean==null) {
			this.requisicioncompraSessionBean=new RequisicionCompraSessionBean();
		}
		
		if(this.requisicioncompraSessionBean.getsUltimaBusquedaRequisicionCompra()!=null&&!this.requisicioncompraSessionBean.getsUltimaBusquedaRequisicionCompra().equals("")) {
			this.setsAccionBusqueda(requisicioncompraSessionBean.getsUltimaBusquedaRequisicionCompra());
			this.setiNumeroPaginacion(requisicioncompraSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(requisicioncompraSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(requisicioncompraSessionBean.getid_cliente());
				requisicioncompraSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(requisicioncompraSessionBean.getid_ejercicio());
				requisicioncompraSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
				this.setid_empleadoFK_IdEmpleado(requisicioncompraSessionBean.getid_empleado());
				requisicioncompraSessionBean.setid_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(requisicioncompraSessionBean.getid_empresa());
				requisicioncompraSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoRequisicionCompra")) {
				this.setid_estado_requisicion_compraFK_IdEstadoRequisicionCompra(requisicioncompraSessionBean.getid_estado_requisicion_compra());
				requisicioncompraSessionBean.setid_estado_requisicion_compra(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
				this.setid_moduloFK_IdModulo(requisicioncompraSessionBean.getid_modulo());
				requisicioncompraSessionBean.setid_modulo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(requisicioncompraSessionBean.getid_periodo());
				requisicioncompraSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(requisicioncompraSessionBean.getid_sucursal());
				requisicioncompraSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
				this.setid_usuarioFK_IdUsuario(requisicioncompraSessionBean.getid_usuario());
				requisicioncompraSessionBean.setid_usuario(-1L);
			}
		}
		
		this.requisicioncompraSessionBean.setsUltimaBusquedaRequisicionCompra("");
		this.requisicioncompraSessionBean.setiNumeroPaginacion(RequisicionCompraConstantesFunciones.INUMEROPAGINACION);
		this.requisicioncompraSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaRequisicionCompra(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioRequisicionCompra() {
		this.updateBorderResaltarBusquedasFormularioRequisicionCompra();
		this.updateVisibilidadBusquedasFormularioRequisicionCompra();
		this.updateHabilitarBusquedasFormularioRequisicionCompra();
	}
	
	public void updateBorderResaltarBusquedasFormularioRequisicionCompra() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasRequisicionCompra.getComponents().length>0) {
	

		if(this.requisicioncompraConstantesFunciones.resaltarFK_IdClienteRequisicionCompra!=null) {
			index= this.jTabbedPaneBusquedasRequisicionCompra.indexOfComponent(this.jPanelFK_IdClienteRequisicionCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasRequisicionCompra.getComponent(index);
				jPanel.setBorder(this.requisicioncompraConstantesFunciones.resaltarFK_IdClienteRequisicionCompra);
			}
		}

		if(this.requisicioncompraConstantesFunciones.resaltarFK_IdEmpleadoRequisicionCompra!=null) {
			index= this.jTabbedPaneBusquedasRequisicionCompra.indexOfComponent(this.jPanelFK_IdEmpleadoRequisicionCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasRequisicionCompra.getComponent(index);
				jPanel.setBorder(this.requisicioncompraConstantesFunciones.resaltarFK_IdEmpleadoRequisicionCompra);
			}
		}

		if(this.requisicioncompraConstantesFunciones.resaltarFK_IdEstadoRequisicionCompraRequisicionCompra!=null) {
			index= this.jTabbedPaneBusquedasRequisicionCompra.indexOfComponent(this.jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasRequisicionCompra.getComponent(index);
				jPanel.setBorder(this.requisicioncompraConstantesFunciones.resaltarFK_IdEstadoRequisicionCompraRequisicionCompra);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioRequisicionCompra() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasRequisicionCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasRequisicionCompra.indexOfComponent(this.jPanelFK_IdClienteRequisicionCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasRequisicionCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.requisicioncompraConstantesFunciones.mostrarFK_IdClienteRequisicionCompra);
			if(!this.requisicioncompraConstantesFunciones.mostrarFK_IdClienteRequisicionCompra && index>-1) {
				this.jTabbedPaneBusquedasRequisicionCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasRequisicionCompra.indexOfComponent(this.jPanelFK_IdEmpleadoRequisicionCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasRequisicionCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.requisicioncompraConstantesFunciones.mostrarFK_IdEmpleadoRequisicionCompra);
			if(!this.requisicioncompraConstantesFunciones.mostrarFK_IdEmpleadoRequisicionCompra && index>-1) {
				this.jTabbedPaneBusquedasRequisicionCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasRequisicionCompra.indexOfComponent(this.jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasRequisicionCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.requisicioncompraConstantesFunciones.mostrarFK_IdEstadoRequisicionCompraRequisicionCompra);
			if(!this.requisicioncompraConstantesFunciones.mostrarFK_IdEstadoRequisicionCompraRequisicionCompra && index>-1) {
				this.jTabbedPaneBusquedasRequisicionCompra.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioRequisicionCompra() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasRequisicionCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasRequisicionCompra.indexOfComponent(this.jPanelFK_IdClienteRequisicionCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasRequisicionCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.requisicioncompraConstantesFunciones.activarFK_IdClienteRequisicionCompra);
				this.jTabbedPaneBusquedasRequisicionCompra.setEnabledAt(index,this.requisicioncompraConstantesFunciones.activarFK_IdClienteRequisicionCompra);
			}

			index= this.jTabbedPaneBusquedasRequisicionCompra.indexOfComponent(this.jPanelFK_IdEmpleadoRequisicionCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasRequisicionCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.requisicioncompraConstantesFunciones.activarFK_IdEmpleadoRequisicionCompra);
				this.jTabbedPaneBusquedasRequisicionCompra.setEnabledAt(index,this.requisicioncompraConstantesFunciones.activarFK_IdEmpleadoRequisicionCompra);
			}

			index= this.jTabbedPaneBusquedasRequisicionCompra.indexOfComponent(this.jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasRequisicionCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.requisicioncompraConstantesFunciones.activarFK_IdEstadoRequisicionCompraRequisicionCompra);
				this.jTabbedPaneBusquedasRequisicionCompra.setEnabledAt(index,this.requisicioncompraConstantesFunciones.activarFK_IdEstadoRequisicionCompraRequisicionCompra);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaRequisicionCompra(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasRequisicionCompra.indexOfComponent(this.jPanelFK_IdClienteRequisicionCompra);

			this.jTabbedPaneBusquedasRequisicionCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasRequisicionCompra.getComponent(index);

			this.requisicioncompraConstantesFunciones.setResaltarFK_IdClienteRequisicionCompra(resaltar);

			jPanel.setBorder(this.requisicioncompraConstantesFunciones.resaltarFK_IdClienteRequisicionCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpleado")) {
			index= this.jTabbedPaneBusquedasRequisicionCompra.indexOfComponent(this.jPanelFK_IdEmpleadoRequisicionCompra);

			this.jTabbedPaneBusquedasRequisicionCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasRequisicionCompra.getComponent(index);

			this.requisicioncompraConstantesFunciones.setResaltarFK_IdEmpleadoRequisicionCompra(resaltar);

			jPanel.setBorder(this.requisicioncompraConstantesFunciones.resaltarFK_IdEmpleadoRequisicionCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoRequisicionCompra")) {
			index= this.jTabbedPaneBusquedasRequisicionCompra.indexOfComponent(this.jPanelFK_IdEstadoRequisicionCompraRequisicionCompra);

			this.jTabbedPaneBusquedasRequisicionCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasRequisicionCompra.getComponent(index);

			this.requisicioncompraConstantesFunciones.setResaltarFK_IdEstadoRequisicionCompraRequisicionCompra(resaltar);

			jPanel.setBorder(this.requisicioncompraConstantesFunciones.resaltarFK_IdEstadoRequisicionCompraRequisicionCompra);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarRequisicionCompra.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioRequisicionCompra() throws Exception {

		if(this.jInternalFrameDetalleFormRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioRequisicionCompra();
		this.updateVisibilidadResaltarControlesFormularioRequisicionCompra();
		this.updateHabilitarResaltarControlesFormularioRequisicionCompra();
		
	}
	
	public void updateBorderResaltarControlesFormularioRequisicionCompra() throws Exception {
		if(this.jInternalFrameDetalleFormRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.requisicioncompraConstantesFunciones.resaltaridRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jLabelidRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltaridRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarid_empresaRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empresaRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarid_empresaRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarid_sucursalRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_sucursalRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarid_sucursalRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarid_moduloRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_moduloRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarid_moduloRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarid_ejercicioRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarid_ejercicioRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarid_periodoRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarid_periodoRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarid_anioRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_anioRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarid_anioRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarid_mesRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_mesRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarid_mesRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarnumero_secuencialRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldnumero_secuencialRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarnumero_secuencialRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarid_clienteRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_clienteRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarid_clienteRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarid_usuarioRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_usuarioRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarid_usuarioRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarid_monedaRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_monedaRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarid_monedaRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarid_estado_requisicion_compraRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_estado_requisicion_compraRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarid_estado_requisicion_compraRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltartotalRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldtotalRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltartotalRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarfechaRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfechaRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarfechaRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarid_empleadoRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empleadoRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarid_empleadoRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarresponsableRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jTextArearesponsableRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarresponsableRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarsolicitado_porRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jTextAreasolicitado_porRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarsolicitado_porRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarmotivo_solicitudRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jTextAreamotivo_solicitudRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarmotivo_solicitudRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltararea_solicitudRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jTextAreaarea_solicitudRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltararea_solicitudRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarpara_uso_deRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jTextAreapara_uso_deRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarpara_uso_deRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarlugar_entregaRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldlugar_entregaRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarlugar_entregaRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltardescripcionRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jTextAreadescripcionRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltardescripcionRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarfecha_emisionRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_emisionRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarfecha_emisionRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarfecha_entregaRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_entregaRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarfecha_entregaRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarid_formatoRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_formatoRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarid_formatoRequisicionCompra);}
		if(this.requisicioncompraConstantesFunciones.resaltarid_tipo_cambioRequisicionCompra!=null && this.jInternalFrameDetalleFormRequisicionCompra!=null) {this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_tipo_cambioRequisicionCompra.setBorder(this.requisicioncompraConstantesFunciones.resaltarid_tipo_cambioRequisicionCompra);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioRequisicionCompra() throws Exception {		
		if(this.jInternalFrameDetalleFormRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
	
		//this.jInternalFrameDetalleFormRequisicionCompra.jLabelidRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostraridRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelidRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostraridRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empresaRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_empresaRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelid_empresaRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_empresaRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_sucursalRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_sucursalRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelid_sucursalRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_sucursalRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_moduloRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_moduloRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelid_moduloRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_moduloRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_ejercicioRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelid_ejercicioRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_ejercicioRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_periodoRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelid_periodoRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_periodoRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_anioRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_anioRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelid_anioRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_anioRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_mesRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_mesRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelid_mesRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_mesRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldnumero_secuencialRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarnumero_secuencialRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelnumero_secuencialRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarnumero_secuencialRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_clienteRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_clienteRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelid_clienteRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_clienteRequisicionCompra);
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_clienteRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_clienteRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_usuarioRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_usuarioRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelid_usuarioRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_usuarioRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_monedaRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_monedaRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelid_monedaRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_monedaRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_estado_requisicion_compraRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_estado_requisicion_compraRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelid_estado_requisicion_compraRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_estado_requisicion_compraRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldtotalRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrartotalRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPaneltotalRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrartotalRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfechaRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarfechaRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelfechaRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarfechaRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empleadoRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_empleadoRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelid_empleadoRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_empleadoRequisicionCompra);
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empleadoRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_empleadoRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jTextArearesponsableRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarresponsableRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelresponsableRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarresponsableRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jTextAreasolicitado_porRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarsolicitado_porRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelsolicitado_porRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarsolicitado_porRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jTextAreamotivo_solicitudRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarmotivo_solicitudRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelmotivo_solicitudRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarmotivo_solicitudRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jTextAreaarea_solicitudRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrararea_solicitudRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelarea_solicitudRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrararea_solicitudRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jTextAreapara_uso_deRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarpara_uso_deRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelpara_uso_deRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarpara_uso_deRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldlugar_entregaRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarlugar_entregaRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanellugar_entregaRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarlugar_entregaRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jTextAreadescripcionRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrardescripcionRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPaneldescripcionRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrardescripcionRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_emisionRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarfecha_emisionRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelfecha_emisionRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarfecha_emisionRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_entregaRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarfecha_entregaRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelfecha_entregaRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarfecha_entregaRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_formatoRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_formatoRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelid_formatoRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_formatoRequisicionCompra);
		//this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_tipo_cambioRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_tipo_cambioRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jPanelid_tipo_cambioRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_tipo_cambioRequisicionCompra);
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_tipo_cambioRequisicionCompra.setVisible(this.requisicioncompraConstantesFunciones.mostrarid_tipo_cambioRequisicionCompra);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioRequisicionCompra() throws Exception {
		if(this.jInternalFrameDetalleFormRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormRequisicionCompra!=null) {
	
		this.jInternalFrameDetalleFormRequisicionCompra.jLabelidRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activaridRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empresaRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_empresaRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_sucursalRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_sucursalRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_moduloRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_moduloRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_ejercicioRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_ejercicioRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_periodoRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_periodoRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_anioRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_anioRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_mesRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_mesRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldnumero_secuencialRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarnumero_secuencialRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_clienteRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_clienteRequisicionCompra);
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_clienteRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_clienteRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_usuarioRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_usuarioRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_monedaRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_monedaRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_estado_requisicion_compraRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_estado_requisicion_compraRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldtotalRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activartotalRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfechaRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarfechaRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_empleadoRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_empleadoRequisicionCompra);
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_empleadoRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_empleadoRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextArearesponsableRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarresponsableRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextAreasolicitado_porRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarsolicitado_porRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextAreamotivo_solicitudRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarmotivo_solicitudRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextAreaarea_solicitudRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activararea_solicitudRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextAreapara_uso_deRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarpara_uso_deRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextFieldlugar_entregaRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarlugar_entregaRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jTextAreadescripcionRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activardescripcionRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_emisionRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarfecha_emisionRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jDateChooserfecha_entregaRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarfecha_entregaRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_formatoRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_formatoRequisicionCompra);
		this.jInternalFrameDetalleFormRequisicionCompra.jComboBoxid_tipo_cambioRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_tipo_cambioRequisicionCompra);
			this.jInternalFrameDetalleFormRequisicionCompra.jButtonid_tipo_cambioRequisicionCompra.setEnabled(this.requisicioncompraConstantesFunciones.activarid_tipo_cambioRequisicionCompra);
		}
	}
	
		
}