/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.inventario.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.inventario.util.TipoPrecioConstantesFunciones;
import com.bydan.erp.inventario.util.TipoPrecioParameterReturnGeneral;
//import com.bydan.erp.inventario.util.TipoPrecioParameterGeneral;
//import com.bydan.erp.inventario.presentation.report.source.TipoPrecioBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.inventario.resources.reportes.AuxiliarReportes;


import com.bydan.erp.inventario.util.*;
import com.bydan.erp.inventario.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.puntoventa.business.logic.*;
import com.bydan.erp.comisiones.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.inventario.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.puntoventa.presentation.swing.jinternalframes.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.puntoventa.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.puntoventa.business.entity.*;
import com.bydan.erp.comisiones.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.puntoventa.util.*;
import com.bydan.erp.comisiones.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.puntoventa.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.comisiones.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class TipoPrecioBeanSwingJInternalFrame extends TipoPrecioJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(TipoPrecioBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<TipoPrecio> tipoprecioValidator = new ClassValidator<TipoPrecio>(TipoPrecio.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public TipoPrecio tipoprecio;	
	public TipoPrecio tipoprecioAux;
	public TipoPrecio tipoprecioAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public TipoPrecio tipoprecioTotales;
	public Long idTipoPrecioActual;
	public Long iIdNuevoTipoPrecio=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

		
	
	
	
	
	

	public Boolean isTienePermisosPrecio=false;

	public Boolean getIsTienePermisosPrecio() {
		return isTienePermisosPrecio;
	}

	public void setIsTienePermisosPrecio(Boolean isTienePermisosPrecio) {
		this.isTienePermisosPrecio= isTienePermisosPrecio;
	}


	public Boolean isTienePermisosUtilidadTipoPrecio=false;

	public Boolean getIsTienePermisosUtilidadTipoPrecio() {
		return isTienePermisosUtilidadTipoPrecio;
	}

	public void setIsTienePermisosUtilidadTipoPrecio(Boolean isTienePermisosUtilidadTipoPrecio) {
		this.isTienePermisosUtilidadTipoPrecio= isTienePermisosUtilidadTipoPrecio;
	}


	public Boolean isTienePermisosPedidoPuntoVenta=false;

	public Boolean getIsTienePermisosPedidoPuntoVenta() {
		return isTienePermisosPedidoPuntoVenta;
	}

	public void setIsTienePermisosPedidoPuntoVenta(Boolean isTienePermisosPedidoPuntoVenta) {
		this.isTienePermisosPedidoPuntoVenta= isTienePermisosPedidoPuntoVenta;
	}


	public Boolean isTienePermisosParametroCarteraDefecto=false;

	public Boolean getIsTienePermisosParametroCarteraDefecto() {
		return isTienePermisosParametroCarteraDefecto;
	}

	public void setIsTienePermisosParametroCarteraDefecto(Boolean isTienePermisosParametroCarteraDefecto) {
		this.isTienePermisosParametroCarteraDefecto= isTienePermisosParametroCarteraDefecto;
	}


	public Boolean isTienePermisosDescuentoTipoPrecio=false;

	public Boolean getIsTienePermisosDescuentoTipoPrecio() {
		return isTienePermisosDescuentoTipoPrecio;
	}

	public void setIsTienePermisosDescuentoTipoPrecio(Boolean isTienePermisosDescuentoTipoPrecio) {
		this.isTienePermisosDescuentoTipoPrecio= isTienePermisosDescuentoTipoPrecio;
	}


	public Boolean isTienePermisosPoliticasCliente=false;

	public Boolean getIsTienePermisosPoliticasCliente() {
		return isTienePermisosPoliticasCliente;
	}

	public void setIsTienePermisosPoliticasCliente(Boolean isTienePermisosPoliticasCliente) {
		this.isTienePermisosPoliticasCliente= isTienePermisosPoliticasCliente;
	}


	public Boolean isTienePermisosProforma=false;

	public Boolean getIsTienePermisosProforma() {
		return isTienePermisosProforma;
	}

	public void setIsTienePermisosProforma(Boolean isTienePermisosProforma) {
		this.isTienePermisosProforma= isTienePermisosProforma;
	}


	public Boolean isTienePermisosNotaCreditoSoli=false;

	public Boolean getIsTienePermisosNotaCreditoSoli() {
		return isTienePermisosNotaCreditoSoli;
	}

	public void setIsTienePermisosNotaCreditoSoli(Boolean isTienePermisosNotaCreditoSoli) {
		this.isTienePermisosNotaCreditoSoli= isTienePermisosNotaCreditoSoli;
	}


	public Boolean isTienePermisosConsignacion=false;

	public Boolean getIsTienePermisosConsignacion() {
		return isTienePermisosConsignacion;
	}

	public void setIsTienePermisosConsignacion(Boolean isTienePermisosConsignacion) {
		this.isTienePermisosConsignacion= isTienePermisosConsignacion;
	}


	public Boolean isTienePermisosPedidoExpor=false;

	public Boolean getIsTienePermisosPedidoExpor() {
		return isTienePermisosPedidoExpor;
	}

	public void setIsTienePermisosPedidoExpor(Boolean isTienePermisosPedidoExpor) {
		this.isTienePermisosPedidoExpor= isTienePermisosPedidoExpor;
	}


	public Boolean isTienePermisosServicioCliente=false;

	public Boolean getIsTienePermisosServicioCliente() {
		return isTienePermisosServicioCliente;
	}

	public void setIsTienePermisosServicioCliente(Boolean isTienePermisosServicioCliente) {
		this.isTienePermisosServicioCliente= isTienePermisosServicioCliente;
	}


	public Boolean isTienePermisosFacturaPuntoVenta=false;

	public Boolean getIsTienePermisosFacturaPuntoVenta() {
		return isTienePermisosFacturaPuntoVenta;
	}

	public void setIsTienePermisosFacturaPuntoVenta(Boolean isTienePermisosFacturaPuntoVenta) {
		this.isTienePermisosFacturaPuntoVenta= isTienePermisosFacturaPuntoVenta;
	}


	public Boolean isTienePermisosGuiaRemision=false;

	public Boolean getIsTienePermisosGuiaRemision() {
		return isTienePermisosGuiaRemision;
	}

	public void setIsTienePermisosGuiaRemision(Boolean isTienePermisosGuiaRemision) {
		this.isTienePermisosGuiaRemision= isTienePermisosGuiaRemision;
	}


	public Boolean isTienePermisosCliente=false;

	public Boolean getIsTienePermisosCliente() {
		return isTienePermisosCliente;
	}

	public void setIsTienePermisosCliente(Boolean isTienePermisosCliente) {
		this.isTienePermisosCliente= isTienePermisosCliente;
	}


	public Boolean isTienePermisosNotaCreditoPuntoVenta=false;

	public Boolean getIsTienePermisosNotaCreditoPuntoVenta() {
		return isTienePermisosNotaCreditoPuntoVenta;
	}

	public void setIsTienePermisosNotaCreditoPuntoVenta(Boolean isTienePermisosNotaCreditoPuntoVenta) {
		this.isTienePermisosNotaCreditoPuntoVenta= isTienePermisosNotaCreditoPuntoVenta;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoTipoPrecio;
	public Boolean isPermisoNuevoTipoPrecio;
	public Boolean isPermisoActualizarTipoPrecio;
	public Boolean isPermisoActualizarOriginalTipoPrecio;
	public Boolean isPermisoEliminarTipoPrecio;
	public Boolean isPermisoGuardarCambiosTipoPrecio;
	public Boolean isPermisoConsultaTipoPrecio;
	public Boolean isPermisoBusquedaTipoPrecio;
	public Boolean isPermisoReporteTipoPrecio;
	public Boolean isPermisoPaginacionMedioTipoPrecio;
	public Boolean isPermisoPaginacionAltoTipoPrecio;
	public Boolean isPermisoPaginacionTodoTipoPrecio;
	public Boolean isPermisoCopiarTipoPrecio;
	public Boolean isPermisoVerFormTipoPrecio;
	public Boolean isPermisoDuplicarTipoPrecio;
	public Boolean isPermisoOrdenTipoPrecio;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public TipoPrecioParameterReturnGeneral tipoprecioReturnGeneral;
	public TipoPrecioParameterReturnGeneral tipoprecioParameterGeneral;
	
	

	public PrecioLogic precioLogic=null;

	public PrecioLogic getPrecioLogic() {
		return precioLogic;
	}

	public void setPrecioLogic(PrecioLogic precioLogic) {
		this.precioLogic = precioLogic;
	}


	public PoliticasClienteLogic politicasclienteLogic=null;

	public PoliticasClienteLogic getPoliticasClienteLogic() {
		return politicasclienteLogic;
	}

	public void setPoliticasClienteLogic(PoliticasClienteLogic politicasclienteLogic) {
		this.politicasclienteLogic = politicasclienteLogic;
	}


	public NotaCreditoSoliLogic notacreditosoliLogic=null;

	public NotaCreditoSoliLogic getNotaCreditoSoliLogic() {
		return notacreditosoliLogic;
	}

	public void setNotaCreditoSoliLogic(NotaCreditoSoliLogic notacreditosoliLogic) {
		this.notacreditosoliLogic = notacreditosoliLogic;
	}


	public GuiaRemisionLogic guiaremisionLogic=null;

	public GuiaRemisionLogic getGuiaRemisionLogic() {
		return guiaremisionLogic;
	}

	public void setGuiaRemisionLogic(GuiaRemisionLogic guiaremisionLogic) {
		this.guiaremisionLogic = guiaremisionLogic;
	}


	public PedidoExporLogic pedidoexporLogic=null;

	public PedidoExporLogic getPedidoExporLogic() {
		return pedidoexporLogic;
	}

	public void setPedidoExporLogic(PedidoExporLogic pedidoexporLogic) {
		this.pedidoexporLogic = pedidoexporLogic;
	}


	public FacturaPuntoVentaLogic facturapuntoventaLogic=null;

	public FacturaPuntoVentaLogic getFacturaPuntoVentaLogic() {
		return facturapuntoventaLogic;
	}

	public void setFacturaPuntoVentaLogic(FacturaPuntoVentaLogic facturapuntoventaLogic) {
		this.facturapuntoventaLogic = facturapuntoventaLogic;
	}


	public PedidoPuntoVentaLogic pedidopuntoventaLogic=null;

	public PedidoPuntoVentaLogic getPedidoPuntoVentaLogic() {
		return pedidopuntoventaLogic;
	}

	public void setPedidoPuntoVentaLogic(PedidoPuntoVentaLogic pedidopuntoventaLogic) {
		this.pedidopuntoventaLogic = pedidopuntoventaLogic;
	}


	public UtilidadTipoPrecioLogic utilidadtipoprecioLogic=null;

	public UtilidadTipoPrecioLogic getUtilidadTipoPrecioLogic() {
		return utilidadtipoprecioLogic;
	}

	public void setUtilidadTipoPrecioLogic(UtilidadTipoPrecioLogic utilidadtipoprecioLogic) {
		this.utilidadtipoprecioLogic = utilidadtipoprecioLogic;
	}


	public ClienteLogic clienteLogic=null;

	public ClienteLogic getClienteLogic() {
		return clienteLogic;
	}

	public void setClienteLogic(ClienteLogic clienteLogic) {
		this.clienteLogic = clienteLogic;
	}


	public ServicioClienteLogic servicioclienteLogic=null;

	public ServicioClienteLogic getServicioClienteLogic() {
		return servicioclienteLogic;
	}

	public void setServicioClienteLogic(ServicioClienteLogic servicioclienteLogic) {
		this.servicioclienteLogic = servicioclienteLogic;
	}


	public ProformaLogic proformaLogic=null;

	public ProformaLogic getProformaLogic() {
		return proformaLogic;
	}

	public void setProformaLogic(ProformaLogic proformaLogic) {
		this.proformaLogic = proformaLogic;
	}


	public DescuentoTipoPrecioLogic descuentotipoprecioLogic=null;

	public DescuentoTipoPrecioLogic getDescuentoTipoPrecioLogic() {
		return descuentotipoprecioLogic;
	}

	public void setDescuentoTipoPrecioLogic(DescuentoTipoPrecioLogic descuentotipoprecioLogic) {
		this.descuentotipoprecioLogic = descuentotipoprecioLogic;
	}


	public NotaCreditoPuntoVentaLogic notacreditopuntoventaLogic=null;

	public NotaCreditoPuntoVentaLogic getNotaCreditoPuntoVentaLogic() {
		return notacreditopuntoventaLogic;
	}

	public void setNotaCreditoPuntoVentaLogic(NotaCreditoPuntoVentaLogic notacreditopuntoventaLogic) {
		this.notacreditopuntoventaLogic = notacreditopuntoventaLogic;
	}


	public ParametroCarteraDefectoLogic parametrocarteradefectoLogic=null;

	public ParametroCarteraDefectoLogic getParametroCarteraDefectoLogic() {
		return parametrocarteradefectoLogic;
	}

	public void setParametroCarteraDefectoLogic(ParametroCarteraDefectoLogic parametrocarteradefectoLogic) {
		this.parametrocarteradefectoLogic = parametrocarteradefectoLogic;
	}


	public ConsignacionLogic consignacionLogic=null;

	public ConsignacionLogic getConsignacionLogic() {
		return consignacionLogic;
	}

	public void setConsignacionLogic(ConsignacionLogic consignacionLogic) {
		this.consignacionLogic = consignacionLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoTipoPrecio=false;
	public Boolean esParaAccionDesdeFormularioTipoPrecio=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected TipoPrecioSessionBeanAdditional tipoprecioSessionBeanAdditional=null;
	
	public TipoPrecioSessionBeanAdditional getTipoPrecioSessionBeanAdditional() {
		return this.tipoprecioSessionBeanAdditional;
	}
	
	public void setTipoPrecioSessionBeanAdditional(TipoPrecioSessionBeanAdditional tipoprecioSessionBeanAdditional) {
		try {
			this.tipoprecioSessionBeanAdditional=tipoprecioSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected TipoPrecioBeanSwingJInternalFrameAdditional tipoprecioBeanSwingJInternalFrameAdditional=null;
	//public class TipoPrecioBeanSwingJInternalFrame
	
	public TipoPrecioBeanSwingJInternalFrameAdditional getTipoPrecioBeanSwingJInternalFrameAdditional() {
		return this.tipoprecioBeanSwingJInternalFrameAdditional;
	}
	
	public void setTipoPrecioBeanSwingJInternalFrameAdditional(TipoPrecioBeanSwingJInternalFrameAdditional tipoprecioBeanSwingJInternalFrameAdditional) {
		try {
			this.tipoprecioBeanSwingJInternalFrameAdditional=tipoprecioBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public TipoPrecioLogic tipoprecioLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public TipoPrecio tipoprecioBean;
	public TipoPrecioConstantesFunciones tipoprecioConstantesFunciones;
	//public TipoPrecioParameterReturnGeneral tipoprecioReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	
	//PARAMETROS
	
	
	//public List<TipoPrecio> tipoprecios;	
	//public List<TipoPrecio> tipopreciosEliminados;
	//public List<TipoPrecio> tipopreciosAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoTipoPrecio=false;
	public Boolean isVisibilidadCeldaDuplicarTipoPrecio=true;
	public Boolean isVisibilidadCeldaCopiarTipoPrecio=true;
	public Boolean isVisibilidadCeldaVerFormTipoPrecio=true;
	public Boolean isVisibilidadCeldaOrdenTipoPrecio=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesTipoPrecio=false;
	public Boolean isVisibilidadCeldaModificarTipoPrecio=false;
	public Boolean isVisibilidadCeldaActualizarTipoPrecio=false;
	public Boolean isVisibilidadCeldaEliminarTipoPrecio=false;
	public Boolean isVisibilidadCeldaCancelarTipoPrecio=false;
	public Boolean isVisibilidadCeldaGuardarTipoPrecio=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosTipoPrecio=false;	
	
	
	public Boolean isVisibilidadBusquedaPorCodigo=false;
	public Boolean isVisibilidadBusquedaPorFechaDesde=false;
	public Boolean isVisibilidadBusquedaPorFechaHasta=false;
	public Boolean isVisibilidadBusquedaPorNombre=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	
	public Long getiIdNuevoTipoPrecio() {
		return this.iIdNuevoTipoPrecio;
	}

	public void setiIdNuevoTipoPrecio(Long iIdNuevoTipoPrecio) {
		this.iIdNuevoTipoPrecio = iIdNuevoTipoPrecio;
	}
	
	public Long getidTipoPrecioActual() {
		return this.idTipoPrecioActual;
	}

	public void setidTipoPrecioActual(Long idTipoPrecioActual) {
		this.idTipoPrecioActual = idTipoPrecioActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public TipoPrecio gettipoprecio() {
		return this.tipoprecio;
	}

	public void settipoprecio(TipoPrecio tipoprecio) {
		this.tipoprecio = tipoprecio;
	}
	
	public TipoPrecio gettipoprecioAux() {
		return this.tipoprecioAux;
	}

	public void settipoprecioAux(TipoPrecio tipoprecioAux) {
		this.tipoprecioAux = tipoprecioAux;
	}				
	
	public TipoPrecio gettipoprecioAnterior() {
		return this.tipoprecioAnterior;
	}

	public void settipoprecioAnterior(TipoPrecio tipoprecioAnterior) {
		this.tipoprecioAnterior = tipoprecioAnterior;
	}	
	
	public TipoPrecio gettipoprecioTotales() {
		return this.tipoprecioTotales;
	}

	public void settipoprecioTotales(TipoPrecio tipoprecioTotales) {
		this.tipoprecioTotales = tipoprecioTotales;
	}	
	
	public TipoPrecio gettipoprecioBean() {
		return this.tipoprecioBean;
	}

	public void settipoprecioBean(TipoPrecio tipoprecioBean) {
		this.tipoprecioBean = tipoprecioBean;
	}	
	
	public TipoPrecioParameterReturnGeneral gettipoprecioReturnGeneral() {
		return this.tipoprecioReturnGeneral;
	}

	public void settipoprecioReturnGeneral(TipoPrecioParameterReturnGeneral tipoprecioReturnGeneral) {
		this.tipoprecioReturnGeneral = tipoprecioReturnGeneral;
	}	
	
	
	public String codigoBusquedaPorCodigo="";

	public String getcodigoBusquedaPorCodigo() {
		return this.codigoBusquedaPorCodigo;
	}

	public void setcodigoBusquedaPorCodigo(String codigoBusquedaPorCodigo) {
		this.codigoBusquedaPorCodigo = codigoBusquedaPorCodigo;
	}

	public Date fecha_desdeBusquedaPorFechaDesde=new Date();

	public Date getfecha_desdeBusquedaPorFechaDesde() {
		return this.fecha_desdeBusquedaPorFechaDesde;
	}

	public void setfecha_desdeBusquedaPorFechaDesde(Date fecha_desdeBusquedaPorFechaDesde) {
		this.fecha_desdeBusquedaPorFechaDesde = fecha_desdeBusquedaPorFechaDesde;
	}

	public Date fecha_hastaBusquedaPorFechaHasta=new Date();

	public Date getfecha_hastaBusquedaPorFechaHasta() {
		return this.fecha_hastaBusquedaPorFechaHasta;
	}

	public void setfecha_hastaBusquedaPorFechaHasta(Date fecha_hastaBusquedaPorFechaHasta) {
		this.fecha_hastaBusquedaPorFechaHasta = fecha_hastaBusquedaPorFechaHasta;
	}

	public String nombreBusquedaPorNombre="";

	public String getnombreBusquedaPorNombre() {
		return this.nombreBusquedaPorNombre;
	}

	public void setnombreBusquedaPorNombre(String nombreBusquedaPorNombre) {
		this.nombreBusquedaPorNombre = nombreBusquedaPorNombre;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public TipoPrecioLogic getTipoPrecioLogic()	{		
		return tipoprecioLogic;
	}

	public void setTipoPrecioLogic(TipoPrecioLogic tipoprecioLogic) {
		this.tipoprecioLogic = tipoprecioLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoTipoPrecio() {
		return isEsNuevoTipoPrecio;
	}

	public void setIsEsNuevoTipoPrecio(Boolean isEsNuevoTipoPrecio) {
		this.isEsNuevoTipoPrecio = isEsNuevoTipoPrecio;
	}

	public Boolean getEsParaAccionDesdeFormularioTipoPrecio() {
		return esParaAccionDesdeFormularioTipoPrecio;
	}
	
	public void setEsParaAccionDesdeFormularioTipoPrecio(Boolean esParaAccionDesdeFormularioTipoPrecio) {
		this.esParaAccionDesdeFormularioTipoPrecio = esParaAccionDesdeFormularioTipoPrecio;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(!this.tipoprecioSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(tipoprecioSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.tipoprecio!=null) {
						this.tipoprecio.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
						this.jInternalFrameDetalleFormTipoPrecio.jComboBoxid_empresaTipoPrecio.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaTipoPrecio.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
						if(this.jInternalFrameDetalleFormTipoPrecio.jComboBoxid_empresaTipoPrecio.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoPrecio.jComboBoxid_empresaTipoPrecio.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaTipoPrecioGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaTipoPrecioGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaTipoPrecioGenerico!=null && jComboBoxid_empresaTipoPrecioGenerico.getItemCount()>0) {
					jComboBoxid_empresaTipoPrecioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(TipoPrecio tipoprecio,JComboBox jComboBoxid_empresaTipoPrecioGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaTipoPrecioGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormTipoPrecio.jComboBoxid_empresaTipoPrecio.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaTipoPrecioGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				tipoprecio.setid_empresa(empresaAux.getId());
				tipoprecio.setempresa_descripcion(TipoPrecioConstantesFunciones.getEmpresaDescripcion(empresaAux));
				tipoprecio.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoPrecioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoPrecio!=null) { 
							this.jInternalFrameDetalleFormTipoPrecio.jComboBoxid_empresaTipoPrecio.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormTipoPrecio.jComboBoxid_empresaTipoPrecio.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoPrecio!=null) { 
					}

					if(!TipoPrecioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
							this.jInternalFrameDetalleFormTipoPrecio.jComboBoxid_empresaTipoPrecio.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
							this.jInternalFrameDetalleFormTipoPrecio.jComboBoxid_empresaTipoPrecio.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesTipoPrecio() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			TipoPrecioConstantesFunciones.refrescarForeignKeysDescripcionesTipoPrecio(this.tipoprecioLogic.getTipoPrecios());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			TipoPrecioConstantesFunciones.refrescarForeignKeysDescripcionesTipoPrecio(this.tipoprecios);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//tipoprecioLogic.setTipoPrecios(this.tipoprecios);
			tipoprecioLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public TipoPrecioParameterReturnGeneral getTipoPrecioParameterGeneral() {
		return this.tipoprecioParameterGeneral;
	}
	
	public void setTipoPrecioParameterGeneral(TipoPrecioParameterReturnGeneral tipoprecioParameterGeneral) {
		this.tipoprecioParameterGeneral = tipoprecioParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoTipoPrecio() {
		return isPermisoTodoTipoPrecio;
	}

	public void setIsPermisoTodoTipoPrecio(Boolean isPermisoTodoTipoPrecio) {
		this.isPermisoTodoTipoPrecio = isPermisoTodoTipoPrecio;
	}

	public Boolean getIsPermisoNuevoTipoPrecio() {
		return isPermisoNuevoTipoPrecio;
	}

	public void setIsPermisoNuevoTipoPrecio(Boolean isPermisoNuevoTipoPrecio) {
		this.isPermisoNuevoTipoPrecio = isPermisoNuevoTipoPrecio;
	}

	public Boolean getIsPermisoActualizarTipoPrecio() {
		return isPermisoActualizarTipoPrecio;
	}

	public void setIsPermisoActualizarTipoPrecio(Boolean isPermisoActualizarTipoPrecio) {
		this.isPermisoActualizarTipoPrecio = isPermisoActualizarTipoPrecio;
	}

	public Boolean getIsPermisoEliminarTipoPrecio() {
		return isPermisoEliminarTipoPrecio;
	}

	public void setIsPermisoEliminarTipoPrecio(Boolean isPermisoEliminarTipoPrecio) {
		this.isPermisoEliminarTipoPrecio = isPermisoEliminarTipoPrecio;
	}

	public Boolean getIsPermisoGuardarCambiosTipoPrecio() {
		return isPermisoGuardarCambiosTipoPrecio;
	}

	public void setIsPermisoGuardarCambiosTipoPrecio(Boolean isPermisoGuardarCambiosTipoPrecio) {
		this.isPermisoGuardarCambiosTipoPrecio = isPermisoGuardarCambiosTipoPrecio;
	}
	
	public Boolean getIsPermisoConsultaTipoPrecio() {
		return isPermisoConsultaTipoPrecio;
	}

	public void setIsPermisoConsultaTipoPrecio(Boolean isPermisoConsultaTipoPrecio) {
		this.isPermisoConsultaTipoPrecio = isPermisoConsultaTipoPrecio;
	}

	public Boolean getIsPermisoBusquedaTipoPrecio() {
		return isPermisoBusquedaTipoPrecio;
	}

	public void setIsPermisoBusquedaTipoPrecio(Boolean isPermisoBusquedaTipoPrecio) {
		this.isPermisoBusquedaTipoPrecio = isPermisoBusquedaTipoPrecio;
	}

	public Boolean getIsPermisoReporteTipoPrecio() {
		return isPermisoReporteTipoPrecio;
	}

	public void setIsPermisoReporteTipoPrecio(Boolean isPermisoReporteTipoPrecio) {
		this.isPermisoReporteTipoPrecio = isPermisoReporteTipoPrecio;
	}
	
	public Boolean getIsPermisoPaginacionMedioTipoPrecio() {
		return isPermisoPaginacionMedioTipoPrecio;
	}

	public void setIsPermisoPaginacionMedioTipoPrecio(Boolean isPermisoPaginacionMedioTipoPrecio) {
		this.isPermisoPaginacionMedioTipoPrecio = isPermisoPaginacionMedioTipoPrecio;
	}
	
	public Boolean getIsPermisoPaginacionTodoTipoPrecio() {
		return isPermisoPaginacionTodoTipoPrecio;
	}

	public void setIsPermisoPaginacionTodoTipoPrecio(Boolean isPermisoPaginacionTodoTipoPrecio) {
		this.isPermisoPaginacionTodoTipoPrecio = isPermisoPaginacionTodoTipoPrecio;
	}
	
	public Boolean getIsPermisoPaginacionAltoTipoPrecio() {
		return isPermisoPaginacionAltoTipoPrecio;
	}

	public void setIsPermisoPaginacionAltoTipoPrecio(Boolean isPermisoPaginacionAltoTipoPrecio) {
		this.isPermisoPaginacionAltoTipoPrecio = isPermisoPaginacionAltoTipoPrecio;
	}
	
	public Boolean getIsPermisoCopiarTipoPrecio() {
		return isPermisoCopiarTipoPrecio;
	}

	public void setIsPermisoCopiarTipoPrecio(Boolean isPermisoCopiarTipoPrecio) {
		this.isPermisoCopiarTipoPrecio = isPermisoCopiarTipoPrecio;
	}
	
	public Boolean getIsPermisoVerFormTipoPrecio() {
		return isPermisoVerFormTipoPrecio;
	}

	public void setIsPermisoVerFormTipoPrecio(Boolean isPermisoVerFormTipoPrecio) {
		this.isPermisoVerFormTipoPrecio = isPermisoVerFormTipoPrecio;
	}
	
	public Boolean getIsPermisoDuplicarTipoPrecio() {
		return isPermisoDuplicarTipoPrecio;
	}

	public void setIsPermisoDuplicarTipoPrecio(Boolean isPermisoDuplicarTipoPrecio) {
		this.isPermisoDuplicarTipoPrecio = isPermisoDuplicarTipoPrecio;
	}
	
	public Boolean getIsPermisoOrdenTipoPrecio() {
		return isPermisoOrdenTipoPrecio;
	}

	public void setIsPermisoOrdenTipoPrecio(Boolean isPermisoOrdenTipoPrecio) {
		this.isPermisoOrdenTipoPrecio = isPermisoOrdenTipoPrecio;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoTipoPrecio() {
		return isVisibilidadCeldaNuevoTipoPrecio;
	}

	public void setIsVisibilidadCeldaNuevoTipoPrecio(Boolean isVisibilidadCeldaNuevoTipoPrecio) {
		this.isVisibilidadCeldaNuevoTipoPrecio = isVisibilidadCeldaNuevoTipoPrecio;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarTipoPrecio() {
		return isVisibilidadCeldaDuplicarTipoPrecio;
	}

	public void setIsVisibilidadCeldaDuplicarTipoPrecio(Boolean isVisibilidadCeldaDuplicarTipoPrecio) {
		this.isVisibilidadCeldaDuplicarTipoPrecio = isVisibilidadCeldaDuplicarTipoPrecio;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarTipoPrecio() {
		return isVisibilidadCeldaCopiarTipoPrecio;
	}

	public void setIsVisibilidadCeldaCopiarTipoPrecio(Boolean isVisibilidadCeldaCopiarTipoPrecio) {
		this.isVisibilidadCeldaCopiarTipoPrecio = isVisibilidadCeldaCopiarTipoPrecio;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormTipoPrecio() {
		return isVisibilidadCeldaVerFormTipoPrecio;
	}

	public void setIsVisibilidadCeldaVerFormTipoPrecio(Boolean isVisibilidadCeldaVerFormTipoPrecio) {
		this.isVisibilidadCeldaVerFormTipoPrecio = isVisibilidadCeldaVerFormTipoPrecio;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenTipoPrecio() {
		return isVisibilidadCeldaOrdenTipoPrecio;
	}

	public void setIsVisibilidadCeldaOrdenTipoPrecio(Boolean isVisibilidadCeldaOrdenTipoPrecio) {
		this.isVisibilidadCeldaOrdenTipoPrecio = isVisibilidadCeldaOrdenTipoPrecio;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesTipoPrecio() {
		return isVisibilidadCeldaNuevoRelacionesTipoPrecio;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesTipoPrecio(Boolean isVisibilidadCeldaNuevoRelacionesTipoPrecio) {
		this.isVisibilidadCeldaNuevoRelacionesTipoPrecio = isVisibilidadCeldaNuevoRelacionesTipoPrecio;
	}
	
	public Boolean getIsVisibilidadCeldaModificarTipoPrecio() {
		return isVisibilidadCeldaModificarTipoPrecio;
	}

	public void setIsVisibilidadCeldaModificarTipoPrecio(Boolean isVisibilidadCeldaModificarTipoPrecio) {
		this.isVisibilidadCeldaModificarTipoPrecio = isVisibilidadCeldaModificarTipoPrecio;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarTipoPrecio() {
		return isVisibilidadCeldaActualizarTipoPrecio;
	}

	public void setIsVisibilidadCeldaActualizarTipoPrecio(Boolean isVisibilidadCeldaActualizarTipoPrecio) {
		this.isVisibilidadCeldaActualizarTipoPrecio = isVisibilidadCeldaActualizarTipoPrecio;
	}

	public Boolean getIsVisibilidadCeldaEliminarTipoPrecio() {
		return isVisibilidadCeldaEliminarTipoPrecio;
	}

	public void setIsVisibilidadCeldaEliminarTipoPrecio(Boolean isVisibilidadCeldaEliminarTipoPrecio) {
		this.isVisibilidadCeldaEliminarTipoPrecio = isVisibilidadCeldaEliminarTipoPrecio;
	}

	public Boolean getIsVisibilidadCeldaCancelarTipoPrecio() {
		return isVisibilidadCeldaCancelarTipoPrecio;
	}

	public void setIsVisibilidadCeldaCancelarTipoPrecio(Boolean isVisibilidadCeldaCancelarTipoPrecio) {
		this.isVisibilidadCeldaCancelarTipoPrecio = isVisibilidadCeldaCancelarTipoPrecio;
	}

	public Boolean getIsVisibilidadCeldaGuardarTipoPrecio() {
		return isVisibilidadCeldaGuardarTipoPrecio;
	}

	public void setIsVisibilidadCeldaGuardarTipoPrecio(Boolean isVisibilidadCeldaGuardarTipoPrecio) {
		this.isVisibilidadCeldaGuardarTipoPrecio = isVisibilidadCeldaGuardarTipoPrecio;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosTipoPrecio() {
		return isVisibilidadCeldaGuardarCambiosTipoPrecio;
	}

	public void setIsVisibilidadCeldaGuardarCambiosTipoPrecio(Boolean isVisibilidadCeldaGuardarCambiosTipoPrecio) {
		this.isVisibilidadCeldaGuardarCambiosTipoPrecio = isVisibilidadCeldaGuardarCambiosTipoPrecio;
	}
		
	public TipoPrecioSessionBean gettipoprecioSessionBean() {
		return this.tipoprecioSessionBean;
	}
	
	public void settipoprecioSessionBean(TipoPrecioSessionBean tipoprecioSessionBean) {
		this.tipoprecioSessionBean=tipoprecioSessionBean;
	}
	
	
	public Boolean getisVisibilidadBusquedaPorCodigo() {
		return this.isVisibilidadBusquedaPorCodigo;
	}

	public void setisVisibilidadBusquedaPorCodigo(Boolean isVisibilidadBusquedaPorCodigo) {
		this.isVisibilidadBusquedaPorCodigo=isVisibilidadBusquedaPorCodigo;
	}

	public Boolean getisVisibilidadBusquedaPorFechaDesde() {
		return this.isVisibilidadBusquedaPorFechaDesde;
	}

	public void setisVisibilidadBusquedaPorFechaDesde(Boolean isVisibilidadBusquedaPorFechaDesde) {
		this.isVisibilidadBusquedaPorFechaDesde=isVisibilidadBusquedaPorFechaDesde;
	}

	public Boolean getisVisibilidadBusquedaPorFechaHasta() {
		return this.isVisibilidadBusquedaPorFechaHasta;
	}

	public void setisVisibilidadBusquedaPorFechaHasta(Boolean isVisibilidadBusquedaPorFechaHasta) {
		this.isVisibilidadBusquedaPorFechaHasta=isVisibilidadBusquedaPorFechaHasta;
	}

	public Boolean getisVisibilidadBusquedaPorNombre() {
		return this.isVisibilidadBusquedaPorNombre;
	}

	public void setisVisibilidadBusquedaPorNombre(Boolean isVisibilidadBusquedaPorNombre) {
		this.isVisibilidadBusquedaPorNombre=isVisibilidadBusquedaPorNombre;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(TipoPrecio tipoprecio)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(tipoprecio,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(TipoPrecio tipoprecio,TipoPrecio tipoprecioAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalTipoPrecio(tipoprecio);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		tipoprecioAux.setId(tipoprecio.getId());
		tipoprecioAux.setVersionRow(tipoprecio.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessTipoPrecio();
		
			int intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(TipoPrecioJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = tipoprecioValidator.getInvalidValues(this.tipoprecio);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			tipoprecioLogic.setDatosCliente(datosCliente);
			tipoprecioLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				tipoprecioAux=new  TipoPrecio();
				
				tipoprecioAux.setIsNew(true);
				tipoprecioAux.setIsChanged(true);
				
				tipoprecioAux.setTipoPrecioOriginal(this.tipoprecio);
				
				tipoprecioAux.setId(this.tipoprecio.getId());	
				tipoprecioAux.setVersionRow(this.tipoprecio.getVersionRow());	
				tipoprecioAux.setid_empresa(this.tipoprecio.getid_empresa());	
				tipoprecioAux.setcodigo(this.tipoprecio.getcodigo());	
				tipoprecioAux.setnombre(this.tipoprecio.getnombre());	
				tipoprecioAux.setfecha_desde(this.tipoprecio.getfecha_desde());	
				tipoprecioAux.setfecha_hasta(this.tipoprecio.getfecha_hasta());	
				tipoprecioAux.setmonto(this.tipoprecio.getmonto());	
				tipoprecioAux.setesta_activo(this.tipoprecio.getesta_activo());	
				tipoprecioAux.setdescripcion(this.tipoprecio.getdescripcion());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.tipoprecioSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.tipoprecioSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(tipoprecioAux,tipoprecioLogic.getTipoPrecios());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(tipoprecioAux,tipoprecios);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.tipoprecioSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.tipoprecioSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoprecioLogic.saveTipoPrecios();//WithConnection
						//tipoprecioLogic.getSetVersionRowTipoPrecios();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.tipoprecio,tipoprecioAux);
					
					this.refrescarForeignKeysDescripcionesTipoPrecio();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.tipoprecioSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.getPrecios().addAll(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.preciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.getUtilidadTipoPrecios().addAll(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipopreciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.getPedidoPuntoVentas().addAll(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.getDescuentoTipoPrecios().addAll(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipopreciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasClientes().addAll(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.getProformas().addAll(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.getNotaCreditoSolis().addAll(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosolisEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions().addAll(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors().addAll(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes().addAll(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.getFacturaPuntoVentas().addAll(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions().addAll(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.getClientes().addAll(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.getNotaCreditoPuntoVentas().addAll(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precios.addAll(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.preciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecios.addAll(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipopreciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventas.addAll(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectos.addAll(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecios.addAll(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipopreciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclientes.addAll(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformas.addAll(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosolis.addAll(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosolisEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacions.addAll(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexpors.addAll(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclientes.addAll(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventas.addAll(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisions.addAll(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clientes.addAll(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventas.addAll(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventasEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								tipoprecioLogic.saveTipoPrecioRelaciones(tipoprecioAux,this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.getPrecios(),this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasClientes(),this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.getNotaCreditoSolis(),this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions(),this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors(),this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.getFacturaPuntoVentas(),this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.getPedidoPuntoVentas(),this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.getUtilidadTipoPrecios(),this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.getClientes(),this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes(),this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.getProformas(),this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.getDescuentoTipoPrecios(),this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.getNotaCreditoPuntoVentas(),this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.getParametroCarteraDefectos(),this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions());//WithConnection
								//tipoprecioLogic.getSetVersionRowTipoPrecios();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.tipoprecio,tipoprecioAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.setPrecios(new ArrayList<Precio>());
							this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.setUtilidadTipoPrecios(new ArrayList<UtilidadTipoPrecio>());
							this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.setPedidoPuntoVentas(new ArrayList<PedidoPuntoVenta>());
							this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
							this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.setDescuentoTipoPrecios(new ArrayList<DescuentoTipoPrecio>());
							this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.setPoliticasClientes(new ArrayList<PoliticasCliente>());
							this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.setProformas(new ArrayList<Proforma>());
							this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.setNotaCreditoSolis(new ArrayList<NotaCreditoSoli>());
							this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
							this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
							this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.setServicioClientes(new ArrayList<ServicioCliente>());
							this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.setFacturaPuntoVentas(new ArrayList<FacturaPuntoVenta>());
							this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
							this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.setClientes(new ArrayList<Cliente>());
							this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.setNotaCreditoPuntoVentas(new ArrayList<NotaCreditoPuntoVenta>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precios= new ArrayList<Precio>();
							this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecios= new ArrayList<UtilidadTipoPrecio>();
							this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventas= new ArrayList<PedidoPuntoVenta>();
							this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectos= new ArrayList<ParametroCarteraDefecto>();
							this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecios= new ArrayList<DescuentoTipoPrecio>();
							this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclientes= new ArrayList<PoliticasCliente>();
							this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformas= new ArrayList<Proforma>();
							this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosolis= new ArrayList<NotaCreditoSoli>();
							this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacions= new ArrayList<Consignacion>();
							this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexpors= new ArrayList<PedidoExpor>();
							this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclientes= new ArrayList<ServicioCliente>();
							this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventas= new ArrayList<FacturaPuntoVenta>();
							this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisions= new ArrayList<GuiaRemision>();
							this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clientes= new ArrayList<Cliente>();
							this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventas= new ArrayList<NotaCreditoPuntoVenta>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setPrecios(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.getPrecios());

							if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setPoliticasClientes(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasClientes());

							if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setNotaCreditoSolis(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.getNotaCreditoSolis());

							if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setGuiaRemisions(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions());

							if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setPedidoExpors(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors());

							if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setFacturaPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.getFacturaPuntoVentas());

							if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setPedidoPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.getPedidoPuntoVentas());

							if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setUtilidadTipoPrecios(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.getUtilidadTipoPrecios());

							if(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setClientes(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.getClientes());

							if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setServicioClientes(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes());

							if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setProformas(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.getProformas());

							if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setDescuentoTipoPrecios(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.getDescuentoTipoPrecios());

							if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setNotaCreditoPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.getNotaCreditoPuntoVentas());

							if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setParametroCarteraDefectos(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.getParametroCarteraDefectos());

							if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setConsignacions(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.tipoprecioSessionBean.getEstaModoGuardarRelaciones() 
									|| this.tipoprecioSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(tipoprecioAux,tipoprecioLogic.getTipoPrecios());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(tipoprecioAux,tipoprecios);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.tipoprecio,tipoprecioAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				tipoprecioAux=new  TipoPrecio();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.tipoprecioSessionBean.getEsGuardarRelacionado() 
					|| (this.tipoprecioSessionBean.getEsGuardarRelacionado() && this.tipoprecio.getId()>=0)) {
						
					tipoprecioAux.setIsNew(false);
				}
				
				tipoprecioAux.setIsDeleted(false);
			
				tipoprecioAux.setId(this.tipoprecio.getId());	
				tipoprecioAux.setVersionRow(this.tipoprecio.getVersionRow());	
				tipoprecioAux.setid_empresa(this.tipoprecio.getid_empresa());	
				tipoprecioAux.setcodigo(this.tipoprecio.getcodigo());	
				tipoprecioAux.setnombre(this.tipoprecio.getnombre());	
				tipoprecioAux.setfecha_desde(this.tipoprecio.getfecha_desde());	
				tipoprecioAux.setfecha_hasta(this.tipoprecio.getfecha_hasta());	
				tipoprecioAux.setmonto(this.tipoprecio.getmonto());	
				tipoprecioAux.setesta_activo(this.tipoprecio.getesta_activo());	
				tipoprecioAux.setdescripcion(this.tipoprecio.getdescripcion());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(tipoprecioAux,tipoprecioLogic.getTipoPrecios());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(tipoprecioAux,tipoprecios);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.tipoprecioSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.tipoprecioSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoprecioLogic.saveTipoPrecios();//WithConnection
						//tipoprecioLogic.getSetVersionRowTipoPrecios();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.tipoprecio,tipoprecioAux);
					
					this.refrescarForeignKeysDescripcionesTipoPrecio();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.tipoprecioSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.getPrecios().addAll(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.preciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.getUtilidadTipoPrecios().addAll(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipopreciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.getPedidoPuntoVentas().addAll(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.getDescuentoTipoPrecios().addAll(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipopreciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasClientes().addAll(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.getProformas().addAll(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.getNotaCreditoSolis().addAll(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosolisEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions().addAll(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors().addAll(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes().addAll(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.getFacturaPuntoVentas().addAll(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions().addAll(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.getClientes().addAll(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.getNotaCreditoPuntoVentas().addAll(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precios.addAll(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.preciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecios.addAll(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipopreciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventas.addAll(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectos.addAll(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecios.addAll(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipopreciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclientes.addAll(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformas.addAll(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosolis.addAll(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosolisEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacions.addAll(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexpors.addAll(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclientes.addAll(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventas.addAll(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisions.addAll(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clientes.addAll(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventas.addAll(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventasEliminados);
						}
						//ARCHITECTURE
						
						if(!this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								tipoprecioLogic.saveTipoPrecioRelaciones(tipoprecioAux,this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.getPrecios(),this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasClientes(),this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.getNotaCreditoSolis(),this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions(),this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors(),this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.getFacturaPuntoVentas(),this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.getPedidoPuntoVentas(),this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.getUtilidadTipoPrecios(),this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.getClientes(),this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes(),this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.getProformas(),this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.getDescuentoTipoPrecios(),this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.getNotaCreditoPuntoVentas(),this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.getParametroCarteraDefectos(),this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions());//WithConnection
								//tipoprecioLogic.getSetVersionRowTipoPrecios();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.tipoprecio,tipoprecioAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.setPrecios(new ArrayList<Precio>());
							this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.setUtilidadTipoPrecios(new ArrayList<UtilidadTipoPrecio>());
							this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.setPedidoPuntoVentas(new ArrayList<PedidoPuntoVenta>());
							this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
							this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.setDescuentoTipoPrecios(new ArrayList<DescuentoTipoPrecio>());
							this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.setPoliticasClientes(new ArrayList<PoliticasCliente>());
							this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.setProformas(new ArrayList<Proforma>());
							this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.setNotaCreditoSolis(new ArrayList<NotaCreditoSoli>());
							this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
							this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
							this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.setServicioClientes(new ArrayList<ServicioCliente>());
							this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.setFacturaPuntoVentas(new ArrayList<FacturaPuntoVenta>());
							this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
							this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.setClientes(new ArrayList<Cliente>());
							this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.setNotaCreditoPuntoVentas(new ArrayList<NotaCreditoPuntoVenta>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precios= new ArrayList<Precio>();
							this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecios= new ArrayList<UtilidadTipoPrecio>();
							this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventas= new ArrayList<PedidoPuntoVenta>();
							this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectos= new ArrayList<ParametroCarteraDefecto>();
							this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecios= new ArrayList<DescuentoTipoPrecio>();
							this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclientes= new ArrayList<PoliticasCliente>();
							this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformas= new ArrayList<Proforma>();
							this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosolis= new ArrayList<NotaCreditoSoli>();
							this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacions= new ArrayList<Consignacion>();
							this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexpors= new ArrayList<PedidoExpor>();
							this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclientes= new ArrayList<ServicioCliente>();
							this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventas= new ArrayList<FacturaPuntoVenta>();
							this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisions= new ArrayList<GuiaRemision>();
							this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clientes= new ArrayList<Cliente>();
							this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventas= new ArrayList<NotaCreditoPuntoVenta>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setPrecios(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.getPrecios());

							if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setPoliticasClientes(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasClientes());

							if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setNotaCreditoSolis(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.getNotaCreditoSolis());

							if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setGuiaRemisions(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions());

							if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setPedidoExpors(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors());

							if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setFacturaPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.getFacturaPuntoVentas());

							if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setPedidoPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.getPedidoPuntoVentas());

							if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setUtilidadTipoPrecios(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.getUtilidadTipoPrecios());

							if(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setClientes(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.getClientes());

							if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setServicioClientes(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes());

							if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setProformas(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.getProformas());

							if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setDescuentoTipoPrecios(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.getDescuentoTipoPrecios());

							if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setNotaCreditoPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.getNotaCreditoPuntoVentas());

							if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setParametroCarteraDefectos(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.getParametroCarteraDefectos());

							if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setConsignacions(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.tipoprecioSessionBean.getEstaModoGuardarRelaciones() 
									|| this.tipoprecioSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(tipoprecioAux,tipoprecioLogic.getTipoPrecios());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(tipoprecioAux,tipoprecios);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.tipoprecio,tipoprecioAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				tipoprecioAux=new  TipoPrecio();
				
				tipoprecioAux.setIsNew(false);
				tipoprecioAux.setIsChanged(false);
				
				tipoprecioAux.setIsDeleted(true);
				
				tipoprecioAux.setId(this.tipoprecio.getId());	
				tipoprecioAux.setVersionRow(this.tipoprecio.getVersionRow());	
				tipoprecioAux.setid_empresa(this.tipoprecio.getid_empresa());	
				tipoprecioAux.setcodigo(this.tipoprecio.getcodigo());	
				tipoprecioAux.setnombre(this.tipoprecio.getnombre());	
				tipoprecioAux.setfecha_desde(this.tipoprecio.getfecha_desde());	
				tipoprecioAux.setfecha_hasta(this.tipoprecio.getfecha_hasta());	
				tipoprecioAux.setmonto(this.tipoprecio.getmonto());	
				tipoprecioAux.setesta_activo(this.tipoprecio.getesta_activo());	
				tipoprecioAux.setdescripcion(this.tipoprecio.getdescripcion());	
				
				if(this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.tipoprecioAux.getId()>=0) {	
						this.tipopreciosEliminados.add(tipoprecioAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(tipoprecioAux,tipoprecioLogic.getTipoPrecios());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(tipoprecioAux,tipoprecios);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.tipoprecioSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.tipoprecioSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoprecioLogic.saveTipoPrecios();//WithConnection
						//tipoprecioLogic.getSetVersionRowTipoPrecios();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.tipoprecioSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.getPrecios().addAll(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.preciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.getUtilidadTipoPrecios().addAll(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipopreciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.getPedidoPuntoVentas().addAll(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.getDescuentoTipoPrecios().addAll(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipopreciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasClientes().addAll(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.getProformas().addAll(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.getNotaCreditoSolis().addAll(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosolisEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions().addAll(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors().addAll(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes().addAll(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.getFacturaPuntoVentas().addAll(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions().addAll(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.getClientes().addAll(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.getNotaCreditoPuntoVentas().addAll(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precios.addAll(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.preciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecios.addAll(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipopreciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventas.addAll(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectos.addAll(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecios.addAll(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipopreciosEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclientes.addAll(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformas.addAll(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosolis.addAll(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosolisEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacions.addAll(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexpors.addAll(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclientes.addAll(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventas.addAll(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisions.addAll(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionsEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clientes.addAll(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clientesEliminados);
							this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventas.addAll(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventasEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoPuntoVenta.detallepedidopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.formapagopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormFacturaPuntoVenta.detallefacturapuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoPuntoVenta.detallenotacreditopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								tipoprecioLogic.saveTipoPrecioRelaciones(tipoprecioAux,this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.getPrecios(),this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasClientes(),this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.getNotaCreditoSolis(),this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions(),this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors(),this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.getFacturaPuntoVentas(),this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.getPedidoPuntoVentas(),this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.getUtilidadTipoPrecios(),this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.getClientes(),this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes(),this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.getProformas(),this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.getDescuentoTipoPrecios(),this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.getNotaCreditoPuntoVentas(),this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.getParametroCarteraDefectos(),this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions());//WithConnection
								//tipoprecioLogic.getSetVersionRowTipoPrecios();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.setPrecios(new ArrayList<Precio>());
							this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.setUtilidadTipoPrecios(new ArrayList<UtilidadTipoPrecio>());
							this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.setPedidoPuntoVentas(new ArrayList<PedidoPuntoVenta>());
							this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
							this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.setDescuentoTipoPrecios(new ArrayList<DescuentoTipoPrecio>());
							this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.setPoliticasClientes(new ArrayList<PoliticasCliente>());
							this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.setProformas(new ArrayList<Proforma>());
							this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.setNotaCreditoSolis(new ArrayList<NotaCreditoSoli>());
							this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
							this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
							this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.setServicioClientes(new ArrayList<ServicioCliente>());
							this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.setFacturaPuntoVentas(new ArrayList<FacturaPuntoVenta>());
							this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
							this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.setClientes(new ArrayList<Cliente>());
							this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.setNotaCreditoPuntoVentas(new ArrayList<NotaCreditoPuntoVenta>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precios= new ArrayList<Precio>();
							this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecios= new ArrayList<UtilidadTipoPrecio>();
							this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventas= new ArrayList<PedidoPuntoVenta>();
							this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectos= new ArrayList<ParametroCarteraDefecto>();
							this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecios= new ArrayList<DescuentoTipoPrecio>();
							this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclientes= new ArrayList<PoliticasCliente>();
							this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformas= new ArrayList<Proforma>();
							this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosolis= new ArrayList<NotaCreditoSoli>();
							this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacions= new ArrayList<Consignacion>();
							this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexpors= new ArrayList<PedidoExpor>();
							this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclientes= new ArrayList<ServicioCliente>();
							this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventas= new ArrayList<FacturaPuntoVenta>();
							this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisions= new ArrayList<GuiaRemision>();
							this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clientes= new ArrayList<Cliente>();
							this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventas= new ArrayList<NotaCreditoPuntoVenta>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setPrecios(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.getPrecios());

							if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setPoliticasClientes(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasClientes());

							if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setNotaCreditoSolis(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.getNotaCreditoSolis());

							if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setGuiaRemisions(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions());

							if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setPedidoExpors(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors());

							if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setFacturaPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.getFacturaPuntoVentas());

							if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setPedidoPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.getPedidoPuntoVentas());

							if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setUtilidadTipoPrecios(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.getUtilidadTipoPrecios());

							if(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setClientes(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.getClientes());

							if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setServicioClientes(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes());

							if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setProformas(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.getProformas());

							if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setDescuentoTipoPrecios(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.getDescuentoTipoPrecios());

							if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setNotaCreditoPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.getNotaCreditoPuntoVentas());

							if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setParametroCarteraDefectos(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.getParametroCarteraDefectos());

							if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoprecioAux.setConsignacions(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.tipoprecioSessionBean.getEstaModoGuardarRelaciones() 
								|| this.tipoprecioSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(tipoprecioAux,tipoprecioLogic.getTipoPrecios());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(tipoprecioAux,tipoprecios);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getTipoPrecios().addAll(this.tipopreciosEliminados);
					
					tipoprecioLogic.saveTipoPrecios();//WithConnection
					//tipoprecioLogic.getSetVersionRowTipoPrecios();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesTipoPrecio();
				
				this.tipopreciosEliminados= new ArrayList<TipoPrecio>();		
			}
			
			if(this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoprecioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Tipo Precio GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Tipo Precio",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.tipoprecio=tipoprecioAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessTipoPrecio();
      	}
		
	}	
	
	public void actualizarRelaciones(TipoPrecio tipoprecioLocal) throws Exception {
		
		if(this.tipoprecioSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				tipoprecioLocal.setPrecios(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.getPrecios());
				tipoprecioLocal.setPoliticasClientes(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasClientes());
				tipoprecioLocal.setNotaCreditoSolis(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.getNotaCreditoSolis());
				tipoprecioLocal.setGuiaRemisions(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions());
				tipoprecioLocal.setPedidoExpors(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors());
				tipoprecioLocal.setFacturaPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.getFacturaPuntoVentas());
				tipoprecioLocal.setPedidoPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.getPedidoPuntoVentas());
				tipoprecioLocal.setUtilidadTipoPrecios(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.getUtilidadTipoPrecios());
				tipoprecioLocal.setClientes(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.getClientes());
				tipoprecioLocal.setServicioClientes(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes());
				tipoprecioLocal.setProformas(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.getProformas());
				tipoprecioLocal.setDescuentoTipoPrecios(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.getDescuentoTipoPrecios());
				tipoprecioLocal.setNotaCreditoPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.getNotaCreditoPuntoVentas());
				tipoprecioLocal.setParametroCarteraDefectos(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.getParametroCarteraDefectos());
				tipoprecioLocal.setConsignacions(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions());
			
			} else {
			
				tipoprecioLocal.setPrecios(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precios);
				tipoprecioLocal.setPoliticasClientes(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclientes);
				tipoprecioLocal.setNotaCreditoSolis(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosolis);
				tipoprecioLocal.setGuiaRemisions(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisions);
				tipoprecioLocal.setPedidoExpors(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexpors);
				tipoprecioLocal.setFacturaPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventas);
				tipoprecioLocal.setPedidoPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventas);
				tipoprecioLocal.setUtilidadTipoPrecios(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecios);
				tipoprecioLocal.setClientes(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clientes);
				tipoprecioLocal.setServicioClientes(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclientes);
				tipoprecioLocal.setProformas(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformas);
				tipoprecioLocal.setDescuentoTipoPrecios(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecios);
				tipoprecioLocal.setNotaCreditoPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventas);
				tipoprecioLocal.setParametroCarteraDefectos(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectos);
				tipoprecioLocal.setConsignacions(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacions);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(TipoPrecio tipoprecioLocal) throws Exception {	
		if(this.tipoprecioSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				tipoprecioLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarTipoPrecioActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = tipoprecioValidator.getInvalidValues(this.tipoprecio);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(TipoPrecio tipoprecio,List<TipoPrecio> tipoprecios) throws Exception {
		try	{		
			TipoPrecioConstantesFunciones.actualizarLista(tipoprecio,tipoprecios,this.tipoprecioSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(TipoPrecio tipoprecio,List<TipoPrecio> tipoprecios) throws Exception {
		try	{			
			TipoPrecioConstantesFunciones.actualizarSelectedLista(tipoprecio,tipoprecios);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<TipoPrecio> tipopreciosLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				tipopreciosLocal=this.tipoprecioLogic.getTipoPrecios();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				tipopreciosLocal=this.tipoprecios;
			}
			//ARCHITECTURE
		
			for(TipoPrecio tipoprecioLocal:tipopreciosLocal) {
				if(this.permiteMantenimiento(tipoprecioLocal) && tipoprecioLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+TipoPrecioConstantesFunciones.getTipoPrecioLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(TipoPrecioConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabelid_empresaTipoPrecio,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoPrecioConstantesFunciones.CODIGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabelcodigoTipoPrecio,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoPrecioConstantesFunciones.NOMBRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabelnombreTipoPrecio,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoPrecioConstantesFunciones.FECHADESDE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabelfecha_desdeTipoPrecio,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoPrecioConstantesFunciones.FECHAHASTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabelfecha_hastaTipoPrecio,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoPrecioConstantesFunciones.MONTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabelmontoTipoPrecio,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoPrecioConstantesFunciones.ESTAACTIVO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabelesta_activoTipoPrecio,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoPrecioConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabeldescripcionTipoPrecio,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoPrecio.jLabelid_empresaTipoPrecio,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoPrecio.jLabelcodigoTipoPrecio,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoPrecio.jLabelnombreTipoPrecio,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoPrecio.jLabelfecha_desdeTipoPrecio,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoPrecio.jLabelfecha_hastaTipoPrecio,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoPrecio.jLabelmontoTipoPrecio,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoPrecio.jLabelesta_activoTipoPrecio,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoPrecio.jLabeldescripcionTipoPrecio,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("Precio")) {
			if(this.tipoprecio==null) {
				this.tipoprecio= new TipoPrecio();
			}

			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoPrecio
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.getprecio().setTipoPrecio(this.tipoprecio);
			}

			return;
		}
		 else  if(sTipo.equals("PoliticasCliente")) {
			if(this.tipoprecio==null) {
				this.tipoprecio= new TipoPrecio();
			}

			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoPrecio
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.getpoliticascliente().setTipoPrecio(this.tipoprecio);
			}

			return;
		}
		 else  if(sTipo.equals("NotaCreditoSoli")) {
			if(this.tipoprecio==null) {
				this.tipoprecio= new TipoPrecio();
			}

			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoPrecio
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.getnotacreditosoli().setTipoPrecio(this.tipoprecio);
			}

			return;
		}
		 else  if(sTipo.equals("GuiaRemision")) {
			if(this.tipoprecio==null) {
				this.tipoprecio= new TipoPrecio();
			}

			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoPrecio
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.getguiaremision().setTipoPrecio(this.tipoprecio);
			}

			return;
		}
		 else  if(sTipo.equals("PedidoExpor")) {
			if(this.tipoprecio==null) {
				this.tipoprecio= new TipoPrecio();
			}

			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoPrecio
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.getpedidoexpor().setTipoPrecio(this.tipoprecio);
			}

			return;
		}
		 else  if(sTipo.equals("FacturaPuntoVenta")) {
			if(this.tipoprecio==null) {
				this.tipoprecio= new TipoPrecio();
			}

			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoPrecio
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.getfacturapuntoventa().setTipoPrecio(this.tipoprecio);
			}

			return;
		}
		 else  if(sTipo.equals("PedidoPuntoVenta")) {
			if(this.tipoprecio==null) {
				this.tipoprecio= new TipoPrecio();
			}

			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoPrecio
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.getpedidopuntoventa().setTipoPrecio(this.tipoprecio);
			}

			return;
		}
		 else  if(sTipo.equals("UtilidadTipoPrecio")) {
			if(this.tipoprecio==null) {
				this.tipoprecio= new TipoPrecio();
			}

			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoPrecio
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.getutilidadtipoprecio().setTipoPrecio(this.tipoprecio);
			}

			return;
		}
		 else  if(sTipo.equals("Cliente")) {
			if(this.tipoprecio==null) {
				this.tipoprecio= new TipoPrecio();
			}

			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoPrecio
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.getcliente().setTipoPrecio(this.tipoprecio);
			}

			return;
		}
		 else  if(sTipo.equals("ServicioCliente")) {
			if(this.tipoprecio==null) {
				this.tipoprecio= new TipoPrecio();
			}

			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoPrecio
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.getserviciocliente().setTipoPrecio(this.tipoprecio);
			}

			return;
		}
		 else  if(sTipo.equals("Proforma")) {
			if(this.tipoprecio==null) {
				this.tipoprecio= new TipoPrecio();
			}

			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoPrecio
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.getproforma().setTipoPrecio(this.tipoprecio);
			}

			return;
		}
		 else  if(sTipo.equals("DescuentoTipoPrecio")) {
			if(this.tipoprecio==null) {
				this.tipoprecio= new TipoPrecio();
			}

			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoPrecio
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.getdescuentotipoprecio().setTipoPrecio(this.tipoprecio);
			}

			return;
		}
		 else  if(sTipo.equals("NotaCreditoPuntoVenta")) {
			if(this.tipoprecio==null) {
				this.tipoprecio= new TipoPrecio();
			}

			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoPrecio
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.getnotacreditopuntoventa().setTipoPrecio(this.tipoprecio);
			}

			return;
		}
		 else  if(sTipo.equals("ParametroCarteraDefecto")) {
			if(this.tipoprecio==null) {
				this.tipoprecio= new TipoPrecio();
			}

			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoPrecio
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.getparametrocarteradefecto().setTipoPrecio(this.tipoprecio);
			}

			return;
		}
		 else  if(sTipo.equals("Consignacion")) {
			if(this.tipoprecio==null) {
				this.tipoprecio= new TipoPrecio();
			}

			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoPrecio
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.getconsignacion().setTipoPrecio(this.tipoprecio);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoTipoPrecio--;	
		
		
		this.tipoprecioAux=new TipoPrecio();
		
		this.tipoprecioAux.setId(this.iIdNuevoTipoPrecio);
		this.tipoprecioAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.tipoprecioLogic.getTipoPrecios().add(this.tipoprecioAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.tipoprecios.add(this.tipoprecioAux);
		}
		//ARCHITECTURE
		
		this.tipoprecio=this.tipoprecioAux;
		
		if(TipoPrecioJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioTipoPrecio(this.tipoprecio);
			this.setVariablesObjetoActualToFormularioForeignKeyTipoPrecio(this.tipoprecio);
		}
				
		//this.setDefaultControlesTipoPrecio();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyTipoPrecio();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyTipoPrecio();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyTipoPrecio();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualTipoPrecio(this.tipoprecioBean,this.tipoprecio,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(TipoPrecioConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.tipoprecioSessionBean.getConGuardarRelaciones()) {
			classes=TipoPrecioConstantesFunciones.getClassesRelationshipsOfTipoPrecio(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.tipoprecioReturnGeneral=tipoprecioLogic.procesarEventosTipoPreciosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.tipoprecioLogic.getTipoPrecios(),this.tipoprecio,this.tipoprecioParameterGeneral,this.isEsNuevoTipoPrecio,classes);//this.tipoprecioLogic.getTipoPrecio()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanTipoPrecio(this.tipoprecioReturnGeneral,this.tipoprecioBean,false);
		
		if(this.tipoprecioReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyTipoPrecio(this.tipoprecioReturnGeneral.getTipoPrecio());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioTipoPrecio(this.tipoprecioReturnGeneral.getTipoPrecio());
		}
		
		if(this.tipoprecioReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioTipoPrecio(this.tipoprecioReturnGeneral.getTipoPrecio(),classes);//this.tipoprecioBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyTipoPrecio();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyTipoPrecio();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			TipoPrecioBeanSwingJInternalFrameAdditional.RecargarFormTipoPrecio(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingTipoPrecio(false);
						
			if(tipoprecioSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioSessionBean.getEsGuardarRelacionado() && PrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPrecioActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioSessionBean.getEsGuardarRelacionado() && UtilidadTipoPrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonUtilidadTipoPrecioActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaSessionBean.getEsGuardarRelacionado() && PedidoPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPedidoPuntoVentaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoSessionBean.getEsGuardarRelacionado() && ParametroCarteraDefectoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonParametroCarteraDefectoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioSessionBean.getEsGuardarRelacionado() && DescuentoTipoPrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDescuentoTipoPrecioActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.getEsGuardarRelacionado() && PoliticasClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPoliticasClienteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaSessionBean.getEsGuardarRelacionado() && ProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProformaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliSessionBean.getEsGuardarRelacionado() && NotaCreditoSoliJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonNotaCreditoSoliActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionSessionBean.getEsGuardarRelacionado() && ConsignacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonConsignacionActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.getEsGuardarRelacionado() && PedidoExporJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPedidoExporActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.getEsGuardarRelacionado() && ServicioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonServicioClienteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaSessionBean.getEsGuardarRelacionado() && FacturaPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFacturaPuntoVentaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.getEsGuardarRelacionado() && GuiaRemisionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonGuiaRemisionActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteSessionBean.getEsGuardarRelacionado() && ClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonClienteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaSessionBean.getEsGuardarRelacionado() && NotaCreditoPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonNotaCreditoPuntoVentaActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(TipoPrecioJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualTipoPrecio();
			}
			
			this.actualizarVisualTableDatosTipoPrecio();
			
			this.jTableDatosTipoPrecio.setRowSelectionInterval(this.getIndiceNuevoTipoPrecio(), this.getIndiceNuevoTipoPrecio());
			
			this.seleccionarFilaTablaTipoPrecioActual();
						
			this.actualizarEstadoCeldasBotonesTipoPrecio("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesTipoPrecio(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormTipoPrecio.jTextAreacodigoTipoPrecio.setEnabled(isHabilitar && this.tipoprecioConstantesFunciones.activarcodigoTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jTextAreanombreTipoPrecio.setEnabled(isHabilitar && this.tipoprecioConstantesFunciones.activarnombreTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_desdeTipoPrecio.setEnabled(isHabilitar && this.tipoprecioConstantesFunciones.activarfecha_desdeTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_hastaTipoPrecio.setEnabled(isHabilitar && this.tipoprecioConstantesFunciones.activarfecha_hastaTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jTextFieldmontoTipoPrecio.setEnabled(isHabilitar && this.tipoprecioConstantesFunciones.activarmontoTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jCheckBoxesta_activoTipoPrecio.setEnabled(isHabilitar && this.tipoprecioConstantesFunciones.activaresta_activoTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jTextAreadescripcionTipoPrecio.setEnabled(isHabilitar && this.tipoprecioConstantesFunciones.activardescripcionTipoPrecio);	
		//
		this.jInternalFrameDetalleFormTipoPrecio.jComboBoxid_empresaTipoPrecio.setEnabled(isHabilitar && this.tipoprecioConstantesFunciones.activarid_empresaTipoPrecio);
	};
	
	public void setDefaultControlesTipoPrecio() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoTipoPrecio(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.tipoprecioSessionBean.setConGuardarRelaciones(true);			
			this.tipoprecioSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.tipoprecioSessionBean.setConGuardarRelaciones(false);			
			this.tipoprecioSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoTipoPrecio() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TipoPrecio tipoprecioAux:this.tipoprecioLogic.getTipoPrecios()) {
				if(tipoprecioAux.getId().equals(this.iIdNuevoTipoPrecio)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TipoPrecio tipoprecioAux:this.tipoprecios) {
				if(tipoprecioAux.getId().equals(this.iIdNuevoTipoPrecio)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualTipoPrecio(TipoPrecio tipoprecio,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TipoPrecio tipoprecioAux:this.tipoprecioLogic.getTipoPrecios()) {
				if(tipoprecioAux.getId().equals(tipoprecio.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TipoPrecio tipoprecioAux:this.tipoprecios) {
				if(tipoprecioAux.getId().equals(tipoprecio.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalTipoPrecio(TipoPrecio tipoprecioOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TipoPrecio tipoprecioAux:this.tipoprecioLogic.getTipoPrecios()) {
				if(tipoprecioAux.getTipoPrecioOriginal().getId().equals(tipoprecioOriginal.getId())) {
					existe=true;
					tipoprecioOriginal.setId(tipoprecioAux.getId());
					tipoprecioOriginal.setVersionRow(tipoprecioAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TipoPrecio tipoprecioAux:this.tipoprecios) {
				if(tipoprecioAux.getTipoPrecioOriginal().getId().equals(tipoprecioOriginal.getId())) {
					existe=true;
					tipoprecioOriginal.setId(tipoprecioAux.getId());
					tipoprecioOriginal.setVersionRow(tipoprecioAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosTipoPrecio(Boolean esParaCancelar) throws Exception {
		tipopreciosAux=new ArrayList<TipoPrecio>();
		tipoprecioAux=new TipoPrecio();
		
		if(!this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(TipoPrecio tipoprecioAux:this.tipoprecioLogic.getTipoPrecios()) {
					if(tipoprecioAux.getId()<0) {
						tipopreciosAux.add(tipoprecioAux);
					}		
				}
				this.iIdNuevoTipoPrecio=0L;
				this.tipoprecioLogic.getTipoPrecios().removeAll(tipopreciosAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TipoPrecio tipoprecioAux:this.tipoprecios) {
					if(tipoprecioAux.getId()<0) {
						tipopreciosAux.add(tipoprecioAux);
					}		
				}
				this.iIdNuevoTipoPrecio=0L;
				this.tipoprecios.removeAll(tipopreciosAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoTipoPrecio 
					&& this.tipoprecioLogic.getTipoPrecios().size()>0
					) {
					tipoprecioAux=this.tipoprecioLogic.getTipoPrecios().get(this.tipoprecioLogic.getTipoPrecios().size() - 1);
				
					if(tipoprecioAux.getId()<0) {
						this.tipoprecioLogic.getTipoPrecios().remove(tipoprecioAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoTipoPrecio && this.tipoprecios.size()>0) {
					tipoprecioAux=this.tipoprecios.get(this.tipoprecios.size() - 1);
				
					if(tipoprecioAux.getId()<0) {
						this.tipoprecios.remove(tipoprecioAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoTipoPrecio(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(tipoprecio.getId()<0) {
				this.tipoprecioLogic.getTipoPrecios().remove(this.tipoprecio);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(tipoprecio.getId()<0) {
				this.tipoprecios.remove(this.tipoprecio);
			}
		}			
	}
	
	public void setEstadosInicialesTipoPrecio(List<TipoPrecio> tipopreciosAux) throws Exception {
		TipoPrecioConstantesFunciones.setEstadosInicialesTipoPrecio(tipopreciosAux);
	}
	
	public void setEstadosInicialesTipoPrecio(TipoPrecio tipoprecioAux) throws Exception {
		TipoPrecioConstantesFunciones.setEstadosInicialesTipoPrecio(tipoprecioAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarTipoPrecioActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesTipoPrecio("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarTipoPrecioActual()) {
				if(!this.isEsNuevoTipoPrecio) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesTipoPrecio("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoTipoPrecio=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarTipoPrecioActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Tipo Precio ?", "MANTENIMIENTO DE Tipo Precio", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesTipoPrecio("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(TipoPrecio tipoprecio) throws Exception {
		TipoPrecioConstantesFunciones.seleccionarAsignar(this.tipoprecio,tipoprecio);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarTipoPrecio=this.isPermisoActualizarOriginalTipoPrecio;
			
			
			this.seleccionarAsignar(tipoprecio);
			
			
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			TipoPrecioConstantesFunciones.quitarEspaciosTipoPrecio(this.tipoprecio,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesTipoPrecio("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.tipoprecioSessionBean.setsFuncionBusquedaRapida(this.tipoprecioSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoTipoPrecio) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosTipoPrecio(esParaCancelar);				
				this.cancelarNuevoTipoPrecio(esParaCancelar);								
			}
			
			this.tipoprecio=new TipoPrecio();
			
			this.inicializarTipoPrecio();
			
			this.actualizarEstadoCeldasBotonesTipoPrecio("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarTipoPrecio() throws Exception {
		try {
			TipoPrecioConstantesFunciones.inicializarTipoPrecio(this.tipoprecio);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.tipoprecioLogic.getTipoPrecios().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteTipoPrecios(String sAccionBusqueda,List<TipoPrecio> tipopreciosParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="TipoPrecio"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="TipoPrecioMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("TipoPrecioMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="TipoPrecio"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Tipo Precioes");		
		parameters.put("busquedapor", TipoPrecioConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(Precio.class));
			classes.add(new Classe(UtilidadTipoPrecio.class));
			classes.add(new Classe(PedidoPuntoVenta.class));
			classes.add(new Classe(ParametroCarteraDefecto.class));
			classes.add(new Classe(DescuentoTipoPrecio.class));
			classes.add(new Classe(PoliticasCliente.class));
			classes.add(new Classe(Proforma.class));
			classes.add(new Classe(NotaCreditoSoli.class));
			classes.add(new Classe(Consignacion.class));
			classes.add(new Classe(PedidoExpor.class));
			classes.add(new Classe(ServicioCliente.class));
			classes.add(new Classe(FacturaPuntoVenta.class));
			classes.add(new Classe(GuiaRemision.class));
			classes.add(new Classe(Cliente.class));
			classes.add(new Classe(NotaCreditoPuntoVenta.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					TipoPrecioLogic tipoprecioLogicAuxiliar=new TipoPrecioLogic();
					tipoprecioLogicAuxiliar.setDatosCliente(tipoprecioLogic.getDatosCliente());				
					tipoprecioLogicAuxiliar.setTipoPrecios(tipopreciosParaReportes);
					
					tipoprecioLogicAuxiliar.cargarRelacionesLoteForeignKeyTipoPrecioWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					tipopreciosParaReportes=tipoprecioLogicAuxiliar.getTipoPrecios();
					
					//tipoprecioLogic.getNewConnexionToDeep();
					
					//for (TipoPrecio tipoprecio:tipopreciosParaReportes) {
					//	tipoprecioLogic.deepLoad(tipoprecio, false, DeepLoadType.INCLUDE, classes);
					//}						
					//tipoprecioLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//tipoprecioLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFilePrecio = AuxiliarReportes.class.getResourceAsStream("PrecioDetalleRelacionesDesign.jasper");
			parameters.put("subreport_precio", reportFilePrecio);

			InputStream reportFileUtilidadTipoPrecio = AuxiliarReportes.class.getResourceAsStream("UtilidadTipoPrecioDetalleRelacionesDesign.jasper");
			parameters.put("subreport_utilidadtipoprecio", reportFileUtilidadTipoPrecio);

			InputStream reportFilePedidoPuntoVenta = AuxiliarReportes.class.getResourceAsStream("PedidoPuntoVentaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_pedidopuntoventa", reportFilePedidoPuntoVenta);

			InputStream reportFileParametroCarteraDefecto = AuxiliarReportes.class.getResourceAsStream("ParametroCarteraDefectoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_parametrocarteradefecto", reportFileParametroCarteraDefecto);

			InputStream reportFileDescuentoTipoPrecio = AuxiliarReportes.class.getResourceAsStream("DescuentoTipoPrecioDetalleRelacionesDesign.jasper");
			parameters.put("subreport_descuentotipoprecio", reportFileDescuentoTipoPrecio);

			InputStream reportFilePoliticasCliente = AuxiliarReportes.class.getResourceAsStream("PoliticasClienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_politicascliente", reportFilePoliticasCliente);

			InputStream reportFileProforma = AuxiliarReportes.class.getResourceAsStream("ProformaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_proforma", reportFileProforma);

			InputStream reportFileNotaCreditoSoli = AuxiliarReportes.class.getResourceAsStream("NotaCreditoSoliDetalleRelacionesDesign.jasper");
			parameters.put("subreport_notacreditosoli", reportFileNotaCreditoSoli);

			InputStream reportFileConsignacion = AuxiliarReportes.class.getResourceAsStream("ConsignacionDetalleRelacionesDesign.jasper");
			parameters.put("subreport_consignacion", reportFileConsignacion);

			InputStream reportFilePedidoExpor = AuxiliarReportes.class.getResourceAsStream("PedidoExporDetalleRelacionesDesign.jasper");
			parameters.put("subreport_pedidoexpor", reportFilePedidoExpor);

			InputStream reportFileServicioCliente = AuxiliarReportes.class.getResourceAsStream("ServicioClienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_serviciocliente", reportFileServicioCliente);

			InputStream reportFileFacturaPuntoVenta = AuxiliarReportes.class.getResourceAsStream("FacturaPuntoVentaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_facturapuntoventa", reportFileFacturaPuntoVenta);

			InputStream reportFileGuiaRemision = AuxiliarReportes.class.getResourceAsStream("GuiaRemisionDetalleRelacionesDesign.jasper");
			parameters.put("subreport_guiaremision", reportFileGuiaRemision);

			InputStream reportFileCliente = AuxiliarReportes.class.getResourceAsStream("ClienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_cliente", reportFileCliente);

			InputStream reportFileNotaCreditoPuntoVenta = AuxiliarReportes.class.getResourceAsStream("NotaCreditoPuntoVentaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_notacreditopuntoventa", reportFileNotaCreditoPuntoVenta);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceTipoPrecio=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			TipoPrecioConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			TipoPrecioConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceTipoPrecio=new JRBeanArrayDataSource(TipoPrecioJInternalFrame.TraerTipoPrecioBeans(tipopreciosParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceTipoPrecio);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+TipoPrecioConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+TipoPrecioConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(TipoPrecioBean.TraerTipoPrecioBeans(tipopreciosParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteTipoPrecios(sAccionBusqueda,sTipoArchivoReporte,tipopreciosParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalTipoPrecios(sAccionBusqueda,sTipoArchivoReporte,tipopreciosParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoTipoPrecioActionPerformed(null);
					//this.generarExcelReporteTipoPrecios(sAccionBusqueda,sTipoArchivoReporte,tipopreciosParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalTipoPrecios(sAccionBusqueda,sTipoArchivoReporte,tipopreciosParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesTipoPrecios(sAccionBusqueda,sTipoArchivoReporte,tipopreciosParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesTipoPrecios(sAccionBusqueda,sTipoArchivoReporte,tipopreciosParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteTipoPrecios(String sAccionBusqueda,String sTipoArchivoReporte,List<TipoPrecio> tipopreciosParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipoprecio";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("TipoPrecios");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderTipoPrecio("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(TipoPrecio tipoprecio : tipopreciosParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			TipoPrecioConstantesFunciones.generarExcelReporteDataTipoPrecio("NORMAL",row,workbook,tipoprecio,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoprecioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Precio",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderTipoPrecio(String sTipo,Row row,Workbook workbook) {
		
		TipoPrecioConstantesFunciones.generarExcelReporteHeaderTipoPrecio(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalTipoPrecios(String sAccionBusqueda,String sTipoArchivoReporte,List<TipoPrecio> tipopreciosParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipoprecio_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("TipoPrecios");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(TipoPrecio tipoprecio : tipopreciosParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(TipoPrecioConstantesFunciones.getTipoPrecioDescripcion(tipoprecio));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoPrecioConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoprecio.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoPrecioConstantesFunciones.LABEL_CODIGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_CODIGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoprecio.getcodigo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoPrecioConstantesFunciones.LABEL_NOMBRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_NOMBRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoprecio.getnombre());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoPrecioConstantesFunciones.LABEL_FECHADESDE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_FECHADESDE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoprecio.getfecha_desde());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoPrecioConstantesFunciones.LABEL_FECHAHASTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_FECHAHASTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoprecio.getfecha_hasta());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoPrecioConstantesFunciones.LABEL_MONTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_MONTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoprecio.getmonto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(tipoprecio.getesta_activo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoPrecioConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoprecio.getdescripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoprecioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Precio",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesTipoPrecios(String sAccionBusqueda,String sTipoArchivoReporte,List<TipoPrecio> tipopreciosParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<TipoPrecio> tipopreciosRespaldo=null;
		
		classes=TipoPrecioConstantesFunciones.getClassesRelationshipsOfTipoPrecio(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.tipoprecioLogic.setDatosCliente(this.datosCliente);
		this.tipoprecioLogic.setDatosDeep(this.datosDeep);
		this.tipoprecioLogic.setIsConDeep(true);
		
		tipopreciosRespaldo=this.tipoprecioLogic.getTipoPrecios();
		
		this.tipoprecioLogic.setTipoPrecios(tipopreciosParaReportes);	
		this.tipoprecioLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		tipopreciosParaReportes=this.tipoprecioLogic.getTipoPrecios();
		this.tipoprecioLogic.setTipoPrecios(tipopreciosRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipoprecio_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("TipoPrecios");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderTipoPrecio("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(TipoPrecio tipoprecio : tipopreciosParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderTipoPrecio("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			TipoPrecioConstantesFunciones.generarExcelReporteDataTipoPrecio("NORMAL",row,workbook,tipoprecio,cellStyleDataAux);
		
			
			


				//Precio
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(PrecioConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoprecio.getPrecios()!=null && tipoprecio.getPrecios().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(PrecioConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					PrecioConstantesFunciones.generarExcelReporteHeaderPrecio("RELACIONADO",row,workbook);
				}

				if(tipoprecio.getPrecios()!=null) {
					i2=0;
					for(Precio precio : tipoprecio.getPrecios()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						PrecioConstantesFunciones.generarExcelReporteDataPrecio("RELACIONADO",row,workbook,precio,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//PoliticasCliente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(PoliticasClienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoprecio.getPoliticasClientes()!=null && tipoprecio.getPoliticasClientes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(PoliticasClienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					PoliticasClienteConstantesFunciones.generarExcelReporteHeaderPoliticasCliente("RELACIONADO",row,workbook);
				}

				if(tipoprecio.getPoliticasClientes()!=null) {
					i2=0;
					for(PoliticasCliente politicascliente : tipoprecio.getPoliticasClientes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						PoliticasClienteConstantesFunciones.generarExcelReporteDataPoliticasCliente("RELACIONADO",row,workbook,politicascliente,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//NotaCreditoSoli
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(NotaCreditoSoliConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoprecio.getNotaCreditoSolis()!=null && tipoprecio.getNotaCreditoSolis().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(NotaCreditoSoliConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					NotaCreditoSoliConstantesFunciones.generarExcelReporteHeaderNotaCreditoSoli("RELACIONADO",row,workbook);
				}

				if(tipoprecio.getNotaCreditoSolis()!=null) {
					i2=0;
					for(NotaCreditoSoli notacreditosoli : tipoprecio.getNotaCreditoSolis()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						NotaCreditoSoliConstantesFunciones.generarExcelReporteDataNotaCreditoSoli("RELACIONADO",row,workbook,notacreditosoli,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//GuiaRemision
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(GuiaRemisionConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoprecio.getGuiaRemisions()!=null && tipoprecio.getGuiaRemisions().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(GuiaRemisionConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					GuiaRemisionConstantesFunciones.generarExcelReporteHeaderGuiaRemision("RELACIONADO",row,workbook);
				}

				if(tipoprecio.getGuiaRemisions()!=null) {
					i2=0;
					for(GuiaRemision guiaremision : tipoprecio.getGuiaRemisions()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						GuiaRemisionConstantesFunciones.generarExcelReporteDataGuiaRemision("RELACIONADO",row,workbook,guiaremision,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//PedidoExpor
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(PedidoExporConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoprecio.getPedidoExpors()!=null && tipoprecio.getPedidoExpors().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(PedidoExporConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					PedidoExporConstantesFunciones.generarExcelReporteHeaderPedidoExpor("RELACIONADO",row,workbook);
				}

				if(tipoprecio.getPedidoExpors()!=null) {
					i2=0;
					for(PedidoExpor pedidoexpor : tipoprecio.getPedidoExpors()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						PedidoExporConstantesFunciones.generarExcelReporteDataPedidoExpor("RELACIONADO",row,workbook,pedidoexpor,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//FacturaPuntoVenta
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(FacturaPuntoVentaConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoprecio.getFacturaPuntoVentas()!=null && tipoprecio.getFacturaPuntoVentas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(FacturaPuntoVentaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					FacturaPuntoVentaConstantesFunciones.generarExcelReporteHeaderFacturaPuntoVenta("RELACIONADO",row,workbook);
				}

				if(tipoprecio.getFacturaPuntoVentas()!=null) {
					i2=0;
					for(FacturaPuntoVenta facturapuntoventa : tipoprecio.getFacturaPuntoVentas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						FacturaPuntoVentaConstantesFunciones.generarExcelReporteDataFacturaPuntoVenta("RELACIONADO",row,workbook,facturapuntoventa,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//PedidoPuntoVenta
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(PedidoPuntoVentaConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoprecio.getPedidoPuntoVentas()!=null && tipoprecio.getPedidoPuntoVentas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(PedidoPuntoVentaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					PedidoPuntoVentaConstantesFunciones.generarExcelReporteHeaderPedidoPuntoVenta("RELACIONADO",row,workbook);
				}

				if(tipoprecio.getPedidoPuntoVentas()!=null) {
					i2=0;
					for(PedidoPuntoVenta pedidopuntoventa : tipoprecio.getPedidoPuntoVentas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						PedidoPuntoVentaConstantesFunciones.generarExcelReporteDataPedidoPuntoVenta("RELACIONADO",row,workbook,pedidopuntoventa,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//UtilidadTipoPrecio
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(UtilidadTipoPrecioConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoprecio.getUtilidadTipoPrecios()!=null && tipoprecio.getUtilidadTipoPrecios().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(UtilidadTipoPrecioConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					UtilidadTipoPrecioConstantesFunciones.generarExcelReporteHeaderUtilidadTipoPrecio("RELACIONADO",row,workbook);
				}

				if(tipoprecio.getUtilidadTipoPrecios()!=null) {
					i2=0;
					for(UtilidadTipoPrecio utilidadtipoprecio : tipoprecio.getUtilidadTipoPrecios()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						UtilidadTipoPrecioConstantesFunciones.generarExcelReporteDataUtilidadTipoPrecio("RELACIONADO",row,workbook,utilidadtipoprecio,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Cliente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ClienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoprecio.getClientes()!=null && tipoprecio.getClientes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ClienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ClienteConstantesFunciones.generarExcelReporteHeaderCliente("RELACIONADO",row,workbook);
				}

				if(tipoprecio.getClientes()!=null) {
					i2=0;
					for(Cliente cliente : tipoprecio.getClientes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ClienteConstantesFunciones.generarExcelReporteDataCliente("RELACIONADO",row,workbook,cliente,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ServicioCliente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ServicioClienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoprecio.getServicioClientes()!=null && tipoprecio.getServicioClientes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ServicioClienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ServicioClienteConstantesFunciones.generarExcelReporteHeaderServicioCliente("RELACIONADO",row,workbook);
				}

				if(tipoprecio.getServicioClientes()!=null) {
					i2=0;
					for(ServicioCliente serviciocliente : tipoprecio.getServicioClientes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ServicioClienteConstantesFunciones.generarExcelReporteDataServicioCliente("RELACIONADO",row,workbook,serviciocliente,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Proforma
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ProformaConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoprecio.getProformas()!=null && tipoprecio.getProformas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ProformaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ProformaConstantesFunciones.generarExcelReporteHeaderProforma("RELACIONADO",row,workbook);
				}

				if(tipoprecio.getProformas()!=null) {
					i2=0;
					for(Proforma proforma : tipoprecio.getProformas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ProformaConstantesFunciones.generarExcelReporteDataProforma("RELACIONADO",row,workbook,proforma,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//DescuentoTipoPrecio
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DescuentoTipoPrecioConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoprecio.getDescuentoTipoPrecios()!=null && tipoprecio.getDescuentoTipoPrecios().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DescuentoTipoPrecioConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DescuentoTipoPrecioConstantesFunciones.generarExcelReporteHeaderDescuentoTipoPrecio("RELACIONADO",row,workbook);
				}

				if(tipoprecio.getDescuentoTipoPrecios()!=null) {
					i2=0;
					for(DescuentoTipoPrecio descuentotipoprecio : tipoprecio.getDescuentoTipoPrecios()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DescuentoTipoPrecioConstantesFunciones.generarExcelReporteDataDescuentoTipoPrecio("RELACIONADO",row,workbook,descuentotipoprecio,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//NotaCreditoPuntoVenta
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(NotaCreditoPuntoVentaConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoprecio.getNotaCreditoPuntoVentas()!=null && tipoprecio.getNotaCreditoPuntoVentas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(NotaCreditoPuntoVentaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					NotaCreditoPuntoVentaConstantesFunciones.generarExcelReporteHeaderNotaCreditoPuntoVenta("RELACIONADO",row,workbook);
				}

				if(tipoprecio.getNotaCreditoPuntoVentas()!=null) {
					i2=0;
					for(NotaCreditoPuntoVenta notacreditopuntoventa : tipoprecio.getNotaCreditoPuntoVentas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						NotaCreditoPuntoVentaConstantesFunciones.generarExcelReporteDataNotaCreditoPuntoVenta("RELACIONADO",row,workbook,notacreditopuntoventa,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ParametroCarteraDefecto
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ParametroCarteraDefectoConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoprecio.getParametroCarteraDefectos()!=null && tipoprecio.getParametroCarteraDefectos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ParametroCarteraDefectoConstantesFunciones.generarExcelReporteHeaderParametroCarteraDefecto("RELACIONADO",row,workbook);
				}

				if(tipoprecio.getParametroCarteraDefectos()!=null) {
					i2=0;
					for(ParametroCarteraDefecto parametrocarteradefecto : tipoprecio.getParametroCarteraDefectos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ParametroCarteraDefectoConstantesFunciones.generarExcelReporteDataParametroCarteraDefecto("RELACIONADO",row,workbook,parametrocarteradefecto,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Consignacion
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ConsignacionConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoprecio.getConsignacions()!=null && tipoprecio.getConsignacions().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ConsignacionConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ConsignacionConstantesFunciones.generarExcelReporteHeaderConsignacion("RELACIONADO",row,workbook);
				}

				if(tipoprecio.getConsignacions()!=null) {
					i2=0;
					for(Consignacion consignacion : tipoprecio.getConsignacions()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ConsignacionConstantesFunciones.generarExcelReporteDataConsignacion("RELACIONADO",row,workbook,consignacion,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(TipoPrecioConstantesFunciones.getTipoPrecioDescripcion(tipoprecio));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoprecioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Precio",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoTipoPrecio.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTipoPrecio.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoTipoPrecio.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTipoPrecio.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessTipoPrecio() throws Exception {		
		this.startProcessTipoPrecio(true);
	}
	
	public void startProcessTipoPrecio(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasTipoPrecio ,this.jPanelParametrosReportesTipoPrecio, this.jScrollPanelDatosTipoPrecio,this.jPanelPaginacionTipoPrecio, this.jScrollPanelDatosEdicionTipoPrecio, this.jPanelAccionesTipoPrecio,this.jPanelAccionesFormularioTipoPrecio,this.jmenuBarTipoPrecio,this.jmenuBarDetalleTipoPrecio,this.jTtoolBarTipoPrecio,this.jTtoolBarDetalleTipoPrecio);		
		
		final JTabbedPane jTabbedPaneBusquedasTipoPrecio=this.jTabbedPaneBusquedasTipoPrecio; 
		
		final JPanel jPanelParametrosReportesTipoPrecio=this.jPanelParametrosReportesTipoPrecio;
		//final JScrollPane jScrollPanelDatosTipoPrecio=this.jScrollPanelDatosTipoPrecio;
		final JTable jTableDatosTipoPrecio=this.jTableDatosTipoPrecio;		
		final JPanel jPanelPaginacionTipoPrecio=this.jPanelPaginacionTipoPrecio;
		//final JScrollPane jScrollPanelDatosEdicionTipoPrecio=this.jScrollPanelDatosEdicionTipoPrecio;
		final JPanel jPanelAccionesTipoPrecio=this.jPanelAccionesTipoPrecio;
		
		JPanel jPanelCamposAuxiliarTipoPrecio=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarTipoPrecio=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
			jPanelCamposAuxiliarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jPanelCamposTipoPrecio;
			jPanelAccionesFormularioAuxiliarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jPanelAccionesFormularioTipoPrecio;
		}
		
		final JPanel jPanelCamposTipoPrecio=jPanelCamposAuxiliarTipoPrecio;
		final JPanel jPanelAccionesFormularioTipoPrecio=jPanelAccionesFormularioAuxiliarTipoPrecio;
		
		
		final JMenuBar jmenuBarTipoPrecio=this.jmenuBarTipoPrecio;
		final JToolBar jTtoolBarTipoPrecio=this.jTtoolBarTipoPrecio;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarTipoPrecio=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarTipoPrecio=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
			jmenuBarDetalleAuxiliarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jmenuBarDetalleTipoPrecio;
			jTtoolBarDetalleAuxiliarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jTtoolBarDetalleTipoPrecio;
		}
		
		final JMenuBar jmenuBarDetalleTipoPrecio=jmenuBarDetalleAuxiliarTipoPrecio;
		final JToolBar jTtoolBarDetalleTipoPrecio=jTtoolBarDetalleAuxiliarTipoPrecio;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasTipoPrecio;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesTipoPrecio;
			processRunnable.jTableDatos=jTableDatosTipoPrecio;
			processRunnable.jPanelCampos=jPanelCamposTipoPrecio;
			processRunnable.jPanelPaginacion=jPanelPaginacionTipoPrecio;
			processRunnable.jPanelAcciones=jPanelAccionesTipoPrecio;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioTipoPrecio;
			
			
			processRunnable.jmenuBar=jmenuBarTipoPrecio;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleTipoPrecio;
			processRunnable.jTtoolBar=jTtoolBarTipoPrecio;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleTipoPrecio;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasTipoPrecio ,jPanelParametrosReportesTipoPrecio,jTableDatosTipoPrecio, /*jScrollPanelDatosTipoPrecio,*/jPanelCamposTipoPrecio,jPanelPaginacionTipoPrecio, /*jScrollPanelDatosEdicionTipoPrecio,*/ jPanelAccionesTipoPrecio,jPanelAccionesFormularioTipoPrecio,jmenuBarTipoPrecio,jmenuBarDetalleTipoPrecio,jTtoolBarTipoPrecio,jTtoolBarDetalleTipoPrecio);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasTipoPrecio ,jPanelParametrosReportesTipoPrecio, jScrollPanelDatosTipoPrecio,jPanelPaginacionTipoPrecio, jScrollPanelDatosEdicionTipoPrecio, jPanelAccionesTipoPrecio,jPanelAccionesFormularioTipoPrecio,jmenuBarTipoPrecio,jmenuBarDetalleTipoPrecio,jTtoolBarTipoPrecio,jTtoolBarDetalleTipoPrecio);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessTipoPrecio() {// throws Exception 
		this.finishProcessTipoPrecio(true);
	}
	
	public void finishProcessTipoPrecio(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasTipoPrecio ,this.jPanelParametrosReportesTipoPrecio, this.jScrollPanelDatosTipoPrecio,this.jPanelPaginacionTipoPrecio, this.jScrollPanelDatosEdicionTipoPrecio, this.jPanelAccionesTipoPrecio,this.jPanelAccionesFormularioTipoPrecio,this.jmenuBarTipoPrecio,this.jmenuBarDetalleTipoPrecio,this.jTtoolBarTipoPrecio,this.jTtoolBarDetalleTipoPrecio);		
		
		final JTabbedPane jTabbedPaneBusquedasTipoPrecio=this.jTabbedPaneBusquedasTipoPrecio; 
		
		final JPanel jPanelParametrosReportesTipoPrecio=this.jPanelParametrosReportesTipoPrecio;
		//final JScrollPane jScrollPanelDatosTipoPrecio=this.jScrollPanelDatosTipoPrecio;
		final JTable jTableDatosTipoPrecio=this.jTableDatosTipoPrecio;		
		final JPanel jPanelPaginacionTipoPrecio=this.jPanelPaginacionTipoPrecio;
		//final JScrollPane jScrollPanelDatosEdicionTipoPrecio=this.jScrollPanelDatosEdicionTipoPrecio;
		final JPanel jPanelAccionesTipoPrecio=this.jPanelAccionesTipoPrecio;
		
		JPanel jPanelCamposAuxiliarTipoPrecio=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarTipoPrecio=new JPanel();
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
			jPanelCamposAuxiliarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jPanelCamposTipoPrecio;
			jPanelAccionesFormularioAuxiliarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jPanelAccionesFormularioTipoPrecio;
		}
		
		final JPanel jPanelCamposTipoPrecio=jPanelCamposAuxiliarTipoPrecio;
		final JPanel jPanelAccionesFormularioTipoPrecio=jPanelAccionesFormularioAuxiliarTipoPrecio;
		
		
		final JMenuBar jmenuBarTipoPrecio=this.jmenuBarTipoPrecio;		
		final JToolBar jTtoolBarTipoPrecio=this.jTtoolBarTipoPrecio;
				
		JMenuBar jmenuBarDetalleAuxiliarTipoPrecio=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarTipoPrecio=new JToolBar();
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
			jmenuBarDetalleAuxiliarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jmenuBarDetalleTipoPrecio;
			jTtoolBarDetalleAuxiliarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jTtoolBarDetalleTipoPrecio;		
		}
		
		final JMenuBar jmenuBarDetalleTipoPrecio=jmenuBarDetalleAuxiliarTipoPrecio;
		final JToolBar jTtoolBarDetalleTipoPrecio=jTtoolBarDetalleAuxiliarTipoPrecio;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasTipoPrecio;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesTipoPrecio;
			processRunnable.jTableDatos=jTableDatosTipoPrecio;
			processRunnable.jPanelCampos=jPanelCamposTipoPrecio;
			processRunnable.jPanelPaginacion=jPanelPaginacionTipoPrecio;
			processRunnable.jPanelAcciones=jPanelAccionesTipoPrecio;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioTipoPrecio;
			
			
			processRunnable.jmenuBar=jmenuBarTipoPrecio;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleTipoPrecio;
			processRunnable.jTtoolBar=jTtoolBarTipoPrecio;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleTipoPrecio;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasTipoPrecio ,jPanelParametrosReportesTipoPrecio, jTableDatosTipoPrecio,/*jScrollPanelDatosTipoPrecio,*/jPanelCamposTipoPrecio,jPanelPaginacionTipoPrecio, /*jScrollPanelDatosEdicionTipoPrecio,*/ jPanelAccionesTipoPrecio,jPanelAccionesFormularioTipoPrecio,jmenuBarTipoPrecio,jmenuBarDetalleTipoPrecio,jTtoolBarTipoPrecio,jTtoolBarDetalleTipoPrecio));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesTipoPrecio(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarTipoPrecio(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuTipoPrecio(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarTipoPrecio(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarTipoPrecio,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleTipoPrecio,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuTipoPrecio(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarTipoPrecio,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleTipoPrecio,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.tipoprecioConstantesFunciones.getsFinalQueryTipoPrecio();
		String  finalQueryPaginacionTodos=this.tipoprecioConstantesFunciones.getsFinalQueryTipoPrecio();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesNoTipoPrecio(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesTipoPrecio(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,TipoPrecioConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.tipopreciosEliminados= new ArrayList<TipoPrecio>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessTipoPrecio();
		
				///*TipoPrecioSessionBean*/this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			
			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=TipoPrecioConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=TipoPrecioConstantesFunciones.getClassesForeignKeysOfTipoPrecio(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/tipoprecio."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			tipopreciosAux= new ArrayList<TipoPrecio>();
			
				
			tipoprecioLogic.setDatosCliente(this.datosCliente);
			tipoprecioLogic.setDatosDeep(this.datosDeep);
			tipoprecioLogic.setIsConDeep(true);
			
			
			tipoprecioLogic.getTipoPrecioDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					tipoprecioLogic.getTodosTipoPrecios(finalQueryGlobal,pagination);
					
					//tipoprecioLogic.getTodosTipoPreciosWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(tipoprecioLogic.getTipoPrecios()==null|| tipoprecioLogic.getTipoPrecios().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							tipopreciosAux= new ArrayList<TipoPrecio>();
							tipopreciosAux.addAll(tipoprecioLogic.getTipoPrecios());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipopreciosAux= new ArrayList<TipoPrecio>();
							tipopreciosAux.addAll(tipoprecios);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							tipoprecioLogic.getTodosTipoPrecios(finalQueryGlobal+"",this.pagination);												
							
							//tipoprecioLogic.getTodosTipoPreciosWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteTipoPrecios("Todos",tipoprecioLogic.getTipoPrecios() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							tipoprecioLogic.setTipoPrecios(new ArrayList<TipoPrecio>());					
							tipoprecioLogic.getTipoPrecios().addAll(tipopreciosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoprecios=new ArrayList<TipoPrecio>();
							tipoprecios.addAll(tipopreciosAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idTipoPrecio=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idTipoPrecio=this.idActual;
				
				} else if(this.idTipoPrecioActual!=null && this.idTipoPrecioActual!=0L) {
					idTipoPrecio=idTipoPrecioActual;
				}
				
					
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndicePorId(idTipoPrecio);
				
				this.tipoprecios=new ArrayList<TipoPrecio>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					tipoprecioLogic.getEntity(idTipoPrecio);
					
					//tipoprecioLogic.getEntityWithConnection(idTipoPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoprecioLogic.setTipoPrecios(new ArrayList<TipoPrecio>());
					tipoprecioLogic.getTipoPrecios().add(tipoprecioLogic.getTipoPrecio());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipoprecios=new ArrayList<TipoPrecio>();
					this.tipoprecios.add(tipoprecio);
				}
				
				if(tipoprecioLogic.getTipoPrecio()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("BusquedaPorCodigo")) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipoprecioLogic.getTipoPreciosBusquedaPorCodigo(finalQueryGlobal,pagination,codigoBusquedaPorCodigo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipoprecioLogic.getTipoPrecios()==null||tipoprecioLogic.getTipoPrecios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipoprecios==null|| tipoprecios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipopreciosAux=new ArrayList<TipoPrecio>();
						tipopreciosAux.addAll(tipoprecioLogic.getTipoPrecios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipopreciosAux=new ArrayList<TipoPrecio>();
							tipopreciosAux.addAll(tipoprecios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipoprecioLogic.getTipoPreciosBusquedaPorCodigo(finalQueryGlobal,pagination,codigoBusquedaPorCodigo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoPrecios("BusquedaPorCodigo",tipoprecioLogic.getTipoPrecios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoPrecios("BusquedaPorCodigo",tipoprecios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoprecioLogic.setTipoPrecios(new ArrayList<TipoPrecio>());
						tipoprecioLogic.getTipoPrecios().addAll(tipopreciosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoprecios=new ArrayList<TipoPrecio>();
							tipoprecios.addAll(tipopreciosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorFechaDesde")) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorFechaDesde(fecha_desdeBusquedaPorFechaDesde);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipoprecioLogic.getTipoPreciosBusquedaPorFechaDesde(finalQueryGlobal,pagination,fecha_desdeBusquedaPorFechaDesde);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorFechaDesde(fecha_desdeBusquedaPorFechaDesde);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorFechaDesde(fecha_desdeBusquedaPorFechaDesde);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipoprecioLogic.getTipoPrecios()==null||tipoprecioLogic.getTipoPrecios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipoprecios==null|| tipoprecios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipopreciosAux=new ArrayList<TipoPrecio>();
						tipopreciosAux.addAll(tipoprecioLogic.getTipoPrecios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipopreciosAux=new ArrayList<TipoPrecio>();
							tipopreciosAux.addAll(tipoprecios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipoprecioLogic.getTipoPreciosBusquedaPorFechaDesde(finalQueryGlobal,pagination,fecha_desdeBusquedaPorFechaDesde);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorFechaDesde(fecha_desdeBusquedaPorFechaDesde);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorFechaDesde(fecha_desdeBusquedaPorFechaDesde);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoPrecios("BusquedaPorFechaDesde",tipoprecioLogic.getTipoPrecios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoPrecios("BusquedaPorFechaDesde",tipoprecios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoprecioLogic.setTipoPrecios(new ArrayList<TipoPrecio>());
						tipoprecioLogic.getTipoPrecios().addAll(tipopreciosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoprecios=new ArrayList<TipoPrecio>();
							tipoprecios.addAll(tipopreciosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorFechaHasta")) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorFechaHasta(fecha_hastaBusquedaPorFechaHasta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipoprecioLogic.getTipoPreciosBusquedaPorFechaHasta(finalQueryGlobal,pagination,fecha_hastaBusquedaPorFechaHasta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorFechaHasta(fecha_hastaBusquedaPorFechaHasta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorFechaHasta(fecha_hastaBusquedaPorFechaHasta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipoprecioLogic.getTipoPrecios()==null||tipoprecioLogic.getTipoPrecios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipoprecios==null|| tipoprecios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipopreciosAux=new ArrayList<TipoPrecio>();
						tipopreciosAux.addAll(tipoprecioLogic.getTipoPrecios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipopreciosAux=new ArrayList<TipoPrecio>();
							tipopreciosAux.addAll(tipoprecios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipoprecioLogic.getTipoPreciosBusquedaPorFechaHasta(finalQueryGlobal,pagination,fecha_hastaBusquedaPorFechaHasta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorFechaHasta(fecha_hastaBusquedaPorFechaHasta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorFechaHasta(fecha_hastaBusquedaPorFechaHasta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoPrecios("BusquedaPorFechaHasta",tipoprecioLogic.getTipoPrecios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoPrecios("BusquedaPorFechaHasta",tipoprecios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoprecioLogic.setTipoPrecios(new ArrayList<TipoPrecio>());
						tipoprecioLogic.getTipoPrecios().addAll(tipopreciosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoprecios=new ArrayList<TipoPrecio>();
							tipoprecios.addAll(tipopreciosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorNombre")) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipoprecioLogic.getTipoPreciosBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipoprecioLogic.getTipoPrecios()==null||tipoprecioLogic.getTipoPrecios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipoprecios==null|| tipoprecios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipopreciosAux=new ArrayList<TipoPrecio>();
						tipopreciosAux.addAll(tipoprecioLogic.getTipoPrecios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipopreciosAux=new ArrayList<TipoPrecio>();
							tipopreciosAux.addAll(tipoprecios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipoprecioLogic.getTipoPreciosBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoPrecios("BusquedaPorNombre",tipoprecioLogic.getTipoPrecios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoPrecios("BusquedaPorNombre",tipoprecios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoprecioLogic.setTipoPrecios(new ArrayList<TipoPrecio>());
						tipoprecioLogic.getTipoPrecios().addAll(tipopreciosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoprecios=new ArrayList<TipoPrecio>();
							tipoprecios.addAll(tipopreciosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipoprecioLogic.getTipoPreciosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipoprecioLogic.getTipoPrecios()==null||tipoprecioLogic.getTipoPrecios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipoprecios==null|| tipoprecios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipopreciosAux=new ArrayList<TipoPrecio>();
						tipopreciosAux.addAll(tipoprecioLogic.getTipoPrecios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipopreciosAux=new ArrayList<TipoPrecio>();
							tipopreciosAux.addAll(tipoprecios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipoprecioLogic.getTipoPreciosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoPrecioConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoPrecios("FK_IdEmpresa",tipoprecioLogic.getTipoPrecios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoPrecios("FK_IdEmpresa",tipoprecios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoprecioLogic.setTipoPrecios(new ArrayList<TipoPrecio>());
						tipoprecioLogic.getTipoPrecios().addAll(tipopreciosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoprecios=new ArrayList<TipoPrecio>();
							tipoprecios.addAll(tipopreciosAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesTipoPrecio();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessTipoPrecio();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=tipoprecioLogic.getTipoPrecios().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=tipoprecios.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=tipoprecioLogic.getTipoPrecios().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=tipoprecios.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(TipoPrecio tipoprecio) {
		Boolean permite=true;
		
		if(this.tipoprecio.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=TipoPrecioConstantesFunciones.getOrderByListaTipoPrecio();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=TipoPrecioConstantesFunciones.getOrderByListaTipoPrecio();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TipoPrecio tipoprecio:tipoprecioLogic.getTipoPrecios()) {
				if(tipoprecio.getsType().equals(Constantes2.S_TOTALES)) {
					tipoprecioTotales=tipoprecio;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TipoPrecio tipoprecio:this.tipoprecios) {
				if(tipoprecio.getsType().equals(Constantes2.S_TOTALES)) {
					tipoprecioTotales=tipoprecio;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.tipoprecioAux=new TipoPrecio();
			this.tipoprecioAux.setsType(Constantes2.S_TOTALES);
			this.tipoprecioAux.setIsNew(false);
			this.tipoprecioAux.setIsChanged(false);
			this.tipoprecioAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				TipoPrecioConstantesFunciones.TotalizarValoresFilaTipoPrecio(this.tipoprecioLogic.getTipoPrecios(),this.tipoprecioAux);
				
				this.tipoprecioLogic.getTipoPrecios().add(this.tipoprecioAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				TipoPrecioConstantesFunciones.TotalizarValoresFilaTipoPrecio(this.tipoprecios,this.tipoprecioAux);
				
				this.tipoprecios.add(this.tipoprecioAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		tipoprecioTotales=new TipoPrecio();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.tipoprecioLogic.getTipoPrecios().remove(tipoprecioTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.tipoprecios.remove(tipoprecioTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		tipoprecioTotales=new TipoPrecio();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TipoPrecio tipoprecio:tipoprecioLogic.getTipoPrecios()) {
				if(tipoprecio.getsType().equals(Constantes2.S_TOTALES)) {
					tipoprecioTotales=tipoprecio;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				TipoPrecioConstantesFunciones.TotalizarValoresFilaTipoPrecio(this.tipoprecioLogic.getTipoPrecios(),tipoprecioTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TipoPrecio tipoprecio:this.tipoprecios) {
				if(tipoprecio.getsType().equals(Constantes2.S_TOTALES)) {
					tipoprecioTotales=tipoprecio;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				TipoPrecioConstantesFunciones.TotalizarValoresFilaTipoPrecio(this.tipoprecios,tipoprecioTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getTipoPreciosBusquedaPorCodigo()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorCodigo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoPreciosBusquedaPorFechaDesde()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorFechaDesde";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoPreciosBusquedaPorFechaHasta()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorFechaHasta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoPreciosBusquedaPorNombre()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorNombre";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoPreciosFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getTipoPreciosBusquedaPorCodigo(String sFinalQuery,String codigo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoprecioLogic.getTipoPreciosBusquedaPorCodigo(sFinalQuery,this.pagination,codigo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoPreciosBusquedaPorFechaDesde(String sFinalQuery,Date fecha_desde)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoprecioLogic.getTipoPreciosBusquedaPorFechaDesde(sFinalQuery,this.pagination,fecha_desde);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoPreciosBusquedaPorFechaHasta(String sFinalQuery,Date fecha_hasta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoprecioLogic.getTipoPreciosBusquedaPorFechaHasta(sFinalQuery,this.pagination,fecha_hasta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoPreciosBusquedaPorNombre(String sFinalQuery,String nombre)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoprecioLogic.getTipoPreciosBusquedaPorNombre(sFinalQuery,this.pagination,nombre);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoPreciosFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoprecioLogic.getTipoPreciosFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosTipoPrecio() {
		this.isPermisoTodoTipoPrecio=false;
		this.isPermisoNuevoTipoPrecio=false;
		this.isPermisoActualizarTipoPrecio=false;
		this.isPermisoActualizarOriginalTipoPrecio=false;
		this.isPermisoEliminarTipoPrecio=false;
		this.isPermisoGuardarCambiosTipoPrecio=false;
		this.isPermisoConsultaTipoPrecio=false;
		this.isPermisoBusquedaTipoPrecio=false;
		this.isPermisoReporteTipoPrecio=false;		
		this.isPermisoOrdenTipoPrecio=false;		
		this.isPermisoPaginacionMedioTipoPrecio=false;		
		this.isPermisoPaginacionAltoTipoPrecio=false;
		this.isPermisoPaginacionTodoTipoPrecio=false;
		this.isPermisoCopiarTipoPrecio=false;		
		this.isPermisoVerFormTipoPrecio=false;		
		this.isPermisoDuplicarTipoPrecio=false;		
		this.isPermisoOrdenTipoPrecio=false;		
	}
	
	public void setPermisosUsuarioTipoPrecio(Boolean isPermiso) {
		this.isPermisoTodoTipoPrecio=isPermiso;
		this.isPermisoNuevoTipoPrecio=isPermiso;
		this.isPermisoActualizarTipoPrecio=isPermiso;
		this.isPermisoActualizarOriginalTipoPrecio=isPermiso;
		this.isPermisoEliminarTipoPrecio=isPermiso;
		this.isPermisoGuardarCambiosTipoPrecio=isPermiso;
		this.isPermisoConsultaTipoPrecio=isPermiso;
		this.isPermisoBusquedaTipoPrecio=isPermiso;
		this.isPermisoReporteTipoPrecio=isPermiso;
		this.isPermisoOrdenTipoPrecio=isPermiso;		
		this.isPermisoPaginacionMedioTipoPrecio=isPermiso;		
		this.isPermisoPaginacionAltoTipoPrecio=isPermiso;		
		this.isPermisoPaginacionTodoTipoPrecio=isPermiso;		
		this.isPermisoCopiarTipoPrecio=isPermiso;		
		this.isPermisoVerFormTipoPrecio=isPermiso;		
		this.isPermisoDuplicarTipoPrecio=isPermiso;
		this.isPermisoOrdenTipoPrecio=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioTipoPrecio(Boolean isPermiso) {
		//this.isPermisoTodoTipoPrecio=isPermiso;
		this.isPermisoNuevoTipoPrecio=isPermiso;
		this.isPermisoActualizarTipoPrecio=isPermiso;
		this.isPermisoActualizarOriginalTipoPrecio=isPermiso;
		this.isPermisoEliminarTipoPrecio=isPermiso;
		this.isPermisoGuardarCambiosTipoPrecio=isPermiso;
		//this.isPermisoConsultaTipoPrecio=isPermiso;
		//this.isPermisoBusquedaTipoPrecio=isPermiso;
		//this.isPermisoReporteTipoPrecio=isPermiso;
		//this.isPermisoOrdenTipoPrecio=isPermiso;		
		//this.isPermisoPaginacionMedioTipoPrecio=isPermiso;		
		//this.isPermisoPaginacionAltoTipoPrecio=isPermiso;		
		//this.isPermisoPaginacionTodoTipoPrecio=isPermiso;		
		//this.isPermisoCopiarTipoPrecio=isPermiso;		
		//this.isPermisoDuplicarTipoPrecio=isPermiso;
		//this.isPermisoOrdenTipoPrecio=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioTipoPrecioClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(PrecioConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(UtilidadTipoPrecioConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(PedidoPuntoVentaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ParametroCarteraDefectoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(DescuentoTipoPrecioConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(PoliticasClienteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ProformaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(NotaCreditoSoliConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ConsignacionConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(PedidoExporConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ServicioClienteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(FacturaPuntoVentaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(GuiaRemisionConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ClienteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(NotaCreditoPuntoVentaConstantesFunciones.SNOMBREOPCION);
		
		if(TipoPrecioJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosPrecio=false;
		this.isTienePermisosPrecio=this.verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(this.opcionsRelacionadas,PrecioConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosUtilidadTipoPrecio=false;
		this.isTienePermisosUtilidadTipoPrecio=this.verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(this.opcionsRelacionadas,UtilidadTipoPrecioConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosPedidoPuntoVenta=false;
		this.isTienePermisosPedidoPuntoVenta=this.verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(this.opcionsRelacionadas,PedidoPuntoVentaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosParametroCarteraDefecto=false;
		this.isTienePermisosParametroCarteraDefecto=this.verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(this.opcionsRelacionadas,ParametroCarteraDefectoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosDescuentoTipoPrecio=false;
		this.isTienePermisosDescuentoTipoPrecio=this.verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(this.opcionsRelacionadas,DescuentoTipoPrecioConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosPoliticasCliente=false;
		this.isTienePermisosPoliticasCliente=this.verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(this.opcionsRelacionadas,PoliticasClienteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosProforma=false;
		this.isTienePermisosProforma=this.verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(this.opcionsRelacionadas,ProformaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosNotaCreditoSoli=false;
		this.isTienePermisosNotaCreditoSoli=this.verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(this.opcionsRelacionadas,NotaCreditoSoliConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosConsignacion=false;
		this.isTienePermisosConsignacion=this.verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(this.opcionsRelacionadas,ConsignacionConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosPedidoExpor=false;
		this.isTienePermisosPedidoExpor=this.verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(this.opcionsRelacionadas,PedidoExporConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosServicioCliente=false;
		this.isTienePermisosServicioCliente=this.verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(this.opcionsRelacionadas,ServicioClienteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosFacturaPuntoVenta=false;
		this.isTienePermisosFacturaPuntoVenta=this.verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(this.opcionsRelacionadas,FacturaPuntoVentaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosGuiaRemision=false;
		this.isTienePermisosGuiaRemision=this.verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(this.opcionsRelacionadas,GuiaRemisionConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosCliente=false;
		this.isTienePermisosCliente=this.verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(this.opcionsRelacionadas,ClienteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosNotaCreditoPuntoVenta=false;
		this.isTienePermisosNotaCreditoPuntoVenta=this.verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(this.opcionsRelacionadas,NotaCreditoPuntoVentaConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebTipoPrecio(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioTipoPrecioClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosPrecio=conPermiso;
		this.isTienePermisosUtilidadTipoPrecio=conPermiso;
		this.isTienePermisosPedidoPuntoVenta=conPermiso;
		this.isTienePermisosParametroCarteraDefecto=conPermiso;
		this.isTienePermisosDescuentoTipoPrecio=conPermiso;
		this.isTienePermisosPoliticasCliente=conPermiso;
		this.isTienePermisosProforma=conPermiso;
		this.isTienePermisosNotaCreditoSoli=conPermiso;
		this.isTienePermisosConsignacion=conPermiso;
		this.isTienePermisosPedidoExpor=conPermiso;
		this.isTienePermisosServicioCliente=conPermiso;
		this.isTienePermisosFacturaPuntoVenta=conPermiso;
		this.isTienePermisosGuiaRemision=conPermiso;
		this.isTienePermisosCliente=conPermiso;
		this.isTienePermisosNotaCreditoPuntoVenta=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioTipoPrecioClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionTipoPrecioClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioTipoPrecioClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosPrecio && this.jInternalFrameDetalleFormTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.remove(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosUtilidadTipoPrecio && this.jInternalFrameDetalleFormTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.remove(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosPedidoPuntoVenta && this.jInternalFrameDetalleFormTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.remove(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosParametroCarteraDefecto && this.jInternalFrameDetalleFormTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.remove(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosDescuentoTipoPrecio && this.jInternalFrameDetalleFormTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.remove(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosPoliticasCliente && this.jInternalFrameDetalleFormTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.remove(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosProforma && this.jInternalFrameDetalleFormTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.remove(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosNotaCreditoSoli && this.jInternalFrameDetalleFormTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.remove(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosConsignacion && this.jInternalFrameDetalleFormTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.remove(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosPedidoExpor && this.jInternalFrameDetalleFormTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.remove(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosServicioCliente && this.jInternalFrameDetalleFormTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.remove(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosFacturaPuntoVenta && this.jInternalFrameDetalleFormTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.remove(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosGuiaRemision && this.jInternalFrameDetalleFormTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.remove(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosCliente && this.jInternalFrameDetalleFormTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.remove(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosNotaCreditoPuntoVenta && this.jInternalFrameDetalleFormTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.remove(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioTipoPrecio() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(TipoPrecioJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, TipoPrecioConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoTipoPrecio=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarTipoPrecio=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalTipoPrecio=this.isPermisoActualizarTipoPrecio;
			this.isPermisoEliminarTipoPrecio=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosTipoPrecio=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaTipoPrecio=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaTipoPrecio=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoTipoPrecio=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteTipoPrecio=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenTipoPrecio=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioTipoPrecio=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoTipoPrecio=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoTipoPrecio=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarTipoPrecio=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormTipoPrecio=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarTipoPrecio=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenTipoPrecio=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosTipoPrecio.setToolTipText(this.jTableDatosTipoPrecio.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioTipoPrecio(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioTipoPrecio(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(TipoPrecioJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(TipoPrecioJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioTipoPrecio() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosPrecio && this.tipoprecioConstantesFunciones.mostrarPrecioTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Precio");
			reporte.setsDescripcion("Precio");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosPoliticasCliente && this.tipoprecioConstantesFunciones.mostrarPoliticasClienteTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Politicas Cliente");
			reporte.setsDescripcion("Politicas Cliente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosNotaCreditoSoli && this.tipoprecioConstantesFunciones.mostrarNotaCreditoSoliTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Solicitud Nota Credito");
			reporte.setsDescripcion("Solicitud Nota Credito");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosGuiaRemision && this.tipoprecioConstantesFunciones.mostrarGuiaRemisionTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Guia Remision");
			reporte.setsDescripcion("Guia Remision");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosPedidoExpor && this.tipoprecioConstantesFunciones.mostrarPedidoExporTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Pedido Exportacion");
			reporte.setsDescripcion("Pedido Exportacion");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosFacturaPuntoVenta && this.tipoprecioConstantesFunciones.mostrarFacturaPuntoVentaTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Factura Punto Venta");
			reporte.setsDescripcion("Factura Punto Venta");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosPedidoPuntoVenta && this.tipoprecioConstantesFunciones.mostrarPedidoPuntoVentaTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Pedido Punto Venta");
			reporte.setsDescripcion("Pedido Punto Venta");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosUtilidadTipoPrecio && this.tipoprecioConstantesFunciones.mostrarUtilidadTipoPrecioTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Utilidad Tipo Precio");
			reporte.setsDescripcion("Utilidad Tipo Precio");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosCliente && this.tipoprecioConstantesFunciones.mostrarClienteTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Cliente");
			reporte.setsDescripcion("Cliente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosServicioCliente && this.tipoprecioConstantesFunciones.mostrarServicioClienteTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Servicio Cliente");
			reporte.setsDescripcion("Servicio Cliente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosProforma && this.tipoprecioConstantesFunciones.mostrarProformaTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Proforma");
			reporte.setsDescripcion("Proforma");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosDescuentoTipoPrecio && this.tipoprecioConstantesFunciones.mostrarDescuentoTipoPrecioTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Descuento Tipo Precio");
			reporte.setsDescripcion("Descuento Tipo Precio");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosNotaCreditoPuntoVenta && this.tipoprecioConstantesFunciones.mostrarNotaCreditoPuntoVentaTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Nota Credito");
			reporte.setsDescripcion("Nota Credito");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosParametroCarteraDefecto && this.tipoprecioConstantesFunciones.mostrarParametroCarteraDefectoTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Parametro Cartera Defecto");
			reporte.setsDescripcion("Parametro Cartera Defecto");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosConsignacion && this.tipoprecioConstantesFunciones.mostrarConsignacionTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Consignacion");
			reporte.setsDescripcion("Consignacion");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyTipoPrecioListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyTipoPrecioListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(TipoPrecioJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyTipoPrecioListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyTipoPrecioListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			TipoPrecioParameterReturnGeneral tipoprecioReturnGeneral=new TipoPrecioParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.tipoprecioConstantesFunciones.cargarid_empresaTipoPrecio)
					 || (this.esRecargarFks && this.tipoprecioConstantesFunciones.cargarid_empresaTipoPrecio)) {

					if(!this.tipoprecioSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+tipoprecioSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				tipoprecioReturnGeneral=tipoprecioLogic.cargarCombosLoteForeignKeyTipoPrecio(finalQueryGlobalEmpresa);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=tipoprecioReturnGeneral.getempresasForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyTipoPrecio()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(!this.tipoprecioSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyTipoPrecio()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyTipoPrecio(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyTipoPrecio()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
			
			
				this.tipoprecio.setfecha_desde(this.parametroGeneralUsuario.getfecha_sistema());
				this.tipoprecio.setfecha_hasta(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyTipoPrecio();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyTipoPrecio(TipoPrecio tipoprecio)throws Exception {	
		try {
						
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyTipoPrecio(TipoPrecio tipoprecio,String sTipoEvento)throws Exception {	
		try {
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyTipoPrecio()throws Exception {	
		try {
						
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyTipoPrecio()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyTipoPrecio()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyTipoPrecio()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroTipoPrecio()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyTipoPrecio()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyTipoPrecio(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyTipoPrecio()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormTipoPrecio.jComboBoxid_empresaTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio.jComboBoxid_empresaTipoPrecio.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoPrecio.jComboBoxid_empresaTipoPrecio.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	


	
	

	public TipoPrecioBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public TipoPrecioBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public TipoPrecioBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.tipoprecioSessionBean=new TipoPrecioSessionBean(); 
		this.tipoprecioConstantesFunciones=new TipoPrecioConstantesFunciones(); 
		this.tipoprecioBean=new TipoPrecio();//(this.tipoprecioConstantesFunciones); 		
		this.tipoprecioReturnGeneral=new TipoPrecioParameterReturnGeneral(); 
		
		this.tipoprecioSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.tipoprecioSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public TipoPrecioBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public TipoPrecioBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public TipoPrecioBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessTipoPrecio(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.tipoprecioConstantesFunciones=new TipoPrecioConstantesFunciones(); 
			this.tipoprecioBean=new TipoPrecio();//this.tipoprecioConstantesFunciones); 			
			this.tipoprecioReturnGeneral=new TipoPrecioParameterReturnGeneral(); 
		
			TipoPrecioBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Tipo Precio Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.tipoprecio=new TipoPrecio();
			this.tipoprecios = new ArrayList<TipoPrecio>();
			this.tipopreciosAux = new ArrayList<TipoPrecio>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic=new TipoPrecioLogic();
				this.tipoprecioLogic.getNewConnexionToDeep("");
			}
			
			//this.tipoprecioSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.tipoprecioSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormTipoPrecio);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoTipoPrecio!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoTipoPrecio);	
					}
					
					if(this.jInternalFrameImportacionTipoPrecio!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionTipoPrecio);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByTipoPrecio!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByTipoPrecio);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormTipoPrecio);
				this.jInternalFrameDetalleFormTipoPrecio.setVisible(false);
				this.jInternalFrameDetalleFormTipoPrecio.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoTipoPrecio!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoTipoPrecio);
					this.jInternalFrameReporteDinamicoTipoPrecio.setVisible(false);
					this.jInternalFrameReporteDinamicoTipoPrecio.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionTipoPrecio!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionTipoPrecio);
					this.jInternalFrameImportacionTipoPrecio.setVisible(false);
					this.jInternalFrameImportacionTipoPrecio.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByTipoPrecio!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByTipoPrecio);
					this.jInternalFrameOrderByTipoPrecio.setVisible(false);
					this.jInternalFrameOrderByTipoPrecio.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idTipoPrecioActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=TipoPrecioConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.tipoprecioReturnGeneral=new TipoPrecioParameterReturnGeneral();
			
			this.tipoprecioParameterGeneral=new TipoPrecioParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.tipoprecioLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(TipoPrecioJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(PrecioConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(UtilidadTipoPrecioConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(PedidoPuntoVentaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ParametroCarteraDefectoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(DescuentoTipoPrecioConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(PoliticasClienteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ProformaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(NotaCreditoSoliConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ConsignacionConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(PedidoExporConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ServicioClienteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(FacturaPuntoVentaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(GuiaRemisionConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ClienteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(NotaCreditoPuntoVentaConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,TipoPrecioConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.tipoprecioSessionBean.getEsGuardarRelacionado(),this.tipoprecioSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,TipoPrecioConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.tipoprecioSessionBean.getEsGuardarRelacionado(),this.tipoprecioSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoTipoPrecio=false;
			this.isVisibilidadCeldaDuplicarTipoPrecio=true;
			this.isVisibilidadCeldaCopiarTipoPrecio=true;
			this.isVisibilidadCeldaVerFormTipoPrecio=true;
			this.isVisibilidadCeldaOrdenTipoPrecio=true;
			this.isVisibilidadCeldaNuevoRelacionesTipoPrecio=false;
			this.isVisibilidadCeldaModificarTipoPrecio=false;
			this.isVisibilidadCeldaActualizarTipoPrecio=false;
			this.isVisibilidadCeldaEliminarTipoPrecio=false;
			this.isVisibilidadCeldaCancelarTipoPrecio=false;
			this.isVisibilidadCeldaGuardarTipoPrecio=false;
			this.isVisibilidadCeldaGuardarCambiosTipoPrecio=false;
			
			
			this.isVisibilidadBusquedaPorCodigo=true;
			this.isVisibilidadBusquedaPorFechaDesde=true;
			this.isVisibilidadBusquedaPorFechaHasta=true;
			this.isVisibilidadBusquedaPorNombre=true;
			this.isVisibilidadFK_IdEmpresa=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesTipoPrecio("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosTipoPrecio();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioTipoPrecio(false);
			
			this.setPermisosUsuarioTipoPrecio();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.tipoprecioSessionBean.getEsGuardarRelacionado() 
				|| (this.tipoprecioSessionBean.getEsGuardarRelacionado() && this.tipoprecioSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioTipoPrecioClasesRelacionadas();
			}
			
			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioTipoPrecioClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!TipoPrecioJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosTipoPrecio();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualTipoPrecio();
			}
			
			if(!this.isPermisoBusquedaTipoPrecio) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasTipoPrecio.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.tipoprecioSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioTipoPrecio,this.isPermisoPaginacionMedioTipoPrecio,this.isPermisoPaginacionTodoTipoPrecio);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(TipoPrecioConstantesFunciones.getTiposSeleccionarTipoPrecio());
				
				this.tiposColumnasSelect=TipoPrecioConstantesFunciones.getTiposSeleccionarTipoPrecio(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectTipoPrecio();				
				//this.tiposRelacionesSelect=TipoPrecioConstantesFunciones.getTiposRelacionesTipoPrecio(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioTipoPrecio();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioTipoPrecio(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioTipoPrecio(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesTipoPrecio() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.precioLogic=new PrecioLogic();
			this.politicasclienteLogic=new PoliticasClienteLogic();
			this.notacreditosoliLogic=new NotaCreditoSoliLogic();
			this.guiaremisionLogic=new GuiaRemisionLogic();
			this.pedidoexporLogic=new PedidoExporLogic();
			this.facturapuntoventaLogic=new FacturaPuntoVentaLogic();
			this.pedidopuntoventaLogic=new PedidoPuntoVentaLogic();
			this.utilidadtipoprecioLogic=new UtilidadTipoPrecioLogic();
			this.clienteLogic=new ClienteLogic();
			this.servicioclienteLogic=new ServicioClienteLogic();
			this.proformaLogic=new ProformaLogic();
			this.descuentotipoprecioLogic=new DescuentoTipoPrecioLogic();
			this.notacreditopuntoventaLogic=new NotaCreditoPuntoVentaLogic();
			this.parametrocarteradefectoLogic=new ParametroCarteraDefectoLogic();
			this.consignacionLogic=new ConsignacionLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				tipoprecioImplementable= (TipoPrecioImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+TipoPrecioConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				tipoprecioImplementableHome= (TipoPrecioImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+TipoPrecioConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.tipoprecios= new ArrayList<TipoPrecio>();
			this.tipopreciosEliminados= new ArrayList<TipoPrecio>();
						
			this.isEsNuevoTipoPrecio=false;
			this.esParaAccionDesdeFormularioTipoPrecio=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyTipoPrecio(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroTipoPrecio();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			TipoPrecioBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=TipoPrecioConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesTipoPrecio("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingTipoPrecio(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormTipoPrecio!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioTipoPrecio();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioTipoPrecio();
			}
			
			TipoPrecioBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasTipoPrecio.getTabCount(); i++) {
					this.jTabbedPaneBusquedasTipoPrecio.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasTipoPrecio.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessTipoPrecio(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga TipoPrecio: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectTipoPrecio() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(PrecioConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(PrecioConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(PoliticasClienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(PoliticasClienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(NotaCreditoSoliConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(NotaCreditoSoliConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(GuiaRemisionConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(GuiaRemisionConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(PedidoExporConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(PedidoExporConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(FacturaPuntoVentaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(FacturaPuntoVentaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(PedidoPuntoVentaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(PedidoPuntoVentaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(UtilidadTipoPrecioConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(UtilidadTipoPrecioConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ClienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ClienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ServicioClienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ServicioClienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ProformaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ProformaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(DescuentoTipoPrecioConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DescuentoTipoPrecioConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(NotaCreditoPuntoVentaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(NotaCreditoPuntoVentaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ParametroCarteraDefectoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ParametroCarteraDefectoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ConsignacionConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ConsignacionConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesTipoPrecio")) {
				iIndex=this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();	
				
				

				if(sTitle.equals("Clientes")) {
					if(!ClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoPrecio();

						this.cargarParteTabPanelRelacionadaCliente(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Consignacions")) {
					if(!ConsignacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoPrecio();

						this.cargarParteTabPanelRelacionadaConsignacion(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Descuento Tipo Precios")) {
					if(!DescuentoTipoPrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoPrecio();

						this.cargarParteTabPanelRelacionadaDescuentoTipoPrecio(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Factura Punto Ventas")) {
					if(!FacturaPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoPrecio();

						this.cargarParteTabPanelRelacionadaFacturaPuntoVenta(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Guia Remisiones")) {
					if(!GuiaRemisionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoPrecio();

						this.cargarParteTabPanelRelacionadaGuiaRemision(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Nota Creditos")) {
					if(!NotaCreditoPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoPrecio();

						this.cargarParteTabPanelRelacionadaNotaCreditoPuntoVenta(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Solicitud Nota Creditos")) {
					if(!NotaCreditoSoliJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoPrecio();

						this.cargarParteTabPanelRelacionadaNotaCreditoSoli(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Parametro Cartera Defectos")) {
					if(!ParametroCarteraDefectoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoPrecio();

						this.cargarParteTabPanelRelacionadaParametroCarteraDefecto(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Pedido Exportacions")) {
					if(!PedidoExporJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoPrecio();

						this.cargarParteTabPanelRelacionadaPedidoExpor(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Pedido Punto Ventas")) {
					if(!PedidoPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoPrecio();

						this.cargarParteTabPanelRelacionadaPedidoPuntoVenta(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Politicas Clientes")) {
					if(!PoliticasClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoPrecio();

						this.cargarParteTabPanelRelacionadaPoliticasCliente(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Precios")) {
					if(!PrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoPrecio();

						this.cargarParteTabPanelRelacionadaPrecio(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Proformas")) {
					if(!ProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoPrecio();

						this.cargarParteTabPanelRelacionadaProforma(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Servicio Clientes")) {
					if(!ServicioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoPrecio();

						this.cargarParteTabPanelRelacionadaServicioCliente(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Utilidad Tipo Precioes")) {
					if(!UtilidadTipoPrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoPrecio();

						this.cargarParteTabPanelRelacionadaUtilidadTipoPrecio(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessTipoPrecio();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaCliente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoPrecio.cargarSessionConBeanSwingJInternalFrameCliente(false,true,iIndex);
		this.jButtonClienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaCliente();

		//this.jTabbedPaneRelacionesTipoPrecio.updateUI();
		//this.jTabbedPaneRelacionesTipoPrecio.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoPrecio.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaConsignacion(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoPrecio.cargarSessionConBeanSwingJInternalFrameConsignacion(false,true,iIndex);
		this.jButtonConsignacionActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaConsignacion();

		//this.jTabbedPaneRelacionesTipoPrecio.updateUI();
		//this.jTabbedPaneRelacionesTipoPrecio.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoPrecio.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaDescuentoTipoPrecio(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoPrecio.cargarSessionConBeanSwingJInternalFrameDescuentoTipoPrecio(false,true,iIndex);
		this.jButtonDescuentoTipoPrecioActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDescuentoTipoPrecio();

		//this.jTabbedPaneRelacionesTipoPrecio.updateUI();
		//this.jTabbedPaneRelacionesTipoPrecio.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoPrecio.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaFacturaPuntoVenta(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoPrecio.cargarSessionConBeanSwingJInternalFrameFacturaPuntoVenta(false,true,iIndex);
		this.jButtonFacturaPuntoVentaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaFacturaPuntoVenta();

		//this.jTabbedPaneRelacionesTipoPrecio.updateUI();
		//this.jTabbedPaneRelacionesTipoPrecio.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoPrecio.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaGuiaRemision(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoPrecio.cargarSessionConBeanSwingJInternalFrameGuiaRemision(false,true,iIndex);
		this.jButtonGuiaRemisionActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaGuiaRemision();

		//this.jTabbedPaneRelacionesTipoPrecio.updateUI();
		//this.jTabbedPaneRelacionesTipoPrecio.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoPrecio.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaNotaCreditoPuntoVenta(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoPrecio.cargarSessionConBeanSwingJInternalFrameNotaCreditoPuntoVenta(false,true,iIndex);
		this.jButtonNotaCreditoPuntoVentaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaNotaCreditoPuntoVenta();

		//this.jTabbedPaneRelacionesTipoPrecio.updateUI();
		//this.jTabbedPaneRelacionesTipoPrecio.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoPrecio.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaNotaCreditoSoli(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoPrecio.cargarSessionConBeanSwingJInternalFrameNotaCreditoSoli(false,true,iIndex);
		this.jButtonNotaCreditoSoliActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaNotaCreditoSoli();

		//this.jTabbedPaneRelacionesTipoPrecio.updateUI();
		//this.jTabbedPaneRelacionesTipoPrecio.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoPrecio.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaParametroCarteraDefecto(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoPrecio.cargarSessionConBeanSwingJInternalFrameParametroCarteraDefecto(false,true,iIndex);
		this.jButtonParametroCarteraDefectoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaParametroCarteraDefecto();

		//this.jTabbedPaneRelacionesTipoPrecio.updateUI();
		//this.jTabbedPaneRelacionesTipoPrecio.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoPrecio.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaPedidoExpor(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoPrecio.cargarSessionConBeanSwingJInternalFramePedidoExpor(false,true,iIndex);
		this.jButtonPedidoExporActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaPedidoExpor();

		//this.jTabbedPaneRelacionesTipoPrecio.updateUI();
		//this.jTabbedPaneRelacionesTipoPrecio.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoPrecio.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaPedidoPuntoVenta(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoPrecio.cargarSessionConBeanSwingJInternalFramePedidoPuntoVenta(false,true,iIndex);
		this.jButtonPedidoPuntoVentaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaPedidoPuntoVenta();

		//this.jTabbedPaneRelacionesTipoPrecio.updateUI();
		//this.jTabbedPaneRelacionesTipoPrecio.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoPrecio.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaPoliticasCliente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoPrecio.cargarSessionConBeanSwingJInternalFramePoliticasCliente(false,true,iIndex);
		this.jButtonPoliticasClienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaPoliticasCliente();

		//this.jTabbedPaneRelacionesTipoPrecio.updateUI();
		//this.jTabbedPaneRelacionesTipoPrecio.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoPrecio.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaPrecio(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoPrecio.cargarSessionConBeanSwingJInternalFramePrecio(false,true,iIndex);
		this.jButtonPrecioActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaPrecio();

		//this.jTabbedPaneRelacionesTipoPrecio.updateUI();
		//this.jTabbedPaneRelacionesTipoPrecio.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoPrecio.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaProforma(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoPrecio.cargarSessionConBeanSwingJInternalFrameProforma(false,true,iIndex);
		this.jButtonProformaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaProforma();

		//this.jTabbedPaneRelacionesTipoPrecio.updateUI();
		//this.jTabbedPaneRelacionesTipoPrecio.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoPrecio.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaServicioCliente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoPrecio.cargarSessionConBeanSwingJInternalFrameServicioCliente(false,true,iIndex);
		this.jButtonServicioClienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaServicioCliente();

		//this.jTabbedPaneRelacionesTipoPrecio.updateUI();
		//this.jTabbedPaneRelacionesTipoPrecio.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoPrecio.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaUtilidadTipoPrecio(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoPrecio.cargarSessionConBeanSwingJInternalFrameUtilidadTipoPrecio(false,true,iIndex);
		this.jButtonUtilidadTipoPrecioActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaUtilidadTipoPrecio();

		//this.jTabbedPaneRelacionesTipoPrecio.updateUI();
		//this.jTabbedPaneRelacionesTipoPrecio.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoPrecio.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("Precio")) {
				int row=this.jTableDatosTipoPrecio.getSelectedRow();
				jButtonPrecioActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("PoliticasCliente")) {
				int row=this.jTableDatosTipoPrecio.getSelectedRow();
				jButtonPoliticasClienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("NotaCreditoSoli")) {
				int row=this.jTableDatosTipoPrecio.getSelectedRow();
				jButtonNotaCreditoSoliActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("GuiaRemision")) {
				int row=this.jTableDatosTipoPrecio.getSelectedRow();
				jButtonGuiaRemisionActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("PedidoExpor")) {
				int row=this.jTableDatosTipoPrecio.getSelectedRow();
				jButtonPedidoExporActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("FacturaPuntoVenta")) {
				int row=this.jTableDatosTipoPrecio.getSelectedRow();
				jButtonFacturaPuntoVentaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("PedidoPuntoVenta")) {
				int row=this.jTableDatosTipoPrecio.getSelectedRow();
				jButtonPedidoPuntoVentaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("UtilidadTipoPrecio")) {
				int row=this.jTableDatosTipoPrecio.getSelectedRow();
				jButtonUtilidadTipoPrecioActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Cliente")) {
				int row=this.jTableDatosTipoPrecio.getSelectedRow();
				jButtonClienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ServicioCliente")) {
				int row=this.jTableDatosTipoPrecio.getSelectedRow();
				jButtonServicioClienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Proforma")) {
				int row=this.jTableDatosTipoPrecio.getSelectedRow();
				jButtonProformaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("DescuentoTipoPrecio")) {
				int row=this.jTableDatosTipoPrecio.getSelectedRow();
				jButtonDescuentoTipoPrecioActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("NotaCreditoPuntoVenta")) {
				int row=this.jTableDatosTipoPrecio.getSelectedRow();
				jButtonNotaCreditoPuntoVentaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ParametroCarteraDefecto")) {
				int row=this.jTableDatosTipoPrecio.getSelectedRow();
				jButtonParametroCarteraDefectoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Consignacion")) {
				int row=this.jTableDatosTipoPrecio.getSelectedRow();
				jButtonConsignacionActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Precio")) {

					if(this.isTienePermisosPrecio && this.tipoprecioConstantesFunciones.mostrarPrecioTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Precios"+"("+PrecioConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Precios");

						if(tipoprecioConstantesFunciones.resaltarPrecioTipoPrecio!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoprecioConstantesFunciones.resaltarPrecioTipoPrecio);
						}

						jmenuItem.setEnabled(this.tipoprecioConstantesFunciones.activarPrecioTipoPrecio);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Precio"));

						

						this.jInternalFrameDetalleFormTipoPrecio.jmenuDetalleTipoPrecio.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Politicas Cliente")) {

					if(this.isTienePermisosPoliticasCliente && this.tipoprecioConstantesFunciones.mostrarPoliticasClienteTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Politicas Clientes"+"("+PoliticasClienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Politicas Clientes");

						if(tipoprecioConstantesFunciones.resaltarPoliticasClienteTipoPrecio!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoprecioConstantesFunciones.resaltarPoliticasClienteTipoPrecio);
						}

						jmenuItem.setEnabled(this.tipoprecioConstantesFunciones.activarPoliticasClienteTipoPrecio);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"PoliticasCliente"));

						

						this.jInternalFrameDetalleFormTipoPrecio.jmenuDetalleTipoPrecio.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Solicitud Nota Credito")) {

					if(this.isTienePermisosNotaCreditoSoli && this.tipoprecioConstantesFunciones.mostrarNotaCreditoSoliTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Solicitud Nota Creditos"+"("+NotaCreditoSoliConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Solicitud Nota Creditos");

						if(tipoprecioConstantesFunciones.resaltarNotaCreditoSoliTipoPrecio!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoprecioConstantesFunciones.resaltarNotaCreditoSoliTipoPrecio);
						}

						jmenuItem.setEnabled(this.tipoprecioConstantesFunciones.activarNotaCreditoSoliTipoPrecio);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"NotaCreditoSoli"));

						

						this.jInternalFrameDetalleFormTipoPrecio.jmenuDetalleTipoPrecio.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Guia Remision")) {

					if(this.isTienePermisosGuiaRemision && this.tipoprecioConstantesFunciones.mostrarGuiaRemisionTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Guia Remisiones"+"("+GuiaRemisionConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Guia Remisiones");

						if(tipoprecioConstantesFunciones.resaltarGuiaRemisionTipoPrecio!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoprecioConstantesFunciones.resaltarGuiaRemisionTipoPrecio);
						}

						jmenuItem.setEnabled(this.tipoprecioConstantesFunciones.activarGuiaRemisionTipoPrecio);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"GuiaRemision"));

						

						this.jInternalFrameDetalleFormTipoPrecio.jmenuDetalleTipoPrecio.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Pedido Exportacion")) {

					if(this.isTienePermisosPedidoExpor && this.tipoprecioConstantesFunciones.mostrarPedidoExporTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Pedido Exportacions"+"("+PedidoExporConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Pedido Exportacions");

						if(tipoprecioConstantesFunciones.resaltarPedidoExporTipoPrecio!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoprecioConstantesFunciones.resaltarPedidoExporTipoPrecio);
						}

						jmenuItem.setEnabled(this.tipoprecioConstantesFunciones.activarPedidoExporTipoPrecio);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"PedidoExpor"));

						

						this.jInternalFrameDetalleFormTipoPrecio.jmenuDetalleTipoPrecio.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Factura Punto Venta")) {

					if(this.isTienePermisosFacturaPuntoVenta && this.tipoprecioConstantesFunciones.mostrarFacturaPuntoVentaTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Factura Punto Ventas"+"("+FacturaPuntoVentaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Factura Punto Ventas");

						if(tipoprecioConstantesFunciones.resaltarFacturaPuntoVentaTipoPrecio!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoprecioConstantesFunciones.resaltarFacturaPuntoVentaTipoPrecio);
						}

						jmenuItem.setEnabled(this.tipoprecioConstantesFunciones.activarFacturaPuntoVentaTipoPrecio);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"FacturaPuntoVenta"));

						

						this.jInternalFrameDetalleFormTipoPrecio.jmenuDetalleTipoPrecio.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Pedido Punto Venta")) {

					if(this.isTienePermisosPedidoPuntoVenta && this.tipoprecioConstantesFunciones.mostrarPedidoPuntoVentaTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Pedido Punto Ventas"+"("+PedidoPuntoVentaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Pedido Punto Ventas");

						if(tipoprecioConstantesFunciones.resaltarPedidoPuntoVentaTipoPrecio!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoprecioConstantesFunciones.resaltarPedidoPuntoVentaTipoPrecio);
						}

						jmenuItem.setEnabled(this.tipoprecioConstantesFunciones.activarPedidoPuntoVentaTipoPrecio);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"PedidoPuntoVenta"));

						

						this.jInternalFrameDetalleFormTipoPrecio.jmenuDetalleTipoPrecio.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Utilidad Tipo Precio")) {

					if(this.isTienePermisosUtilidadTipoPrecio && this.tipoprecioConstantesFunciones.mostrarUtilidadTipoPrecioTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Utilidad Tipo Precioes"+"("+UtilidadTipoPrecioConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Utilidad Tipo Precioes");

						if(tipoprecioConstantesFunciones.resaltarUtilidadTipoPrecioTipoPrecio!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoprecioConstantesFunciones.resaltarUtilidadTipoPrecioTipoPrecio);
						}

						jmenuItem.setEnabled(this.tipoprecioConstantesFunciones.activarUtilidadTipoPrecioTipoPrecio);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"UtilidadTipoPrecio"));

						

						this.jInternalFrameDetalleFormTipoPrecio.jmenuDetalleTipoPrecio.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Cliente")) {

					if(this.isTienePermisosCliente && this.tipoprecioConstantesFunciones.mostrarClienteTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Clientes"+"("+ClienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Clientes");

						if(tipoprecioConstantesFunciones.resaltarClienteTipoPrecio!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoprecioConstantesFunciones.resaltarClienteTipoPrecio);
						}

						jmenuItem.setEnabled(this.tipoprecioConstantesFunciones.activarClienteTipoPrecio);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Cliente"));

						

						this.jInternalFrameDetalleFormTipoPrecio.jmenuDetalleTipoPrecio.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Servicio Cliente")) {

					if(this.isTienePermisosServicioCliente && this.tipoprecioConstantesFunciones.mostrarServicioClienteTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Servicio Clientes"+"("+ServicioClienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Servicio Clientes");

						if(tipoprecioConstantesFunciones.resaltarServicioClienteTipoPrecio!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoprecioConstantesFunciones.resaltarServicioClienteTipoPrecio);
						}

						jmenuItem.setEnabled(this.tipoprecioConstantesFunciones.activarServicioClienteTipoPrecio);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ServicioCliente"));

						

						this.jInternalFrameDetalleFormTipoPrecio.jmenuDetalleTipoPrecio.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Proforma")) {

					if(this.isTienePermisosProforma && this.tipoprecioConstantesFunciones.mostrarProformaTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Proformas"+"("+ProformaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Proformas");

						if(tipoprecioConstantesFunciones.resaltarProformaTipoPrecio!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoprecioConstantesFunciones.resaltarProformaTipoPrecio);
						}

						jmenuItem.setEnabled(this.tipoprecioConstantesFunciones.activarProformaTipoPrecio);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Proforma"));

						

						this.jInternalFrameDetalleFormTipoPrecio.jmenuDetalleTipoPrecio.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Descuento Tipo Precio")) {

					if(this.isTienePermisosDescuentoTipoPrecio && this.tipoprecioConstantesFunciones.mostrarDescuentoTipoPrecioTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Descuento Tipo Precios"+"("+DescuentoTipoPrecioConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Descuento Tipo Precios");

						if(tipoprecioConstantesFunciones.resaltarDescuentoTipoPrecioTipoPrecio!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoprecioConstantesFunciones.resaltarDescuentoTipoPrecioTipoPrecio);
						}

						jmenuItem.setEnabled(this.tipoprecioConstantesFunciones.activarDescuentoTipoPrecioTipoPrecio);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DescuentoTipoPrecio"));

						

						this.jInternalFrameDetalleFormTipoPrecio.jmenuDetalleTipoPrecio.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Nota Credito")) {

					if(this.isTienePermisosNotaCreditoPuntoVenta && this.tipoprecioConstantesFunciones.mostrarNotaCreditoPuntoVentaTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Nota Creditos"+"("+NotaCreditoPuntoVentaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Nota Creditos");

						if(tipoprecioConstantesFunciones.resaltarNotaCreditoPuntoVentaTipoPrecio!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoprecioConstantesFunciones.resaltarNotaCreditoPuntoVentaTipoPrecio);
						}

						jmenuItem.setEnabled(this.tipoprecioConstantesFunciones.activarNotaCreditoPuntoVentaTipoPrecio);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"NotaCreditoPuntoVenta"));

						

						this.jInternalFrameDetalleFormTipoPrecio.jmenuDetalleTipoPrecio.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Parametro Cartera Defecto")) {

					if(this.isTienePermisosParametroCarteraDefecto && this.tipoprecioConstantesFunciones.mostrarParametroCarteraDefectoTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Parametro Cartera Defectos"+"("+ParametroCarteraDefectoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Parametro Cartera Defectos");

						if(tipoprecioConstantesFunciones.resaltarParametroCarteraDefectoTipoPrecio!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoprecioConstantesFunciones.resaltarParametroCarteraDefectoTipoPrecio);
						}

						jmenuItem.setEnabled(this.tipoprecioConstantesFunciones.activarParametroCarteraDefectoTipoPrecio);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ParametroCarteraDefecto"));

						

						this.jInternalFrameDetalleFormTipoPrecio.jmenuDetalleTipoPrecio.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Consignacion")) {

					if(this.isTienePermisosConsignacion && this.tipoprecioConstantesFunciones.mostrarConsignacionTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Consignacions"+"("+ConsignacionConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Consignacions");

						if(tipoprecioConstantesFunciones.resaltarConsignacionTipoPrecio!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoprecioConstantesFunciones.resaltarConsignacionTipoPrecio);
						}

						jmenuItem.setEnabled(this.tipoprecioConstantesFunciones.activarConsignacionTipoPrecio);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Consignacion"));

						

						this.jInternalFrameDetalleFormTipoPrecio.jmenuDetalleTipoPrecio.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyTipoPrecio(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyTipoPrecio(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyTipoPrecio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyTipoPrecioListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyTipoPrecio();
		
		this.cargarCombosFrameForeignKeyTipoPrecio();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyTipoPrecio();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyTipoPrecio();
		}
	}
	
	
	
	public void jButtonNuevoTipoPrecioActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormTipoPrecio==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			
			
			if(jTableDatosTipoPrecio.getRowCount()>=1) {
				jTableDatosTipoPrecio.removeRowSelectionInterval(0, jTableDatosTipoPrecio.getRowCount()-1);						
			}
			
			this.isEsNuevoTipoPrecio=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoTipoPrecio(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesTipoPrecio(true);			
			//this.tipoprecio=new TipoPrecio();
			//this.tipoprecio.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesTipoPrecio(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTipoPrecio() ;
			
			if(TipoPrecioJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleTipoPrecio(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.tipoprecio);	
			this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);				
			
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			
			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar TipoPrecio: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarTipoPrecioActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<TipoPrecio> tipopreciosSeleccionados=new ArrayList<TipoPrecio>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosTipoPrecio.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosTipoPrecio.getSelectedRows().length;			
			}
			
			tipopreciosSeleccionados=this.getTipoPreciosSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoTipoPrecio--;			
				//TipoPrecio tipoprecioAux= new TipoPrecio();			
				//tipoprecioAux.setId(this.iIdNuevoTipoPrecio);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//TipoPrecio tipoprecioOrigen=new TipoPrecio();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(TipoPrecio tipoprecioOrigen : tipopreciosSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							tipoprecioOrigen =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoprecioOrigen =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaTipoPrecio();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.tipoprecio.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosTipoPrecio(tipoprecioOrigen,this.tipoprecio,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.tipoprecioLogic.getTipoPrecios().add(this.tipoprecioAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.tipoprecios.add(this.tipoprecioAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaTipoPrecio(false);
				
				this.jTableDatosTipoPrecio.setRowSelectionInterval(this.getIndiceNuevoTipoPrecio(), this.getIndiceNuevoTipoPrecio());
				
				int iLastRow =  this.jTableDatosTipoPrecio.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosTipoPrecio.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosTipoPrecio.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaTipoPrecio(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarTipoPrecioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<TipoPrecio> tipopreciosSeleccionados=new ArrayList<TipoPrecio>();									
		
			TipoPrecio tipoprecioOrigen=new TipoPrecio();
			TipoPrecio tipoprecioDestino=new TipoPrecio();
				
			tipopreciosSeleccionados=this.getTipoPreciosSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosTipoPrecio.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || tipopreciosSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosTipoPrecio.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoprecioOrigen =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						tipoprecioOrigen =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoprecioDestino =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						tipoprecioDestino =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				tipoprecioOrigen =tipopreciosSeleccionados.get(0);
				tipoprecioDestino =tipopreciosSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosTipoPrecio(tipoprecioOrigen,tipoprecioDestino,true,false);
				
				tipoprecioDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(tipoprecioDestino,tipoprecioLogic.getTipoPrecios());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(tipoprecioDestino,tipoprecios);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaTipoPrecio(false);
				
				//this.jTableDatosTipoPrecio.setRowSelectionInterval(this.getIndiceNuevoTipoPrecio(), this.getIndiceNuevoTipoPrecio());
				
				int iLastRow =  this.jTableDatosTipoPrecio.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosTipoPrecio.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosTipoPrecio.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaTipoPrecio(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormTipoPrecioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormTipoPrecio==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormTipoPrecio.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarTipoPrecioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesTipoPrecio.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasTipoPrecio.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesTipoPrecio.setVisible(!isVisible);
			this.jPanelPaginacionTipoPrecio.setVisible(!isVisible);
			this.jPanelAccionesTipoPrecio.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarTipoPrecioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameTipoPrecio();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoTipoPrecioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoTipoPrecio();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionTipoPrecioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionTipoPrecio();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByTipoPrecioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByTipoPrecio();
			
			this.abrirFrameOrderByTipoPrecio();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByTipoPrecioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByTipoPrecio();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleTipoPrecio(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormTipoPrecio);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormTipoPrecio.isMaximum()) {
					this.jInternalFrameDetalleFormTipoPrecio.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormTipoPrecio.setSize(this.jInternalFrameDetalleFormTipoPrecio.iWidthFormulario,this.jInternalFrameDetalleFormTipoPrecio.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormTipoPrecio.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormTipoPrecio.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormTipoPrecio.isMaximum()) {
						this.jInternalFrameDetalleFormTipoPrecio.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),TipoPrecioConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),TipoPrecioConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),TipoPrecioConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(ClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaCliente();
					}

					if(ConsignacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaConsignacion();
					}

					if(DescuentoTipoPrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDescuentoTipoPrecio();
					}

					if(FacturaPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaFacturaPuntoVenta();
					}

					if(GuiaRemisionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaGuiaRemision();
					}

					if(NotaCreditoPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaNotaCreditoPuntoVenta();
					}

					if(NotaCreditoSoliJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaNotaCreditoSoli();
					}

					if(ParametroCarteraDefectoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaParametroCarteraDefecto();
					}

					if(PedidoExporJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaPedidoExpor();
					}

					if(PedidoPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaPedidoPuntoVenta();
					}

					if(PoliticasClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaPoliticasCliente();
					}

					if(PrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaPrecio();
					}

					if(ProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaProforma();
					}

					if(ServicioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaServicioCliente();
					}

					if(UtilidadTipoPrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaUtilidadTipoPrecio();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormTipoPrecio.setVisible(true);
	        this.jInternalFrameDetalleFormTipoPrecio.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByTipoPrecio() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByTipoPrecio==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByTipoPrecio=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByTipoPrecio,false,this);
				} else {
					this.jInternalFrameOrderByTipoPrecio=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByTipoPrecio,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByTipoPrecio);
				this.jInternalFrameOrderByTipoPrecio.setVisible(false);
				this.jInternalFrameOrderByTipoPrecio.setSelected(false);
				
				this.jInternalFrameOrderByTipoPrecio.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByTipoPrecio"));
				
				this.inicializarActualizarBindingTablaOrderByTipoPrecio();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionTipoPrecio() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionTipoPrecio==null) {
				
				this.jInternalFrameImportacionTipoPrecio=new ImportacionJInternalFrame(TipoPrecioConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionTipoPrecio);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionTipoPrecio);
				this.jInternalFrameImportacionTipoPrecio.setVisible(false);
				this.jInternalFrameImportacionTipoPrecio.setSelected(false);


				this.jInternalFrameImportacionTipoPrecio.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionTipoPrecio"));
				this.jInternalFrameImportacionTipoPrecio.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionTipoPrecio"));
				this.jInternalFrameImportacionTipoPrecio.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionTipoPrecio"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoTipoPrecio() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoTipoPrecio==null) {
				this.jInternalFrameReporteDinamicoTipoPrecio=new ReporteDinamicoJInternalFrame(TipoPrecioConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoTipoPrecio);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoTipoPrecio);
				this.jInternalFrameReporteDinamicoTipoPrecio.setVisible(false);
				this.jInternalFrameReporteDinamicoTipoPrecio.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoTipoPrecio.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoTipoPrecio"));
				this.jInternalFrameReporteDinamicoTipoPrecio.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoTipoPrecio"));
				this.jInternalFrameReporteDinamicoTipoPrecio.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoTipoPrecio"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualTipoPrecio();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaCliente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaConsignacion() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jScrollPanelDatosConsignacion.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jScrollPanelDatosConsignacion.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jScrollPanelDatosConsignacion.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.jScrollPanelDatosConsignacion.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaDescuentoTipoPrecio() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.jScrollPanelDatosDescuentoTipoPrecio.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.jScrollPanelDatosDescuentoTipoPrecio.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.jScrollPanelDatosDescuentoTipoPrecio.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.jScrollPanelDatosDescuentoTipoPrecio.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaFacturaPuntoVenta() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jScrollPanelDatosFacturaPuntoVenta.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jScrollPanelDatosFacturaPuntoVenta.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jScrollPanelDatosFacturaPuntoVenta.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.jScrollPanelDatosFacturaPuntoVenta.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaGuiaRemision() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jScrollPanelDatosGuiaRemision.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jScrollPanelDatosGuiaRemision.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jScrollPanelDatosGuiaRemision.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.jScrollPanelDatosGuiaRemision.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaNotaCreditoPuntoVenta() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jScrollPanelDatosNotaCreditoPuntoVenta.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jScrollPanelDatosNotaCreditoPuntoVenta.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jScrollPanelDatosNotaCreditoPuntoVenta.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.jScrollPanelDatosNotaCreditoPuntoVenta.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaNotaCreditoSoli() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jScrollPanelDatosNotaCreditoSoli.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jScrollPanelDatosNotaCreditoSoli.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jScrollPanelDatosNotaCreditoSoli.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.jScrollPanelDatosNotaCreditoSoli.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaParametroCarteraDefecto() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.jScrollPanelDatosParametroCarteraDefecto.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.jScrollPanelDatosParametroCarteraDefecto.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.jScrollPanelDatosParametroCarteraDefecto.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.jScrollPanelDatosParametroCarteraDefecto.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaPedidoExpor() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jScrollPanelDatosPedidoExpor.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jScrollPanelDatosPedidoExpor.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jScrollPanelDatosPedidoExpor.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.jScrollPanelDatosPedidoExpor.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaPedidoPuntoVenta() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jScrollPanelDatosPedidoPuntoVenta.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jScrollPanelDatosPedidoPuntoVenta.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jScrollPanelDatosPedidoPuntoVenta.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.jScrollPanelDatosPedidoPuntoVenta.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaPoliticasCliente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.jScrollPanelDatosPoliticasCliente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.jScrollPanelDatosPoliticasCliente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.jScrollPanelDatosPoliticasCliente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.jScrollPanelDatosPoliticasCliente.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaPrecio() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.jScrollPanelDatosPrecio.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.jScrollPanelDatosPrecio.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.jScrollPanelDatosPrecio.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.jScrollPanelDatosPrecio.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaProforma() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jScrollPanelDatosProforma.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jScrollPanelDatosProforma.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jScrollPanelDatosProforma.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.jScrollPanelDatosProforma.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaServicioCliente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.jScrollPanelDatosServicioCliente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.jScrollPanelDatosServicioCliente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.jScrollPanelDatosServicioCliente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.jScrollPanelDatosServicioCliente.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaUtilidadTipoPrecio() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.jScrollPanelDatosUtilidadTipoPrecio.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoPrecio.jContentPaneDetalleTipoPrecio.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.jScrollPanelDatosUtilidadTipoPrecio.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.jScrollPanelDatosUtilidadTipoPrecio.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.jScrollPanelDatosUtilidadTipoPrecio.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleTipoPrecio() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormTipoPrecio);
			
	       	this.jInternalFrameDetalleFormTipoPrecio.setVisible(false);
	        this.jInternalFrameDetalleFormTipoPrecio.setSelected(false);
			
			//this.jInternalFrameDetalleFormTipoPrecio.dispose();
			//this.jInternalFrameDetalleFormTipoPrecio=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoTipoPrecio() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoTipoPrecio.setVisible(true);
	        this.jInternalFrameReporteDinamicoTipoPrecio.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionTipoPrecio() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionTipoPrecio.setVisible(true);
	        this.jInternalFrameImportacionTipoPrecio.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByTipoPrecio() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByTipoPrecio.setVisible(true);
	        this.jInternalFrameOrderByTipoPrecio.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByTipoPrecio() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByTipoPrecio.setVisible(false);
	        this.jInternalFrameOrderByTipoPrecio.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoTipoPrecio() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoTipoPrecio.setVisible(false);
	        this.jInternalFrameReporteDinamicoTipoPrecio.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionTipoPrecio() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionTipoPrecio.setVisible(false);
	        this.jInternalFrameImportacionTipoPrecio.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarTipoPrecioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarTipoPrecio(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarTipoPrecio(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesTipoPrecio(true);
			//this.isEsNuevoTipoPrecio=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesTipoPrecio("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesTipoPrecio(false) ;
			
			if(tipoprecioSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioSessionBean.getEsGuardarRelacionado() && PrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPrecioActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioSessionBean.getEsGuardarRelacionado() && UtilidadTipoPrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonUtilidadTipoPrecioActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaSessionBean.getEsGuardarRelacionado() && PedidoPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPedidoPuntoVentaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoSessionBean.getEsGuardarRelacionado() && ParametroCarteraDefectoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonParametroCarteraDefectoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioSessionBean.getEsGuardarRelacionado() && DescuentoTipoPrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDescuentoTipoPrecioActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.getEsGuardarRelacionado() && PoliticasClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPoliticasClienteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaSessionBean.getEsGuardarRelacionado() && ProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProformaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliSessionBean.getEsGuardarRelacionado() && NotaCreditoSoliJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonNotaCreditoSoliActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionSessionBean.getEsGuardarRelacionado() && ConsignacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonConsignacionActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.getEsGuardarRelacionado() && PedidoExporJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPedidoExporActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.getEsGuardarRelacionado() && ServicioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonServicioClienteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaSessionBean.getEsGuardarRelacionado() && FacturaPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFacturaPuntoVentaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.getEsGuardarRelacionado() && GuiaRemisionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonGuiaRemisionActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteSessionBean.getEsGuardarRelacionado() && ClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonClienteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaSessionBean.getEsGuardarRelacionado() && NotaCreditoPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonNotaCreditoPuntoVentaActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(TipoPrecioJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleTipoPrecio(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTipoPrecio(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaTipoPrecioActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarTipoPrecio(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormTipoPrecio==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesTipoPrecio(true);
			//this.isEsNuevoTipoPrecio=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.tipoprecio.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesTipoPrecio("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesTipoPrecio(false) ;
			
			if(TipoPrecioJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleTipoPrecio(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTipoPrecio(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
		} catch(Exception e) {
			throw e;
		}
	}
	
		
	
	
	public void jButtonActualizarTipoPrecioActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesTipoPrecio(false);
			
			//if(!this.isEsNuevoTipoPrecio) {								
				int intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(TipoPrecioJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
				
			}
			
			if(this.permiteMantenimiento(this.tipoprecio)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoTipoPrecio=true;
					this.inicializarActualizarBindingTablaTipoPrecio(false);
					this.isEsNuevoTipoPrecio=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoTipoPrecio=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoTipoPrecio=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesTipoPrecio(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualTipoPrecio(false);
				
				this.habilitarDeshabilitarControlesTipoPrecio(false);
			
												
				
				if(TipoPrecioJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleTipoPrecio();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoTipoPrecioActionPerformed(evt,tipoprecioSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualTipoPrecio(this.tipoprecio,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosTipoPrecio.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,tipoprecioSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.tipoprecio.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(TipoPrecio.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoPrecio.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarTipoPrecioActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				this.tipoprecio.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				this.tipoprecio.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.tipoprecio)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((TipoPrecioModel) this.jTableDatosTipoPrecio.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoTipoPrecio=true;
				this.inicializarActualizarBindingTablaTipoPrecio(false);
				this.isEsNuevoTipoPrecio=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesTipoPrecio(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualTipoPrecio(false);
				
				this.habilitarDeshabilitarControlesTipoPrecio(false);
				
				
				
				if(TipoPrecioJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleTipoPrecio();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarTipoPrecioActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosTipoPrecio.getRowCount()>=1) {
				jTableDatosTipoPrecio.removeRowSelectionInterval(0, jTableDatosTipoPrecio.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesTipoPrecio(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaTipoPrecio(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesTipoPrecio(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTipoPrecio(false) ;
			
			this.isEsNuevoTipoPrecio=false;
			
			if(TipoPrecioJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleTipoPrecio();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosTipoPrecioActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingTipoPrecio(false);
				
				//SI ES MANUAL
				if(TipoPrecioJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualTipoPrecio();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosTipoPrecioActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoTipoPrecio--;			
			//TipoPrecio tipoprecioAux= new TipoPrecio();			
			//tipoprecioAux.setId(this.iIdNuevoTipoPrecio);
			
			if(this.jInternalFrameDetalleFormTipoPrecio==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaTipoPrecio();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
			
			this.tipoprecio.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.tipoprecioLogic.getTipoPrecios().add(this.tipoprecioAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.tipoprecios.add(this.tipoprecioAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaTipoPrecio(false);
			
			this.jTableDatosTipoPrecio.setRowSelectionInterval(this.getIndiceNuevoTipoPrecio(), this.getIndiceNuevoTipoPrecio());
			
			int iLastRow =  this.jTableDatosTipoPrecio.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosTipoPrecio.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosTipoPrecio.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaTipoPrecio(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionTipoPrecioActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingTipoPrecio(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTipoPrecio(false);
			
			//SI ES MANUAL
			if(TipoPrecioJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualTipoPrecio();
			}
			
			//this.abrirFrameTreeTipoPrecio();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionTipoPrecioActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Tipo PrecioES ?", "MANTENIMIENTO DE Tipo Precio", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionTipoPrecio.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralTipoPrecio();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.tipoprecioReturnGeneral=tipoprecioLogic.procesarImportacionTipoPreciosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.tipoprecioParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarTipoPrecioReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionTipoPrecioActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionTipoPrecio.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionTipoPrecio.setFileImportacion(this.jInternalFrameImportacionTipoPrecio.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionTipoPrecio.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionTipoPrecio.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionTipoPrecio.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionTipoPrecio.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoTipoPrecioActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<TipoPrecio> tipopreciosSeleccionados=new ArrayList<TipoPrecio>();		

		tipopreciosSeleccionados=this.getTipoPreciosSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("TipoPrecioBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"TipoPrecioBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteTipoPrecios("Todos",tipopreciosSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoprecioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Precio",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoTipoPrecio.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTipoPrecio.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case TipoPrecioConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoPrecioConstantesFunciones.LABEL_CODIGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_digo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_digo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_digo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_digo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoPrecioConstantesFunciones.LABEL_NOMBRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoPrecioConstantesFunciones.LABEL_FECHADESDE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaDesde_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaDesde_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaDesde_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaDesde_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoPrecioConstantesFunciones.LABEL_FECHAHASTA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaHasta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaHasta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaHasta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaHasta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoPrecioConstantesFunciones.LABEL_MONTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_taActivo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_taActivo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_taActivo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_taActivo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoPrecioConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoTipoPrecio.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case TipoPrecioConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case TipoPrecioConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoria="codigo";
					break;

				case TipoPrecioConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoria="nombre";
					break;

				case TipoPrecioConstantesFunciones.LABEL_FECHADESDE:
					sNombreCampoCategoria="fecha_desde";
					break;

				case TipoPrecioConstantesFunciones.LABEL_FECHAHASTA:
					sNombreCampoCategoria="fecha_hasta";
					break;

				case TipoPrecioConstantesFunciones.LABEL_MONTO:
					sNombreCampoCategoria="monto";
					break;

				case TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO:
					sNombreCampoCategoria="esta_activo";
					break;

				case TipoPrecioConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case TipoPrecioConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case TipoPrecioConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoriaValor="codigo";
					break;

				case TipoPrecioConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoriaValor="nombre";
					break;

				case TipoPrecioConstantesFunciones.LABEL_FECHADESDE:
					sNombreCampoCategoriaValor="fecha_desde";
					break;

				case TipoPrecioConstantesFunciones.LABEL_FECHAHASTA:
					sNombreCampoCategoriaValor="fecha_hasta";
					break;

				case TipoPrecioConstantesFunciones.LABEL_MONTO:
					sNombreCampoCategoriaValor="monto";
					break;

				case TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO:
					sNombreCampoCategoriaValor="esta_activo";
					break;

				case TipoPrecioConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoTipoPrecio.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTipoPrecio.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case TipoPrecioConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case TipoPrecioConstantesFunciones.LABEL_CODIGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"codigo");
					break;

				case TipoPrecioConstantesFunciones.LABEL_NOMBRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre");
					break;

				case TipoPrecioConstantesFunciones.LABEL_FECHADESDE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Desde",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_desde");
					break;

				case TipoPrecioConstantesFunciones.LABEL_FECHAHASTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Hasta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_hasta");
					break;

				case TipoPrecioConstantesFunciones.LABEL_MONTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto");
					break;

				case TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Esta Activo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"esta_activo");
					break;

				case TipoPrecioConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoTipoPrecioActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<TipoPrecio> tipopreciosSeleccionados=new ArrayList<TipoPrecio>();		
		
		tipopreciosSeleccionados=this.getTipoPreciosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipoprecio";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("TipoPrecios");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoTipoPrecio.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoTipoPrecio.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case TipoPrecioConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(TipoPrecio tipoprecio:tipopreciosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoprecio.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoPrecioConstantesFunciones.LABEL_CODIGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_CODIGO);
					iRow++;

					for(TipoPrecio tipoprecio:tipopreciosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoprecio.getcodigo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoPrecioConstantesFunciones.LABEL_NOMBRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_NOMBRE);
					iRow++;

					for(TipoPrecio tipoprecio:tipopreciosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoprecio.getnombre());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoPrecioConstantesFunciones.LABEL_FECHADESDE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_FECHADESDE);
					iRow++;

					for(TipoPrecio tipoprecio:tipopreciosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoprecio.getfecha_desde());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoPrecioConstantesFunciones.LABEL_FECHAHASTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_FECHAHASTA);
					iRow++;

					for(TipoPrecio tipoprecio:tipopreciosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoprecio.getfecha_hasta());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoPrecioConstantesFunciones.LABEL_MONTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_MONTO);
					iRow++;

					for(TipoPrecio tipoprecio:tipopreciosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoprecio.getmonto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO);
					iRow++;

					for(TipoPrecio tipoprecio:tipopreciosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoprecio.getesta_activo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoPrecioConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(TipoPrecio tipoprecio:tipopreciosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoprecio.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelTipoPrecio(row);				
			//	iRow++;
			//}				
			
			//for(TipoPrecio tipoprecioAux:tipopreciosSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelTipoPrecio(tipoprecioAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoprecioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Precio",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTipoPrecio(false);
			
			//SI ES MANUAL
			if(TipoPrecioJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualTipoPrecio();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresTipoPrecioActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTipoPrecio(false);
			
			//SI ES MANUAL
			if(TipoPrecioJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualTipoPrecio();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesTipoPrecioActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTipoPrecio(false);
			
			//SI ES MANUAL
			if(TipoPrecioJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualTipoPrecio();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaTipoPrecio() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosTipoPrecio.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosTipoPrecio.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosTipoPrecio.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosTipoPrecio.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosTipoPrecio.setMinimumSize(dimensionMinimum);
		this.jTableDatosTipoPrecio.setMaximumSize(dimensionMaximum);
		this.jTableDatosTipoPrecio.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingTipoPrecio(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingTipoPrecio(esInicializar,true);
	}
	
	public void inicializarActualizarBindingTipoPrecio(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaTipoPrecio(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesTipoPrecio(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasTipoPrecio(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesTipoPrecio(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesTipoPrecio(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !TipoPrecioJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!TipoPrecioJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualTipoPrecio() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaTipoPrecio();
		
		this.inicializarActualizarBindingBotonesManualTipoPrecio(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualTipoPrecio();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesTipoPrecio() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualTipoPrecio(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualTipoPrecio(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosTipoPrecio.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosTipoPrecio.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteTipoPrecio.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormTipoPrecio.jCheckBoxPostAccionNuevoTipoPrecio.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormTipoPrecio.jCheckBoxPostAccionSinCerrarTipoPrecio.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormTipoPrecio.jCheckBoxPostAccionSinMensajeTipoPrecio.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosTipoPrecio.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosTipoPrecio.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteTipoPrecio.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
				this.jInternalFrameDetalleFormTipoPrecio.jCheckBoxPostAccionNuevoTipoPrecio.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormTipoPrecio.jCheckBoxPostAccionSinCerrarTipoPrecio.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormTipoPrecio.jCheckBoxPostAccionSinMensajeTipoPrecio.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionTipoPrecio.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionTipoPrecio.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormTipoPrecio.jComboBoxTiposAccionesFormularioTipoPrecio.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesTipoPrecio.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoTipoPrecio!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesTipoPrecio.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesTipoPrecio.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarTipoPrecio.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesTipoPrecio.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoTipoPrecio!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesTipoPrecio.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralTipoPrecio.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesTipoPrecio(Boolean esInicializar) throws Exception {
		try	{	
			if(TipoPrecioJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualTipoPrecio(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesTipoPrecio() throws Exception {
		try	{
			if(TipoPrecioJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualTipoPrecio();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleTipoPrecio() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormTipoPrecio.jComboBoxTiposAccionesFormularioTipoPrecio.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormTipoPrecio.jComboBoxTiposAccionesFormularioTipoPrecio.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualTipoPrecio() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesTipoPrecio.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesTipoPrecio.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesTipoPrecio.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesTipoPrecio.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesTipoPrecio.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesTipoPrecio.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionTipoPrecio.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionTipoPrecio.addItem(reporte);
			}
			
			
			if(!this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionTipoPrecio.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionTipoPrecio.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesTipoPrecio.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesTipoPrecio.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesTipoPrecio.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesTipoPrecio.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormTipoPrecio.jComboBoxTiposAccionesFormularioTipoPrecio.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormTipoPrecio.jComboBoxTiposAccionesFormularioTipoPrecio.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarTipoPrecio.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarTipoPrecio.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarTipoPrecio.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualTipoPrecio();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualTipoPrecio() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoTipoPrecio!=null) {
				this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoTipoPrecio!=null) {
				this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoTipoPrecio!=null) {
				
				if(this.jInternalFrameReporteDinamicoTipoPrecio.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoTipoPrecio.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoTipoPrecio.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoTipoPrecio.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoTipoPrecio.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoTipoPrecio.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=TipoPrecioConstantesFunciones.getTiposSeleccionarTipoPrecio(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=TipoPrecioConstantesFunciones.getTiposSeleccionarTipoPrecio(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoTipoPrecio.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoTipoPrecio.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=TipoPrecioConstantesFunciones.getTiposSeleccionarTipoPrecio(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoTipoPrecio.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoTipoPrecio.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualTipoPrecio()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		this.codigoBusquedaPorCodigo=this.jTextAreacodigoBusquedaPorCodigoTipoPrecio.getText();
		this.fecha_desdeBusquedaPorFechaDesde=new Date(this.jDateChooserfecha_desdeBusquedaPorFechaDesdeTipoPrecio.getDate().getTime());
		this.fecha_hastaBusquedaPorFechaHasta=new Date(this.jDateChooserfecha_hastaBusquedaPorFechaHastaTipoPrecio.getDate().getTime());
		this.nombreBusquedaPorNombre=this.jTextAreanombreBusquedaPorNombreTipoPrecio.getText();
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasTipoPrecio(Boolean esInicializar) throws Exception {				
		if(TipoPrecioJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualTipoPrecio();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaTipoPrecio() throws Exception {
		this.inicializarActualizarBindingTablaTipoPrecio(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByTipoPrecio() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByTipoPrecio.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByTipoPrecio.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByTipoPrecio.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new TipoPrecioPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByTipoPrecio.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByTipoPrecio.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new TipoPrecioPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosTipoPrecioOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoPrecioOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new TipoPrecioPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByTipoPrecio.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByTipoPrecio.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new TipoPrecioPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByTipoPrecio.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaTipoPrecio(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=tipoprecioLogic.getTipoPrecios().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=tipoprecios.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(TipoPrecioJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosTipoPrecio.setModel(new TipoPrecioModel(this.tipoprecioLogic.getTipoPrecios(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosTipoPrecio.setModel(new TipoPrecioModel(this.tipoprecios,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByTipoPrecio!=null && this.jInternalFrameOrderByTipoPrecio.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByTipoPrecio();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosTipoPrecio.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoPrecio,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new TipoPrecioPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+TipoPrecioConstantesFunciones.SCLASSWEBTITULO,tipoprecioConstantesFunciones.resaltarSeleccionarTipoPrecio,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+TipoPrecioConstantesFunciones.SCLASSWEBTITULO,tipoprecioConstantesFunciones.resaltarSeleccionarTipoPrecio,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosTipoPrecio.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoPrecio,TipoPrecioConstantesFunciones.LABEL_ID));

		if(this.tipoprecioConstantesFunciones.mostraridTipoPrecio && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoPrecioConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.tipoprecioConstantesFunciones.resaltaridTipoPrecio,this.tipoprecioConstantesFunciones.activaridTipoPrecio,iSizeTabla,this,true,"idTipoPrecio","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.tipoprecioConstantesFunciones.resaltaridTipoPrecio,this.tipoprecioConstantesFunciones.activaridTipoPrecio,this,true,"idTipoPrecio","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoPrecio.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoPrecio,TipoPrecioConstantesFunciones.LABEL_IDEMPRESA));

		if(this.tipoprecioConstantesFunciones.mostrarid_empresaTipoPrecio && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoPrecioConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.tipoprecioConstantesFunciones.resaltarid_empresaTipoPrecio,this,this.tipoprecioConstantesFunciones.activarid_empresaTipoPrecio,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.tipoprecioConstantesFunciones.resaltarid_empresaTipoPrecio,this,this.tipoprecioConstantesFunciones.activarid_empresaTipoPrecio,false,"id_empresaTipoPrecio","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TipoPrecioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoPrecio.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoPrecio,TipoPrecioConstantesFunciones.LABEL_CODIGO));

		if(this.tipoprecioConstantesFunciones.mostrarcodigoTipoPrecio && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoPrecioConstantesFunciones.LABEL_CODIGO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.tipoprecioConstantesFunciones.resaltarcodigoTipoPrecio,this.tipoprecioConstantesFunciones.activarcodigoTipoPrecio,iSizeTabla,this,true,"codigoTipoPrecio","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.tipoprecioConstantesFunciones.resaltarcodigoTipoPrecio,this.tipoprecioConstantesFunciones.activarcodigoTipoPrecio,this,true,"codigoTipoPrecio","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TipoPrecioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoPrecio.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoPrecio,TipoPrecioConstantesFunciones.LABEL_NOMBRE));

		if(this.tipoprecioConstantesFunciones.mostrarnombreTipoPrecio && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoPrecioConstantesFunciones.LABEL_NOMBRE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.tipoprecioConstantesFunciones.resaltarnombreTipoPrecio,this.tipoprecioConstantesFunciones.activarnombreTipoPrecio,iSizeTabla,this,true,"nombreTipoPrecio","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.tipoprecioConstantesFunciones.resaltarnombreTipoPrecio,this.tipoprecioConstantesFunciones.activarnombreTipoPrecio,this,true,"nombreTipoPrecio","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TipoPrecioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoPrecio.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoPrecio,TipoPrecioConstantesFunciones.LABEL_FECHADESDE));

		if(this.tipoprecioConstantesFunciones.mostrarfecha_desdeTipoPrecio && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoPrecioConstantesFunciones.LABEL_FECHADESDE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.tipoprecioConstantesFunciones.resaltarfecha_desdeTipoPrecio,this.tipoprecioConstantesFunciones.activarfecha_desdeTipoPrecio,iSizeTabla,this,true,"fecha_desdeTipoPrecio","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.tipoprecioConstantesFunciones.resaltarfecha_desdeTipoPrecio,this.tipoprecioConstantesFunciones.activarfecha_desdeTipoPrecio,this,true,"fecha_desdeTipoPrecio","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new TipoPrecioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoPrecio.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoPrecio,TipoPrecioConstantesFunciones.LABEL_FECHAHASTA));

		if(this.tipoprecioConstantesFunciones.mostrarfecha_hastaTipoPrecio && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoPrecioConstantesFunciones.LABEL_FECHAHASTA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.tipoprecioConstantesFunciones.resaltarfecha_hastaTipoPrecio,this.tipoprecioConstantesFunciones.activarfecha_hastaTipoPrecio,iSizeTabla,this,true,"fecha_hastaTipoPrecio","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.tipoprecioConstantesFunciones.resaltarfecha_hastaTipoPrecio,this.tipoprecioConstantesFunciones.activarfecha_hastaTipoPrecio,this,true,"fecha_hastaTipoPrecio","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new TipoPrecioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoPrecio.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoPrecio,TipoPrecioConstantesFunciones.LABEL_MONTO));

		if(this.tipoprecioConstantesFunciones.mostrarmontoTipoPrecio && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoPrecioConstantesFunciones.LABEL_MONTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.tipoprecioConstantesFunciones.resaltarmontoTipoPrecio,this.tipoprecioConstantesFunciones.activarmontoTipoPrecio,iSizeTabla,this,true,"montoTipoPrecio","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.tipoprecioConstantesFunciones.resaltarmontoTipoPrecio,this.tipoprecioConstantesFunciones.activarmontoTipoPrecio,this,true,"montoTipoPrecio","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TipoPrecioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoPrecio.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoPrecio,TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO));

		if(this.tipoprecioConstantesFunciones.mostraresta_activoTipoPrecio && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.tipoprecioConstantesFunciones.resaltaresta_activoTipoPrecio,this.tipoprecioConstantesFunciones.activaresta_activoTipoPrecio,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.tipoprecioConstantesFunciones.resaltaresta_activoTipoPrecio,this.tipoprecioConstantesFunciones.activaresta_activoTipoPrecio,this,true,"esta_activoTipoPrecio","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TipoPrecioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoPrecio.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoPrecio,TipoPrecioConstantesFunciones.LABEL_DESCRIPCION));

		if(this.tipoprecioConstantesFunciones.mostrardescripcionTipoPrecio && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoPrecioConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.tipoprecioConstantesFunciones.resaltardescripcionTipoPrecio,this.tipoprecioConstantesFunciones.activardescripcionTipoPrecio,iSizeTabla,this,true,"descripcionTipoPrecio","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.tipoprecioConstantesFunciones.resaltardescripcionTipoPrecio,this.tipoprecioConstantesFunciones.activardescripcionTipoPrecio,this,true,"descripcionTipoPrecio","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TipoPrecioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.tipoprecioSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosPrecio && this.tipoprecioConstantesFunciones.mostrarPrecioTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Precios");
				tableColumn.setHeaderValue("Precios");
				tableColumn.setCellRenderer(new PrecioTableCell(tipoprecioConstantesFunciones.resaltarPrecioTipoPrecio,this,this.tipoprecioConstantesFunciones.activarPrecioTipoPrecio));
				tableColumn.setCellEditor(new PrecioTableCell(tipoprecioConstantesFunciones.resaltarPrecioTipoPrecio,this,this.tipoprecioConstantesFunciones.activarPrecioTipoPrecio));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			}

			if(this.isTienePermisosPoliticasCliente && this.tipoprecioConstantesFunciones.mostrarPoliticasClienteTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Politicas Clientes");
				tableColumn.setHeaderValue("Politicas Clientes");
				tableColumn.setCellRenderer(new PoliticasClienteTableCell(tipoprecioConstantesFunciones.resaltarPoliticasClienteTipoPrecio,this,this.tipoprecioConstantesFunciones.activarPoliticasClienteTipoPrecio));
				tableColumn.setCellEditor(new PoliticasClienteTableCell(tipoprecioConstantesFunciones.resaltarPoliticasClienteTipoPrecio,this,this.tipoprecioConstantesFunciones.activarPoliticasClienteTipoPrecio));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			}

			if(this.isTienePermisosNotaCreditoSoli && this.tipoprecioConstantesFunciones.mostrarNotaCreditoSoliTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Solicitud Nota Creditos");
				tableColumn.setHeaderValue("Solicitud Nota Creditos");
				tableColumn.setCellRenderer(new NotaCreditoSoliTableCell(tipoprecioConstantesFunciones.resaltarNotaCreditoSoliTipoPrecio,this,this.tipoprecioConstantesFunciones.activarNotaCreditoSoliTipoPrecio));
				tableColumn.setCellEditor(new NotaCreditoSoliTableCell(tipoprecioConstantesFunciones.resaltarNotaCreditoSoliTipoPrecio,this,this.tipoprecioConstantesFunciones.activarNotaCreditoSoliTipoPrecio));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			}

			if(this.isTienePermisosGuiaRemision && this.tipoprecioConstantesFunciones.mostrarGuiaRemisionTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Guia Remisiones");
				tableColumn.setHeaderValue("Guia Remisiones");
				tableColumn.setCellRenderer(new GuiaRemisionTableCell(tipoprecioConstantesFunciones.resaltarGuiaRemisionTipoPrecio,this,this.tipoprecioConstantesFunciones.activarGuiaRemisionTipoPrecio));
				tableColumn.setCellEditor(new GuiaRemisionTableCell(tipoprecioConstantesFunciones.resaltarGuiaRemisionTipoPrecio,this,this.tipoprecioConstantesFunciones.activarGuiaRemisionTipoPrecio));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			}

			if(this.isTienePermisosPedidoExpor && this.tipoprecioConstantesFunciones.mostrarPedidoExporTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Pedido Exportacions");
				tableColumn.setHeaderValue("Pedido Exportacions");
				tableColumn.setCellRenderer(new PedidoExporTableCell(tipoprecioConstantesFunciones.resaltarPedidoExporTipoPrecio,this,this.tipoprecioConstantesFunciones.activarPedidoExporTipoPrecio));
				tableColumn.setCellEditor(new PedidoExporTableCell(tipoprecioConstantesFunciones.resaltarPedidoExporTipoPrecio,this,this.tipoprecioConstantesFunciones.activarPedidoExporTipoPrecio));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			}

			if(this.isTienePermisosFacturaPuntoVenta && this.tipoprecioConstantesFunciones.mostrarFacturaPuntoVentaTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Factura Punto Ventas");
				tableColumn.setHeaderValue("Factura Punto Ventas");
				tableColumn.setCellRenderer(new FacturaPuntoVentaTableCell(tipoprecioConstantesFunciones.resaltarFacturaPuntoVentaTipoPrecio,this,this.tipoprecioConstantesFunciones.activarFacturaPuntoVentaTipoPrecio));
				tableColumn.setCellEditor(new FacturaPuntoVentaTableCell(tipoprecioConstantesFunciones.resaltarFacturaPuntoVentaTipoPrecio,this,this.tipoprecioConstantesFunciones.activarFacturaPuntoVentaTipoPrecio));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			}

			if(this.isTienePermisosPedidoPuntoVenta && this.tipoprecioConstantesFunciones.mostrarPedidoPuntoVentaTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Pedido Punto Ventas");
				tableColumn.setHeaderValue("Pedido Punto Ventas");
				tableColumn.setCellRenderer(new PedidoPuntoVentaTableCell(tipoprecioConstantesFunciones.resaltarPedidoPuntoVentaTipoPrecio,this,this.tipoprecioConstantesFunciones.activarPedidoPuntoVentaTipoPrecio));
				tableColumn.setCellEditor(new PedidoPuntoVentaTableCell(tipoprecioConstantesFunciones.resaltarPedidoPuntoVentaTipoPrecio,this,this.tipoprecioConstantesFunciones.activarPedidoPuntoVentaTipoPrecio));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			}

			if(this.isTienePermisosUtilidadTipoPrecio && this.tipoprecioConstantesFunciones.mostrarUtilidadTipoPrecioTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Utilidad Tipo Precioes");
				tableColumn.setHeaderValue("Utilidad Tipo Precioes");
				tableColumn.setCellRenderer(new UtilidadTipoPrecioTableCell(tipoprecioConstantesFunciones.resaltarUtilidadTipoPrecioTipoPrecio,this,this.tipoprecioConstantesFunciones.activarUtilidadTipoPrecioTipoPrecio));
				tableColumn.setCellEditor(new UtilidadTipoPrecioTableCell(tipoprecioConstantesFunciones.resaltarUtilidadTipoPrecioTipoPrecio,this,this.tipoprecioConstantesFunciones.activarUtilidadTipoPrecioTipoPrecio));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			}

			if(this.isTienePermisosCliente && this.tipoprecioConstantesFunciones.mostrarClienteTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Clientes");
				tableColumn.setHeaderValue("Clientes");
				tableColumn.setCellRenderer(new ClienteTableCell(tipoprecioConstantesFunciones.resaltarClienteTipoPrecio,this,this.tipoprecioConstantesFunciones.activarClienteTipoPrecio));
				tableColumn.setCellEditor(new ClienteTableCell(tipoprecioConstantesFunciones.resaltarClienteTipoPrecio,this,this.tipoprecioConstantesFunciones.activarClienteTipoPrecio));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			}

			if(this.isTienePermisosServicioCliente && this.tipoprecioConstantesFunciones.mostrarServicioClienteTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Servicio Clientes");
				tableColumn.setHeaderValue("Servicio Clientes");
				tableColumn.setCellRenderer(new ServicioClienteTableCell(tipoprecioConstantesFunciones.resaltarServicioClienteTipoPrecio,this,this.tipoprecioConstantesFunciones.activarServicioClienteTipoPrecio));
				tableColumn.setCellEditor(new ServicioClienteTableCell(tipoprecioConstantesFunciones.resaltarServicioClienteTipoPrecio,this,this.tipoprecioConstantesFunciones.activarServicioClienteTipoPrecio));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			}

			if(this.isTienePermisosProforma && this.tipoprecioConstantesFunciones.mostrarProformaTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Proformas");
				tableColumn.setHeaderValue("Proformas");
				tableColumn.setCellRenderer(new ProformaTableCell(tipoprecioConstantesFunciones.resaltarProformaTipoPrecio,this,this.tipoprecioConstantesFunciones.activarProformaTipoPrecio));
				tableColumn.setCellEditor(new ProformaTableCell(tipoprecioConstantesFunciones.resaltarProformaTipoPrecio,this,this.tipoprecioConstantesFunciones.activarProformaTipoPrecio));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			}

			if(this.isTienePermisosDescuentoTipoPrecio && this.tipoprecioConstantesFunciones.mostrarDescuentoTipoPrecioTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Descuento Tipo Precios");
				tableColumn.setHeaderValue("Descuento Tipo Precios");
				tableColumn.setCellRenderer(new DescuentoTipoPrecioTableCell(tipoprecioConstantesFunciones.resaltarDescuentoTipoPrecioTipoPrecio,this,this.tipoprecioConstantesFunciones.activarDescuentoTipoPrecioTipoPrecio));
				tableColumn.setCellEditor(new DescuentoTipoPrecioTableCell(tipoprecioConstantesFunciones.resaltarDescuentoTipoPrecioTipoPrecio,this,this.tipoprecioConstantesFunciones.activarDescuentoTipoPrecioTipoPrecio));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			}

			if(this.isTienePermisosNotaCreditoPuntoVenta && this.tipoprecioConstantesFunciones.mostrarNotaCreditoPuntoVentaTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Nota Creditos");
				tableColumn.setHeaderValue("Nota Creditos");
				tableColumn.setCellRenderer(new NotaCreditoPuntoVentaTableCell(tipoprecioConstantesFunciones.resaltarNotaCreditoPuntoVentaTipoPrecio,this,this.tipoprecioConstantesFunciones.activarNotaCreditoPuntoVentaTipoPrecio));
				tableColumn.setCellEditor(new NotaCreditoPuntoVentaTableCell(tipoprecioConstantesFunciones.resaltarNotaCreditoPuntoVentaTipoPrecio,this,this.tipoprecioConstantesFunciones.activarNotaCreditoPuntoVentaTipoPrecio));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			}

			if(this.isTienePermisosParametroCarteraDefecto && this.tipoprecioConstantesFunciones.mostrarParametroCarteraDefectoTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Parametro Cartera Defectos");
				tableColumn.setHeaderValue("Parametro Cartera Defectos");
				tableColumn.setCellRenderer(new ParametroCarteraDefectoTableCell(tipoprecioConstantesFunciones.resaltarParametroCarteraDefectoTipoPrecio,this,this.tipoprecioConstantesFunciones.activarParametroCarteraDefectoTipoPrecio));
				tableColumn.setCellEditor(new ParametroCarteraDefectoTableCell(tipoprecioConstantesFunciones.resaltarParametroCarteraDefectoTipoPrecio,this,this.tipoprecioConstantesFunciones.activarParametroCarteraDefectoTipoPrecio));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			}

			if(this.isTienePermisosConsignacion && this.tipoprecioConstantesFunciones.mostrarConsignacionTipoPrecio && !TipoPrecioConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Consignacions");
				tableColumn.setHeaderValue("Consignacions");
				tableColumn.setCellRenderer(new ConsignacionTableCell(tipoprecioConstantesFunciones.resaltarConsignacionTipoPrecio,this,this.tipoprecioConstantesFunciones.activarConsignacionTipoPrecio));
				tableColumn.setCellEditor(new ConsignacionTableCell(tipoprecioConstantesFunciones.resaltarConsignacionTipoPrecio,this,this.tipoprecioConstantesFunciones.activarConsignacionTipoPrecio));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.tipoprecioSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.tipoprecioSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosTipoPrecio.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.tipoprecioSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.tipoprecioSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosTipoPrecio.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarTipoPrecio && this.isPermisoGuardarCambiosTipoPrecio) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.tipoprecioSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.tipoprecioSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosTipoPrecio.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.tipoprecioSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosTipoPrecio.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosTipoPrecio.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarTipoPrecio && this.isPermisoGuardarCambiosTipoPrecio) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.tipoprecioSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarTipoPrecio && this.isPermisoGuardarCambiosTipoPrecio) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosTipoPrecio.moveColumn(this.jTableDatosTipoPrecio.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosTipoPrecio.moveColumn(this.jTableDatosTipoPrecio.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.tipoprecioSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosTipoPrecio.moveColumn(this.jTableDatosTipoPrecio.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosTipoPrecio.moveColumn(this.jTableDatosTipoPrecio.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosTipoPrecio.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosTipoPrecio.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosTipoPrecio,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!TipoPrecioJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosTipoPrecio.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosTipoPrecio.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!TipoPrecioJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!TipoPrecioJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosTipoPrecio.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosTipoPrecio.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosTipoPrecio.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=tipoprecioLogic.getTipoPrecios().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=tipoprecios.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosTipoPrecio.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosTipoPrecio.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosTipoPrecio();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoTipoPrecio=false;
					
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			
				if(this.tipoprecioSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosTipoPrecio.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosTipoPrecio.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.tipoprecio.getsType().equals("DUPLICADO")
				   || this.tipoprecio.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoTipoPrecio=true;
				
				} else {
					this.isEsNuevoTipoPrecio=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
					if(this.tipoprecio.getId()>=0 && !this.tipoprecio.getIsNew()) {						
						this.isEsNuevoTipoPrecio=false;
						
					} else {
						this.isEsNuevoTipoPrecio=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoTipoPrecio(esRelaciones);						
				
				this.seleccionarTipoPrecio(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.tipoprecio.getId()<0) {
					this.isEsNuevoTipoPrecio=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarTipoPrecio(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarTipoPrecio(evt,rowIndex);
				}	
				
				if(this.tipoprecioSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion TipoPrecio: " + this.dDif); 
					}
				}								
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarTipoPrecio(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.tipoprecio)) {
					if(this.tipoprecio.getId()>0) {
						this.tipoprecio.setIsDeleted(true);
						
						this.tipopreciosEliminados.add(this.tipoprecio);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.tipoprecioLogic.getTipoPrecios().remove(this.tipoprecio);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.tipoprecios.remove(this.tipoprecio);				
					}
					
					
					((TipoPrecioModel) this.jTableDatosTipoPrecio.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaTipoPrecio(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarTipoPrecio(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoTipoPrecio) {
			
			if(this.jInternalFrameDetalleFormTipoPrecio==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosTipoPrecio.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosTipoPrecio.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(TipoPrecioJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioTipoPrecio(this.tipoprecio);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.tipoprecioConstantesFunciones.cargarid_empresaTipoPrecio || this.tipoprecioConstantesFunciones.event_dependid_empresaTipoPrecio) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.tipoprecio.getid_empresa());
									//this.inicializarActualizarBindingTipoPrecio(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(tipoprecio.getEmpresa()!=null) {
							this.empresasForeignKey.add(tipoprecio.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.tipoprecio.getid_empresa(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesTipoPrecio("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesTipoPrecio(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualTipoPrecio() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoTipoPrecio(TipoPrecio tipoprecio) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoTipoPrecio(tipoprecio,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoTipoPrecio(TipoPrecio tipoprecio,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioTipoPrecio(tipoprecio);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyTipoPrecio(tipoprecio,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyTipoPrecio(tipoprecio);
	}
	
	public void setVariablesObjetoActualToFormularioTipoPrecio(TipoPrecio tipoprecio) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormTipoPrecio==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormTipoPrecio.jLabelidTipoPrecio.setText(tipoprecio.getId().toString());
			this.jInternalFrameDetalleFormTipoPrecio.jTextAreacodigoTipoPrecio.setText(tipoprecio.getcodigo());
			this.jInternalFrameDetalleFormTipoPrecio.jTextAreanombreTipoPrecio.setText(tipoprecio.getnombre());
			this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_desdeTipoPrecio.setDate(tipoprecio.getfecha_desde());
			this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_hastaTipoPrecio.setDate(tipoprecio.getfecha_hasta());
			this.jInternalFrameDetalleFormTipoPrecio.jTextFieldmontoTipoPrecio.setText(tipoprecio.getmonto().toString());
			this.jInternalFrameDetalleFormTipoPrecio.jCheckBoxesta_activoTipoPrecio.setSelected(tipoprecio.getesta_activo());
			this.jInternalFrameDetalleFormTipoPrecio.jTextAreadescripcionTipoPrecio.setText(tipoprecio.getdescripcion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,TipoPrecio tipoprecioLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,tipoprecioLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,TipoPrecio tipoprecioLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				tipoprecioLocal=this.tipoprecio;
			} else {
				tipoprecioLocal=this.tipoprecioAnterior;
			}
		}
		
		if(this.permiteMantenimiento(tipoprecioLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoTipoPrecio(tipoprecioLocal,true);
					
					if(tipoprecioSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(tipoprecioLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(tipoprecioLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoTipoPrecio(TipoPrecio tipoprecio,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualTipoPrecio(tipoprecio,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(tipoprecio);
	}
	
	public void setVariablesFormularioToObjetoActualTipoPrecio(TipoPrecio tipoprecio,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualTipoPrecio(tipoprecio,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualTipoPrecio(TipoPrecio tipoprecio,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormTipoPrecio==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormTipoPrecio.jLabelidTipoPrecio.getText()==null || this.jInternalFrameDetalleFormTipoPrecio.jLabelidTipoPrecio.getText()=="" || this.jInternalFrameDetalleFormTipoPrecio.jLabelidTipoPrecio.getText()=="Id") {
				this.jInternalFrameDetalleFormTipoPrecio.jLabelidTipoPrecio.setText("0");
			}

			if(conColumnasBase) {tipoprecio.setId(Long.parseLong(this.jInternalFrameDetalleFormTipoPrecio.jLabelidTipoPrecio.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoPrecioConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabelIdTipoPrecio,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			tipoprecio.setcodigo(this.jInternalFrameDetalleFormTipoPrecio.jTextAreacodigoTipoPrecio.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoPrecioConstantesFunciones.LABEL_CODIGO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabelcodigoTipoPrecio,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			tipoprecio.setnombre(this.jInternalFrameDetalleFormTipoPrecio.jTextAreanombreTipoPrecio.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoPrecioConstantesFunciones.LABEL_NOMBRE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabelnombreTipoPrecio,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			tipoprecio.setfecha_desde(this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_desdeTipoPrecio.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoPrecioConstantesFunciones.LABEL_FECHADESDE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabelfecha_desdeTipoPrecio,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			tipoprecio.setfecha_hasta(this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_hastaTipoPrecio.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoPrecioConstantesFunciones.LABEL_FECHAHASTA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabelfecha_hastaTipoPrecio,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			tipoprecio.setmonto(Double.parseDouble(this.jInternalFrameDetalleFormTipoPrecio.jTextFieldmontoTipoPrecio.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoPrecioConstantesFunciones.LABEL_MONTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabelmontoTipoPrecio,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			tipoprecio.setesta_activo(this.jInternalFrameDetalleFormTipoPrecio.jCheckBoxesta_activoTipoPrecio.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabelesta_activoTipoPrecio,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			tipoprecio.setdescripcion(this.jInternalFrameDetalleFormTipoPrecio.jTextAreadescripcionTipoPrecio.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoPrecioConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoPrecio.jLabeldescripcionTipoPrecio,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualTipoPrecio(TipoPrecio tipoprecioBean,TipoPrecio tipoprecio,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosTipoPrecio(TipoPrecio tipoprecioOrigen,TipoPrecio tipoprecio,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && tipoprecioOrigen.getId()!=null && !tipoprecioOrigen.getId().equals(0L))) {tipoprecio.setId(tipoprecioOrigen.getId());}}
			if(conDefault || (!conDefault && tipoprecioOrigen.getcodigo()!=null && !tipoprecioOrigen.getcodigo().equals(""))) {tipoprecio.setcodigo(tipoprecioOrigen.getcodigo());}
			if(conDefault || (!conDefault && tipoprecioOrigen.getnombre()!=null && !tipoprecioOrigen.getnombre().equals(""))) {tipoprecio.setnombre(tipoprecioOrigen.getnombre());}
			if(conDefault || (!conDefault && tipoprecioOrigen.getfecha_desde()!=null && !tipoprecioOrigen.getfecha_desde().equals(new Date()))) {tipoprecio.setfecha_desde(tipoprecioOrigen.getfecha_desde());}
			if(conDefault || (!conDefault && tipoprecioOrigen.getfecha_hasta()!=null && !tipoprecioOrigen.getfecha_hasta().equals(new Date()))) {tipoprecio.setfecha_hasta(tipoprecioOrigen.getfecha_hasta());}
			if(conDefault || (!conDefault && tipoprecioOrigen.getmonto()!=null && !tipoprecioOrigen.getmonto().equals(0.0))) {tipoprecio.setmonto(tipoprecioOrigen.getmonto());}
			if(conDefault || (!conDefault && tipoprecioOrigen.getesta_activo()!=null && !tipoprecioOrigen.getesta_activo().equals(false))) {tipoprecio.setesta_activo(tipoprecioOrigen.getesta_activo());}
			if(conDefault || (!conDefault && tipoprecioOrigen.getdescripcion()!=null && !tipoprecioOrigen.getdescripcion().equals(""))) {tipoprecio.setdescripcion(tipoprecioOrigen.getdescripcion());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioTipoPrecio(TipoPrecio tipoprecio) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormTipoPrecio.jLabelidTipoPrecio.setText(tipoprecio.getId().toString());
			this.jInternalFrameDetalleFormTipoPrecio.jTextAreacodigoTipoPrecio.setText(tipoprecio.getcodigo());
			this.jInternalFrameDetalleFormTipoPrecio.jTextAreanombreTipoPrecio.setText(tipoprecio.getnombre());
			this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_desdeTipoPrecio.setDate(tipoprecio.getfecha_desde());
			this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_hastaTipoPrecio.setDate(tipoprecio.getfecha_hasta());
			this.jInternalFrameDetalleFormTipoPrecio.jTextFieldmontoTipoPrecio.setText(tipoprecio.getmonto().toString());
			this.jInternalFrameDetalleFormTipoPrecio.jCheckBoxesta_activoTipoPrecio.setSelected(tipoprecio.getesta_activo());
			this.jInternalFrameDetalleFormTipoPrecio.jTextAreadescripcionTipoPrecio.setText(tipoprecio.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioTipoPrecio(TipoPrecioBean tipoprecioBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormTipoPrecio.jLabelidTipoPrecio.setText(tipoprecioBean.getId().toString());
			this.jInternalFrameDetalleFormTipoPrecio.jTextAreacodigoTipoPrecio.setText(tipoprecioBean.getcodigo());
			this.jInternalFrameDetalleFormTipoPrecio.jTextAreanombreTipoPrecio.setText(tipoprecioBean.getnombre());
			this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_desdeTipoPrecio.setDate(tipoprecioBean.getfecha_desde());
			this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_hastaTipoPrecio.setDate(tipoprecioBean.getfecha_hasta());
			this.jInternalFrameDetalleFormTipoPrecio.jTextFieldmontoTipoPrecio.setText(tipoprecioBean.getmonto().toString());
			this.jInternalFrameDetalleFormTipoPrecio.jCheckBoxesta_activoTipoPrecio.setSelected(tipoprecioBean.getesta_activo());
			this.jInternalFrameDetalleFormTipoPrecio.jTextAreadescripcionTipoPrecio.setText(tipoprecioBean.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanTipoPrecio(TipoPrecioParameterReturnGeneral tipoprecioReturnGeneral,TipoPrecioBean tipoprecioBean,Boolean conDefault) throws Exception { 
		try {
			TipoPrecio tipoprecioLocal=new TipoPrecio();
			
			tipoprecioLocal=tipoprecioReturnGeneral.getTipoPrecio();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && tipoprecioLocal.getId()!=null && !tipoprecioLocal.getId().equals(0L))) {tipoprecioBean.setId(tipoprecioLocal.getId());}}
			if(conDefault || (!conDefault && tipoprecioLocal.getcodigo()!=null && !tipoprecioLocal.getcodigo().equals(""))) {tipoprecioBean.setcodigo(tipoprecioLocal.getcodigo());}
			if(conDefault || (!conDefault && tipoprecioLocal.getnombre()!=null && !tipoprecioLocal.getnombre().equals(""))) {tipoprecioBean.setnombre(tipoprecioLocal.getnombre());}
			if(conDefault || (!conDefault && tipoprecioLocal.getfecha_desde()!=null && !tipoprecioLocal.getfecha_desde().equals(new Date()))) {tipoprecioBean.setfecha_desde(tipoprecioLocal.getfecha_desde());}
			if(conDefault || (!conDefault && tipoprecioLocal.getfecha_hasta()!=null && !tipoprecioLocal.getfecha_hasta().equals(new Date()))) {tipoprecioBean.setfecha_hasta(tipoprecioLocal.getfecha_hasta());}
			if(conDefault || (!conDefault && tipoprecioLocal.getmonto()!=null && !tipoprecioLocal.getmonto().equals(0.0))) {tipoprecioBean.setmonto(tipoprecioLocal.getmonto());}
			if(conDefault || (!conDefault && tipoprecioLocal.getesta_activo()!=null && !tipoprecioLocal.getesta_activo().equals(false))) {tipoprecioBean.setesta_activo(tipoprecioLocal.getesta_activo());}
			if(conDefault || (!conDefault && tipoprecioLocal.getdescripcion()!=null && !tipoprecioLocal.getdescripcion().equals(""))) {tipoprecioBean.setdescripcion(tipoprecioLocal.getdescripcion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxTipoPrecioGenerico(Long idTipoPrecioSeleccionado,JComboBox jComboBoxTipoPrecio,List<TipoPrecio> tipopreciosLocal)throws Exception {
		try {
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosLocal) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}

			jComboBoxTipoPrecio.setSelectedItem(tipoprecioTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxTipoPrecioGenerico(JComboBox jComboBoxTipoPrecio,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxTipoPrecio.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxTipoPrecio.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxTipoPrecio.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxTipoPrecio.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxTipoPrecio.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxTipoPrecio.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxTipoPrecio.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxTipoPrecio.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxTipoPrecio.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxTipoPrecio.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("Precio")) {
			jButtonPrecioActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("UtilidadTipoPrecio")) {
			jButtonUtilidadTipoPrecioActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("PedidoPuntoVenta")) {
			jButtonPedidoPuntoVentaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ParametroCarteraDefecto")) {
			jButtonParametroCarteraDefectoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("DescuentoTipoPrecio")) {
			jButtonDescuentoTipoPrecioActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("PoliticasCliente")) {
			jButtonPoliticasClienteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Proforma")) {
			jButtonProformaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("NotaCreditoSoli")) {
			jButtonNotaCreditoSoliActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Consignacion")) {
			jButtonConsignacionActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("PedidoExpor")) {
			jButtonPedidoExporActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ServicioCliente")) {
			jButtonServicioClienteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("FacturaPuntoVenta")) {
			jButtonFacturaPuntoVentaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("GuiaRemision")) {
			jButtonGuiaRemisionActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Cliente")) {
			jButtonClienteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("NotaCreditoPuntoVenta")) {
			jButtonNotaCreditoPuntoVentaActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tipoprecio=(TipoPrecio) tipoprecioLogic.getTipoPrecios().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			tipoprecio =(TipoPrecio) tipoprecios.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!tipoprecio.getIsNew() && !tipoprecio.getIsChanged() && !tipoprecio.getIsDeleted()) {
				sDescripcion=tipoprecio.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=tipoprecio.getempresa_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		TipoPrecio tipoprecioRow=new TipoPrecio();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tipoprecioRow=(TipoPrecio) tipoprecioLogic.getTipoPrecios().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			tipoprecioRow=(TipoPrecio) tipoprecios.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonPrecioActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoPrecio tipoprecio) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio = (TipoPrecio)this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoprecio = (TipoPrecio)this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoprecio!=null) {
						this.tipoprecio = tipoprecio;
					} else {
						this.tipoprecio = new TipoPrecio();
					}
				}

				if(this.isTienePermisosPrecio && this.permiteMantenimiento(this.tipoprecio)) {
					PrecioBeanSwingJInternalFrame precioBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFramePopup=new PrecioBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						precioBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFramePopup;
					} else {
						precioBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame;
					}

					List<TipoPrecio> tipoprecios=new ArrayList<TipoPrecio>();
					tipoprecios.add(this.tipoprecio);
					if(!esRelacionado) {
						//precioBeanSwingJInternalFrame.precioSessionBean.setConGuardarRelaciones(false);
						//precioBeanSwingJInternalFrame.precioSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					precioBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoPrecio.cargarPrecioBeanSwingJInternalFrame(tipoprecios,this.tipoprecio,precioBeanSwingJInternalFrame,/*conInicializar,*/precioBeanSwingJInternalFrame.precioSessionBean.getConGuardarRelaciones(),precioBeanSwingJInternalFrame.precioSessionBean.getEsGuardarRelacionado());
					precioBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						precioBeanSwingJInternalFrame.actualizarEstadoPanelsPrecio("no_relacionado");

						precioBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(PrecioConstantesFunciones.ITAMANIOFILATABLA + (PrecioConstantesFunciones.ITAMANIOFILATABLA/2));

						precioBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
						TitledBorder titledBorderPrecio=(TitledBorder)precioBeanSwingJInternalFrame.jScrollPanelDatosPrecio.getBorder();

						titledBorderPrecio.setTitle(titledBorderTipoPrecio.getTitle() + " -> Precio");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,precioBeanSwingJInternalFrame);
						}

						precioBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(precioBeanSwingJInternalFrame);

						precioBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoprecioSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Precio",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonUtilidadTipoPrecioActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoPrecio tipoprecio) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio = (TipoPrecio)this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoprecio = (TipoPrecio)this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoprecio!=null) {
						this.tipoprecio = tipoprecio;
					} else {
						this.tipoprecio = new TipoPrecio();
					}
				}

				if(this.isTienePermisosUtilidadTipoPrecio && this.permiteMantenimiento(this.tipoprecio)) {
					UtilidadTipoPrecioBeanSwingJInternalFrame utilidadtipoprecioBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFramePopup=new UtilidadTipoPrecioBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						utilidadtipoprecioBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFramePopup;
					} else {
						utilidadtipoprecioBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame;
					}

					List<TipoPrecio> tipoprecios=new ArrayList<TipoPrecio>();
					tipoprecios.add(this.tipoprecio);
					if(!esRelacionado) {
						//utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioSessionBean.setConGuardarRelaciones(false);
						//utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					utilidadtipoprecioBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoPrecio.cargarUtilidadTipoPrecioBeanSwingJInternalFrame(tipoprecios,this.tipoprecio,utilidadtipoprecioBeanSwingJInternalFrame,/*conInicializar,*/utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioSessionBean.getConGuardarRelaciones(),utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioSessionBean.getEsGuardarRelacionado());
					utilidadtipoprecioBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						utilidadtipoprecioBeanSwingJInternalFrame.actualizarEstadoPanelsUtilidadTipoPrecio("no_relacionado");

						utilidadtipoprecioBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(UtilidadTipoPrecioConstantesFunciones.ITAMANIOFILATABLA + (UtilidadTipoPrecioConstantesFunciones.ITAMANIOFILATABLA/2));

						utilidadtipoprecioBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
						TitledBorder titledBorderUtilidadTipoPrecio=(TitledBorder)utilidadtipoprecioBeanSwingJInternalFrame.jScrollPanelDatosUtilidadTipoPrecio.getBorder();

						titledBorderUtilidadTipoPrecio.setTitle(titledBorderTipoPrecio.getTitle() + " -> Utilidad Tipo Precio");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,utilidadtipoprecioBeanSwingJInternalFrame);
						}

						utilidadtipoprecioBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(utilidadtipoprecioBeanSwingJInternalFrame);

						utilidadtipoprecioBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoprecioSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Utilidad Tipo Precio",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonPedidoPuntoVentaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoPrecio tipoprecio) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio = (TipoPrecio)this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoprecio = (TipoPrecio)this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoprecio!=null) {
						this.tipoprecio = tipoprecio;
					} else {
						this.tipoprecio = new TipoPrecio();
					}
				}

				if(this.isTienePermisosPedidoPuntoVenta && this.permiteMantenimiento(this.tipoprecio)) {
					PedidoPuntoVentaBeanSwingJInternalFrame pedidopuntoventaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFramePopup=new PedidoPuntoVentaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						pedidopuntoventaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFramePopup;
					} else {
						pedidopuntoventaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame;
					}

					List<TipoPrecio> tipoprecios=new ArrayList<TipoPrecio>();
					tipoprecios.add(this.tipoprecio);
					if(!esRelacionado) {
						//pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaSessionBean.setConGuardarRelaciones(false);
						//pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					pedidopuntoventaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoPrecio.cargarPedidoPuntoVentaBeanSwingJInternalFrame(tipoprecios,this.tipoprecio,pedidopuntoventaBeanSwingJInternalFrame,/*conInicializar,*/pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaSessionBean.getConGuardarRelaciones(),pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaSessionBean.getEsGuardarRelacionado());
					pedidopuntoventaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						pedidopuntoventaBeanSwingJInternalFrame.actualizarEstadoPanelsPedidoPuntoVenta("no_relacionado");

						pedidopuntoventaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(PedidoPuntoVentaConstantesFunciones.ITAMANIOFILATABLA + (PedidoPuntoVentaConstantesFunciones.ITAMANIOFILATABLA/2));

						pedidopuntoventaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
						TitledBorder titledBorderPedidoPuntoVenta=(TitledBorder)pedidopuntoventaBeanSwingJInternalFrame.jScrollPanelDatosPedidoPuntoVenta.getBorder();

						titledBorderPedidoPuntoVenta.setTitle(titledBorderTipoPrecio.getTitle() + " -> Pedido Punto Venta");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,pedidopuntoventaBeanSwingJInternalFrame);
						}

						pedidopuntoventaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(pedidopuntoventaBeanSwingJInternalFrame);

						pedidopuntoventaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoprecioSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Pedido Punto Venta",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonParametroCarteraDefectoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoPrecio tipoprecio) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio = (TipoPrecio)this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoprecio = (TipoPrecio)this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoprecio!=null) {
						this.tipoprecio = tipoprecio;
					} else {
						this.tipoprecio = new TipoPrecio();
					}
				}

				if(this.isTienePermisosParametroCarteraDefecto && this.permiteMantenimiento(this.tipoprecio)) {
					ParametroCarteraDefectoBeanSwingJInternalFrame parametrocarteradefectoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFramePopup=new ParametroCarteraDefectoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						parametrocarteradefectoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFramePopup;
					} else {
						parametrocarteradefectoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame;
					}

					List<TipoPrecio> tipoprecios=new ArrayList<TipoPrecio>();
					tipoprecios.add(this.tipoprecio);
					if(!esRelacionado) {
						//parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoSessionBean.setConGuardarRelaciones(false);
						//parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					parametrocarteradefectoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoPrecio.cargarParametroCarteraDefectoBeanSwingJInternalFrame(tipoprecios,this.tipoprecio,parametrocarteradefectoBeanSwingJInternalFrame,/*conInicializar,*/parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoSessionBean.getConGuardarRelaciones(),parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoSessionBean.getEsGuardarRelacionado());
					parametrocarteradefectoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						parametrocarteradefectoBeanSwingJInternalFrame.actualizarEstadoPanelsParametroCarteraDefecto("no_relacionado");

						parametrocarteradefectoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ParametroCarteraDefectoConstantesFunciones.ITAMANIOFILATABLA + (ParametroCarteraDefectoConstantesFunciones.ITAMANIOFILATABLA/2));

						parametrocarteradefectoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
						TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)parametrocarteradefectoBeanSwingJInternalFrame.jScrollPanelDatosParametroCarteraDefecto.getBorder();

						titledBorderParametroCarteraDefecto.setTitle(titledBorderTipoPrecio.getTitle() + " -> Parametro Cartera Defecto");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,parametrocarteradefectoBeanSwingJInternalFrame);
						}

						parametrocarteradefectoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(parametrocarteradefectoBeanSwingJInternalFrame);

						parametrocarteradefectoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoprecioSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Parametro Cartera Defecto",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonDescuentoTipoPrecioActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoPrecio tipoprecio) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio = (TipoPrecio)this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoprecio = (TipoPrecio)this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoprecio!=null) {
						this.tipoprecio = tipoprecio;
					} else {
						this.tipoprecio = new TipoPrecio();
					}
				}

				if(this.isTienePermisosDescuentoTipoPrecio && this.permiteMantenimiento(this.tipoprecio)) {
					DescuentoTipoPrecioBeanSwingJInternalFrame descuentotipoprecioBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFramePopup=new DescuentoTipoPrecioBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						descuentotipoprecioBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFramePopup;
					} else {
						descuentotipoprecioBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame;
					}

					List<TipoPrecio> tipoprecios=new ArrayList<TipoPrecio>();
					tipoprecios.add(this.tipoprecio);
					if(!esRelacionado) {
						//descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioSessionBean.setConGuardarRelaciones(false);
						//descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					descuentotipoprecioBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoPrecio.cargarDescuentoTipoPrecioBeanSwingJInternalFrame(tipoprecios,this.tipoprecio,descuentotipoprecioBeanSwingJInternalFrame,/*conInicializar,*/descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioSessionBean.getConGuardarRelaciones(),descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioSessionBean.getEsGuardarRelacionado());
					descuentotipoprecioBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						descuentotipoprecioBeanSwingJInternalFrame.actualizarEstadoPanelsDescuentoTipoPrecio("no_relacionado");

						descuentotipoprecioBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DescuentoTipoPrecioConstantesFunciones.ITAMANIOFILATABLA + (DescuentoTipoPrecioConstantesFunciones.ITAMANIOFILATABLA/2));

						descuentotipoprecioBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
						TitledBorder titledBorderDescuentoTipoPrecio=(TitledBorder)descuentotipoprecioBeanSwingJInternalFrame.jScrollPanelDatosDescuentoTipoPrecio.getBorder();

						titledBorderDescuentoTipoPrecio.setTitle(titledBorderTipoPrecio.getTitle() + " -> Descuento Tipo Precio");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,descuentotipoprecioBeanSwingJInternalFrame);
						}

						descuentotipoprecioBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(descuentotipoprecioBeanSwingJInternalFrame);

						descuentotipoprecioBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoprecioSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Descuento Tipo Precio",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonPoliticasClienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoPrecio tipoprecio) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio = (TipoPrecio)this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoprecio = (TipoPrecio)this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoprecio!=null) {
						this.tipoprecio = tipoprecio;
					} else {
						this.tipoprecio = new TipoPrecio();
					}
				}

				if(this.isTienePermisosPoliticasCliente && this.permiteMantenimiento(this.tipoprecio)) {
					PoliticasClienteBeanSwingJInternalFrame politicasclienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFramePopup=new PoliticasClienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						politicasclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFramePopup;
					} else {
						politicasclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame;
					}

					List<TipoPrecio> tipoprecios=new ArrayList<TipoPrecio>();
					tipoprecios.add(this.tipoprecio);
					if(!esRelacionado) {
						//politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.setConGuardarRelaciones(false);
						//politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					politicasclienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoPrecio.cargarPoliticasClienteBeanSwingJInternalFrame(tipoprecios,this.tipoprecio,politicasclienteBeanSwingJInternalFrame,/*conInicializar,*/politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.getConGuardarRelaciones(),politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.getEsGuardarRelacionado());
					politicasclienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						politicasclienteBeanSwingJInternalFrame.actualizarEstadoPanelsPoliticasCliente("no_relacionado");

						politicasclienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(PoliticasClienteConstantesFunciones.ITAMANIOFILATABLA + (PoliticasClienteConstantesFunciones.ITAMANIOFILATABLA/2));

						politicasclienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
						TitledBorder titledBorderPoliticasCliente=(TitledBorder)politicasclienteBeanSwingJInternalFrame.jScrollPanelDatosPoliticasCliente.getBorder();

						titledBorderPoliticasCliente.setTitle(titledBorderTipoPrecio.getTitle() + " -> Politicas Cliente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,politicasclienteBeanSwingJInternalFrame);
						}

						politicasclienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(politicasclienteBeanSwingJInternalFrame);

						politicasclienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoprecioSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Politicas Cliente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonProformaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoPrecio tipoprecio) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio = (TipoPrecio)this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoprecio = (TipoPrecio)this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoprecio!=null) {
						this.tipoprecio = tipoprecio;
					} else {
						this.tipoprecio = new TipoPrecio();
					}
				}

				if(this.isTienePermisosProforma && this.permiteMantenimiento(this.tipoprecio)) {
					ProformaBeanSwingJInternalFrame proformaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFramePopup=new ProformaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						proformaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFramePopup;
					} else {
						proformaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame;
					}

					List<TipoPrecio> tipoprecios=new ArrayList<TipoPrecio>();
					tipoprecios.add(this.tipoprecio);
					if(!esRelacionado) {
						//proformaBeanSwingJInternalFrame.proformaSessionBean.setConGuardarRelaciones(false);
						//proformaBeanSwingJInternalFrame.proformaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					proformaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoPrecio.cargarProformaBeanSwingJInternalFrame(tipoprecios,this.tipoprecio,proformaBeanSwingJInternalFrame,/*conInicializar,*/proformaBeanSwingJInternalFrame.proformaSessionBean.getConGuardarRelaciones(),proformaBeanSwingJInternalFrame.proformaSessionBean.getEsGuardarRelacionado());
					proformaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						proformaBeanSwingJInternalFrame.actualizarEstadoPanelsProforma("no_relacionado");

						proformaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ProformaConstantesFunciones.ITAMANIOFILATABLA + (ProformaConstantesFunciones.ITAMANIOFILATABLA/2));

						proformaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
						TitledBorder titledBorderProforma=(TitledBorder)proformaBeanSwingJInternalFrame.jScrollPanelDatosProforma.getBorder();

						titledBorderProforma.setTitle(titledBorderTipoPrecio.getTitle() + " -> Proforma");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,proformaBeanSwingJInternalFrame);
						}

						proformaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(proformaBeanSwingJInternalFrame);

						proformaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoprecioSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Proforma",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonNotaCreditoSoliActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoPrecio tipoprecio) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio = (TipoPrecio)this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoprecio = (TipoPrecio)this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoprecio!=null) {
						this.tipoprecio = tipoprecio;
					} else {
						this.tipoprecio = new TipoPrecio();
					}
				}

				if(this.isTienePermisosNotaCreditoSoli && this.permiteMantenimiento(this.tipoprecio)) {
					NotaCreditoSoliBeanSwingJInternalFrame notacreditosoliBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFramePopup=new NotaCreditoSoliBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						notacreditosoliBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFramePopup;
					} else {
						notacreditosoliBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame;
					}

					List<TipoPrecio> tipoprecios=new ArrayList<TipoPrecio>();
					tipoprecios.add(this.tipoprecio);
					if(!esRelacionado) {
						//notacreditosoliBeanSwingJInternalFrame.notacreditosoliSessionBean.setConGuardarRelaciones(false);
						//notacreditosoliBeanSwingJInternalFrame.notacreditosoliSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					notacreditosoliBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoPrecio.cargarNotaCreditoSoliBeanSwingJInternalFrame(tipoprecios,this.tipoprecio,notacreditosoliBeanSwingJInternalFrame,/*conInicializar,*/notacreditosoliBeanSwingJInternalFrame.notacreditosoliSessionBean.getConGuardarRelaciones(),notacreditosoliBeanSwingJInternalFrame.notacreditosoliSessionBean.getEsGuardarRelacionado());
					notacreditosoliBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						notacreditosoliBeanSwingJInternalFrame.actualizarEstadoPanelsNotaCreditoSoli("no_relacionado");

						notacreditosoliBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(NotaCreditoSoliConstantesFunciones.ITAMANIOFILATABLA + (NotaCreditoSoliConstantesFunciones.ITAMANIOFILATABLA/2));

						notacreditosoliBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
						TitledBorder titledBorderNotaCreditoSoli=(TitledBorder)notacreditosoliBeanSwingJInternalFrame.jScrollPanelDatosNotaCreditoSoli.getBorder();

						titledBorderNotaCreditoSoli.setTitle(titledBorderTipoPrecio.getTitle() + " -> Solicitud Nota Credito");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,notacreditosoliBeanSwingJInternalFrame);
						}

						notacreditosoliBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(notacreditosoliBeanSwingJInternalFrame);

						notacreditosoliBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoprecioSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Solicitud Nota Credito",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonConsignacionActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoPrecio tipoprecio) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio = (TipoPrecio)this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoprecio = (TipoPrecio)this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoprecio!=null) {
						this.tipoprecio = tipoprecio;
					} else {
						this.tipoprecio = new TipoPrecio();
					}
				}

				if(this.isTienePermisosConsignacion && this.permiteMantenimiento(this.tipoprecio)) {
					ConsignacionBeanSwingJInternalFrame consignacionBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFramePopup=new ConsignacionBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						consignacionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFramePopup;
					} else {
						consignacionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame;
					}

					List<TipoPrecio> tipoprecios=new ArrayList<TipoPrecio>();
					tipoprecios.add(this.tipoprecio);
					if(!esRelacionado) {
						//consignacionBeanSwingJInternalFrame.consignacionSessionBean.setConGuardarRelaciones(false);
						//consignacionBeanSwingJInternalFrame.consignacionSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					consignacionBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoPrecio.cargarConsignacionBeanSwingJInternalFrame(tipoprecios,this.tipoprecio,consignacionBeanSwingJInternalFrame,/*conInicializar,*/consignacionBeanSwingJInternalFrame.consignacionSessionBean.getConGuardarRelaciones(),consignacionBeanSwingJInternalFrame.consignacionSessionBean.getEsGuardarRelacionado());
					consignacionBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						consignacionBeanSwingJInternalFrame.actualizarEstadoPanelsConsignacion("no_relacionado");

						consignacionBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ConsignacionConstantesFunciones.ITAMANIOFILATABLA + (ConsignacionConstantesFunciones.ITAMANIOFILATABLA/2));

						consignacionBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
						TitledBorder titledBorderConsignacion=(TitledBorder)consignacionBeanSwingJInternalFrame.jScrollPanelDatosConsignacion.getBorder();

						titledBorderConsignacion.setTitle(titledBorderTipoPrecio.getTitle() + " -> Consignacion");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,consignacionBeanSwingJInternalFrame);
						}

						consignacionBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(consignacionBeanSwingJInternalFrame);

						consignacionBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoprecioSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Consignacion",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonPedidoExporActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoPrecio tipoprecio) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio = (TipoPrecio)this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoprecio = (TipoPrecio)this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoprecio!=null) {
						this.tipoprecio = tipoprecio;
					} else {
						this.tipoprecio = new TipoPrecio();
					}
				}

				if(this.isTienePermisosPedidoExpor && this.permiteMantenimiento(this.tipoprecio)) {
					PedidoExporBeanSwingJInternalFrame pedidoexporBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFramePopup=new PedidoExporBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						pedidoexporBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFramePopup;
					} else {
						pedidoexporBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame;
					}

					List<TipoPrecio> tipoprecios=new ArrayList<TipoPrecio>();
					tipoprecios.add(this.tipoprecio);
					if(!esRelacionado) {
						//pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.setConGuardarRelaciones(false);
						//pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					pedidoexporBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoPrecio.cargarPedidoExporBeanSwingJInternalFrame(tipoprecios,this.tipoprecio,pedidoexporBeanSwingJInternalFrame,/*conInicializar,*/pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.getConGuardarRelaciones(),pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.getEsGuardarRelacionado());
					pedidoexporBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						pedidoexporBeanSwingJInternalFrame.actualizarEstadoPanelsPedidoExpor("no_relacionado");

						pedidoexporBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(PedidoExporConstantesFunciones.ITAMANIOFILATABLA + (PedidoExporConstantesFunciones.ITAMANIOFILATABLA/2));

						pedidoexporBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
						TitledBorder titledBorderPedidoExpor=(TitledBorder)pedidoexporBeanSwingJInternalFrame.jScrollPanelDatosPedidoExpor.getBorder();

						titledBorderPedidoExpor.setTitle(titledBorderTipoPrecio.getTitle() + " -> Pedido Exportacion");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,pedidoexporBeanSwingJInternalFrame);
						}

						pedidoexporBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(pedidoexporBeanSwingJInternalFrame);

						pedidoexporBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoprecioSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Pedido Exportacion",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonServicioClienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoPrecio tipoprecio) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio = (TipoPrecio)this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoprecio = (TipoPrecio)this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoprecio!=null) {
						this.tipoprecio = tipoprecio;
					} else {
						this.tipoprecio = new TipoPrecio();
					}
				}

				if(this.isTienePermisosServicioCliente && this.permiteMantenimiento(this.tipoprecio)) {
					ServicioClienteBeanSwingJInternalFrame servicioclienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFramePopup=new ServicioClienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						servicioclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFramePopup;
					} else {
						servicioclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame;
					}

					List<TipoPrecio> tipoprecios=new ArrayList<TipoPrecio>();
					tipoprecios.add(this.tipoprecio);
					if(!esRelacionado) {
						//servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.setConGuardarRelaciones(false);
						//servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					servicioclienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoPrecio.cargarServicioClienteBeanSwingJInternalFrame(tipoprecios,this.tipoprecio,servicioclienteBeanSwingJInternalFrame,/*conInicializar,*/servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.getConGuardarRelaciones(),servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.getEsGuardarRelacionado());
					servicioclienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						servicioclienteBeanSwingJInternalFrame.actualizarEstadoPanelsServicioCliente("no_relacionado");

						servicioclienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ServicioClienteConstantesFunciones.ITAMANIOFILATABLA + (ServicioClienteConstantesFunciones.ITAMANIOFILATABLA/2));

						servicioclienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
						TitledBorder titledBorderServicioCliente=(TitledBorder)servicioclienteBeanSwingJInternalFrame.jScrollPanelDatosServicioCliente.getBorder();

						titledBorderServicioCliente.setTitle(titledBorderTipoPrecio.getTitle() + " -> Servicio Cliente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,servicioclienteBeanSwingJInternalFrame);
						}

						servicioclienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(servicioclienteBeanSwingJInternalFrame);

						servicioclienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoprecioSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Servicio Cliente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonFacturaPuntoVentaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoPrecio tipoprecio) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio = (TipoPrecio)this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoprecio = (TipoPrecio)this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoprecio!=null) {
						this.tipoprecio = tipoprecio;
					} else {
						this.tipoprecio = new TipoPrecio();
					}
				}

				if(this.isTienePermisosFacturaPuntoVenta && this.permiteMantenimiento(this.tipoprecio)) {
					FacturaPuntoVentaBeanSwingJInternalFrame facturapuntoventaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFramePopup=new FacturaPuntoVentaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						facturapuntoventaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFramePopup;
					} else {
						facturapuntoventaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame;
					}

					List<TipoPrecio> tipoprecios=new ArrayList<TipoPrecio>();
					tipoprecios.add(this.tipoprecio);
					if(!esRelacionado) {
						//facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaSessionBean.setConGuardarRelaciones(false);
						//facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					facturapuntoventaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoPrecio.cargarFacturaPuntoVentaBeanSwingJInternalFrame(tipoprecios,this.tipoprecio,facturapuntoventaBeanSwingJInternalFrame,/*conInicializar,*/facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaSessionBean.getConGuardarRelaciones(),facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaSessionBean.getEsGuardarRelacionado());
					facturapuntoventaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						facturapuntoventaBeanSwingJInternalFrame.actualizarEstadoPanelsFacturaPuntoVenta("no_relacionado");

						facturapuntoventaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(FacturaPuntoVentaConstantesFunciones.ITAMANIOFILATABLA + (FacturaPuntoVentaConstantesFunciones.ITAMANIOFILATABLA/2));

						facturapuntoventaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
						TitledBorder titledBorderFacturaPuntoVenta=(TitledBorder)facturapuntoventaBeanSwingJInternalFrame.jScrollPanelDatosFacturaPuntoVenta.getBorder();

						titledBorderFacturaPuntoVenta.setTitle(titledBorderTipoPrecio.getTitle() + " -> Factura Punto Venta");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,facturapuntoventaBeanSwingJInternalFrame);
						}

						facturapuntoventaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(facturapuntoventaBeanSwingJInternalFrame);

						facturapuntoventaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoprecioSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Factura Punto Venta",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonGuiaRemisionActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoPrecio tipoprecio) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio = (TipoPrecio)this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoprecio = (TipoPrecio)this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoprecio!=null) {
						this.tipoprecio = tipoprecio;
					} else {
						this.tipoprecio = new TipoPrecio();
					}
				}

				if(this.isTienePermisosGuiaRemision && this.permiteMantenimiento(this.tipoprecio)) {
					GuiaRemisionBeanSwingJInternalFrame guiaremisionBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFramePopup=new GuiaRemisionBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						guiaremisionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFramePopup;
					} else {
						guiaremisionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame;
					}

					List<TipoPrecio> tipoprecios=new ArrayList<TipoPrecio>();
					tipoprecios.add(this.tipoprecio);
					if(!esRelacionado) {
						//guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.setConGuardarRelaciones(false);
						//guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					guiaremisionBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoPrecio.cargarGuiaRemisionBeanSwingJInternalFrame(tipoprecios,this.tipoprecio,guiaremisionBeanSwingJInternalFrame,/*conInicializar,*/guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.getConGuardarRelaciones(),guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.getEsGuardarRelacionado());
					guiaremisionBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						guiaremisionBeanSwingJInternalFrame.actualizarEstadoPanelsGuiaRemision("no_relacionado");

						guiaremisionBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(GuiaRemisionConstantesFunciones.ITAMANIOFILATABLA + (GuiaRemisionConstantesFunciones.ITAMANIOFILATABLA/2));

						guiaremisionBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
						TitledBorder titledBorderGuiaRemision=(TitledBorder)guiaremisionBeanSwingJInternalFrame.jScrollPanelDatosGuiaRemision.getBorder();

						titledBorderGuiaRemision.setTitle(titledBorderTipoPrecio.getTitle() + " -> Guia Remision");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,guiaremisionBeanSwingJInternalFrame);
						}

						guiaremisionBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(guiaremisionBeanSwingJInternalFrame);

						guiaremisionBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoprecioSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Guia Remision",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonClienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoPrecio tipoprecio) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio = (TipoPrecio)this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoprecio = (TipoPrecio)this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoprecio!=null) {
						this.tipoprecio = tipoprecio;
					} else {
						this.tipoprecio = new TipoPrecio();
					}
				}

				if(this.isTienePermisosCliente && this.permiteMantenimiento(this.tipoprecio)) {
					ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFramePopup=new ClienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						clienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFramePopup;
					} else {
						clienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame;
					}

					List<TipoPrecio> tipoprecios=new ArrayList<TipoPrecio>();
					tipoprecios.add(this.tipoprecio);
					if(!esRelacionado) {
						//clienteBeanSwingJInternalFrame.clienteSessionBean.setConGuardarRelaciones(false);
						//clienteBeanSwingJInternalFrame.clienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					clienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoPrecio.cargarClienteBeanSwingJInternalFrame(tipoprecios,this.tipoprecio,clienteBeanSwingJInternalFrame,/*conInicializar,*/clienteBeanSwingJInternalFrame.clienteSessionBean.getConGuardarRelaciones(),clienteBeanSwingJInternalFrame.clienteSessionBean.getEsGuardarRelacionado());
					clienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						clienteBeanSwingJInternalFrame.actualizarEstadoPanelsCliente("no_relacionado");

						clienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ClienteConstantesFunciones.ITAMANIOFILATABLA + (ClienteConstantesFunciones.ITAMANIOFILATABLA/2));

						clienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
						TitledBorder titledBorderCliente=(TitledBorder)clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

						titledBorderCliente.setTitle(titledBorderTipoPrecio.getTitle() + " -> Cliente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,clienteBeanSwingJInternalFrame);
						}

						clienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(clienteBeanSwingJInternalFrame);

						clienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoprecioSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Cliente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonNotaCreditoPuntoVentaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoPrecio tipoprecio) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoPrecio==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio = (TipoPrecio)this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoprecio = (TipoPrecio)this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoprecio!=null) {
						this.tipoprecio = tipoprecio;
					} else {
						this.tipoprecio = new TipoPrecio();
					}
				}

				if(this.isTienePermisosNotaCreditoPuntoVenta && this.permiteMantenimiento(this.tipoprecio)) {
					NotaCreditoPuntoVentaBeanSwingJInternalFrame notacreditopuntoventaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFramePopup=new NotaCreditoPuntoVentaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						notacreditopuntoventaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFramePopup;
					} else {
						notacreditopuntoventaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame;
					}

					List<TipoPrecio> tipoprecios=new ArrayList<TipoPrecio>();
					tipoprecios.add(this.tipoprecio);
					if(!esRelacionado) {
						//notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaSessionBean.setConGuardarRelaciones(false);
						//notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					notacreditopuntoventaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoPrecio.cargarNotaCreditoPuntoVentaBeanSwingJInternalFrame(tipoprecios,this.tipoprecio,notacreditopuntoventaBeanSwingJInternalFrame,/*conInicializar,*/notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaSessionBean.getConGuardarRelaciones(),notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaSessionBean.getEsGuardarRelacionado());
					notacreditopuntoventaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						notacreditopuntoventaBeanSwingJInternalFrame.actualizarEstadoPanelsNotaCreditoPuntoVenta("no_relacionado");

						notacreditopuntoventaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(NotaCreditoPuntoVentaConstantesFunciones.ITAMANIOFILATABLA + (NotaCreditoPuntoVentaConstantesFunciones.ITAMANIOFILATABLA/2));

						notacreditopuntoventaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
						TitledBorder titledBorderNotaCreditoPuntoVenta=(TitledBorder)notacreditopuntoventaBeanSwingJInternalFrame.jScrollPanelDatosNotaCreditoPuntoVenta.getBorder();

						titledBorderNotaCreditoPuntoVenta.setTitle(titledBorderTipoPrecio.getTitle() + " -> Nota Credito");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,notacreditopuntoventaBeanSwingJInternalFrame);
						}

						notacreditopuntoventaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(notacreditopuntoventaBeanSwingJInternalFrame);

						notacreditopuntoventaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoprecioSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Nota Credito",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualTipoPrecio(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoTipoPrecio.setVisible((this.isVisibilidadCeldaNuevoTipoPrecio && this.isPermisoNuevoTipoPrecio));			
			this.jButtonDuplicarTipoPrecio.setVisible((this.isVisibilidadCeldaDuplicarTipoPrecio && this.isPermisoDuplicarTipoPrecio));			
			this.jButtonCopiarTipoPrecio.setVisible((this.isVisibilidadCeldaCopiarTipoPrecio && this.isPermisoCopiarTipoPrecio));
			this.jButtonVerFormTipoPrecio.setVisible((this.isVisibilidadCeldaVerFormTipoPrecio && this.isPermisoVerFormTipoPrecio));
			
			this.jButtonAbrirOrderByTipoPrecio.setVisible((this.isVisibilidadCeldaOrdenTipoPrecio && this.isPermisoOrdenTipoPrecio));			
			
			this.jButtonNuevoRelacionesTipoPrecio.setVisible((this.isVisibilidadCeldaNuevoRelacionesTipoPrecio && this.isPermisoNuevoTipoPrecio));			
			this.jButtonNuevoGuardarCambiosTipoPrecio.setVisible((this.isVisibilidadCeldaNuevoTipoPrecio && this.isPermisoNuevoTipoPrecio && this.isPermisoGuardarCambiosTipoPrecio));
			
			if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jButtonModificarTipoPrecio.setVisible((this.isVisibilidadCeldaModificarTipoPrecio && this.isPermisoActualizarTipoPrecio));	
			this.jInternalFrameDetalleFormTipoPrecio.jButtonActualizarTipoPrecio.setVisible((this.isVisibilidadCeldaActualizarTipoPrecio && this.isPermisoActualizarTipoPrecio));	
			this.jInternalFrameDetalleFormTipoPrecio.jButtonEliminarTipoPrecio.setVisible((this.isVisibilidadCeldaEliminarTipoPrecio && this.isPermisoEliminarTipoPrecio));
			this.jInternalFrameDetalleFormTipoPrecio.jButtonCancelarTipoPrecio.setVisible(this.isVisibilidadCeldaCancelarTipoPrecio);							
			this.jInternalFrameDetalleFormTipoPrecio.jButtonGuardarCambiosTipoPrecio.setVisible((this.isVisibilidadCeldaGuardarTipoPrecio && this.isPermisoGuardarCambiosTipoPrecio));			
			
			}
						
			this.jButtonGuardarCambiosTablaTipoPrecio.setVisible((this.isVisibilidadCeldaGuardarCambiosTipoPrecio && this.isPermisoGuardarCambiosTipoPrecio));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarTipoPrecio.setVisible((this.isVisibilidadCeldaNuevoTipoPrecio && this.isPermisoNuevoTipoPrecio));						
			this.jButtonDuplicarToolBarTipoPrecio.setVisible((this.isVisibilidadCeldaDuplicarTipoPrecio && this.isPermisoDuplicarTipoPrecio));						
			this.jButtonCopiarToolBarTipoPrecio.setVisible((this.isVisibilidadCeldaCopiarTipoPrecio && this.isPermisoCopiarTipoPrecio));			
			this.jButtonVerFormToolBarTipoPrecio.setVisible((this.isVisibilidadCeldaVerFormTipoPrecio && this.isPermisoVerFormTipoPrecio));			
			this.jButtonAbrirOrderByToolBarTipoPrecio.setVisible((this.isVisibilidadCeldaOrdenTipoPrecio && this.isPermisoOrdenTipoPrecio));
			this.jButtonNuevoRelacionesToolBarTipoPrecio.setVisible((this.isVisibilidadCeldaNuevoRelacionesTipoPrecio && this.isPermisoNuevoTipoPrecio));			
			this.jButtonNuevoGuardarCambiosToolBarTipoPrecio.setVisible((this.isVisibilidadCeldaNuevoTipoPrecio && this.isPermisoNuevoTipoPrecio && this.isPermisoGuardarCambiosTipoPrecio));			
			
			if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jButtonModificarToolBarTipoPrecio.setVisible((this.isVisibilidadCeldaModificarTipoPrecio && this.isPermisoActualizarTipoPrecio));	
			this.jInternalFrameDetalleFormTipoPrecio.jButtonActualizarToolBarTipoPrecio.setVisible((this.isVisibilidadCeldaActualizarTipoPrecio  && this.isPermisoActualizarTipoPrecio));	
			this.jInternalFrameDetalleFormTipoPrecio.jButtonEliminarToolBarTipoPrecio.setVisible((this.isVisibilidadCeldaEliminarTipoPrecio && this.isPermisoEliminarTipoPrecio));
			this.jInternalFrameDetalleFormTipoPrecio.jButtonCancelarToolBarTipoPrecio.setVisible(this.isVisibilidadCeldaCancelarTipoPrecio);				
			this.jInternalFrameDetalleFormTipoPrecio.jButtonGuardarCambiosToolBarTipoPrecio.setVisible((this.isVisibilidadCeldaGuardarTipoPrecio && this.isPermisoGuardarCambiosTipoPrecio));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarTipoPrecio.setVisible((this.isVisibilidadCeldaGuardarCambiosTipoPrecio && this.isPermisoGuardarCambiosTipoPrecio));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoTipoPrecio.setVisible((this.isVisibilidadCeldaNuevoTipoPrecio && this.isPermisoNuevoTipoPrecio));			
			this.jMenuItemDuplicarTipoPrecio.setVisible((this.isVisibilidadCeldaDuplicarTipoPrecio && this.isPermisoDuplicarTipoPrecio));			
			this.jMenuItemCopiarTipoPrecio.setVisible((this.isVisibilidadCeldaCopiarTipoPrecio && this.isPermisoCopiarTipoPrecio));			
			this.jMenuItemVerFormTipoPrecio.setVisible((this.isVisibilidadCeldaVerFormTipoPrecio && this.isPermisoVerFormTipoPrecio));			
			this.jMenuItemAbrirOrderByTipoPrecio.setVisible((this.isVisibilidadCeldaOrdenTipoPrecio && this.isPermisoOrdenTipoPrecio));			
			//this.jMenuItemMostrarOcultarTipoPrecio.setVisible((this.isVisibilidadCeldaOrdenTipoPrecio && this.isPermisoOrdenTipoPrecio));
			this.jMenuItemDetalleAbrirOrderByTipoPrecio.setVisible((this.isVisibilidadCeldaOrdenTipoPrecio && this.isPermisoOrdenTipoPrecio));			
			//this.jMenuItemDetalleMostrarOcultarTipoPrecio.setVisible((this.isVisibilidadCeldaOrdenTipoPrecio && this.isPermisoOrdenTipoPrecio));			
			this.jMenuItemNuevoRelacionesTipoPrecio.setVisible((this.isVisibilidadCeldaNuevoRelacionesTipoPrecio && this.isPermisoNuevoTipoPrecio));			
			this.jMenuItemNuevoGuardarCambiosTipoPrecio.setVisible((this.isVisibilidadCeldaNuevoTipoPrecio && this.isPermisoNuevoTipoPrecio && this.isPermisoGuardarCambiosTipoPrecio));									
			
			if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.jMenuItemModificarTipoPrecio.setVisible((this.isVisibilidadCeldaModificarTipoPrecio && this.isPermisoActualizarTipoPrecio));	
			this.jInternalFrameDetalleFormTipoPrecio.jMenuItemActualizarTipoPrecio.setVisible((this.isVisibilidadCeldaActualizarTipoPrecio && this.isPermisoActualizarTipoPrecio));	
			this.jInternalFrameDetalleFormTipoPrecio.jMenuItemEliminarTipoPrecio.setVisible((this.isVisibilidadCeldaEliminarTipoPrecio && this.isPermisoEliminarTipoPrecio));
			this.jInternalFrameDetalleFormTipoPrecio.jMenuItemCancelarTipoPrecio.setVisible(this.isVisibilidadCeldaCancelarTipoPrecio);				
			}
			
			this.jMenuItemGuardarCambiosTipoPrecio.setVisible((this.isVisibilidadCeldaGuardarTipoPrecio && this.isPermisoGuardarCambiosTipoPrecio));						
			this.jMenuItemGuardarCambiosTablaTipoPrecio.setVisible((this.isVisibilidadCeldaGuardarCambiosTipoPrecio && this.isPermisoGuardarCambiosTipoPrecio));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoTipoPrecio=this.jButtonNuevoTipoPrecio.isVisible();
			this.isVisibilidadCeldaDuplicarTipoPrecio=this.jButtonDuplicarTipoPrecio.isVisible();
			this.isVisibilidadCeldaCopiarTipoPrecio=this.jButtonCopiarTipoPrecio.isVisible();
			this.isVisibilidadCeldaVerFormTipoPrecio=this.jButtonVerFormTipoPrecio.isVisible();
			
			this.isVisibilidadCeldaOrdenTipoPrecio=this.jButtonAbrirOrderByTipoPrecio.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesTipoPrecio=this.jButtonNuevoRelacionesTipoPrecio.isVisible();
			this.isVisibilidadCeldaModificarTipoPrecio=this.jButtonModificarTipoPrecio.isVisible();
			
			if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
			this.isVisibilidadCeldaActualizarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jButtonActualizarTipoPrecio.isVisible();
			this.isVisibilidadCeldaEliminarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jButtonEliminarTipoPrecio.isVisible();
			this.isVisibilidadCeldaCancelarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jButtonCancelarTipoPrecio.isVisible();
			this.isVisibilidadCeldaGuardarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jButtonGuardarCambiosTipoPrecio.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosTipoPrecio=this.jButtonGuardarCambiosTablaTipoPrecio.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoTipoPrecio=this.jButtonNuevoToolBarTipoPrecio.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesTipoPrecio=this.jButtonNuevoRelacionesToolBarTipoPrecio.isVisible();
			
			if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
			this.isVisibilidadCeldaModificarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jButtonModificarToolBarTipoPrecio.isVisible();
			this.isVisibilidadCeldaActualizarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jButtonActualizarToolBarTipoPrecio.isVisible();
			this.isVisibilidadCeldaEliminarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jButtonEliminarToolBarTipoPrecio.isVisible();
			this.isVisibilidadCeldaCancelarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jButtonCancelarToolBarTipoPrecio.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarTipoPrecio=this.jButtonGuardarCambiosToolBarTipoPrecio.isVisible();
			this.isVisibilidadCeldaGuardarCambiosTipoPrecio=this.jButtonGuardarCambiosTablaToolBarTipoPrecio.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoTipoPrecio=this.jMenuItemNuevoTipoPrecio.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesTipoPrecio=this.jMenuItemNuevoRelacionesTipoPrecio.isVisible();
			
			if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
			this.isVisibilidadCeldaModificarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jMenuItemModificarTipoPrecio.isVisible();
			this.isVisibilidadCeldaActualizarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jMenuItemActualizarTipoPrecio.isVisible();
			this.isVisibilidadCeldaEliminarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jMenuItemEliminarTipoPrecio.isVisible();
			this.isVisibilidadCeldaCancelarTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.jMenuItemCancelarTipoPrecio.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarTipoPrecio=this.jMenuItemGuardarCambiosTipoPrecio.isVisible();
			this.isVisibilidadCeldaGuardarCambiosTipoPrecio=this.jMenuItemGuardarCambiosTablaTipoPrecio.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesTipoPrecio(Boolean esInicializar) {
		if(TipoPrecioJInternalFrame.ISBINDING_MANUAL) {			
			if(this.tipoprecioSessionBean.getConGuardarRelaciones()) {
				//if(this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesTipoPrecio();
			}
			
			this.inicializarActualizarBindingBotonesManualTipoPrecio(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualTipoPrecio() {
		this.jButtonNuevoTipoPrecio.setVisible(this.isPermisoNuevoTipoPrecio);			
		this.jButtonDuplicarTipoPrecio.setVisible(this.isPermisoDuplicarTipoPrecio);			
		this.jButtonCopiarTipoPrecio.setVisible(this.isPermisoCopiarTipoPrecio);			
		this.jButtonVerFormTipoPrecio.setVisible(this.isPermisoVerFormTipoPrecio);			
		
		this.jButtonAbrirOrderByTipoPrecio.setVisible(this.isPermisoOrdenTipoPrecio);					
		
		this.jButtonNuevoRelacionesTipoPrecio.setVisible(this.isPermisoNuevoTipoPrecio);			
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoPrecio.jButtonModificarTipoPrecio.setVisible(this.isPermisoActualizarTipoPrecio);	
			this.jInternalFrameDetalleFormTipoPrecio.jButtonActualizarTipoPrecio.setVisible(this.isPermisoActualizarTipoPrecio);	
			this.jInternalFrameDetalleFormTipoPrecio.jButtonEliminarTipoPrecio.setVisible(this.isPermisoEliminarTipoPrecio);
			this.jInternalFrameDetalleFormTipoPrecio.jButtonCancelarTipoPrecio.setVisible(this.isVisibilidadCeldaCancelarTipoPrecio);						
			this.jInternalFrameDetalleFormTipoPrecio.jButtonGuardarCambiosTipoPrecio.setVisible(this.isPermisoGuardarCambiosTipoPrecio);							
		}
		
		this.jButtonGuardarCambiosTablaTipoPrecio.setVisible(this.isPermisoActualizarTipoPrecio);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleTipoPrecio() {
		this.jInternalFrameDetalleFormTipoPrecio.jButtonModificarTipoPrecio.setVisible(this.isPermisoActualizarTipoPrecio);	
		this.jInternalFrameDetalleFormTipoPrecio.jButtonActualizarTipoPrecio.setVisible(this.isPermisoActualizarTipoPrecio);	
		this.jInternalFrameDetalleFormTipoPrecio.jButtonEliminarTipoPrecio.setVisible(this.isPermisoEliminarTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jButtonCancelarTipoPrecio.setVisible(this.isVisibilidadCeldaCancelarTipoPrecio);							
		this.jInternalFrameDetalleFormTipoPrecio.jButtonGuardarCambiosTipoPrecio.setVisible((this.isVisibilidadCeldaGuardarTipoPrecio && this.isPermisoGuardarCambiosTipoPrecio));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosTipoPrecio() {
		if(TipoPrecioJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualTipoPrecio();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesTipoPrecio() {
	}
	
	public void jTableDatosTipoPrecioListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarTipoPrecio(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidTipoPrecioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoPrecio(this.gettipoprecio(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoprecio==null) {
						this.tipoprecio = new TipoPrecio();
					}

					this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
				}

				if(this.tipoprecio.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.tipoprecio.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoPrecio(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaTipoPrecioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebTipoPrecio(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoPrecio.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoPrecio.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoPrecio(this.gettipoprecio(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.tipoprecioLogic.getConnexion());

				if(this.tipoprecio.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.tipoprecio.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoPrecio=(TitledBorder)this.jScrollPanelDatosTipoPrecio.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderTipoPrecio.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaTipoPrecioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoPrecio(this.gettipoprecio(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoprecio==null) {
						this.tipoprecio = new TipoPrecio();
					}

					this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
				}

				if(this.tipoprecio.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.tipoprecio.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoPrecio(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncodigoTipoPrecioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoPrecio(this.gettipoprecio(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoprecio==null) {
						this.tipoprecio = new TipoPrecio();
					}

					this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
				}

				if(this.tipoprecio.getcodigo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where codigo like '%"+this.tipoprecio.getcodigo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoPrecio(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombreTipoPrecioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoPrecio(this.gettipoprecio(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoprecio==null) {
						this.tipoprecio = new TipoPrecio();
					}

					this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
				}

				if(this.tipoprecio.getnombre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre like '%"+this.tipoprecio.getnombre()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoPrecio(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_desdeTipoPrecioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoPrecio(this.gettipoprecio(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoprecio==null) {
						this.tipoprecio = new TipoPrecio();
					}

					this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
				}

				if(this.tipoprecio.getfecha_desde()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_desde = '"+Funciones2.getStringPostgresDate(this.tipoprecio.getfecha_desde())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoPrecio(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_hastaTipoPrecioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoPrecio(this.gettipoprecio(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoprecio==null) {
						this.tipoprecio = new TipoPrecio();
					}

					this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
				}

				if(this.tipoprecio.getfecha_hasta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_hasta = '"+Funciones2.getStringPostgresDate(this.tipoprecio.getfecha_hasta())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoPrecio(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmontoTipoPrecioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoPrecio(this.gettipoprecio(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoprecio==null) {
						this.tipoprecio = new TipoPrecio();
					}

					this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
				}

				if(this.tipoprecio.getmonto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto = "+this.tipoprecio.getmonto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoPrecio(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonesta_activoTipoPrecioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoPrecio(this.gettipoprecio(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoprecio==null) {
						this.tipoprecio = new TipoPrecio();
					}

					this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
				}

				if(this.tipoprecio.getesta_activo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where esta_activo = "+this.tipoprecio.getesta_activo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoPrecio(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionTipoPrecioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoPrecio(this.gettipoprecio(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoprecio==null) {
						this.tipoprecio = new TipoPrecio();
					}

					this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);
				}

				if(this.tipoprecio.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.tipoprecio.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoPrecio(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonBusquedaPorCodigoTipoPrecioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoPrecio(false,false);

			this.getTipoPreciosBusquedaPorCodigo();

			this.inicializarActualizarBindingTipoPrecio(false);

			//if(TipoPrecioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoPrecio(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorFechaDesdeTipoPrecioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoPrecio(false,false);

			this.getTipoPreciosBusquedaPorFechaDesde();

			this.inicializarActualizarBindingTipoPrecio(false);

			//if(TipoPrecioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoPrecio(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorFechaHastaTipoPrecioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoPrecio(false,false);

			this.getTipoPreciosBusquedaPorFechaHasta();

			this.inicializarActualizarBindingTipoPrecio(false);

			//if(TipoPrecioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoPrecio(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorNombreTipoPrecioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoPrecio(false,false);

			this.getTipoPreciosBusquedaPorNombre();

			this.inicializarActualizarBindingTipoPrecio(false);

			//if(TipoPrecioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoPrecio(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaTipoPrecioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoPrecio(false,false);

			this.getTipoPreciosFK_IdEmpresa();

			this.inicializarActualizarBindingTipoPrecio(false);

			//if(TipoPrecioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoPrecio(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoprecioLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameTipoPrecio() {
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
		

		if(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
			this.jInternalFrameDetalleFormTipoPrecio.setVisible(false);	    			
			this.jInternalFrameDetalleFormTipoPrecio.dispose();
			this.jInternalFrameDetalleFormTipoPrecio=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoTipoPrecio!=null) {
			this.jInternalFrameReporteDinamicoTipoPrecio.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoTipoPrecio.dispose();
			this.jInternalFrameReporteDinamicoTipoPrecio=null;
		}
		
		if(this.jInternalFrameImportacionTipoPrecio!=null) {
			this.jInternalFrameImportacionTipoPrecio.setVisible(false);	    			
			this.jInternalFrameImportacionTipoPrecio.dispose();
			this.jInternalFrameImportacionTipoPrecio=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessTipoPrecio();
			
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			
			
			if(sTipo.equals("NuevoTipoPrecio")) {
				jButtonNuevoTipoPrecioActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarTipoPrecio")) {
				jButtonDuplicarTipoPrecioActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarTipoPrecio")) {
				jButtonCopiarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("VerFormTipoPrecio")) {
				jButtonVerFormTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarTipoPrecio")) {
				jButtonNuevoTipoPrecioActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarTipoPrecio")) {
				jButtonDuplicarTipoPrecioActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoTipoPrecio")) {
				jButtonNuevoTipoPrecioActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarTipoPrecio")) {
				jButtonDuplicarTipoPrecioActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesTipoPrecio")) {
				jButtonNuevoTipoPrecioActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarTipoPrecio")) {
				jButtonNuevoTipoPrecioActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesTipoPrecio")) {
				jButtonNuevoTipoPrecioActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarTipoPrecio")) {
				jButtonModificarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarTipoPrecio")) {
				jButtonModificarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarTipoPrecio")) {
				jButtonModificarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("ActualizarTipoPrecio")) {
				jButtonActualizarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarTipoPrecio")) {
				jButtonActualizarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarTipoPrecio")) {
				jButtonActualizarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("EliminarTipoPrecio")) {
				jButtonEliminarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarTipoPrecio")) {
				jButtonEliminarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarTipoPrecio")) {
				jButtonEliminarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("CancelarTipoPrecio")) {
				jButtonCancelarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarTipoPrecio")) {
				jButtonCancelarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarTipoPrecio")) {
				jButtonCancelarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("CerrarTipoPrecio")) {
				jButtonCerrarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarTipoPrecio")) {
				jButtonCerrarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarTipoPrecio")) {
				jButtonCerrarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarTipoPrecio")) {
				jButtonMostrarOcultarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarTipoPrecio")) {
				jButtonCancelarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTipoPrecio")) {
				jButtonGuardarCambiosTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarTipoPrecio")) {
				jButtonGuardarCambiosTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarTipoPrecio")) {
				jButtonCopiarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarTipoPrecio")) {
				jButtonVerFormTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTipoPrecio")) {
				jButtonGuardarCambiosTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarTipoPrecio")) {
				jButtonCopiarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormTipoPrecio")) {
				jButtonVerFormTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaTipoPrecio")) {
				jButtonGuardarCambiosTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarTipoPrecio")) {
				jButtonGuardarCambiosTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaTipoPrecio")) {
				jButtonGuardarCambiosTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionTipoPrecio")) {
				jButtonRecargarInformacionTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarTipoPrecio")) {
				jButtonRecargarInformacionTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionTipoPrecio")) {
				jButtonRecargarInformacionTipoPrecioActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresTipoPrecio")) {
				jButtonAnterioresTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarTipoPrecio")) {
				jButtonAnterioresTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreTipoPrecio")) {
				jButtonAnterioresTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("SiguientesTipoPrecio")) {
				jButtonSiguientesTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarTipoPrecio")) {
				jButtonSiguientesTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesTipoPrecio")) {
				jButtonSiguientesTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByTipoPrecio") || sTipo.equals("MenuItemDetalleAbrirOrderByTipoPrecio")) {
				jButtonAbrirOrderByTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarTipoPrecio") || sTipo.equals("MenuItemDetalleMostrarOcultarTipoPrecio")) {
				jButtonMostrarOcultarTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosTipoPrecio")) {
				jButtonNuevoGuardarCambiosTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarTipoPrecio")) {
				jButtonNuevoGuardarCambiosTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosTipoPrecio")) {
				jButtonNuevoGuardarCambiosTipoPrecioActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoTipoPrecio")) {
				jButtonCerrarReporteDinamicoTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoTipoPrecio")) {
				jButtonGenerarReporteDinamicoTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoTipoPrecio")) {
				
				jButtonGenerarExcelReporteDinamicoTipoPrecioActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionTipoPrecio")) {
				jButtonCerrarImportacionTipoPrecioActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionTipoPrecio")) {
				
				jButtonGenerarImportacionTipoPrecioActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionTipoPrecio")) {
				
				jButtonAbrirImportacionTipoPrecioActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesTipoPrecio")) {
				jComboBoxTiposAccionesTipoPrecioActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesTipoPrecio")) {
				jComboBoxTiposRelacionesTipoPrecioActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioTipoPrecio")) {
				jComboBoxTiposAccionesTipoPrecioActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarTipoPrecio")) {
				
				jComboBoxTiposSeleccionarTipoPrecioActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralTipoPrecio")) {
				jTextFieldValorCampoGeneralTipoPrecioActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByTipoPrecio")) {
				jButtonAbrirOrderByTipoPrecioActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarTipoPrecio")) {
				jButtonAbrirOrderByTipoPrecioActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByTipoPrecio")) {
				jButtonCerrarOrderByTipoPrecioActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idTipoPrecioBusqueda")) {
				this.jButtonidTipoPrecioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaTipoPrecioUpdate")) {
				this.jButtonid_empresaTipoPrecioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaTipoPrecioBusqueda")) {
				this.jButtonid_empresaTipoPrecioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoTipoPrecioBusqueda")) {
				this.jButtoncodigoTipoPrecioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreTipoPrecioBusqueda")) {
				this.jButtonnombreTipoPrecioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_desdeTipoPrecioBusqueda")) {
				this.jButtonfecha_desdeTipoPrecioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_hastaTipoPrecioBusqueda")) {
				this.jButtonfecha_hastaTipoPrecioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("montoTipoPrecioBusqueda")) {
				this.jButtonmontoTipoPrecioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("esta_activoTipoPrecioBusqueda")) {
				this.jButtonesta_activoTipoPrecioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionTipoPrecioBusqueda")) {
				this.jButtondescripcionTipoPrecioBusquedaActionPerformed(evt);
			}
			
			
			
			
			else if(sTipo.equals("BusquedaPorCodigoTipoPrecio")) {
				this.jButtonBusquedaPorCodigoTipoPrecioActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorFechaDesdeTipoPrecio")) {
				this.jButtonBusquedaPorFechaDesdeTipoPrecioActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorFechaHastaTipoPrecio")) {
				this.jButtonBusquedaPorFechaHastaTipoPrecioActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorNombreTipoPrecio")) {
				this.jButtonBusquedaPorNombreTipoPrecioActionPerformed(evt);
			}
			
			;
			
			
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessTipoPrecio();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoPrecioActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoprecio);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				
				


				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoPrecio.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoPrecio.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			TipoPrecio tipoprecioLocal=null;
			
			if(!this.getEsControlTabla()) {
				tipoprecioLocal=this.tipoprecio;
			} else {
				tipoprecioLocal=this.tipoprecioAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoprecio);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
							
				
				


				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoPrecio.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoPrecio.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoPrecioActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioAnterior =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoprecioAnterior =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoPrecioActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoprecio);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
								
						
				


				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoPrecio.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoPrecio.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoprecio);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
								
				
				


				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoPrecio.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoPrecio.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoPrecioActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioAnterior =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoprecioAnterior =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoprecio);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoPrecioActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioAnterior =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoprecioAnterior =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoPrecioActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoprecio);
			
			this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoprecio);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
							
				
				


				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoPrecio.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoPrecio.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoPrecioActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecioAnterior =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.tipoprecioAnterior =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoPrecioActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoprecio);
			
			this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoprecio);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
								
				
				


				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoPrecio.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoPrecio.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoPrecioActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioAnterior =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoprecioAnterior =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoPrecioActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoprecio);
			
			this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoPrecioActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoprecio);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosTipoPrecio")) {
					jCheckBoxSeleccionarTodosTipoPrecioItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosTipoPrecio")) {
					jCheckBoxSeleccionadosTipoPrecioItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarTipoPrecio")) {
					
				}
				
				


				
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoPrecio.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoPrecio.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoprecio);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
												
				
				


				
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoPrecio.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoPrecio.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoPrecioActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoprecioAnterior =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.tipoprecioAnterior =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoPrecioActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoprecio);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoPrecioActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoprecio);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoPrecio.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoPrecio.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoprecio);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoprecio);
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoPrecio.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoPrecio.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoPrecioActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoprecioAnterior =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoprecioAnterior =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarTipoPrecio")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosTipoPrecioListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosTipoPrecio.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.tipoprecio =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.tipoprecio =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.tipoprecio);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarTipoPrecio")) {
				
				}
				
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarTipoPrecio")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosTipoPrecio.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarTipoPrecio")) {
			
			}
			
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessTipoPrecio();
			
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			
			if(sTipo.equals("NuevoTipoPrecio")) {
				jButtonNuevoTipoPrecioActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarTipoPrecio")) {
				jButtonDuplicarTipoPrecioActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarTipoPrecio")) {
				jButtonCopiarTipoPrecioActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormTipoPrecio")) {
				jButtonVerFormTipoPrecioActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesTipoPrecio")) {
				jButtonNuevoTipoPrecioActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarTipoPrecio")) {
				jButtonModificarTipoPrecioActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarTipoPrecio")) {
				jButtonActualizarTipoPrecioActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarTipoPrecio")) {
				jButtonEliminarTipoPrecioActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaTipoPrecio")) {
				jButtonGuardarCambiosTipoPrecioActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarTipoPrecio")) {
				jButtonCancelarTipoPrecioActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarTipoPrecio")) {
				jButtonCerrarTipoPrecioActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTipoPrecio")) {
				jButtonGuardarCambiosTipoPrecioActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosTipoPrecio")) {
				jButtonNuevoGuardarCambiosTipoPrecioActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByTipoPrecio")) {
				jButtonAbrirOrderByTipoPrecioActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionTipoPrecio")) {
				jButtonRecargarInformacionTipoPrecioActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresTipoPrecio")) {
				jButtonAnterioresTipoPrecioActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesTipoPrecio")) {
				jButtonSiguientesTipoPrecioActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idTipoPrecioBusqueda")) {
				this.jButtonidTipoPrecioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaTipoPrecioUpdate")) {
				this.jButtonid_empresaTipoPrecioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaTipoPrecioBusqueda")) {
				this.jButtonid_empresaTipoPrecioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoTipoPrecioBusqueda")) {
				this.jButtoncodigoTipoPrecioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreTipoPrecioBusqueda")) {
				this.jButtonnombreTipoPrecioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_desdeTipoPrecioBusqueda")) {
				this.jButtonfecha_desdeTipoPrecioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_hastaTipoPrecioBusqueda")) {
				this.jButtonfecha_hastaTipoPrecioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("montoTipoPrecioBusqueda")) {
				this.jButtonmontoTipoPrecioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("esta_activoTipoPrecioBusqueda")) {
				this.jButtonesta_activoTipoPrecioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionTipoPrecioBusqueda")) {
				this.jButtondescripcionTipoPrecioBusquedaActionPerformed(evt);
			}
			
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessTipoPrecio();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameTipoPrecio")) {
				closingInternalFrameTipoPrecio();
				
			} else if(sTipo.equals("jButtonCancelarTipoPrecio")) {
				JInternalFrameBase jInternalFrameDetalleFormTipoPrecio = (JInternalFrameBase)evt.getSource();
	            	
	            TipoPrecioBeanSwingJInternalFrame jInternalFrameParent=(TipoPrecioBeanSwingJInternalFrame)jInternalFrameDetalleFormTipoPrecio.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarTipoPrecioActionPerformed(null);
			}
			
			TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.tipoprecio,new Object(),this.tipoprecioParameterGeneral,this.tipoprecioReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormTipoPrecio(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormTipoPrecio(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormTipoPrecio(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.tipoprecio)) {
			if(!esControlTabla) {
				if(TipoPrecioJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);			
				}
				
				if(this.tipoprecioSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualTipoPrecio(this.tipoprecio,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.tipoprecioReturnGeneral=tipoprecioLogic.procesarEventosTipoPreciosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.tipoprecioLogic.getTipoPrecios(),this.tipoprecio,this.tipoprecioParameterGeneral,this.isEsNuevoTipoPrecio,classes);//this.tipoprecioLogic.getTipoPrecio()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanTipoPrecio(this.tipoprecioReturnGeneral,this.tipoprecioBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.tipoprecioSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanTipoPrecio(classes,this.tipoprecioReturnGeneral,this.tipoprecioBean,false);
					}
						
					if(this.tipoprecioReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyTipoPrecio(this.tipoprecioReturnGeneral.getTipoPrecio());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioTipoPrecio(this.tipoprecioReturnGeneral.getTipoPrecio());	
					}
						
					if(this.tipoprecioReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioTipoPrecio(this.tipoprecioReturnGeneral.getTipoPrecio(),classes);//this.tipoprecioBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioTipoPrecio(this.tipoprecio,classes);//this.tipoprecioBean);									
				}
			
				if(TipoPrecioJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualTipoPrecio(this.tipoprecio,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoPrecio(this.tipoprecio);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.tipoprecioAnterior!=null) {
						this.tipoprecio=this.tipoprecioAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.tipoprecioReturnGeneral=tipoprecioLogic.procesarEventosTipoPreciosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.tipoprecioLogic.getTipoPrecios(),this.tipoprecio,this.tipoprecioParameterGeneral,this.isEsNuevoTipoPrecio,classes);//this.tipoprecioLogic.getTipoPrecio()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.tipoprecioSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.tipoprecioSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.tipoprecioReturnGeneral.getTipoPrecio(),tipoprecioLogic.getTipoPrecios());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.tipoprecioReturnGeneral.getTipoPrecio(),this.tipoprecios);
				}
				//ARCHITECTURE
				
				//this.jTableDatosTipoPrecio.repaint();
				
				//((AbstractTableModel) this.jTableDatosTipoPrecio.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosTipoPrecio();
			}
		}
	}
	
	public void actualizarVisualTableDatosTipoPrecio() throws Exception {
		
		TipoPrecioModel tipoprecioModel=(TipoPrecioModel)this.jTableDatosTipoPrecio.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tipoprecioModel.tipoprecios=this.tipoprecioLogic.getTipoPrecios();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			tipoprecioModel.tipoprecios=this.tipoprecios;
		}
		
		
		((TipoPrecioModel) this.jTableDatosTipoPrecio.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaTipoPrecio() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.gettipoprecioAnterior(),this.tipoprecioLogic.getTipoPrecios());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.gettipoprecioAnterior(),this.tipoprecios);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosTipoPrecio();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioTipoPrecio(TipoPrecio tipoprecio,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(Precio.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.setPrecios(tipoprecio.getPrecios());
					this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.inicializarActualizarBindingTablaPrecio(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PoliticasCliente.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.setPoliticasClientes(tipoprecio.getPoliticasClientes());
					this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaPoliticasCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(NotaCreditoSoli.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.setNotaCreditoSolis(tipoprecio.getNotaCreditoSolis());
					this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.inicializarActualizarBindingTablaNotaCreditoSoli(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GuiaRemision.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.setGuiaRemisions(tipoprecio.getGuiaRemisions());
					this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.inicializarActualizarBindingTablaGuiaRemision(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PedidoExpor.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.setPedidoExpors(tipoprecio.getPedidoExpors());
					this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.inicializarActualizarBindingTablaPedidoExpor(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FacturaPuntoVenta.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.setFacturaPuntoVentas(tipoprecio.getFacturaPuntoVentas());
					this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaFacturaPuntoVenta(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PedidoPuntoVenta.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.setPedidoPuntoVentas(tipoprecio.getPedidoPuntoVentas());
					this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaPedidoPuntoVenta(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(UtilidadTipoPrecio.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.setUtilidadTipoPrecios(tipoprecio.getUtilidadTipoPrecios());
					this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUtilidadTipoPrecio(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Cliente.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.setClientes(tipoprecio.getClientes());
					this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ServicioCliente.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.setServicioClientes(tipoprecio.getServicioClientes());
					this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaServicioCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Proforma.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.setProformas(tipoprecio.getProformas());
					this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.inicializarActualizarBindingTablaProforma(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DescuentoTipoPrecio.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.setDescuentoTipoPrecios(tipoprecio.getDescuentoTipoPrecios());
					this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.inicializarActualizarBindingTablaDescuentoTipoPrecio(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(NotaCreditoPuntoVenta.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.setNotaCreditoPuntoVentas(tipoprecio.getNotaCreditoPuntoVentas());
					this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaNotaCreditoPuntoVenta(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ParametroCarteraDefecto.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.setParametroCarteraDefectos(tipoprecio.getParametroCarteraDefectos());
					this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Consignacion.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.setConsignacions(tipoprecio.getConsignacions());
					this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaConsignacion(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.tipoprecio,new Object(),generalEntityParameterGeneral,this.tipoprecioReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.tipoprecioSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=TipoPrecioConstantesFunciones.getClassesRelationshipsOfTipoPrecio(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=TipoPrecioConstantesFunciones.getClassesRelationshipsFromStringsOfTipoPrecio(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormTipoPrecio(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				TipoPrecioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.tipoprecio,new Object(),generalEntityParameterGeneral,this.tipoprecioReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioTipoPrecio(TipoPrecioBean tipoprecioBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(Precio.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.setPrecios(tipoprecio.getPrecios());
					this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.inicializarActualizarBindingTablaPrecio(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PoliticasCliente.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.setPoliticasClientes(tipoprecio.getPoliticasClientes());
					this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaPoliticasCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(NotaCreditoSoli.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.setNotaCreditoSolis(tipoprecio.getNotaCreditoSolis());
					this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.inicializarActualizarBindingTablaNotaCreditoSoli(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GuiaRemision.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.setGuiaRemisions(tipoprecio.getGuiaRemisions());
					this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.inicializarActualizarBindingTablaGuiaRemision(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PedidoExpor.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.setPedidoExpors(tipoprecio.getPedidoExpors());
					this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.inicializarActualizarBindingTablaPedidoExpor(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FacturaPuntoVenta.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.setFacturaPuntoVentas(tipoprecio.getFacturaPuntoVentas());
					this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaFacturaPuntoVenta(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PedidoPuntoVenta.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.setPedidoPuntoVentas(tipoprecio.getPedidoPuntoVentas());
					this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaPedidoPuntoVenta(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(UtilidadTipoPrecio.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.setUtilidadTipoPrecios(tipoprecio.getUtilidadTipoPrecios());
					this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUtilidadTipoPrecio(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Cliente.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.setClientes(tipoprecio.getClientes());
					this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ServicioCliente.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.setServicioClientes(tipoprecio.getServicioClientes());
					this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaServicioCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Proforma.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.setProformas(tipoprecio.getProformas());
					this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.inicializarActualizarBindingTablaProforma(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DescuentoTipoPrecio.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.setDescuentoTipoPrecios(tipoprecio.getDescuentoTipoPrecios());
					this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.inicializarActualizarBindingTablaDescuentoTipoPrecio(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(NotaCreditoPuntoVenta.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.setNotaCreditoPuntoVentas(tipoprecio.getNotaCreditoPuntoVentas());
					this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaNotaCreditoPuntoVenta(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ParametroCarteraDefecto.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.setParametroCarteraDefectos(tipoprecio.getParametroCarteraDefectos());
					this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Consignacion.class)) {
					this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.setConsignacions(tipoprecio.getConsignacions());
					this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaConsignacion(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanTipoPrecio(ArrayList<Classe> classes,TipoPrecioReturnGeneral tipoprecioReturnGeneral,TipoPrecioBean tipoprecioBean,Boolean conDefault) throws Exception {
		
			this.tipoprecioBean.setPrecios(tipoprecioReturnGeneral.getTipoPrecio().getPrecios());
			this.tipoprecioBean.setPoliticasClientes(tipoprecioReturnGeneral.getTipoPrecio().getPoliticasClientes());
			this.tipoprecioBean.setNotaCreditoSolis(tipoprecioReturnGeneral.getTipoPrecio().getNotaCreditoSolis());
			this.tipoprecioBean.setGuiaRemisions(tipoprecioReturnGeneral.getTipoPrecio().getGuiaRemisions());
			this.tipoprecioBean.setPedidoExpors(tipoprecioReturnGeneral.getTipoPrecio().getPedidoExpors());
			this.tipoprecioBean.setFacturaPuntoVentas(tipoprecioReturnGeneral.getTipoPrecio().getFacturaPuntoVentas());
			this.tipoprecioBean.setPedidoPuntoVentas(tipoprecioReturnGeneral.getTipoPrecio().getPedidoPuntoVentas());
			this.tipoprecioBean.setUtilidadTipoPrecios(tipoprecioReturnGeneral.getTipoPrecio().getUtilidadTipoPrecios());
			this.tipoprecioBean.setClientes(tipoprecioReturnGeneral.getTipoPrecio().getClientes());
			this.tipoprecioBean.setServicioClientes(tipoprecioReturnGeneral.getTipoPrecio().getServicioClientes());
			this.tipoprecioBean.setProformas(tipoprecioReturnGeneral.getTipoPrecio().getProformas());
			this.tipoprecioBean.setDescuentoTipoPrecios(tipoprecioReturnGeneral.getTipoPrecio().getDescuentoTipoPrecios());
			this.tipoprecioBean.setNotaCreditoPuntoVentas(tipoprecioReturnGeneral.getTipoPrecio().getNotaCreditoPuntoVentas());
			this.tipoprecioBean.setParametroCarteraDefectos(tipoprecioReturnGeneral.getTipoPrecio().getParametroCarteraDefectos());
			this.tipoprecioBean.setConsignacions(tipoprecioReturnGeneral.getTipoPrecio().getConsignacions());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualTipoPrecio(TipoPrecio tipoprecio,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(Precio.class)) {
					tipoprecio.setPrecios(this.jInternalFrameDetalleFormTipoPrecio.precioBeanSwingJInternalFrame.precioLogic.getPrecios());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PoliticasCliente.class)) {
					tipoprecio.setPoliticasClientes(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasClientes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(NotaCreditoSoli.class)) {
					tipoprecio.setNotaCreditoSolis(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliBeanSwingJInternalFrame.notacreditosoliLogic.getNotaCreditoSolis());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GuiaRemision.class)) {
					tipoprecio.setGuiaRemisions(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PedidoExpor.class)) {
					tipoprecio.setPedidoExpors(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FacturaPuntoVenta.class)) {
					tipoprecio.setFacturaPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaBeanSwingJInternalFrame.facturapuntoventaLogic.getFacturaPuntoVentas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PedidoPuntoVenta.class)) {
					tipoprecio.setPedidoPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaBeanSwingJInternalFrame.pedidopuntoventaLogic.getPedidoPuntoVentas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(UtilidadTipoPrecio.class)) {
					tipoprecio.setUtilidadTipoPrecios(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioBeanSwingJInternalFrame.utilidadtipoprecioLogic.getUtilidadTipoPrecios());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Cliente.class)) {
					tipoprecio.setClientes(this.jInternalFrameDetalleFormTipoPrecio.clienteBeanSwingJInternalFrame.clienteLogic.getClientes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ServicioCliente.class)) {
					tipoprecio.setServicioClientes(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Proforma.class)) {
					tipoprecio.setProformas(this.jInternalFrameDetalleFormTipoPrecio.proformaBeanSwingJInternalFrame.proformaLogic.getProformas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DescuentoTipoPrecio.class)) {
					tipoprecio.setDescuentoTipoPrecios(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioBeanSwingJInternalFrame.descuentotipoprecioLogic.getDescuentoTipoPrecios());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(NotaCreditoPuntoVenta.class)) {
					tipoprecio.setNotaCreditoPuntoVentas(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaBeanSwingJInternalFrame.notacreditopuntoventaLogic.getNotaCreditoPuntoVentas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ParametroCarteraDefecto.class)) {
					tipoprecio.setParametroCarteraDefectos(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoBeanSwingJInternalFrame.parametrocarteradefectoLogic.getParametroCarteraDefectos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Consignacion.class)) {
					tipoprecio.setConsignacions(this.jInternalFrameDetalleFormTipoPrecio.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.tipoprecio)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormTipoPrecio = new TipoPrecioDetalleFormJInternalFrame(jDesktopPane,this.tipoprecioSessionBean.getConGuardarRelaciones(),this.tipoprecioSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.setVisible(false);
		this.jInternalFrameDetalleFormTipoPrecio.setSelected(false);						
		
		this.jInternalFrameDetalleFormTipoPrecio.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormTipoPrecio.tipoprecioLogic=this.tipoprecioLogic;
		
		this.cargarCombosFrameForeignKeyTipoPrecio("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleTipoPrecio();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleTipoPrecio();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyTipoPrecio("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyTipoPrecio();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormTipoPrecio.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarTipoPrecio"));
		
		this.jInternalFrameDetalleFormTipoPrecio.jButtonModificarTipoPrecio.addActionListener(new ButtonActionListener(this,"ModificarTipoPrecio"));

		
		this.jInternalFrameDetalleFormTipoPrecio.jButtonModificarToolBarTipoPrecio.addActionListener(new ButtonActionListener(this,"ModificarToolBarTipoPrecio"));
					
		this.jInternalFrameDetalleFormTipoPrecio.jMenuItemModificarTipoPrecio.addActionListener(new ButtonActionListener(this,"MenuItemModificarTipoPrecio"));		
		
		
		
		this.jInternalFrameDetalleFormTipoPrecio.jButtonActualizarTipoPrecio.addActionListener (new ButtonActionListener(this,"ActualizarTipoPrecio"));
		
		
		this.jInternalFrameDetalleFormTipoPrecio.jButtonActualizarToolBarTipoPrecio.addActionListener(new ButtonActionListener(this,"ActualizarToolBarTipoPrecio"));
						
		this.jInternalFrameDetalleFormTipoPrecio.jMenuItemActualizarTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemActualizarTipoPrecio"));		
		
		
		
		this.jInternalFrameDetalleFormTipoPrecio.jButtonEliminarTipoPrecio.addActionListener (new ButtonActionListener(this,"EliminarTipoPrecio"));
		
		
		this.jInternalFrameDetalleFormTipoPrecio.jButtonEliminarToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"EliminarToolBarTipoPrecio"));
								
		this.jInternalFrameDetalleFormTipoPrecio.jMenuItemEliminarTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemEliminarTipoPrecio"));		
		
		
		
		this.jInternalFrameDetalleFormTipoPrecio.jButtonCancelarTipoPrecio.addActionListener (new ButtonActionListener(this,"CancelarTipoPrecio"));
		
		
		this.jInternalFrameDetalleFormTipoPrecio.jButtonCancelarToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"CancelarToolBarTipoPrecio"));
					
		this.jInternalFrameDetalleFormTipoPrecio.jMenuItemCancelarTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemCancelarTipoPrecio"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormTipoPrecio.jMenuItemDetalleCerrarTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarTipoPrecio"));		
		
		
		
		this.jInternalFrameDetalleFormTipoPrecio.jButtonGuardarCambiosToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarTipoPrecio"));
		
		
		
		this.jInternalFrameDetalleFormTipoPrecio.jButtonGuardarCambiosToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarTipoPrecio"));
		
		
		
		this.jInternalFrameDetalleFormTipoPrecio.jComboBoxTiposAccionesFormularioTipoPrecio.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioTipoPrecio"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonidTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"idTipoPrecioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoPrecio.jButtonid_empresaTipoPrecioUpdate.addActionListener(new ButtonActionListener(this,"id_empresaTipoPrecioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonid_empresaTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtoncodigoTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"codigoTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonnombreTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"nombreTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonfecha_desdeTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"fecha_desdeTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonfecha_hastaTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"fecha_hastaTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonmontoTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"montoTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonesta_activoTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"esta_activoTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtondescripcionTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"descripcionTipoPrecioBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesTipoPrecio"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameTipoPrecio"));
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoPrecio.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarTipoPrecio"));
		}
		
		this.jTableDatosTipoPrecio.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarTipoPrecio"));
		
		this.jTableDatosTipoPrecio.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarTipoPrecio"));
		
		this.jButtonNuevoTipoPrecio.addActionListener(new ButtonActionListener(this,"NuevoTipoPrecio"));
		
		this.jButtonDuplicarTipoPrecio.addActionListener(new ButtonActionListener(this,"DuplicarTipoPrecio"));
		
		this.jButtonCopiarTipoPrecio.addActionListener(new ButtonActionListener(this,"CopiarTipoPrecio"));
		
		this.jButtonVerFormTipoPrecio.addActionListener(new ButtonActionListener(this,"VerFormTipoPrecio"));
		
		
		this.jButtonNuevoToolBarTipoPrecio.addActionListener(new ButtonActionListener(this,"NuevoToolBarTipoPrecio"));
			
		this.jButtonDuplicarToolBarTipoPrecio.addActionListener(new ButtonActionListener(this,"DuplicarToolBarTipoPrecio"));
			
		this.jMenuItemNuevoTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemNuevoTipoPrecio"));
			
		this.jMenuItemDuplicarTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarTipoPrecio"));		
		
		
		this.jButtonNuevoRelacionesTipoPrecio.addActionListener (new ButtonActionListener(this,"NuevoRelacionesTipoPrecio"));
		
		
		this.jButtonNuevoRelacionesToolBarTipoPrecio.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarTipoPrecio"));
			
		this.jMenuItemNuevoRelacionesTipoPrecio.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesTipoPrecio"));		
		
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoPrecio.jButtonModificarTipoPrecio.addActionListener(new ButtonActionListener(this,"ModificarTipoPrecio"));
		}
		
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoPrecio.jButtonModificarToolBarTipoPrecio.addActionListener(new ButtonActionListener(this,"ModificarToolBarTipoPrecio"));
			
			this.jInternalFrameDetalleFormTipoPrecio.jMenuItemModificarTipoPrecio.addActionListener(new ButtonActionListener(this,"MenuItemModificarTipoPrecio"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormTipoPrecio.jButtonActualizarTipoPrecio.addActionListener (new ButtonActionListener(this,"ActualizarTipoPrecio"));
		}
		
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoPrecio.jButtonActualizarToolBarTipoPrecio.addActionListener(new ButtonActionListener(this,"ActualizarToolBarTipoPrecio"));
				
			this.jInternalFrameDetalleFormTipoPrecio.jMenuItemActualizarTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemActualizarTipoPrecio"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoPrecio.jButtonEliminarTipoPrecio.addActionListener (new ButtonActionListener(this,"EliminarTipoPrecio"));
		}
		
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoPrecio.jButtonEliminarToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"EliminarToolBarTipoPrecio"));
						
			this.jInternalFrameDetalleFormTipoPrecio.jMenuItemEliminarTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemEliminarTipoPrecio"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoPrecio.jButtonCancelarTipoPrecio.addActionListener (new ButtonActionListener(this,"CancelarTipoPrecio"));
		}
		
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoPrecio.jButtonCancelarToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"CancelarToolBarTipoPrecio"));
			
			this.jInternalFrameDetalleFormTipoPrecio.jMenuItemCancelarTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemCancelarTipoPrecio"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarTipoPrecio"));		
		
		
		this.jButtonCerrarTipoPrecio.addActionListener (new ButtonActionListener(this,"CerrarTipoPrecio"));
		
		
		this.jButtonCerrarToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"CerrarToolBarTipoPrecio"));
			
		this.jMenuItemCerrarTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemCerrarTipoPrecio"));
			
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoPrecio.jMenuItemDetalleCerrarTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarTipoPrecio"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoPrecio.jButtonGuardarCambiosTipoPrecio.addActionListener (new ButtonActionListener(this,"GuardarCambiosTipoPrecio"));
		}
		
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoPrecio.jButtonGuardarCambiosToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarTipoPrecio"));
		}
		
		this.jButtonCopiarToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"CopiarToolBarTipoPrecio"));
			
		this.jButtonVerFormToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"VerFormToolBarTipoPrecio"));
		
		this.jMenuItemGuardarCambiosTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosTipoPrecio"));
			
		this.jMenuItemCopiarTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemCopiarTipoPrecio"));		
		
		this.jMenuItemVerFormTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemVerFormTipoPrecio"));		
		
		
		this.jButtonGuardarCambiosTablaTipoPrecio.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaTipoPrecio"));
		
		
		this.jButtonGuardarCambiosTablaToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarTipoPrecio"));
			
		this.jMenuItemGuardarCambiosTablaTipoPrecio.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaTipoPrecio"));		
		
		
		
		this.jButtonRecargarInformacionTipoPrecio.addActionListener (new ButtonActionListener(this,"RecargarInformacionTipoPrecio"));
					
		this.jButtonRecargarInformacionToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarTipoPrecio"));
		
		this.jMenuItemRecargarInformacionTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionTipoPrecio"));		
		
		
		
		this.jButtonAnterioresTipoPrecio.addActionListener (new ButtonActionListener(this,"AnterioresTipoPrecio"));
		
		
		this.jButtonAnterioresToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"AnterioresToolBarTipoPrecio"));
		
		this.jMenuItemAnterioresTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresTipoPrecio"));		
		
		
		this.jButtonSiguientesTipoPrecio.addActionListener (new ButtonActionListener(this,"SiguientesTipoPrecio"));
		
		
		this.jButtonSiguientesToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"SiguientesToolBarTipoPrecio"));
			
		this.jMenuItemSiguientesTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesTipoPrecio"));
			
		this.jMenuItemAbrirOrderByTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByTipoPrecio"));
			
		this.jMenuItemMostrarOcultarTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarTipoPrecio"));
			
		this.jMenuItemDetalleAbrirOrderByTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByTipoPrecio"));
			
		this.jMenuItemDetalleMostarOcultarTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarTipoPrecio"));		
		
		
		this.jButtonNuevoGuardarCambiosTipoPrecio.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosTipoPrecio"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarTipoPrecio"));
			
		this.jMenuItemNuevoGuardarCambiosTipoPrecio.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosTipoPrecio"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosTipoPrecio.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosTipoPrecio"));

		this.jCheckBoxSeleccionadosTipoPrecio.addItemListener(new CheckBoxItemListener(this,"SeleccionadosTipoPrecio"));
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoPrecio.jComboBoxTiposAccionesFormularioTipoPrecio.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioTipoPrecio"));
		}
		
		
		this.jComboBoxTiposRelacionesTipoPrecio.addActionListener (new ButtonActionListener(this,"TiposRelacionesTipoPrecio"));
			
		this.jComboBoxTiposAccionesTipoPrecio.addActionListener (new ButtonActionListener(this,"TiposAccionesTipoPrecio"));
					
		this.jComboBoxTiposSeleccionarTipoPrecio.addActionListener (new ButtonActionListener(this,"TiposSeleccionarTipoPrecio"));
			
		this.jTextFieldValorCampoGeneralTipoPrecio.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralTipoPrecio"));		
		
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonidTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"idTipoPrecioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoPrecio.jButtonid_empresaTipoPrecioUpdate.addActionListener(new ButtonActionListener(this,"id_empresaTipoPrecioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonid_empresaTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtoncodigoTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"codigoTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonnombreTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"nombreTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonfecha_desdeTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"fecha_desdeTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonfecha_hastaTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"fecha_hastaTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonmontoTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"montoTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonesta_activoTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"esta_activoTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtondescripcionTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"descripcionTipoPrecioBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonBusquedaPorCodigoTipoPrecio.addActionListener(new ButtonActionListener(this,"BusquedaPorCodigoTipoPrecio"));

			this.jButtonBusquedaPorFechaDesdeTipoPrecio.addActionListener(new ButtonActionListener(this,"BusquedaPorFechaDesdeTipoPrecio"));

			this.jButtonBusquedaPorFechaHastaTipoPrecio.addActionListener(new ButtonActionListener(this,"BusquedaPorFechaHastaTipoPrecio"));

			this.jButtonBusquedaPorNombreTipoPrecio.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreTipoPrecio"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoTipoPrecio!=null) {
				this.jInternalFrameReporteDinamicoTipoPrecio.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoTipoPrecio"));
				this.jInternalFrameReporteDinamicoTipoPrecio.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoTipoPrecio"));
				this.jInternalFrameReporteDinamicoTipoPrecio.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoTipoPrecio"));
			}
			
			//this.jButtonCerrarReporteDinamicoTipoPrecio.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoTipoPrecio"));				
			//this.jButtonGenerarReporteDinamicoTipoPrecio.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoTipoPrecio"));
			//this.jButtonGenerarExcelReporteDinamicoTipoPrecio.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoTipoPrecio"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionTipoPrecio!=null) {
				this.jInternalFrameImportacionTipoPrecio.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionTipoPrecio"));
				this.jInternalFrameImportacionTipoPrecio.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionTipoPrecio"));
				this.jInternalFrameImportacionTipoPrecio.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionTipoPrecio"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByTipoPrecio.addActionListener (new ButtonActionListener(this,"AbrirOrderByTipoPrecio"));
			
			this.jButtonAbrirOrderByToolBarTipoPrecio.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarTipoPrecio"));			
			
			if(this.jInternalFrameOrderByTipoPrecio!=null) {
				this.jInternalFrameOrderByTipoPrecio.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByTipoPrecio"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoPrecio.jTabbedPaneRelacionesTipoPrecio.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesTipoPrecio"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameTipoPrecio();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormTipoPrecio.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormTipoPrecio = (JInternalFrameBase)event.getSource();
	            	
	            TipoPrecioBeanSwingJInternalFrame jInternalFrameParent=(TipoPrecioBeanSwingJInternalFrame)jInternalFrameDetalleFormTipoPrecio.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarTipoPrecioActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosTipoPrecio.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosTipoPrecioListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosTipoPrecio.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosTipoPrecio.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoPrecioActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoPrecioActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoPrecioActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoTipoPrecio";
		inputMap = this.jButtonNuevoTipoPrecio.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoTipoPrecio.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoTipoPrecioActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoPrecioActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoPrecioActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoPrecioActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesTipoPrecio";
		inputMap = this.jButtonNuevoRelacionesTipoPrecio.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesTipoPrecio.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoTipoPrecioActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarTipoPrecio";
		inputMap = this.jButtonModificarTipoPrecio.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarTipoPrecio.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarTipoPrecioActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarTipoPrecio";
		inputMap = this.jButtonActualizarTipoPrecio.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarTipoPrecio.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarTipoPrecioActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarTipoPrecio";
		inputMap = this.jButtonEliminarTipoPrecio.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarTipoPrecio.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarTipoPrecioActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarTipoPrecio";
		inputMap = this.jButtonCancelarTipoPrecio.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarTipoPrecio.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarTipoPrecioActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarTipoPrecio";
		inputMap = this.jButtonCerrarTipoPrecio.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarTipoPrecio.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarTipoPrecioActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormTipoPrecio.jButtonGuardarCambiosTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosTipoPrecio";
		inputMap = this.jInternalFrameDetalleFormTipoPrecio.jButtonGuardarCambiosTipoPrecio.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormTipoPrecio.jButtonGuardarCambiosTipoPrecio.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosTipoPrecioActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosTipoPrecio.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosTipoPrecioItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesTipoPrecio.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesTipoPrecioActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarTipoPrecio.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarTipoPrecioActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralTipoPrecio.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralTipoPrecioActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonidTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"idTipoPrecioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoPrecio.jButtonid_empresaTipoPrecioUpdate.addActionListener(new ButtonActionListener(this,"id_empresaTipoPrecioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonid_empresaTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtoncodigoTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"codigoTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonnombreTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"nombreTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonfecha_desdeTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"fecha_desdeTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonfecha_hastaTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"fecha_hastaTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonmontoTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"montoTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtonesta_activoTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"esta_activoTipoPrecioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoPrecio.jButtondescripcionTipoPrecioBusqueda.addActionListener(new ButtonActionListener(this,"descripcionTipoPrecioBusqueda"));
		
		
		this.jButtonBusquedaPorCodigoTipoPrecio.addActionListener(new ButtonActionListener(this,"BusquedaPorCodigoTipoPrecio"));

		this.jButtonBusquedaPorFechaDesdeTipoPrecio.addActionListener(new ButtonActionListener(this,"BusquedaPorFechaDesdeTipoPrecio"));

		this.jButtonBusquedaPorFechaHastaTipoPrecio.addActionListener(new ButtonActionListener(this,"BusquedaPorFechaHastaTipoPrecio"));

		this.jButtonBusquedaPorNombreTipoPrecio.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreTipoPrecio"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionTipoPrecio.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionTipoPrecioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarTipoPrecioActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarTipoPrecio.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosTipoPrecio(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(TipoPrecio tipoprecioAux:this.tipoprecioLogic.getTipoPrecios()) {
					tipoprecioAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TipoPrecio tipoprecioAux:tipoprecios) {
					tipoprecioAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosTipoPrecioItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingTipoPrecio(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(TipoPrecio tipoprecioAux:this.tipoprecioLogic.getTipoPrecios()) {
						tipoprecioAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(TipoPrecio tipoprecioAux:tipoprecios) {
						tipoprecioAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(TipoPrecio tipoprecioAux:this.tipoprecioLogic.getTipoPrecios()) {
					
						if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO)) {
							existe=true;
							tipoprecioAux.setesta_activo(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(TipoPrecio tipoprecioAux:tipoprecios) {
						
						if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO)) {
							existe=true;
							tipoprecioAux.setesta_activo(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaTipoPrecio(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosTipoPrecio.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosTipoPrecio.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosTipoPrecio,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosTipoPrecioItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingTipoPrecio(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosTipoPrecio.getSelectedRows();
			
			TipoPrecio tipoprecioLocal=new TipoPrecio();
			
			//this.seleccionarTodosTipoPrecio(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoprecioLocal =(TipoPrecio) this.tipoprecioLogic.getTipoPrecios().toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					tipoprecioLocal =(TipoPrecio) this.tipoprecios.toArray()[this.jTableDatosTipoPrecio.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				tipoprecioLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(TipoPrecio tipoprecioAux:this.tipoprecioLogic.getTipoPrecios()) {
						tipoprecioAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(TipoPrecio tipoprecioAux:tipoprecios) {
						tipoprecioAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaTipoPrecio(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosTipoPrecio.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosTipoPrecio.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosTipoPrecio,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualTipoPrecioItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarTipoPrecioParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralTipoPrecioActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingTipoPrecio(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralTipoPrecio.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(TipoPrecio tipoprecioAux:this.tipoprecioLogic.getTipoPrecios()) {
				
						if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							tipoprecioAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							tipoprecioAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_FECHADESDE)) {
							existe=true;
							tipoprecioAux.setfecha_desde(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_FECHAHASTA)) {
							existe=true;
							tipoprecioAux.setfecha_hasta(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_MONTO)) {
							existe=true;
							tipoprecioAux.setmonto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							tipoprecioAux.setdescripcion(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TipoPrecio tipoprecioAux:tipoprecios) {
					
						if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							tipoprecioAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							tipoprecioAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_FECHADESDE)) {
							existe=true;
							tipoprecioAux.setfecha_desde(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_FECHAHASTA)) {
							existe=true;
							tipoprecioAux.setfecha_hasta(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_MONTO)) {
							existe=true;
							tipoprecioAux.setmonto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							tipoprecioAux.setdescripcion(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaTipoPrecio(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesTipoPrecioActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingTipoPrecio(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioTipoPrecio=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesTipoPrecio.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormTipoPrecio.jComboBoxTiposAccionesFormularioTipoPrecio.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteTipoPrecio) {				
					conSplash=true;//false;										
					
					//this.startProcessTipoPrecio(conSplash);
				
					this.generarReporteTipoPreciosSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTipoPrecio.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTipoPrecio.jComboBoxTiposAccionesFormularioTipoPrecio.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoTipoPreciosSeleccionados();
				//this.jComboBoxTiposAccionesTipoPrecio.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoTipoPreciosSeleccionados(false);
				//this.jComboBoxTiposAccionesTipoPrecio.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoTipoPreciosSeleccionados(true);
				//this.jComboBoxTiposAccionesTipoPrecio.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessTipoPrecio();
				
				this.exportarTipoPreciosSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTipoPrecio.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTipoPrecio.jComboBoxTiposAccionesFormularioTipoPrecio.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionTipoPrecios();
				//this.importarTipoPrecios();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTipoPrecio.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTipoPrecio.jComboBoxTiposAccionesFormularioTipoPrecio.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessTipoPrecio();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelTipoPreciosSeleccionados();
				//this.jComboBoxTiposAccionesTipoPrecio.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Tipo Precio", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessTipoPrecio();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoTipoPrecio)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyTipoPrecio(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Tipo Precio",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTipoPrecio.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTipoPrecio.jComboBoxTiposAccionesFormularioTipoPrecio.setSelectedIndex(0);					
				}	
			} 			
			else if(TipoPrecioBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteTipoPrecio) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessTipoPrecio(conSplash);
					
						//this.actualizarParametrosGeneralTipoPrecio();
						
						this.generarReporteProcesoAccionTipoPreciosSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesTipoPrecio.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormTipoPrecio.jComboBoxTiposAccionesFormularioTipoPrecio.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(TipoPrecioBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Tipo PrecioES SELECCIONADOS?", "MANTENIMIENTO DE Tipo Precio", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessTipoPrecio();
				
						this.actualizarParametrosGeneralTipoPrecio();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.tipoprecioReturnGeneral=tipoprecioLogic.procesarAccionTipoPreciosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.tipoprecioLogic.getTipoPrecios(),this.tipoprecioParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarTipoPrecioReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesTipoPrecio.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormTipoPrecio.jComboBoxTiposAccionesFormularioTipoPrecio.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralTipoPrecio();
					
					TipoPrecioBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarTipoPrecioReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesTipoPrecio.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormTipoPrecio.jComboBoxTiposAccionesFormularioTipoPrecio.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessTipoPrecio(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesTipoPrecioActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessTipoPrecio();
			
			if(this.jInternalFrameDetalleFormTipoPrecio==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<TipoPrecio> tipopreciosSeleccionados=new ArrayList<TipoPrecio>();		
			TipoPrecio tipoprecio=new TipoPrecio();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingTipoPrecio(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesTipoPrecio.getSelectedItem();
			
			
			
			
			tipopreciosSeleccionados=this.getTipoPreciosSeleccionados(true);
			//this.sTipoAccion;
			
			if(tipopreciosSeleccionados.size()==1) {
				for(TipoPrecio tipoprecioAux:tipopreciosSeleccionados) {
					tipoprecio=tipoprecioAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Precio")) {
					jButtonPrecioActionPerformed(null,rowIndex,true,false,tipoprecio);
				}
				else if(this.sTipoRelacion.equals("Politicas Cliente")) {
					jButtonPoliticasClienteActionPerformed(null,rowIndex,true,false,tipoprecio);
				}
				else if(this.sTipoRelacion.equals("Solicitud Nota Credito")) {
					jButtonNotaCreditoSoliActionPerformed(null,rowIndex,true,false,tipoprecio);
				}
				else if(this.sTipoRelacion.equals("Guia Remision")) {
					jButtonGuiaRemisionActionPerformed(null,rowIndex,true,false,tipoprecio);
				}
				else if(this.sTipoRelacion.equals("Pedido Exportacion")) {
					jButtonPedidoExporActionPerformed(null,rowIndex,true,false,tipoprecio);
				}
				else if(this.sTipoRelacion.equals("Factura Punto Venta")) {
					jButtonFacturaPuntoVentaActionPerformed(null,rowIndex,true,false,tipoprecio);
				}
				else if(this.sTipoRelacion.equals("Pedido Punto Venta")) {
					jButtonPedidoPuntoVentaActionPerformed(null,rowIndex,true,false,tipoprecio);
				}
				else if(this.sTipoRelacion.equals("Utilidad Tipo Precio")) {
					jButtonUtilidadTipoPrecioActionPerformed(null,rowIndex,true,false,tipoprecio);
				}
				else if(this.sTipoRelacion.equals("Cliente")) {
					jButtonClienteActionPerformed(null,rowIndex,true,false,tipoprecio);
				}
				else if(this.sTipoRelacion.equals("Servicio Cliente")) {
					jButtonServicioClienteActionPerformed(null,rowIndex,true,false,tipoprecio);
				}
				else if(this.sTipoRelacion.equals("Proforma")) {
					jButtonProformaActionPerformed(null,rowIndex,true,false,tipoprecio);
				}
				else if(this.sTipoRelacion.equals("Descuento Tipo Precio")) {
					jButtonDescuentoTipoPrecioActionPerformed(null,rowIndex,true,false,tipoprecio);
				}
				else if(this.sTipoRelacion.equals("Nota Credito")) {
					jButtonNotaCreditoPuntoVentaActionPerformed(null,rowIndex,true,false,tipoprecio);
				}
				else if(this.sTipoRelacion.equals("Parametro Cartera Defecto")) {
					jButtonParametroCarteraDefectoActionPerformed(null,rowIndex,true,false,tipoprecio);
				}
				else if(this.sTipoRelacion.equals("Consignacion")) {
					jButtonConsignacionActionPerformed(null,rowIndex,true,false,tipoprecio);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessTipoPrecio();
			
      		//this.finishProcessTipoPrecio(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarTipoPrecioReturnGeneral() throws Exception {
		if(this.tipoprecioReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.tipoprecioReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.tipoprecioReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.tipoprecioReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.tipoprecioReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.tipoprecioReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingTipoPrecio(false);
		}
		
		if(this.tipoprecioReturnGeneral.getConRetornoLista() || this.tipoprecioReturnGeneral.getConRetornoObjeto()) {
			if(this.tipoprecioReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.tipoprecioLogic.setTipoPrecios(this.tipoprecioReturnGeneral.getTipoPrecios());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.tipoprecioReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.tipoprecioLogic.setTipoPrecio(this.tipoprecioReturnGeneral.getTipoPrecio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingTipoPrecio(false);
		}
	}
	
	public void actualizarParametrosGeneralTipoPrecio() throws Exception {
		
		
	}
	
	public ArrayList<TipoPrecio> getTipoPreciosSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<TipoPrecio> tipopreciosSeleccionados=new ArrayList<TipoPrecio>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioTipoPrecio) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(TipoPrecio tipoprecioAux:tipoprecioLogic.getTipoPrecios()) {
					if(tipoprecioAux.getIsSelected()) {
						tipopreciosSeleccionados.add(tipoprecioAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TipoPrecio tipoprecioAux:this.tipoprecios) {
					if(tipoprecioAux.getIsSelected()) {
						tipopreciosSeleccionados.add(tipoprecioAux);				
					}
				}
			}
			
			if(tipopreciosSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						tipopreciosSeleccionados.addAll(this.tipoprecioLogic.getTipoPrecios());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						tipopreciosSeleccionados.addAll(this.tipoprecios);				
					}
				}
			}
		} else {
			tipopreciosSeleccionados.add(this.tipoprecio);
		}
		
		return tipopreciosSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteTipoPreciosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalTipoPreciosSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoTipoPreciosSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoTipoPreciosSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoTipoPreciosSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesTipoPreciosSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Tipo Precio",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesTipoPreciosSeleccionados() throws Exception {
		ArrayList<TipoPrecio> tipopreciosSeleccionados=new ArrayList<TipoPrecio>();		
		
		tipopreciosSeleccionados=this.getTipoPreciosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteTipoPrecios("Todos",tipopreciosSeleccionados);
		
	}	
	
	public void generarReporteNormalTipoPreciosSeleccionados() throws Exception {
		ArrayList<TipoPrecio> tipopreciosSeleccionados=new ArrayList<TipoPrecio>();		
		
		tipopreciosSeleccionados=this.getTipoPreciosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteTipoPrecios("Todos",tipopreciosSeleccionados);
	}		
	
	public void generarReporteProcesoAccionTipoPreciosSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<TipoPrecio> tipopreciosSeleccionados=new ArrayList<TipoPrecio>();
		
		tipopreciosSeleccionados=this.getTipoPreciosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteTipoPrecios("Todos",tipopreciosSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoTipoPreciosSeleccionados() throws Exception {
		ArrayList<TipoPrecio> tipopreciosSeleccionados=new ArrayList<TipoPrecio>();		
		
		
		this.abrirInicializarFrameReporteDinamicoTipoPrecio();
		
		
		tipopreciosSeleccionados=this.getTipoPreciosSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoTipoPrecio();
		
		
		//this.generarReporteTipoPrecios("Todos",tipopreciosSeleccionados ,tipoprecioImplementable,tipoprecioImplementableHome);
	}
	
	public void mostrarImportacionTipoPrecios() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionTipoPrecio();
		
		this.abrirFrameImportacionTipoPrecio();		
		
			
		//this.generarReporteTipoPrecios("Todos",tipopreciosSeleccionados ,tipoprecioImplementable,tipoprecioImplementableHome);
	}
	
	public void importarTipoPrecios() throws Exception {		
	
	}
	
	public void exportarTipoPreciosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelTipoPreciosSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoTipoPreciosSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlTipoPreciosSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Tipo Precio",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoTipoPreciosSeleccionados() throws Exception {
		ArrayList<TipoPrecio> tipopreciosSeleccionados=new ArrayList<TipoPrecio>();		
		
		tipopreciosSeleccionados=this.getTipoPreciosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipoprecio."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarTipoPrecio(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(TipoPrecio tipoprecioAux:tipopreciosSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarTipoPrecio(tipoprecioAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//tipoprecioAux.setsDetalleGeneralEntityReporte(tipoprecioAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoprecioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Precio",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarTipoPrecio(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=TipoPrecioConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoPrecioConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoPrecioConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoPrecioConstantesFunciones.LABEL_CODIGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoPrecioConstantesFunciones.LABEL_NOMBRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoPrecioConstantesFunciones.LABEL_FECHADESDE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoPrecioConstantesFunciones.LABEL_FECHAHASTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoPrecioConstantesFunciones.LABEL_MONTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoPrecioConstantesFunciones.LABEL_DESCRIPCION;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarTipoPrecio(TipoPrecio tipoprecio,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=tipoprecio.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoprecio.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoprecio.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoprecio.getcodigo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoprecio.getnombre();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoprecio.getfecha_desde().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoprecio.getfecha_hasta().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoprecio.getmonto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoprecio.getesta_activo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoprecio.getdescripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelTipoPreciosSeleccionados() throws Exception {
		ArrayList<TipoPrecio> tipopreciosSeleccionados=new ArrayList<TipoPrecio>();		
		
		tipopreciosSeleccionados=this.getTipoPreciosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipoprecio.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("TipoPrecios");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelTipoPrecio(row);				
				iRow++;
			}				
			
			for(TipoPrecio tipoprecioAux:tipopreciosSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelTipoPrecio(tipoprecioAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoprecioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Precio",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlTipoPreciosSeleccionados() throws Exception {
		ArrayList<TipoPrecio> tipopreciosSeleccionados=new ArrayList<TipoPrecio>();		
		
		tipopreciosSeleccionados=this.getTipoPreciosSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipoprecio.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("tipoprecios");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("tipoprecio");
			//elementRoot.appendChild(element);
		
			for(TipoPrecio tipoprecioAux:tipopreciosSeleccionados) {
				element = document.createElement("tipoprecio");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlTipoPrecio(tipoprecioAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoprecioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Precio",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelTipoPrecio(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_CODIGO);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_NOMBRE);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_FECHADESDE);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_FECHAHASTA);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_MONTO);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoPrecioConstantesFunciones.LABEL_DESCRIPCION);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelTipoPrecio(TipoPrecio tipoprecio,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(tipoprecio.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoprecio.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoprecio.getcodigo());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoprecio.getnombre());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoprecio.getfecha_desde());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoprecio.getfecha_hasta());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoprecio.getmonto());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoprecio.getesta_activo());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoprecio.getdescripcion());				
	}
	
	public void setFilaDatosExportarXmlTipoPrecio(TipoPrecio tipoprecio,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(TipoPrecioConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(tipoprecio.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(TipoPrecioConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(tipoprecio.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(TipoPrecioConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(tipoprecio.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementcodigo = document.createElement(TipoPrecioConstantesFunciones.CODIGO);
		elementcodigo.appendChild(document.createTextNode(tipoprecio.getcodigo().trim()));
		element.appendChild(elementcodigo);

		Element elementnombre = document.createElement(TipoPrecioConstantesFunciones.NOMBRE);
		elementnombre.appendChild(document.createTextNode(tipoprecio.getnombre().trim()));
		element.appendChild(elementnombre);

		Element elementfecha_desde = document.createElement(TipoPrecioConstantesFunciones.FECHADESDE);
		elementfecha_desde.appendChild(document.createTextNode(tipoprecio.getfecha_desde().toString().trim()));
		element.appendChild(elementfecha_desde);

		Element elementfecha_hasta = document.createElement(TipoPrecioConstantesFunciones.FECHAHASTA);
		elementfecha_hasta.appendChild(document.createTextNode(tipoprecio.getfecha_hasta().toString().trim()));
		element.appendChild(elementfecha_hasta);

		Element elementmonto = document.createElement(TipoPrecioConstantesFunciones.MONTO);
		elementmonto.appendChild(document.createTextNode(tipoprecio.getmonto().toString().trim()));
		element.appendChild(elementmonto);

		Element elementesta_activo = document.createElement(TipoPrecioConstantesFunciones.ESTAACTIVO);
		elementesta_activo.appendChild(document.createTextNode(tipoprecio.getesta_activo().toString().trim()));
		element.appendChild(elementesta_activo);

		Element elementdescripcion = document.createElement(TipoPrecioConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(tipoprecio.getdescripcion().trim()));
		element.appendChild(elementdescripcion);
	}
	
	public void generarReporteGroupGenericoTipoPreciosSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<TipoPrecio> tipopreciosSeleccionados=new ArrayList<TipoPrecio>();
		
		tipopreciosSeleccionados=this.getTipoPreciosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoTipoPrecio(tipopreciosSeleccionados);
		
		this.generarReporteTipoPrecios("Todos",tipopreciosSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoTipoPrecio(ArrayList<TipoPrecio> tipopreciosSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(TipoPrecio tipoprecioAux:tipopreciosSeleccionados) {
				tipoprecioAux.setsDetalleGeneralEntityReporte(tipoprecioAux.toString());
			
				if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					tipoprecioAux.setsDescripcionGeneralEntityReporte1(tipoprecioAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_CODIGO)) {
					existe=true;
					tipoprecioAux.setsDescripcionGeneralEntityReporte1(tipoprecioAux.getcodigo());
				}
				 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_NOMBRE)) {
					existe=true;
					tipoprecioAux.setsDescripcionGeneralEntityReporte1(tipoprecioAux.getnombre());
				}
				 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_FECHADESDE)) {
					existe=true;
					tipoprecioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(tipoprecioAux.getfecha_desde()));
				}
				 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_FECHAHASTA)) {
					existe=true;
					tipoprecioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(tipoprecioAux.getfecha_hasta()));
				}
				 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_ESTAACTIVO)) {
					existe=true;
					tipoprecioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(tipoprecioAux.getesta_activo()));
				}
				 else if(sTipoSeleccionar.equals(TipoPrecioConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					tipoprecioAux.setsDescripcionGeneralEntityReporte1(tipoprecioAux.getdescripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoPrecioConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesTipoPrecio(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoTipoPrecio=true;
				this.isVisibilidadCeldaNuevoRelacionesTipoPrecio=true;
				this.isVisibilidadCeldaGuardarCambiosTipoPrecio=true;
			}
			
			this.isVisibilidadCeldaModificarTipoPrecio=false;
			this.isVisibilidadCeldaActualizarTipoPrecio=false;
			this.isVisibilidadCeldaEliminarTipoPrecio=false;
			this.isVisibilidadCeldaCancelarTipoPrecio=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoPrecio=true;
				} else {
					this.isVisibilidadCeldaGuardarTipoPrecio=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoTipoPrecio=false;
			this.isVisibilidadCeldaNuevoRelacionesTipoPrecio=false;
			this.isVisibilidadCeldaGuardarCambiosTipoPrecio=false;
			this.isVisibilidadCeldaModificarTipoPrecio=false;
			this.isVisibilidadCeldaActualizarTipoPrecio=true;
			this.isVisibilidadCeldaEliminarTipoPrecio=false;
			this.isVisibilidadCeldaCancelarTipoPrecio=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoPrecio=true;
				} else {
					this.isVisibilidadCeldaGuardarTipoPrecio=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoTipoPrecio=false;
			this.isVisibilidadCeldaNuevoRelacionesTipoPrecio=false;
			this.isVisibilidadCeldaGuardarCambiosTipoPrecio=false;
			this.isVisibilidadCeldaModificarTipoPrecio=false;
			this.isVisibilidadCeldaActualizarTipoPrecio=true;
			this.isVisibilidadCeldaEliminarTipoPrecio=true;
			this.isVisibilidadCeldaCancelarTipoPrecio=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoPrecio=true;
				} else {
					this.isVisibilidadCeldaGuardarTipoPrecio=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoTipoPrecio=false;
			this.isVisibilidadCeldaNuevoRelacionesTipoPrecio=false;
			this.isVisibilidadCeldaGuardarCambiosTipoPrecio=false;
			this.isVisibilidadCeldaModificarTipoPrecio=false;
			this.isVisibilidadCeldaActualizarTipoPrecio=true;
			this.isVisibilidadCeldaEliminarTipoPrecio=false;
			this.isVisibilidadCeldaCancelarTipoPrecio=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoPrecio=false;
				} else {
					this.isVisibilidadCeldaGuardarTipoPrecio=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoTipoPrecio=true;
			this.isVisibilidadCeldaNuevoRelacionesTipoPrecio=true;
			this.isVisibilidadCeldaGuardarCambiosTipoPrecio=true;
			this.isVisibilidadCeldaModificarTipoPrecio=false;
			this.isVisibilidadCeldaActualizarTipoPrecio=false;
			this.isVisibilidadCeldaEliminarTipoPrecio=false;
			this.isVisibilidadCeldaCancelarTipoPrecio=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoPrecio=true;
				} else {
					this.isVisibilidadCeldaGuardarTipoPrecio=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoTipoPrecio=false;
			this.isVisibilidadCeldaNuevoRelacionesTipoPrecio=false;
			this.isVisibilidadCeldaGuardarCambiosTipoPrecio=false;
			this.isVisibilidadCeldaActualizarTipoPrecio=false;
			this.isVisibilidadCeldaEliminarTipoPrecio=false;
			this.isVisibilidadCeldaCancelarTipoPrecio=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoPrecio=false;
				} else {
					this.isVisibilidadCeldaGuardarTipoPrecio=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoTipoPrecio=false;
			this.isVisibilidadCeldaNuevoRelacionesTipoPrecio=false;
			this.isVisibilidadCeldaGuardarCambiosTipoPrecio=false;
			this.isVisibilidadCeldaModificarTipoPrecio=true;
			this.isVisibilidadCeldaActualizarTipoPrecio=false;
			this.isVisibilidadCeldaEliminarTipoPrecio=false;
			this.isVisibilidadCeldaCancelarTipoPrecio=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoPrecio=false;
				} else {
					this.isVisibilidadCeldaGuardarTipoPrecio=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(TipoPrecioJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoTipoPrecio=true;
			this.isVisibilidadCeldaNuevoRelacionesTipoPrecio=true;
			this.isVisibilidadCeldaGuardarCambiosTipoPrecio=true;
		} else {
			this.actualizarEstadoPanelsTipoPrecio(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarTipoPrecio=false;
			//this.isVisibilidadCeldaVerFormTipoPrecio=false;
			this.isVisibilidadCeldaDuplicarTipoPrecio=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!tipoprecioSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesTipoPrecio=false;
		} else {
			this.isVisibilidadCeldaNuevoTipoPrecio=false;
			this.isVisibilidadCeldaGuardarCambiosTipoPrecio=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(tipoprecioSessionBean.getEsGuardarRelacionado()) {
			if(!tipoprecioSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesTipoPrecio=false;												
			}
			
			this.jButtonCerrarTipoPrecio.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesTipoPrecio=false;
		}
		
		if(!this.permiteMantenimiento(this.tipoprecio)) {
			this.isVisibilidadCeldaActualizarTipoPrecio=false;
			this.isVisibilidadCeldaEliminarTipoPrecio=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesTipoPrecio() {
		this.isVisibilidadCeldaNuevoTipoPrecio=false;
		this.isVisibilidadCeldaGuardarCambiosTipoPrecio=false;
	}
	
	public void actualizarEstadoPanelsTipoPrecio(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionTipoPrecio!=null) {
				this.jScrollPanelDatosEdicionTipoPrecio.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoPrecio!=null) {
				this.jTabbedPaneBusquedasTipoPrecio.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTipoPrecio!=null) {
				this.jScrollPanelDatosTipoPrecio.setVisible(true);
			}
			
			if(this.jPanelPaginacionTipoPrecio!=null) {
				this.jPanelPaginacionTipoPrecio.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTipoPrecio!=null) {
				this.jPanelParametrosReportesTipoPrecio.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionTipoPrecio!=null) {
				this.jScrollPanelDatosEdicionTipoPrecio.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoPrecio!=null) {
				this.jTabbedPaneBusquedasTipoPrecio.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosTipoPrecio!=null) {
				this.jScrollPanelDatosTipoPrecio.setVisible(false);
			}
			
			if(this.jPanelPaginacionTipoPrecio!=null) {
				this.jPanelPaginacionTipoPrecio.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesTipoPrecio!=null) {
				this.jPanelParametrosReportesTipoPrecio.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionTipoPrecio!=null) {
				this.jScrollPanelDatosEdicionTipoPrecio.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoPrecio!=null) {
				this.jTabbedPaneBusquedasTipoPrecio.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosTipoPrecio!=null) {
				this.jScrollPanelDatosTipoPrecio.setVisible(false);
			}
			
			if(this.jPanelPaginacionTipoPrecio!=null) {
				this.jPanelPaginacionTipoPrecio.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesTipoPrecio!=null) {
				this.jPanelParametrosReportesTipoPrecio.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionTipoPrecio!=null) {
				this.jScrollPanelDatosEdicionTipoPrecio.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoPrecio!=null) {
				this.jTabbedPaneBusquedasTipoPrecio.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosTipoPrecio!=null) {
				this.jScrollPanelDatosTipoPrecio.setVisible(false);
			}
			
			if(this.jPanelPaginacionTipoPrecio!=null) {
				this.jPanelPaginacionTipoPrecio.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesTipoPrecio!=null) {
				this.jPanelParametrosReportesTipoPrecio.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionTipoPrecio!=null) {
				this.jScrollPanelDatosEdicionTipoPrecio.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoPrecio!=null) {
				this.jTabbedPaneBusquedasTipoPrecio.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTipoPrecio!=null) {
				this.jScrollPanelDatosTipoPrecio.setVisible(true);
			}
			
			if(this.jPanelPaginacionTipoPrecio!=null) {
				this.jPanelPaginacionTipoPrecio.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTipoPrecio!=null) {
				this.jPanelParametrosReportesTipoPrecio.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionTipoPrecio!=null) {
				this.jScrollPanelDatosEdicionTipoPrecio.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoPrecio!=null) {
				this.jTabbedPaneBusquedasTipoPrecio.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTipoPrecio!=null) {
				this.jScrollPanelDatosTipoPrecio.setVisible(true);
			}
			
			if(this.jPanelPaginacionTipoPrecio!=null) {
				this.jPanelPaginacionTipoPrecio.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTipoPrecio!=null) {
				this.jPanelParametrosReportesTipoPrecio.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionTipoPrecio!=null) {
				this.jScrollPanelDatosEdicionTipoPrecio.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoPrecio!=null) {
				this.jTabbedPaneBusquedasTipoPrecio.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTipoPrecio!=null) {
				this.jScrollPanelDatosTipoPrecio.setVisible(true);
			}
			
			if(this.jPanelPaginacionTipoPrecio!=null) {
				this.jPanelPaginacionTipoPrecio.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTipoPrecio!=null) {
				this.jPanelParametrosReportesTipoPrecio.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasTipoPrecio!=null) {
					this.jTabbedPaneBusquedasTipoPrecio.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesTipoPrecio!=null) {
				this.jPanelParametrosReportesTipoPrecio.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.tipoprecioSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoPrecio!=null) {
				this.jTabbedPaneBusquedasTipoPrecio.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesTipoPrecio!=null) {
				this.jPanelParametrosReportesTipoPrecio.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadBusquedaPorCodigo=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasTipoPrecio.remove(jPanelBusquedaPorCodigoTipoPrecio);}

			this.isVisibilidadBusquedaPorFechaDesde=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorFechaDesde) {this.jTabbedPaneBusquedasTipoPrecio.remove(jPanelBusquedaPorFechaDesdeTipoPrecio);}

			this.isVisibilidadBusquedaPorFechaHasta=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorFechaHasta) {this.jTabbedPaneBusquedasTipoPrecio.remove(jPanelBusquedaPorFechaHastaTipoPrecio);}

			this.isVisibilidadBusquedaPorNombre=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoPrecio.remove(jPanelBusquedaPorNombreTipoPrecio);}
		}
		
	}
	
	

	public String registrarSesionTipoPrecioParaPrecios() throws Exception {
		Boolean isPaginaPopupPrecio=false;

		try {

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.precioSessionBean==null) {
				this.jInternalFrameDetalleFormTipoPrecio.precioSessionBean=new PrecioSessionBean();
			}

			this.jInternalFrameDetalleFormTipoPrecio.precioSessionBean.setsPathNavegacionActual(tipoprecioSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PrecioConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoPrecio.precioSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupPrecio=this.jInternalFrameDetalleFormTipoPrecio.precioSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoPrecio.precioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.precioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePrecio(TipoPrecioConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoPrecio.precioSessionBean.setisBusquedaDesdeForeignKeySesionTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.precioSessionBean.setlidTipoPrecioActual(this.idTipoPrecioActual);

			tipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoPrecio(true);
			tipoprecioSessionBean.setlIdTipoPrecioActualForeignKey(this.idTipoPrecioActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoPrecioParaUtilidadTipoPrecioes() throws Exception {
		Boolean isPaginaPopupUtilidadTipoPrecio=false;

		try {

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioSessionBean==null) {
				this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioSessionBean=new UtilidadTipoPrecioSessionBean();
			}

			this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioSessionBean.setsPathNavegacionActual(tipoprecioSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+UtilidadTipoPrecioConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupUtilidadTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeUtilidadTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeUtilidadTipoPrecio(TipoPrecioConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.utilidadtipoprecioSessionBean.setlidTipoPrecioActual(this.idTipoPrecioActual);

			tipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoPrecio(true);
			tipoprecioSessionBean.setlIdTipoPrecioActualForeignKey(this.idTipoPrecioActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoPrecioParaPedidoPuntoVentas() throws Exception {
		Boolean isPaginaPopupPedidoPuntoVenta=false;

		try {

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaSessionBean==null) {
				this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaSessionBean=new PedidoPuntoVentaSessionBean();
			}

			this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaSessionBean.setsPathNavegacionActual(tipoprecioSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PedidoPuntoVentaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupPedidoPuntoVenta=this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePedidoPuntoVenta(true);
			this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePedidoPuntoVenta(TipoPrecioConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaSessionBean.setisBusquedaDesdeForeignKeySesionTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.pedidopuntoventaSessionBean.setlidTipoPrecioActual(this.idTipoPrecioActual);

			tipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoPrecio(true);
			tipoprecioSessionBean.setlIdTipoPrecioActualForeignKey(this.idTipoPrecioActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoPrecioParaParametroCarteraDefectos() throws Exception {
		Boolean isPaginaPopupParametroCarteraDefecto=false;

		try {

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoSessionBean==null) {
				this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoSessionBean.setsPathNavegacionActual(tipoprecioSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ParametroCarteraDefectoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupParametroCarteraDefecto=this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeParametroCarteraDefecto(true);
			this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeParametroCarteraDefecto(TipoPrecioConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoSessionBean.setisBusquedaDesdeForeignKeySesionTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.parametrocarteradefectoSessionBean.setlidTipoPrecioActual(this.idTipoPrecioActual);

			tipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoPrecio(true);
			tipoprecioSessionBean.setlIdTipoPrecioActualForeignKey(this.idTipoPrecioActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoPrecioParaDescuentoTipoPrecios() throws Exception {
		Boolean isPaginaPopupDescuentoTipoPrecio=false;

		try {

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioSessionBean==null) {
				this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioSessionBean=new DescuentoTipoPrecioSessionBean();
			}

			this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioSessionBean.setsPathNavegacionActual(tipoprecioSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DescuentoTipoPrecioConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDescuentoTipoPrecio=this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDescuentoTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDescuentoTipoPrecio(TipoPrecioConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.descuentotipoprecioSessionBean.setlidTipoPrecioActual(this.idTipoPrecioActual);

			tipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoPrecio(true);
			tipoprecioSessionBean.setlIdTipoPrecioActualForeignKey(this.idTipoPrecioActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoPrecioParaPoliticasClientes() throws Exception {
		Boolean isPaginaPopupPoliticasCliente=false;

		try {

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.politicasclienteSessionBean==null) {
				this.jInternalFrameDetalleFormTipoPrecio.politicasclienteSessionBean=new PoliticasClienteSessionBean();
			}

			this.jInternalFrameDetalleFormTipoPrecio.politicasclienteSessionBean.setsPathNavegacionActual(tipoprecioSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PoliticasClienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoPrecio.politicasclienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupPoliticasCliente=this.jInternalFrameDetalleFormTipoPrecio.politicasclienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoPrecio.politicasclienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePoliticasCliente(true);
			this.jInternalFrameDetalleFormTipoPrecio.politicasclienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePoliticasCliente(TipoPrecioConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoPrecio.politicasclienteSessionBean.setisBusquedaDesdeForeignKeySesionTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.politicasclienteSessionBean.setlidTipoPrecioActual(this.idTipoPrecioActual);

			tipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoPrecio(true);
			tipoprecioSessionBean.setlIdTipoPrecioActualForeignKey(this.idTipoPrecioActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoPrecioParaProformas() throws Exception {
		Boolean isPaginaPopupProforma=false;

		try {

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.proformaSessionBean==null) {
				this.jInternalFrameDetalleFormTipoPrecio.proformaSessionBean=new ProformaSessionBean();
			}

			this.jInternalFrameDetalleFormTipoPrecio.proformaSessionBean.setsPathNavegacionActual(tipoprecioSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProformaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoPrecio.proformaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupProforma=this.jInternalFrameDetalleFormTipoPrecio.proformaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoPrecio.proformaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProforma(true);
			this.jInternalFrameDetalleFormTipoPrecio.proformaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProforma(TipoPrecioConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoPrecio.proformaSessionBean.setisBusquedaDesdeForeignKeySesionTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.proformaSessionBean.setlidTipoPrecioActual(this.idTipoPrecioActual);

			tipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoPrecio(true);
			tipoprecioSessionBean.setlIdTipoPrecioActualForeignKey(this.idTipoPrecioActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoPrecioParaNotaCreditoSolis() throws Exception {
		Boolean isPaginaPopupNotaCreditoSoli=false;

		try {

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliSessionBean==null) {
				this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliSessionBean=new NotaCreditoSoliSessionBean();
			}

			this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliSessionBean.setsPathNavegacionActual(tipoprecioSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+NotaCreditoSoliConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupNotaCreditoSoli=this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeNotaCreditoSoli(true);
			this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeNotaCreditoSoli(TipoPrecioConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliSessionBean.setisBusquedaDesdeForeignKeySesionTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.notacreditosoliSessionBean.setlidTipoPrecioActual(this.idTipoPrecioActual);

			tipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoPrecio(true);
			tipoprecioSessionBean.setlIdTipoPrecioActualForeignKey(this.idTipoPrecioActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoPrecioParaConsignacions() throws Exception {
		Boolean isPaginaPopupConsignacion=false;

		try {

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.consignacionSessionBean==null) {
				this.jInternalFrameDetalleFormTipoPrecio.consignacionSessionBean=new ConsignacionSessionBean();
			}

			this.jInternalFrameDetalleFormTipoPrecio.consignacionSessionBean.setsPathNavegacionActual(tipoprecioSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ConsignacionConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoPrecio.consignacionSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupConsignacion=this.jInternalFrameDetalleFormTipoPrecio.consignacionSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoPrecio.consignacionSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeConsignacion(true);
			this.jInternalFrameDetalleFormTipoPrecio.consignacionSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeConsignacion(TipoPrecioConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoPrecio.consignacionSessionBean.setisBusquedaDesdeForeignKeySesionTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.consignacionSessionBean.setlidTipoPrecioActual(this.idTipoPrecioActual);

			tipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoPrecio(true);
			tipoprecioSessionBean.setlIdTipoPrecioActualForeignKey(this.idTipoPrecioActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoPrecioParaPedidoExpors() throws Exception {
		Boolean isPaginaPopupPedidoExpor=false;

		try {

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.pedidoexporSessionBean==null) {
				this.jInternalFrameDetalleFormTipoPrecio.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			this.jInternalFrameDetalleFormTipoPrecio.pedidoexporSessionBean.setsPathNavegacionActual(tipoprecioSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PedidoExporConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoPrecio.pedidoexporSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupPedidoExpor=this.jInternalFrameDetalleFormTipoPrecio.pedidoexporSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoPrecio.pedidoexporSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePedidoExpor(true);
			this.jInternalFrameDetalleFormTipoPrecio.pedidoexporSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePedidoExpor(TipoPrecioConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoPrecio.pedidoexporSessionBean.setisBusquedaDesdeForeignKeySesionTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.pedidoexporSessionBean.setlidTipoPrecioActual(this.idTipoPrecioActual);

			tipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoPrecio(true);
			tipoprecioSessionBean.setlIdTipoPrecioActualForeignKey(this.idTipoPrecioActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoPrecioParaServicioClientes() throws Exception {
		Boolean isPaginaPopupServicioCliente=false;

		try {

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.servicioclienteSessionBean==null) {
				this.jInternalFrameDetalleFormTipoPrecio.servicioclienteSessionBean=new ServicioClienteSessionBean();
			}

			this.jInternalFrameDetalleFormTipoPrecio.servicioclienteSessionBean.setsPathNavegacionActual(tipoprecioSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ServicioClienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoPrecio.servicioclienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupServicioCliente=this.jInternalFrameDetalleFormTipoPrecio.servicioclienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoPrecio.servicioclienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeServicioCliente(true);
			this.jInternalFrameDetalleFormTipoPrecio.servicioclienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeServicioCliente(TipoPrecioConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoPrecio.servicioclienteSessionBean.setisBusquedaDesdeForeignKeySesionTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.servicioclienteSessionBean.setlidTipoPrecioActual(this.idTipoPrecioActual);

			tipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoPrecio(true);
			tipoprecioSessionBean.setlIdTipoPrecioActualForeignKey(this.idTipoPrecioActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoPrecioParaFacturaPuntoVentas() throws Exception {
		Boolean isPaginaPopupFacturaPuntoVenta=false;

		try {

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaSessionBean==null) {
				this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaSessionBean=new FacturaPuntoVentaSessionBean();
			}

			this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaSessionBean.setsPathNavegacionActual(tipoprecioSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FacturaPuntoVentaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupFacturaPuntoVenta=this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFacturaPuntoVenta(true);
			this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFacturaPuntoVenta(TipoPrecioConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaSessionBean.setisBusquedaDesdeForeignKeySesionTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.facturapuntoventaSessionBean.setlidTipoPrecioActual(this.idTipoPrecioActual);

			tipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoPrecio(true);
			tipoprecioSessionBean.setlIdTipoPrecioActualForeignKey(this.idTipoPrecioActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoPrecioParaGuiaRemisiones() throws Exception {
		Boolean isPaginaPopupGuiaRemision=false;

		try {

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.guiaremisionSessionBean==null) {
				this.jInternalFrameDetalleFormTipoPrecio.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			this.jInternalFrameDetalleFormTipoPrecio.guiaremisionSessionBean.setsPathNavegacionActual(tipoprecioSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+GuiaRemisionConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoPrecio.guiaremisionSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupGuiaRemision=this.jInternalFrameDetalleFormTipoPrecio.guiaremisionSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoPrecio.guiaremisionSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeGuiaRemision(true);
			this.jInternalFrameDetalleFormTipoPrecio.guiaremisionSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeGuiaRemision(TipoPrecioConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoPrecio.guiaremisionSessionBean.setisBusquedaDesdeForeignKeySesionTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.guiaremisionSessionBean.setlidTipoPrecioActual(this.idTipoPrecioActual);

			tipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoPrecio(true);
			tipoprecioSessionBean.setlIdTipoPrecioActualForeignKey(this.idTipoPrecioActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoPrecioParaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.clienteSessionBean==null) {
				this.jInternalFrameDetalleFormTipoPrecio.clienteSessionBean=new ClienteSessionBean();
			}

			this.jInternalFrameDetalleFormTipoPrecio.clienteSessionBean.setsPathNavegacionActual(tipoprecioSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoPrecio.clienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupCliente=this.jInternalFrameDetalleFormTipoPrecio.clienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoPrecio.clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			this.jInternalFrameDetalleFormTipoPrecio.clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(TipoPrecioConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoPrecio.clienteSessionBean.setisBusquedaDesdeForeignKeySesionTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.clienteSessionBean.setlidTipoPrecioActual(this.idTipoPrecioActual);

			tipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoPrecio(true);
			tipoprecioSessionBean.setlIdTipoPrecioActualForeignKey(this.idTipoPrecioActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoPrecioParaNotaCreditoPuntoVentas() throws Exception {
		Boolean isPaginaPopupNotaCreditoPuntoVenta=false;

		try {

			if(this.tipoprecioSessionBean==null) {
				this.tipoprecioSessionBean=new TipoPrecioSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaSessionBean==null) {
				this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaSessionBean=new NotaCreditoPuntoVentaSessionBean();
			}

			this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaSessionBean.setsPathNavegacionActual(tipoprecioSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+NotaCreditoPuntoVentaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupNotaCreditoPuntoVenta=this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeNotaCreditoPuntoVenta(true);
			this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeNotaCreditoPuntoVenta(TipoPrecioConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaSessionBean.setisBusquedaDesdeForeignKeySesionTipoPrecio(true);
			this.jInternalFrameDetalleFormTipoPrecio.notacreditopuntoventaSessionBean.setlidTipoPrecioActual(this.idTipoPrecioActual);

			tipoprecioSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoPrecio(true);
			tipoprecioSessionBean.setlIdTipoPrecioActualForeignKey(this.idTipoPrecioActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//TipoPrecioSessionBean tipoprecioSessionBean=new TipoPrecioSessionBean();
		
		if(this.tipoprecioSessionBean==null) {
			this.tipoprecioSessionBean=new TipoPrecioSessionBean();
		}
		
		this.tipoprecioSessionBean.setsUltimaBusquedaTipoPrecio(this.getsAccionBusqueda());
		this.tipoprecioSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.tipoprecioSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("BusquedaPorCodigo")) {
			tipoprecioSessionBean.setcodigo(this.getcodigoBusquedaPorCodigo());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorFechaDesde")) {
			tipoprecioSessionBean.setfecha_desde(this.getfecha_desdeBusquedaPorFechaDesde());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorFechaHasta")) {
			tipoprecioSessionBean.setfecha_hasta(this.getfecha_hastaBusquedaPorFechaHasta());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
			tipoprecioSessionBean.setnombre(this.getnombreBusquedaPorNombre());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			tipoprecioSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//TipoPrecioSessionBean tipoprecioSessionBean=new TipoPrecioSessionBean();
		
		if(this.tipoprecioSessionBean==null) {
			this.tipoprecioSessionBean=new TipoPrecioSessionBean();
		}
		
		if(this.tipoprecioSessionBean.getsUltimaBusquedaTipoPrecio()!=null&&!this.tipoprecioSessionBean.getsUltimaBusquedaTipoPrecio().equals("")) {
			this.setsAccionBusqueda(tipoprecioSessionBean.getsUltimaBusquedaTipoPrecio());
			this.setiNumeroPaginacion(tipoprecioSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(tipoprecioSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("BusquedaPorCodigo")) {
				this.setcodigoBusquedaPorCodigo(tipoprecioSessionBean.getcodigo());
				tipoprecioSessionBean.setcodigo("");
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorFechaDesde")) {
				this.setfecha_desdeBusquedaPorFechaDesde(tipoprecioSessionBean.getfecha_desde());
				tipoprecioSessionBean.setfecha_desde(new Date());
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorFechaHasta")) {
				this.setfecha_hastaBusquedaPorFechaHasta(tipoprecioSessionBean.getfecha_hasta());
				tipoprecioSessionBean.setfecha_hasta(new Date());
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
				this.setnombreBusquedaPorNombre(tipoprecioSessionBean.getnombre());
				tipoprecioSessionBean.setnombre("");
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(tipoprecioSessionBean.getid_empresa());
				tipoprecioSessionBean.setid_empresa(-1L);
			}
		}
		
		this.tipoprecioSessionBean.setsUltimaBusquedaTipoPrecio("");
		this.tipoprecioSessionBean.setiNumeroPaginacion(TipoPrecioConstantesFunciones.INUMEROPAGINACION);
		this.tipoprecioSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaTipoPrecio(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioTipoPrecio() {
		this.updateBorderResaltarBusquedasFormularioTipoPrecio();
		this.updateVisibilidadBusquedasFormularioTipoPrecio();
		this.updateHabilitarBusquedasFormularioTipoPrecio();
	}
	
	public void updateBorderResaltarBusquedasFormularioTipoPrecio() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasTipoPrecio.getComponents().length>0) {
	

		if(this.tipoprecioConstantesFunciones.resaltarBusquedaPorCodigoTipoPrecio!=null) {
			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorCodigoTipoPrecio);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);
				jPanel.setBorder(this.tipoprecioConstantesFunciones.resaltarBusquedaPorCodigoTipoPrecio);
			}
		}

		if(this.tipoprecioConstantesFunciones.resaltarBusquedaPorFechaDesdeTipoPrecio!=null) {
			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorFechaDesdeTipoPrecio);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);
				jPanel.setBorder(this.tipoprecioConstantesFunciones.resaltarBusquedaPorFechaDesdeTipoPrecio);
			}
		}

		if(this.tipoprecioConstantesFunciones.resaltarBusquedaPorFechaHastaTipoPrecio!=null) {
			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorFechaHastaTipoPrecio);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);
				jPanel.setBorder(this.tipoprecioConstantesFunciones.resaltarBusquedaPorFechaHastaTipoPrecio);
			}
		}

		if(this.tipoprecioConstantesFunciones.resaltarBusquedaPorNombreTipoPrecio!=null) {
			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorNombreTipoPrecio);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);
				jPanel.setBorder(this.tipoprecioConstantesFunciones.resaltarBusquedaPorNombreTipoPrecio);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioTipoPrecio() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasTipoPrecio.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorCodigoTipoPrecio);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.tipoprecioConstantesFunciones.mostrarBusquedaPorCodigoTipoPrecio);
			if(!this.tipoprecioConstantesFunciones.mostrarBusquedaPorCodigoTipoPrecio && index>-1) {
				this.jTabbedPaneBusquedasTipoPrecio.remove(index);
			}

			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorFechaDesdeTipoPrecio);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.tipoprecioConstantesFunciones.mostrarBusquedaPorFechaDesdeTipoPrecio);
			if(!this.tipoprecioConstantesFunciones.mostrarBusquedaPorFechaDesdeTipoPrecio && index>-1) {
				this.jTabbedPaneBusquedasTipoPrecio.remove(index);
			}

			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorFechaHastaTipoPrecio);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.tipoprecioConstantesFunciones.mostrarBusquedaPorFechaHastaTipoPrecio);
			if(!this.tipoprecioConstantesFunciones.mostrarBusquedaPorFechaHastaTipoPrecio && index>-1) {
				this.jTabbedPaneBusquedasTipoPrecio.remove(index);
			}

			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorNombreTipoPrecio);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.tipoprecioConstantesFunciones.mostrarBusquedaPorNombreTipoPrecio);
			if(!this.tipoprecioConstantesFunciones.mostrarBusquedaPorNombreTipoPrecio && index>-1) {
				this.jTabbedPaneBusquedasTipoPrecio.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioTipoPrecio() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasTipoPrecio.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorCodigoTipoPrecio);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.tipoprecioConstantesFunciones.activarBusquedaPorCodigoTipoPrecio);
				this.jTabbedPaneBusquedasTipoPrecio.setEnabledAt(index,this.tipoprecioConstantesFunciones.activarBusquedaPorCodigoTipoPrecio);
			}

			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorFechaDesdeTipoPrecio);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.tipoprecioConstantesFunciones.activarBusquedaPorFechaDesdeTipoPrecio);
				this.jTabbedPaneBusquedasTipoPrecio.setEnabledAt(index,this.tipoprecioConstantesFunciones.activarBusquedaPorFechaDesdeTipoPrecio);
			}

			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorFechaHastaTipoPrecio);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.tipoprecioConstantesFunciones.activarBusquedaPorFechaHastaTipoPrecio);
				this.jTabbedPaneBusquedasTipoPrecio.setEnabledAt(index,this.tipoprecioConstantesFunciones.activarBusquedaPorFechaHastaTipoPrecio);
			}

			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorNombreTipoPrecio);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.tipoprecioConstantesFunciones.activarBusquedaPorNombreTipoPrecio);
				this.jTabbedPaneBusquedasTipoPrecio.setEnabledAt(index,this.tipoprecioConstantesFunciones.activarBusquedaPorNombreTipoPrecio);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaTipoPrecio(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("BusquedaPorCodigo")) {
			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorCodigoTipoPrecio);

			this.jTabbedPaneBusquedasTipoPrecio.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);

			this.tipoprecioConstantesFunciones.setResaltarBusquedaPorCodigoTipoPrecio(resaltar);

			jPanel.setBorder(this.tipoprecioConstantesFunciones.resaltarBusquedaPorCodigoTipoPrecio);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorFechaDesde")) {
			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorFechaDesdeTipoPrecio);

			this.jTabbedPaneBusquedasTipoPrecio.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);

			this.tipoprecioConstantesFunciones.setResaltarBusquedaPorFechaDesdeTipoPrecio(resaltar);

			jPanel.setBorder(this.tipoprecioConstantesFunciones.resaltarBusquedaPorFechaDesdeTipoPrecio);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorFechaHasta")) {
			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorFechaHastaTipoPrecio);

			this.jTabbedPaneBusquedasTipoPrecio.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);

			this.tipoprecioConstantesFunciones.setResaltarBusquedaPorFechaHastaTipoPrecio(resaltar);

			jPanel.setBorder(this.tipoprecioConstantesFunciones.resaltarBusquedaPorFechaHastaTipoPrecio);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorNombre")) {
			index= this.jTabbedPaneBusquedasTipoPrecio.indexOfComponent(this.jPanelBusquedaPorNombreTipoPrecio);

			this.jTabbedPaneBusquedasTipoPrecio.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoPrecio.getComponent(index);

			this.tipoprecioConstantesFunciones.setResaltarBusquedaPorNombreTipoPrecio(resaltar);

			jPanel.setBorder(this.tipoprecioConstantesFunciones.resaltarBusquedaPorNombreTipoPrecio);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarTipoPrecio.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioTipoPrecio() throws Exception {

		if(this.jInternalFrameDetalleFormTipoPrecio==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioTipoPrecio();
		this.updateVisibilidadResaltarControlesFormularioTipoPrecio();
		this.updateHabilitarResaltarControlesFormularioTipoPrecio();
		
	}
	
	public void updateBorderResaltarControlesFormularioTipoPrecio() throws Exception {
		if(this.jInternalFrameDetalleFormTipoPrecio==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.tipoprecioConstantesFunciones.resaltaridTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio!=null) {this.jInternalFrameDetalleFormTipoPrecio.jLabelidTipoPrecio.setBorder(this.tipoprecioConstantesFunciones.resaltaridTipoPrecio);}
		if(this.tipoprecioConstantesFunciones.resaltarid_empresaTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio!=null) {this.jInternalFrameDetalleFormTipoPrecio.jComboBoxid_empresaTipoPrecio.setBorder(this.tipoprecioConstantesFunciones.resaltarid_empresaTipoPrecio);}
		if(this.tipoprecioConstantesFunciones.resaltarcodigoTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio!=null) {this.jInternalFrameDetalleFormTipoPrecio.jTextAreacodigoTipoPrecio.setBorder(this.tipoprecioConstantesFunciones.resaltarcodigoTipoPrecio);}
		if(this.tipoprecioConstantesFunciones.resaltarnombreTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio!=null) {this.jInternalFrameDetalleFormTipoPrecio.jTextAreanombreTipoPrecio.setBorder(this.tipoprecioConstantesFunciones.resaltarnombreTipoPrecio);}
		if(this.tipoprecioConstantesFunciones.resaltarfecha_desdeTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio!=null) {this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_desdeTipoPrecio.setBorder(this.tipoprecioConstantesFunciones.resaltarfecha_desdeTipoPrecio);}
		if(this.tipoprecioConstantesFunciones.resaltarfecha_hastaTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio!=null) {this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_hastaTipoPrecio.setBorder(this.tipoprecioConstantesFunciones.resaltarfecha_hastaTipoPrecio);}
		if(this.tipoprecioConstantesFunciones.resaltarmontoTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio!=null) {this.jInternalFrameDetalleFormTipoPrecio.jTextFieldmontoTipoPrecio.setBorder(this.tipoprecioConstantesFunciones.resaltarmontoTipoPrecio);}
		if(this.tipoprecioConstantesFunciones.resaltaresta_activoTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio!=null) {this.jInternalFrameDetalleFormTipoPrecio.jCheckBoxesta_activoTipoPrecio.setBorderPainted(true);this.jInternalFrameDetalleFormTipoPrecio.jCheckBoxesta_activoTipoPrecio.setBorder(this.tipoprecioConstantesFunciones.resaltaresta_activoTipoPrecio);}
		if(this.tipoprecioConstantesFunciones.resaltardescripcionTipoPrecio!=null && this.jInternalFrameDetalleFormTipoPrecio!=null) {this.jInternalFrameDetalleFormTipoPrecio.jTextAreadescripcionTipoPrecio.setBorder(this.tipoprecioConstantesFunciones.resaltardescripcionTipoPrecio);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioTipoPrecio() throws Exception {		
		if(this.jInternalFrameDetalleFormTipoPrecio==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
	
		//this.jInternalFrameDetalleFormTipoPrecio.jLabelidTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostraridTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jPanelidTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostraridTipoPrecio);
		//this.jInternalFrameDetalleFormTipoPrecio.jComboBoxid_empresaTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostrarid_empresaTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jPanelid_empresaTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostrarid_empresaTipoPrecio);
		//this.jInternalFrameDetalleFormTipoPrecio.jTextAreacodigoTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostrarcodigoTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jPanelcodigoTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostrarcodigoTipoPrecio);
		//this.jInternalFrameDetalleFormTipoPrecio.jTextAreanombreTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostrarnombreTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jPanelnombreTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostrarnombreTipoPrecio);
		//this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_desdeTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostrarfecha_desdeTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jPanelfecha_desdeTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostrarfecha_desdeTipoPrecio);
		//this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_hastaTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostrarfecha_hastaTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jPanelfecha_hastaTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostrarfecha_hastaTipoPrecio);
		//this.jInternalFrameDetalleFormTipoPrecio.jTextFieldmontoTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostrarmontoTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jPanelmontoTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostrarmontoTipoPrecio);
		//this.jInternalFrameDetalleFormTipoPrecio.jCheckBoxesta_activoTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostraresta_activoTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jPanelesta_activoTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostraresta_activoTipoPrecio);
		//this.jInternalFrameDetalleFormTipoPrecio.jTextAreadescripcionTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostrardescripcionTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jPaneldescripcionTipoPrecio.setVisible(this.tipoprecioConstantesFunciones.mostrardescripcionTipoPrecio);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioTipoPrecio() throws Exception {
		if(this.jInternalFrameDetalleFormTipoPrecio==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormTipoPrecio!=null) {
	
		this.jInternalFrameDetalleFormTipoPrecio.jLabelidTipoPrecio.setEnabled(this.tipoprecioConstantesFunciones.activaridTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jComboBoxid_empresaTipoPrecio.setEnabled(this.tipoprecioConstantesFunciones.activarid_empresaTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jTextAreacodigoTipoPrecio.setEnabled(this.tipoprecioConstantesFunciones.activarcodigoTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jTextAreanombreTipoPrecio.setEnabled(this.tipoprecioConstantesFunciones.activarnombreTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_desdeTipoPrecio.setEnabled(this.tipoprecioConstantesFunciones.activarfecha_desdeTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jDateChooserfecha_hastaTipoPrecio.setEnabled(this.tipoprecioConstantesFunciones.activarfecha_hastaTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jTextFieldmontoTipoPrecio.setEnabled(this.tipoprecioConstantesFunciones.activarmontoTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jCheckBoxesta_activoTipoPrecio.setEnabled(this.tipoprecioConstantesFunciones.activaresta_activoTipoPrecio);
		this.jInternalFrameDetalleFormTipoPrecio.jTextAreadescripcionTipoPrecio.setEnabled(this.tipoprecioConstantesFunciones.activardescripcionTipoPrecio);
		}
	}
	
		
}