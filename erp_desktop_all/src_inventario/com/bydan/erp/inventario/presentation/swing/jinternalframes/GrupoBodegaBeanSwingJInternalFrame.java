/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.inventario.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.inventario.util.GrupoBodegaConstantesFunciones;
import com.bydan.erp.inventario.util.GrupoBodegaParameterReturnGeneral;
//import com.bydan.erp.inventario.util.GrupoBodegaParameterGeneral;
//import com.bydan.erp.inventario.presentation.report.source.GrupoBodegaBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.inventario.resources.reportes.AuxiliarReportes;


import com.bydan.erp.inventario.util.*;
import com.bydan.erp.inventario.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.inventario.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class GrupoBodegaBeanSwingJInternalFrame extends GrupoBodegaJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(GrupoBodegaBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<GrupoBodega> grupobodegaValidator = new ClassValidator<GrupoBodega>(GrupoBodega.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public GrupoBodega grupobodega;	
	public GrupoBodega grupobodegaAux;
	public GrupoBodega grupobodegaAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public GrupoBodega grupobodegaTotales;
	public Long idGrupoBodegaActual;
	public Long iIdNuevoGrupoBodega=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboPais="";

	public List<Pais> paissForeignKey;

	public List<Pais> getpaissForeignKey() {
		return paissForeignKey;
	}

	public void setpaissForeignKey(List<Pais> paissForeignKey) {
		this.paissForeignKey = paissForeignKey;
	}

	//OBJETO FK ACTUAL
	public Pais paisForeignKey;

	public Pais getpaisForeignKey() {
		return paisForeignKey;
	}

	public void setpaisForeignKey(Pais paisForeignKey) {
		this.paisForeignKey = paisForeignKey;
	}

	public String sFinalQueryComboCiudad="";

	public List<Ciudad> ciudadsForeignKey;

	public List<Ciudad> getciudadsForeignKey() {
		return ciudadsForeignKey;
	}

	public void setciudadsForeignKey(List<Ciudad> ciudadsForeignKey) {
		this.ciudadsForeignKey = ciudadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ciudad ciudadForeignKey;

	public Ciudad getciudadForeignKey() {
		return ciudadForeignKey;
	}

	public void setciudadForeignKey(Ciudad ciudadForeignKey) {
		this.ciudadForeignKey = ciudadForeignKey;
	}

	public String sFinalQueryComboCentroCosto="";

	public List<CentroCosto> centrocostosForeignKey;

	public List<CentroCosto> getcentrocostosForeignKey() {
		return centrocostosForeignKey;
	}

	public void setcentrocostosForeignKey(List<CentroCosto> centrocostosForeignKey) {
		this.centrocostosForeignKey = centrocostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroCosto centrocostoForeignKey;

	public CentroCosto getcentrocostoForeignKey() {
		return centrocostoForeignKey;
	}

	public void setcentrocostoForeignKey(CentroCosto centrocostoForeignKey) {
		this.centrocostoForeignKey = centrocostoForeignKey;
	}

	public String sFinalQueryComboEmpleado="";

	public List<Empleado> empleadosForeignKey;

	public List<Empleado> getempleadosForeignKey() {
		return empleadosForeignKey;
	}

	public void setempleadosForeignKey(List<Empleado> empleadosForeignKey) {
		this.empleadosForeignKey = empleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoForeignKey;

	public Empleado getempleadoForeignKey() {
		return empleadoForeignKey;
	}

	public void setempleadoForeignKey(Empleado empleadoForeignKey) {
		this.empleadoForeignKey = empleadoForeignKey;
	}

	public String sFinalQueryComboCuentaContableInventario="";

	public List<CuentaContable> cuentacontableinventariosForeignKey;

	public List<CuentaContable> getcuentacontableinventariosForeignKey() {
		return cuentacontableinventariosForeignKey;
	}

	public void setcuentacontableinventariosForeignKey(List<CuentaContable> cuentacontableinventariosForeignKey) {
		this.cuentacontableinventariosForeignKey = cuentacontableinventariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableinventarioForeignKey;

	public CuentaContable getcuentacontableinventarioForeignKey() {
		return cuentacontableinventarioForeignKey;
	}

	public void setcuentacontableinventarioForeignKey(CuentaContable cuentacontableinventarioForeignKey) {
		this.cuentacontableinventarioForeignKey = cuentacontableinventarioForeignKey;
	}

	public String sFinalQueryComboCuentaContableCosto="";

	public List<CuentaContable> cuentacontablecostosForeignKey;

	public List<CuentaContable> getcuentacontablecostosForeignKey() {
		return cuentacontablecostosForeignKey;
	}

	public void setcuentacontablecostosForeignKey(List<CuentaContable> cuentacontablecostosForeignKey) {
		this.cuentacontablecostosForeignKey = cuentacontablecostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontablecostoForeignKey;

	public CuentaContable getcuentacontablecostoForeignKey() {
		return cuentacontablecostoForeignKey;
	}

	public void setcuentacontablecostoForeignKey(CuentaContable cuentacontablecostoForeignKey) {
		this.cuentacontablecostoForeignKey = cuentacontablecostoForeignKey;
	}

	public String sFinalQueryComboCuentaContableVenta="";

	public List<CuentaContable> cuentacontableventasForeignKey;

	public List<CuentaContable> getcuentacontableventasForeignKey() {
		return cuentacontableventasForeignKey;
	}

	public void setcuentacontableventasForeignKey(List<CuentaContable> cuentacontableventasForeignKey) {
		this.cuentacontableventasForeignKey = cuentacontableventasForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableventaForeignKey;

	public CuentaContable getcuentacontableventaForeignKey() {
		return cuentacontableventaForeignKey;
	}

	public void setcuentacontableventaForeignKey(CuentaContable cuentacontableventaForeignKey) {
		this.cuentacontableventaForeignKey = cuentacontableventaForeignKey;
	}

	public String sFinalQueryComboCuentaContableDescuento="";

	public List<CuentaContable> cuentacontabledescuentosForeignKey;

	public List<CuentaContable> getcuentacontabledescuentosForeignKey() {
		return cuentacontabledescuentosForeignKey;
	}

	public void setcuentacontabledescuentosForeignKey(List<CuentaContable> cuentacontabledescuentosForeignKey) {
		this.cuentacontabledescuentosForeignKey = cuentacontabledescuentosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontabledescuentoForeignKey;

	public CuentaContable getcuentacontabledescuentoForeignKey() {
		return cuentacontabledescuentoForeignKey;
	}

	public void setcuentacontabledescuentoForeignKey(CuentaContable cuentacontabledescuentoForeignKey) {
		this.cuentacontabledescuentoForeignKey = cuentacontabledescuentoForeignKey;
	}

	public String sFinalQueryComboCuentaContableDevolucion="";

	public List<CuentaContable> cuentacontabledevolucionsForeignKey;

	public List<CuentaContable> getcuentacontabledevolucionsForeignKey() {
		return cuentacontabledevolucionsForeignKey;
	}

	public void setcuentacontabledevolucionsForeignKey(List<CuentaContable> cuentacontabledevolucionsForeignKey) {
		this.cuentacontabledevolucionsForeignKey = cuentacontabledevolucionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontabledevolucionForeignKey;

	public CuentaContable getcuentacontabledevolucionForeignKey() {
		return cuentacontabledevolucionForeignKey;
	}

	public void setcuentacontabledevolucionForeignKey(CuentaContable cuentacontabledevolucionForeignKey) {
		this.cuentacontabledevolucionForeignKey = cuentacontabledevolucionForeignKey;
	}

	public String sFinalQueryComboCuentaContableDebito="";

	public List<CuentaContable> cuentacontabledebitosForeignKey;

	public List<CuentaContable> getcuentacontabledebitosForeignKey() {
		return cuentacontabledebitosForeignKey;
	}

	public void setcuentacontabledebitosForeignKey(List<CuentaContable> cuentacontabledebitosForeignKey) {
		this.cuentacontabledebitosForeignKey = cuentacontabledebitosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontabledebitoForeignKey;

	public CuentaContable getcuentacontabledebitoForeignKey() {
		return cuentacontabledebitoForeignKey;
	}

	public void setcuentacontabledebitoForeignKey(CuentaContable cuentacontabledebitoForeignKey) {
		this.cuentacontabledebitoForeignKey = cuentacontabledebitoForeignKey;
	}

	public String sFinalQueryComboCuentaContableCredito="";

	public List<CuentaContable> cuentacontablecreditosForeignKey;

	public List<CuentaContable> getcuentacontablecreditosForeignKey() {
		return cuentacontablecreditosForeignKey;
	}

	public void setcuentacontablecreditosForeignKey(List<CuentaContable> cuentacontablecreditosForeignKey) {
		this.cuentacontablecreditosForeignKey = cuentacontablecreditosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontablecreditoForeignKey;

	public CuentaContable getcuentacontablecreditoForeignKey() {
		return cuentacontablecreditoForeignKey;
	}

	public void setcuentacontablecreditoForeignKey(CuentaContable cuentacontablecreditoForeignKey) {
		this.cuentacontablecreditoForeignKey = cuentacontablecreditoForeignKey;
	}

	public String sFinalQueryComboCuentaContableProduccion="";

	public List<CuentaContable> cuentacontableproduccionsForeignKey;

	public List<CuentaContable> getcuentacontableproduccionsForeignKey() {
		return cuentacontableproduccionsForeignKey;
	}

	public void setcuentacontableproduccionsForeignKey(List<CuentaContable> cuentacontableproduccionsForeignKey) {
		this.cuentacontableproduccionsForeignKey = cuentacontableproduccionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableproduccionForeignKey;

	public CuentaContable getcuentacontableproduccionForeignKey() {
		return cuentacontableproduccionForeignKey;
	}

	public void setcuentacontableproduccionForeignKey(CuentaContable cuentacontableproduccionForeignKey) {
		this.cuentacontableproduccionForeignKey = cuentacontableproduccionForeignKey;
	}

	public String sFinalQueryComboCuentaContableBonifica="";

	public List<CuentaContable> cuentacontablebonificasForeignKey;

	public List<CuentaContable> getcuentacontablebonificasForeignKey() {
		return cuentacontablebonificasForeignKey;
	}

	public void setcuentacontablebonificasForeignKey(List<CuentaContable> cuentacontablebonificasForeignKey) {
		this.cuentacontablebonificasForeignKey = cuentacontablebonificasForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontablebonificaForeignKey;

	public CuentaContable getcuentacontablebonificaForeignKey() {
		return cuentacontablebonificaForeignKey;
	}

	public void setcuentacontablebonificaForeignKey(CuentaContable cuentacontablebonificaForeignKey) {
		this.cuentacontablebonificaForeignKey = cuentacontablebonificaForeignKey;
	}

	public String sFinalQueryComboCuentaContableCostoBonifica="";

	public List<CuentaContable> cuentacontablecostobonificasForeignKey;

	public List<CuentaContable> getcuentacontablecostobonificasForeignKey() {
		return cuentacontablecostobonificasForeignKey;
	}

	public void setcuentacontablecostobonificasForeignKey(List<CuentaContable> cuentacontablecostobonificasForeignKey) {
		this.cuentacontablecostobonificasForeignKey = cuentacontablecostobonificasForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontablecostobonificaForeignKey;

	public CuentaContable getcuentacontablecostobonificaForeignKey() {
		return cuentacontablecostobonificaForeignKey;
	}

	public void setcuentacontablecostobonificaForeignKey(CuentaContable cuentacontablecostobonificaForeignKey) {
		this.cuentacontablecostobonificaForeignKey = cuentacontablecostobonificaForeignKey;
	}

		
	
	
	
	
	

	public Boolean isTienePermisosBodega=false;

	public Boolean getIsTienePermisosBodega() {
		return isTienePermisosBodega;
	}

	public void setIsTienePermisosBodega(Boolean isTienePermisosBodega) {
		this.isTienePermisosBodega= isTienePermisosBodega;
	}


	public Boolean isTienePermisosParametroInventarioDefecto=false;

	public Boolean getIsTienePermisosParametroInventarioDefecto() {
		return isTienePermisosParametroInventarioDefecto;
	}

	public void setIsTienePermisosParametroInventarioDefecto(Boolean isTienePermisosParametroInventarioDefecto) {
		this.isTienePermisosParametroInventarioDefecto= isTienePermisosParametroInventarioDefecto;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoGrupoBodega;
	public Boolean isPermisoNuevoGrupoBodega;
	public Boolean isPermisoActualizarGrupoBodega;
	public Boolean isPermisoActualizarOriginalGrupoBodega;
	public Boolean isPermisoEliminarGrupoBodega;
	public Boolean isPermisoGuardarCambiosGrupoBodega;
	public Boolean isPermisoConsultaGrupoBodega;
	public Boolean isPermisoBusquedaGrupoBodega;
	public Boolean isPermisoReporteGrupoBodega;
	public Boolean isPermisoPaginacionMedioGrupoBodega;
	public Boolean isPermisoPaginacionAltoGrupoBodega;
	public Boolean isPermisoPaginacionTodoGrupoBodega;
	public Boolean isPermisoCopiarGrupoBodega;
	public Boolean isPermisoVerFormGrupoBodega;
	public Boolean isPermisoDuplicarGrupoBodega;
	public Boolean isPermisoOrdenGrupoBodega;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public GrupoBodegaParameterReturnGeneral grupobodegaReturnGeneral;
	public GrupoBodegaParameterReturnGeneral grupobodegaParameterGeneral;
	
	

	public BodegaLogic bodegaLogic=null;

	public BodegaLogic getBodegaLogic() {
		return bodegaLogic;
	}

	public void setBodegaLogic(BodegaLogic bodegaLogic) {
		this.bodegaLogic = bodegaLogic;
	}


	public ParametroInventarioDefectoLogic parametroinventariodefectoLogic=null;

	public ParametroInventarioDefectoLogic getParametroInventarioDefectoLogic() {
		return parametroinventariodefectoLogic;
	}

	public void setParametroInventarioDefectoLogic(ParametroInventarioDefectoLogic parametroinventariodefectoLogic) {
		this.parametroinventariodefectoLogic = parametroinventariodefectoLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoGrupoBodega=false;
	public Boolean esParaAccionDesdeFormularioGrupoBodega=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected GrupoBodegaSessionBeanAdditional grupobodegaSessionBeanAdditional=null;
	
	public GrupoBodegaSessionBeanAdditional getGrupoBodegaSessionBeanAdditional() {
		return this.grupobodegaSessionBeanAdditional;
	}
	
	public void setGrupoBodegaSessionBeanAdditional(GrupoBodegaSessionBeanAdditional grupobodegaSessionBeanAdditional) {
		try {
			this.grupobodegaSessionBeanAdditional=grupobodegaSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected GrupoBodegaBeanSwingJInternalFrameAdditional grupobodegaBeanSwingJInternalFrameAdditional=null;
	//public class GrupoBodegaBeanSwingJInternalFrame
	
	public GrupoBodegaBeanSwingJInternalFrameAdditional getGrupoBodegaBeanSwingJInternalFrameAdditional() {
		return this.grupobodegaBeanSwingJInternalFrameAdditional;
	}
	
	public void setGrupoBodegaBeanSwingJInternalFrameAdditional(GrupoBodegaBeanSwingJInternalFrameAdditional grupobodegaBeanSwingJInternalFrameAdditional) {
		try {
			this.grupobodegaBeanSwingJInternalFrameAdditional=grupobodegaBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public GrupoBodegaLogic grupobodegaLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public GrupoBodega grupobodegaBean;
	public GrupoBodegaConstantesFunciones grupobodegaConstantesFunciones;
	//public GrupoBodegaParameterReturnGeneral grupobodegaReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public PaisLogic paisLogic;
	public CiudadLogic ciudadLogic;
	public CentroCostoLogic centrocostoLogic;
	public EmpleadoLogic empleadoLogic;
	public CuentaContableLogic cuentacontableinventarioLogic;
	public CuentaContableLogic cuentacontablecostoLogic;
	public CuentaContableLogic cuentacontableventaLogic;
	public CuentaContableLogic cuentacontabledescuentoLogic;
	public CuentaContableLogic cuentacontabledevolucionLogic;
	public CuentaContableLogic cuentacontabledebitoLogic;
	public CuentaContableLogic cuentacontablecreditoLogic;
	public CuentaContableLogic cuentacontableproduccionLogic;
	public CuentaContableLogic cuentacontablebonificaLogic;
	public CuentaContableLogic cuentacontablecostobonificaLogic;
	
	//PARAMETROS
	
	
	//public List<GrupoBodega> grupobodegas;	
	//public List<GrupoBodega> grupobodegasEliminados;
	//public List<GrupoBodega> grupobodegasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoGrupoBodega=false;
	public Boolean isVisibilidadCeldaDuplicarGrupoBodega=true;
	public Boolean isVisibilidadCeldaCopiarGrupoBodega=true;
	public Boolean isVisibilidadCeldaVerFormGrupoBodega=true;
	public Boolean isVisibilidadCeldaOrdenGrupoBodega=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesGrupoBodega=false;
	public Boolean isVisibilidadCeldaModificarGrupoBodega=false;
	public Boolean isVisibilidadCeldaActualizarGrupoBodega=false;
	public Boolean isVisibilidadCeldaEliminarGrupoBodega=false;
	public Boolean isVisibilidadCeldaCancelarGrupoBodega=false;
	public Boolean isVisibilidadCeldaGuardarGrupoBodega=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosGrupoBodega=false;	
	
	
	public Boolean isVisibilidadBusquedaPorCodigo=false;
	public Boolean isVisibilidadBusquedaPorNombre=false;
	public Boolean isVisibilidadBusquedaPorRuc=false;
	public Boolean isVisibilidadBusquedaPorTelefono=false;
	public Boolean isVisibilidadFK_IdCentroCosto=false;
	public Boolean isVisibilidadFK_IdCiudad=false;
	public Boolean isVisibilidadFK_IdCuentaContableBonifica=false;
	public Boolean isVisibilidadFK_IdCuentaContableCosto=false;
	public Boolean isVisibilidadFK_IdCuentaContableCostoBonifica=false;
	public Boolean isVisibilidadFK_IdCuentaContableCredito=false;
	public Boolean isVisibilidadFK_IdCuentaContableDebito=false;
	public Boolean isVisibilidadFK_IdCuentaContableDescuento=false;
	public Boolean isVisibilidadFK_IdCuentaContableDevolucion=false;
	public Boolean isVisibilidadFK_IdCuentaContableInventario=false;
	public Boolean isVisibilidadFK_IdCuentaContableProduccion=false;
	public Boolean isVisibilidadFK_IdCuentaContableVenta=false;
	public Boolean isVisibilidadFK_IdEmpleado=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdPais=false;
	
	public Long getiIdNuevoGrupoBodega() {
		return this.iIdNuevoGrupoBodega;
	}

	public void setiIdNuevoGrupoBodega(Long iIdNuevoGrupoBodega) {
		this.iIdNuevoGrupoBodega = iIdNuevoGrupoBodega;
	}
	
	public Long getidGrupoBodegaActual() {
		return this.idGrupoBodegaActual;
	}

	public void setidGrupoBodegaActual(Long idGrupoBodegaActual) {
		this.idGrupoBodegaActual = idGrupoBodegaActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public GrupoBodega getgrupobodega() {
		return this.grupobodega;
	}

	public void setgrupobodega(GrupoBodega grupobodega) {
		this.grupobodega = grupobodega;
	}
	
	public GrupoBodega getgrupobodegaAux() {
		return this.grupobodegaAux;
	}

	public void setgrupobodegaAux(GrupoBodega grupobodegaAux) {
		this.grupobodegaAux = grupobodegaAux;
	}				
	
	public GrupoBodega getgrupobodegaAnterior() {
		return this.grupobodegaAnterior;
	}

	public void setgrupobodegaAnterior(GrupoBodega grupobodegaAnterior) {
		this.grupobodegaAnterior = grupobodegaAnterior;
	}	
	
	public GrupoBodega getgrupobodegaTotales() {
		return this.grupobodegaTotales;
	}

	public void setgrupobodegaTotales(GrupoBodega grupobodegaTotales) {
		this.grupobodegaTotales = grupobodegaTotales;
	}	
	
	public GrupoBodega getgrupobodegaBean() {
		return this.grupobodegaBean;
	}

	public void setgrupobodegaBean(GrupoBodega grupobodegaBean) {
		this.grupobodegaBean = grupobodegaBean;
	}	
	
	public GrupoBodegaParameterReturnGeneral getgrupobodegaReturnGeneral() {
		return this.grupobodegaReturnGeneral;
	}

	public void setgrupobodegaReturnGeneral(GrupoBodegaParameterReturnGeneral grupobodegaReturnGeneral) {
		this.grupobodegaReturnGeneral = grupobodegaReturnGeneral;
	}	
	
	
	public String codigoBusquedaPorCodigo="";

	public String getcodigoBusquedaPorCodigo() {
		return this.codigoBusquedaPorCodigo;
	}

	public void setcodigoBusquedaPorCodigo(String codigoBusquedaPorCodigo) {
		this.codigoBusquedaPorCodigo = codigoBusquedaPorCodigo;
	}

	public String nombreBusquedaPorNombre="";

	public String getnombreBusquedaPorNombre() {
		return this.nombreBusquedaPorNombre;
	}

	public void setnombreBusquedaPorNombre(String nombreBusquedaPorNombre) {
		this.nombreBusquedaPorNombre = nombreBusquedaPorNombre;
	}

	public String rucBusquedaPorRuc="";

	public String getrucBusquedaPorRuc() {
		return this.rucBusquedaPorRuc;
	}

	public void setrucBusquedaPorRuc(String rucBusquedaPorRuc) {
		this.rucBusquedaPorRuc = rucBusquedaPorRuc;
	}

	public String telefonoBusquedaPorTelefono="";

	public String gettelefonoBusquedaPorTelefono() {
		return this.telefonoBusquedaPorTelefono;
	}

	public void settelefonoBusquedaPorTelefono(String telefonoBusquedaPorTelefono) {
		this.telefonoBusquedaPorTelefono = telefonoBusquedaPorTelefono;
	}

	public Long id_centro_costoFK_IdCentroCosto=null;

	public Long getid_centro_costoFK_IdCentroCosto() {
		return this.id_centro_costoFK_IdCentroCosto;
	}

	public void setid_centro_costoFK_IdCentroCosto(Long id_centro_costoFK_IdCentroCosto) {
		this.id_centro_costoFK_IdCentroCosto = id_centro_costoFK_IdCentroCosto;
	}

	public Long id_ciudadFK_IdCiudad=-1L;

	public Long getid_ciudadFK_IdCiudad() {
		return this.id_ciudadFK_IdCiudad;
	}

	public void setid_ciudadFK_IdCiudad(Long id_ciudadFK_IdCiudad) {
		this.id_ciudadFK_IdCiudad = id_ciudadFK_IdCiudad;
	}

	public Long id_cuenta_contable_bonificaFK_IdCuentaContableBonifica=-1L;

	public Long getid_cuenta_contable_bonificaFK_IdCuentaContableBonifica() {
		return this.id_cuenta_contable_bonificaFK_IdCuentaContableBonifica;
	}

	public void setid_cuenta_contable_bonificaFK_IdCuentaContableBonifica(Long id_cuenta_contable_bonificaFK_IdCuentaContableBonifica) {
		this.id_cuenta_contable_bonificaFK_IdCuentaContableBonifica = id_cuenta_contable_bonificaFK_IdCuentaContableBonifica;
	}

	public Long id_cuenta_contable_costoFK_IdCuentaContableCosto=-1L;

	public Long getid_cuenta_contable_costoFK_IdCuentaContableCosto() {
		return this.id_cuenta_contable_costoFK_IdCuentaContableCosto;
	}

	public void setid_cuenta_contable_costoFK_IdCuentaContableCosto(Long id_cuenta_contable_costoFK_IdCuentaContableCosto) {
		this.id_cuenta_contable_costoFK_IdCuentaContableCosto = id_cuenta_contable_costoFK_IdCuentaContableCosto;
	}

	public Long id_cuenta_contable_costo_bonificaFK_IdCuentaContableCostoBonifica=-1L;

	public Long getid_cuenta_contable_costo_bonificaFK_IdCuentaContableCostoBonifica() {
		return this.id_cuenta_contable_costo_bonificaFK_IdCuentaContableCostoBonifica;
	}

	public void setid_cuenta_contable_costo_bonificaFK_IdCuentaContableCostoBonifica(Long id_cuenta_contable_costo_bonificaFK_IdCuentaContableCostoBonifica) {
		this.id_cuenta_contable_costo_bonificaFK_IdCuentaContableCostoBonifica = id_cuenta_contable_costo_bonificaFK_IdCuentaContableCostoBonifica;
	}

	public Long id_cuenta_contable_creditoFK_IdCuentaContableCredito=null;

	public Long getid_cuenta_contable_creditoFK_IdCuentaContableCredito() {
		return this.id_cuenta_contable_creditoFK_IdCuentaContableCredito;
	}

	public void setid_cuenta_contable_creditoFK_IdCuentaContableCredito(Long id_cuenta_contable_creditoFK_IdCuentaContableCredito) {
		this.id_cuenta_contable_creditoFK_IdCuentaContableCredito = id_cuenta_contable_creditoFK_IdCuentaContableCredito;
	}

	public Long id_cuenta_contable_debitoFK_IdCuentaContableDebito=null;

	public Long getid_cuenta_contable_debitoFK_IdCuentaContableDebito() {
		return this.id_cuenta_contable_debitoFK_IdCuentaContableDebito;
	}

	public void setid_cuenta_contable_debitoFK_IdCuentaContableDebito(Long id_cuenta_contable_debitoFK_IdCuentaContableDebito) {
		this.id_cuenta_contable_debitoFK_IdCuentaContableDebito = id_cuenta_contable_debitoFK_IdCuentaContableDebito;
	}

	public Long id_cuenta_contable_descuentoFK_IdCuentaContableDescuento=-1L;

	public Long getid_cuenta_contable_descuentoFK_IdCuentaContableDescuento() {
		return this.id_cuenta_contable_descuentoFK_IdCuentaContableDescuento;
	}

	public void setid_cuenta_contable_descuentoFK_IdCuentaContableDescuento(Long id_cuenta_contable_descuentoFK_IdCuentaContableDescuento) {
		this.id_cuenta_contable_descuentoFK_IdCuentaContableDescuento = id_cuenta_contable_descuentoFK_IdCuentaContableDescuento;
	}

	public Long id_cuenta_contable_devolucionFK_IdCuentaContableDevolucion=-1L;

	public Long getid_cuenta_contable_devolucionFK_IdCuentaContableDevolucion() {
		return this.id_cuenta_contable_devolucionFK_IdCuentaContableDevolucion;
	}

	public void setid_cuenta_contable_devolucionFK_IdCuentaContableDevolucion(Long id_cuenta_contable_devolucionFK_IdCuentaContableDevolucion) {
		this.id_cuenta_contable_devolucionFK_IdCuentaContableDevolucion = id_cuenta_contable_devolucionFK_IdCuentaContableDevolucion;
	}

	public Long id_cuenta_contable_inventarioFK_IdCuentaContableInventario=-1L;

	public Long getid_cuenta_contable_inventarioFK_IdCuentaContableInventario() {
		return this.id_cuenta_contable_inventarioFK_IdCuentaContableInventario;
	}

	public void setid_cuenta_contable_inventarioFK_IdCuentaContableInventario(Long id_cuenta_contable_inventarioFK_IdCuentaContableInventario) {
		this.id_cuenta_contable_inventarioFK_IdCuentaContableInventario = id_cuenta_contable_inventarioFK_IdCuentaContableInventario;
	}

	public Long id_cuenta_contable_produccionFK_IdCuentaContableProduccion=-1L;

	public Long getid_cuenta_contable_produccionFK_IdCuentaContableProduccion() {
		return this.id_cuenta_contable_produccionFK_IdCuentaContableProduccion;
	}

	public void setid_cuenta_contable_produccionFK_IdCuentaContableProduccion(Long id_cuenta_contable_produccionFK_IdCuentaContableProduccion) {
		this.id_cuenta_contable_produccionFK_IdCuentaContableProduccion = id_cuenta_contable_produccionFK_IdCuentaContableProduccion;
	}

	public Long id_cuenta_contable_ventaFK_IdCuentaContableVenta=-1L;

	public Long getid_cuenta_contable_ventaFK_IdCuentaContableVenta() {
		return this.id_cuenta_contable_ventaFK_IdCuentaContableVenta;
	}

	public void setid_cuenta_contable_ventaFK_IdCuentaContableVenta(Long id_cuenta_contable_ventaFK_IdCuentaContableVenta) {
		this.id_cuenta_contable_ventaFK_IdCuentaContableVenta = id_cuenta_contable_ventaFK_IdCuentaContableVenta;
	}

	public Long id_empleadoFK_IdEmpleado=-1L;

	public Long getid_empleadoFK_IdEmpleado() {
		return this.id_empleadoFK_IdEmpleado;
	}

	public void setid_empleadoFK_IdEmpleado(Long id_empleadoFK_IdEmpleado) {
		this.id_empleadoFK_IdEmpleado = id_empleadoFK_IdEmpleado;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_paisFK_IdPais=-1L;

	public Long getid_paisFK_IdPais() {
		return this.id_paisFK_IdPais;
	}

	public void setid_paisFK_IdPais(Long id_paisFK_IdPais) {
		this.id_paisFK_IdPais = id_paisFK_IdPais;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public GrupoBodegaLogic getGrupoBodegaLogic()	{		
		return grupobodegaLogic;
	}

	public void setGrupoBodegaLogic(GrupoBodegaLogic grupobodegaLogic) {
		this.grupobodegaLogic = grupobodegaLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoGrupoBodega() {
		return isEsNuevoGrupoBodega;
	}

	public void setIsEsNuevoGrupoBodega(Boolean isEsNuevoGrupoBodega) {
		this.isEsNuevoGrupoBodega = isEsNuevoGrupoBodega;
	}

	public Boolean getEsParaAccionDesdeFormularioGrupoBodega() {
		return esParaAccionDesdeFormularioGrupoBodega;
	}
	
	public void setEsParaAccionDesdeFormularioGrupoBodega(Boolean esParaAccionDesdeFormularioGrupoBodega) {
		this.esParaAccionDesdeFormularioGrupoBodega = esParaAccionDesdeFormularioGrupoBodega;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(grupobodegaSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPaissForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.paissForeignKey=new ArrayList<Pais>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PaisLogic paisLogic=new PaisLogic();

			//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

					paisLogic.getTodosPaissWithConnection(sFinalQuery,new Pagination());

					this.paissForeignKey=paisLogic.getPaiss();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPais(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					paisLogic.getEntityWithConnection(grupobodegaSessionBean.getlidPaisActual());
					this.paissForeignKey.add(paisLogic.getPais());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCiudadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ciudadsForeignKey=new ArrayList<Ciudad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CiudadLogic ciudadLogic=new CiudadLogic();

			//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

					ciudadLogic.getTodosCiudadsWithConnection(sFinalQuery,new Pagination());

					this.ciudadsForeignKey=ciudadLogic.getCiudads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCiudad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ciudadLogic.getEntityWithConnection(grupobodegaSessionBean.getlidCiudadActual());
					this.ciudadsForeignKey.add(ciudadLogic.getCiudad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centrocostosForeignKey=new ArrayList<CentroCosto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroCostoLogic centrocostoLogic=new CentroCostoLogic();

			//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

					centrocostoLogic.getTodosCentroCostosWithConnection(sFinalQuery,new Pagination());

					this.centrocostosForeignKey=centrocostoLogic.getCentroCostos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(grupobodegaSessionBean.getlidCentroCostoActual());
					this.centrocostosForeignKey.add(centrocostoLogic.getCentroCosto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadosForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadosForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(grupobodegaSessionBean.getlidEmpleadoActual());
					this.empleadosForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableInventariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableinventariosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableInventario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableinventarioLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableinventariosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableInventario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(grupobodegaSessionBean.getlidCuentaContableInventarioActual());
					this.cuentacontableinventariosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablecostosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontablecostoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablecostosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(grupobodegaSessionBean.getlidCuentaContableCostoActual());
					this.cuentacontablecostosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableVentasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableventasForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableVenta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableventaLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableventasForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableVenta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(grupobodegaSessionBean.getlidCuentaContableVentaActual());
					this.cuentacontableventasForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableDescuentosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontabledescuentosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDescuento()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontabledescuentoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontabledescuentosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableDescuento(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(grupobodegaSessionBean.getlidCuentaContableDescuentoActual());
					this.cuentacontabledescuentosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableDevolucionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontabledevolucionsForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDevolucion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontabledevolucionLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontabledevolucionsForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableDevolucion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(grupobodegaSessionBean.getlidCuentaContableDevolucionActual());
					this.cuentacontabledevolucionsForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableDebitosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontabledebitosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDebito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontabledebitoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontabledebitosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableDebito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(grupobodegaSessionBean.getlidCuentaContableDebitoActual());
					this.cuentacontabledebitosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableCreditosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablecreditosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableCredito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontablecreditoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablecreditosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableCredito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(grupobodegaSessionBean.getlidCuentaContableCreditoActual());
					this.cuentacontablecreditosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableProduccionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableproduccionsForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableProduccion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableproduccionLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableproduccionsForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableProduccion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(grupobodegaSessionBean.getlidCuentaContableProduccionActual());
					this.cuentacontableproduccionsForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableBonificasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablebonificasForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableBonifica()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontablebonificaLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablebonificasForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableBonifica(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(grupobodegaSessionBean.getlidCuentaContableBonificaActual());
					this.cuentacontablebonificasForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableCostoBonificasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablecostobonificasForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableCostoBonifica()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontablecostobonificaLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablecostobonificasForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableCostoBonifica(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(grupobodegaSessionBean.getlidCuentaContableCostoBonificaActual());
					this.cuentacontablecostobonificasForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.grupobodega!=null) {
						this.grupobodega.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empresaGrupoBodega.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaGrupoBodega.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empresaGrupoBodega.getItemCount()>0) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empresaGrupoBodega.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaGrupoBodegaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaGrupoBodegaGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaGrupoBodegaGenerico!=null && jComboBoxid_empresaGrupoBodegaGenerico.getItemCount()>0) {
					jComboBoxid_empresaGrupoBodegaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPaisForeignKey(Long idPaisSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(paisTemp!=null) {

					if(this.grupobodega!=null) {
						this.grupobodega.setPais(paisTemp);
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_paisGrupoBodega.setSelectedItem(paisTemp);
					}
				} else {
					//jComboBoxid_paisGrupoBodega.setSelectedItem(paisTemp);
					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_paisGrupoBodega.getItemCount()>0) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_paisGrupoBodega.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdPais") || sFormularioTipoBusqueda.equals("Todos")){
					if(paisTemp!=null && jComboBoxid_paisFK_IdPaisGrupoBodega!=null) {
						jComboBoxid_paisFK_IdPaisGrupoBodega.setSelectedItem(paisTemp);
					} else {
						if(jComboBoxid_paisFK_IdPaisGrupoBodega!=null) {
							//jComboBoxid_paisFK_IdPaisGrupoBodega.setSelectedItem(paisTemp);
							if(jComboBoxid_paisFK_IdPaisGrupoBodega.getItemCount()>0) {
								jComboBoxid_paisFK_IdPaisGrupoBodega.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPaisForeignKeyDescripcion(Long idPaisSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}


			sDescripcion=PaisConstantesFunciones.getPaisDescripcion(paisTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPaisForeignKeyGenerico(Long idPaisSeleccionado,JComboBox jComboBoxid_paisGrupoBodegaGenerico)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(paisTemp!=null) {
				jComboBoxid_paisGrupoBodegaGenerico.setSelectedItem(paisTemp);
			} else {
				if(jComboBoxid_paisGrupoBodegaGenerico!=null && jComboBoxid_paisGrupoBodegaGenerico.getItemCount()>0) {
					jComboBoxid_paisGrupoBodegaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCiudadForeignKey(Long idCiudadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ciudadTemp!=null) {

					if(this.grupobodega!=null) {
						this.grupobodega.setCiudad(ciudadTemp);
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_ciudadGrupoBodega.setSelectedItem(ciudadTemp);
					}
				} else {
					//jComboBoxid_ciudadGrupoBodega.setSelectedItem(ciudadTemp);
					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_ciudadGrupoBodega.getItemCount()>0) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_ciudadGrupoBodega.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCiudadForeignKeyDescripcion(Long idCiudadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}


			sDescripcion=CiudadConstantesFunciones.getCiudadDescripcion(ciudadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCiudadForeignKeyGenerico(Long idCiudadSeleccionado,JComboBox jComboBoxid_ciudadGrupoBodegaGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}

			if(ciudadTemp!=null) {
				jComboBoxid_ciudadGrupoBodegaGenerico.setSelectedItem(ciudadTemp);
			} else {
				if(jComboBoxid_ciudadGrupoBodegaGenerico!=null && jComboBoxid_ciudadGrupoBodegaGenerico.getItemCount()>0) {
					jComboBoxid_ciudadGrupoBodegaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroCostoForeignKey(Long idCentroCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centrocostoTemp!=null) {

					if(this.grupobodega!=null) {
						this.grupobodega.setCentroCosto(centrocostoTemp);
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_centro_costoGrupoBodega.setSelectedItem(centrocostoTemp);
					}
				} else {
					//jComboBoxid_centro_costoGrupoBodega.setSelectedItem(centrocostoTemp);
					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_centro_costoGrupoBodega.getItemCount()>0) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_centro_costoGrupoBodega.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){
					if(centrocostoTemp!=null && jComboBoxid_centro_costoFK_IdCentroCostoGrupoBodega!=null) {
						jComboBoxid_centro_costoFK_IdCentroCostoGrupoBodega.setSelectedItem(centrocostoTemp);
					} else {
						if(jComboBoxid_centro_costoFK_IdCentroCostoGrupoBodega!=null) {
							//jComboBoxid_centro_costoFK_IdCentroCostoGrupoBodega.setSelectedItem(centrocostoTemp);
							if(jComboBoxid_centro_costoFK_IdCentroCostoGrupoBodega.getItemCount()>0) {
								jComboBoxid_centro_costoFK_IdCentroCostoGrupoBodega.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroCostoForeignKeyDescripcion(Long idCentroCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}


			sDescripcion=CentroCostoConstantesFunciones.getCentroCostoDescripcion(centrocostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroCostoForeignKeyGenerico(Long idCentroCostoSeleccionado,JComboBox jComboBoxid_centro_costoGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(centrocostoTemp!=null) {
				jComboBoxid_centro_costoGrupoBodegaGenerico.setSelectedItem(centrocostoTemp);
			} else {
				if(jComboBoxid_centro_costoGrupoBodegaGenerico!=null && jComboBoxid_centro_costoGrupoBodegaGenerico.getItemCount()>0) {
					jComboBoxid_centro_costoGrupoBodegaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoForeignKey(Long idEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoTemp!=null) {

					if(this.grupobodega!=null) {
						this.grupobodega.setEmpleado(empleadoTemp);
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empleadoGrupoBodega.setSelectedItem(empleadoTemp);
					}
				} else {
					//jComboBoxid_empleadoGrupoBodega.setSelectedItem(empleadoTemp);
					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empleadoGrupoBodega.getItemCount()>0) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empleadoGrupoBodega.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(empleadoTemp!=null && jComboBoxid_empleadoFK_IdEmpleadoGrupoBodega!=null) {
						jComboBoxid_empleadoFK_IdEmpleadoGrupoBodega.setSelectedItem(empleadoTemp);
					} else {
						if(jComboBoxid_empleadoFK_IdEmpleadoGrupoBodega!=null) {
							//jComboBoxid_empleadoFK_IdEmpleadoGrupoBodega.setSelectedItem(empleadoTemp);
							if(jComboBoxid_empleadoFK_IdEmpleadoGrupoBodega.getItemCount()>0) {
								jComboBoxid_empleadoFK_IdEmpleadoGrupoBodega.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoForeignKeyDescripcion(Long idEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoForeignKeyGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxid_empleadoGrupoBodegaGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(empleadoTemp!=null) {
				jComboBoxid_empleadoGrupoBodegaGenerico.setSelectedItem(empleadoTemp);
			} else {
				if(jComboBoxid_empleadoGrupoBodegaGenerico!=null && jComboBoxid_empleadoGrupoBodegaGenerico.getItemCount()>0) {
					jComboBoxid_empleadoGrupoBodegaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableInventarioForeignKey(Long idCuentaContableInventarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableinventarioTemp=null;

			for(CuentaContable cuentacontableinventarioAux:cuentacontableinventariosForeignKey) {
				if(cuentacontableinventarioAux.getId()!=null && cuentacontableinventarioAux.getId().equals(idCuentaContableInventarioSeleccionado)) {
					cuentacontableinventarioTemp=cuentacontableinventarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableinventarioTemp!=null) {

					if(this.grupobodega!=null) {
						this.grupobodega.setCuentaContableInventario(cuentacontableinventarioTemp);
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_inventarioGrupoBodega.setSelectedItem(cuentacontableinventarioTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_inventarioGrupoBodega.setSelectedItem(cuentacontableinventarioTemp);
					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_inventarioGrupoBodega.getItemCount()>0) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_inventarioGrupoBodega.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableInventarioForeignKeyDescripcion(Long idCuentaContableInventarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableinventarioTemp=null;

			for(CuentaContable cuentacontableinventarioAux:cuentacontableinventariosForeignKey) {
				if(cuentacontableinventarioAux.getId()!=null && cuentacontableinventarioAux.getId().equals(idCuentaContableInventarioSeleccionado)) {
					cuentacontableinventarioTemp=cuentacontableinventarioAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableinventarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableInventarioForeignKeyGenerico(Long idCuentaContableInventarioSeleccionado,JComboBox jComboBoxid_cuenta_contable_inventarioGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableinventarioTemp=null;

			for(CuentaContable cuentacontableinventarioAux:cuentacontableinventariosForeignKey) {
				if(cuentacontableinventarioAux.getId()!=null && cuentacontableinventarioAux.getId().equals(idCuentaContableInventarioSeleccionado)) {
					cuentacontableinventarioTemp=cuentacontableinventarioAux;
					break;
				}
			}

			if(cuentacontableinventarioTemp!=null) {
				jComboBoxid_cuenta_contable_inventarioGrupoBodegaGenerico.setSelectedItem(cuentacontableinventarioTemp);
			} else {
				if(jComboBoxid_cuenta_contable_inventarioGrupoBodegaGenerico!=null && jComboBoxid_cuenta_contable_inventarioGrupoBodegaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_inventarioGrupoBodegaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableCostoForeignKey(Long idCuentaContableCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablecostoTemp=null;

			for(CuentaContable cuentacontablecostoAux:cuentacontablecostosForeignKey) {
				if(cuentacontablecostoAux.getId()!=null && cuentacontablecostoAux.getId().equals(idCuentaContableCostoSeleccionado)) {
					cuentacontablecostoTemp=cuentacontablecostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontablecostoTemp!=null) {

					if(this.grupobodega!=null) {
						this.grupobodega.setCuentaContableCosto(cuentacontablecostoTemp);
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costoGrupoBodega.setSelectedItem(cuentacontablecostoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_costoGrupoBodega.setSelectedItem(cuentacontablecostoTemp);
					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costoGrupoBodega.getItemCount()>0) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costoGrupoBodega.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableCostoForeignKeyDescripcion(Long idCuentaContableCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontablecostoTemp=null;

			for(CuentaContable cuentacontablecostoAux:cuentacontablecostosForeignKey) {
				if(cuentacontablecostoAux.getId()!=null && cuentacontablecostoAux.getId().equals(idCuentaContableCostoSeleccionado)) {
					cuentacontablecostoTemp=cuentacontablecostoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontablecostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableCostoForeignKeyGenerico(Long idCuentaContableCostoSeleccionado,JComboBox jComboBoxid_cuenta_contable_costoGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablecostoTemp=null;

			for(CuentaContable cuentacontablecostoAux:cuentacontablecostosForeignKey) {
				if(cuentacontablecostoAux.getId()!=null && cuentacontablecostoAux.getId().equals(idCuentaContableCostoSeleccionado)) {
					cuentacontablecostoTemp=cuentacontablecostoAux;
					break;
				}
			}

			if(cuentacontablecostoTemp!=null) {
				jComboBoxid_cuenta_contable_costoGrupoBodegaGenerico.setSelectedItem(cuentacontablecostoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_costoGrupoBodegaGenerico!=null && jComboBoxid_cuenta_contable_costoGrupoBodegaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_costoGrupoBodegaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableVentaForeignKey(Long idCuentaContableVentaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableventaTemp=null;

			for(CuentaContable cuentacontableventaAux:cuentacontableventasForeignKey) {
				if(cuentacontableventaAux.getId()!=null && cuentacontableventaAux.getId().equals(idCuentaContableVentaSeleccionado)) {
					cuentacontableventaTemp=cuentacontableventaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableventaTemp!=null) {

					if(this.grupobodega!=null) {
						this.grupobodega.setCuentaContableVenta(cuentacontableventaTemp);
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_ventaGrupoBodega.setSelectedItem(cuentacontableventaTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_ventaGrupoBodega.setSelectedItem(cuentacontableventaTemp);
					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_ventaGrupoBodega.getItemCount()>0) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_ventaGrupoBodega.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableVentaForeignKeyDescripcion(Long idCuentaContableVentaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableventaTemp=null;

			for(CuentaContable cuentacontableventaAux:cuentacontableventasForeignKey) {
				if(cuentacontableventaAux.getId()!=null && cuentacontableventaAux.getId().equals(idCuentaContableVentaSeleccionado)) {
					cuentacontableventaTemp=cuentacontableventaAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableventaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableVentaForeignKeyGenerico(Long idCuentaContableVentaSeleccionado,JComboBox jComboBoxid_cuenta_contable_ventaGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableventaTemp=null;

			for(CuentaContable cuentacontableventaAux:cuentacontableventasForeignKey) {
				if(cuentacontableventaAux.getId()!=null && cuentacontableventaAux.getId().equals(idCuentaContableVentaSeleccionado)) {
					cuentacontableventaTemp=cuentacontableventaAux;
					break;
				}
			}

			if(cuentacontableventaTemp!=null) {
				jComboBoxid_cuenta_contable_ventaGrupoBodegaGenerico.setSelectedItem(cuentacontableventaTemp);
			} else {
				if(jComboBoxid_cuenta_contable_ventaGrupoBodegaGenerico!=null && jComboBoxid_cuenta_contable_ventaGrupoBodegaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_ventaGrupoBodegaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableDescuentoForeignKey(Long idCuentaContableDescuentoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontabledescuentoTemp=null;

			for(CuentaContable cuentacontabledescuentoAux:cuentacontabledescuentosForeignKey) {
				if(cuentacontabledescuentoAux.getId()!=null && cuentacontabledescuentoAux.getId().equals(idCuentaContableDescuentoSeleccionado)) {
					cuentacontabledescuentoTemp=cuentacontabledescuentoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontabledescuentoTemp!=null) {

					if(this.grupobodega!=null) {
						this.grupobodega.setCuentaContableDescuento(cuentacontabledescuentoTemp);
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_descuentoGrupoBodega.setSelectedItem(cuentacontabledescuentoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_descuentoGrupoBodega.setSelectedItem(cuentacontabledescuentoTemp);
					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_descuentoGrupoBodega.getItemCount()>0) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_descuentoGrupoBodega.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableDescuentoForeignKeyDescripcion(Long idCuentaContableDescuentoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontabledescuentoTemp=null;

			for(CuentaContable cuentacontabledescuentoAux:cuentacontabledescuentosForeignKey) {
				if(cuentacontabledescuentoAux.getId()!=null && cuentacontabledescuentoAux.getId().equals(idCuentaContableDescuentoSeleccionado)) {
					cuentacontabledescuentoTemp=cuentacontabledescuentoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontabledescuentoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableDescuentoForeignKeyGenerico(Long idCuentaContableDescuentoSeleccionado,JComboBox jComboBoxid_cuenta_contable_descuentoGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontabledescuentoTemp=null;

			for(CuentaContable cuentacontabledescuentoAux:cuentacontabledescuentosForeignKey) {
				if(cuentacontabledescuentoAux.getId()!=null && cuentacontabledescuentoAux.getId().equals(idCuentaContableDescuentoSeleccionado)) {
					cuentacontabledescuentoTemp=cuentacontabledescuentoAux;
					break;
				}
			}

			if(cuentacontabledescuentoTemp!=null) {
				jComboBoxid_cuenta_contable_descuentoGrupoBodegaGenerico.setSelectedItem(cuentacontabledescuentoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_descuentoGrupoBodegaGenerico!=null && jComboBoxid_cuenta_contable_descuentoGrupoBodegaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_descuentoGrupoBodegaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableDevolucionForeignKey(Long idCuentaContableDevolucionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontabledevolucionTemp=null;

			for(CuentaContable cuentacontabledevolucionAux:cuentacontabledevolucionsForeignKey) {
				if(cuentacontabledevolucionAux.getId()!=null && cuentacontabledevolucionAux.getId().equals(idCuentaContableDevolucionSeleccionado)) {
					cuentacontabledevolucionTemp=cuentacontabledevolucionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontabledevolucionTemp!=null) {

					if(this.grupobodega!=null) {
						this.grupobodega.setCuentaContableDevolucion(cuentacontabledevolucionTemp);
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_devolucionGrupoBodega.setSelectedItem(cuentacontabledevolucionTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_devolucionGrupoBodega.setSelectedItem(cuentacontabledevolucionTemp);
					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_devolucionGrupoBodega.getItemCount()>0) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_devolucionGrupoBodega.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableDevolucionForeignKeyDescripcion(Long idCuentaContableDevolucionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontabledevolucionTemp=null;

			for(CuentaContable cuentacontabledevolucionAux:cuentacontabledevolucionsForeignKey) {
				if(cuentacontabledevolucionAux.getId()!=null && cuentacontabledevolucionAux.getId().equals(idCuentaContableDevolucionSeleccionado)) {
					cuentacontabledevolucionTemp=cuentacontabledevolucionAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontabledevolucionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableDevolucionForeignKeyGenerico(Long idCuentaContableDevolucionSeleccionado,JComboBox jComboBoxid_cuenta_contable_devolucionGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontabledevolucionTemp=null;

			for(CuentaContable cuentacontabledevolucionAux:cuentacontabledevolucionsForeignKey) {
				if(cuentacontabledevolucionAux.getId()!=null && cuentacontabledevolucionAux.getId().equals(idCuentaContableDevolucionSeleccionado)) {
					cuentacontabledevolucionTemp=cuentacontabledevolucionAux;
					break;
				}
			}

			if(cuentacontabledevolucionTemp!=null) {
				jComboBoxid_cuenta_contable_devolucionGrupoBodegaGenerico.setSelectedItem(cuentacontabledevolucionTemp);
			} else {
				if(jComboBoxid_cuenta_contable_devolucionGrupoBodegaGenerico!=null && jComboBoxid_cuenta_contable_devolucionGrupoBodegaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_devolucionGrupoBodegaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableDebitoForeignKey(Long idCuentaContableDebitoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontabledebitoTemp=null;

			for(CuentaContable cuentacontabledebitoAux:cuentacontabledebitosForeignKey) {
				if(cuentacontabledebitoAux.getId()!=null && cuentacontabledebitoAux.getId().equals(idCuentaContableDebitoSeleccionado)) {
					cuentacontabledebitoTemp=cuentacontabledebitoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontabledebitoTemp!=null) {

					if(this.grupobodega!=null) {
						this.grupobodega.setCuentaContableDebito(cuentacontabledebitoTemp);
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_debitoGrupoBodega.setSelectedItem(cuentacontabledebitoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_debitoGrupoBodega.setSelectedItem(cuentacontabledebitoTemp);
					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_debitoGrupoBodega.getItemCount()>0) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_debitoGrupoBodega.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableDebitoForeignKeyDescripcion(Long idCuentaContableDebitoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontabledebitoTemp=null;

			for(CuentaContable cuentacontabledebitoAux:cuentacontabledebitosForeignKey) {
				if(cuentacontabledebitoAux.getId()!=null && cuentacontabledebitoAux.getId().equals(idCuentaContableDebitoSeleccionado)) {
					cuentacontabledebitoTemp=cuentacontabledebitoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontabledebitoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableDebitoForeignKeyGenerico(Long idCuentaContableDebitoSeleccionado,JComboBox jComboBoxid_cuenta_contable_debitoGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontabledebitoTemp=null;

			for(CuentaContable cuentacontabledebitoAux:cuentacontabledebitosForeignKey) {
				if(cuentacontabledebitoAux.getId()!=null && cuentacontabledebitoAux.getId().equals(idCuentaContableDebitoSeleccionado)) {
					cuentacontabledebitoTemp=cuentacontabledebitoAux;
					break;
				}
			}

			if(cuentacontabledebitoTemp!=null) {
				jComboBoxid_cuenta_contable_debitoGrupoBodegaGenerico.setSelectedItem(cuentacontabledebitoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_debitoGrupoBodegaGenerico!=null && jComboBoxid_cuenta_contable_debitoGrupoBodegaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_debitoGrupoBodegaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableCreditoForeignKey(Long idCuentaContableCreditoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablecreditoTemp=null;

			for(CuentaContable cuentacontablecreditoAux:cuentacontablecreditosForeignKey) {
				if(cuentacontablecreditoAux.getId()!=null && cuentacontablecreditoAux.getId().equals(idCuentaContableCreditoSeleccionado)) {
					cuentacontablecreditoTemp=cuentacontablecreditoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontablecreditoTemp!=null) {

					if(this.grupobodega!=null) {
						this.grupobodega.setCuentaContableCredito(cuentacontablecreditoTemp);
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_creditoGrupoBodega.setSelectedItem(cuentacontablecreditoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_creditoGrupoBodega.setSelectedItem(cuentacontablecreditoTemp);
					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_creditoGrupoBodega.getItemCount()>0) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_creditoGrupoBodega.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableCreditoForeignKeyDescripcion(Long idCuentaContableCreditoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontablecreditoTemp=null;

			for(CuentaContable cuentacontablecreditoAux:cuentacontablecreditosForeignKey) {
				if(cuentacontablecreditoAux.getId()!=null && cuentacontablecreditoAux.getId().equals(idCuentaContableCreditoSeleccionado)) {
					cuentacontablecreditoTemp=cuentacontablecreditoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontablecreditoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableCreditoForeignKeyGenerico(Long idCuentaContableCreditoSeleccionado,JComboBox jComboBoxid_cuenta_contable_creditoGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablecreditoTemp=null;

			for(CuentaContable cuentacontablecreditoAux:cuentacontablecreditosForeignKey) {
				if(cuentacontablecreditoAux.getId()!=null && cuentacontablecreditoAux.getId().equals(idCuentaContableCreditoSeleccionado)) {
					cuentacontablecreditoTemp=cuentacontablecreditoAux;
					break;
				}
			}

			if(cuentacontablecreditoTemp!=null) {
				jComboBoxid_cuenta_contable_creditoGrupoBodegaGenerico.setSelectedItem(cuentacontablecreditoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_creditoGrupoBodegaGenerico!=null && jComboBoxid_cuenta_contable_creditoGrupoBodegaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_creditoGrupoBodegaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableProduccionForeignKey(Long idCuentaContableProduccionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableproduccionTemp=null;

			for(CuentaContable cuentacontableproduccionAux:cuentacontableproduccionsForeignKey) {
				if(cuentacontableproduccionAux.getId()!=null && cuentacontableproduccionAux.getId().equals(idCuentaContableProduccionSeleccionado)) {
					cuentacontableproduccionTemp=cuentacontableproduccionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableproduccionTemp!=null) {

					if(this.grupobodega!=null) {
						this.grupobodega.setCuentaContableProduccion(cuentacontableproduccionTemp);
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_produccionGrupoBodega.setSelectedItem(cuentacontableproduccionTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_produccionGrupoBodega.setSelectedItem(cuentacontableproduccionTemp);
					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_produccionGrupoBodega.getItemCount()>0) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_produccionGrupoBodega.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableProduccionForeignKeyDescripcion(Long idCuentaContableProduccionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableproduccionTemp=null;

			for(CuentaContable cuentacontableproduccionAux:cuentacontableproduccionsForeignKey) {
				if(cuentacontableproduccionAux.getId()!=null && cuentacontableproduccionAux.getId().equals(idCuentaContableProduccionSeleccionado)) {
					cuentacontableproduccionTemp=cuentacontableproduccionAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableproduccionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableProduccionForeignKeyGenerico(Long idCuentaContableProduccionSeleccionado,JComboBox jComboBoxid_cuenta_contable_produccionGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableproduccionTemp=null;

			for(CuentaContable cuentacontableproduccionAux:cuentacontableproduccionsForeignKey) {
				if(cuentacontableproduccionAux.getId()!=null && cuentacontableproduccionAux.getId().equals(idCuentaContableProduccionSeleccionado)) {
					cuentacontableproduccionTemp=cuentacontableproduccionAux;
					break;
				}
			}

			if(cuentacontableproduccionTemp!=null) {
				jComboBoxid_cuenta_contable_produccionGrupoBodegaGenerico.setSelectedItem(cuentacontableproduccionTemp);
			} else {
				if(jComboBoxid_cuenta_contable_produccionGrupoBodegaGenerico!=null && jComboBoxid_cuenta_contable_produccionGrupoBodegaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_produccionGrupoBodegaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableBonificaForeignKey(Long idCuentaContableBonificaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablebonificaTemp=null;

			for(CuentaContable cuentacontablebonificaAux:cuentacontablebonificasForeignKey) {
				if(cuentacontablebonificaAux.getId()!=null && cuentacontablebonificaAux.getId().equals(idCuentaContableBonificaSeleccionado)) {
					cuentacontablebonificaTemp=cuentacontablebonificaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontablebonificaTemp!=null) {

					if(this.grupobodega!=null) {
						this.grupobodega.setCuentaContableBonifica(cuentacontablebonificaTemp);
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_bonificaGrupoBodega.setSelectedItem(cuentacontablebonificaTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_bonificaGrupoBodega.setSelectedItem(cuentacontablebonificaTemp);
					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_bonificaGrupoBodega.getItemCount()>0) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_bonificaGrupoBodega.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableBonificaForeignKeyDescripcion(Long idCuentaContableBonificaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontablebonificaTemp=null;

			for(CuentaContable cuentacontablebonificaAux:cuentacontablebonificasForeignKey) {
				if(cuentacontablebonificaAux.getId()!=null && cuentacontablebonificaAux.getId().equals(idCuentaContableBonificaSeleccionado)) {
					cuentacontablebonificaTemp=cuentacontablebonificaAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontablebonificaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableBonificaForeignKeyGenerico(Long idCuentaContableBonificaSeleccionado,JComboBox jComboBoxid_cuenta_contable_bonificaGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablebonificaTemp=null;

			for(CuentaContable cuentacontablebonificaAux:cuentacontablebonificasForeignKey) {
				if(cuentacontablebonificaAux.getId()!=null && cuentacontablebonificaAux.getId().equals(idCuentaContableBonificaSeleccionado)) {
					cuentacontablebonificaTemp=cuentacontablebonificaAux;
					break;
				}
			}

			if(cuentacontablebonificaTemp!=null) {
				jComboBoxid_cuenta_contable_bonificaGrupoBodegaGenerico.setSelectedItem(cuentacontablebonificaTemp);
			} else {
				if(jComboBoxid_cuenta_contable_bonificaGrupoBodegaGenerico!=null && jComboBoxid_cuenta_contable_bonificaGrupoBodegaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_bonificaGrupoBodegaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableCostoBonificaForeignKey(Long idCuentaContableCostoBonificaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablecostobonificaTemp=null;

			for(CuentaContable cuentacontablecostobonificaAux:cuentacontablecostobonificasForeignKey) {
				if(cuentacontablecostobonificaAux.getId()!=null && cuentacontablecostobonificaAux.getId().equals(idCuentaContableCostoBonificaSeleccionado)) {
					cuentacontablecostobonificaTemp=cuentacontablecostobonificaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontablecostobonificaTemp!=null) {

					if(this.grupobodega!=null) {
						this.grupobodega.setCuentaContableCostoBonifica(cuentacontablecostobonificaTemp);
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega.setSelectedItem(cuentacontablecostobonificaTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega.setSelectedItem(cuentacontablecostobonificaTemp);
					if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
						if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega.getItemCount()>0) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableCostoBonificaForeignKeyDescripcion(Long idCuentaContableCostoBonificaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontablecostobonificaTemp=null;

			for(CuentaContable cuentacontablecostobonificaAux:cuentacontablecostobonificasForeignKey) {
				if(cuentacontablecostobonificaAux.getId()!=null && cuentacontablecostobonificaAux.getId().equals(idCuentaContableCostoBonificaSeleccionado)) {
					cuentacontablecostobonificaTemp=cuentacontablecostobonificaAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontablecostobonificaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableCostoBonificaForeignKeyGenerico(Long idCuentaContableCostoBonificaSeleccionado,JComboBox jComboBoxid_cuenta_contable_costo_bonificaGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablecostobonificaTemp=null;

			for(CuentaContable cuentacontablecostobonificaAux:cuentacontablecostobonificasForeignKey) {
				if(cuentacontablecostobonificaAux.getId()!=null && cuentacontablecostobonificaAux.getId().equals(idCuentaContableCostoBonificaSeleccionado)) {
					cuentacontablecostobonificaTemp=cuentacontablecostobonificaAux;
					break;
				}
			}

			if(cuentacontablecostobonificaTemp!=null) {
				jComboBoxid_cuenta_contable_costo_bonificaGrupoBodegaGenerico.setSelectedItem(cuentacontablecostobonificaTemp);
			} else {
				if(jComboBoxid_cuenta_contable_costo_bonificaGrupoBodegaGenerico!=null && jComboBoxid_cuenta_contable_costo_bonificaGrupoBodegaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_costo_bonificaGrupoBodegaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(GrupoBodega grupobodega,JComboBox jComboBoxid_empresaGrupoBodegaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaGrupoBodegaGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empresaGrupoBodega.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaGrupoBodegaGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				grupobodega.setid_empresa(empresaAux.getId());
				grupobodega.setempresa_descripcion(GrupoBodegaConstantesFunciones.getEmpresaDescripcion(empresaAux));
				grupobodega.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPaisForeignKey(GrupoBodega grupobodega,JComboBox jComboBoxid_paisGrupoBodegaGenerico)throws Exception
	{
		try
		{
			Pais  paisAux=new Pais();

			if(jComboBoxid_paisGrupoBodegaGenerico==null) {
				paisAux=(Pais)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_paisGrupoBodega.getSelectedItem();
			} else {
				paisAux=(Pais)jComboBoxid_paisGrupoBodegaGenerico.getSelectedItem();
			}

			if(paisAux!=null && paisAux.getId()!=null) {
				grupobodega.setid_pais(paisAux.getId());
				grupobodega.setpais_descripcion(GrupoBodegaConstantesFunciones.getPaisDescripcion(paisAux));
				grupobodega.setPais(paisAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCiudadForeignKey(GrupoBodega grupobodega,JComboBox jComboBoxid_ciudadGrupoBodegaGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadAux=new Ciudad();

			if(jComboBoxid_ciudadGrupoBodegaGenerico==null) {
				ciudadAux=(Ciudad)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_ciudadGrupoBodega.getSelectedItem();
			} else {
				ciudadAux=(Ciudad)jComboBoxid_ciudadGrupoBodegaGenerico.getSelectedItem();
			}

			if(ciudadAux!=null && ciudadAux.getId()!=null) {
				grupobodega.setid_ciudad(ciudadAux.getId());
				grupobodega.setciudad_descripcion(GrupoBodegaConstantesFunciones.getCiudadDescripcion(ciudadAux));
				grupobodega.setCiudad(ciudadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroCostoForeignKey(GrupoBodega grupobodega,JComboBox jComboBoxid_centro_costoGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoAux=new CentroCosto();

			if(jComboBoxid_centro_costoGrupoBodegaGenerico==null) {
				centrocostoAux=(CentroCosto)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_centro_costoGrupoBodega.getSelectedItem();
			} else {
				centrocostoAux=(CentroCosto)jComboBoxid_centro_costoGrupoBodegaGenerico.getSelectedItem();
			}

			if(centrocostoAux!=null) {
				grupobodega.setid_centro_costo(centrocostoAux.getId());
				grupobodega.setcentrocosto_descripcion(GrupoBodegaConstantesFunciones.getCentroCostoDescripcion(centrocostoAux));
				grupobodega.setCentroCosto(centrocostoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoForeignKey(GrupoBodega grupobodega,JComboBox jComboBoxid_empleadoGrupoBodegaGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleadoGrupoBodegaGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empleadoGrupoBodega.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleadoGrupoBodegaGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				grupobodega.setid_empleado(empleadoAux.getId());
				grupobodega.setempleado_descripcion(GrupoBodegaConstantesFunciones.getEmpleadoDescripcion(empleadoAux));
				grupobodega.setEmpleado(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableInventarioForeignKey(GrupoBodega grupobodega,JComboBox jComboBoxid_cuenta_contable_inventarioGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_inventarioGrupoBodegaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_inventarioGrupoBodega.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_inventarioGrupoBodegaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				grupobodega.setid_cuenta_contable_inventario(cuentacontableAux.getId());
				grupobodega.setcuentacontableinventario_descripcion(GrupoBodegaConstantesFunciones.getCuentaContableInventarioDescripcion(cuentacontableAux));
				grupobodega.setCuentaContableInventario(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableCostoForeignKey(GrupoBodega grupobodega,JComboBox jComboBoxid_cuenta_contable_costoGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_costoGrupoBodegaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costoGrupoBodega.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_costoGrupoBodegaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				grupobodega.setid_cuenta_contable_costo(cuentacontableAux.getId());
				grupobodega.setcuentacontablecosto_descripcion(GrupoBodegaConstantesFunciones.getCuentaContableCostoDescripcion(cuentacontableAux));
				grupobodega.setCuentaContableCosto(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableVentaForeignKey(GrupoBodega grupobodega,JComboBox jComboBoxid_cuenta_contable_ventaGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_ventaGrupoBodegaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_ventaGrupoBodega.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_ventaGrupoBodegaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				grupobodega.setid_cuenta_contable_venta(cuentacontableAux.getId());
				grupobodega.setcuentacontableventa_descripcion(GrupoBodegaConstantesFunciones.getCuentaContableVentaDescripcion(cuentacontableAux));
				grupobodega.setCuentaContableVenta(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableDescuentoForeignKey(GrupoBodega grupobodega,JComboBox jComboBoxid_cuenta_contable_descuentoGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_descuentoGrupoBodegaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_descuentoGrupoBodega.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_descuentoGrupoBodegaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				grupobodega.setid_cuenta_contable_descuento(cuentacontableAux.getId());
				grupobodega.setcuentacontabledescuento_descripcion(GrupoBodegaConstantesFunciones.getCuentaContableDescuentoDescripcion(cuentacontableAux));
				grupobodega.setCuentaContableDescuento(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableDevolucionForeignKey(GrupoBodega grupobodega,JComboBox jComboBoxid_cuenta_contable_devolucionGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_devolucionGrupoBodegaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_devolucionGrupoBodega.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_devolucionGrupoBodegaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				grupobodega.setid_cuenta_contable_devolucion(cuentacontableAux.getId());
				grupobodega.setcuentacontabledevolucion_descripcion(GrupoBodegaConstantesFunciones.getCuentaContableDevolucionDescripcion(cuentacontableAux));
				grupobodega.setCuentaContableDevolucion(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableDebitoForeignKey(GrupoBodega grupobodega,JComboBox jComboBoxid_cuenta_contable_debitoGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_debitoGrupoBodegaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_debitoGrupoBodega.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_debitoGrupoBodegaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				grupobodega.setid_cuenta_contable_debito(cuentacontableAux.getId());
				grupobodega.setcuentacontabledebito_descripcion(GrupoBodegaConstantesFunciones.getCuentaContableDebitoDescripcion(cuentacontableAux));
				grupobodega.setCuentaContableDebito(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableCreditoForeignKey(GrupoBodega grupobodega,JComboBox jComboBoxid_cuenta_contable_creditoGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_creditoGrupoBodegaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_creditoGrupoBodega.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_creditoGrupoBodegaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				grupobodega.setid_cuenta_contable_credito(cuentacontableAux.getId());
				grupobodega.setcuentacontablecredito_descripcion(GrupoBodegaConstantesFunciones.getCuentaContableCreditoDescripcion(cuentacontableAux));
				grupobodega.setCuentaContableCredito(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableProduccionForeignKey(GrupoBodega grupobodega,JComboBox jComboBoxid_cuenta_contable_produccionGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_produccionGrupoBodegaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_produccionGrupoBodega.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_produccionGrupoBodegaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				grupobodega.setid_cuenta_contable_produccion(cuentacontableAux.getId());
				grupobodega.setcuentacontableproduccion_descripcion(GrupoBodegaConstantesFunciones.getCuentaContableProduccionDescripcion(cuentacontableAux));
				grupobodega.setCuentaContableProduccion(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableBonificaForeignKey(GrupoBodega grupobodega,JComboBox jComboBoxid_cuenta_contable_bonificaGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_bonificaGrupoBodegaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_bonificaGrupoBodega.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_bonificaGrupoBodegaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				grupobodega.setid_cuenta_contable_bonifica(cuentacontableAux.getId());
				grupobodega.setcuentacontablebonifica_descripcion(GrupoBodegaConstantesFunciones.getCuentaContableBonificaDescripcion(cuentacontableAux));
				grupobodega.setCuentaContableBonifica(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableCostoBonificaForeignKey(GrupoBodega grupobodega,JComboBox jComboBoxid_cuenta_contable_costo_bonificaGrupoBodegaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_costo_bonificaGrupoBodegaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_costo_bonificaGrupoBodegaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				grupobodega.setid_cuenta_contable_costo_bonifica(cuentacontableAux.getId());
				grupobodega.setcuentacontablecostobonifica_descripcion(GrupoBodegaConstantesFunciones.getCuentaContableCostoBonificaDescripcion(cuentacontableAux));
				grupobodega.setCuentaContableCostoBonifica(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empresaGrupoBodega.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empresaGrupoBodega.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
					}

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePaissForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPais=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_paisGrupoBodega.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_paisGrupoBodega.addItem(pais);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
					}

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdPais") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_paisFK_IdPaisGrupoBodega.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jComboBoxid_paisFK_IdPaisGrupoBodega.addItem(pais);
							}
						}

						if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCiudadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCiudad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_ciudadGrupoBodega.removeAllItems();

							for(Ciudad ciudad:this.ciudadsForeignKey) {
								this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_ciudadGrupoBodega.addItem(ciudad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
					}

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroCosto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_centro_costoGrupoBodega.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_centro_costoGrupoBodega.addItem(centrocosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
					}

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoGrupoBodega.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jComboBoxid_centro_costoFK_IdCentroCostoGrupoBodega.addItem(centrocosto);
							}
						}

						if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empleadoGrupoBodega.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empleadoGrupoBodega.addItem(empleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
					}

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoGrupoBodega.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jComboBoxid_empleadoFK_IdEmpleadoGrupoBodega.addItem(empleado);
							}
						}

						if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableInventariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_inventarioGrupoBodega.removeAllItems();

							for(CuentaContable cuentacontableinventario:this.cuentacontableinventariosForeignKey) {
								this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_inventarioGrupoBodega.addItem(cuentacontableinventario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
					}

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costoGrupoBodega.removeAllItems();

							for(CuentaContable cuentacontablecosto:this.cuentacontablecostosForeignKey) {
								this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costoGrupoBodega.addItem(cuentacontablecosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
					}

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableVentasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_ventaGrupoBodega.removeAllItems();

							for(CuentaContable cuentacontableventa:this.cuentacontableventasForeignKey) {
								this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_ventaGrupoBodega.addItem(cuentacontableventa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
					}

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableDescuentosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_descuentoGrupoBodega.removeAllItems();

							for(CuentaContable cuentacontabledescuento:this.cuentacontabledescuentosForeignKey) {
								this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_descuentoGrupoBodega.addItem(cuentacontabledescuento);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
					}

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableDevolucionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_devolucionGrupoBodega.removeAllItems();

							for(CuentaContable cuentacontabledevolucion:this.cuentacontabledevolucionsForeignKey) {
								this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_devolucionGrupoBodega.addItem(cuentacontabledevolucion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
					}

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableDebitosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_debitoGrupoBodega.removeAllItems();

							for(CuentaContable cuentacontabledebito:this.cuentacontabledebitosForeignKey) {
								this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_debitoGrupoBodega.addItem(cuentacontabledebito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
					}

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableCreditosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_creditoGrupoBodega.removeAllItems();

							for(CuentaContable cuentacontablecredito:this.cuentacontablecreditosForeignKey) {
								this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_creditoGrupoBodega.addItem(cuentacontablecredito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
					}

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableProduccionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_produccionGrupoBodega.removeAllItems();

							for(CuentaContable cuentacontableproduccion:this.cuentacontableproduccionsForeignKey) {
								this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_produccionGrupoBodega.addItem(cuentacontableproduccion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
					}

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableBonificasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_bonificaGrupoBodega.removeAllItems();

							for(CuentaContable cuentacontablebonifica:this.cuentacontablebonificasForeignKey) {
								this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_bonificaGrupoBodega.addItem(cuentacontablebonifica);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
					}

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableCostoBonificasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega.removeAllItems();

							for(CuentaContable cuentacontablecostobonifica:this.cuentacontablecostobonificasForeignKey) {
								this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega.addItem(cuentacontablecostobonifica);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGrupoBodega!=null) { 
					}

					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empresaGrupoBodega.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empresaGrupoBodega.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePaisForeignKey(Pais pais,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_paisGrupoBodega.setSelectedItem(pais);
						}
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_paisGrupoBodega.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_paisFK_IdPaisGrupoBodega.setSelectedItem(pais);
						} else {
							this.jComboBoxid_paisFK_IdPaisGrupoBodega.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCiudadForeignKey(Ciudad ciudad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_ciudadGrupoBodega.setSelectedItem(ciudad);
						}
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_ciudadGrupoBodega.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroCostoForeignKey(CentroCosto centrocosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_centro_costoGrupoBodega.setSelectedItem(centrocosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_centro_costoGrupoBodega.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_costoFK_IdCentroCostoGrupoBodega.setSelectedItem(centrocosto);
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoGrupoBodega.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoForeignKey(Empleado empleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empleadoGrupoBodega.setSelectedItem(empleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empleadoGrupoBodega.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empleadoFK_IdEmpleadoGrupoBodega.setSelectedItem(empleado);
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoGrupoBodega.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableInventarioForeignKey(CuentaContable cuentacontableinventario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_inventarioGrupoBodega.setSelectedItem(cuentacontableinventario);
						}
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_inventarioGrupoBodega.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableCostoForeignKey(CuentaContable cuentacontablecosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costoGrupoBodega.setSelectedItem(cuentacontablecosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costoGrupoBodega.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableVentaForeignKey(CuentaContable cuentacontableventa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_ventaGrupoBodega.setSelectedItem(cuentacontableventa);
						}
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_ventaGrupoBodega.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableDescuentoForeignKey(CuentaContable cuentacontabledescuento,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_descuentoGrupoBodega.setSelectedItem(cuentacontabledescuento);
						}
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_descuentoGrupoBodega.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableDevolucionForeignKey(CuentaContable cuentacontabledevolucion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_devolucionGrupoBodega.setSelectedItem(cuentacontabledevolucion);
						}
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_devolucionGrupoBodega.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableDebitoForeignKey(CuentaContable cuentacontabledebito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_debitoGrupoBodega.setSelectedItem(cuentacontabledebito);
						}
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_debitoGrupoBodega.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableCreditoForeignKey(CuentaContable cuentacontablecredito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_creditoGrupoBodega.setSelectedItem(cuentacontablecredito);
						}
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_creditoGrupoBodega.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableProduccionForeignKey(CuentaContable cuentacontableproduccion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_produccionGrupoBodega.setSelectedItem(cuentacontableproduccion);
						}
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_produccionGrupoBodega.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableBonificaForeignKey(CuentaContable cuentacontablebonifica,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_bonificaGrupoBodega.setSelectedItem(cuentacontablebonifica);
						}
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_bonificaGrupoBodega.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableCostoBonificaForeignKey(CuentaContable cuentacontablecostobonifica,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega.setSelectedItem(cuentacontablecostobonifica);
						}
					} else {
						if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesGrupoBodega() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			GrupoBodegaConstantesFunciones.refrescarForeignKeysDescripcionesGrupoBodega(this.grupobodegaLogic.getGrupoBodegas());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			GrupoBodegaConstantesFunciones.refrescarForeignKeysDescripcionesGrupoBodega(this.grupobodegas);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Pais.class));
		classes.add(new Classe(Ciudad.class));
		classes.add(new Classe(CentroCosto.class));
		classes.add(new Classe(Empleado.class));
		classes.add(new Classe(CuentaContable.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//grupobodegaLogic.setGrupoBodegas(this.grupobodegas);
			grupobodegaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public GrupoBodegaParameterReturnGeneral getGrupoBodegaParameterGeneral() {
		return this.grupobodegaParameterGeneral;
	}
	
	public void setGrupoBodegaParameterGeneral(GrupoBodegaParameterReturnGeneral grupobodegaParameterGeneral) {
		this.grupobodegaParameterGeneral = grupobodegaParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoGrupoBodega() {
		return isPermisoTodoGrupoBodega;
	}

	public void setIsPermisoTodoGrupoBodega(Boolean isPermisoTodoGrupoBodega) {
		this.isPermisoTodoGrupoBodega = isPermisoTodoGrupoBodega;
	}

	public Boolean getIsPermisoNuevoGrupoBodega() {
		return isPermisoNuevoGrupoBodega;
	}

	public void setIsPermisoNuevoGrupoBodega(Boolean isPermisoNuevoGrupoBodega) {
		this.isPermisoNuevoGrupoBodega = isPermisoNuevoGrupoBodega;
	}

	public Boolean getIsPermisoActualizarGrupoBodega() {
		return isPermisoActualizarGrupoBodega;
	}

	public void setIsPermisoActualizarGrupoBodega(Boolean isPermisoActualizarGrupoBodega) {
		this.isPermisoActualizarGrupoBodega = isPermisoActualizarGrupoBodega;
	}

	public Boolean getIsPermisoEliminarGrupoBodega() {
		return isPermisoEliminarGrupoBodega;
	}

	public void setIsPermisoEliminarGrupoBodega(Boolean isPermisoEliminarGrupoBodega) {
		this.isPermisoEliminarGrupoBodega = isPermisoEliminarGrupoBodega;
	}

	public Boolean getIsPermisoGuardarCambiosGrupoBodega() {
		return isPermisoGuardarCambiosGrupoBodega;
	}

	public void setIsPermisoGuardarCambiosGrupoBodega(Boolean isPermisoGuardarCambiosGrupoBodega) {
		this.isPermisoGuardarCambiosGrupoBodega = isPermisoGuardarCambiosGrupoBodega;
	}
	
	public Boolean getIsPermisoConsultaGrupoBodega() {
		return isPermisoConsultaGrupoBodega;
	}

	public void setIsPermisoConsultaGrupoBodega(Boolean isPermisoConsultaGrupoBodega) {
		this.isPermisoConsultaGrupoBodega = isPermisoConsultaGrupoBodega;
	}

	public Boolean getIsPermisoBusquedaGrupoBodega() {
		return isPermisoBusquedaGrupoBodega;
	}

	public void setIsPermisoBusquedaGrupoBodega(Boolean isPermisoBusquedaGrupoBodega) {
		this.isPermisoBusquedaGrupoBodega = isPermisoBusquedaGrupoBodega;
	}

	public Boolean getIsPermisoReporteGrupoBodega() {
		return isPermisoReporteGrupoBodega;
	}

	public void setIsPermisoReporteGrupoBodega(Boolean isPermisoReporteGrupoBodega) {
		this.isPermisoReporteGrupoBodega = isPermisoReporteGrupoBodega;
	}
	
	public Boolean getIsPermisoPaginacionMedioGrupoBodega() {
		return isPermisoPaginacionMedioGrupoBodega;
	}

	public void setIsPermisoPaginacionMedioGrupoBodega(Boolean isPermisoPaginacionMedioGrupoBodega) {
		this.isPermisoPaginacionMedioGrupoBodega = isPermisoPaginacionMedioGrupoBodega;
	}
	
	public Boolean getIsPermisoPaginacionTodoGrupoBodega() {
		return isPermisoPaginacionTodoGrupoBodega;
	}

	public void setIsPermisoPaginacionTodoGrupoBodega(Boolean isPermisoPaginacionTodoGrupoBodega) {
		this.isPermisoPaginacionTodoGrupoBodega = isPermisoPaginacionTodoGrupoBodega;
	}
	
	public Boolean getIsPermisoPaginacionAltoGrupoBodega() {
		return isPermisoPaginacionAltoGrupoBodega;
	}

	public void setIsPermisoPaginacionAltoGrupoBodega(Boolean isPermisoPaginacionAltoGrupoBodega) {
		this.isPermisoPaginacionAltoGrupoBodega = isPermisoPaginacionAltoGrupoBodega;
	}
	
	public Boolean getIsPermisoCopiarGrupoBodega() {
		return isPermisoCopiarGrupoBodega;
	}

	public void setIsPermisoCopiarGrupoBodega(Boolean isPermisoCopiarGrupoBodega) {
		this.isPermisoCopiarGrupoBodega = isPermisoCopiarGrupoBodega;
	}
	
	public Boolean getIsPermisoVerFormGrupoBodega() {
		return isPermisoVerFormGrupoBodega;
	}

	public void setIsPermisoVerFormGrupoBodega(Boolean isPermisoVerFormGrupoBodega) {
		this.isPermisoVerFormGrupoBodega = isPermisoVerFormGrupoBodega;
	}
	
	public Boolean getIsPermisoDuplicarGrupoBodega() {
		return isPermisoDuplicarGrupoBodega;
	}

	public void setIsPermisoDuplicarGrupoBodega(Boolean isPermisoDuplicarGrupoBodega) {
		this.isPermisoDuplicarGrupoBodega = isPermisoDuplicarGrupoBodega;
	}
	
	public Boolean getIsPermisoOrdenGrupoBodega() {
		return isPermisoOrdenGrupoBodega;
	}

	public void setIsPermisoOrdenGrupoBodega(Boolean isPermisoOrdenGrupoBodega) {
		this.isPermisoOrdenGrupoBodega = isPermisoOrdenGrupoBodega;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoGrupoBodega() {
		return isVisibilidadCeldaNuevoGrupoBodega;
	}

	public void setIsVisibilidadCeldaNuevoGrupoBodega(Boolean isVisibilidadCeldaNuevoGrupoBodega) {
		this.isVisibilidadCeldaNuevoGrupoBodega = isVisibilidadCeldaNuevoGrupoBodega;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarGrupoBodega() {
		return isVisibilidadCeldaDuplicarGrupoBodega;
	}

	public void setIsVisibilidadCeldaDuplicarGrupoBodega(Boolean isVisibilidadCeldaDuplicarGrupoBodega) {
		this.isVisibilidadCeldaDuplicarGrupoBodega = isVisibilidadCeldaDuplicarGrupoBodega;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarGrupoBodega() {
		return isVisibilidadCeldaCopiarGrupoBodega;
	}

	public void setIsVisibilidadCeldaCopiarGrupoBodega(Boolean isVisibilidadCeldaCopiarGrupoBodega) {
		this.isVisibilidadCeldaCopiarGrupoBodega = isVisibilidadCeldaCopiarGrupoBodega;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormGrupoBodega() {
		return isVisibilidadCeldaVerFormGrupoBodega;
	}

	public void setIsVisibilidadCeldaVerFormGrupoBodega(Boolean isVisibilidadCeldaVerFormGrupoBodega) {
		this.isVisibilidadCeldaVerFormGrupoBodega = isVisibilidadCeldaVerFormGrupoBodega;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenGrupoBodega() {
		return isVisibilidadCeldaOrdenGrupoBodega;
	}

	public void setIsVisibilidadCeldaOrdenGrupoBodega(Boolean isVisibilidadCeldaOrdenGrupoBodega) {
		this.isVisibilidadCeldaOrdenGrupoBodega = isVisibilidadCeldaOrdenGrupoBodega;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesGrupoBodega() {
		return isVisibilidadCeldaNuevoRelacionesGrupoBodega;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesGrupoBodega(Boolean isVisibilidadCeldaNuevoRelacionesGrupoBodega) {
		this.isVisibilidadCeldaNuevoRelacionesGrupoBodega = isVisibilidadCeldaNuevoRelacionesGrupoBodega;
	}
	
	public Boolean getIsVisibilidadCeldaModificarGrupoBodega() {
		return isVisibilidadCeldaModificarGrupoBodega;
	}

	public void setIsVisibilidadCeldaModificarGrupoBodega(Boolean isVisibilidadCeldaModificarGrupoBodega) {
		this.isVisibilidadCeldaModificarGrupoBodega = isVisibilidadCeldaModificarGrupoBodega;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarGrupoBodega() {
		return isVisibilidadCeldaActualizarGrupoBodega;
	}

	public void setIsVisibilidadCeldaActualizarGrupoBodega(Boolean isVisibilidadCeldaActualizarGrupoBodega) {
		this.isVisibilidadCeldaActualizarGrupoBodega = isVisibilidadCeldaActualizarGrupoBodega;
	}

	public Boolean getIsVisibilidadCeldaEliminarGrupoBodega() {
		return isVisibilidadCeldaEliminarGrupoBodega;
	}

	public void setIsVisibilidadCeldaEliminarGrupoBodega(Boolean isVisibilidadCeldaEliminarGrupoBodega) {
		this.isVisibilidadCeldaEliminarGrupoBodega = isVisibilidadCeldaEliminarGrupoBodega;
	}

	public Boolean getIsVisibilidadCeldaCancelarGrupoBodega() {
		return isVisibilidadCeldaCancelarGrupoBodega;
	}

	public void setIsVisibilidadCeldaCancelarGrupoBodega(Boolean isVisibilidadCeldaCancelarGrupoBodega) {
		this.isVisibilidadCeldaCancelarGrupoBodega = isVisibilidadCeldaCancelarGrupoBodega;
	}

	public Boolean getIsVisibilidadCeldaGuardarGrupoBodega() {
		return isVisibilidadCeldaGuardarGrupoBodega;
	}

	public void setIsVisibilidadCeldaGuardarGrupoBodega(Boolean isVisibilidadCeldaGuardarGrupoBodega) {
		this.isVisibilidadCeldaGuardarGrupoBodega = isVisibilidadCeldaGuardarGrupoBodega;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosGrupoBodega() {
		return isVisibilidadCeldaGuardarCambiosGrupoBodega;
	}

	public void setIsVisibilidadCeldaGuardarCambiosGrupoBodega(Boolean isVisibilidadCeldaGuardarCambiosGrupoBodega) {
		this.isVisibilidadCeldaGuardarCambiosGrupoBodega = isVisibilidadCeldaGuardarCambiosGrupoBodega;
	}
		
	public GrupoBodegaSessionBean getgrupobodegaSessionBean() {
		return this.grupobodegaSessionBean;
	}
	
	public void setgrupobodegaSessionBean(GrupoBodegaSessionBean grupobodegaSessionBean) {
		this.grupobodegaSessionBean=grupobodegaSessionBean;
	}
	
	
	public Boolean getisVisibilidadBusquedaPorCodigo() {
		return this.isVisibilidadBusquedaPorCodigo;
	}

	public void setisVisibilidadBusquedaPorCodigo(Boolean isVisibilidadBusquedaPorCodigo) {
		this.isVisibilidadBusquedaPorCodigo=isVisibilidadBusquedaPorCodigo;
	}

	public Boolean getisVisibilidadBusquedaPorNombre() {
		return this.isVisibilidadBusquedaPorNombre;
	}

	public void setisVisibilidadBusquedaPorNombre(Boolean isVisibilidadBusquedaPorNombre) {
		this.isVisibilidadBusquedaPorNombre=isVisibilidadBusquedaPorNombre;
	}

	public Boolean getisVisibilidadBusquedaPorRuc() {
		return this.isVisibilidadBusquedaPorRuc;
	}

	public void setisVisibilidadBusquedaPorRuc(Boolean isVisibilidadBusquedaPorRuc) {
		this.isVisibilidadBusquedaPorRuc=isVisibilidadBusquedaPorRuc;
	}

	public Boolean getisVisibilidadBusquedaPorTelefono() {
		return this.isVisibilidadBusquedaPorTelefono;
	}

	public void setisVisibilidadBusquedaPorTelefono(Boolean isVisibilidadBusquedaPorTelefono) {
		this.isVisibilidadBusquedaPorTelefono=isVisibilidadBusquedaPorTelefono;
	}

	public Boolean getisVisibilidadFK_IdCentroCosto() {
		return this.isVisibilidadFK_IdCentroCosto;
	}

	public void setisVisibilidadFK_IdCentroCosto(Boolean isVisibilidadFK_IdCentroCosto) {
		this.isVisibilidadFK_IdCentroCosto=isVisibilidadFK_IdCentroCosto;
	}

	public Boolean getisVisibilidadFK_IdCiudad() {
		return this.isVisibilidadFK_IdCiudad;
	}

	public void setisVisibilidadFK_IdCiudad(Boolean isVisibilidadFK_IdCiudad) {
		this.isVisibilidadFK_IdCiudad=isVisibilidadFK_IdCiudad;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableBonifica() {
		return this.isVisibilidadFK_IdCuentaContableBonifica;
	}

	public void setisVisibilidadFK_IdCuentaContableBonifica(Boolean isVisibilidadFK_IdCuentaContableBonifica) {
		this.isVisibilidadFK_IdCuentaContableBonifica=isVisibilidadFK_IdCuentaContableBonifica;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableCosto() {
		return this.isVisibilidadFK_IdCuentaContableCosto;
	}

	public void setisVisibilidadFK_IdCuentaContableCosto(Boolean isVisibilidadFK_IdCuentaContableCosto) {
		this.isVisibilidadFK_IdCuentaContableCosto=isVisibilidadFK_IdCuentaContableCosto;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableCostoBonifica() {
		return this.isVisibilidadFK_IdCuentaContableCostoBonifica;
	}

	public void setisVisibilidadFK_IdCuentaContableCostoBonifica(Boolean isVisibilidadFK_IdCuentaContableCostoBonifica) {
		this.isVisibilidadFK_IdCuentaContableCostoBonifica=isVisibilidadFK_IdCuentaContableCostoBonifica;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableCredito() {
		return this.isVisibilidadFK_IdCuentaContableCredito;
	}

	public void setisVisibilidadFK_IdCuentaContableCredito(Boolean isVisibilidadFK_IdCuentaContableCredito) {
		this.isVisibilidadFK_IdCuentaContableCredito=isVisibilidadFK_IdCuentaContableCredito;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableDebito() {
		return this.isVisibilidadFK_IdCuentaContableDebito;
	}

	public void setisVisibilidadFK_IdCuentaContableDebito(Boolean isVisibilidadFK_IdCuentaContableDebito) {
		this.isVisibilidadFK_IdCuentaContableDebito=isVisibilidadFK_IdCuentaContableDebito;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableDescuento() {
		return this.isVisibilidadFK_IdCuentaContableDescuento;
	}

	public void setisVisibilidadFK_IdCuentaContableDescuento(Boolean isVisibilidadFK_IdCuentaContableDescuento) {
		this.isVisibilidadFK_IdCuentaContableDescuento=isVisibilidadFK_IdCuentaContableDescuento;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableDevolucion() {
		return this.isVisibilidadFK_IdCuentaContableDevolucion;
	}

	public void setisVisibilidadFK_IdCuentaContableDevolucion(Boolean isVisibilidadFK_IdCuentaContableDevolucion) {
		this.isVisibilidadFK_IdCuentaContableDevolucion=isVisibilidadFK_IdCuentaContableDevolucion;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableInventario() {
		return this.isVisibilidadFK_IdCuentaContableInventario;
	}

	public void setisVisibilidadFK_IdCuentaContableInventario(Boolean isVisibilidadFK_IdCuentaContableInventario) {
		this.isVisibilidadFK_IdCuentaContableInventario=isVisibilidadFK_IdCuentaContableInventario;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableProduccion() {
		return this.isVisibilidadFK_IdCuentaContableProduccion;
	}

	public void setisVisibilidadFK_IdCuentaContableProduccion(Boolean isVisibilidadFK_IdCuentaContableProduccion) {
		this.isVisibilidadFK_IdCuentaContableProduccion=isVisibilidadFK_IdCuentaContableProduccion;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableVenta() {
		return this.isVisibilidadFK_IdCuentaContableVenta;
	}

	public void setisVisibilidadFK_IdCuentaContableVenta(Boolean isVisibilidadFK_IdCuentaContableVenta) {
		this.isVisibilidadFK_IdCuentaContableVenta=isVisibilidadFK_IdCuentaContableVenta;
	}

	public Boolean getisVisibilidadFK_IdEmpleado() {
		return this.isVisibilidadFK_IdEmpleado;
	}

	public void setisVisibilidadFK_IdEmpleado(Boolean isVisibilidadFK_IdEmpleado) {
		this.isVisibilidadFK_IdEmpleado=isVisibilidadFK_IdEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdPais() {
		return this.isVisibilidadFK_IdPais;
	}

	public void setisVisibilidadFK_IdPais(Boolean isVisibilidadFK_IdPais) {
		this.isVisibilidadFK_IdPais=isVisibilidadFK_IdPais;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(GrupoBodega grupobodega)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(grupobodega,null);
				this.setActualParaGuardarPaisForeignKey(grupobodega,null);
				this.setActualParaGuardarCiudadForeignKey(grupobodega,null);
				this.setActualParaGuardarCentroCostoForeignKey(grupobodega,null);
				this.setActualParaGuardarEmpleadoForeignKey(grupobodega,null);
				this.setActualParaGuardarCuentaContableInventarioForeignKey(grupobodega,null);
				this.setActualParaGuardarCuentaContableCostoForeignKey(grupobodega,null);
				this.setActualParaGuardarCuentaContableVentaForeignKey(grupobodega,null);
				this.setActualParaGuardarCuentaContableDescuentoForeignKey(grupobodega,null);
				this.setActualParaGuardarCuentaContableDevolucionForeignKey(grupobodega,null);
				this.setActualParaGuardarCuentaContableDebitoForeignKey(grupobodega,null);
				this.setActualParaGuardarCuentaContableCreditoForeignKey(grupobodega,null);
				this.setActualParaGuardarCuentaContableProduccionForeignKey(grupobodega,null);
				this.setActualParaGuardarCuentaContableBonificaForeignKey(grupobodega,null);
				this.setActualParaGuardarCuentaContableCostoBonificaForeignKey(grupobodega,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(GrupoBodega grupobodega,GrupoBodega grupobodegaAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalGrupoBodega(grupobodega);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		grupobodegaAux.setId(grupobodega.getId());
		grupobodegaAux.setVersionRow(grupobodega.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessGrupoBodega();
		
			int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = grupobodegaValidator.getInvalidValues(this.grupobodega);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			grupobodegaLogic.setDatosCliente(datosCliente);
			grupobodegaLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				grupobodegaAux=new  GrupoBodega();
				
				grupobodegaAux.setIsNew(true);
				grupobodegaAux.setIsChanged(true);
				
				grupobodegaAux.setGrupoBodegaOriginal(this.grupobodega);
				
				grupobodegaAux.setId(this.grupobodega.getId());	
				grupobodegaAux.setVersionRow(this.grupobodega.getVersionRow());	
				grupobodegaAux.setid_empresa(this.grupobodega.getid_empresa());	
				grupobodegaAux.setcodigo(this.grupobodega.getcodigo());	
				grupobodegaAux.setnombre(this.grupobodega.getnombre());	
				grupobodegaAux.setruc(this.grupobodega.getruc());	
				grupobodegaAux.setdireccion(this.grupobodega.getdireccion());	
				grupobodegaAux.settelefono(this.grupobodega.gettelefono());	
				grupobodegaAux.setid_pais(this.grupobodega.getid_pais());	
				grupobodegaAux.setid_ciudad(this.grupobodega.getid_ciudad());	
				grupobodegaAux.setid_centro_costo(this.grupobodega.getid_centro_costo());	
				grupobodegaAux.setid_empleado(this.grupobodega.getid_empleado());	
				grupobodegaAux.setdescripcion(this.grupobodega.getdescripcion());	
				grupobodegaAux.setid_cuenta_contable_inventario(this.grupobodega.getid_cuenta_contable_inventario());	
				grupobodegaAux.setid_cuenta_contable_costo(this.grupobodega.getid_cuenta_contable_costo());	
				grupobodegaAux.setid_cuenta_contable_venta(this.grupobodega.getid_cuenta_contable_venta());	
				grupobodegaAux.setid_cuenta_contable_descuento(this.grupobodega.getid_cuenta_contable_descuento());	
				grupobodegaAux.setid_cuenta_contable_devolucion(this.grupobodega.getid_cuenta_contable_devolucion());	
				grupobodegaAux.setid_cuenta_contable_debito(this.grupobodega.getid_cuenta_contable_debito());	
				grupobodegaAux.setid_cuenta_contable_credito(this.grupobodega.getid_cuenta_contable_credito());	
				grupobodegaAux.setid_cuenta_contable_produccion(this.grupobodega.getid_cuenta_contable_produccion());	
				grupobodegaAux.setid_cuenta_contable_bonifica(this.grupobodega.getid_cuenta_contable_bonifica());	
				grupobodegaAux.setid_cuenta_contable_costo_bonifica(this.grupobodega.getid_cuenta_contable_costo_bonifica());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.grupobodegaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.grupobodegaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(grupobodegaAux,grupobodegaLogic.getGrupoBodegas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(grupobodegaAux,grupobodegas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.grupobodegaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.grupobodegaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegaLogic.saveGrupoBodegas();//WithConnection
						//grupobodegaLogic.getSetVersionRowGrupoBodegas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.grupobodega,grupobodegaAux);
					
					this.refrescarForeignKeysDescripcionesGrupoBodega();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.grupobodegaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.getBodegas().addAll(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegasEliminados);
							this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.getParametroInventarioDefectos().addAll(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegas.addAll(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegasEliminados);
							this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectos.addAll(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectosEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								grupobodegaLogic.saveGrupoBodegaRelaciones(grupobodegaAux,this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.getBodegas(),this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.getParametroInventarioDefectos());//WithConnection
								//grupobodegaLogic.getSetVersionRowGrupoBodegas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.grupobodega,grupobodegaAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.setBodegas(new ArrayList<Bodega>());
							this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.setParametroInventarioDefectos(new ArrayList<ParametroInventarioDefecto>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegas= new ArrayList<Bodega>();
							this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectos= new ArrayList<ParametroInventarioDefecto>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.quitarFilaTotales();}
							grupobodegaAux.setBodegas(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.getBodegas());

							if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.quitarFilaTotales();}
							grupobodegaAux.setParametroInventarioDefectos(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.getParametroInventarioDefectos());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.grupobodegaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.grupobodegaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(grupobodegaAux,grupobodegaLogic.getGrupoBodegas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(grupobodegaAux,grupobodegas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.grupobodega,grupobodegaAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				grupobodegaAux=new  GrupoBodega();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.grupobodegaSessionBean.getEsGuardarRelacionado() 
					|| (this.grupobodegaSessionBean.getEsGuardarRelacionado() && this.grupobodega.getId()>=0)) {
						
					grupobodegaAux.setIsNew(false);
				}
				
				grupobodegaAux.setIsDeleted(false);
			
				grupobodegaAux.setId(this.grupobodega.getId());	
				grupobodegaAux.setVersionRow(this.grupobodega.getVersionRow());	
				grupobodegaAux.setid_empresa(this.grupobodega.getid_empresa());	
				grupobodegaAux.setcodigo(this.grupobodega.getcodigo());	
				grupobodegaAux.setnombre(this.grupobodega.getnombre());	
				grupobodegaAux.setruc(this.grupobodega.getruc());	
				grupobodegaAux.setdireccion(this.grupobodega.getdireccion());	
				grupobodegaAux.settelefono(this.grupobodega.gettelefono());	
				grupobodegaAux.setid_pais(this.grupobodega.getid_pais());	
				grupobodegaAux.setid_ciudad(this.grupobodega.getid_ciudad());	
				grupobodegaAux.setid_centro_costo(this.grupobodega.getid_centro_costo());	
				grupobodegaAux.setid_empleado(this.grupobodega.getid_empleado());	
				grupobodegaAux.setdescripcion(this.grupobodega.getdescripcion());	
				grupobodegaAux.setid_cuenta_contable_inventario(this.grupobodega.getid_cuenta_contable_inventario());	
				grupobodegaAux.setid_cuenta_contable_costo(this.grupobodega.getid_cuenta_contable_costo());	
				grupobodegaAux.setid_cuenta_contable_venta(this.grupobodega.getid_cuenta_contable_venta());	
				grupobodegaAux.setid_cuenta_contable_descuento(this.grupobodega.getid_cuenta_contable_descuento());	
				grupobodegaAux.setid_cuenta_contable_devolucion(this.grupobodega.getid_cuenta_contable_devolucion());	
				grupobodegaAux.setid_cuenta_contable_debito(this.grupobodega.getid_cuenta_contable_debito());	
				grupobodegaAux.setid_cuenta_contable_credito(this.grupobodega.getid_cuenta_contable_credito());	
				grupobodegaAux.setid_cuenta_contable_produccion(this.grupobodega.getid_cuenta_contable_produccion());	
				grupobodegaAux.setid_cuenta_contable_bonifica(this.grupobodega.getid_cuenta_contable_bonifica());	
				grupobodegaAux.setid_cuenta_contable_costo_bonifica(this.grupobodega.getid_cuenta_contable_costo_bonifica());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(grupobodegaAux,grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(grupobodegaAux,grupobodegas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.grupobodegaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.grupobodegaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegaLogic.saveGrupoBodegas();//WithConnection
						//grupobodegaLogic.getSetVersionRowGrupoBodegas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.grupobodega,grupobodegaAux);
					
					this.refrescarForeignKeysDescripcionesGrupoBodega();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.grupobodegaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.getBodegas().addAll(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegasEliminados);
							this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.getParametroInventarioDefectos().addAll(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegas.addAll(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegasEliminados);
							this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectos.addAll(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectosEliminados);
						}
						//ARCHITECTURE
						
						if(!this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								grupobodegaLogic.saveGrupoBodegaRelaciones(grupobodegaAux,this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.getBodegas(),this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.getParametroInventarioDefectos());//WithConnection
								//grupobodegaLogic.getSetVersionRowGrupoBodegas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.grupobodega,grupobodegaAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.setBodegas(new ArrayList<Bodega>());
							this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.setParametroInventarioDefectos(new ArrayList<ParametroInventarioDefecto>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegas= new ArrayList<Bodega>();
							this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectos= new ArrayList<ParametroInventarioDefecto>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.quitarFilaTotales();}
							grupobodegaAux.setBodegas(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.getBodegas());

							if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.quitarFilaTotales();}
							grupobodegaAux.setParametroInventarioDefectos(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.getParametroInventarioDefectos());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.grupobodegaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.grupobodegaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(grupobodegaAux,grupobodegaLogic.getGrupoBodegas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(grupobodegaAux,grupobodegas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.grupobodega,grupobodegaAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				grupobodegaAux=new  GrupoBodega();
				
				grupobodegaAux.setIsNew(false);
				grupobodegaAux.setIsChanged(false);
				
				grupobodegaAux.setIsDeleted(true);
				
				grupobodegaAux.setId(this.grupobodega.getId());	
				grupobodegaAux.setVersionRow(this.grupobodega.getVersionRow());	
				grupobodegaAux.setid_empresa(this.grupobodega.getid_empresa());	
				grupobodegaAux.setcodigo(this.grupobodega.getcodigo());	
				grupobodegaAux.setnombre(this.grupobodega.getnombre());	
				grupobodegaAux.setruc(this.grupobodega.getruc());	
				grupobodegaAux.setdireccion(this.grupobodega.getdireccion());	
				grupobodegaAux.settelefono(this.grupobodega.gettelefono());	
				grupobodegaAux.setid_pais(this.grupobodega.getid_pais());	
				grupobodegaAux.setid_ciudad(this.grupobodega.getid_ciudad());	
				grupobodegaAux.setid_centro_costo(this.grupobodega.getid_centro_costo());	
				grupobodegaAux.setid_empleado(this.grupobodega.getid_empleado());	
				grupobodegaAux.setdescripcion(this.grupobodega.getdescripcion());	
				grupobodegaAux.setid_cuenta_contable_inventario(this.grupobodega.getid_cuenta_contable_inventario());	
				grupobodegaAux.setid_cuenta_contable_costo(this.grupobodega.getid_cuenta_contable_costo());	
				grupobodegaAux.setid_cuenta_contable_venta(this.grupobodega.getid_cuenta_contable_venta());	
				grupobodegaAux.setid_cuenta_contable_descuento(this.grupobodega.getid_cuenta_contable_descuento());	
				grupobodegaAux.setid_cuenta_contable_devolucion(this.grupobodega.getid_cuenta_contable_devolucion());	
				grupobodegaAux.setid_cuenta_contable_debito(this.grupobodega.getid_cuenta_contable_debito());	
				grupobodegaAux.setid_cuenta_contable_credito(this.grupobodega.getid_cuenta_contable_credito());	
				grupobodegaAux.setid_cuenta_contable_produccion(this.grupobodega.getid_cuenta_contable_produccion());	
				grupobodegaAux.setid_cuenta_contable_bonifica(this.grupobodega.getid_cuenta_contable_bonifica());	
				grupobodegaAux.setid_cuenta_contable_costo_bonifica(this.grupobodega.getid_cuenta_contable_costo_bonifica());	
				
				if(this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.grupobodegaAux.getId()>=0) {	
						this.grupobodegasEliminados.add(grupobodegaAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(grupobodegaAux,grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(grupobodegaAux,grupobodegas);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.grupobodegaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.grupobodegaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegaLogic.saveGrupoBodegas();//WithConnection
						//grupobodegaLogic.getSetVersionRowGrupoBodegas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.grupobodegaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.getBodegas().addAll(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegasEliminados);
							this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.getParametroInventarioDefectos().addAll(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegas.addAll(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegasEliminados);
							this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectos.addAll(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectosEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								grupobodegaLogic.saveGrupoBodegaRelaciones(grupobodegaAux,this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.getBodegas(),this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.getParametroInventarioDefectos());//WithConnection
								//grupobodegaLogic.getSetVersionRowGrupoBodegas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.setBodegas(new ArrayList<Bodega>());
							this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.setParametroInventarioDefectos(new ArrayList<ParametroInventarioDefecto>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegas= new ArrayList<Bodega>();
							this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectos= new ArrayList<ParametroInventarioDefecto>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.quitarFilaTotales();}
							grupobodegaAux.setBodegas(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.getBodegas());

							if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.quitarFilaTotales();}
							grupobodegaAux.setParametroInventarioDefectos(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.getParametroInventarioDefectos());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.grupobodegaSessionBean.getEstaModoGuardarRelaciones() 
								|| this.grupobodegaSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(grupobodegaAux,grupobodegaLogic.getGrupoBodegas());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(grupobodegaAux,grupobodegas);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getGrupoBodegas().addAll(this.grupobodegasEliminados);
					
					grupobodegaLogic.saveGrupoBodegas();//WithConnection
					//grupobodegaLogic.getSetVersionRowGrupoBodegas();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesGrupoBodega();
				
				this.grupobodegasEliminados= new ArrayList<GrupoBodega>();		
			}
			
			if(this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.grupobodegaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Grupo Bodega GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Grupo Bodega",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.grupobodega=grupobodegaAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessGrupoBodega();
      	}
		
	}	
	
	public void actualizarRelaciones(GrupoBodega grupobodegaLocal) throws Exception {
		
		if(this.grupobodegaSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				grupobodegaLocal.setBodegas(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.getBodegas());
				grupobodegaLocal.setParametroInventarioDefectos(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.getParametroInventarioDefectos());
			
			} else {
			
				grupobodegaLocal.setBodegas(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegas);
				grupobodegaLocal.setParametroInventarioDefectos(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectos);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(GrupoBodega grupobodegaLocal) throws Exception {	
		if(this.grupobodegaSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				grupobodegaLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PaisDetalleFormJInternalFrame.class)) {
				PaisBeanSwingJInternalFrame paisBeanSwingJInternalFrameLocal=(PaisBeanSwingJInternalFrame) ((PaisDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				paisBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPais(paisBeanSwingJInternalFrameLocal.getpais(),true);
				paisBeanSwingJInternalFrameLocal.actualizarLista(paisBeanSwingJInternalFrameLocal.pais,this.paissForeignKey);

				paisBeanSwingJInternalFrameLocal.actualizarRelaciones(paisBeanSwingJInternalFrameLocal.pais);

				grupobodegaLocal.setPais(paisBeanSwingJInternalFrameLocal.pais);

				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey("Formulario");
				this.setActualPaisForeignKey(paisBeanSwingJInternalFrameLocal.pais.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CiudadDetalleFormJInternalFrame.class)) {
				CiudadBeanSwingJInternalFrame ciudadBeanSwingJInternalFrameLocal=(CiudadBeanSwingJInternalFrame) ((CiudadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ciudadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCiudad(ciudadBeanSwingJInternalFrameLocal.getciudad(),true);
				ciudadBeanSwingJInternalFrameLocal.actualizarLista(ciudadBeanSwingJInternalFrameLocal.ciudad,this.ciudadsForeignKey);

				ciudadBeanSwingJInternalFrameLocal.actualizarRelaciones(ciudadBeanSwingJInternalFrameLocal.ciudad);

				grupobodegaLocal.setCiudad(ciudadBeanSwingJInternalFrameLocal.ciudad);

				this.addItemDefectoCombosForeignKeyCiudad();
				this.cargarCombosFrameCiudadsForeignKey("Formulario");
				this.setActualCiudadForeignKey(ciudadBeanSwingJInternalFrameLocal.ciudad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroCostoDetalleFormJInternalFrame.class)) {
				CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrameLocal=(CentroCostoBeanSwingJInternalFrame) ((CentroCostoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centrocostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroCosto(centrocostoBeanSwingJInternalFrameLocal.getcentrocosto(),true);
				centrocostoBeanSwingJInternalFrameLocal.actualizarLista(centrocostoBeanSwingJInternalFrameLocal.centrocosto,this.centrocostosForeignKey);

				centrocostoBeanSwingJInternalFrameLocal.actualizarRelaciones(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				grupobodegaLocal.setCentroCosto(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey("Formulario");
				this.setActualCentroCostoForeignKey(centrocostoBeanSwingJInternalFrameLocal.centrocosto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoBeanSwingJInternalFrameLocal.actualizarLista(empleadoBeanSwingJInternalFrameLocal.empleado,this.empleadosForeignKey);

				empleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoBeanSwingJInternalFrameLocal.empleado);

				grupobodegaLocal.setEmpleado(empleadoBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey("Formulario");
				this.setActualEmpleadoForeignKey(empleadoBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableinventarioBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableinventarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableinventarioBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableinventarioBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableinventarioBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableinventariosForeignKey);

				cuentacontableinventarioBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableinventarioBeanSwingJInternalFrameLocal.cuentacontable);

				grupobodegaLocal.setCuentaContableInventario(cuentacontableinventarioBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableInventario();
				this.cargarCombosFrameCuentaContableInventariosForeignKey("Formulario");
				this.setActualCuentaContableInventarioForeignKey(cuentacontableinventarioBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontablecostoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontablecostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontablecostoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontablecostoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontablecostoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablecostosForeignKey);

				cuentacontablecostoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontablecostoBeanSwingJInternalFrameLocal.cuentacontable);

				grupobodegaLocal.setCuentaContableCosto(cuentacontablecostoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableCosto();
				this.cargarCombosFrameCuentaContableCostosForeignKey("Formulario");
				this.setActualCuentaContableCostoForeignKey(cuentacontablecostoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableventaBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableventaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableventaBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableventaBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableventaBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableventasForeignKey);

				cuentacontableventaBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableventaBeanSwingJInternalFrameLocal.cuentacontable);

				grupobodegaLocal.setCuentaContableVenta(cuentacontableventaBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableVenta();
				this.cargarCombosFrameCuentaContableVentasForeignKey("Formulario");
				this.setActualCuentaContableVentaForeignKey(cuentacontableventaBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontabledescuentoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontabledescuentoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontabledescuentoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontabledescuentoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontabledescuentoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontabledescuentosForeignKey);

				cuentacontabledescuentoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontabledescuentoBeanSwingJInternalFrameLocal.cuentacontable);

				grupobodegaLocal.setCuentaContableDescuento(cuentacontabledescuentoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableDescuento();
				this.cargarCombosFrameCuentaContableDescuentosForeignKey("Formulario");
				this.setActualCuentaContableDescuentoForeignKey(cuentacontabledescuentoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontabledevolucionBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontabledevolucionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontabledevolucionBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontabledevolucionBeanSwingJInternalFrameLocal.actualizarLista(cuentacontabledevolucionBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontabledevolucionsForeignKey);

				cuentacontabledevolucionBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontabledevolucionBeanSwingJInternalFrameLocal.cuentacontable);

				grupobodegaLocal.setCuentaContableDevolucion(cuentacontabledevolucionBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableDevolucion();
				this.cargarCombosFrameCuentaContableDevolucionsForeignKey("Formulario");
				this.setActualCuentaContableDevolucionForeignKey(cuentacontabledevolucionBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontabledebitoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontabledebitoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontabledebitoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontabledebitoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontabledebitoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontabledebitosForeignKey);

				cuentacontabledebitoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontabledebitoBeanSwingJInternalFrameLocal.cuentacontable);

				grupobodegaLocal.setCuentaContableDebito(cuentacontabledebitoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableDebito();
				this.cargarCombosFrameCuentaContableDebitosForeignKey("Formulario");
				this.setActualCuentaContableDebitoForeignKey(cuentacontabledebitoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontablecreditoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontablecreditoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontablecreditoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontablecreditoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontablecreditoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablecreditosForeignKey);

				cuentacontablecreditoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontablecreditoBeanSwingJInternalFrameLocal.cuentacontable);

				grupobodegaLocal.setCuentaContableCredito(cuentacontablecreditoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableCredito();
				this.cargarCombosFrameCuentaContableCreditosForeignKey("Formulario");
				this.setActualCuentaContableCreditoForeignKey(cuentacontablecreditoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableproduccionBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableproduccionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableproduccionBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableproduccionBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableproduccionBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableproduccionsForeignKey);

				cuentacontableproduccionBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableproduccionBeanSwingJInternalFrameLocal.cuentacontable);

				grupobodegaLocal.setCuentaContableProduccion(cuentacontableproduccionBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableProduccion();
				this.cargarCombosFrameCuentaContableProduccionsForeignKey("Formulario");
				this.setActualCuentaContableProduccionForeignKey(cuentacontableproduccionBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontablebonificaBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontablebonificaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontablebonificaBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontablebonificaBeanSwingJInternalFrameLocal.actualizarLista(cuentacontablebonificaBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablebonificasForeignKey);

				cuentacontablebonificaBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontablebonificaBeanSwingJInternalFrameLocal.cuentacontable);

				grupobodegaLocal.setCuentaContableBonifica(cuentacontablebonificaBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableBonifica();
				this.cargarCombosFrameCuentaContableBonificasForeignKey("Formulario");
				this.setActualCuentaContableBonificaForeignKey(cuentacontablebonificaBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontablecostobonificaBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontablecostobonificaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontablecostobonificaBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontablecostobonificaBeanSwingJInternalFrameLocal.actualizarLista(cuentacontablecostobonificaBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablecostobonificasForeignKey);

				cuentacontablecostobonificaBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontablecostobonificaBeanSwingJInternalFrameLocal.cuentacontable);

				grupobodegaLocal.setCuentaContableCostoBonifica(cuentacontablecostobonificaBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableCostoBonifica();
				this.cargarCombosFrameCuentaContableCostoBonificasForeignKey("Formulario");
				this.setActualCuentaContableCostoBonificaForeignKey(cuentacontablecostobonificaBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarGrupoBodegaActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = grupobodegaValidator.getInvalidValues(this.grupobodega);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(GrupoBodega grupobodega,List<GrupoBodega> grupobodegas) throws Exception {
		try	{		
			GrupoBodegaConstantesFunciones.actualizarLista(grupobodega,grupobodegas,this.grupobodegaSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(GrupoBodega grupobodega,List<GrupoBodega> grupobodegas) throws Exception {
		try	{			
			GrupoBodegaConstantesFunciones.actualizarSelectedLista(grupobodega,grupobodegas);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<GrupoBodega> grupobodegasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				grupobodegasLocal=this.grupobodegaLogic.getGrupoBodegas();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				grupobodegasLocal=this.grupobodegas;
			}
			//ARCHITECTURE
		
			for(GrupoBodega grupobodegaLocal:grupobodegasLocal) {
				if(this.permiteMantenimiento(grupobodegaLocal) && grupobodegaLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+GrupoBodegaConstantesFunciones.getGrupoBodegaLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_empresaGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.CODIGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelcodigoGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.NOMBRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelnombreGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.RUC)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelrucGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.DIRECCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabeldireccionGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.TELEFONO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabeltelefonoGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.IDPAIS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_paisGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.IDCIUDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_ciudadGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.IDCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_centro_costoGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.IDEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_empleadoGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabeldescripcionGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.IDCUENTACONTABLEINVENTARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_inventarioGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.IDCUENTACONTABLECOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_costoGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.IDCUENTACONTABLEVENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_ventaGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.IDCUENTACONTABLEDESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_descuentoGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.IDCUENTACONTABLEDEVOLUCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_devolucionGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.IDCUENTACONTABLEDEBITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_debitoGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.IDCUENTACONTABLECREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_creditoGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.IDCUENTACONTABLEPRODUCCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_produccionGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.IDCUENTACONTABLEBONIFICA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_bonificaGrupoBodega,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GrupoBodegaConstantesFunciones.IDCUENTACONTABLECOSTOBONIFICA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_costo_bonificaGrupoBodega,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_empresaGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelcodigoGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelnombreGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelrucGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabeldireccionGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabeltelefonoGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_paisGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_ciudadGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_centro_costoGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_empleadoGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabeldescripcionGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_inventarioGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_costoGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_ventaGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_descuentoGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_devolucionGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_debitoGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_creditoGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_produccionGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_bonificaGrupoBodega,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGrupoBodega.jLabelid_cuenta_contable_costo_bonificaGrupoBodega,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("Bodega")) {
			if(this.grupobodega==null) {
				this.grupobodega= new GrupoBodega();
			}

			if(this.grupobodegaSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoGrupoBodega
				this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.getbodega().setGrupoBodega(this.grupobodega);
			}

			return;
		}
		 else  if(sTipo.equals("ParametroInventarioDefecto")) {
			if(this.grupobodega==null) {
				this.grupobodega= new GrupoBodega();
			}

			if(this.grupobodegaSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoGrupoBodega
				this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.getparametroinventariodefecto().setGrupoBodega(this.grupobodega);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoGrupoBodega--;	
		
		
		this.grupobodegaAux=new GrupoBodega();
		
		this.grupobodegaAux.setId(this.iIdNuevoGrupoBodega);
		this.grupobodegaAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.grupobodegaLogic.getGrupoBodegas().add(this.grupobodegaAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.grupobodegas.add(this.grupobodegaAux);
		}
		//ARCHITECTURE
		
		this.grupobodega=this.grupobodegaAux;
		
		if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioGrupoBodega(this.grupobodega);
			this.setVariablesObjetoActualToFormularioForeignKeyGrupoBodega(this.grupobodega);
		}
				
		//this.setDefaultControlesGrupoBodega();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyGrupoBodega();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyGrupoBodega();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyGrupoBodega();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualGrupoBodega(this.grupobodegaBean,this.grupobodega,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(GrupoBodegaConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.grupobodegaSessionBean.getConGuardarRelaciones()) {
			classes=GrupoBodegaConstantesFunciones.getClassesRelationshipsOfGrupoBodega(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.grupobodegaReturnGeneral=grupobodegaLogic.procesarEventosGrupoBodegasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.grupobodegaLogic.getGrupoBodegas(),this.grupobodega,this.grupobodegaParameterGeneral,this.isEsNuevoGrupoBodega,classes);//this.grupobodegaLogic.getGrupoBodega()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanGrupoBodega(this.grupobodegaReturnGeneral,this.grupobodegaBean,false);
		
		if(this.grupobodegaReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyGrupoBodega(this.grupobodegaReturnGeneral.getGrupoBodega());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioGrupoBodega(this.grupobodegaReturnGeneral.getGrupoBodega());
		}
		
		if(this.grupobodegaReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioGrupoBodega(this.grupobodegaReturnGeneral.getGrupoBodega(),classes);//this.grupobodegaBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyGrupoBodega();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyGrupoBodega();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			GrupoBodegaBeanSwingJInternalFrameAdditional.RecargarFormGrupoBodega(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingGrupoBodega(false);
						
			if(grupobodegaSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaSessionBean.getEsGuardarRelacionado() && BodegaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonBodegaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoSessionBean.getEsGuardarRelacionado() && ParametroInventarioDefectoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonParametroInventarioDefectoActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualGrupoBodega();
			}
			
			this.actualizarVisualTableDatosGrupoBodega();
			
			this.jTableDatosGrupoBodega.setRowSelectionInterval(this.getIndiceNuevoGrupoBodega(), this.getIndiceNuevoGrupoBodega());
			
			this.seleccionarFilaTablaGrupoBodegaActual();
						
			this.actualizarEstadoCeldasBotonesGrupoBodega("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesGrupoBodega(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormGrupoBodega.jTextFieldcodigoGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarcodigoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jTextAreanombreGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarnombreGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jTextFieldrucGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarrucGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jTextAreadireccionGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activardireccionGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jTextFieldtelefonoGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activartelefonoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jTextAreadescripcionGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activardescripcionGrupoBodega);	
		//
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empresaGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarid_empresaGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_paisGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarid_paisGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_ciudadGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarid_ciudadGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_centro_costoGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarid_centro_costoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empleadoGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarid_empleadoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_inventarioGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarid_cuenta_contable_inventarioGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costoGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarid_cuenta_contable_costoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_ventaGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarid_cuenta_contable_ventaGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_descuentoGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarid_cuenta_contable_descuentoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_devolucionGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarid_cuenta_contable_devolucionGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_debitoGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarid_cuenta_contable_debitoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_creditoGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarid_cuenta_contable_creditoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_produccionGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarid_cuenta_contable_produccionGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_bonificaGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarid_cuenta_contable_bonificaGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega.setEnabled(isHabilitar && this.grupobodegaConstantesFunciones.activarid_cuenta_contable_costo_bonificaGrupoBodega);
	};
	
	public void setDefaultControlesGrupoBodega() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoGrupoBodega(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.grupobodegaSessionBean.setConGuardarRelaciones(true);			
			this.grupobodegaSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormGrupoBodega.jTabbedPaneRelacionesGrupoBodega.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.grupobodegaSessionBean.setConGuardarRelaciones(false);			
			this.grupobodegaSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormGrupoBodega.jTabbedPaneRelacionesGrupoBodega.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoGrupoBodega() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(GrupoBodega grupobodegaAux:this.grupobodegaLogic.getGrupoBodegas()) {
				if(grupobodegaAux.getId().equals(this.iIdNuevoGrupoBodega)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(GrupoBodega grupobodegaAux:this.grupobodegas) {
				if(grupobodegaAux.getId().equals(this.iIdNuevoGrupoBodega)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualGrupoBodega(GrupoBodega grupobodega,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(GrupoBodega grupobodegaAux:this.grupobodegaLogic.getGrupoBodegas()) {
				if(grupobodegaAux.getId().equals(grupobodega.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(GrupoBodega grupobodegaAux:this.grupobodegas) {
				if(grupobodegaAux.getId().equals(grupobodega.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalGrupoBodega(GrupoBodega grupobodegaOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(GrupoBodega grupobodegaAux:this.grupobodegaLogic.getGrupoBodegas()) {
				if(grupobodegaAux.getGrupoBodegaOriginal().getId().equals(grupobodegaOriginal.getId())) {
					existe=true;
					grupobodegaOriginal.setId(grupobodegaAux.getId());
					grupobodegaOriginal.setVersionRow(grupobodegaAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(GrupoBodega grupobodegaAux:this.grupobodegas) {
				if(grupobodegaAux.getGrupoBodegaOriginal().getId().equals(grupobodegaOriginal.getId())) {
					existe=true;
					grupobodegaOriginal.setId(grupobodegaAux.getId());
					grupobodegaOriginal.setVersionRow(grupobodegaAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosGrupoBodega(Boolean esParaCancelar) throws Exception {
		grupobodegasAux=new ArrayList<GrupoBodega>();
		grupobodegaAux=new GrupoBodega();
		
		if(!this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(GrupoBodega grupobodegaAux:this.grupobodegaLogic.getGrupoBodegas()) {
					if(grupobodegaAux.getId()<0) {
						grupobodegasAux.add(grupobodegaAux);
					}		
				}
				this.iIdNuevoGrupoBodega=0L;
				this.grupobodegaLogic.getGrupoBodegas().removeAll(grupobodegasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(GrupoBodega grupobodegaAux:this.grupobodegas) {
					if(grupobodegaAux.getId()<0) {
						grupobodegasAux.add(grupobodegaAux);
					}		
				}
				this.iIdNuevoGrupoBodega=0L;
				this.grupobodegas.removeAll(grupobodegasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoGrupoBodega 
					&& this.grupobodegaLogic.getGrupoBodegas().size()>0
					) {
					grupobodegaAux=this.grupobodegaLogic.getGrupoBodegas().get(this.grupobodegaLogic.getGrupoBodegas().size() - 1);
				
					if(grupobodegaAux.getId()<0) {
						this.grupobodegaLogic.getGrupoBodegas().remove(grupobodegaAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoGrupoBodega && this.grupobodegas.size()>0) {
					grupobodegaAux=this.grupobodegas.get(this.grupobodegas.size() - 1);
				
					if(grupobodegaAux.getId()<0) {
						this.grupobodegas.remove(grupobodegaAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoGrupoBodega(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(grupobodega.getId()<0) {
				this.grupobodegaLogic.getGrupoBodegas().remove(this.grupobodega);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(grupobodega.getId()<0) {
				this.grupobodegas.remove(this.grupobodega);
			}
		}			
	}
	
	public void setEstadosInicialesGrupoBodega(List<GrupoBodega> grupobodegasAux) throws Exception {
		GrupoBodegaConstantesFunciones.setEstadosInicialesGrupoBodega(grupobodegasAux);
	}
	
	public void setEstadosInicialesGrupoBodega(GrupoBodega grupobodegaAux) throws Exception {
		GrupoBodegaConstantesFunciones.setEstadosInicialesGrupoBodega(grupobodegaAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarGrupoBodegaActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesGrupoBodega("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarGrupoBodegaActual()) {
				if(!this.isEsNuevoGrupoBodega) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesGrupoBodega("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoGrupoBodega=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarGrupoBodegaActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Grupo Bodega ?", "MANTENIMIENTO DE Grupo Bodega", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesGrupoBodega("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(GrupoBodega grupobodega) throws Exception {
		GrupoBodegaConstantesFunciones.seleccionarAsignar(this.grupobodega,grupobodega);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarGrupoBodega=this.isPermisoActualizarOriginalGrupoBodega;
			
			
			this.seleccionarAsignar(grupobodega);
			
			
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			GrupoBodegaConstantesFunciones.quitarEspaciosGrupoBodega(this.grupobodega,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesGrupoBodega("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.grupobodegaSessionBean.setsFuncionBusquedaRapida(this.grupobodegaSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoGrupoBodega) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosGrupoBodega(esParaCancelar);				
				this.cancelarNuevoGrupoBodega(esParaCancelar);								
			}
			
			this.grupobodega=new GrupoBodega();
			
			this.inicializarGrupoBodega();
			
			this.actualizarEstadoCeldasBotonesGrupoBodega("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarGrupoBodega() throws Exception {
		try {
			GrupoBodegaConstantesFunciones.inicializarGrupoBodega(this.grupobodega);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.grupobodegaLogic.getGrupoBodegas().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteGrupoBodegas(String sAccionBusqueda,List<GrupoBodega> grupobodegasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="GrupoBodega"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="GrupoBodegaMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("GrupoBodegaMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="GrupoBodega"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Grupo Bodegaes");		
		parameters.put("busquedapor", GrupoBodegaConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(Bodega.class));
			classes.add(new Classe(ParametroInventarioDefecto.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					GrupoBodegaLogic grupobodegaLogicAuxiliar=new GrupoBodegaLogic();
					grupobodegaLogicAuxiliar.setDatosCliente(grupobodegaLogic.getDatosCliente());				
					grupobodegaLogicAuxiliar.setGrupoBodegas(grupobodegasParaReportes);
					
					grupobodegaLogicAuxiliar.cargarRelacionesLoteForeignKeyGrupoBodegaWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					grupobodegasParaReportes=grupobodegaLogicAuxiliar.getGrupoBodegas();
					
					//grupobodegaLogic.getNewConnexionToDeep();
					
					//for (GrupoBodega grupobodega:grupobodegasParaReportes) {
					//	grupobodegaLogic.deepLoad(grupobodega, false, DeepLoadType.INCLUDE, classes);
					//}						
					//grupobodegaLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//grupobodegaLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileBodega = AuxiliarReportes.class.getResourceAsStream("BodegaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_bodega", reportFileBodega);

			InputStream reportFileParametroInventarioDefecto = AuxiliarReportes.class.getResourceAsStream("ParametroInventarioDefectoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_parametroinventariodefecto", reportFileParametroInventarioDefecto);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceGrupoBodega=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			GrupoBodegaConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			GrupoBodegaConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceGrupoBodega=new JRBeanArrayDataSource(GrupoBodegaJInternalFrame.TraerGrupoBodegaBeans(grupobodegasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceGrupoBodega);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+GrupoBodegaConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+GrupoBodegaConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(GrupoBodegaBean.TraerGrupoBodegaBeans(grupobodegasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteGrupoBodegas(sAccionBusqueda,sTipoArchivoReporte,grupobodegasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalGrupoBodegas(sAccionBusqueda,sTipoArchivoReporte,grupobodegasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoGrupoBodegaActionPerformed(null);
					//this.generarExcelReporteGrupoBodegas(sAccionBusqueda,sTipoArchivoReporte,grupobodegasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalGrupoBodegas(sAccionBusqueda,sTipoArchivoReporte,grupobodegasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesGrupoBodegas(sAccionBusqueda,sTipoArchivoReporte,grupobodegasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesGrupoBodegas(sAccionBusqueda,sTipoArchivoReporte,grupobodegasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteGrupoBodegas(String sAccionBusqueda,String sTipoArchivoReporte,List<GrupoBodega> grupobodegasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"grupobodega";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("GrupoBodegas");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderGrupoBodega("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(GrupoBodega grupobodega : grupobodegasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			GrupoBodegaConstantesFunciones.generarExcelReporteDataGrupoBodega("NORMAL",row,workbook,grupobodega,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.grupobodegaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Grupo Bodega",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderGrupoBodega(String sTipo,Row row,Workbook workbook) {
		
		GrupoBodegaConstantesFunciones.generarExcelReporteHeaderGrupoBodega(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalGrupoBodegas(String sAccionBusqueda,String sTipoArchivoReporte,List<GrupoBodega> grupobodegasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"grupobodega_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("GrupoBodegas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(GrupoBodega grupobodega : grupobodegasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(GrupoBodegaConstantesFunciones.getGrupoBodegaDescripcion(grupobodega));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_CODIGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_CODIGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getcodigo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_NOMBRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_NOMBRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getnombre());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_RUC))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_RUC);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getruc());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_DIRECCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_DIRECCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getdireccion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_TELEFONO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_TELEFONO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.gettelefono());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_IDPAIS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDPAIS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getpais_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_IDCIUDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCIUDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getciudad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_IDCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getcentrocosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_IDEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getcuentacontableinventario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getcuentacontablecosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getcuentacontableventa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getcuentacontabledescuento_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getcuentacontabledevolucion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEBITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEBITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getcuentacontabledebito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getcuentacontablecredito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getcuentacontableproduccion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEBONIFICA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEBONIFICA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getcuentacontablebonifica_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOBONIFICA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOBONIFICA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(grupobodega.getcuentacontablecostobonifica_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.grupobodegaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Grupo Bodega",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesGrupoBodegas(String sAccionBusqueda,String sTipoArchivoReporte,List<GrupoBodega> grupobodegasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<GrupoBodega> grupobodegasRespaldo=null;
		
		classes=GrupoBodegaConstantesFunciones.getClassesRelationshipsOfGrupoBodega(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.grupobodegaLogic.setDatosCliente(this.datosCliente);
		this.grupobodegaLogic.setDatosDeep(this.datosDeep);
		this.grupobodegaLogic.setIsConDeep(true);
		
		grupobodegasRespaldo=this.grupobodegaLogic.getGrupoBodegas();
		
		this.grupobodegaLogic.setGrupoBodegas(grupobodegasParaReportes);	
		this.grupobodegaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		grupobodegasParaReportes=this.grupobodegaLogic.getGrupoBodegas();
		this.grupobodegaLogic.setGrupoBodegas(grupobodegasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"grupobodega_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("GrupoBodegas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderGrupoBodega("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(GrupoBodega grupobodega : grupobodegasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderGrupoBodega("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			GrupoBodegaConstantesFunciones.generarExcelReporteDataGrupoBodega("NORMAL",row,workbook,grupobodega,cellStyleDataAux);
		
			
			


				//Bodega
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(BodegaConstantesFunciones.SCLASSWEBTITULO))) {

				if(grupobodega.getBodegas()!=null && grupobodega.getBodegas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(BodegaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					BodegaConstantesFunciones.generarExcelReporteHeaderBodega("RELACIONADO",row,workbook);
				}

				if(grupobodega.getBodegas()!=null) {
					i2=0;
					for(Bodega bodega : grupobodega.getBodegas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						BodegaConstantesFunciones.generarExcelReporteDataBodega("RELACIONADO",row,workbook,bodega,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ParametroInventarioDefecto
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ParametroInventarioDefectoConstantesFunciones.SCLASSWEBTITULO))) {

				if(grupobodega.getParametroInventarioDefectos()!=null && grupobodega.getParametroInventarioDefectos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ParametroInventarioDefectoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ParametroInventarioDefectoConstantesFunciones.generarExcelReporteHeaderParametroInventarioDefecto("RELACIONADO",row,workbook);
				}

				if(grupobodega.getParametroInventarioDefectos()!=null) {
					i2=0;
					for(ParametroInventarioDefecto parametroinventariodefecto : grupobodega.getParametroInventarioDefectos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ParametroInventarioDefectoConstantesFunciones.generarExcelReporteDataParametroInventarioDefecto("RELACIONADO",row,workbook,parametroinventariodefecto,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(GrupoBodegaConstantesFunciones.getGrupoBodegaDescripcion(grupobodega));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.grupobodegaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Grupo Bodega",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoGrupoBodega.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoGrupoBodega.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoGrupoBodega.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoGrupoBodega.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessGrupoBodega() throws Exception {		
		this.startProcessGrupoBodega(true);
	}
	
	public void startProcessGrupoBodega(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasGrupoBodega ,this.jPanelParametrosReportesGrupoBodega, this.jScrollPanelDatosGrupoBodega,this.jPanelPaginacionGrupoBodega, this.jScrollPanelDatosEdicionGrupoBodega, this.jPanelAccionesGrupoBodega,this.jPanelAccionesFormularioGrupoBodega,this.jmenuBarGrupoBodega,this.jmenuBarDetalleGrupoBodega,this.jTtoolBarGrupoBodega,this.jTtoolBarDetalleGrupoBodega);		
		
		final JTabbedPane jTabbedPaneBusquedasGrupoBodega=this.jTabbedPaneBusquedasGrupoBodega; 
		
		final JPanel jPanelParametrosReportesGrupoBodega=this.jPanelParametrosReportesGrupoBodega;
		//final JScrollPane jScrollPanelDatosGrupoBodega=this.jScrollPanelDatosGrupoBodega;
		final JTable jTableDatosGrupoBodega=this.jTableDatosGrupoBodega;		
		final JPanel jPanelPaginacionGrupoBodega=this.jPanelPaginacionGrupoBodega;
		//final JScrollPane jScrollPanelDatosEdicionGrupoBodega=this.jScrollPanelDatosEdicionGrupoBodega;
		final JPanel jPanelAccionesGrupoBodega=this.jPanelAccionesGrupoBodega;
		
		JPanel jPanelCamposAuxiliarGrupoBodega=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarGrupoBodega=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
			jPanelCamposAuxiliarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jPanelCamposGrupoBodega;
			jPanelAccionesFormularioAuxiliarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jPanelAccionesFormularioGrupoBodega;
		}
		
		final JPanel jPanelCamposGrupoBodega=jPanelCamposAuxiliarGrupoBodega;
		final JPanel jPanelAccionesFormularioGrupoBodega=jPanelAccionesFormularioAuxiliarGrupoBodega;
		
		
		final JMenuBar jmenuBarGrupoBodega=this.jmenuBarGrupoBodega;
		final JToolBar jTtoolBarGrupoBodega=this.jTtoolBarGrupoBodega;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarGrupoBodega=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarGrupoBodega=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
			jmenuBarDetalleAuxiliarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jmenuBarDetalleGrupoBodega;
			jTtoolBarDetalleAuxiliarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jTtoolBarDetalleGrupoBodega;
		}
		
		final JMenuBar jmenuBarDetalleGrupoBodega=jmenuBarDetalleAuxiliarGrupoBodega;
		final JToolBar jTtoolBarDetalleGrupoBodega=jTtoolBarDetalleAuxiliarGrupoBodega;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasGrupoBodega;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesGrupoBodega;
			processRunnable.jTableDatos=jTableDatosGrupoBodega;
			processRunnable.jPanelCampos=jPanelCamposGrupoBodega;
			processRunnable.jPanelPaginacion=jPanelPaginacionGrupoBodega;
			processRunnable.jPanelAcciones=jPanelAccionesGrupoBodega;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioGrupoBodega;
			
			
			processRunnable.jmenuBar=jmenuBarGrupoBodega;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleGrupoBodega;
			processRunnable.jTtoolBar=jTtoolBarGrupoBodega;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleGrupoBodega;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasGrupoBodega ,jPanelParametrosReportesGrupoBodega,jTableDatosGrupoBodega, /*jScrollPanelDatosGrupoBodega,*/jPanelCamposGrupoBodega,jPanelPaginacionGrupoBodega, /*jScrollPanelDatosEdicionGrupoBodega,*/ jPanelAccionesGrupoBodega,jPanelAccionesFormularioGrupoBodega,jmenuBarGrupoBodega,jmenuBarDetalleGrupoBodega,jTtoolBarGrupoBodega,jTtoolBarDetalleGrupoBodega);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasGrupoBodega ,jPanelParametrosReportesGrupoBodega, jScrollPanelDatosGrupoBodega,jPanelPaginacionGrupoBodega, jScrollPanelDatosEdicionGrupoBodega, jPanelAccionesGrupoBodega,jPanelAccionesFormularioGrupoBodega,jmenuBarGrupoBodega,jmenuBarDetalleGrupoBodega,jTtoolBarGrupoBodega,jTtoolBarDetalleGrupoBodega);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessGrupoBodega() {// throws Exception 
		this.finishProcessGrupoBodega(true);
	}
	
	public void finishProcessGrupoBodega(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasGrupoBodega ,this.jPanelParametrosReportesGrupoBodega, this.jScrollPanelDatosGrupoBodega,this.jPanelPaginacionGrupoBodega, this.jScrollPanelDatosEdicionGrupoBodega, this.jPanelAccionesGrupoBodega,this.jPanelAccionesFormularioGrupoBodega,this.jmenuBarGrupoBodega,this.jmenuBarDetalleGrupoBodega,this.jTtoolBarGrupoBodega,this.jTtoolBarDetalleGrupoBodega);		
		
		final JTabbedPane jTabbedPaneBusquedasGrupoBodega=this.jTabbedPaneBusquedasGrupoBodega; 
		
		final JPanel jPanelParametrosReportesGrupoBodega=this.jPanelParametrosReportesGrupoBodega;
		//final JScrollPane jScrollPanelDatosGrupoBodega=this.jScrollPanelDatosGrupoBodega;
		final JTable jTableDatosGrupoBodega=this.jTableDatosGrupoBodega;		
		final JPanel jPanelPaginacionGrupoBodega=this.jPanelPaginacionGrupoBodega;
		//final JScrollPane jScrollPanelDatosEdicionGrupoBodega=this.jScrollPanelDatosEdicionGrupoBodega;
		final JPanel jPanelAccionesGrupoBodega=this.jPanelAccionesGrupoBodega;
		
		JPanel jPanelCamposAuxiliarGrupoBodega=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarGrupoBodega=new JPanel();
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
			jPanelCamposAuxiliarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jPanelCamposGrupoBodega;
			jPanelAccionesFormularioAuxiliarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jPanelAccionesFormularioGrupoBodega;
		}
		
		final JPanel jPanelCamposGrupoBodega=jPanelCamposAuxiliarGrupoBodega;
		final JPanel jPanelAccionesFormularioGrupoBodega=jPanelAccionesFormularioAuxiliarGrupoBodega;
		
		
		final JMenuBar jmenuBarGrupoBodega=this.jmenuBarGrupoBodega;		
		final JToolBar jTtoolBarGrupoBodega=this.jTtoolBarGrupoBodega;
				
		JMenuBar jmenuBarDetalleAuxiliarGrupoBodega=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarGrupoBodega=new JToolBar();
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
			jmenuBarDetalleAuxiliarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jmenuBarDetalleGrupoBodega;
			jTtoolBarDetalleAuxiliarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jTtoolBarDetalleGrupoBodega;		
		}
		
		final JMenuBar jmenuBarDetalleGrupoBodega=jmenuBarDetalleAuxiliarGrupoBodega;
		final JToolBar jTtoolBarDetalleGrupoBodega=jTtoolBarDetalleAuxiliarGrupoBodega;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasGrupoBodega;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesGrupoBodega;
			processRunnable.jTableDatos=jTableDatosGrupoBodega;
			processRunnable.jPanelCampos=jPanelCamposGrupoBodega;
			processRunnable.jPanelPaginacion=jPanelPaginacionGrupoBodega;
			processRunnable.jPanelAcciones=jPanelAccionesGrupoBodega;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioGrupoBodega;
			
			
			processRunnable.jmenuBar=jmenuBarGrupoBodega;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleGrupoBodega;
			processRunnable.jTtoolBar=jTtoolBarGrupoBodega;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleGrupoBodega;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasGrupoBodega ,jPanelParametrosReportesGrupoBodega, jTableDatosGrupoBodega,/*jScrollPanelDatosGrupoBodega,*/jPanelCamposGrupoBodega,jPanelPaginacionGrupoBodega, /*jScrollPanelDatosEdicionGrupoBodega,*/ jPanelAccionesGrupoBodega,jPanelAccionesFormularioGrupoBodega,jmenuBarGrupoBodega,jmenuBarDetalleGrupoBodega,jTtoolBarGrupoBodega,jTtoolBarDetalleGrupoBodega));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesGrupoBodega(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarGrupoBodega(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuGrupoBodega(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarGrupoBodega(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarGrupoBodega,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleGrupoBodega,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuGrupoBodega(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarGrupoBodega,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleGrupoBodega,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.grupobodegaConstantesFunciones.getsFinalQueryGrupoBodega();
		String  finalQueryPaginacionTodos=this.grupobodegaConstantesFunciones.getsFinalQueryGrupoBodega();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=GrupoBodegaConstantesFunciones.getArrayColumnasGlobalesNoGrupoBodega(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=GrupoBodegaConstantesFunciones.getArrayColumnasGlobalesGrupoBodega(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,GrupoBodegaConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.grupobodegasEliminados= new ArrayList<GrupoBodega>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessGrupoBodega();
		
				///*GrupoBodegaSessionBean*/this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			
			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=GrupoBodegaConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=GrupoBodegaConstantesFunciones.getClassesForeignKeysOfGrupoBodega(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/grupobodega."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			grupobodegasAux= new ArrayList<GrupoBodega>();
			
				
			grupobodegaLogic.setDatosCliente(this.datosCliente);
			grupobodegaLogic.setDatosDeep(this.datosDeep);
			grupobodegaLogic.setIsConDeep(true);
			
			
			grupobodegaLogic.getGrupoBodegaDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					grupobodegaLogic.getTodosGrupoBodegas(finalQueryGlobal,pagination);
					
					//grupobodegaLogic.getTodosGrupoBodegasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(grupobodegaLogic.getGrupoBodegas()==null|| grupobodegaLogic.getGrupoBodegas().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							grupobodegasAux= new ArrayList<GrupoBodega>();
							grupobodegasAux.addAll(grupobodegaLogic.getGrupoBodegas());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegasAux= new ArrayList<GrupoBodega>();
							grupobodegasAux.addAll(grupobodegas);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							grupobodegaLogic.getTodosGrupoBodegas(finalQueryGlobal+"",this.pagination);												
							
							//grupobodegaLogic.getTodosGrupoBodegasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteGrupoBodegas("Todos",grupobodegaLogic.getGrupoBodegas() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							grupobodegaLogic.setGrupoBodegas(new ArrayList<GrupoBodega>());					
							grupobodegaLogic.getGrupoBodegas().addAll(grupobodegasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegas=new ArrayList<GrupoBodega>();
							grupobodegas.addAll(grupobodegasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idGrupoBodega=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idGrupoBodega=this.idActual;
				
				} else if(this.idGrupoBodegaActual!=null && this.idGrupoBodegaActual!=0L) {
					idGrupoBodega=idGrupoBodegaActual;
				}
				
					
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndicePorId(idGrupoBodega);
				
				this.grupobodegas=new ArrayList<GrupoBodega>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					grupobodegaLogic.getEntity(idGrupoBodega);
					
					//grupobodegaLogic.getEntityWithConnection(idGrupoBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.setGrupoBodegas(new ArrayList<GrupoBodega>());
					grupobodegaLogic.getGrupoBodegas().add(grupobodegaLogic.getGrupoBodega());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodegas=new ArrayList<GrupoBodega>();
					this.grupobodegas.add(grupobodega);
				}
				
				if(grupobodegaLogic.getGrupoBodega()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("BusquedaPorCodigo")) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					grupobodegaLogic.getGrupoBodegasBusquedaPorCodigo(finalQueryGlobal,pagination,codigoBusquedaPorCodigo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=grupobodegaLogic.getGrupoBodegas()==null||grupobodegaLogic.getGrupoBodegas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=grupobodegas==null|| grupobodegas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegasAux=new ArrayList<GrupoBodega>();
						grupobodegasAux.addAll(grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegasAux=new ArrayList<GrupoBodega>();
							grupobodegasAux.addAll(grupobodegas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							grupobodegaLogic.getGrupoBodegasBusquedaPorCodigo(finalQueryGlobal,pagination,codigoBusquedaPorCodigo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGrupoBodegas("BusquedaPorCodigo",grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGrupoBodegas("BusquedaPorCodigo",grupobodegas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegaLogic.setGrupoBodegas(new ArrayList<GrupoBodega>());
						grupobodegaLogic.getGrupoBodegas().addAll(grupobodegasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegas=new ArrayList<GrupoBodega>();
							grupobodegas.addAll(grupobodegasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorNombre")) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					grupobodegaLogic.getGrupoBodegasBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=grupobodegaLogic.getGrupoBodegas()==null||grupobodegaLogic.getGrupoBodegas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=grupobodegas==null|| grupobodegas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegasAux=new ArrayList<GrupoBodega>();
						grupobodegasAux.addAll(grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegasAux=new ArrayList<GrupoBodega>();
							grupobodegasAux.addAll(grupobodegas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							grupobodegaLogic.getGrupoBodegasBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGrupoBodegas("BusquedaPorNombre",grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGrupoBodegas("BusquedaPorNombre",grupobodegas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegaLogic.setGrupoBodegas(new ArrayList<GrupoBodega>());
						grupobodegaLogic.getGrupoBodegas().addAll(grupobodegasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegas=new ArrayList<GrupoBodega>();
							grupobodegas.addAll(grupobodegasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorRuc")) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorRuc(rucBusquedaPorRuc);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					grupobodegaLogic.getGrupoBodegasBusquedaPorRuc(finalQueryGlobal,pagination,rucBusquedaPorRuc);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorRuc(rucBusquedaPorRuc);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorRuc(rucBusquedaPorRuc);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=grupobodegaLogic.getGrupoBodegas()==null||grupobodegaLogic.getGrupoBodegas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=grupobodegas==null|| grupobodegas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegasAux=new ArrayList<GrupoBodega>();
						grupobodegasAux.addAll(grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegasAux=new ArrayList<GrupoBodega>();
							grupobodegasAux.addAll(grupobodegas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							grupobodegaLogic.getGrupoBodegasBusquedaPorRuc(finalQueryGlobal,pagination,rucBusquedaPorRuc);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorRuc(rucBusquedaPorRuc);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorRuc(rucBusquedaPorRuc);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGrupoBodegas("BusquedaPorRuc",grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGrupoBodegas("BusquedaPorRuc",grupobodegas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegaLogic.setGrupoBodegas(new ArrayList<GrupoBodega>());
						grupobodegaLogic.getGrupoBodegas().addAll(grupobodegasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegas=new ArrayList<GrupoBodega>();
							grupobodegas.addAll(grupobodegasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorTelefono")) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorTelefono(telefonoBusquedaPorTelefono);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					grupobodegaLogic.getGrupoBodegasBusquedaPorTelefono(finalQueryGlobal,pagination,telefonoBusquedaPorTelefono);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorTelefono(telefonoBusquedaPorTelefono);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorTelefono(telefonoBusquedaPorTelefono);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=grupobodegaLogic.getGrupoBodegas()==null||grupobodegaLogic.getGrupoBodegas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=grupobodegas==null|| grupobodegas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegasAux=new ArrayList<GrupoBodega>();
						grupobodegasAux.addAll(grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegasAux=new ArrayList<GrupoBodega>();
							grupobodegasAux.addAll(grupobodegas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							grupobodegaLogic.getGrupoBodegasBusquedaPorTelefono(finalQueryGlobal,pagination,telefonoBusquedaPorTelefono);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorTelefono(telefonoBusquedaPorTelefono);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceBusquedaPorTelefono(telefonoBusquedaPorTelefono);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGrupoBodegas("BusquedaPorTelefono",grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGrupoBodegas("BusquedaPorTelefono",grupobodegas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegaLogic.setGrupoBodegas(new ArrayList<GrupoBodega>());
						grupobodegaLogic.getGrupoBodegas().addAll(grupobodegasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegas=new ArrayList<GrupoBodega>();
							grupobodegas.addAll(grupobodegasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCentroCosto")) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					grupobodegaLogic.getGrupoBodegasFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=grupobodegaLogic.getGrupoBodegas()==null||grupobodegaLogic.getGrupoBodegas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=grupobodegas==null|| grupobodegas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegasAux=new ArrayList<GrupoBodega>();
						grupobodegasAux.addAll(grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegasAux=new ArrayList<GrupoBodega>();
							grupobodegasAux.addAll(grupobodegas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							grupobodegaLogic.getGrupoBodegasFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGrupoBodegas("FK_IdCentroCosto",grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGrupoBodegas("FK_IdCentroCosto",grupobodegas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegaLogic.setGrupoBodegas(new ArrayList<GrupoBodega>());
						grupobodegaLogic.getGrupoBodegas().addAll(grupobodegasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegas=new ArrayList<GrupoBodega>();
							grupobodegas.addAll(grupobodegasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpleado")) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					grupobodegaLogic.getGrupoBodegasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=grupobodegaLogic.getGrupoBodegas()==null||grupobodegaLogic.getGrupoBodegas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=grupobodegas==null|| grupobodegas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegasAux=new ArrayList<GrupoBodega>();
						grupobodegasAux.addAll(grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegasAux=new ArrayList<GrupoBodega>();
							grupobodegasAux.addAll(grupobodegas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							grupobodegaLogic.getGrupoBodegasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGrupoBodegas("FK_IdEmpleado",grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGrupoBodegas("FK_IdEmpleado",grupobodegas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegaLogic.setGrupoBodegas(new ArrayList<GrupoBodega>());
						grupobodegaLogic.getGrupoBodegas().addAll(grupobodegasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegas=new ArrayList<GrupoBodega>();
							grupobodegas.addAll(grupobodegasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPais")) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					grupobodegaLogic.getGrupoBodegasFK_IdPais(finalQueryGlobal,pagination,id_paisFK_IdPais);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=grupobodegaLogic.getGrupoBodegas()==null||grupobodegaLogic.getGrupoBodegas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=grupobodegas==null|| grupobodegas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegasAux=new ArrayList<GrupoBodega>();
						grupobodegasAux.addAll(grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegasAux=new ArrayList<GrupoBodega>();
							grupobodegasAux.addAll(grupobodegas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							grupobodegaLogic.getGrupoBodegasFK_IdPais(finalQueryGlobal,pagination,id_paisFK_IdPais);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GrupoBodegaConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGrupoBodegas("FK_IdPais",grupobodegaLogic.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGrupoBodegas("FK_IdPais",grupobodegas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegaLogic.setGrupoBodegas(new ArrayList<GrupoBodega>());
						grupobodegaLogic.getGrupoBodegas().addAll(grupobodegasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegas=new ArrayList<GrupoBodega>();
							grupobodegas.addAll(grupobodegasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesGrupoBodega();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessGrupoBodega();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=grupobodegaLogic.getGrupoBodegas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=grupobodegas.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=grupobodegaLogic.getGrupoBodegas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=grupobodegas.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(GrupoBodega grupobodega) {
		Boolean permite=true;
		
		if(this.grupobodega.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=GrupoBodegaConstantesFunciones.getOrderByListaGrupoBodega();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=GrupoBodegaConstantesFunciones.getOrderByListaGrupoBodega();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(GrupoBodega grupobodega:grupobodegaLogic.getGrupoBodegas()) {
				if(grupobodega.getsType().equals(Constantes2.S_TOTALES)) {
					grupobodegaTotales=grupobodega;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(GrupoBodega grupobodega:this.grupobodegas) {
				if(grupobodega.getsType().equals(Constantes2.S_TOTALES)) {
					grupobodegaTotales=grupobodega;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.grupobodegaAux=new GrupoBodega();
			this.grupobodegaAux.setsType(Constantes2.S_TOTALES);
			this.grupobodegaAux.setIsNew(false);
			this.grupobodegaAux.setIsChanged(false);
			this.grupobodegaAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				GrupoBodegaConstantesFunciones.TotalizarValoresFilaGrupoBodega(this.grupobodegaLogic.getGrupoBodegas(),this.grupobodegaAux);
				
				this.grupobodegaLogic.getGrupoBodegas().add(this.grupobodegaAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				GrupoBodegaConstantesFunciones.TotalizarValoresFilaGrupoBodega(this.grupobodegas,this.grupobodegaAux);
				
				this.grupobodegas.add(this.grupobodegaAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		grupobodegaTotales=new GrupoBodega();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.grupobodegaLogic.getGrupoBodegas().remove(grupobodegaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.grupobodegas.remove(grupobodegaTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		grupobodegaTotales=new GrupoBodega();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(GrupoBodega grupobodega:grupobodegaLogic.getGrupoBodegas()) {
				if(grupobodega.getsType().equals(Constantes2.S_TOTALES)) {
					grupobodegaTotales=grupobodega;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				GrupoBodegaConstantesFunciones.TotalizarValoresFilaGrupoBodega(this.grupobodegaLogic.getGrupoBodegas(),grupobodegaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(GrupoBodega grupobodega:this.grupobodegas) {
				if(grupobodega.getsType().equals(Constantes2.S_TOTALES)) {
					grupobodegaTotales=grupobodega;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				GrupoBodegaConstantesFunciones.TotalizarValoresFilaGrupoBodega(this.grupobodegas,grupobodegaTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getGrupoBodegasBusquedaPorCodigo()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorCodigo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasBusquedaPorNombre()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorNombre";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasBusquedaPorRuc()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorRuc";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasBusquedaPorTelefono()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorTelefono";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasFK_IdCentroCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasFK_IdCiudad()throws Exception {
		try {
			sAccionBusqueda="FK_IdCiudad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableBonifica()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableBonifica";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableCostoBonifica()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableCostoBonifica";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableCredito()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableCredito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableDebito()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableDebito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableDescuento()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableDescuento";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableDevolucion()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableDevolucion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableInventario()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableInventario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableProduccion()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableProduccion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableVenta()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableVenta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasFK_IdEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegasFK_IdPais()throws Exception {
		try {
			sAccionBusqueda="FK_IdPais";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGrupoBodegaPorIdEmpresaPorNombre()throws Exception {
		try {
			sAccionBusqueda="PorIdEmpresaPorNombre";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			throw e;
		}
	}

	
	
	public void getGrupoBodegasBusquedaPorCodigo(String sFinalQuery,String codigo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasBusquedaPorCodigo(sFinalQuery,this.pagination,codigo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasBusquedaPorNombre(String sFinalQuery,String nombre)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasBusquedaPorNombre(sFinalQuery,this.pagination,nombre);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasBusquedaPorRuc(String sFinalQuery,String ruc)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasBusquedaPorRuc(sFinalQuery,this.pagination,ruc);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasBusquedaPorTelefono(String sFinalQuery,String telefono)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasBusquedaPorTelefono(sFinalQuery,this.pagination,telefono);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasFK_IdCentroCosto(String sFinalQuery,Long id_centro_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasFK_IdCentroCosto(sFinalQuery,this.pagination,id_centro_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasFK_IdCiudad(String sFinalQuery,Long id_ciudad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasFK_IdCiudad(sFinalQuery,this.pagination,id_ciudad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableBonifica(String sFinalQuery,Long id_cuenta_contable_bonifica)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasFK_IdCuentaContableBonifica(sFinalQuery,this.pagination,id_cuenta_contable_bonifica);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableCosto(String sFinalQuery,Long id_cuenta_contable_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasFK_IdCuentaContableCosto(sFinalQuery,this.pagination,id_cuenta_contable_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableCostoBonifica(String sFinalQuery,Long id_cuenta_contable_costo_bonifica)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasFK_IdCuentaContableCostoBonifica(sFinalQuery,this.pagination,id_cuenta_contable_costo_bonifica);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableCredito(String sFinalQuery,Long id_cuenta_contable_credito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasFK_IdCuentaContableCredito(sFinalQuery,this.pagination,id_cuenta_contable_credito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableDebito(String sFinalQuery,Long id_cuenta_contable_debito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasFK_IdCuentaContableDebito(sFinalQuery,this.pagination,id_cuenta_contable_debito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableDescuento(String sFinalQuery,Long id_cuenta_contable_descuento)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasFK_IdCuentaContableDescuento(sFinalQuery,this.pagination,id_cuenta_contable_descuento);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableDevolucion(String sFinalQuery,Long id_cuenta_contable_devolucion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasFK_IdCuentaContableDevolucion(sFinalQuery,this.pagination,id_cuenta_contable_devolucion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableInventario(String sFinalQuery,Long id_cuenta_contable_inventario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasFK_IdCuentaContableInventario(sFinalQuery,this.pagination,id_cuenta_contable_inventario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableProduccion(String sFinalQuery,Long id_cuenta_contable_produccion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasFK_IdCuentaContableProduccion(sFinalQuery,this.pagination,id_cuenta_contable_produccion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasFK_IdCuentaContableVenta(String sFinalQuery,Long id_cuenta_contable_venta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasFK_IdCuentaContableVenta(sFinalQuery,this.pagination,id_cuenta_contable_venta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasFK_IdEmpleado(String sFinalQuery,Long id_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasFK_IdEmpleado(sFinalQuery,this.pagination,id_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegasFK_IdPais(String sFinalQuery,Long id_pais)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegasFK_IdPais(sFinalQuery,this.pagination,id_pais);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGrupoBodegaPorIdEmpresaPorNombre(Long id_empresa,String nombre)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLogic.getGrupoBodegaPorIdEmpresaPorNombre(id_empresa,nombre);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosGrupoBodega() {
		this.isPermisoTodoGrupoBodega=false;
		this.isPermisoNuevoGrupoBodega=false;
		this.isPermisoActualizarGrupoBodega=false;
		this.isPermisoActualizarOriginalGrupoBodega=false;
		this.isPermisoEliminarGrupoBodega=false;
		this.isPermisoGuardarCambiosGrupoBodega=false;
		this.isPermisoConsultaGrupoBodega=false;
		this.isPermisoBusquedaGrupoBodega=false;
		this.isPermisoReporteGrupoBodega=false;		
		this.isPermisoOrdenGrupoBodega=false;		
		this.isPermisoPaginacionMedioGrupoBodega=false;		
		this.isPermisoPaginacionAltoGrupoBodega=false;
		this.isPermisoPaginacionTodoGrupoBodega=false;
		this.isPermisoCopiarGrupoBodega=false;		
		this.isPermisoVerFormGrupoBodega=false;		
		this.isPermisoDuplicarGrupoBodega=false;		
		this.isPermisoOrdenGrupoBodega=false;		
	}
	
	public void setPermisosUsuarioGrupoBodega(Boolean isPermiso) {
		this.isPermisoTodoGrupoBodega=isPermiso;
		this.isPermisoNuevoGrupoBodega=isPermiso;
		this.isPermisoActualizarGrupoBodega=isPermiso;
		this.isPermisoActualizarOriginalGrupoBodega=isPermiso;
		this.isPermisoEliminarGrupoBodega=isPermiso;
		this.isPermisoGuardarCambiosGrupoBodega=isPermiso;
		this.isPermisoConsultaGrupoBodega=isPermiso;
		this.isPermisoBusquedaGrupoBodega=isPermiso;
		this.isPermisoReporteGrupoBodega=isPermiso;
		this.isPermisoOrdenGrupoBodega=isPermiso;		
		this.isPermisoPaginacionMedioGrupoBodega=isPermiso;		
		this.isPermisoPaginacionAltoGrupoBodega=isPermiso;		
		this.isPermisoPaginacionTodoGrupoBodega=isPermiso;		
		this.isPermisoCopiarGrupoBodega=isPermiso;		
		this.isPermisoVerFormGrupoBodega=isPermiso;		
		this.isPermisoDuplicarGrupoBodega=isPermiso;
		this.isPermisoOrdenGrupoBodega=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioGrupoBodega(Boolean isPermiso) {
		//this.isPermisoTodoGrupoBodega=isPermiso;
		this.isPermisoNuevoGrupoBodega=isPermiso;
		this.isPermisoActualizarGrupoBodega=isPermiso;
		this.isPermisoActualizarOriginalGrupoBodega=isPermiso;
		this.isPermisoEliminarGrupoBodega=isPermiso;
		this.isPermisoGuardarCambiosGrupoBodega=isPermiso;
		//this.isPermisoConsultaGrupoBodega=isPermiso;
		//this.isPermisoBusquedaGrupoBodega=isPermiso;
		//this.isPermisoReporteGrupoBodega=isPermiso;
		//this.isPermisoOrdenGrupoBodega=isPermiso;		
		//this.isPermisoPaginacionMedioGrupoBodega=isPermiso;		
		//this.isPermisoPaginacionAltoGrupoBodega=isPermiso;		
		//this.isPermisoPaginacionTodoGrupoBodega=isPermiso;		
		//this.isPermisoCopiarGrupoBodega=isPermiso;		
		//this.isPermisoDuplicarGrupoBodega=isPermiso;
		//this.isPermisoOrdenGrupoBodega=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioGrupoBodegaClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(BodegaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ParametroInventarioDefectoConstantesFunciones.SNOMBREOPCION);
		
		if(GrupoBodegaJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosBodega=false;
		this.isTienePermisosBodega=this.verificarGetPermisosUsuarioOpcionGrupoBodegaClaseRelacionada(this.opcionsRelacionadas,BodegaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosParametroInventarioDefecto=false;
		this.isTienePermisosParametroInventarioDefecto=this.verificarGetPermisosUsuarioOpcionGrupoBodegaClaseRelacionada(this.opcionsRelacionadas,ParametroInventarioDefectoConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebGrupoBodega(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioGrupoBodegaClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosBodega=conPermiso;
		this.isTienePermisosParametroInventarioDefecto=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioGrupoBodegaClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionGrupoBodegaClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioGrupoBodegaClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosBodega && this.jInternalFrameDetalleFormGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormGrupoBodega.jTabbedPaneRelacionesGrupoBodega.remove(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosParametroInventarioDefecto && this.jInternalFrameDetalleFormGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormGrupoBodega.jTabbedPaneRelacionesGrupoBodega.remove(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioGrupoBodega() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(GrupoBodegaJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, GrupoBodegaConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoGrupoBodega=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarGrupoBodega=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalGrupoBodega=this.isPermisoActualizarGrupoBodega;
			this.isPermisoEliminarGrupoBodega=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosGrupoBodega=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaGrupoBodega=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaGrupoBodega=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoGrupoBodega=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteGrupoBodega=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenGrupoBodega=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioGrupoBodega=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoGrupoBodega=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoGrupoBodega=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarGrupoBodega=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormGrupoBodega=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarGrupoBodega=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenGrupoBodega=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosGrupoBodega.setToolTipText(this.jTableDatosGrupoBodega.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioGrupoBodega(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioGrupoBodega(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(GrupoBodegaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(GrupoBodegaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioGrupoBodega() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosBodega && this.grupobodegaConstantesFunciones.mostrarBodegaGrupoBodega && !GrupoBodegaConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Bodega");
			reporte.setsDescripcion("Bodega");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosParametroInventarioDefecto && this.grupobodegaConstantesFunciones.mostrarParametroInventarioDefectoGrupoBodega && !GrupoBodegaConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Parametro Inventario Defecto");
			reporte.setsDescripcion("Parametro Inventario Defecto");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyGrupoBodegaListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.paissForeignKey=new ArrayList();
				this.ciudadsForeignKey=new ArrayList();
				this.centrocostosForeignKey=new ArrayList();
				this.empleadosForeignKey=new ArrayList();
				this.cuentacontableinventariosForeignKey=new ArrayList();
				this.cuentacontablecostosForeignKey=new ArrayList();
				this.cuentacontableventasForeignKey=new ArrayList();
				this.cuentacontabledescuentosForeignKey=new ArrayList();
				this.cuentacontabledevolucionsForeignKey=new ArrayList();
				this.cuentacontabledebitosForeignKey=new ArrayList();
				this.cuentacontablecreditosForeignKey=new ArrayList();
				this.cuentacontableproduccionsForeignKey=new ArrayList();
				this.cuentacontablebonificasForeignKey=new ArrayList();
				this.cuentacontablecostobonificasForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyGrupoBodegaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(GrupoBodegaJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyGrupoBodegaListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCiudadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableInventarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableDescuentoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableDevolucionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableDebitoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableProduccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableBonificaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableCostoBonificaListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPaisListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.paissForeignKey==null||this.paissForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PaisConstantesFunciones.SFINALQUERY;

				this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ciudadsForeignKey==null||this.ciudadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CiudadConstantesFunciones.SFINALQUERY;

				this.cargarCombosCiudadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroCostoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableInventarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableinventariosForeignKey==null||this.cuentacontableinventariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableInventariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablecostosForeignKey==null||this.cuentacontablecostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableVentaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableventasForeignKey==null||this.cuentacontableventasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableVentasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableDescuentoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontabledescuentosForeignKey==null||this.cuentacontabledescuentosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableDescuentosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableDevolucionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontabledevolucionsForeignKey==null||this.cuentacontabledevolucionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableDevolucionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableDebitoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontabledebitosForeignKey==null||this.cuentacontabledebitosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableDebitosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableCreditoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablecreditosForeignKey==null||this.cuentacontablecreditosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableCreditosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableProduccionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableproduccionsForeignKey==null||this.cuentacontableproduccionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableProduccionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableBonificaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablebonificasForeignKey==null||this.cuentacontablebonificasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableBonificasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableCostoBonificaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablecostobonificasForeignKey==null||this.cuentacontablecostobonificasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableCostoBonificasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyGrupoBodegaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			GrupoBodegaParameterReturnGeneral grupobodegaReturnGeneral=new GrupoBodegaParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.grupobodegaConstantesFunciones.cargarid_empresaGrupoBodega)
					 || (this.esRecargarFks && this.grupobodegaConstantesFunciones.cargarid_empresaGrupoBodega)) {

					if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+grupobodegaSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalPais="";

				if(((this.paissForeignKey==null||this.paissForeignKey.size()<=0) && this.grupobodegaConstantesFunciones.cargarid_paisGrupoBodega)
					 || (this.esRecargarFks && this.grupobodegaConstantesFunciones.cargarid_paisGrupoBodega)) {

					if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPais=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

						finalQueryGlobalPais=Funciones.GetFinalQueryAppend(finalQueryGlobalPais, "");
						finalQueryGlobalPais+=PaisConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPais=" WHERE " + ConstantesSql.ID + "="+grupobodegaSessionBean.getlidPaisActual();
					}
				} else {
					finalQueryGlobalPais="NONE";
				}


				String finalQueryGlobalCiudad="";

				if(((this.ciudadsForeignKey==null||this.ciudadsForeignKey.size()<=0) && this.grupobodegaConstantesFunciones.cargarid_ciudadGrupoBodega)
					 || (this.esRecargarFks && this.grupobodegaConstantesFunciones.cargarid_ciudadGrupoBodega)) {

					if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCiudad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

						finalQueryGlobalCiudad=Funciones.GetFinalQueryAppend(finalQueryGlobalCiudad, "");
						finalQueryGlobalCiudad+=CiudadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCiudadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCiudad=" WHERE " + ConstantesSql.ID + "="+grupobodegaSessionBean.getlidCiudadActual();
					}
				} else {
					finalQueryGlobalCiudad="NONE";
				}


				String finalQueryGlobalCentroCosto="";

				if(((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0) && this.grupobodegaConstantesFunciones.cargarid_centro_costoGrupoBodega)
					 || (this.esRecargarFks && this.grupobodegaConstantesFunciones.cargarid_centro_costoGrupoBodega)) {

					if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroCosto, "");
						finalQueryGlobalCentroCosto+=CentroCostoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroCosto=" WHERE " + ConstantesSql.ID + "="+grupobodegaSessionBean.getlidCentroCostoActual();
					}
				} else {
					finalQueryGlobalCentroCosto="NONE";
				}


				String finalQueryGlobalEmpleado="";

				if(((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0) && this.grupobodegaConstantesFunciones.cargarid_empleadoGrupoBodega)
					 || (this.esRecargarFks && this.grupobodegaConstantesFunciones.cargarid_empleadoGrupoBodega)) {

					if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleado, "");
						finalQueryGlobalEmpleado+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleado=" WHERE " + ConstantesSql.ID + "="+grupobodegaSessionBean.getlidEmpleadoActual();
					}
				} else {
					finalQueryGlobalEmpleado="NONE";
				}


				String finalQueryGlobalCuentaContableInventario="";

				if(((this.cuentacontableinventariosForeignKey==null||this.cuentacontableinventariosForeignKey.size()<=0) && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_inventarioGrupoBodega)
					 || (this.esRecargarFks && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_inventarioGrupoBodega)) {

					if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableInventario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableInventario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableInventario=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableInventario, "");
						finalQueryGlobalCuentaContableInventario+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableInventariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableInventario=" WHERE " + ConstantesSql.ID + "="+grupobodegaSessionBean.getlidCuentaContableInventarioActual();
					}
				} else {
					finalQueryGlobalCuentaContableInventario="NONE";
				}


				String finalQueryGlobalCuentaContableCosto="";

				if(((this.cuentacontablecostosForeignKey==null||this.cuentacontablecostosForeignKey.size()<=0) && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_costoGrupoBodega)
					 || (this.esRecargarFks && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_costoGrupoBodega)) {

					if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableCosto, "");
						finalQueryGlobalCuentaContableCosto+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableCosto=" WHERE " + ConstantesSql.ID + "="+grupobodegaSessionBean.getlidCuentaContableCostoActual();
					}
				} else {
					finalQueryGlobalCuentaContableCosto="NONE";
				}


				String finalQueryGlobalCuentaContableVenta="";

				if(((this.cuentacontableventasForeignKey==null||this.cuentacontableventasForeignKey.size()<=0) && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_ventaGrupoBodega)
					 || (this.esRecargarFks && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_ventaGrupoBodega)) {

					if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableVenta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableVenta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableVenta=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableVenta, "");
						finalQueryGlobalCuentaContableVenta+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableVentasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableVenta=" WHERE " + ConstantesSql.ID + "="+grupobodegaSessionBean.getlidCuentaContableVentaActual();
					}
				} else {
					finalQueryGlobalCuentaContableVenta="NONE";
				}


				String finalQueryGlobalCuentaContableDescuento="";

				if(((this.cuentacontabledescuentosForeignKey==null||this.cuentacontabledescuentosForeignKey.size()<=0) && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_descuentoGrupoBodega)
					 || (this.esRecargarFks && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_descuentoGrupoBodega)) {

					if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDescuento()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableDescuento=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableDescuento=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableDescuento, "");
						finalQueryGlobalCuentaContableDescuento+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableDescuentosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableDescuento=" WHERE " + ConstantesSql.ID + "="+grupobodegaSessionBean.getlidCuentaContableDescuentoActual();
					}
				} else {
					finalQueryGlobalCuentaContableDescuento="NONE";
				}


				String finalQueryGlobalCuentaContableDevolucion="";

				if(((this.cuentacontabledevolucionsForeignKey==null||this.cuentacontabledevolucionsForeignKey.size()<=0) && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_devolucionGrupoBodega)
					 || (this.esRecargarFks && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_devolucionGrupoBodega)) {

					if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDevolucion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableDevolucion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableDevolucion=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableDevolucion, "");
						finalQueryGlobalCuentaContableDevolucion+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableDevolucionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableDevolucion=" WHERE " + ConstantesSql.ID + "="+grupobodegaSessionBean.getlidCuentaContableDevolucionActual();
					}
				} else {
					finalQueryGlobalCuentaContableDevolucion="NONE";
				}


				String finalQueryGlobalCuentaContableDebito="";

				if(((this.cuentacontabledebitosForeignKey==null||this.cuentacontabledebitosForeignKey.size()<=0) && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_debitoGrupoBodega)
					 || (this.esRecargarFks && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_debitoGrupoBodega)) {

					if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDebito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableDebito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableDebito=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableDebito, "");
						finalQueryGlobalCuentaContableDebito+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableDebitosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableDebito=" WHERE " + ConstantesSql.ID + "="+grupobodegaSessionBean.getlidCuentaContableDebitoActual();
					}
				} else {
					finalQueryGlobalCuentaContableDebito="NONE";
				}


				String finalQueryGlobalCuentaContableCredito="";

				if(((this.cuentacontablecreditosForeignKey==null||this.cuentacontablecreditosForeignKey.size()<=0) && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_creditoGrupoBodega)
					 || (this.esRecargarFks && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_creditoGrupoBodega)) {

					if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableCredito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableCredito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableCredito=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableCredito, "");
						finalQueryGlobalCuentaContableCredito+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableCreditosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableCredito=" WHERE " + ConstantesSql.ID + "="+grupobodegaSessionBean.getlidCuentaContableCreditoActual();
					}
				} else {
					finalQueryGlobalCuentaContableCredito="NONE";
				}


				String finalQueryGlobalCuentaContableProduccion="";

				if(((this.cuentacontableproduccionsForeignKey==null||this.cuentacontableproduccionsForeignKey.size()<=0) && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_produccionGrupoBodega)
					 || (this.esRecargarFks && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_produccionGrupoBodega)) {

					if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableProduccion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableProduccion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableProduccion=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableProduccion, "");
						finalQueryGlobalCuentaContableProduccion+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableProduccionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableProduccion=" WHERE " + ConstantesSql.ID + "="+grupobodegaSessionBean.getlidCuentaContableProduccionActual();
					}
				} else {
					finalQueryGlobalCuentaContableProduccion="NONE";
				}


				String finalQueryGlobalCuentaContableBonifica="";

				if(((this.cuentacontablebonificasForeignKey==null||this.cuentacontablebonificasForeignKey.size()<=0) && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_bonificaGrupoBodega)
					 || (this.esRecargarFks && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_bonificaGrupoBodega)) {

					if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableBonifica()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableBonifica=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableBonifica=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableBonifica, "");
						finalQueryGlobalCuentaContableBonifica+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableBonificasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableBonifica=" WHERE " + ConstantesSql.ID + "="+grupobodegaSessionBean.getlidCuentaContableBonificaActual();
					}
				} else {
					finalQueryGlobalCuentaContableBonifica="NONE";
				}


				String finalQueryGlobalCuentaContableCostoBonifica="";

				if(((this.cuentacontablecostobonificasForeignKey==null||this.cuentacontablecostobonificasForeignKey.size()<=0) && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_costo_bonificaGrupoBodega)
					 || (this.esRecargarFks && this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_costo_bonificaGrupoBodega)) {

					if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableCostoBonifica()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableCostoBonifica=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableCostoBonifica=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableCostoBonifica, "");
						finalQueryGlobalCuentaContableCostoBonifica+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableCostoBonificasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableCostoBonifica=" WHERE " + ConstantesSql.ID + "="+grupobodegaSessionBean.getlidCuentaContableCostoBonificaActual();
					}
				} else {
					finalQueryGlobalCuentaContableCostoBonifica="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				grupobodegaReturnGeneral=grupobodegaLogic.cargarCombosLoteForeignKeyGrupoBodega(finalQueryGlobalEmpresa,finalQueryGlobalPais,finalQueryGlobalCiudad,finalQueryGlobalCentroCosto,finalQueryGlobalEmpleado,finalQueryGlobalCuentaContableInventario,finalQueryGlobalCuentaContableCosto,finalQueryGlobalCuentaContableVenta,finalQueryGlobalCuentaContableDescuento,finalQueryGlobalCuentaContableDevolucion,finalQueryGlobalCuentaContableDebito,finalQueryGlobalCuentaContableCredito,finalQueryGlobalCuentaContableProduccion,finalQueryGlobalCuentaContableBonifica,finalQueryGlobalCuentaContableCostoBonifica);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=grupobodegaReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalPais.equals("NONE")) {
				this.paissForeignKey=grupobodegaReturnGeneral.getpaissForeignKey();
			}

			if(!finalQueryGlobalCiudad.equals("NONE")) {
				this.ciudadsForeignKey=grupobodegaReturnGeneral.getciudadsForeignKey();
			}

			if(!finalQueryGlobalCentroCosto.equals("NONE")) {
				this.centrocostosForeignKey=grupobodegaReturnGeneral.getcentrocostosForeignKey();
			}

			if(!finalQueryGlobalEmpleado.equals("NONE")) {
				this.empleadosForeignKey=grupobodegaReturnGeneral.getempleadosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableInventario.equals("NONE")) {
				this.cuentacontableinventariosForeignKey=grupobodegaReturnGeneral.getcuentacontableinventariosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableCosto.equals("NONE")) {
				this.cuentacontablecostosForeignKey=grupobodegaReturnGeneral.getcuentacontablecostosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableVenta.equals("NONE")) {
				this.cuentacontableventasForeignKey=grupobodegaReturnGeneral.getcuentacontableventasForeignKey();
			}

			if(!finalQueryGlobalCuentaContableDescuento.equals("NONE")) {
				this.cuentacontabledescuentosForeignKey=grupobodegaReturnGeneral.getcuentacontabledescuentosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableDevolucion.equals("NONE")) {
				this.cuentacontabledevolucionsForeignKey=grupobodegaReturnGeneral.getcuentacontabledevolucionsForeignKey();
			}

			if(!finalQueryGlobalCuentaContableDebito.equals("NONE")) {
				this.cuentacontabledebitosForeignKey=grupobodegaReturnGeneral.getcuentacontabledebitosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableCredito.equals("NONE")) {
				this.cuentacontablecreditosForeignKey=grupobodegaReturnGeneral.getcuentacontablecreditosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableProduccion.equals("NONE")) {
				this.cuentacontableproduccionsForeignKey=grupobodegaReturnGeneral.getcuentacontableproduccionsForeignKey();
			}

			if(!finalQueryGlobalCuentaContableBonifica.equals("NONE")) {
				this.cuentacontablebonificasForeignKey=grupobodegaReturnGeneral.getcuentacontablebonificasForeignKey();
			}

			if(!finalQueryGlobalCuentaContableCostoBonifica.equals("NONE")) {
				this.cuentacontablecostobonificasForeignKey=grupobodegaReturnGeneral.getcuentacontablecostobonificasForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyGrupoBodega()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeyPais();
			this.addItemDefectoCombosForeignKeyCiudad();
			this.addItemDefectoCombosForeignKeyCentroCosto();
			this.addItemDefectoCombosForeignKeyEmpleado();
			this.addItemDefectoCombosForeignKeyCuentaContableInventario();
			this.addItemDefectoCombosForeignKeyCuentaContableCosto();
			this.addItemDefectoCombosForeignKeyCuentaContableVenta();
			this.addItemDefectoCombosForeignKeyCuentaContableDescuento();
			this.addItemDefectoCombosForeignKeyCuentaContableDevolucion();
			this.addItemDefectoCombosForeignKeyCuentaContableDebito();
			this.addItemDefectoCombosForeignKeyCuentaContableCredito();
			this.addItemDefectoCombosForeignKeyCuentaContableProduccion();
			this.addItemDefectoCombosForeignKeyCuentaContableBonifica();
			this.addItemDefectoCombosForeignKeyCuentaContableCostoBonifica();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPais()throws Exception {
		try {

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				Pais pais=new Pais();
				PaisConstantesFunciones.setPaisDescripcion(pais,Constantes.SMENSAJE_ESCOJA_OPCION);
				pais.setId(null);

				if(!PaisConstantesFunciones.ExisteEnLista(this.paissForeignKey,pais,true)) {

					this.paissForeignKey.add(0,pais);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCiudad()throws Exception {
		try {

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {
				Ciudad ciudad=new Ciudad();
				CiudadConstantesFunciones.setCiudadDescripcion(ciudad,Constantes.SMENSAJE_ESCOJA_OPCION);
				ciudad.setId(null);

				if(!CiudadConstantesFunciones.ExisteEnLista(this.ciudadsForeignKey,ciudad,true)) {

					this.ciudadsForeignKey.add(0,ciudad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroCosto()throws Exception {
		try {

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				CentroCosto centrocosto=new CentroCosto();
				CentroCostoConstantesFunciones.setCentroCostoDescripcion(centrocosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				centrocosto.setId(null);

				if(!CentroCostoConstantesFunciones.ExisteEnLista(this.centrocostosForeignKey,centrocosto,true)) {

					this.centrocostosForeignKey.add(0,centrocosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				Empleado empleado=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleado.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadosForeignKey,empleado,true)) {

					this.empleadosForeignKey.add(0,empleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableInventario()throws Exception {
		try {

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableInventario()) {
				CuentaContable cuentacontableinventario=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableinventario,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableinventario.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableinventariosForeignKey,cuentacontableinventario,true)) {

					this.cuentacontableinventariosForeignKey.add(0,cuentacontableinventario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableCosto()throws Exception {
		try {

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableCosto()) {
				CuentaContable cuentacontablecosto=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontablecosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontablecosto.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablecostosForeignKey,cuentacontablecosto,true)) {

					this.cuentacontablecostosForeignKey.add(0,cuentacontablecosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableVenta()throws Exception {
		try {

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableVenta()) {
				CuentaContable cuentacontableventa=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableventa,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableventa.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableventasForeignKey,cuentacontableventa,true)) {

					this.cuentacontableventasForeignKey.add(0,cuentacontableventa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableDescuento()throws Exception {
		try {

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDescuento()) {
				CuentaContable cuentacontabledescuento=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontabledescuento,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontabledescuento.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontabledescuentosForeignKey,cuentacontabledescuento,true)) {

					this.cuentacontabledescuentosForeignKey.add(0,cuentacontabledescuento);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableDevolucion()throws Exception {
		try {

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDevolucion()) {
				CuentaContable cuentacontabledevolucion=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontabledevolucion,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontabledevolucion.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontabledevolucionsForeignKey,cuentacontabledevolucion,true)) {

					this.cuentacontabledevolucionsForeignKey.add(0,cuentacontabledevolucion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableDebito()throws Exception {
		try {

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDebito()) {
				CuentaContable cuentacontabledebito=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontabledebito,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontabledebito.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontabledebitosForeignKey,cuentacontabledebito,true)) {

					this.cuentacontabledebitosForeignKey.add(0,cuentacontabledebito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableCredito()throws Exception {
		try {

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableCredito()) {
				CuentaContable cuentacontablecredito=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontablecredito,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontablecredito.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablecreditosForeignKey,cuentacontablecredito,true)) {

					this.cuentacontablecreditosForeignKey.add(0,cuentacontablecredito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableProduccion()throws Exception {
		try {

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableProduccion()) {
				CuentaContable cuentacontableproduccion=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableproduccion,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableproduccion.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableproduccionsForeignKey,cuentacontableproduccion,true)) {

					this.cuentacontableproduccionsForeignKey.add(0,cuentacontableproduccion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableBonifica()throws Exception {
		try {

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableBonifica()) {
				CuentaContable cuentacontablebonifica=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontablebonifica,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontablebonifica.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablebonificasForeignKey,cuentacontablebonifica,true)) {

					this.cuentacontablebonificasForeignKey.add(0,cuentacontablebonifica);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableCostoBonifica()throws Exception {
		try {

			if(!this.grupobodegaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableCostoBonifica()) {
				CuentaContable cuentacontablecostobonifica=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontablecostobonifica,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontablecostobonifica.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablecostobonificasForeignKey,cuentacontablecostobonifica,true)) {

					this.cuentacontablecostobonificasForeignKey.add(0,cuentacontablecostobonifica);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyGrupoBodega()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyGrupoBodega(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyGrupoBodega()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyGrupoBodega();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyGrupoBodega(GrupoBodega grupobodega)throws Exception {	
		try {
			
			this.setActualPaisForeignKey(grupobodega.getid_pais(),false,"Formulario");
			this.setActualCiudadForeignKey(grupobodega.getid_ciudad(),false,"Formulario");
			this.setActualCentroCostoForeignKey(grupobodega.getid_centro_costo(),false,"Formulario");
			this.setActualEmpleadoForeignKey(grupobodega.getid_empleado(),false,"Formulario");
			this.setActualCuentaContableInventarioForeignKey(grupobodega.getid_cuenta_contable_inventario(),false,"Formulario");
			this.setActualCuentaContableCostoForeignKey(grupobodega.getid_cuenta_contable_costo(),false,"Formulario");
			this.setActualCuentaContableVentaForeignKey(grupobodega.getid_cuenta_contable_venta(),false,"Formulario");
			this.setActualCuentaContableDescuentoForeignKey(grupobodega.getid_cuenta_contable_descuento(),false,"Formulario");
			this.setActualCuentaContableDevolucionForeignKey(grupobodega.getid_cuenta_contable_devolucion(),false,"Formulario");
			this.setActualCuentaContableDebitoForeignKey(grupobodega.getid_cuenta_contable_debito(),false,"Formulario");
			this.setActualCuentaContableCreditoForeignKey(grupobodega.getid_cuenta_contable_credito(),false,"Formulario");
			this.setActualCuentaContableProduccionForeignKey(grupobodega.getid_cuenta_contable_produccion(),false,"Formulario");
			this.setActualCuentaContableBonificaForeignKey(grupobodega.getid_cuenta_contable_bonifica(),false,"Formulario");
			this.setActualCuentaContableCostoBonificaForeignKey(grupobodega.getid_cuenta_contable_costo_bonifica(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyGrupoBodega(GrupoBodega grupobodega,String sTipoEvento)throws Exception {	
		try {
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyGrupoBodega()throws Exception {	
		try {
			
			this.setActualPaisForeignKey(this.grupobodegaConstantesFunciones.getid_pais(),false,"Formulario");
			this.setActualCiudadForeignKey(this.grupobodegaConstantesFunciones.getid_ciudad(),false,"Formulario");
			this.setActualCentroCostoForeignKey(this.grupobodegaConstantesFunciones.getid_centro_costo(),false,"Formulario");
			this.setActualEmpleadoForeignKey(this.grupobodegaConstantesFunciones.getid_empleado(),false,"Formulario");
			this.setActualCuentaContableInventarioForeignKey(this.grupobodegaConstantesFunciones.getid_cuenta_contable_inventario(),false,"Formulario");
			this.setActualCuentaContableCostoForeignKey(this.grupobodegaConstantesFunciones.getid_cuenta_contable_costo(),false,"Formulario");
			this.setActualCuentaContableVentaForeignKey(this.grupobodegaConstantesFunciones.getid_cuenta_contable_venta(),false,"Formulario");
			this.setActualCuentaContableDescuentoForeignKey(this.grupobodegaConstantesFunciones.getid_cuenta_contable_descuento(),false,"Formulario");
			this.setActualCuentaContableDevolucionForeignKey(this.grupobodegaConstantesFunciones.getid_cuenta_contable_devolucion(),false,"Formulario");
			this.setActualCuentaContableDebitoForeignKey(this.grupobodegaConstantesFunciones.getid_cuenta_contable_debito(),false,"Formulario");
			this.setActualCuentaContableCreditoForeignKey(this.grupobodegaConstantesFunciones.getid_cuenta_contable_credito(),false,"Formulario");
			this.setActualCuentaContableProduccionForeignKey(this.grupobodegaConstantesFunciones.getid_cuenta_contable_produccion(),false,"Formulario");
			this.setActualCuentaContableBonificaForeignKey(this.grupobodegaConstantesFunciones.getid_cuenta_contable_bonifica(),false,"Formulario");
			this.setActualCuentaContableCostoBonificaForeignKey(this.grupobodegaConstantesFunciones.getid_cuenta_contable_costo_bonifica(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyGrupoBodega()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyGrupoBodega()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyGrupoBodega()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroGrupoBodega()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyGrupoBodega()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFramePaissForeignKey("Todos");
			this.cargarCombosFrameCiudadsForeignKey("Todos");
			this.cargarCombosFrameCentroCostosForeignKey("Todos");
			this.cargarCombosFrameEmpleadosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableInventariosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableCostosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableVentasForeignKey("Todos");
			this.cargarCombosFrameCuentaContableDescuentosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableDevolucionsForeignKey("Todos");
			this.cargarCombosFrameCuentaContableDebitosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableCreditosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableProduccionsForeignKey("Todos");
			this.cargarCombosFrameCuentaContableBonificasForeignKey("Todos");
			this.cargarCombosFrameCuentaContableCostoBonificasForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyGrupoBodega(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableInventariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableCostosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableVentasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableDescuentosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableDevolucionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableDebitosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableCreditosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableProduccionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableBonificasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableCostoBonificasForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyGrupoBodega()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empresaGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empresaGrupoBodega.getItemCount()>0) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empresaGrupoBodega.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_paisGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_paisGrupoBodega.getItemCount()>0) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_paisGrupoBodega.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_ciudadGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_ciudadGrupoBodega.getItemCount()>0) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_ciudadGrupoBodega.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_centro_costoGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_centro_costoGrupoBodega.getItemCount()>0) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_centro_costoGrupoBodega.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empleadoGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empleadoGrupoBodega.getItemCount()>0) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empleadoGrupoBodega.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_inventarioGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_inventarioGrupoBodega.getItemCount()>0) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_inventarioGrupoBodega.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costoGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costoGrupoBodega.getItemCount()>0) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costoGrupoBodega.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_ventaGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_ventaGrupoBodega.getItemCount()>0) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_ventaGrupoBodega.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_descuentoGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_descuentoGrupoBodega.getItemCount()>0) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_descuentoGrupoBodega.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_devolucionGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_devolucionGrupoBodega.getItemCount()>0) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_devolucionGrupoBodega.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_debitoGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_debitoGrupoBodega.getItemCount()>0) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_debitoGrupoBodega.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_creditoGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_creditoGrupoBodega.getItemCount()>0) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_creditoGrupoBodega.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_produccionGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_produccionGrupoBodega.getItemCount()>0) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_produccionGrupoBodega.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_bonificaGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_bonificaGrupoBodega.getItemCount()>0) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_bonificaGrupoBodega.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega.getItemCount()>0) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	






























	
	

	public GrupoBodegaBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public GrupoBodegaBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public GrupoBodegaBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.grupobodegaSessionBean=new GrupoBodegaSessionBean(); 
		this.grupobodegaConstantesFunciones=new GrupoBodegaConstantesFunciones(); 
		this.grupobodegaBean=new GrupoBodega();//(this.grupobodegaConstantesFunciones); 		
		this.grupobodegaReturnGeneral=new GrupoBodegaParameterReturnGeneral(); 
		
		this.grupobodegaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.grupobodegaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public GrupoBodegaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public GrupoBodegaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public GrupoBodegaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessGrupoBodega(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.grupobodegaConstantesFunciones=new GrupoBodegaConstantesFunciones(); 
			this.grupobodegaBean=new GrupoBodega();//this.grupobodegaConstantesFunciones); 			
			this.grupobodegaReturnGeneral=new GrupoBodegaParameterReturnGeneral(); 
		
			GrupoBodegaBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Grupo Bodega Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			
			
			this.grupobodega=new GrupoBodega();
			this.grupobodegas = new ArrayList<GrupoBodega>();
			this.grupobodegasAux = new ArrayList<GrupoBodega>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic=new GrupoBodegaLogic();
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}
			
			//this.grupobodegaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.grupobodegaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormGrupoBodega);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoGrupoBodega!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoGrupoBodega);	
					}
					
					if(this.jInternalFrameImportacionGrupoBodega!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionGrupoBodega);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByGrupoBodega!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByGrupoBodega);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormGrupoBodega);
				this.jInternalFrameDetalleFormGrupoBodega.setVisible(false);
				this.jInternalFrameDetalleFormGrupoBodega.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoGrupoBodega!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoGrupoBodega);
					this.jInternalFrameReporteDinamicoGrupoBodega.setVisible(false);
					this.jInternalFrameReporteDinamicoGrupoBodega.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionGrupoBodega!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionGrupoBodega);
					this.jInternalFrameImportacionGrupoBodega.setVisible(false);
					this.jInternalFrameImportacionGrupoBodega.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByGrupoBodega!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByGrupoBodega);
					this.jInternalFrameOrderByGrupoBodega.setVisible(false);
					this.jInternalFrameOrderByGrupoBodega.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idGrupoBodegaActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=GrupoBodegaConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.grupobodegaReturnGeneral=new GrupoBodegaParameterReturnGeneral();
			
			this.grupobodegaParameterGeneral=new GrupoBodegaParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.grupobodegaLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(GrupoBodegaJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(BodegaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ParametroInventarioDefectoConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,GrupoBodegaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.grupobodegaSessionBean.getEsGuardarRelacionado(),this.grupobodegaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,GrupoBodegaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.grupobodegaSessionBean.getEsGuardarRelacionado(),this.grupobodegaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoGrupoBodega=false;
			this.isVisibilidadCeldaDuplicarGrupoBodega=true;
			this.isVisibilidadCeldaCopiarGrupoBodega=true;
			this.isVisibilidadCeldaVerFormGrupoBodega=true;
			this.isVisibilidadCeldaOrdenGrupoBodega=true;
			this.isVisibilidadCeldaNuevoRelacionesGrupoBodega=false;
			this.isVisibilidadCeldaModificarGrupoBodega=false;
			this.isVisibilidadCeldaActualizarGrupoBodega=false;
			this.isVisibilidadCeldaEliminarGrupoBodega=false;
			this.isVisibilidadCeldaCancelarGrupoBodega=false;
			this.isVisibilidadCeldaGuardarGrupoBodega=false;
			this.isVisibilidadCeldaGuardarCambiosGrupoBodega=false;
			
			
			this.isVisibilidadBusquedaPorCodigo=true;
			this.isVisibilidadBusquedaPorNombre=true;
			this.isVisibilidadBusquedaPorRuc=true;
			this.isVisibilidadBusquedaPorTelefono=true;
			this.isVisibilidadFK_IdCentroCosto=true;
			this.isVisibilidadFK_IdCiudad=true;
			this.isVisibilidadFK_IdCuentaContableBonifica=true;
			this.isVisibilidadFK_IdCuentaContableCosto=true;
			this.isVisibilidadFK_IdCuentaContableCostoBonifica=true;
			this.isVisibilidadFK_IdCuentaContableCredito=true;
			this.isVisibilidadFK_IdCuentaContableDebito=true;
			this.isVisibilidadFK_IdCuentaContableDescuento=true;
			this.isVisibilidadFK_IdCuentaContableDevolucion=true;
			this.isVisibilidadFK_IdCuentaContableInventario=true;
			this.isVisibilidadFK_IdCuentaContableProduccion=true;
			this.isVisibilidadFK_IdCuentaContableVenta=true;
			this.isVisibilidadFK_IdEmpleado=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdPais=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesGrupoBodega("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosGrupoBodega();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioGrupoBodega(false);
			
			this.setPermisosUsuarioGrupoBodega();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.grupobodegaSessionBean.getEsGuardarRelacionado() 
				|| (this.grupobodegaSessionBean.getEsGuardarRelacionado() && this.grupobodegaSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioGrupoBodegaClasesRelacionadas();
			}
			
			if(this.grupobodegaSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioGrupoBodegaClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosGrupoBodega();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualGrupoBodega();
			}
			
			if(!this.isPermisoBusquedaGrupoBodega) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasGrupoBodega.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.grupobodegaSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(false);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(false);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioGrupoBodega,this.isPermisoPaginacionMedioGrupoBodega,this.isPermisoPaginacionTodoGrupoBodega);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(GrupoBodegaConstantesFunciones.getTiposSeleccionarGrupoBodega());
				
				this.tiposColumnasSelect=GrupoBodegaConstantesFunciones.getTiposSeleccionarGrupoBodega(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectGrupoBodega();				
				//this.tiposRelacionesSelect=GrupoBodegaConstantesFunciones.getTiposRelacionesGrupoBodega(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioGrupoBodega();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(false,false,true);
				this.setAccionesUsuarioGrupoBodega(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(false,false,true);							
				this.setAccionesUsuarioGrupoBodega(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesGrupoBodega() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.bodegaLogic=new BodegaLogic();
			this.parametroinventariodefectoLogic=new ParametroInventarioDefectoLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.paisLogic=new PaisLogic();
			this.ciudadLogic=new CiudadLogic();
			this.centrocostoLogic=new CentroCostoLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.cuentacontableinventarioLogic=new CuentaContableLogic();
			this.cuentacontablecostoLogic=new CuentaContableLogic();
			this.cuentacontableventaLogic=new CuentaContableLogic();
			this.cuentacontabledescuentoLogic=new CuentaContableLogic();
			this.cuentacontabledevolucionLogic=new CuentaContableLogic();
			this.cuentacontabledebitoLogic=new CuentaContableLogic();
			this.cuentacontablecreditoLogic=new CuentaContableLogic();
			this.cuentacontableproduccionLogic=new CuentaContableLogic();
			this.cuentacontablebonificaLogic=new CuentaContableLogic();
			this.cuentacontablecostobonificaLogic=new CuentaContableLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				grupobodegaImplementable= (GrupoBodegaImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+GrupoBodegaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				grupobodegaImplementableHome= (GrupoBodegaImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+GrupoBodegaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.grupobodegas= new ArrayList<GrupoBodega>();
			this.grupobodegasEliminados= new ArrayList<GrupoBodega>();
						
			this.isEsNuevoGrupoBodega=false;
			this.esParaAccionDesdeFormularioGrupoBodega=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.paissForeignKey=new ArrayList<Pais>() ;
			this.ciudadsForeignKey=new ArrayList<Ciudad>() ;
			this.centrocostosForeignKey=new ArrayList<CentroCosto>() ;
			this.empleadosForeignKey=new ArrayList<Empleado>() ;
			this.cuentacontableinventariosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontablecostosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableventasForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontabledescuentosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontabledevolucionsForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontabledebitosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontablecreditosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableproduccionsForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontablebonificasForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontablecostobonificasForeignKey=new ArrayList<CuentaContable>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyGrupoBodega(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroGrupoBodega();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			GrupoBodegaBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=GrupoBodegaConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesGrupoBodega("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingGrupoBodega(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormGrupoBodega!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioGrupoBodega();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioGrupoBodega();
			}
			
			GrupoBodegaBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasGrupoBodega.getTabCount(); i++) {
					this.jTabbedPaneBusquedasGrupoBodega.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasGrupoBodega.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessGrupoBodega(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga GrupoBodega: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectGrupoBodega() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(BodegaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(BodegaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ParametroInventarioDefectoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ParametroInventarioDefectoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesGrupoBodega")) {
				iIndex=this.jInternalFrameDetalleFormGrupoBodega.jTabbedPaneRelacionesGrupoBodega.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormGrupoBodega.jTabbedPaneRelacionesGrupoBodega.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();	
				
				

				if(sTitle.equals("Bodegas")) {
					if(!BodegaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessGrupoBodega();

						this.cargarParteTabPanelRelacionadaBodega(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Parametro Inventario Defectos")) {
					if(!ParametroInventarioDefectoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessGrupoBodega();

						this.cargarParteTabPanelRelacionadaParametroInventarioDefecto(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessGrupoBodega();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaBodega(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormGrupoBodega.cargarSessionConBeanSwingJInternalFrameBodega(false,true,iIndex);
		this.jButtonBodegaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaBodega();

		//this.jTabbedPaneRelacionesGrupoBodega.updateUI();
		//this.jTabbedPaneRelacionesGrupoBodega.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesGrupoBodega.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaParametroInventarioDefecto(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormGrupoBodega.cargarSessionConBeanSwingJInternalFrameParametroInventarioDefecto(false,true,iIndex);
		this.jButtonParametroInventarioDefectoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaParametroInventarioDefecto();

		//this.jTabbedPaneRelacionesGrupoBodega.updateUI();
		//this.jTabbedPaneRelacionesGrupoBodega.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesGrupoBodega.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("Bodega")) {
				int row=this.jTableDatosGrupoBodega.getSelectedRow();
				jButtonBodegaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ParametroInventarioDefecto")) {
				int row=this.jTableDatosGrupoBodega.getSelectedRow();
				jButtonParametroInventarioDefectoActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Bodega")) {

					if(this.isTienePermisosBodega && this.grupobodegaConstantesFunciones.mostrarBodegaGrupoBodega && !GrupoBodegaConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Bodegas"+"("+BodegaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Bodegas");

						if(grupobodegaConstantesFunciones.resaltarBodegaGrupoBodega!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(grupobodegaConstantesFunciones.resaltarBodegaGrupoBodega);
						}

						jmenuItem.setEnabled(this.grupobodegaConstantesFunciones.activarBodegaGrupoBodega);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Bodega"));

						

						this.jInternalFrameDetalleFormGrupoBodega.jmenuDetalleGrupoBodega.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Parametro Inventario Defecto")) {

					if(this.isTienePermisosParametroInventarioDefecto && this.grupobodegaConstantesFunciones.mostrarParametroInventarioDefectoGrupoBodega && !GrupoBodegaConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Parametro Inventario Defectos"+"("+ParametroInventarioDefectoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Parametro Inventario Defectos");

						if(grupobodegaConstantesFunciones.resaltarParametroInventarioDefectoGrupoBodega!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(grupobodegaConstantesFunciones.resaltarParametroInventarioDefectoGrupoBodega);
						}

						jmenuItem.setEnabled(this.grupobodegaConstantesFunciones.activarParametroInventarioDefectoGrupoBodega);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ParametroInventarioDefecto"));

						

						this.jInternalFrameDetalleFormGrupoBodega.jmenuDetalleGrupoBodega.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyGrupoBodega(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyGrupoBodega(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyGrupoBodega(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyGrupoBodegaListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyGrupoBodega();
		
		this.cargarCombosFrameForeignKeyGrupoBodega();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyGrupoBodega();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyGrupoBodega();
		}
	}
	
	

	public void cargarCombosForeignKeyPais(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaPais(this.paissForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCiudadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCiudad();
				this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCiudad(this.ciudadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpleado(this.empleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableInventario(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableInventarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableInventario();
				this.cargarCombosFrameCuentaContableInventariosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableInventario(this.cuentacontableinventariosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableCosto();
				this.cargarCombosFrameCuentaContableCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableCosto(this.cuentacontablecostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableVenta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableVenta();
				this.cargarCombosFrameCuentaContableVentasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableVenta(this.cuentacontableventasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableDescuento(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableDescuentoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableDescuento();
				this.cargarCombosFrameCuentaContableDescuentosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableDescuento(this.cuentacontabledescuentosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableDevolucion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableDevolucionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableDevolucion();
				this.cargarCombosFrameCuentaContableDevolucionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableDevolucion(this.cuentacontabledevolucionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableDebito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableDebitoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableDebito();
				this.cargarCombosFrameCuentaContableDebitosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableDebito(this.cuentacontabledebitosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableCredito();
				this.cargarCombosFrameCuentaContableCreditosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableCredito(this.cuentacontablecreditosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableProduccion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableProduccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableProduccion();
				this.cargarCombosFrameCuentaContableProduccionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableProduccion(this.cuentacontableproduccionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableBonifica(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableBonificaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableBonifica();
				this.cargarCombosFrameCuentaContableBonificasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableBonifica(this.cuentacontablebonificasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableCostoBonifica(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableCostoBonificaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableCostoBonifica();
				this.cargarCombosFrameCuentaContableCostoBonificasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableCostoBonifica(this.cuentacontablecostobonificasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoGrupoBodegaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.grupobodegaSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormGrupoBodega==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			
			
			if(jTableDatosGrupoBodega.getRowCount()>=1) {
				jTableDatosGrupoBodega.removeRowSelectionInterval(0, jTableDatosGrupoBodega.getRowCount()-1);						
			}
			
			this.isEsNuevoGrupoBodega=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoGrupoBodega(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesGrupoBodega(true);			
			//this.grupobodega=new GrupoBodega();
			//this.grupobodega.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesGrupoBodega(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualGrupoBodega() ;
			
			if(GrupoBodegaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleGrupoBodega(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.grupobodega);	
			this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);				
			
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			
			if(this.grupobodegaSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar GrupoBodega: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarGrupoBodegaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<GrupoBodega> grupobodegasSeleccionados=new ArrayList<GrupoBodega>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosGrupoBodega.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosGrupoBodega.getSelectedRows().length;			
			}
			
			grupobodegasSeleccionados=this.getGrupoBodegasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoGrupoBodega--;			
				//GrupoBodega grupobodegaAux= new GrupoBodega();			
				//grupobodegaAux.setId(this.iIdNuevoGrupoBodega);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//GrupoBodega grupobodegaOrigen=new GrupoBodega();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(GrupoBodega grupobodegaOrigen : grupobodegasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							grupobodegaOrigen =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							grupobodegaOrigen =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaGrupoBodega();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.grupobodega.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosGrupoBodega(grupobodegaOrigen,this.grupobodega,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.grupobodegaLogic.getGrupoBodegas().add(this.grupobodegaAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.grupobodegas.add(this.grupobodegaAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaGrupoBodega(false);
				
				this.jTableDatosGrupoBodega.setRowSelectionInterval(this.getIndiceNuevoGrupoBodega(), this.getIndiceNuevoGrupoBodega());
				
				int iLastRow =  this.jTableDatosGrupoBodega.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosGrupoBodega.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosGrupoBodega.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaGrupoBodega(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<GrupoBodega> grupobodegasSeleccionados=new ArrayList<GrupoBodega>();									
		
			GrupoBodega grupobodegaOrigen=new GrupoBodega();
			GrupoBodega grupobodegaDestino=new GrupoBodega();
				
			grupobodegasSeleccionados=this.getGrupoBodegasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosGrupoBodega.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || grupobodegasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosGrupoBodega.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegaOrigen =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						grupobodegaOrigen =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						grupobodegaDestino =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						grupobodegaDestino =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				grupobodegaOrigen =grupobodegasSeleccionados.get(0);
				grupobodegaDestino =grupobodegasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosGrupoBodega(grupobodegaOrigen,grupobodegaDestino,true,false);
				
				grupobodegaDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(grupobodegaDestino,grupobodegaLogic.getGrupoBodegas());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(grupobodegaDestino,grupobodegas);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaGrupoBodega(false);
				
				//this.jTableDatosGrupoBodega.setRowSelectionInterval(this.getIndiceNuevoGrupoBodega(), this.getIndiceNuevoGrupoBodega());
				
				int iLastRow =  this.jTableDatosGrupoBodega.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosGrupoBodega.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosGrupoBodega.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaGrupoBodega(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormGrupoBodega==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormGrupoBodega.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesGrupoBodega.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasGrupoBodega.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesGrupoBodega.setVisible(!isVisible);
			this.jPanelPaginacionGrupoBodega.setVisible(!isVisible);
			this.jPanelAccionesGrupoBodega.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameGrupoBodega();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoGrupoBodega();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionGrupoBodega();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByGrupoBodega();
			
			this.abrirFrameOrderByGrupoBodega();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByGrupoBodega();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleGrupoBodega(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormGrupoBodega);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormGrupoBodega.isMaximum()) {
					this.jInternalFrameDetalleFormGrupoBodega.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormGrupoBodega.setSize(this.jInternalFrameDetalleFormGrupoBodega.iWidthFormulario,this.jInternalFrameDetalleFormGrupoBodega.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormGrupoBodega.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormGrupoBodega.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormGrupoBodega.isMaximum()) {
						this.jInternalFrameDetalleFormGrupoBodega.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormGrupoBodega.jContentPaneDetalleGrupoBodega.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormGrupoBodega.jTabbedPaneRelacionesGrupoBodega.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormGrupoBodega.jContentPaneDetalleGrupoBodega.getWidth(),GrupoBodegaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormGrupoBodega.jTabbedPaneRelacionesGrupoBodega.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormGrupoBodega.jContentPaneDetalleGrupoBodega.getWidth(),GrupoBodegaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormGrupoBodega.jTabbedPaneRelacionesGrupoBodega.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormGrupoBodega.jContentPaneDetalleGrupoBodega.getWidth(),GrupoBodegaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(BodegaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaBodega();
					}

					if(ParametroInventarioDefectoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaParametroInventarioDefecto();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormGrupoBodega.setVisible(true);
	        this.jInternalFrameDetalleFormGrupoBodega.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByGrupoBodega() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByGrupoBodega==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByGrupoBodega=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByGrupoBodega,false,this);
				} else {
					this.jInternalFrameOrderByGrupoBodega=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByGrupoBodega,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByGrupoBodega);
				this.jInternalFrameOrderByGrupoBodega.setVisible(false);
				this.jInternalFrameOrderByGrupoBodega.setSelected(false);
				
				this.jInternalFrameOrderByGrupoBodega.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByGrupoBodega"));
				
				this.inicializarActualizarBindingTablaOrderByGrupoBodega();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionGrupoBodega() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionGrupoBodega==null) {
				
				this.jInternalFrameImportacionGrupoBodega=new ImportacionJInternalFrame(GrupoBodegaConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionGrupoBodega);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionGrupoBodega);
				this.jInternalFrameImportacionGrupoBodega.setVisible(false);
				this.jInternalFrameImportacionGrupoBodega.setSelected(false);


				this.jInternalFrameImportacionGrupoBodega.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionGrupoBodega"));
				this.jInternalFrameImportacionGrupoBodega.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionGrupoBodega"));
				this.jInternalFrameImportacionGrupoBodega.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionGrupoBodega"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoGrupoBodega() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoGrupoBodega==null) {
				this.jInternalFrameReporteDinamicoGrupoBodega=new ReporteDinamicoJInternalFrame(GrupoBodegaConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoGrupoBodega);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoGrupoBodega);
				this.jInternalFrameReporteDinamicoGrupoBodega.setVisible(false);
				this.jInternalFrameReporteDinamicoGrupoBodega.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoGrupoBodega.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoGrupoBodega"));
				this.jInternalFrameReporteDinamicoGrupoBodega.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoGrupoBodega"));
				this.jInternalFrameReporteDinamicoGrupoBodega.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoGrupoBodega"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualGrupoBodega();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaBodega() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormGrupoBodega.jContentPaneDetalleGrupoBodega.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaParametroInventarioDefecto() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.jScrollPanelDatosParametroInventarioDefecto.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormGrupoBodega.jContentPaneDetalleGrupoBodega.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.jScrollPanelDatosParametroInventarioDefecto.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.jScrollPanelDatosParametroInventarioDefecto.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.jScrollPanelDatosParametroInventarioDefecto.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleGrupoBodega() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormGrupoBodega);
			
	       	this.jInternalFrameDetalleFormGrupoBodega.setVisible(false);
	        this.jInternalFrameDetalleFormGrupoBodega.setSelected(false);
			
			//this.jInternalFrameDetalleFormGrupoBodega.dispose();
			//this.jInternalFrameDetalleFormGrupoBodega=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoGrupoBodega() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoGrupoBodega.setVisible(true);
	        this.jInternalFrameReporteDinamicoGrupoBodega.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionGrupoBodega() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionGrupoBodega.setVisible(true);
	        this.jInternalFrameImportacionGrupoBodega.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByGrupoBodega() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByGrupoBodega.setVisible(true);
	        this.jInternalFrameOrderByGrupoBodega.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByGrupoBodega() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByGrupoBodega.setVisible(false);
	        this.jInternalFrameOrderByGrupoBodega.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoGrupoBodega() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoGrupoBodega.setVisible(false);
	        this.jInternalFrameReporteDinamicoGrupoBodega.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionGrupoBodega() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionGrupoBodega.setVisible(false);
	        this.jInternalFrameImportacionGrupoBodega.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCentroCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCentroCosto);
						CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.sTipoBusqueda="CentroCosto";
						}

						centrocostoBeanSwingJInternalFrame.getTodosCentroCostoArbol();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setCentroCostos(centrocostoBeanSwingJInternalFrame.centrocostosArbol);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.CargarTreeCentroCosto();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setVisible(true);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.jInternalFrameParent=this;
						TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
						TitledBorder titledBorderCentroCosto=(TitledBorder)centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

						titledBorderCentroCosto.setTitle(titledBorderGrupoBodega.getTitle() + " -> Centro Costo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(centrocostoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCentroCosto(CentroCostoBeanSwingJInternalFrame jInternalFrameTreeCentroCosto) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCentroCosto);
						jInternalFrameTreeCentroCosto.setVisible(false);
						jInternalFrameTreeCentroCosto.setSelected(false);
						//jInternalFrameTreeCentroCosto.dispose();
						//jInternalFrameTreeCentroCosto=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableInventario(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableInventario";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
						TitledBorder titledBorderCuentaContableInventario=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableInventario.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableInventario(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableCosto";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
						TitledBorder titledBorderCuentaContableCosto=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableCosto.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableCosto(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableVenta(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableVenta";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
						TitledBorder titledBorderCuentaContableVenta=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableVenta.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableVenta(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableDescuento(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableDescuento";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
						TitledBorder titledBorderCuentaContableDescuento=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableDescuento.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableDescuento(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableDevolucion(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableDevolucion";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
						TitledBorder titledBorderCuentaContableDevolucion=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableDevolucion.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableDevolucion(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableDebito(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableDebito";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
						TitledBorder titledBorderCuentaContableDebito=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableDebito.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableDebito(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableCredito(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableCredito";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
						TitledBorder titledBorderCuentaContableCredito=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableCredito.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableCredito(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableProduccion(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableProduccion";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
						TitledBorder titledBorderCuentaContableProduccion=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableProduccion.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableProduccion(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableBonifica(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableBonifica";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
						TitledBorder titledBorderCuentaContableBonifica=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableBonifica.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableBonifica(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableCostoBonifica(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableCostoBonifica";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
						TitledBorder titledBorderCuentaContableCostoBonifica=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableCostoBonifica.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableCostoBonifica(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarGrupoBodega(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarGrupoBodega(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesGrupoBodega(true);
			//this.isEsNuevoGrupoBodega=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesGrupoBodega("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesGrupoBodega(false) ;
			
			if(grupobodegaSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaSessionBean.getEsGuardarRelacionado() && BodegaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonBodegaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoSessionBean.getEsGuardarRelacionado() && ParametroInventarioDefectoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonParametroInventarioDefectoActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(GrupoBodegaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleGrupoBodega(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualGrupoBodega(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaGrupoBodegaActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarGrupoBodega(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormGrupoBodega==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesGrupoBodega(true);
			//this.isEsNuevoGrupoBodega=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.grupobodega.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesGrupoBodega("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesGrupoBodega(false) ;
			
			if(GrupoBodegaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleGrupoBodega(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualGrupoBodega(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
		} catch(Exception e) {
			throw e;
		}
	}
	
		
	
	public void recargarComboTablaPais(List<Pais> paissForeignKey)throws Exception{
		TableColumn tableColumnPais=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDPAIS));
		TableCellEditor tableCellEditorPais =tableColumnPais.getCellEditor();

		PaisTableCell paisTableCellFk=(PaisTableCell)tableCellEditorPais;

		if(paisTableCellFk!=null) {
			paisTableCellFk.setpaissForeignKey(paissForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();

		//if(intSelectedRow<=0) {
			//paisTableCellFk.setRowActual(intSelectedRow);
			//paisTableCellFk.setpaissForeignKeyActual(paissForeignKey);
		//}


		if(paisTableCellFk!=null) {
			paisTableCellFk.RecargarPaissForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCiudad(List<Ciudad> ciudadsForeignKey)throws Exception{
		TableColumn tableColumnCiudad=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCIUDAD));
		TableCellEditor tableCellEditorCiudad =tableColumnCiudad.getCellEditor();

		CiudadTableCell ciudadTableCellFk=(CiudadTableCell)tableCellEditorCiudad;

		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.setciudadsForeignKey(ciudadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();

		//if(intSelectedRow<=0) {
			//ciudadTableCellFk.setRowActual(intSelectedRow);
			//ciudadTableCellFk.setciudadsForeignKeyActual(ciudadsForeignKey);
		//}


		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.RecargarCiudadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroCosto(List<CentroCosto> centrocostosForeignKey)throws Exception{
		TableColumn tableColumnCentroCosto=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCENTROCOSTO));
		TableCellEditor tableCellEditorCentroCosto =tableColumnCentroCosto.getCellEditor();

		CentroCostoTableCell centrocostoTableCellFk=(CentroCostoTableCell)tableCellEditorCentroCosto;

		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.setcentrocostosForeignKey(centrocostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centrocostoTableCellFk.setRowActual(intSelectedRow);
			//centrocostoTableCellFk.setcentrocostosForeignKeyActual(centrocostosForeignKey);
		//}


		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.RecargarCentroCostosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpleado(List<Empleado> empleadosForeignKey)throws Exception{
		TableColumn tableColumnEmpleado=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDEMPLEADO));
		TableCellEditor tableCellEditorEmpleado =tableColumnEmpleado.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleado;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadosForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableInventario(List<CuentaContable> cuentacontableinventariosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableInventario=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO));
		TableCellEditor tableCellEditorCuentaContableInventario =tableColumnCuentaContableInventario.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableInventario;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableinventariosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableinventariosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableCosto(List<CuentaContable> cuentacontablecostosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableCosto=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTO));
		TableCellEditor tableCellEditorCuentaContableCosto =tableColumnCuentaContableCosto.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableCosto;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablecostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablecostosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableVenta(List<CuentaContable> cuentacontableventasForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableVenta=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA));
		TableCellEditor tableCellEditorCuentaContableVenta =tableColumnCuentaContableVenta.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableVenta;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableventasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableventasForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableDescuento(List<CuentaContable> cuentacontabledescuentosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableDescuento=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO));
		TableCellEditor tableCellEditorCuentaContableDescuento =tableColumnCuentaContableDescuento.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableDescuento;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontabledescuentosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontabledescuentosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableDevolucion(List<CuentaContable> cuentacontabledevolucionsForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableDevolucion=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION));
		TableCellEditor tableCellEditorCuentaContableDevolucion =tableColumnCuentaContableDevolucion.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableDevolucion;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontabledevolucionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontabledevolucionsForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableDebito(List<CuentaContable> cuentacontabledebitosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableDebito=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEBITO));
		TableCellEditor tableCellEditorCuentaContableDebito =tableColumnCuentaContableDebito.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableDebito;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontabledebitosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontabledebitosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableCredito(List<CuentaContable> cuentacontablecreditosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableCredito=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECREDITO));
		TableCellEditor tableCellEditorCuentaContableCredito =tableColumnCuentaContableCredito.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableCredito;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablecreditosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablecreditosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableProduccion(List<CuentaContable> cuentacontableproduccionsForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableProduccion=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION));
		TableCellEditor tableCellEditorCuentaContableProduccion =tableColumnCuentaContableProduccion.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableProduccion;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableproduccionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableproduccionsForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableBonifica(List<CuentaContable> cuentacontablebonificasForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableBonifica=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEBONIFICA));
		TableCellEditor tableCellEditorCuentaContableBonifica =tableColumnCuentaContableBonifica.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableBonifica;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablebonificasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablebonificasForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableCostoBonifica(List<CuentaContable> cuentacontablecostobonificasForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableCostoBonifica=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOBONIFICA));
		TableCellEditor tableCellEditorCuentaContableCostoBonifica =tableColumnCuentaContableCostoBonifica.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableCostoBonifica;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablecostobonificasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablecostobonificasForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	
	public void jButtonActualizarGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesGrupoBodega(false);
			
			//if(!this.isEsNuevoGrupoBodega) {								
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				
			}
			
			if(this.permiteMantenimiento(this.grupobodega)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoGrupoBodega=true;
					this.inicializarActualizarBindingTablaGrupoBodega(false);
					this.isEsNuevoGrupoBodega=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoGrupoBodega=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoGrupoBodega=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesGrupoBodega(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualGrupoBodega(false);
				
				this.habilitarDeshabilitarControlesGrupoBodega(false);
			
												
				
				if(GrupoBodegaJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleGrupoBodega();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoGrupoBodegaActionPerformed(evt,grupobodegaSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualGrupoBodega(this.grupobodega,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,grupobodegaSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.grupobodega.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(GrupoBodega.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GrupoBodega.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				this.grupobodega.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				this.grupobodega.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.grupobodega)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((GrupoBodegaModel) this.jTableDatosGrupoBodega.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoGrupoBodega=true;
				this.inicializarActualizarBindingTablaGrupoBodega(false);
				this.isEsNuevoGrupoBodega=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesGrupoBodega(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualGrupoBodega(false);
				
				this.habilitarDeshabilitarControlesGrupoBodega(false);
				
				
				
				if(GrupoBodegaJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleGrupoBodega();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosGrupoBodega.getRowCount()>=1) {
				jTableDatosGrupoBodega.removeRowSelectionInterval(0, jTableDatosGrupoBodega.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesGrupoBodega(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaGrupoBodega(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesGrupoBodega(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualGrupoBodega(false) ;
			
			this.isEsNuevoGrupoBodega=false;
			
			if(GrupoBodegaJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleGrupoBodega();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingGrupoBodega(false);
				
				//SI ES MANUAL
				if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualGrupoBodega();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoGrupoBodega--;			
			//GrupoBodega grupobodegaAux= new GrupoBodega();			
			//grupobodegaAux.setId(this.iIdNuevoGrupoBodega);
			
			if(this.jInternalFrameDetalleFormGrupoBodega==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaGrupoBodega();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
			
			this.grupobodega.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.grupobodegaLogic.getGrupoBodegas().add(this.grupobodegaAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.grupobodegas.add(this.grupobodegaAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaGrupoBodega(false);
			
			this.jTableDatosGrupoBodega.setRowSelectionInterval(this.getIndiceNuevoGrupoBodega(), this.getIndiceNuevoGrupoBodega());
			
			int iLastRow =  this.jTableDatosGrupoBodega.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosGrupoBodega.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosGrupoBodega.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaGrupoBodega(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingGrupoBodega(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingGrupoBodega(false);
			
			//SI ES MANUAL
			if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualGrupoBodega();
			}
			
			//this.abrirFrameTreeGrupoBodega();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Grupo BodegaES ?", "MANTENIMIENTO DE Grupo Bodega", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionGrupoBodega.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralGrupoBodega();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.grupobodegaReturnGeneral=grupobodegaLogic.procesarImportacionGrupoBodegasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.grupobodegaParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarGrupoBodegaReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionGrupoBodega.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionGrupoBodega.setFileImportacion(this.jInternalFrameImportacionGrupoBodega.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionGrupoBodega.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionGrupoBodega.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionGrupoBodega.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionGrupoBodega.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<GrupoBodega> grupobodegasSeleccionados=new ArrayList<GrupoBodega>();		

		grupobodegasSeleccionados=this.getGrupoBodegasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoGrupoBodega.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoGrupoBodega.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("GrupoBodegaBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"GrupoBodegaBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteGrupoBodegas("Todos",grupobodegasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.grupobodegaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Grupo Bodega",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoGrupoBodega.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoGrupoBodega.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case GrupoBodegaConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_CODIGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_digo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_digo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_digo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_digo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_NOMBRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_RUC:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_c_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_c_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_c_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_c_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_DIRECCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_reccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_reccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_reccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_reccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_TELEFONO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lefono_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lefono_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lefono_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lefono_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDPAIS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Pais_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Pais_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Pais_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Pais_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCIUDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ciudad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ciudad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ciudad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ciudad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCENTROCOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableInventario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableInventario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableInventario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableInventario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableVenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableVenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableVenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableVenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableDescuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableDescuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableDescuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableDescuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableDevolucion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableDevolucion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableDevolucion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableDevolucion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEBITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableDebito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableDebito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableDebito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableDebito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECREDITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableProduccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableProduccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableProduccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableProduccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEBONIFICA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableBonifica_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableBonifica_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableBonifica_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableBonifica_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOBONIFICA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableCostoBonifica_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableCostoBonifica_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableCostoBonifica_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableCostoBonifica_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoGrupoBodega.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoGrupoBodega.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoGrupoBodega.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case GrupoBodegaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoria="codigo";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoria="nombre";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoria="ruc";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoria="direccion";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoria="telefono";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoria="id_pais";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCIUDAD:
					sNombreCampoCategoria="id_ciudad";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoria="id_centro_costo";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoria="id_empleado";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO:
					sNombreCampoCategoria="id_cuenta_contable_inventario";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTO:
					sNombreCampoCategoria="id_cuenta_contable_costo";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA:
					sNombreCampoCategoria="id_cuenta_contable_venta";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO:
					sNombreCampoCategoria="id_cuenta_contable_descuento";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION:
					sNombreCampoCategoria="id_cuenta_contable_devolucion";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEBITO:
					sNombreCampoCategoria="id_cuenta_contable_debito";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECREDITO:
					sNombreCampoCategoria="id_cuenta_contable_credito";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION:
					sNombreCampoCategoria="id_cuenta_contable_produccion";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEBONIFICA:
					sNombreCampoCategoria="id_cuenta_contable_bonifica";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOBONIFICA:
					sNombreCampoCategoria="id_cuenta_contable_costo_bonifica";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoGrupoBodega.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case GrupoBodegaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoriaValor="codigo";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoriaValor="nombre";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoriaValor="ruc";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoriaValor="direccion";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoriaValor="telefono";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoriaValor="id_pais";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCIUDAD:
					sNombreCampoCategoriaValor="id_ciudad";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoriaValor="id_centro_costo";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoriaValor="id_empleado";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO:
					sNombreCampoCategoriaValor="id_cuenta_contable_inventario";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTO:
					sNombreCampoCategoriaValor="id_cuenta_contable_costo";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA:
					sNombreCampoCategoriaValor="id_cuenta_contable_venta";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO:
					sNombreCampoCategoriaValor="id_cuenta_contable_descuento";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION:
					sNombreCampoCategoriaValor="id_cuenta_contable_devolucion";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEBITO:
					sNombreCampoCategoriaValor="id_cuenta_contable_debito";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECREDITO:
					sNombreCampoCategoriaValor="id_cuenta_contable_credito";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION:
					sNombreCampoCategoriaValor="id_cuenta_contable_produccion";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEBONIFICA:
					sNombreCampoCategoriaValor="id_cuenta_contable_bonifica";
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOBONIFICA:
					sNombreCampoCategoriaValor="id_cuenta_contable_costo_bonifica";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoGrupoBodega.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoGrupoBodega.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case GrupoBodegaConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_CODIGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"codigo");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_NOMBRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_RUC:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruc",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ruc");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_DIRECCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Direccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"direccion");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_TELEFONO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Telefono",sNombreCampoCategoria,sNombreCampoCategoriaValor,"telefono");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDPAIS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Pais",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_pais");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCIUDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ciudad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ciudad");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_costo");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Inventario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_inventario");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_costo");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Venta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_venta");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_descuento");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Devolucion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_devolucion");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEBITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Debito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_debito");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_credito");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Produccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_produccion");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEBONIFICA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Bonifica",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_bonifica");
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOBONIFICA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Costo Bonifica",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_costo_bonifica");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<GrupoBodega> grupobodegasSeleccionados=new ArrayList<GrupoBodega>();		
		
		grupobodegasSeleccionados=this.getGrupoBodegasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"grupobodega";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("GrupoBodegas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoGrupoBodega.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoGrupoBodega.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case GrupoBodegaConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_CODIGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_CODIGO);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getcodigo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_NOMBRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_NOMBRE);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getnombre());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_RUC:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_RUC);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getruc());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_DIRECCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_DIRECCION);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getdireccion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_TELEFONO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_TELEFONO);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.gettelefono());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDPAIS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDPAIS);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getpais_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCIUDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCIUDAD);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getciudad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCENTROCOSTO);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getcentrocosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDEMPLEADO);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getcuentacontableinventario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTO);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getcuentacontablecosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getcuentacontableventa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getcuentacontabledescuento_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getcuentacontabledevolucion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEBITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEBITO);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getcuentacontabledebito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECREDITO);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getcuentacontablecredito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getcuentacontableproduccion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEBONIFICA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEBONIFICA);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getcuentacontablebonifica_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOBONIFICA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOBONIFICA);
					iRow++;

					for(GrupoBodega grupobodega:grupobodegasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(grupobodega.getcuentacontablecostobonifica_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelGrupoBodega(row);				
			//	iRow++;
			//}				
			
			//for(GrupoBodega grupobodegaAux:grupobodegasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelGrupoBodega(grupobodegaAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.grupobodegaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Grupo Bodega",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingGrupoBodega(false);
			
			//SI ES MANUAL
			if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualGrupoBodega();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingGrupoBodega(false);
			
			//SI ES MANUAL
			if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualGrupoBodega();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingGrupoBodega(false);
			
			//SI ES MANUAL
			if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualGrupoBodega();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaGrupoBodega() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosGrupoBodega.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosGrupoBodega.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosGrupoBodega.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosGrupoBodega.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosGrupoBodega.setMinimumSize(dimensionMinimum);
		this.jTableDatosGrupoBodega.setMaximumSize(dimensionMaximum);
		this.jTableDatosGrupoBodega.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingGrupoBodega(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingGrupoBodega(esInicializar,true);
	}
	
	public void inicializarActualizarBindingGrupoBodega(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaGrupoBodega(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesGrupoBodega(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasGrupoBodega(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesGrupoBodega(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesGrupoBodega(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !GrupoBodegaJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualGrupoBodega() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaGrupoBodega();
		
		this.inicializarActualizarBindingBotonesManualGrupoBodega(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualGrupoBodega();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesGrupoBodega() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualGrupoBodega(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualGrupoBodega(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosGrupoBodega.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosGrupoBodega.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteGrupoBodega.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormGrupoBodega.jCheckBoxPostAccionNuevoGrupoBodega.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormGrupoBodega.jCheckBoxPostAccionSinCerrarGrupoBodega.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormGrupoBodega.jCheckBoxPostAccionSinMensajeGrupoBodega.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosGrupoBodega.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosGrupoBodega.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteGrupoBodega.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
				this.jInternalFrameDetalleFormGrupoBodega.jCheckBoxPostAccionNuevoGrupoBodega.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormGrupoBodega.jCheckBoxPostAccionSinCerrarGrupoBodega.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormGrupoBodega.jCheckBoxPostAccionSinMensajeGrupoBodega.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionGrupoBodega.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionGrupoBodega.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxTiposAccionesFormularioGrupoBodega.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesGrupoBodega.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoGrupoBodega!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoGrupoBodega.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesGrupoBodega.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesGrupoBodega.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarGrupoBodega.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesGrupoBodega.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoGrupoBodega!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoGrupoBodega.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesGrupoBodega.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralGrupoBodega.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesGrupoBodega(Boolean esInicializar) throws Exception {
		try	{	
			if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualGrupoBodega(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesGrupoBodega() throws Exception {
		try	{
			if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualGrupoBodega();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleGrupoBodega() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxTiposAccionesFormularioGrupoBodega.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormGrupoBodega.jComboBoxTiposAccionesFormularioGrupoBodega.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualGrupoBodega() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesGrupoBodega.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesGrupoBodega.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesGrupoBodega.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesGrupoBodega.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesGrupoBodega.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesGrupoBodega.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionGrupoBodega.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionGrupoBodega.addItem(reporte);
			}
			
			
			if(!this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionGrupoBodega.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionGrupoBodega.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesGrupoBodega.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesGrupoBodega.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesGrupoBodega.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesGrupoBodega.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormGrupoBodega.jComboBoxTiposAccionesFormularioGrupoBodega.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormGrupoBodega.jComboBoxTiposAccionesFormularioGrupoBodega.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarGrupoBodega.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarGrupoBodega.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarGrupoBodega.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualGrupoBodega();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualGrupoBodega() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoGrupoBodega!=null) {
				this.jInternalFrameReporteDinamicoGrupoBodega.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoGrupoBodega.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoGrupoBodega!=null) {
				this.jInternalFrameReporteDinamicoGrupoBodega.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoGrupoBodega.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoGrupoBodega!=null) {
				
				if(this.jInternalFrameReporteDinamicoGrupoBodega.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoGrupoBodega.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoGrupoBodega.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoGrupoBodega.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoGrupoBodega.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoGrupoBodega.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualGrupoBodega()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		this.codigoBusquedaPorCodigo=this.jTextFieldcodigoBusquedaPorCodigoGrupoBodega.getText();
		this.nombreBusquedaPorNombre=this.jTextAreanombreBusquedaPorNombreGrupoBodega.getText();
		this.rucBusquedaPorRuc=this.jTextFieldrucBusquedaPorRucGrupoBodega.getText();
		this.telefonoBusquedaPorTelefono=this.jTextFieldtelefonoBusquedaPorTelefonoGrupoBodega.getText();
		if(this.jComboBoxid_centro_costoFK_IdCentroCostoGrupoBodega.getSelectedItem()!=null){this.id_centro_costoFK_IdCentroCosto=((CentroCosto)this.jComboBoxid_centro_costoFK_IdCentroCostoGrupoBodega.getSelectedItem()).getId();}
		if(this.jComboBoxid_empleadoFK_IdEmpleadoGrupoBodega.getSelectedItem()!=null){this.id_empleadoFK_IdEmpleado=((Empleado)this.jComboBoxid_empleadoFK_IdEmpleadoGrupoBodega.getSelectedItem()).getId();}
		if(this.jComboBoxid_paisFK_IdPaisGrupoBodega.getSelectedItem()!=null){this.id_paisFK_IdPais=((Pais)this.jComboBoxid_paisFK_IdPaisGrupoBodega.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasGrupoBodega(Boolean esInicializar) throws Exception {				
		if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualGrupoBodega();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaGrupoBodega() throws Exception {
		this.inicializarActualizarBindingTablaGrupoBodega(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByGrupoBodega() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByGrupoBodega.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByGrupoBodega.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByGrupoBodega.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByGrupoBodega.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByGrupoBodega.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosGrupoBodegaOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodegaOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByGrupoBodega.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByGrupoBodega.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByGrupoBodega.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaGrupoBodega(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=grupobodegaLogic.getGrupoBodegas().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=grupobodegas.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosGrupoBodega.setModel(new GrupoBodegaModel(this.grupobodegaLogic.getGrupoBodegas(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosGrupoBodega.setModel(new GrupoBodegaModel(this.grupobodegas,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByGrupoBodega!=null && this.jInternalFrameOrderByGrupoBodega.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByGrupoBodega();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+GrupoBodegaConstantesFunciones.SCLASSWEBTITULO,grupobodegaConstantesFunciones.resaltarSeleccionarGrupoBodega,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+GrupoBodegaConstantesFunciones.SCLASSWEBTITULO,grupobodegaConstantesFunciones.resaltarSeleccionarGrupoBodega,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_ID));

		if(this.grupobodegaConstantesFunciones.mostraridGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.grupobodegaConstantesFunciones.resaltaridGrupoBodega,this.grupobodegaConstantesFunciones.activaridGrupoBodega,this,true,"idGrupoBodega","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.grupobodegaConstantesFunciones.resaltaridGrupoBodega,this.grupobodegaConstantesFunciones.activaridGrupoBodega,this,true,"idGrupoBodega","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDEMPRESA));

		if(this.grupobodegaConstantesFunciones.mostrarid_empresaGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.grupobodegaConstantesFunciones.resaltarid_empresaGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_empresaGrupoBodega));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.grupobodegaConstantesFunciones.resaltarid_empresaGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_empresaGrupoBodega,false,"id_empresaGrupoBodega","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_CODIGO));

		if(this.grupobodegaConstantesFunciones.mostrarcodigoGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_CODIGO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.grupobodegaConstantesFunciones.resaltarcodigoGrupoBodega,this.grupobodegaConstantesFunciones.activarcodigoGrupoBodega,this,true,"codigoGrupoBodega","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.grupobodegaConstantesFunciones.resaltarcodigoGrupoBodega,this.grupobodegaConstantesFunciones.activarcodigoGrupoBodega,this,true,"codigoGrupoBodega","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_NOMBRE));

		if(this.grupobodegaConstantesFunciones.mostrarnombreGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_NOMBRE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.grupobodegaConstantesFunciones.resaltarnombreGrupoBodega,this.grupobodegaConstantesFunciones.activarnombreGrupoBodega,this,true,"nombreGrupoBodega","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.grupobodegaConstantesFunciones.resaltarnombreGrupoBodega,this.grupobodegaConstantesFunciones.activarnombreGrupoBodega,this,true,"nombreGrupoBodega","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_RUC));

		if(this.grupobodegaConstantesFunciones.mostrarrucGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_RUC,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.grupobodegaConstantesFunciones.resaltarrucGrupoBodega,this.grupobodegaConstantesFunciones.activarrucGrupoBodega,this,true,"rucGrupoBodega","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.grupobodegaConstantesFunciones.resaltarrucGrupoBodega,this.grupobodegaConstantesFunciones.activarrucGrupoBodega,this,true,"rucGrupoBodega","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_DIRECCION));

		if(this.grupobodegaConstantesFunciones.mostrardireccionGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_DIRECCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.grupobodegaConstantesFunciones.resaltardireccionGrupoBodega,this.grupobodegaConstantesFunciones.activardireccionGrupoBodega,this,true,"direccionGrupoBodega","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.grupobodegaConstantesFunciones.resaltardireccionGrupoBodega,this.grupobodegaConstantesFunciones.activardireccionGrupoBodega,this,true,"direccionGrupoBodega","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_TELEFONO));

		if(this.grupobodegaConstantesFunciones.mostrartelefonoGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_TELEFONO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.grupobodegaConstantesFunciones.resaltartelefonoGrupoBodega,this.grupobodegaConstantesFunciones.activartelefonoGrupoBodega,this,true,"telefonoGrupoBodega","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.grupobodegaConstantesFunciones.resaltartelefonoGrupoBodega,this.grupobodegaConstantesFunciones.activartelefonoGrupoBodega,this,true,"telefonoGrupoBodega","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDPAIS));

		if(this.grupobodegaConstantesFunciones.mostrarid_paisGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_IDPAIS,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PaisTableCell(this.paissForeignKey,this.grupobodegaConstantesFunciones.resaltarid_paisGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_paisGrupoBodega));
			tableColumn.setCellEditor(new PaisTableCell(this.paissForeignKey,this.grupobodegaConstantesFunciones.resaltarid_paisGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_paisGrupoBodega,true,"id_paisGrupoBodega","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCIUDAD));

		if(this.grupobodegaConstantesFunciones.mostrarid_ciudadGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_IDCIUDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CiudadTableCell(this.ciudadsForeignKey,this.grupobodegaConstantesFunciones.resaltarid_ciudadGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_ciudadGrupoBodega));
			tableColumn.setCellEditor(new CiudadTableCell(this.ciudadsForeignKey,this.grupobodegaConstantesFunciones.resaltarid_ciudadGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_ciudadGrupoBodega,true,"id_ciudadGrupoBodega","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCENTROCOSTO));

		if(this.grupobodegaConstantesFunciones.mostrarid_centro_costoGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_IDCENTROCOSTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CentroCostoTableCell(this.centrocostosForeignKey,this.grupobodegaConstantesFunciones.resaltarid_centro_costoGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_centro_costoGrupoBodega));
			tableColumn.setCellEditor(new CentroCostoTableCell(this.centrocostosForeignKey,this.grupobodegaConstantesFunciones.resaltarid_centro_costoGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_centro_costoGrupoBodega,true,"id_centro_costoGrupoBodega","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDEMPLEADO));

		if(this.grupobodegaConstantesFunciones.mostrarid_empleadoGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_IDEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadosForeignKey,this.grupobodegaConstantesFunciones.resaltarid_empleadoGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_empleadoGrupoBodega));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadosForeignKey,this.grupobodegaConstantesFunciones.resaltarid_empleadoGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_empleadoGrupoBodega,true,"id_empleadoGrupoBodega","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION));

		if(this.grupobodegaConstantesFunciones.mostrardescripcionGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.grupobodegaConstantesFunciones.resaltardescripcionGrupoBodega,this.grupobodegaConstantesFunciones.activardescripcionGrupoBodega,this,true,"descripcionGrupoBodega","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.grupobodegaConstantesFunciones.resaltardescripcionGrupoBodega,this.grupobodegaConstantesFunciones.activardescripcionGrupoBodega,this,true,"descripcionGrupoBodega","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO));

		if(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_inventarioGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableinventariosForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_inventarioGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_inventarioGrupoBodega));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableinventariosForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_inventarioGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_inventarioGrupoBodega,true,"id_cuenta_contable_inventarioGrupoBodega","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTO));

		if(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_costoGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablecostosForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_costoGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_costoGrupoBodega));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablecostosForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_costoGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_costoGrupoBodega,true,"id_cuenta_contable_costoGrupoBodega","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA));

		if(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_ventaGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableventasForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_ventaGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_ventaGrupoBodega));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableventasForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_ventaGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_ventaGrupoBodega,true,"id_cuenta_contable_ventaGrupoBodega","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO));

		if(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_descuentoGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontabledescuentosForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_descuentoGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_descuentoGrupoBodega));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontabledescuentosForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_descuentoGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_descuentoGrupoBodega,true,"id_cuenta_contable_descuentoGrupoBodega","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION));

		if(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_devolucionGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontabledevolucionsForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_devolucionGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_devolucionGrupoBodega));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontabledevolucionsForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_devolucionGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_devolucionGrupoBodega,true,"id_cuenta_contable_devolucionGrupoBodega","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEBITO));

		if(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_debitoGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEBITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontabledebitosForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_debitoGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_debitoGrupoBodega));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontabledebitosForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_debitoGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_debitoGrupoBodega,true,"id_cuenta_contable_debitoGrupoBodega","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECREDITO));

		if(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_creditoGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECREDITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablecreditosForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_creditoGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_creditoGrupoBodega));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablecreditosForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_creditoGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_creditoGrupoBodega,true,"id_cuenta_contable_creditoGrupoBodega","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION));

		if(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_produccionGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableproduccionsForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_produccionGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_produccionGrupoBodega));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableproduccionsForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_produccionGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_produccionGrupoBodega,true,"id_cuenta_contable_produccionGrupoBodega","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEBONIFICA));

		if(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_bonificaGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEBONIFICA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablebonificasForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_bonificaGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_bonificaGrupoBodega));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablebonificasForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_bonificaGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_bonificaGrupoBodega,true,"id_cuenta_contable_bonificaGrupoBodega","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOBONIFICA));

		if(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_costo_bonificaGrupoBodega && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOBONIFICA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablecostobonificasForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_costo_bonificaGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_costo_bonificaGrupoBodega));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablecostobonificasForeignKey,this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_costo_bonificaGrupoBodega,this,this.grupobodegaConstantesFunciones.activarid_cuenta_contable_costo_bonificaGrupoBodega,true,"id_cuenta_contable_costo_bonificaGrupoBodega","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new GrupoBodegaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.grupobodegaSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosBodega && this.grupobodegaConstantesFunciones.mostrarBodegaGrupoBodega && !GrupoBodegaConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Bodegas");
				tableColumn.setHeaderValue("Bodegas");
				tableColumn.setCellRenderer(new BodegaTableCell(grupobodegaConstantesFunciones.resaltarBodegaGrupoBodega,this,this.grupobodegaConstantesFunciones.activarBodegaGrupoBodega));
				tableColumn.setCellEditor(new BodegaTableCell(grupobodegaConstantesFunciones.resaltarBodegaGrupoBodega,this,this.grupobodegaConstantesFunciones.activarBodegaGrupoBodega));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosGrupoBodega.addColumn(tableColumn);
			}

			if(this.isTienePermisosParametroInventarioDefecto && this.grupobodegaConstantesFunciones.mostrarParametroInventarioDefectoGrupoBodega && !GrupoBodegaConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Parametro Inventario Defectos");
				tableColumn.setHeaderValue("Parametro Inventario Defectos");
				tableColumn.setCellRenderer(new ParametroInventarioDefectoTableCell(grupobodegaConstantesFunciones.resaltarParametroInventarioDefectoGrupoBodega,this,this.grupobodegaConstantesFunciones.activarParametroInventarioDefectoGrupoBodega));
				tableColumn.setCellEditor(new ParametroInventarioDefectoTableCell(grupobodegaConstantesFunciones.resaltarParametroInventarioDefectoGrupoBodega,this,this.grupobodegaConstantesFunciones.activarParametroInventarioDefectoGrupoBodega));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosGrupoBodega.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.grupobodegaSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.grupobodegaSessionBean.getEsGuardarRelacionado()));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosGrupoBodega.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.grupobodegaSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.grupobodegaSessionBean.getEsGuardarRelacionado()));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosGrupoBodega.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarGrupoBodega && this.isPermisoGuardarCambiosGrupoBodega) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.grupobodegaSessionBean.getEsGuardarRelacionado()));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.grupobodegaSessionBean.getEsGuardarRelacionado()));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosGrupoBodega.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.grupobodegaSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false));
					tableColumn.setCellEditor(new IdTableCell(this,true,false));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosGrupoBodega.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosGrupoBodega.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarGrupoBodega && this.isPermisoGuardarCambiosGrupoBodega) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.grupobodegaSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarGrupoBodega && this.isPermisoGuardarCambiosGrupoBodega) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosGrupoBodega.moveColumn(this.jTableDatosGrupoBodega.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosGrupoBodega.moveColumn(this.jTableDatosGrupoBodega.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.grupobodegaSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosGrupoBodega.moveColumn(this.jTableDatosGrupoBodega.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosGrupoBodega.moveColumn(this.jTableDatosGrupoBodega.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosGrupoBodega.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosGrupoBodega.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosGrupoBodega,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosGrupoBodega.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosGrupoBodega.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!GrupoBodegaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosGrupoBodega.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosGrupoBodega.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosGrupoBodega.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=grupobodegaLogic.getGrupoBodegas().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=grupobodegas.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosGrupoBodega.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosGrupoBodega.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosGrupoBodega();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoGrupoBodega=false;
					
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			
				if(this.grupobodegaSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormGrupoBodega==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosGrupoBodega.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.grupobodega.getsType().equals("DUPLICADO")
				   || this.grupobodega.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoGrupoBodega=true;
				
				} else {
					this.isEsNuevoGrupoBodega=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
					if(this.grupobodega.getId()>=0 && !this.grupobodega.getIsNew()) {						
						this.isEsNuevoGrupoBodega=false;
						
					} else {
						this.isEsNuevoGrupoBodega=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoGrupoBodega(esRelaciones);						
				
				this.seleccionarGrupoBodega(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.grupobodega.getId()<0) {
					this.isEsNuevoGrupoBodega=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarGrupoBodega(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarGrupoBodega(evt,rowIndex);
				}	
				
				if(this.grupobodegaSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion GrupoBodega: " + this.dDif); 
					}
				}								
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarGrupoBodega(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.grupobodega)) {
					if(this.grupobodega.getId()>0) {
						this.grupobodega.setIsDeleted(true);
						
						this.grupobodegasEliminados.add(this.grupobodega);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.grupobodegaLogic.getGrupoBodegas().remove(this.grupobodega);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.grupobodegas.remove(this.grupobodega);				
					}
					
					
					((GrupoBodegaModel) this.jTableDatosGrupoBodega.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaGrupoBodega(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarGrupoBodega(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoGrupoBodega) {
			
			if(this.jInternalFrameDetalleFormGrupoBodega==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosGrupoBodega.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosGrupoBodega.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioGrupoBodega(this.grupobodega);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.grupobodegaConstantesFunciones.cargarid_empresaGrupoBodega || this.grupobodegaConstantesFunciones.event_dependid_empresaGrupoBodega) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.grupobodega.getid_empresa());
									//this.inicializarActualizarBindingGrupoBodega(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(grupobodega.getEmpresa()!=null) {
							this.empresasForeignKey.add(grupobodega.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.grupobodega.getid_empresa(),false,"Formulario");

					//Pais
					if(!this.grupobodegaConstantesFunciones.cargarid_paisGrupoBodega || this.grupobodegaConstantesFunciones.event_dependid_paisGrupoBodega) {
						//this.cargarCombosPaissForeignKeyLista(" where id="+this.grupobodega.getid_pais());
									//this.inicializarActualizarBindingGrupoBodega(false,false);
						this.paissForeignKey=new ArrayList<Pais>();

						if(grupobodega.getPais()!=null) {
							this.paissForeignKey.add(grupobodega.getPais());
						}

						this.addItemDefectoCombosForeignKeyPais();
						this.cargarCombosFramePaissForeignKey("Todos");
					}
					this.setActualPaisForeignKey(this.grupobodega.getid_pais(),false,"Formulario");

					//Ciudad
					if(!this.grupobodegaConstantesFunciones.cargarid_ciudadGrupoBodega || this.grupobodegaConstantesFunciones.event_dependid_ciudadGrupoBodega) {
						//this.cargarCombosCiudadsForeignKeyLista(" where id="+this.grupobodega.getid_ciudad());
									//this.inicializarActualizarBindingGrupoBodega(false,false);
						this.ciudadsForeignKey=new ArrayList<Ciudad>();

						if(grupobodega.getCiudad()!=null) {
							this.ciudadsForeignKey.add(grupobodega.getCiudad());
						}

						this.addItemDefectoCombosForeignKeyCiudad();
						this.cargarCombosFrameCiudadsForeignKey("Todos");
					}
					this.setActualCiudadForeignKey(this.grupobodega.getid_ciudad(),false,"Formulario");

					//CentroCosto
					if(!this.grupobodegaConstantesFunciones.cargarid_centro_costoGrupoBodega || this.grupobodegaConstantesFunciones.event_dependid_centro_costoGrupoBodega) {
						//this.cargarCombosCentroCostosForeignKeyLista(" where id="+this.grupobodega.getid_centro_costo());
									//this.inicializarActualizarBindingGrupoBodega(false,false);
						this.centrocostosForeignKey=new ArrayList<CentroCosto>();

						if(grupobodega.getCentroCosto()!=null) {
							this.centrocostosForeignKey.add(grupobodega.getCentroCosto());
						}

						this.addItemDefectoCombosForeignKeyCentroCosto();
						this.cargarCombosFrameCentroCostosForeignKey("Todos");
					}
					this.setActualCentroCostoForeignKey(this.grupobodega.getid_centro_costo(),false,"Formulario");

					//Empleado
					if(!this.grupobodegaConstantesFunciones.cargarid_empleadoGrupoBodega || this.grupobodegaConstantesFunciones.event_dependid_empleadoGrupoBodega) {
						//this.cargarCombosEmpleadosForeignKeyLista(" where id="+this.grupobodega.getid_empleado());
									//this.inicializarActualizarBindingGrupoBodega(false,false);
						this.empleadosForeignKey=new ArrayList<Empleado>();

						if(grupobodega.getEmpleado()!=null) {
							this.empleadosForeignKey.add(grupobodega.getEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEmpleado();
						this.cargarCombosFrameEmpleadosForeignKey("Todos");
					}
					this.setActualEmpleadoForeignKey(this.grupobodega.getid_empleado(),false,"Formulario");

					//CuentaContableInventario
					if(!this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_inventarioGrupoBodega || this.grupobodegaConstantesFunciones.event_dependid_cuenta_contable_inventarioGrupoBodega) {
						//this.cargarCombosCuentaContableInventariosForeignKeyLista(" where id="+this.grupobodega.getid_cuenta_contable_inventario());
									//this.inicializarActualizarBindingGrupoBodega(false,false);
						this.cuentacontableinventariosForeignKey=new ArrayList<CuentaContable>();

						if(grupobodega.getCuentaContableInventario()!=null) {
							this.cuentacontableinventariosForeignKey.add(grupobodega.getCuentaContableInventario());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableInventario();
						this.cargarCombosFrameCuentaContableInventariosForeignKey("Todos");
					}
					this.setActualCuentaContableInventarioForeignKey(this.grupobodega.getid_cuenta_contable_inventario(),false,"Formulario");

					//CuentaContableCosto
					if(!this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_costoGrupoBodega || this.grupobodegaConstantesFunciones.event_dependid_cuenta_contable_costoGrupoBodega) {
						//this.cargarCombosCuentaContableCostosForeignKeyLista(" where id="+this.grupobodega.getid_cuenta_contable_costo());
									//this.inicializarActualizarBindingGrupoBodega(false,false);
						this.cuentacontablecostosForeignKey=new ArrayList<CuentaContable>();

						if(grupobodega.getCuentaContableCosto()!=null) {
							this.cuentacontablecostosForeignKey.add(grupobodega.getCuentaContableCosto());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableCosto();
						this.cargarCombosFrameCuentaContableCostosForeignKey("Todos");
					}
					this.setActualCuentaContableCostoForeignKey(this.grupobodega.getid_cuenta_contable_costo(),false,"Formulario");

					//CuentaContableVenta
					if(!this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_ventaGrupoBodega || this.grupobodegaConstantesFunciones.event_dependid_cuenta_contable_ventaGrupoBodega) {
						//this.cargarCombosCuentaContableVentasForeignKeyLista(" where id="+this.grupobodega.getid_cuenta_contable_venta());
									//this.inicializarActualizarBindingGrupoBodega(false,false);
						this.cuentacontableventasForeignKey=new ArrayList<CuentaContable>();

						if(grupobodega.getCuentaContableVenta()!=null) {
							this.cuentacontableventasForeignKey.add(grupobodega.getCuentaContableVenta());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableVenta();
						this.cargarCombosFrameCuentaContableVentasForeignKey("Todos");
					}
					this.setActualCuentaContableVentaForeignKey(this.grupobodega.getid_cuenta_contable_venta(),false,"Formulario");

					//CuentaContableDescuento
					if(!this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_descuentoGrupoBodega || this.grupobodegaConstantesFunciones.event_dependid_cuenta_contable_descuentoGrupoBodega) {
						//this.cargarCombosCuentaContableDescuentosForeignKeyLista(" where id="+this.grupobodega.getid_cuenta_contable_descuento());
									//this.inicializarActualizarBindingGrupoBodega(false,false);
						this.cuentacontabledescuentosForeignKey=new ArrayList<CuentaContable>();

						if(grupobodega.getCuentaContableDescuento()!=null) {
							this.cuentacontabledescuentosForeignKey.add(grupobodega.getCuentaContableDescuento());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableDescuento();
						this.cargarCombosFrameCuentaContableDescuentosForeignKey("Todos");
					}
					this.setActualCuentaContableDescuentoForeignKey(this.grupobodega.getid_cuenta_contable_descuento(),false,"Formulario");

					//CuentaContableDevolucion
					if(!this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_devolucionGrupoBodega || this.grupobodegaConstantesFunciones.event_dependid_cuenta_contable_devolucionGrupoBodega) {
						//this.cargarCombosCuentaContableDevolucionsForeignKeyLista(" where id="+this.grupobodega.getid_cuenta_contable_devolucion());
									//this.inicializarActualizarBindingGrupoBodega(false,false);
						this.cuentacontabledevolucionsForeignKey=new ArrayList<CuentaContable>();

						if(grupobodega.getCuentaContableDevolucion()!=null) {
							this.cuentacontabledevolucionsForeignKey.add(grupobodega.getCuentaContableDevolucion());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableDevolucion();
						this.cargarCombosFrameCuentaContableDevolucionsForeignKey("Todos");
					}
					this.setActualCuentaContableDevolucionForeignKey(this.grupobodega.getid_cuenta_contable_devolucion(),false,"Formulario");

					//CuentaContableDebito
					if(!this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_debitoGrupoBodega || this.grupobodegaConstantesFunciones.event_dependid_cuenta_contable_debitoGrupoBodega) {
						//this.cargarCombosCuentaContableDebitosForeignKeyLista(" where id="+this.grupobodega.getid_cuenta_contable_debito());
									//this.inicializarActualizarBindingGrupoBodega(false,false);
						this.cuentacontabledebitosForeignKey=new ArrayList<CuentaContable>();

						if(grupobodega.getCuentaContableDebito()!=null) {
							this.cuentacontabledebitosForeignKey.add(grupobodega.getCuentaContableDebito());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableDebito();
						this.cargarCombosFrameCuentaContableDebitosForeignKey("Todos");
					}
					this.setActualCuentaContableDebitoForeignKey(this.grupobodega.getid_cuenta_contable_debito(),false,"Formulario");

					//CuentaContableCredito
					if(!this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_creditoGrupoBodega || this.grupobodegaConstantesFunciones.event_dependid_cuenta_contable_creditoGrupoBodega) {
						//this.cargarCombosCuentaContableCreditosForeignKeyLista(" where id="+this.grupobodega.getid_cuenta_contable_credito());
									//this.inicializarActualizarBindingGrupoBodega(false,false);
						this.cuentacontablecreditosForeignKey=new ArrayList<CuentaContable>();

						if(grupobodega.getCuentaContableCredito()!=null) {
							this.cuentacontablecreditosForeignKey.add(grupobodega.getCuentaContableCredito());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableCredito();
						this.cargarCombosFrameCuentaContableCreditosForeignKey("Todos");
					}
					this.setActualCuentaContableCreditoForeignKey(this.grupobodega.getid_cuenta_contable_credito(),false,"Formulario");

					//CuentaContableProduccion
					if(!this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_produccionGrupoBodega || this.grupobodegaConstantesFunciones.event_dependid_cuenta_contable_produccionGrupoBodega) {
						//this.cargarCombosCuentaContableProduccionsForeignKeyLista(" where id="+this.grupobodega.getid_cuenta_contable_produccion());
									//this.inicializarActualizarBindingGrupoBodega(false,false);
						this.cuentacontableproduccionsForeignKey=new ArrayList<CuentaContable>();

						if(grupobodega.getCuentaContableProduccion()!=null) {
							this.cuentacontableproduccionsForeignKey.add(grupobodega.getCuentaContableProduccion());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableProduccion();
						this.cargarCombosFrameCuentaContableProduccionsForeignKey("Todos");
					}
					this.setActualCuentaContableProduccionForeignKey(this.grupobodega.getid_cuenta_contable_produccion(),false,"Formulario");

					//CuentaContableBonifica
					if(!this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_bonificaGrupoBodega || this.grupobodegaConstantesFunciones.event_dependid_cuenta_contable_bonificaGrupoBodega) {
						//this.cargarCombosCuentaContableBonificasForeignKeyLista(" where id="+this.grupobodega.getid_cuenta_contable_bonifica());
									//this.inicializarActualizarBindingGrupoBodega(false,false);
						this.cuentacontablebonificasForeignKey=new ArrayList<CuentaContable>();

						if(grupobodega.getCuentaContableBonifica()!=null) {
							this.cuentacontablebonificasForeignKey.add(grupobodega.getCuentaContableBonifica());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableBonifica();
						this.cargarCombosFrameCuentaContableBonificasForeignKey("Todos");
					}
					this.setActualCuentaContableBonificaForeignKey(this.grupobodega.getid_cuenta_contable_bonifica(),false,"Formulario");

					//CuentaContableCostoBonifica
					if(!this.grupobodegaConstantesFunciones.cargarid_cuenta_contable_costo_bonificaGrupoBodega || this.grupobodegaConstantesFunciones.event_dependid_cuenta_contable_costo_bonificaGrupoBodega) {
						//this.cargarCombosCuentaContableCostoBonificasForeignKeyLista(" where id="+this.grupobodega.getid_cuenta_contable_costo_bonifica());
									//this.inicializarActualizarBindingGrupoBodega(false,false);
						this.cuentacontablecostobonificasForeignKey=new ArrayList<CuentaContable>();

						if(grupobodega.getCuentaContableCostoBonifica()!=null) {
							this.cuentacontablecostobonificasForeignKey.add(grupobodega.getCuentaContableCostoBonifica());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableCostoBonifica();
						this.cargarCombosFrameCuentaContableCostoBonificasForeignKey("Todos");
					}
					this.setActualCuentaContableCostoBonificaForeignKey(this.grupobodega.getid_cuenta_contable_costo_bonifica(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesGrupoBodega("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesGrupoBodega(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualGrupoBodega() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoGrupoBodega(GrupoBodega grupobodega) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoGrupoBodega(grupobodega,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoGrupoBodega(GrupoBodega grupobodega,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioGrupoBodega(grupobodega);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyGrupoBodega(grupobodega,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyGrupoBodega(grupobodega);
	}
	
	public void setVariablesObjetoActualToFormularioGrupoBodega(GrupoBodega grupobodega) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormGrupoBodega==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormGrupoBodega.jLabelidGrupoBodega.setText(grupobodega.getId().toString());
			this.jInternalFrameDetalleFormGrupoBodega.jTextFieldcodigoGrupoBodega.setText(grupobodega.getcodigo());
			this.jInternalFrameDetalleFormGrupoBodega.jTextAreanombreGrupoBodega.setText(grupobodega.getnombre());
			this.jInternalFrameDetalleFormGrupoBodega.jTextFieldrucGrupoBodega.setText(grupobodega.getruc());
			this.jInternalFrameDetalleFormGrupoBodega.jTextAreadireccionGrupoBodega.setText(grupobodega.getdireccion());
			this.jInternalFrameDetalleFormGrupoBodega.jTextFieldtelefonoGrupoBodega.setText(grupobodega.gettelefono());
			this.jInternalFrameDetalleFormGrupoBodega.jTextAreadescripcionGrupoBodega.setText(grupobodega.getdescripcion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,GrupoBodega grupobodegaLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,grupobodegaLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,GrupoBodega grupobodegaLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				grupobodegaLocal=this.grupobodega;
			} else {
				grupobodegaLocal=this.grupobodegaAnterior;
			}
		}
		
		if(this.permiteMantenimiento(grupobodegaLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoGrupoBodega(grupobodegaLocal,true);
					
					if(grupobodegaSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(grupobodegaLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(grupobodegaLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoGrupoBodega(GrupoBodega grupobodega,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualGrupoBodega(grupobodega,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(grupobodega);
	}
	
	public void setVariablesFormularioToObjetoActualGrupoBodega(GrupoBodega grupobodega,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualGrupoBodega(grupobodega,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualGrupoBodega(GrupoBodega grupobodega,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormGrupoBodega==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormGrupoBodega.jLabelidGrupoBodega.getText()==null || this.jInternalFrameDetalleFormGrupoBodega.jLabelidGrupoBodega.getText()=="" || this.jInternalFrameDetalleFormGrupoBodega.jLabelidGrupoBodega.getText()=="Id") {
				this.jInternalFrameDetalleFormGrupoBodega.jLabelidGrupoBodega.setText("0");
			}

			if(conColumnasBase) {grupobodega.setId(Long.parseLong(this.jInternalFrameDetalleFormGrupoBodega.jLabelidGrupoBodega.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GrupoBodegaConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelIdGrupoBodega,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			grupobodega.setcodigo(this.jInternalFrameDetalleFormGrupoBodega.jTextFieldcodigoGrupoBodega.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GrupoBodegaConstantesFunciones.LABEL_CODIGO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelcodigoGrupoBodega,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			grupobodega.setnombre(this.jInternalFrameDetalleFormGrupoBodega.jTextAreanombreGrupoBodega.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GrupoBodegaConstantesFunciones.LABEL_NOMBRE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelnombreGrupoBodega,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			grupobodega.setruc(this.jInternalFrameDetalleFormGrupoBodega.jTextFieldrucGrupoBodega.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GrupoBodegaConstantesFunciones.LABEL_RUC+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabelrucGrupoBodega,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			grupobodega.setdireccion(this.jInternalFrameDetalleFormGrupoBodega.jTextAreadireccionGrupoBodega.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GrupoBodegaConstantesFunciones.LABEL_DIRECCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabeldireccionGrupoBodega,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			grupobodega.settelefono(this.jInternalFrameDetalleFormGrupoBodega.jTextFieldtelefonoGrupoBodega.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GrupoBodegaConstantesFunciones.LABEL_TELEFONO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabeltelefonoGrupoBodega,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			grupobodega.setdescripcion(this.jInternalFrameDetalleFormGrupoBodega.jTextAreadescripcionGrupoBodega.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGrupoBodega.jLabeldescripcionGrupoBodega,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualGrupoBodega(GrupoBodega grupobodegaBean,GrupoBodega grupobodega,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && grupobodegaBean.getid_pais()!=null && !grupobodegaBean.getid_pais().equals(-1L))) {grupobodega.setid_pais(grupobodegaBean.getid_pais());}
			if(conDefault || (!conDefault && grupobodegaBean.getid_ciudad()!=null && !grupobodegaBean.getid_ciudad().equals(-1L))) {grupobodega.setid_ciudad(grupobodegaBean.getid_ciudad());}
			if(conDefault || (!conDefault && grupobodegaBean.getid_centro_costo()!=null && !grupobodegaBean.getid_centro_costo().equals(null))) {grupobodega.setid_centro_costo(grupobodegaBean.getid_centro_costo());}
			if(conDefault || (!conDefault && grupobodegaBean.getid_empleado()!=null && !grupobodegaBean.getid_empleado().equals(-1L))) {grupobodega.setid_empleado(grupobodegaBean.getid_empleado());}
			if(conDefault || (!conDefault && grupobodegaBean.getid_cuenta_contable_inventario()!=null && !grupobodegaBean.getid_cuenta_contable_inventario().equals(-1L))) {grupobodega.setid_cuenta_contable_inventario(grupobodegaBean.getid_cuenta_contable_inventario());}
			if(conDefault || (!conDefault && grupobodegaBean.getid_cuenta_contable_costo()!=null && !grupobodegaBean.getid_cuenta_contable_costo().equals(-1L))) {grupobodega.setid_cuenta_contable_costo(grupobodegaBean.getid_cuenta_contable_costo());}
			if(conDefault || (!conDefault && grupobodegaBean.getid_cuenta_contable_venta()!=null && !grupobodegaBean.getid_cuenta_contable_venta().equals(-1L))) {grupobodega.setid_cuenta_contable_venta(grupobodegaBean.getid_cuenta_contable_venta());}
			if(conDefault || (!conDefault && grupobodegaBean.getid_cuenta_contable_descuento()!=null && !grupobodegaBean.getid_cuenta_contable_descuento().equals(-1L))) {grupobodega.setid_cuenta_contable_descuento(grupobodegaBean.getid_cuenta_contable_descuento());}
			if(conDefault || (!conDefault && grupobodegaBean.getid_cuenta_contable_devolucion()!=null && !grupobodegaBean.getid_cuenta_contable_devolucion().equals(-1L))) {grupobodega.setid_cuenta_contable_devolucion(grupobodegaBean.getid_cuenta_contable_devolucion());}
			if(conDefault || (!conDefault && grupobodegaBean.getid_cuenta_contable_debito()!=null && !grupobodegaBean.getid_cuenta_contable_debito().equals(null))) {grupobodega.setid_cuenta_contable_debito(grupobodegaBean.getid_cuenta_contable_debito());}
			if(conDefault || (!conDefault && grupobodegaBean.getid_cuenta_contable_credito()!=null && !grupobodegaBean.getid_cuenta_contable_credito().equals(null))) {grupobodega.setid_cuenta_contable_credito(grupobodegaBean.getid_cuenta_contable_credito());}
			if(conDefault || (!conDefault && grupobodegaBean.getid_cuenta_contable_produccion()!=null && !grupobodegaBean.getid_cuenta_contable_produccion().equals(-1L))) {grupobodega.setid_cuenta_contable_produccion(grupobodegaBean.getid_cuenta_contable_produccion());}
			if(conDefault || (!conDefault && grupobodegaBean.getid_cuenta_contable_bonifica()!=null && !grupobodegaBean.getid_cuenta_contable_bonifica().equals(-1L))) {grupobodega.setid_cuenta_contable_bonifica(grupobodegaBean.getid_cuenta_contable_bonifica());}
			if(conDefault || (!conDefault && grupobodegaBean.getid_cuenta_contable_costo_bonifica()!=null && !grupobodegaBean.getid_cuenta_contable_costo_bonifica().equals(-1L))) {grupobodega.setid_cuenta_contable_costo_bonifica(grupobodegaBean.getid_cuenta_contable_costo_bonifica());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosGrupoBodega(GrupoBodega grupobodegaOrigen,GrupoBodega grupobodega,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && grupobodegaOrigen.getId()!=null && !grupobodegaOrigen.getId().equals(0L))) {grupobodega.setId(grupobodegaOrigen.getId());}}
			if(conDefault || (!conDefault && grupobodegaOrigen.getcodigo()!=null && !grupobodegaOrigen.getcodigo().equals(""))) {grupobodega.setcodigo(grupobodegaOrigen.getcodigo());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getnombre()!=null && !grupobodegaOrigen.getnombre().equals(""))) {grupobodega.setnombre(grupobodegaOrigen.getnombre());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getruc()!=null && !grupobodegaOrigen.getruc().equals(""))) {grupobodega.setruc(grupobodegaOrigen.getruc());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getdireccion()!=null && !grupobodegaOrigen.getdireccion().equals(""))) {grupobodega.setdireccion(grupobodegaOrigen.getdireccion());}
			if(conDefault || (!conDefault && grupobodegaOrigen.gettelefono()!=null && !grupobodegaOrigen.gettelefono().equals(""))) {grupobodega.settelefono(grupobodegaOrigen.gettelefono());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getid_pais()!=null && !grupobodegaOrigen.getid_pais().equals(-1L))) {grupobodega.setid_pais(grupobodegaOrigen.getid_pais());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getid_ciudad()!=null && !grupobodegaOrigen.getid_ciudad().equals(-1L))) {grupobodega.setid_ciudad(grupobodegaOrigen.getid_ciudad());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getid_centro_costo()!=null && !grupobodegaOrigen.getid_centro_costo().equals(null))) {grupobodega.setid_centro_costo(grupobodegaOrigen.getid_centro_costo());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getid_empleado()!=null && !grupobodegaOrigen.getid_empleado().equals(-1L))) {grupobodega.setid_empleado(grupobodegaOrigen.getid_empleado());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getdescripcion()!=null && !grupobodegaOrigen.getdescripcion().equals(""))) {grupobodega.setdescripcion(grupobodegaOrigen.getdescripcion());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getid_cuenta_contable_inventario()!=null && !grupobodegaOrigen.getid_cuenta_contable_inventario().equals(-1L))) {grupobodega.setid_cuenta_contable_inventario(grupobodegaOrigen.getid_cuenta_contable_inventario());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getid_cuenta_contable_costo()!=null && !grupobodegaOrigen.getid_cuenta_contable_costo().equals(-1L))) {grupobodega.setid_cuenta_contable_costo(grupobodegaOrigen.getid_cuenta_contable_costo());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getid_cuenta_contable_venta()!=null && !grupobodegaOrigen.getid_cuenta_contable_venta().equals(-1L))) {grupobodega.setid_cuenta_contable_venta(grupobodegaOrigen.getid_cuenta_contable_venta());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getid_cuenta_contable_descuento()!=null && !grupobodegaOrigen.getid_cuenta_contable_descuento().equals(-1L))) {grupobodega.setid_cuenta_contable_descuento(grupobodegaOrigen.getid_cuenta_contable_descuento());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getid_cuenta_contable_devolucion()!=null && !grupobodegaOrigen.getid_cuenta_contable_devolucion().equals(-1L))) {grupobodega.setid_cuenta_contable_devolucion(grupobodegaOrigen.getid_cuenta_contable_devolucion());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getid_cuenta_contable_debito()!=null && !grupobodegaOrigen.getid_cuenta_contable_debito().equals(null))) {grupobodega.setid_cuenta_contable_debito(grupobodegaOrigen.getid_cuenta_contable_debito());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getid_cuenta_contable_credito()!=null && !grupobodegaOrigen.getid_cuenta_contable_credito().equals(null))) {grupobodega.setid_cuenta_contable_credito(grupobodegaOrigen.getid_cuenta_contable_credito());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getid_cuenta_contable_produccion()!=null && !grupobodegaOrigen.getid_cuenta_contable_produccion().equals(-1L))) {grupobodega.setid_cuenta_contable_produccion(grupobodegaOrigen.getid_cuenta_contable_produccion());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getid_cuenta_contable_bonifica()!=null && !grupobodegaOrigen.getid_cuenta_contable_bonifica().equals(-1L))) {grupobodega.setid_cuenta_contable_bonifica(grupobodegaOrigen.getid_cuenta_contable_bonifica());}
			if(conDefault || (!conDefault && grupobodegaOrigen.getid_cuenta_contable_costo_bonifica()!=null && !grupobodegaOrigen.getid_cuenta_contable_costo_bonifica().equals(-1L))) {grupobodega.setid_cuenta_contable_costo_bonifica(grupobodegaOrigen.getid_cuenta_contable_costo_bonifica());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioGrupoBodega(GrupoBodega grupobodega) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormGrupoBodega.jLabelidGrupoBodega.setText(grupobodega.getId().toString());
			this.jInternalFrameDetalleFormGrupoBodega.jTextFieldcodigoGrupoBodega.setText(grupobodega.getcodigo());
			this.jInternalFrameDetalleFormGrupoBodega.jTextAreanombreGrupoBodega.setText(grupobodega.getnombre());
			this.jInternalFrameDetalleFormGrupoBodega.jTextFieldrucGrupoBodega.setText(grupobodega.getruc());
			this.jInternalFrameDetalleFormGrupoBodega.jTextAreadireccionGrupoBodega.setText(grupobodega.getdireccion());
			this.jInternalFrameDetalleFormGrupoBodega.jTextFieldtelefonoGrupoBodega.setText(grupobodega.gettelefono());
			this.jInternalFrameDetalleFormGrupoBodega.jTextAreadescripcionGrupoBodega.setText(grupobodega.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioGrupoBodega(GrupoBodegaBean grupobodegaBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormGrupoBodega.jLabelidGrupoBodega.setText(grupobodegaBean.getId().toString());
			this.jInternalFrameDetalleFormGrupoBodega.jTextFieldcodigoGrupoBodega.setText(grupobodegaBean.getcodigo());
			this.jInternalFrameDetalleFormGrupoBodega.jTextAreanombreGrupoBodega.setText(grupobodegaBean.getnombre());
			this.jInternalFrameDetalleFormGrupoBodega.jTextFieldrucGrupoBodega.setText(grupobodegaBean.getruc());
			this.jInternalFrameDetalleFormGrupoBodega.jTextAreadireccionGrupoBodega.setText(grupobodegaBean.getdireccion());
			this.jInternalFrameDetalleFormGrupoBodega.jTextFieldtelefonoGrupoBodega.setText(grupobodegaBean.gettelefono());
			this.jInternalFrameDetalleFormGrupoBodega.jTextAreadescripcionGrupoBodega.setText(grupobodegaBean.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanGrupoBodega(GrupoBodegaParameterReturnGeneral grupobodegaReturnGeneral,GrupoBodegaBean grupobodegaBean,Boolean conDefault) throws Exception { 
		try {
			GrupoBodega grupobodegaLocal=new GrupoBodega();
			
			grupobodegaLocal=grupobodegaReturnGeneral.getGrupoBodega();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && grupobodegaLocal.getId()!=null && !grupobodegaLocal.getId().equals(0L))) {grupobodegaBean.setId(grupobodegaLocal.getId());}}
			if(conDefault || (!conDefault && grupobodegaLocal.getcodigo()!=null && !grupobodegaLocal.getcodigo().equals(""))) {grupobodegaBean.setcodigo(grupobodegaLocal.getcodigo());}
			if(conDefault || (!conDefault && grupobodegaLocal.getnombre()!=null && !grupobodegaLocal.getnombre().equals(""))) {grupobodegaBean.setnombre(grupobodegaLocal.getnombre());}
			if(conDefault || (!conDefault && grupobodegaLocal.getruc()!=null && !grupobodegaLocal.getruc().equals(""))) {grupobodegaBean.setruc(grupobodegaLocal.getruc());}
			if(conDefault || (!conDefault && grupobodegaLocal.getdireccion()!=null && !grupobodegaLocal.getdireccion().equals(""))) {grupobodegaBean.setdireccion(grupobodegaLocal.getdireccion());}
			if(conDefault || (!conDefault && grupobodegaLocal.gettelefono()!=null && !grupobodegaLocal.gettelefono().equals(""))) {grupobodegaBean.settelefono(grupobodegaLocal.gettelefono());}
			if(conDefault || (!conDefault && grupobodegaLocal.getid_pais()!=null && !grupobodegaLocal.getid_pais().equals(-1L))) {grupobodegaBean.setid_pais(grupobodegaLocal.getid_pais());}
			if(conDefault || (!conDefault && grupobodegaLocal.getid_ciudad()!=null && !grupobodegaLocal.getid_ciudad().equals(-1L))) {grupobodegaBean.setid_ciudad(grupobodegaLocal.getid_ciudad());}
			if(conDefault || (!conDefault && grupobodegaLocal.getid_centro_costo()!=null && !grupobodegaLocal.getid_centro_costo().equals(null))) {grupobodegaBean.setid_centro_costo(grupobodegaLocal.getid_centro_costo());}
			if(conDefault || (!conDefault && grupobodegaLocal.getid_empleado()!=null && !grupobodegaLocal.getid_empleado().equals(-1L))) {grupobodegaBean.setid_empleado(grupobodegaLocal.getid_empleado());}
			if(conDefault || (!conDefault && grupobodegaLocal.getdescripcion()!=null && !grupobodegaLocal.getdescripcion().equals(""))) {grupobodegaBean.setdescripcion(grupobodegaLocal.getdescripcion());}
			if(conDefault || (!conDefault && grupobodegaLocal.getid_cuenta_contable_inventario()!=null && !grupobodegaLocal.getid_cuenta_contable_inventario().equals(-1L))) {grupobodegaBean.setid_cuenta_contable_inventario(grupobodegaLocal.getid_cuenta_contable_inventario());}
			if(conDefault || (!conDefault && grupobodegaLocal.getid_cuenta_contable_costo()!=null && !grupobodegaLocal.getid_cuenta_contable_costo().equals(-1L))) {grupobodegaBean.setid_cuenta_contable_costo(grupobodegaLocal.getid_cuenta_contable_costo());}
			if(conDefault || (!conDefault && grupobodegaLocal.getid_cuenta_contable_venta()!=null && !grupobodegaLocal.getid_cuenta_contable_venta().equals(-1L))) {grupobodegaBean.setid_cuenta_contable_venta(grupobodegaLocal.getid_cuenta_contable_venta());}
			if(conDefault || (!conDefault && grupobodegaLocal.getid_cuenta_contable_descuento()!=null && !grupobodegaLocal.getid_cuenta_contable_descuento().equals(-1L))) {grupobodegaBean.setid_cuenta_contable_descuento(grupobodegaLocal.getid_cuenta_contable_descuento());}
			if(conDefault || (!conDefault && grupobodegaLocal.getid_cuenta_contable_devolucion()!=null && !grupobodegaLocal.getid_cuenta_contable_devolucion().equals(-1L))) {grupobodegaBean.setid_cuenta_contable_devolucion(grupobodegaLocal.getid_cuenta_contable_devolucion());}
			if(conDefault || (!conDefault && grupobodegaLocal.getid_cuenta_contable_debito()!=null && !grupobodegaLocal.getid_cuenta_contable_debito().equals(null))) {grupobodegaBean.setid_cuenta_contable_debito(grupobodegaLocal.getid_cuenta_contable_debito());}
			if(conDefault || (!conDefault && grupobodegaLocal.getid_cuenta_contable_credito()!=null && !grupobodegaLocal.getid_cuenta_contable_credito().equals(null))) {grupobodegaBean.setid_cuenta_contable_credito(grupobodegaLocal.getid_cuenta_contable_credito());}
			if(conDefault || (!conDefault && grupobodegaLocal.getid_cuenta_contable_produccion()!=null && !grupobodegaLocal.getid_cuenta_contable_produccion().equals(-1L))) {grupobodegaBean.setid_cuenta_contable_produccion(grupobodegaLocal.getid_cuenta_contable_produccion());}
			if(conDefault || (!conDefault && grupobodegaLocal.getid_cuenta_contable_bonifica()!=null && !grupobodegaLocal.getid_cuenta_contable_bonifica().equals(-1L))) {grupobodegaBean.setid_cuenta_contable_bonifica(grupobodegaLocal.getid_cuenta_contable_bonifica());}
			if(conDefault || (!conDefault && grupobodegaLocal.getid_cuenta_contable_costo_bonifica()!=null && !grupobodegaLocal.getid_cuenta_contable_costo_bonifica().equals(-1L))) {grupobodegaBean.setid_cuenta_contable_costo_bonifica(grupobodegaLocal.getid_cuenta_contable_costo_bonifica());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxGrupoBodegaGenerico(Long idGrupoBodegaSeleccionado,JComboBox jComboBoxGrupoBodega,List<GrupoBodega> grupobodegasLocal)throws Exception {
		try {
			GrupoBodega  grupobodegaTemp=null;

			for(GrupoBodega grupobodegaAux:grupobodegasLocal) {
				if(grupobodegaAux.getId()!=null && grupobodegaAux.getId().equals(idGrupoBodegaSeleccionado)) {
					grupobodegaTemp=grupobodegaAux;
					break;
				}
			}

			jComboBoxGrupoBodega.setSelectedItem(grupobodegaTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxGrupoBodegaGenerico(JComboBox jComboBoxGrupoBodega,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxGrupoBodega.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxGrupoBodega.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxGrupoBodega.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxGrupoBodega.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxGrupoBodega.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxGrupoBodega.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxGrupoBodega.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxGrupoBodega.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxGrupoBodega.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxGrupoBodega.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("Bodega")) {
			jButtonBodegaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ParametroInventarioDefecto")) {
			jButtonParametroInventarioDefectoActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			grupobodega=(GrupoBodega) grupobodegaLogic.getGrupoBodegas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			grupobodega =(GrupoBodega) grupobodegas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!grupobodega.getIsNew() && !grupobodega.getIsChanged() && !grupobodega.getIsDeleted()) {
				sDescripcion=grupobodega.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=grupobodega.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Pais")) {
			//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
			if(!grupobodega.getIsNew() && !grupobodega.getIsChanged() && !grupobodega.getIsDeleted()) {
				sDescripcion=grupobodega.getpais_descripcion();
			} else {
				//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
				sDescripcion=grupobodega.getpais_descripcion();
			}
		}

		if(sTipo.equals("Ciudad")) {
			//sDescripcion=this.getActualCiudadForeignKeyDescripcion((Long)value);
			if(!grupobodega.getIsNew() && !grupobodega.getIsChanged() && !grupobodega.getIsDeleted()) {
				sDescripcion=grupobodega.getciudad_descripcion();
			} else {
				//sDescripcion=this.getActualCiudadForeignKeyDescripcion((Long)value);
				sDescripcion=grupobodega.getciudad_descripcion();
			}
		}

		if(sTipo.equals("CentroCosto")) {
			//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
			if(!grupobodega.getIsNew() && !grupobodega.getIsChanged() && !grupobodega.getIsDeleted()) {
				sDescripcion=grupobodega.getcentrocosto_descripcion();
			} else {
				//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
				sDescripcion=grupobodega.getcentrocosto_descripcion();
			}
		}

		if(sTipo.equals("Empleado")) {
			//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
			if(!grupobodega.getIsNew() && !grupobodega.getIsChanged() && !grupobodega.getIsDeleted()) {
				sDescripcion=grupobodega.getempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=grupobodega.getempleado_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableInventario")) {
			//sDescripcion=this.getActualCuentaContableInventarioForeignKeyDescripcion((Long)value);
			if(!grupobodega.getIsNew() && !grupobodega.getIsChanged() && !grupobodega.getIsDeleted()) {
				sDescripcion=grupobodega.getcuentacontableinventario_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableInventarioForeignKeyDescripcion((Long)value);
				sDescripcion=grupobodega.getcuentacontableinventario_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableCosto")) {
			//sDescripcion=this.getActualCuentaContableCostoForeignKeyDescripcion((Long)value);
			if(!grupobodega.getIsNew() && !grupobodega.getIsChanged() && !grupobodega.getIsDeleted()) {
				sDescripcion=grupobodega.getcuentacontablecosto_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableCostoForeignKeyDescripcion((Long)value);
				sDescripcion=grupobodega.getcuentacontablecosto_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableVenta")) {
			//sDescripcion=this.getActualCuentaContableVentaForeignKeyDescripcion((Long)value);
			if(!grupobodega.getIsNew() && !grupobodega.getIsChanged() && !grupobodega.getIsDeleted()) {
				sDescripcion=grupobodega.getcuentacontableventa_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableVentaForeignKeyDescripcion((Long)value);
				sDescripcion=grupobodega.getcuentacontableventa_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableDescuento")) {
			//sDescripcion=this.getActualCuentaContableDescuentoForeignKeyDescripcion((Long)value);
			if(!grupobodega.getIsNew() && !grupobodega.getIsChanged() && !grupobodega.getIsDeleted()) {
				sDescripcion=grupobodega.getcuentacontabledescuento_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableDescuentoForeignKeyDescripcion((Long)value);
				sDescripcion=grupobodega.getcuentacontabledescuento_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableDevolucion")) {
			//sDescripcion=this.getActualCuentaContableDevolucionForeignKeyDescripcion((Long)value);
			if(!grupobodega.getIsNew() && !grupobodega.getIsChanged() && !grupobodega.getIsDeleted()) {
				sDescripcion=grupobodega.getcuentacontabledevolucion_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableDevolucionForeignKeyDescripcion((Long)value);
				sDescripcion=grupobodega.getcuentacontabledevolucion_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableDebito")) {
			//sDescripcion=this.getActualCuentaContableDebitoForeignKeyDescripcion((Long)value);
			if(!grupobodega.getIsNew() && !grupobodega.getIsChanged() && !grupobodega.getIsDeleted()) {
				sDescripcion=grupobodega.getcuentacontabledebito_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableDebitoForeignKeyDescripcion((Long)value);
				sDescripcion=grupobodega.getcuentacontabledebito_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableCredito")) {
			//sDescripcion=this.getActualCuentaContableCreditoForeignKeyDescripcion((Long)value);
			if(!grupobodega.getIsNew() && !grupobodega.getIsChanged() && !grupobodega.getIsDeleted()) {
				sDescripcion=grupobodega.getcuentacontablecredito_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableCreditoForeignKeyDescripcion((Long)value);
				sDescripcion=grupobodega.getcuentacontablecredito_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableProduccion")) {
			//sDescripcion=this.getActualCuentaContableProduccionForeignKeyDescripcion((Long)value);
			if(!grupobodega.getIsNew() && !grupobodega.getIsChanged() && !grupobodega.getIsDeleted()) {
				sDescripcion=grupobodega.getcuentacontableproduccion_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableProduccionForeignKeyDescripcion((Long)value);
				sDescripcion=grupobodega.getcuentacontableproduccion_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableBonifica")) {
			//sDescripcion=this.getActualCuentaContableBonificaForeignKeyDescripcion((Long)value);
			if(!grupobodega.getIsNew() && !grupobodega.getIsChanged() && !grupobodega.getIsDeleted()) {
				sDescripcion=grupobodega.getcuentacontablebonifica_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableBonificaForeignKeyDescripcion((Long)value);
				sDescripcion=grupobodega.getcuentacontablebonifica_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableCostoBonifica")) {
			//sDescripcion=this.getActualCuentaContableCostoBonificaForeignKeyDescripcion((Long)value);
			if(!grupobodega.getIsNew() && !grupobodega.getIsChanged() && !grupobodega.getIsDeleted()) {
				sDescripcion=grupobodega.getcuentacontablecostobonifica_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableCostoBonificaForeignKeyDescripcion((Long)value);
				sDescripcion=grupobodega.getcuentacontablecostobonifica_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		GrupoBodega grupobodegaRow=new GrupoBodega();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			grupobodegaRow=(GrupoBodega) grupobodegaLogic.getGrupoBodegas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			grupobodegaRow=(GrupoBodega) grupobodegas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonBodegaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,GrupoBodega grupobodega) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormGrupoBodega==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega = (GrupoBodega)this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.grupobodega = (GrupoBodega)this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(grupobodega!=null) {
						this.grupobodega = grupobodega;
					} else {
						this.grupobodega = new GrupoBodega();
					}
				}

				if(this.isTienePermisosBodega && this.permiteMantenimiento(this.grupobodega)) {
					BodegaBeanSwingJInternalFrame bodegaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFramePopup=new BodegaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						bodegaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFramePopup;
					} else {
						bodegaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame;
					}

					List<GrupoBodega> grupobodegas=new ArrayList<GrupoBodega>();
					grupobodegas.add(this.grupobodega);
					if(!esRelacionado) {
						//bodegaBeanSwingJInternalFrame.bodegaSessionBean.setConGuardarRelaciones(false);
						//bodegaBeanSwingJInternalFrame.bodegaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					bodegaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormGrupoBodega.cargarBodegaBeanSwingJInternalFrame(grupobodegas,this.grupobodega,bodegaBeanSwingJInternalFrame,/*conInicializar,*/bodegaBeanSwingJInternalFrame.bodegaSessionBean.getConGuardarRelaciones(),bodegaBeanSwingJInternalFrame.bodegaSessionBean.getEsGuardarRelacionado());
					bodegaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						bodegaBeanSwingJInternalFrame.actualizarEstadoPanelsBodega("no_relacionado");

						bodegaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(BodegaConstantesFunciones.ITAMANIOFILATABLA + (BodegaConstantesFunciones.ITAMANIOFILATABLA/2));

						bodegaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
						TitledBorder titledBorderBodega=(TitledBorder)bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

						titledBorderBodega.setTitle(titledBorderGrupoBodega.getTitle() + " -> Bodega");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,bodegaBeanSwingJInternalFrame);
						}

						bodegaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(bodegaBeanSwingJInternalFrame);

						bodegaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.grupobodegaSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Bodega",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonParametroInventarioDefectoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,GrupoBodega grupobodega) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormGrupoBodega==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega = (GrupoBodega)this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.grupobodega = (GrupoBodega)this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(grupobodega!=null) {
						this.grupobodega = grupobodega;
					} else {
						this.grupobodega = new GrupoBodega();
					}
				}

				if(this.isTienePermisosParametroInventarioDefecto && this.permiteMantenimiento(this.grupobodega)) {
					ParametroInventarioDefectoBeanSwingJInternalFrame parametroinventariodefectoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFramePopup=new ParametroInventarioDefectoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						parametroinventariodefectoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFramePopup;
					} else {
						parametroinventariodefectoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame;
					}

					List<GrupoBodega> grupobodegas=new ArrayList<GrupoBodega>();
					grupobodegas.add(this.grupobodega);
					if(!esRelacionado) {
						//parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoSessionBean.setConGuardarRelaciones(false);
						//parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					parametroinventariodefectoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormGrupoBodega.cargarParametroInventarioDefectoBeanSwingJInternalFrame(grupobodegas,this.grupobodega,parametroinventariodefectoBeanSwingJInternalFrame,/*conInicializar,*/parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoSessionBean.getConGuardarRelaciones(),parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoSessionBean.getEsGuardarRelacionado());
					parametroinventariodefectoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						parametroinventariodefectoBeanSwingJInternalFrame.actualizarEstadoPanelsParametroInventarioDefecto("no_relacionado");

						parametroinventariodefectoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ParametroInventarioDefectoConstantesFunciones.ITAMANIOFILATABLA + (ParametroInventarioDefectoConstantesFunciones.ITAMANIOFILATABLA/2));

						parametroinventariodefectoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
						TitledBorder titledBorderParametroInventarioDefecto=(TitledBorder)parametroinventariodefectoBeanSwingJInternalFrame.jScrollPanelDatosParametroInventarioDefecto.getBorder();

						titledBorderParametroInventarioDefecto.setTitle(titledBorderGrupoBodega.getTitle() + " -> Parametro Inventario Defecto");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,parametroinventariodefectoBeanSwingJInternalFrame);
						}

						parametroinventariodefectoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(parametroinventariodefectoBeanSwingJInternalFrame);

						parametroinventariodefectoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.grupobodegaSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Parametro Inventario Defecto",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualGrupoBodega(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoGrupoBodega.setVisible((this.isVisibilidadCeldaNuevoGrupoBodega && this.isPermisoNuevoGrupoBodega));			
			this.jButtonDuplicarGrupoBodega.setVisible((this.isVisibilidadCeldaDuplicarGrupoBodega && this.isPermisoDuplicarGrupoBodega));			
			this.jButtonCopiarGrupoBodega.setVisible((this.isVisibilidadCeldaCopiarGrupoBodega && this.isPermisoCopiarGrupoBodega));
			this.jButtonVerFormGrupoBodega.setVisible((this.isVisibilidadCeldaVerFormGrupoBodega && this.isPermisoVerFormGrupoBodega));
			
			this.jButtonAbrirOrderByGrupoBodega.setVisible((this.isVisibilidadCeldaOrdenGrupoBodega && this.isPermisoOrdenGrupoBodega));			
			
			this.jButtonNuevoRelacionesGrupoBodega.setVisible((this.isVisibilidadCeldaNuevoRelacionesGrupoBodega && this.isPermisoNuevoGrupoBodega));			
			this.jButtonNuevoGuardarCambiosGrupoBodega.setVisible((this.isVisibilidadCeldaNuevoGrupoBodega && this.isPermisoNuevoGrupoBodega && this.isPermisoGuardarCambiosGrupoBodega));
			
			if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
			this.jInternalFrameDetalleFormGrupoBodega.jButtonModificarGrupoBodega.setVisible((this.isVisibilidadCeldaModificarGrupoBodega && this.isPermisoActualizarGrupoBodega));	
			this.jInternalFrameDetalleFormGrupoBodega.jButtonActualizarGrupoBodega.setVisible((this.isVisibilidadCeldaActualizarGrupoBodega && this.isPermisoActualizarGrupoBodega));	
			this.jInternalFrameDetalleFormGrupoBodega.jButtonEliminarGrupoBodega.setVisible((this.isVisibilidadCeldaEliminarGrupoBodega && this.isPermisoEliminarGrupoBodega));
			this.jInternalFrameDetalleFormGrupoBodega.jButtonCancelarGrupoBodega.setVisible(this.isVisibilidadCeldaCancelarGrupoBodega);							
			this.jInternalFrameDetalleFormGrupoBodega.jButtonGuardarCambiosGrupoBodega.setVisible((this.isVisibilidadCeldaGuardarGrupoBodega && this.isPermisoGuardarCambiosGrupoBodega));			
			
			}
						
			this.jButtonGuardarCambiosTablaGrupoBodega.setVisible((this.isVisibilidadCeldaGuardarCambiosGrupoBodega && this.isPermisoGuardarCambiosGrupoBodega));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarGrupoBodega.setVisible((this.isVisibilidadCeldaNuevoGrupoBodega && this.isPermisoNuevoGrupoBodega));						
			this.jButtonDuplicarToolBarGrupoBodega.setVisible((this.isVisibilidadCeldaDuplicarGrupoBodega && this.isPermisoDuplicarGrupoBodega));						
			this.jButtonCopiarToolBarGrupoBodega.setVisible((this.isVisibilidadCeldaCopiarGrupoBodega && this.isPermisoCopiarGrupoBodega));			
			this.jButtonVerFormToolBarGrupoBodega.setVisible((this.isVisibilidadCeldaVerFormGrupoBodega && this.isPermisoVerFormGrupoBodega));			
			this.jButtonAbrirOrderByToolBarGrupoBodega.setVisible((this.isVisibilidadCeldaOrdenGrupoBodega && this.isPermisoOrdenGrupoBodega));
			this.jButtonNuevoRelacionesToolBarGrupoBodega.setVisible((this.isVisibilidadCeldaNuevoRelacionesGrupoBodega && this.isPermisoNuevoGrupoBodega));			
			this.jButtonNuevoGuardarCambiosToolBarGrupoBodega.setVisible((this.isVisibilidadCeldaNuevoGrupoBodega && this.isPermisoNuevoGrupoBodega && this.isPermisoGuardarCambiosGrupoBodega));			
			
			if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
			this.jInternalFrameDetalleFormGrupoBodega.jButtonModificarToolBarGrupoBodega.setVisible((this.isVisibilidadCeldaModificarGrupoBodega && this.isPermisoActualizarGrupoBodega));	
			this.jInternalFrameDetalleFormGrupoBodega.jButtonActualizarToolBarGrupoBodega.setVisible((this.isVisibilidadCeldaActualizarGrupoBodega  && this.isPermisoActualizarGrupoBodega));	
			this.jInternalFrameDetalleFormGrupoBodega.jButtonEliminarToolBarGrupoBodega.setVisible((this.isVisibilidadCeldaEliminarGrupoBodega && this.isPermisoEliminarGrupoBodega));
			this.jInternalFrameDetalleFormGrupoBodega.jButtonCancelarToolBarGrupoBodega.setVisible(this.isVisibilidadCeldaCancelarGrupoBodega);				
			this.jInternalFrameDetalleFormGrupoBodega.jButtonGuardarCambiosToolBarGrupoBodega.setVisible((this.isVisibilidadCeldaGuardarGrupoBodega && this.isPermisoGuardarCambiosGrupoBodega));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarGrupoBodega.setVisible((this.isVisibilidadCeldaGuardarCambiosGrupoBodega && this.isPermisoGuardarCambiosGrupoBodega));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoGrupoBodega.setVisible((this.isVisibilidadCeldaNuevoGrupoBodega && this.isPermisoNuevoGrupoBodega));			
			this.jMenuItemDuplicarGrupoBodega.setVisible((this.isVisibilidadCeldaDuplicarGrupoBodega && this.isPermisoDuplicarGrupoBodega));			
			this.jMenuItemCopiarGrupoBodega.setVisible((this.isVisibilidadCeldaCopiarGrupoBodega && this.isPermisoCopiarGrupoBodega));			
			this.jMenuItemVerFormGrupoBodega.setVisible((this.isVisibilidadCeldaVerFormGrupoBodega && this.isPermisoVerFormGrupoBodega));			
			this.jMenuItemAbrirOrderByGrupoBodega.setVisible((this.isVisibilidadCeldaOrdenGrupoBodega && this.isPermisoOrdenGrupoBodega));			
			//this.jMenuItemMostrarOcultarGrupoBodega.setVisible((this.isVisibilidadCeldaOrdenGrupoBodega && this.isPermisoOrdenGrupoBodega));
			this.jMenuItemDetalleAbrirOrderByGrupoBodega.setVisible((this.isVisibilidadCeldaOrdenGrupoBodega && this.isPermisoOrdenGrupoBodega));			
			//this.jMenuItemDetalleMostrarOcultarGrupoBodega.setVisible((this.isVisibilidadCeldaOrdenGrupoBodega && this.isPermisoOrdenGrupoBodega));			
			this.jMenuItemNuevoRelacionesGrupoBodega.setVisible((this.isVisibilidadCeldaNuevoRelacionesGrupoBodega && this.isPermisoNuevoGrupoBodega));			
			this.jMenuItemNuevoGuardarCambiosGrupoBodega.setVisible((this.isVisibilidadCeldaNuevoGrupoBodega && this.isPermisoNuevoGrupoBodega && this.isPermisoGuardarCambiosGrupoBodega));									
			
			if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
			this.jInternalFrameDetalleFormGrupoBodega.jMenuItemModificarGrupoBodega.setVisible((this.isVisibilidadCeldaModificarGrupoBodega && this.isPermisoActualizarGrupoBodega));	
			this.jInternalFrameDetalleFormGrupoBodega.jMenuItemActualizarGrupoBodega.setVisible((this.isVisibilidadCeldaActualizarGrupoBodega && this.isPermisoActualizarGrupoBodega));	
			this.jInternalFrameDetalleFormGrupoBodega.jMenuItemEliminarGrupoBodega.setVisible((this.isVisibilidadCeldaEliminarGrupoBodega && this.isPermisoEliminarGrupoBodega));
			this.jInternalFrameDetalleFormGrupoBodega.jMenuItemCancelarGrupoBodega.setVisible(this.isVisibilidadCeldaCancelarGrupoBodega);				
			}
			
			this.jMenuItemGuardarCambiosGrupoBodega.setVisible((this.isVisibilidadCeldaGuardarGrupoBodega && this.isPermisoGuardarCambiosGrupoBodega));						
			this.jMenuItemGuardarCambiosTablaGrupoBodega.setVisible((this.isVisibilidadCeldaGuardarCambiosGrupoBodega && this.isPermisoGuardarCambiosGrupoBodega));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoGrupoBodega=this.jButtonNuevoGrupoBodega.isVisible();
			this.isVisibilidadCeldaDuplicarGrupoBodega=this.jButtonDuplicarGrupoBodega.isVisible();
			this.isVisibilidadCeldaCopiarGrupoBodega=this.jButtonCopiarGrupoBodega.isVisible();
			this.isVisibilidadCeldaVerFormGrupoBodega=this.jButtonVerFormGrupoBodega.isVisible();
			
			this.isVisibilidadCeldaOrdenGrupoBodega=this.jButtonAbrirOrderByGrupoBodega.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesGrupoBodega=this.jButtonNuevoRelacionesGrupoBodega.isVisible();
			this.isVisibilidadCeldaModificarGrupoBodega=this.jButtonModificarGrupoBodega.isVisible();
			
			if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
			this.isVisibilidadCeldaActualizarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jButtonActualizarGrupoBodega.isVisible();
			this.isVisibilidadCeldaEliminarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jButtonEliminarGrupoBodega.isVisible();
			this.isVisibilidadCeldaCancelarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jButtonCancelarGrupoBodega.isVisible();
			this.isVisibilidadCeldaGuardarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jButtonGuardarCambiosGrupoBodega.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosGrupoBodega=this.jButtonGuardarCambiosTablaGrupoBodega.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoGrupoBodega=this.jButtonNuevoToolBarGrupoBodega.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesGrupoBodega=this.jButtonNuevoRelacionesToolBarGrupoBodega.isVisible();
			
			if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
			this.isVisibilidadCeldaModificarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jButtonModificarToolBarGrupoBodega.isVisible();
			this.isVisibilidadCeldaActualizarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jButtonActualizarToolBarGrupoBodega.isVisible();
			this.isVisibilidadCeldaEliminarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jButtonEliminarToolBarGrupoBodega.isVisible();
			this.isVisibilidadCeldaCancelarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jButtonCancelarToolBarGrupoBodega.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarGrupoBodega=this.jButtonGuardarCambiosToolBarGrupoBodega.isVisible();
			this.isVisibilidadCeldaGuardarCambiosGrupoBodega=this.jButtonGuardarCambiosTablaToolBarGrupoBodega.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoGrupoBodega=this.jMenuItemNuevoGrupoBodega.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesGrupoBodega=this.jMenuItemNuevoRelacionesGrupoBodega.isVisible();
			
			if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
			this.isVisibilidadCeldaModificarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jMenuItemModificarGrupoBodega.isVisible();
			this.isVisibilidadCeldaActualizarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jMenuItemActualizarGrupoBodega.isVisible();
			this.isVisibilidadCeldaEliminarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jMenuItemEliminarGrupoBodega.isVisible();
			this.isVisibilidadCeldaCancelarGrupoBodega=this.jInternalFrameDetalleFormGrupoBodega.jMenuItemCancelarGrupoBodega.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarGrupoBodega=this.jMenuItemGuardarCambiosGrupoBodega.isVisible();
			this.isVisibilidadCeldaGuardarCambiosGrupoBodega=this.jMenuItemGuardarCambiosTablaGrupoBodega.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesGrupoBodega(Boolean esInicializar) {
		if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {			
			if(this.grupobodegaSessionBean.getConGuardarRelaciones()) {
				//if(this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesGrupoBodega();
			}
			
			this.inicializarActualizarBindingBotonesManualGrupoBodega(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualGrupoBodega() {
		this.jButtonNuevoGrupoBodega.setVisible(this.isPermisoNuevoGrupoBodega);			
		this.jButtonDuplicarGrupoBodega.setVisible(this.isPermisoDuplicarGrupoBodega);			
		this.jButtonCopiarGrupoBodega.setVisible(this.isPermisoCopiarGrupoBodega);			
		this.jButtonVerFormGrupoBodega.setVisible(this.isPermisoVerFormGrupoBodega);			
		
		this.jButtonAbrirOrderByGrupoBodega.setVisible(this.isPermisoOrdenGrupoBodega);					
		
		this.jButtonNuevoRelacionesGrupoBodega.setVisible(this.isPermisoNuevoGrupoBodega);			
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGrupoBodega.jButtonModificarGrupoBodega.setVisible(this.isPermisoActualizarGrupoBodega);	
			this.jInternalFrameDetalleFormGrupoBodega.jButtonActualizarGrupoBodega.setVisible(this.isPermisoActualizarGrupoBodega);	
			this.jInternalFrameDetalleFormGrupoBodega.jButtonEliminarGrupoBodega.setVisible(this.isPermisoEliminarGrupoBodega);
			this.jInternalFrameDetalleFormGrupoBodega.jButtonCancelarGrupoBodega.setVisible(this.isVisibilidadCeldaCancelarGrupoBodega);						
			this.jInternalFrameDetalleFormGrupoBodega.jButtonGuardarCambiosGrupoBodega.setVisible(this.isPermisoGuardarCambiosGrupoBodega);							
		}
		
		this.jButtonGuardarCambiosTablaGrupoBodega.setVisible(this.isPermisoActualizarGrupoBodega);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleGrupoBodega() {
		this.jInternalFrameDetalleFormGrupoBodega.jButtonModificarGrupoBodega.setVisible(this.isPermisoActualizarGrupoBodega);	
		this.jInternalFrameDetalleFormGrupoBodega.jButtonActualizarGrupoBodega.setVisible(this.isPermisoActualizarGrupoBodega);	
		this.jInternalFrameDetalleFormGrupoBodega.jButtonEliminarGrupoBodega.setVisible(this.isPermisoEliminarGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jButtonCancelarGrupoBodega.setVisible(this.isVisibilidadCeldaCancelarGrupoBodega);							
		this.jInternalFrameDetalleFormGrupoBodega.jButtonGuardarCambiosGrupoBodega.setVisible((this.isVisibilidadCeldaGuardarGrupoBodega && this.isPermisoGuardarCambiosGrupoBodega));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosGrupoBodega() {
		if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualGrupoBodega();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesGrupoBodega() {
	}
	
	public void jTableDatosGrupoBodegaListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarGrupoBodega(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.grupobodega.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaGrupoBodegaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebGrupoBodega(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGrupoBodega.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.grupobodegaLogic.getConnexion());

				if(this.grupobodega.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.grupobodega.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderGrupoBodega.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.grupobodega.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncodigoGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getcodigo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where codigo like '%"+this.grupobodega.getcodigo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombreGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getnombre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre like '%"+this.grupobodega.getnombre()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonrucGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getruc()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ruc like '%"+this.grupobodega.getruc()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondireccionGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getdireccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where direccion like '%"+this.grupobodega.getdireccion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontelefonoGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.gettelefono()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where telefono like '%"+this.grupobodega.gettelefono()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_paisGrupoBodegaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopais=true;

			idTienePermisopais=this.tienePermisosUsuarioEnPaginaWebGrupoBodega(PaisConstantesFunciones.CLASSNAME);

			if(idTienePermisopais) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGrupoBodega.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.paisBeanSwingJInternalFrame=new PaisBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.paisBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.paisBeanSwingJInternalFrame.getPaisLogic().setConnexion(this.grupobodegaLogic.getConnexion());

				if(this.grupobodega.getid_pais()!=null) {
					this.paisBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.paisBeanSwingJInternalFrame.setIdActual(this.grupobodega.getid_pais());
					this.paisBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.inicializarActualizarBindingTablaPais();
				}

				JInternalFrameBase jinternalFrame =this.paisBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
				TitledBorder titledBorderpais=(TitledBorder)this.paisBeanSwingJInternalFrame.jScrollPanelDatosPais.getBorder();

				titledBorderpais.setTitle(titledBorderGrupoBodega.getTitle() + " -> Pais");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_paisGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getid_pais()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_pais = "+this.grupobodega.getid_pais().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ciudadGrupoBodegaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisociudad=true;

			idTienePermisociudad=this.tienePermisosUsuarioEnPaginaWebGrupoBodega(CiudadConstantesFunciones.CLASSNAME);

			if(idTienePermisociudad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGrupoBodega.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.ciudadBeanSwingJInternalFrame=new CiudadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ciudadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ciudadBeanSwingJInternalFrame.getCiudadLogic().setConnexion(this.grupobodegaLogic.getConnexion());

				if(this.grupobodega.getid_ciudad()!=null) {
					this.ciudadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ciudadBeanSwingJInternalFrame.setIdActual(this.grupobodega.getid_ciudad());
					this.ciudadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ciudadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ciudadBeanSwingJInternalFrame.inicializarActualizarBindingTablaCiudad();
				}

				JInternalFrameBase jinternalFrame =this.ciudadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
				TitledBorder titledBorderciudad=(TitledBorder)this.ciudadBeanSwingJInternalFrame.jScrollPanelDatosCiudad.getBorder();

				titledBorderciudad.setTitle(titledBorderGrupoBodega.getTitle() + " -> Ciudad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ciudadGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getid_ciudad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ciudad = "+this.grupobodega.getid_ciudad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_costoGrupoBodegaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentrocosto=true;

			idTienePermisocentrocosto=this.tienePermisosUsuarioEnPaginaWebGrupoBodega(CentroCostoConstantesFunciones.CLASSNAME);

			if(idTienePermisocentrocosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGrupoBodega.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centrocostoBeanSwingJInternalFrame.getCentroCostoLogic().setConnexion(this.grupobodegaLogic.getConnexion());

				if(this.grupobodega.getid_centro_costo()!=null) {
					this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centrocostoBeanSwingJInternalFrame.setIdActual(this.grupobodega.getid_centro_costo());
					this.centrocostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCosto();
				}

				JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
				TitledBorder titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderGrupoBodega.getTitle() + " -> Centro Costo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_costoGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getid_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_costo = "+this.grupobodega.getid_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleadoGrupoBodegaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleado=true;

			idTienePermisoempleado=this.tienePermisosUsuarioEnPaginaWebGrupoBodega(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGrupoBodega.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.grupobodegaLogic.getConnexion());

				if(this.grupobodega.getid_empleado()!=null) {
					this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoBeanSwingJInternalFrame.setIdActual(this.grupobodega.getid_empleado());
					this.empleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
				TitledBorder titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderGrupoBodega.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleadoGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getid_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado = "+this.grupobodega.getid_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.grupobodega.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_inventarioGrupoBodegaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableinventario=true;

			idTienePermisocuentacontableinventario=this.tienePermisosUsuarioEnPaginaWebGrupoBodega(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableinventario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGrupoBodega.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.cuentacontableinventarioBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableinventarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableinventarioBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.grupobodegaLogic.getConnexion());

				if(this.grupobodega.getid_cuenta_contable_inventario()!=null) {
					this.cuentacontableinventarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableinventarioBeanSwingJInternalFrame.setIdActual(this.grupobodega.getid_cuenta_contable_inventario());
					this.cuentacontableinventarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableinventarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableinventarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableinventarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
				TitledBorder titledBordercuentacontableinventario=(TitledBorder)this.cuentacontableinventarioBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableinventario.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_inventarioGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getid_cuenta_contable_inventario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_inventario = "+this.grupobodega.getid_cuenta_contable_inventario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_costoGrupoBodegaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontablecosto=true;

			idTienePermisocuentacontablecosto=this.tienePermisosUsuarioEnPaginaWebGrupoBodega(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontablecosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGrupoBodega.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.cuentacontablecostoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontablecostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontablecostoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.grupobodegaLogic.getConnexion());

				if(this.grupobodega.getid_cuenta_contable_costo()!=null) {
					this.cuentacontablecostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontablecostoBeanSwingJInternalFrame.setIdActual(this.grupobodega.getid_cuenta_contable_costo());
					this.cuentacontablecostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontablecostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontablecostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontablecostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
				TitledBorder titledBordercuentacontablecosto=(TitledBorder)this.cuentacontablecostoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablecosto.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_costoGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getid_cuenta_contable_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_costo = "+this.grupobodega.getid_cuenta_contable_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_ventaGrupoBodegaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableventa=true;

			idTienePermisocuentacontableventa=this.tienePermisosUsuarioEnPaginaWebGrupoBodega(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableventa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGrupoBodega.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.cuentacontableventaBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableventaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableventaBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.grupobodegaLogic.getConnexion());

				if(this.grupobodega.getid_cuenta_contable_venta()!=null) {
					this.cuentacontableventaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableventaBeanSwingJInternalFrame.setIdActual(this.grupobodega.getid_cuenta_contable_venta());
					this.cuentacontableventaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableventaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableventaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
				TitledBorder titledBordercuentacontableventa=(TitledBorder)this.cuentacontableventaBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableventa.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_ventaGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getid_cuenta_contable_venta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_venta = "+this.grupobodega.getid_cuenta_contable_venta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_descuentoGrupoBodegaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontabledescuento=true;

			idTienePermisocuentacontabledescuento=this.tienePermisosUsuarioEnPaginaWebGrupoBodega(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontabledescuento) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGrupoBodega.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.cuentacontabledescuentoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontabledescuentoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontabledescuentoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.grupobodegaLogic.getConnexion());

				if(this.grupobodega.getid_cuenta_contable_descuento()!=null) {
					this.cuentacontabledescuentoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontabledescuentoBeanSwingJInternalFrame.setIdActual(this.grupobodega.getid_cuenta_contable_descuento());
					this.cuentacontabledescuentoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontabledescuentoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontabledescuentoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontabledescuentoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
				TitledBorder titledBordercuentacontabledescuento=(TitledBorder)this.cuentacontabledescuentoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontabledescuento.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_descuentoGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getid_cuenta_contable_descuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_descuento = "+this.grupobodega.getid_cuenta_contable_descuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_devolucionGrupoBodegaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontabledevolucion=true;

			idTienePermisocuentacontabledevolucion=this.tienePermisosUsuarioEnPaginaWebGrupoBodega(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontabledevolucion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGrupoBodega.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.cuentacontabledevolucionBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontabledevolucionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontabledevolucionBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.grupobodegaLogic.getConnexion());

				if(this.grupobodega.getid_cuenta_contable_devolucion()!=null) {
					this.cuentacontabledevolucionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontabledevolucionBeanSwingJInternalFrame.setIdActual(this.grupobodega.getid_cuenta_contable_devolucion());
					this.cuentacontabledevolucionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontabledevolucionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontabledevolucionBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontabledevolucionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
				TitledBorder titledBordercuentacontabledevolucion=(TitledBorder)this.cuentacontabledevolucionBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontabledevolucion.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_devolucionGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getid_cuenta_contable_devolucion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_devolucion = "+this.grupobodega.getid_cuenta_contable_devolucion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_debitoGrupoBodegaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontabledebito=true;

			idTienePermisocuentacontabledebito=this.tienePermisosUsuarioEnPaginaWebGrupoBodega(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontabledebito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGrupoBodega.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.cuentacontabledebitoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontabledebitoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontabledebitoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.grupobodegaLogic.getConnexion());

				if(this.grupobodega.getid_cuenta_contable_debito()!=null) {
					this.cuentacontabledebitoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontabledebitoBeanSwingJInternalFrame.setIdActual(this.grupobodega.getid_cuenta_contable_debito());
					this.cuentacontabledebitoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontabledebitoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontabledebitoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontabledebitoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
				TitledBorder titledBordercuentacontabledebito=(TitledBorder)this.cuentacontabledebitoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontabledebito.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_debitoGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getid_cuenta_contable_debito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_debito = "+this.grupobodega.getid_cuenta_contable_debito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_creditoGrupoBodegaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontablecredito=true;

			idTienePermisocuentacontablecredito=this.tienePermisosUsuarioEnPaginaWebGrupoBodega(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontablecredito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGrupoBodega.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.cuentacontablecreditoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontablecreditoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontablecreditoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.grupobodegaLogic.getConnexion());

				if(this.grupobodega.getid_cuenta_contable_credito()!=null) {
					this.cuentacontablecreditoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontablecreditoBeanSwingJInternalFrame.setIdActual(this.grupobodega.getid_cuenta_contable_credito());
					this.cuentacontablecreditoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontablecreditoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontablecreditoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontablecreditoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
				TitledBorder titledBordercuentacontablecredito=(TitledBorder)this.cuentacontablecreditoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablecredito.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_creditoGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getid_cuenta_contable_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_credito = "+this.grupobodega.getid_cuenta_contable_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_produccionGrupoBodegaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableproduccion=true;

			idTienePermisocuentacontableproduccion=this.tienePermisosUsuarioEnPaginaWebGrupoBodega(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableproduccion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGrupoBodega.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.cuentacontableproduccionBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableproduccionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableproduccionBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.grupobodegaLogic.getConnexion());

				if(this.grupobodega.getid_cuenta_contable_produccion()!=null) {
					this.cuentacontableproduccionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableproduccionBeanSwingJInternalFrame.setIdActual(this.grupobodega.getid_cuenta_contable_produccion());
					this.cuentacontableproduccionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableproduccionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableproduccionBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableproduccionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
				TitledBorder titledBordercuentacontableproduccion=(TitledBorder)this.cuentacontableproduccionBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableproduccion.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_produccionGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getid_cuenta_contable_produccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_produccion = "+this.grupobodega.getid_cuenta_contable_produccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_bonificaGrupoBodegaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontablebonifica=true;

			idTienePermisocuentacontablebonifica=this.tienePermisosUsuarioEnPaginaWebGrupoBodega(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontablebonifica) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGrupoBodega.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.cuentacontablebonificaBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontablebonificaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontablebonificaBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.grupobodegaLogic.getConnexion());

				if(this.grupobodega.getid_cuenta_contable_bonifica()!=null) {
					this.cuentacontablebonificaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontablebonificaBeanSwingJInternalFrame.setIdActual(this.grupobodega.getid_cuenta_contable_bonifica());
					this.cuentacontablebonificaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontablebonificaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontablebonificaBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontablebonificaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
				TitledBorder titledBordercuentacontablebonifica=(TitledBorder)this.cuentacontablebonificaBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablebonifica.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_bonificaGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getid_cuenta_contable_bonifica()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_bonifica = "+this.grupobodega.getid_cuenta_contable_bonifica().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_costo_bonificaGrupoBodegaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontablecostobonifica=true;

			idTienePermisocuentacontablecostobonifica=this.tienePermisosUsuarioEnPaginaWebGrupoBodega(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontablecostobonifica) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGrupoBodega.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGrupoBodega.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);

				this.cuentacontablecostobonificaBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontablecostobonificaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontablecostobonificaBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.grupobodegaLogic.getConnexion());

				if(this.grupobodega.getid_cuenta_contable_costo_bonifica()!=null) {
					this.cuentacontablecostobonificaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontablecostobonificaBeanSwingJInternalFrame.setIdActual(this.grupobodega.getid_cuenta_contable_costo_bonifica());
					this.cuentacontablecostobonificaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontablecostobonificaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontablecostobonificaBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontablecostobonificaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGrupoBodega=(TitledBorder)this.jScrollPanelDatosGrupoBodega.getBorder();
				TitledBorder titledBordercuentacontablecostobonifica=(TitledBorder)this.cuentacontablecostobonificaBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablecostobonifica.setTitle(titledBorderGrupoBodega.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_costo_bonificaGrupoBodegaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.getgrupobodega(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.grupobodega==null) {
						this.grupobodega = new GrupoBodega();
					}

					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);
				}

				if(this.grupobodega.getid_cuenta_contable_costo_bonifica()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_costo_bonifica = "+this.grupobodega.getid_cuenta_contable_costo_bonifica().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGrupoBodega(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonBusquedaPorCodigoGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasBusquedaPorCodigo();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorNombreGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasBusquedaPorNombre();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorRucGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasBusquedaPorRuc();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorTelefonoGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasBusquedaPorTelefono();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroCostoGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasFK_IdCentroCosto();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCiudadGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasFK_IdCiudad();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableBonificaGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasFK_IdCuentaContableBonifica();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableCostoGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasFK_IdCuentaContableCosto();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableCostoBonificaGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasFK_IdCuentaContableCostoBonifica();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableCreditoGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasFK_IdCuentaContableCredito();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableDebitoGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasFK_IdCuentaContableDebito();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableDescuentoGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasFK_IdCuentaContableDescuento();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableDevolucionGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasFK_IdCuentaContableDevolucion();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableInventarioGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasFK_IdCuentaContableInventario();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableProduccionGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasFK_IdCuentaContableProduccion();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableVentaGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasFK_IdCuentaContableVenta();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasFK_IdEmpleado();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasFK_IdEmpresa();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPaisGrupoBodegaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGrupoBodega(false,false);

			this.getGrupoBodegasFK_IdPais();

			this.inicializarActualizarBindingGrupoBodega(false);

			//if(GrupoBodegaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGrupoBodega(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.grupobodegaLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameGrupoBodega() {
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
		

		if(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
			this.jInternalFrameDetalleFormGrupoBodega.setVisible(false);	    			
			this.jInternalFrameDetalleFormGrupoBodega.dispose();
			this.jInternalFrameDetalleFormGrupoBodega=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoGrupoBodega!=null) {
			this.jInternalFrameReporteDinamicoGrupoBodega.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoGrupoBodega.dispose();
			this.jInternalFrameReporteDinamicoGrupoBodega=null;
		}
		
		if(this.jInternalFrameImportacionGrupoBodega!=null) {
			this.jInternalFrameImportacionGrupoBodega.setVisible(false);	    			
			this.jInternalFrameImportacionGrupoBodega.dispose();
			this.jInternalFrameImportacionGrupoBodega=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessGrupoBodega();
			
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			
			
			if(sTipo.equals("NuevoGrupoBodega")) {
				jButtonNuevoGrupoBodegaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarGrupoBodega")) {
				jButtonDuplicarGrupoBodegaActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarGrupoBodega")) {
				jButtonCopiarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("VerFormGrupoBodega")) {
				jButtonVerFormGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarGrupoBodega")) {
				jButtonNuevoGrupoBodegaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarGrupoBodega")) {
				jButtonDuplicarGrupoBodegaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoGrupoBodega")) {
				jButtonNuevoGrupoBodegaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarGrupoBodega")) {
				jButtonDuplicarGrupoBodegaActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesGrupoBodega")) {
				jButtonNuevoGrupoBodegaActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarGrupoBodega")) {
				jButtonNuevoGrupoBodegaActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesGrupoBodega")) {
				jButtonNuevoGrupoBodegaActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarGrupoBodega")) {
				jButtonModificarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarGrupoBodega")) {
				jButtonModificarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarGrupoBodega")) {
				jButtonModificarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarGrupoBodega")) {
				jButtonActualizarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarGrupoBodega")) {
				jButtonActualizarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarGrupoBodega")) {
				jButtonActualizarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("EliminarGrupoBodega")) {
				jButtonEliminarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarGrupoBodega")) {
				jButtonEliminarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarGrupoBodega")) {
				jButtonEliminarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("CancelarGrupoBodega")) {
				jButtonCancelarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarGrupoBodega")) {
				jButtonCancelarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarGrupoBodega")) {
				jButtonCancelarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("CerrarGrupoBodega")) {
				jButtonCerrarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarGrupoBodega")) {
				jButtonCerrarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarGrupoBodega")) {
				jButtonCerrarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarGrupoBodega")) {
				jButtonMostrarOcultarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarGrupoBodega")) {
				jButtonCancelarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosGrupoBodega")) {
				jButtonGuardarCambiosGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarGrupoBodega")) {
				jButtonGuardarCambiosGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarGrupoBodega")) {
				jButtonCopiarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarGrupoBodega")) {
				jButtonVerFormGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosGrupoBodega")) {
				jButtonGuardarCambiosGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarGrupoBodega")) {
				jButtonCopiarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormGrupoBodega")) {
				jButtonVerFormGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaGrupoBodega")) {
				jButtonGuardarCambiosGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarGrupoBodega")) {
				jButtonGuardarCambiosGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaGrupoBodega")) {
				jButtonGuardarCambiosGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionGrupoBodega")) {
				jButtonRecargarInformacionGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarGrupoBodega")) {
				jButtonRecargarInformacionGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionGrupoBodega")) {
				jButtonRecargarInformacionGrupoBodegaActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresGrupoBodega")) {
				jButtonAnterioresGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarGrupoBodega")) {
				jButtonAnterioresGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreGrupoBodega")) {
				jButtonAnterioresGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesGrupoBodega")) {
				jButtonSiguientesGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarGrupoBodega")) {
				jButtonSiguientesGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesGrupoBodega")) {
				jButtonSiguientesGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByGrupoBodega") || sTipo.equals("MenuItemDetalleAbrirOrderByGrupoBodega")) {
				jButtonAbrirOrderByGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarGrupoBodega") || sTipo.equals("MenuItemDetalleMostrarOcultarGrupoBodega")) {
				jButtonMostrarOcultarGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosGrupoBodega")) {
				jButtonNuevoGuardarCambiosGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarGrupoBodega")) {
				jButtonNuevoGuardarCambiosGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosGrupoBodega")) {
				jButtonNuevoGuardarCambiosGrupoBodegaActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoGrupoBodega")) {
				jButtonCerrarReporteDinamicoGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoGrupoBodega")) {
				jButtonGenerarReporteDinamicoGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoGrupoBodega")) {
				
				jButtonGenerarExcelReporteDinamicoGrupoBodegaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionGrupoBodega")) {
				jButtonCerrarImportacionGrupoBodegaActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionGrupoBodega")) {
				
				jButtonGenerarImportacionGrupoBodegaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionGrupoBodega")) {
				
				jButtonAbrirImportacionGrupoBodegaActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesGrupoBodega")) {
				jComboBoxTiposAccionesGrupoBodegaActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesGrupoBodega")) {
				jComboBoxTiposRelacionesGrupoBodegaActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioGrupoBodega")) {
				jComboBoxTiposAccionesGrupoBodegaActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarGrupoBodega")) {
				
				jComboBoxTiposSeleccionarGrupoBodegaActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralGrupoBodega")) {
				jTextFieldValorCampoGeneralGrupoBodegaActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByGrupoBodega")) {
				jButtonAbrirOrderByGrupoBodegaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarGrupoBodega")) {
				jButtonAbrirOrderByGrupoBodegaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByGrupoBodega")) {
				jButtonCerrarOrderByGrupoBodegaActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idGrupoBodegaBusqueda")) {
				this.jButtonidGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaGrupoBodegaUpdate")) {
				this.jButtonid_empresaGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaGrupoBodegaBusqueda")) {
				this.jButtonid_empresaGrupoBodegaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoGrupoBodegaBusqueda")) {
				this.jButtoncodigoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreGrupoBodegaBusqueda")) {
				this.jButtonnombreGrupoBodegaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucGrupoBodegaBusqueda")) {
				this.jButtonrucGrupoBodegaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionGrupoBodegaBusqueda")) {
				this.jButtondireccionGrupoBodegaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoGrupoBodegaBusqueda")) {
				this.jButtontelefonoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisGrupoBodegaUpdate")) {
				this.jButtonid_paisGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisGrupoBodegaBusqueda")) {
				this.jButtonid_paisGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudadGrupoBodegaUpdate")) {
				this.jButtonid_ciudadGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudadGrupoBodegaBusqueda")) {
				this.jButtonid_ciudadGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoGrupoBodegaUpdate")) {
				this.jButtonid_centro_costoGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoGrupoBodegaBusqueda")) {
				this.jButtonid_centro_costoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoGrupoBodegaUpdate")) {
				this.jButtonid_empleadoGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoGrupoBodegaBusqueda")) {
				this.jButtonid_empleadoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionGrupoBodegaBusqueda")) {
				this.jButtondescripcionGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_inventarioGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_inventarioGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_inventarioGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_inventarioGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_costoGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_costoGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_costoGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_costoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ventaGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_ventaGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ventaGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_ventaGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_descuentoGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_descuentoGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_descuentoGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_descuentoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_devolucionGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_devolucionGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_devolucionGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_devolucionGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_debitoGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_debitoGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_debitoGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_debitoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_creditoGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_creditoGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_creditoGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_creditoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_produccionGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_produccionGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_produccionGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_produccionGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_bonificaGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_bonificaGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_bonificaGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_bonificaGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_costo_bonificaGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_costo_bonificaGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_costo_bonificaGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_costo_bonificaGrupoBodegaBusquedaActionPerformed(evt);
			}
			
			
			
			
			else if(sTipo.equals("BusquedaPorCodigoGrupoBodega")) {
				this.jButtonBusquedaPorCodigoGrupoBodegaActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorNombreGrupoBodega")) {
				this.jButtonBusquedaPorNombreGrupoBodegaActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorRucGrupoBodega")) {
				this.jButtonBusquedaPorRucGrupoBodegaActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorTelefonoGrupoBodega")) {
				this.jButtonBusquedaPorTelefonoGrupoBodegaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCentroCostoGrupoBodega")) {
				this.jButtonFK_IdCentroCostoGrupoBodegaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpleadoGrupoBodega")) {
				this.jButtonFK_IdEmpleadoGrupoBodegaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdPaisGrupoBodega")) {
				this.jButtonFK_IdPaisGrupoBodegaActionPerformed(evt);
			}
			
			;
			
			
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessGrupoBodega();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaGrupoBodegaActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.grupobodega);
				
				this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				
				


				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GrupoBodega.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GrupoBodega.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			GrupoBodega grupobodegaLocal=null;
			
			if(!this.getEsControlTabla()) {
				grupobodegaLocal=this.grupobodega;
			} else {
				grupobodegaLocal=this.grupobodegaAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.grupobodega);
				
				this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
							
				
				


				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GrupoBodega.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GrupoBodega.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGrupoBodegaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaAnterior =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.grupobodegaAnterior =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaGrupoBodegaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.grupobodega);
				
				this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
								
						
				


				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GrupoBodega.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GrupoBodega.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.grupobodega);
				
				this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
								
				
				


				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GrupoBodega.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GrupoBodega.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGrupoBodegaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaAnterior =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.grupobodegaAnterior =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.grupobodega);
				
				this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGrupoBodegaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaAnterior =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.grupobodegaAnterior =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGrupoBodegaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.grupobodega);
			
			this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.grupobodega);
				
				this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
							
				
				


				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GrupoBodega.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GrupoBodega.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaGrupoBodegaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodegaAnterior =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.grupobodegaAnterior =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGrupoBodegaActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.grupobodega);
			
			this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.grupobodega);
				
				this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
								
				
				


				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GrupoBodega.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GrupoBodega.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGrupoBodegaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaAnterior =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.grupobodegaAnterior =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGrupoBodegaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.grupobodega);
			
			this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaGrupoBodegaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.grupobodega);
				
				this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosGrupoBodega")) {
					jCheckBoxSeleccionarTodosGrupoBodegaItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosGrupoBodega")) {
					jCheckBoxSeleccionadosGrupoBodegaItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarGrupoBodega")) {
					
				}
				
				


				
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GrupoBodega.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GrupoBodega.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.grupobodega);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
												
				
				


				
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GrupoBodega.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GrupoBodega.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaGrupoBodegaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.grupobodegaAnterior =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.grupobodegaAnterior =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaGrupoBodegaActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.grupobodega);
				
				this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaGrupoBodegaActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.grupobodega);
				
				this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GrupoBodega.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GrupoBodega.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.grupobodega);
				
				this.actualizarInformacion("INFO_PADRE",false,this.grupobodega);
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GrupoBodega.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GrupoBodega.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGrupoBodegaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.grupobodegaAnterior =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.grupobodegaAnterior =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarGrupoBodega")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosGrupoBodegaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosGrupoBodega.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.grupobodega =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.grupobodega =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.grupobodega);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarGrupoBodega")) {
				
				}
				
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarGrupoBodega")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosGrupoBodega.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarGrupoBodega")) {
			
			}
			
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessGrupoBodega();
			
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			
			if(sTipo.equals("NuevoGrupoBodega")) {
				jButtonNuevoGrupoBodegaActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarGrupoBodega")) {
				jButtonDuplicarGrupoBodegaActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarGrupoBodega")) {
				jButtonCopiarGrupoBodegaActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormGrupoBodega")) {
				jButtonVerFormGrupoBodegaActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesGrupoBodega")) {
				jButtonNuevoGrupoBodegaActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarGrupoBodega")) {
				jButtonModificarGrupoBodegaActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarGrupoBodega")) {
				jButtonActualizarGrupoBodegaActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarGrupoBodega")) {
				jButtonEliminarGrupoBodegaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaGrupoBodega")) {
				jButtonGuardarCambiosGrupoBodegaActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarGrupoBodega")) {
				jButtonCancelarGrupoBodegaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarGrupoBodega")) {
				jButtonCerrarGrupoBodegaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosGrupoBodega")) {
				jButtonGuardarCambiosGrupoBodegaActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosGrupoBodega")) {
				jButtonNuevoGuardarCambiosGrupoBodegaActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByGrupoBodega")) {
				jButtonAbrirOrderByGrupoBodegaActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionGrupoBodega")) {
				jButtonRecargarInformacionGrupoBodegaActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresGrupoBodega")) {
				jButtonAnterioresGrupoBodegaActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesGrupoBodega")) {
				jButtonSiguientesGrupoBodegaActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idGrupoBodegaBusqueda")) {
				this.jButtonidGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaGrupoBodegaUpdate")) {
				this.jButtonid_empresaGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaGrupoBodegaBusqueda")) {
				this.jButtonid_empresaGrupoBodegaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoGrupoBodegaBusqueda")) {
				this.jButtoncodigoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreGrupoBodegaBusqueda")) {
				this.jButtonnombreGrupoBodegaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucGrupoBodegaBusqueda")) {
				this.jButtonrucGrupoBodegaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionGrupoBodegaBusqueda")) {
				this.jButtondireccionGrupoBodegaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoGrupoBodegaBusqueda")) {
				this.jButtontelefonoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisGrupoBodegaUpdate")) {
				this.jButtonid_paisGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisGrupoBodegaBusqueda")) {
				this.jButtonid_paisGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudadGrupoBodegaUpdate")) {
				this.jButtonid_ciudadGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudadGrupoBodegaBusqueda")) {
				this.jButtonid_ciudadGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoGrupoBodegaUpdate")) {
				this.jButtonid_centro_costoGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoGrupoBodegaBusqueda")) {
				this.jButtonid_centro_costoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoGrupoBodegaUpdate")) {
				this.jButtonid_empleadoGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoGrupoBodegaBusqueda")) {
				this.jButtonid_empleadoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionGrupoBodegaBusqueda")) {
				this.jButtondescripcionGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_inventarioGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_inventarioGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_inventarioGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_inventarioGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_costoGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_costoGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_costoGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_costoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ventaGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_ventaGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ventaGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_ventaGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_descuentoGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_descuentoGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_descuentoGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_descuentoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_devolucionGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_devolucionGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_devolucionGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_devolucionGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_debitoGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_debitoGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_debitoGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_debitoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_creditoGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_creditoGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_creditoGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_creditoGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_produccionGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_produccionGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_produccionGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_produccionGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_bonificaGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_bonificaGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_bonificaGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_bonificaGrupoBodegaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_costo_bonificaGrupoBodegaUpdate")) {
				this.jButtonid_cuenta_contable_costo_bonificaGrupoBodegaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_costo_bonificaGrupoBodegaBusqueda")) {
				this.jButtonid_cuenta_contable_costo_bonificaGrupoBodegaBusquedaActionPerformed(evt);
			}
			
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessGrupoBodega();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameGrupoBodega")) {
				closingInternalFrameGrupoBodega();
				
			} else if(sTipo.equals("jButtonCancelarGrupoBodega")) {
				JInternalFrameBase jInternalFrameDetalleFormGrupoBodega = (JInternalFrameBase)evt.getSource();
	            	
	            GrupoBodegaBeanSwingJInternalFrame jInternalFrameParent=(GrupoBodegaBeanSwingJInternalFrame)jInternalFrameDetalleFormGrupoBodega.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarGrupoBodegaActionPerformed(null);
			}
			
			GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.grupobodega,new Object(),this.grupobodegaParameterGeneral,this.grupobodegaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormGrupoBodega(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormGrupoBodega(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormGrupoBodega(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.grupobodega)) {
			if(!esControlTabla) {
				if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);			
				}
				
				if(this.grupobodegaSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualGrupoBodega(this.grupobodega,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.grupobodegaReturnGeneral=grupobodegaLogic.procesarEventosGrupoBodegasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.grupobodegaLogic.getGrupoBodegas(),this.grupobodega,this.grupobodegaParameterGeneral,this.isEsNuevoGrupoBodega,classes);//this.grupobodegaLogic.getGrupoBodega()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanGrupoBodega(this.grupobodegaReturnGeneral,this.grupobodegaBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.grupobodegaSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanGrupoBodega(classes,this.grupobodegaReturnGeneral,this.grupobodegaBean,false);
					}
						
					if(this.grupobodegaReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyGrupoBodega(this.grupobodegaReturnGeneral.getGrupoBodega());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioGrupoBodega(this.grupobodegaReturnGeneral.getGrupoBodega());	
					}
						
					if(this.grupobodegaReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioGrupoBodega(this.grupobodegaReturnGeneral.getGrupoBodega(),classes);//this.grupobodegaBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioGrupoBodega(this.grupobodega,classes);//this.grupobodegaBean);									
				}
			
				if(GrupoBodegaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualGrupoBodega(this.grupobodega,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysGrupoBodega(this.grupobodega);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.grupobodegaAnterior!=null) {
						this.grupobodega=this.grupobodegaAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.grupobodegaReturnGeneral=grupobodegaLogic.procesarEventosGrupoBodegasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.grupobodegaLogic.getGrupoBodegas(),this.grupobodega,this.grupobodegaParameterGeneral,this.isEsNuevoGrupoBodega,classes);//this.grupobodegaLogic.getGrupoBodega()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.grupobodegaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.grupobodegaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.grupobodegaReturnGeneral.getGrupoBodega(),grupobodegaLogic.getGrupoBodegas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.grupobodegaReturnGeneral.getGrupoBodega(),this.grupobodegas);
				}
				//ARCHITECTURE
				
				//this.jTableDatosGrupoBodega.repaint();
				
				//((AbstractTableModel) this.jTableDatosGrupoBodega.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosGrupoBodega();
			}
		}
	}
	
	public void actualizarVisualTableDatosGrupoBodega() throws Exception {
		
		GrupoBodegaModel grupobodegaModel=(GrupoBodegaModel)this.jTableDatosGrupoBodega.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			grupobodegaModel.grupobodegas=this.grupobodegaLogic.getGrupoBodegas();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			grupobodegaModel.grupobodegas=this.grupobodegas;
		}
		
		
		((GrupoBodegaModel) this.jTableDatosGrupoBodega.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaGrupoBodega() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getgrupobodegaAnterior(),this.grupobodegaLogic.getGrupoBodegas());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getgrupobodegaAnterior(),this.grupobodegas);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosGrupoBodega();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioGrupoBodega(GrupoBodega grupobodega,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(Bodega.class)) {
					this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.setBodegas(grupobodega.getBodegas());
					this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ParametroInventarioDefecto.class)) {
					this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.setParametroInventarioDefectos(grupobodega.getParametroInventarioDefectos());
					this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.inicializarActualizarBindingTablaParametroInventarioDefecto(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.grupobodega,new Object(),generalEntityParameterGeneral,this.grupobodegaReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.grupobodegaSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=GrupoBodegaConstantesFunciones.getClassesRelationshipsOfGrupoBodega(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=GrupoBodegaConstantesFunciones.getClassesRelationshipsFromStringsOfGrupoBodega(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormGrupoBodega(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				GrupoBodegaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.grupobodega,new Object(),generalEntityParameterGeneral,this.grupobodegaReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioGrupoBodega(GrupoBodegaBean grupobodegaBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(Bodega.class)) {
					this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.setBodegas(grupobodega.getBodegas());
					this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ParametroInventarioDefecto.class)) {
					this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.setParametroInventarioDefectos(grupobodega.getParametroInventarioDefectos());
					this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.inicializarActualizarBindingTablaParametroInventarioDefecto(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanGrupoBodega(ArrayList<Classe> classes,GrupoBodegaReturnGeneral grupobodegaReturnGeneral,GrupoBodegaBean grupobodegaBean,Boolean conDefault) throws Exception {
		
			this.grupobodegaBean.setBodegas(grupobodegaReturnGeneral.getGrupoBodega().getBodegas());
			this.grupobodegaBean.setParametroInventarioDefectos(grupobodegaReturnGeneral.getGrupoBodega().getParametroInventarioDefectos());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualGrupoBodega(GrupoBodega grupobodega,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(Bodega.class)) {
					grupobodega.setBodegas(this.jInternalFrameDetalleFormGrupoBodega.bodegaBeanSwingJInternalFrame.bodegaLogic.getBodegas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ParametroInventarioDefecto.class)) {
					grupobodega.setParametroInventarioDefectos(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoBeanSwingJInternalFrame.parametroinventariodefectoLogic.getParametroInventarioDefectos());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.grupobodega)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormGrupoBodega = new GrupoBodegaDetalleFormJInternalFrame(jDesktopPane,this.grupobodegaSessionBean.getConGuardarRelaciones(),this.grupobodegaSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.setVisible(false);
		this.jInternalFrameDetalleFormGrupoBodega.setSelected(false);						
		
		this.jInternalFrameDetalleFormGrupoBodega.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormGrupoBodega.grupobodegaLogic=this.grupobodegaLogic;
		
		this.cargarCombosFrameForeignKeyGrupoBodega("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleGrupoBodega();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleGrupoBodega();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyGrupoBodega("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyGrupoBodega();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormGrupoBodega.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarGrupoBodega"));
		
		this.jInternalFrameDetalleFormGrupoBodega.jButtonModificarGrupoBodega.addActionListener(new ButtonActionListener(this,"ModificarGrupoBodega"));

		
		this.jInternalFrameDetalleFormGrupoBodega.jButtonModificarToolBarGrupoBodega.addActionListener(new ButtonActionListener(this,"ModificarToolBarGrupoBodega"));
					
		this.jInternalFrameDetalleFormGrupoBodega.jMenuItemModificarGrupoBodega.addActionListener(new ButtonActionListener(this,"MenuItemModificarGrupoBodega"));		
		
		
		
		this.jInternalFrameDetalleFormGrupoBodega.jButtonActualizarGrupoBodega.addActionListener (new ButtonActionListener(this,"ActualizarGrupoBodega"));
		
		
		this.jInternalFrameDetalleFormGrupoBodega.jButtonActualizarToolBarGrupoBodega.addActionListener(new ButtonActionListener(this,"ActualizarToolBarGrupoBodega"));
						
		this.jInternalFrameDetalleFormGrupoBodega.jMenuItemActualizarGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemActualizarGrupoBodega"));		
		
		
		
		this.jInternalFrameDetalleFormGrupoBodega.jButtonEliminarGrupoBodega.addActionListener (new ButtonActionListener(this,"EliminarGrupoBodega"));
		
		
		this.jInternalFrameDetalleFormGrupoBodega.jButtonEliminarToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"EliminarToolBarGrupoBodega"));
								
		this.jInternalFrameDetalleFormGrupoBodega.jMenuItemEliminarGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemEliminarGrupoBodega"));		
		
		
		
		this.jInternalFrameDetalleFormGrupoBodega.jButtonCancelarGrupoBodega.addActionListener (new ButtonActionListener(this,"CancelarGrupoBodega"));
		
		
		this.jInternalFrameDetalleFormGrupoBodega.jButtonCancelarToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"CancelarToolBarGrupoBodega"));
					
		this.jInternalFrameDetalleFormGrupoBodega.jMenuItemCancelarGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemCancelarGrupoBodega"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormGrupoBodega.jMenuItemDetalleCerrarGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarGrupoBodega"));		
		
		
		
		this.jInternalFrameDetalleFormGrupoBodega.jButtonGuardarCambiosToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarGrupoBodega"));
		
		
		
		this.jInternalFrameDetalleFormGrupoBodega.jButtonGuardarCambiosToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarGrupoBodega"));
		
		
		
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxTiposAccionesFormularioGrupoBodega.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioGrupoBodega"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonidGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"idGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_empresaGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_empresaGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtoncodigoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"codigoGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonnombreGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"nombreGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonrucGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"rucGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtondireccionGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"direccionGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtontelefonoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"telefonoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_paisGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_paisGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_paisGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_paisGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_ciudadGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_ciudadGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_centro_costoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_centro_costoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_empleadoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_empleadoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtondescripcionGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"descripcionGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_inventarioGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_inventarioGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_inventarioGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_inventarioGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_costoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_costoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_ventaGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ventaGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_ventaGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ventaGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_descuentoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_descuentoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_descuentoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_descuentoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_devolucionGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_devolucionGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_devolucionGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_devolucionGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_debitoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_debitoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_debitoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_debitoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_creditoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_creditoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_creditoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_creditoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_produccionGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_produccionGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_produccionGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_produccionGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_bonificaGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_bonificaGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_bonificaGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_bonificaGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_costo_bonificaGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costo_bonificaGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_costo_bonificaGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costo_bonificaGrupoBodegaBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormGrupoBodega.jTabbedPaneRelacionesGrupoBodega.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesGrupoBodega"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameGrupoBodega"));
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGrupoBodega.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarGrupoBodega"));
		}
		
		this.jTableDatosGrupoBodega.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarGrupoBodega"));
		
		this.jTableDatosGrupoBodega.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarGrupoBodega"));
		
		this.jButtonNuevoGrupoBodega.addActionListener(new ButtonActionListener(this,"NuevoGrupoBodega"));
		
		this.jButtonDuplicarGrupoBodega.addActionListener(new ButtonActionListener(this,"DuplicarGrupoBodega"));
		
		this.jButtonCopiarGrupoBodega.addActionListener(new ButtonActionListener(this,"CopiarGrupoBodega"));
		
		this.jButtonVerFormGrupoBodega.addActionListener(new ButtonActionListener(this,"VerFormGrupoBodega"));
		
		
		this.jButtonNuevoToolBarGrupoBodega.addActionListener(new ButtonActionListener(this,"NuevoToolBarGrupoBodega"));
			
		this.jButtonDuplicarToolBarGrupoBodega.addActionListener(new ButtonActionListener(this,"DuplicarToolBarGrupoBodega"));
			
		this.jMenuItemNuevoGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGrupoBodega"));
			
		this.jMenuItemDuplicarGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarGrupoBodega"));		
		
		
		this.jButtonNuevoRelacionesGrupoBodega.addActionListener (new ButtonActionListener(this,"NuevoRelacionesGrupoBodega"));
		
		
		this.jButtonNuevoRelacionesToolBarGrupoBodega.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarGrupoBodega"));
			
		this.jMenuItemNuevoRelacionesGrupoBodega.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesGrupoBodega"));		
		
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGrupoBodega.jButtonModificarGrupoBodega.addActionListener(new ButtonActionListener(this,"ModificarGrupoBodega"));
		}
		
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGrupoBodega.jButtonModificarToolBarGrupoBodega.addActionListener(new ButtonActionListener(this,"ModificarToolBarGrupoBodega"));
			
			this.jInternalFrameDetalleFormGrupoBodega.jMenuItemModificarGrupoBodega.addActionListener(new ButtonActionListener(this,"MenuItemModificarGrupoBodega"));		
		}
		
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormGrupoBodega.jButtonActualizarGrupoBodega.addActionListener (new ButtonActionListener(this,"ActualizarGrupoBodega"));
		}
		
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGrupoBodega.jButtonActualizarToolBarGrupoBodega.addActionListener(new ButtonActionListener(this,"ActualizarToolBarGrupoBodega"));
				
			this.jInternalFrameDetalleFormGrupoBodega.jMenuItemActualizarGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemActualizarGrupoBodega"));		
		}
		
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGrupoBodega.jButtonEliminarGrupoBodega.addActionListener (new ButtonActionListener(this,"EliminarGrupoBodega"));
		}
		
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGrupoBodega.jButtonEliminarToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"EliminarToolBarGrupoBodega"));
						
			this.jInternalFrameDetalleFormGrupoBodega.jMenuItemEliminarGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemEliminarGrupoBodega"));		
		}
		
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGrupoBodega.jButtonCancelarGrupoBodega.addActionListener (new ButtonActionListener(this,"CancelarGrupoBodega"));
		}
		
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGrupoBodega.jButtonCancelarToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"CancelarToolBarGrupoBodega"));
			
			this.jInternalFrameDetalleFormGrupoBodega.jMenuItemCancelarGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemCancelarGrupoBodega"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarGrupoBodega"));		
		
		
		this.jButtonCerrarGrupoBodega.addActionListener (new ButtonActionListener(this,"CerrarGrupoBodega"));
		
		
		this.jButtonCerrarToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"CerrarToolBarGrupoBodega"));
			
		this.jMenuItemCerrarGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemCerrarGrupoBodega"));
			
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGrupoBodega.jMenuItemDetalleCerrarGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarGrupoBodega"));		
		}
		
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGrupoBodega.jButtonGuardarCambiosGrupoBodega.addActionListener (new ButtonActionListener(this,"GuardarCambiosGrupoBodega"));
		}
		
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGrupoBodega.jButtonGuardarCambiosToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarGrupoBodega"));
		}
		
		this.jButtonCopiarToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"CopiarToolBarGrupoBodega"));
			
		this.jButtonVerFormToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"VerFormToolBarGrupoBodega"));
		
		this.jMenuItemGuardarCambiosGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosGrupoBodega"));
			
		this.jMenuItemCopiarGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemCopiarGrupoBodega"));		
		
		this.jMenuItemVerFormGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemVerFormGrupoBodega"));		
		
		
		this.jButtonGuardarCambiosTablaGrupoBodega.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaGrupoBodega"));
		
		
		this.jButtonGuardarCambiosTablaToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarGrupoBodega"));
			
		this.jMenuItemGuardarCambiosTablaGrupoBodega.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaGrupoBodega"));		
		
		
		
		this.jButtonRecargarInformacionGrupoBodega.addActionListener (new ButtonActionListener(this,"RecargarInformacionGrupoBodega"));
					
		this.jButtonRecargarInformacionToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarGrupoBodega"));
		
		this.jMenuItemRecargarInformacionGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionGrupoBodega"));		
		
		
		
		this.jButtonAnterioresGrupoBodega.addActionListener (new ButtonActionListener(this,"AnterioresGrupoBodega"));
		
		
		this.jButtonAnterioresToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"AnterioresToolBarGrupoBodega"));
		
		this.jMenuItemAnterioresGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresGrupoBodega"));		
		
		
		this.jButtonSiguientesGrupoBodega.addActionListener (new ButtonActionListener(this,"SiguientesGrupoBodega"));
		
		
		this.jButtonSiguientesToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"SiguientesToolBarGrupoBodega"));
			
		this.jMenuItemSiguientesGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesGrupoBodega"));
			
		this.jMenuItemAbrirOrderByGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByGrupoBodega"));
			
		this.jMenuItemMostrarOcultarGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarGrupoBodega"));
			
		this.jMenuItemDetalleAbrirOrderByGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByGrupoBodega"));
			
		this.jMenuItemDetalleMostarOcultarGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarGrupoBodega"));		
		
		
		this.jButtonNuevoGuardarCambiosGrupoBodega.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosGrupoBodega"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarGrupoBodega"));
			
		this.jMenuItemNuevoGuardarCambiosGrupoBodega.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosGrupoBodega"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosGrupoBodega.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosGrupoBodega"));

		this.jCheckBoxSeleccionadosGrupoBodega.addItemListener(new CheckBoxItemListener(this,"SeleccionadosGrupoBodega"));
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGrupoBodega.jComboBoxTiposAccionesFormularioGrupoBodega.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioGrupoBodega"));
		}
		
		
		this.jComboBoxTiposRelacionesGrupoBodega.addActionListener (new ButtonActionListener(this,"TiposRelacionesGrupoBodega"));
			
		this.jComboBoxTiposAccionesGrupoBodega.addActionListener (new ButtonActionListener(this,"TiposAccionesGrupoBodega"));
					
		this.jComboBoxTiposSeleccionarGrupoBodega.addActionListener (new ButtonActionListener(this,"TiposSeleccionarGrupoBodega"));
			
		this.jTextFieldValorCampoGeneralGrupoBodega.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralGrupoBodega"));		
		
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonidGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"idGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_empresaGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_empresaGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtoncodigoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"codigoGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonnombreGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"nombreGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonrucGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"rucGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtondireccionGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"direccionGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtontelefonoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"telefonoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_paisGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_paisGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_paisGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_paisGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_ciudadGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_ciudadGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_centro_costoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_centro_costoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_empleadoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_empleadoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtondescripcionGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"descripcionGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_inventarioGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_inventarioGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_inventarioGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_inventarioGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_costoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_costoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_ventaGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ventaGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_ventaGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ventaGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_descuentoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_descuentoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_descuentoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_descuentoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_devolucionGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_devolucionGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_devolucionGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_devolucionGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_debitoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_debitoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_debitoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_debitoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_creditoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_creditoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_creditoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_creditoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_produccionGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_produccionGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_produccionGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_produccionGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_bonificaGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_bonificaGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_bonificaGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_bonificaGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_costo_bonificaGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costo_bonificaGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_costo_bonificaGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costo_bonificaGrupoBodegaBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonBusquedaPorCodigoGrupoBodega.addActionListener(new ButtonActionListener(this,"BusquedaPorCodigoGrupoBodega"));

			this.jButtonBusquedaPorNombreGrupoBodega.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreGrupoBodega"));

			this.jButtonBusquedaPorRucGrupoBodega.addActionListener(new ButtonActionListener(this,"BusquedaPorRucGrupoBodega"));

			this.jButtonBusquedaPorTelefonoGrupoBodega.addActionListener(new ButtonActionListener(this,"BusquedaPorTelefonoGrupoBodega"));

			this.jButtonFK_IdCentroCostoGrupoBodega.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoGrupoBodega"));

			this.jButtonFK_IdEmpleadoGrupoBodega.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoGrupoBodega"));

			this.jButtonFK_IdPaisGrupoBodega.addActionListener(new ButtonActionListener(this,"FK_IdPaisGrupoBodega"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoGrupoBodega!=null) {
				this.jInternalFrameReporteDinamicoGrupoBodega.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoGrupoBodega"));
				this.jInternalFrameReporteDinamicoGrupoBodega.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoGrupoBodega"));
				this.jInternalFrameReporteDinamicoGrupoBodega.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoGrupoBodega"));
			}
			
			//this.jButtonCerrarReporteDinamicoGrupoBodega.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoGrupoBodega"));				
			//this.jButtonGenerarReporteDinamicoGrupoBodega.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoGrupoBodega"));
			//this.jButtonGenerarExcelReporteDinamicoGrupoBodega.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoGrupoBodega"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionGrupoBodega!=null) {
				this.jInternalFrameImportacionGrupoBodega.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionGrupoBodega"));
				this.jInternalFrameImportacionGrupoBodega.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionGrupoBodega"));
				this.jInternalFrameImportacionGrupoBodega.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionGrupoBodega"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByGrupoBodega.addActionListener (new ButtonActionListener(this,"AbrirOrderByGrupoBodega"));
			
			this.jButtonAbrirOrderByToolBarGrupoBodega.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarGrupoBodega"));			
			
			if(this.jInternalFrameOrderByGrupoBodega!=null) {
				this.jInternalFrameOrderByGrupoBodega.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByGrupoBodega"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGrupoBodega.jTabbedPaneRelacionesGrupoBodega.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesGrupoBodega"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameGrupoBodega();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormGrupoBodega.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormGrupoBodega = (JInternalFrameBase)event.getSource();
	            	
	            GrupoBodegaBeanSwingJInternalFrame jInternalFrameParent=(GrupoBodegaBeanSwingJInternalFrame)jInternalFrameDetalleFormGrupoBodega.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarGrupoBodegaActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosGrupoBodega.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosGrupoBodegaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosGrupoBodega.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosGrupoBodega.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGrupoBodegaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGrupoBodegaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGrupoBodegaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoGrupoBodega";
		inputMap = this.jButtonNuevoGrupoBodega.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoGrupoBodega.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoGrupoBodegaActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGrupoBodegaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGrupoBodegaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGrupoBodegaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesGrupoBodega";
		inputMap = this.jButtonNuevoRelacionesGrupoBodega.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesGrupoBodega.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoGrupoBodegaActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarGrupoBodega";
		inputMap = this.jButtonModificarGrupoBodega.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarGrupoBodega.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarGrupoBodegaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarGrupoBodega";
		inputMap = this.jButtonActualizarGrupoBodega.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarGrupoBodega.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarGrupoBodegaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarGrupoBodega";
		inputMap = this.jButtonEliminarGrupoBodega.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarGrupoBodega.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarGrupoBodegaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarGrupoBodega";
		inputMap = this.jButtonCancelarGrupoBodega.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarGrupoBodega.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarGrupoBodegaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarGrupoBodega";
		inputMap = this.jButtonCerrarGrupoBodega.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarGrupoBodega.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarGrupoBodegaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormGrupoBodega.jButtonGuardarCambiosGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosGrupoBodega";
		inputMap = this.jInternalFrameDetalleFormGrupoBodega.jButtonGuardarCambiosGrupoBodega.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormGrupoBodega.jButtonGuardarCambiosGrupoBodega.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosGrupoBodegaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosGrupoBodega.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosGrupoBodegaItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesGrupoBodega.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesGrupoBodegaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarGrupoBodega.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarGrupoBodegaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralGrupoBodega.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralGrupoBodegaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonidGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"idGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_empresaGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_empresaGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtoncodigoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"codigoGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonnombreGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"nombreGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonrucGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"rucGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtondireccionGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"direccionGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtontelefonoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"telefonoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_paisGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_paisGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_paisGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_paisGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_ciudadGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_ciudadGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_centro_costoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_centro_costoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_empleadoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_empleadoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoGrupoBodegaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtondescripcionGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"descripcionGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_inventarioGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_inventarioGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_inventarioGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_inventarioGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_costoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_costoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_ventaGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ventaGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_ventaGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ventaGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_descuentoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_descuentoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_descuentoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_descuentoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_devolucionGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_devolucionGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_devolucionGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_devolucionGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_debitoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_debitoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_debitoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_debitoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_creditoGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_creditoGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_creditoGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_creditoGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_produccionGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_produccionGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_produccionGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_produccionGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_bonificaGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_bonificaGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_bonificaGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_bonificaGrupoBodegaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_costo_bonificaGrupoBodegaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costo_bonificaGrupoBodegaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGrupoBodega.jButtonid_cuenta_contable_costo_bonificaGrupoBodegaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costo_bonificaGrupoBodegaBusqueda"));
		
		
		this.jButtonBusquedaPorCodigoGrupoBodega.addActionListener(new ButtonActionListener(this,"BusquedaPorCodigoGrupoBodega"));

		this.jButtonBusquedaPorNombreGrupoBodega.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreGrupoBodega"));

		this.jButtonBusquedaPorRucGrupoBodega.addActionListener(new ButtonActionListener(this,"BusquedaPorRucGrupoBodega"));

		this.jButtonBusquedaPorTelefonoGrupoBodega.addActionListener(new ButtonActionListener(this,"BusquedaPorTelefonoGrupoBodega"));

		this.jButtonFK_IdCentroCostoGrupoBodega.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoGrupoBodega"));

		this.jButtonFK_IdEmpleadoGrupoBodega.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoGrupoBodega"));

		this.jButtonFK_IdPaisGrupoBodega.addActionListener(new ButtonActionListener(this,"FK_IdPaisGrupoBodega"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionGrupoBodega.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionGrupoBodegaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarGrupoBodegaActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarGrupoBodega.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosGrupoBodega(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(GrupoBodega grupobodegaAux:this.grupobodegaLogic.getGrupoBodegas()) {
					grupobodegaAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(GrupoBodega grupobodegaAux:grupobodegas) {
					grupobodegaAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosGrupoBodegaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingGrupoBodega(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(GrupoBodega grupobodegaAux:this.grupobodegaLogic.getGrupoBodegas()) {
						grupobodegaAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(GrupoBodega grupobodegaAux:grupobodegas) {
						grupobodegaAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(GrupoBodega grupobodegaAux:this.grupobodegaLogic.getGrupoBodegas()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(GrupoBodega grupobodegaAux:grupobodegas) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaGrupoBodega(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosGrupoBodega.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosGrupoBodega.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosGrupoBodegaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingGrupoBodega(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosGrupoBodega.getSelectedRows();
			
			GrupoBodega grupobodegaLocal=new GrupoBodega();
			
			//this.seleccionarTodosGrupoBodega(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupobodegaLocal =(GrupoBodega) this.grupobodegaLogic.getGrupoBodegas().toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					grupobodegaLocal =(GrupoBodega) this.grupobodegas.toArray()[this.jTableDatosGrupoBodega.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				grupobodegaLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(GrupoBodega grupobodegaAux:this.grupobodegaLogic.getGrupoBodegas()) {
						grupobodegaAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(GrupoBodega grupobodegaAux:grupobodegas) {
						grupobodegaAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaGrupoBodega(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosGrupoBodega.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosGrupoBodega.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosGrupoBodega,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualGrupoBodegaItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarGrupoBodegaParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralGrupoBodegaActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingGrupoBodega(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralGrupoBodega.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(GrupoBodega grupobodegaAux:this.grupobodegaLogic.getGrupoBodegas()) {
				
						if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							grupobodegaAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							grupobodegaAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_RUC)) {
							existe=true;
							grupobodegaAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							grupobodegaAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							grupobodegaAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							grupobodegaAux.setdescripcion(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(GrupoBodega grupobodegaAux:grupobodegas) {
					
						if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							grupobodegaAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							grupobodegaAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_RUC)) {
							existe=true;
							grupobodegaAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							grupobodegaAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							grupobodegaAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							grupobodegaAux.setdescripcion(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaGrupoBodega(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesGrupoBodegaActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingGrupoBodega(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioGrupoBodega=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesGrupoBodega.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormGrupoBodega.jComboBoxTiposAccionesFormularioGrupoBodega.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteGrupoBodega) {				
					conSplash=true;//false;										
					
					//this.startProcessGrupoBodega(conSplash);
				
					this.generarReporteGrupoBodegasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesGrupoBodega.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormGrupoBodega.jComboBoxTiposAccionesFormularioGrupoBodega.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoGrupoBodegasSeleccionados();
				//this.jComboBoxTiposAccionesGrupoBodega.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoGrupoBodegasSeleccionados(false);
				//this.jComboBoxTiposAccionesGrupoBodega.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoGrupoBodegasSeleccionados(true);
				//this.jComboBoxTiposAccionesGrupoBodega.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessGrupoBodega();
				
				this.exportarGrupoBodegasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesGrupoBodega.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormGrupoBodega.jComboBoxTiposAccionesFormularioGrupoBodega.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionGrupoBodegas();
				//this.importarGrupoBodegas();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesGrupoBodega.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormGrupoBodega.jComboBoxTiposAccionesFormularioGrupoBodega.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessGrupoBodega();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelGrupoBodegasSeleccionados();
				//this.jComboBoxTiposAccionesGrupoBodega.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Grupo Bodega", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessGrupoBodega();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoGrupoBodega)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyGrupoBodega(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Grupo Bodega",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesGrupoBodega.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormGrupoBodega.jComboBoxTiposAccionesFormularioGrupoBodega.setSelectedIndex(0);					
				}	
			} 			
			else if(GrupoBodegaBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteGrupoBodega) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessGrupoBodega(conSplash);
					
						//this.actualizarParametrosGeneralGrupoBodega();
						
						this.generarReporteProcesoAccionGrupoBodegasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesGrupoBodega.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormGrupoBodega.jComboBoxTiposAccionesFormularioGrupoBodega.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(GrupoBodegaBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Grupo BodegaES SELECCIONADOS?", "MANTENIMIENTO DE Grupo Bodega", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessGrupoBodega();
				
						this.actualizarParametrosGeneralGrupoBodega();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.grupobodegaReturnGeneral=grupobodegaLogic.procesarAccionGrupoBodegasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.grupobodegaLogic.getGrupoBodegas(),this.grupobodegaParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarGrupoBodegaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesGrupoBodega.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxTiposAccionesFormularioGrupoBodega.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralGrupoBodega();
					
					GrupoBodegaBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarGrupoBodegaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesGrupoBodega.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormGrupoBodega.jComboBoxTiposAccionesFormularioGrupoBodega.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessGrupoBodega(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesGrupoBodegaActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessGrupoBodega();
			
			if(this.jInternalFrameDetalleFormGrupoBodega==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<GrupoBodega> grupobodegasSeleccionados=new ArrayList<GrupoBodega>();		
			GrupoBodega grupobodega=new GrupoBodega();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingGrupoBodega(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesGrupoBodega.getSelectedItem();
			
			
			
			
			grupobodegasSeleccionados=this.getGrupoBodegasSeleccionados(true);
			//this.sTipoAccion;
			
			if(grupobodegasSeleccionados.size()==1) {
				for(GrupoBodega grupobodegaAux:grupobodegasSeleccionados) {
					grupobodega=grupobodegaAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Bodega")) {
					jButtonBodegaActionPerformed(null,rowIndex,true,false,grupobodega);
				}
				else if(this.sTipoRelacion.equals("Parametro Inventario Defecto")) {
					jButtonParametroInventarioDefectoActionPerformed(null,rowIndex,true,false,grupobodega);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessGrupoBodega();
			
      		//this.finishProcessGrupoBodega(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarGrupoBodegaReturnGeneral() throws Exception {
		if(this.grupobodegaReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.grupobodegaReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.grupobodegaReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.grupobodegaReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.grupobodegaReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.grupobodegaReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingGrupoBodega(false);
		}
		
		if(this.grupobodegaReturnGeneral.getConRetornoLista() || this.grupobodegaReturnGeneral.getConRetornoObjeto()) {
			if(this.grupobodegaReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.grupobodegaLogic.setGrupoBodegas(this.grupobodegaReturnGeneral.getGrupoBodegas());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.grupobodegaReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.grupobodegaLogic.setGrupoBodega(this.grupobodegaReturnGeneral.getGrupoBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingGrupoBodega(false);
		}
	}
	
	public void actualizarParametrosGeneralGrupoBodega() throws Exception {
		
		
	}
	
	public ArrayList<GrupoBodega> getGrupoBodegasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<GrupoBodega> grupobodegasSeleccionados=new ArrayList<GrupoBodega>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioGrupoBodega) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(GrupoBodega grupobodegaAux:grupobodegaLogic.getGrupoBodegas()) {
					if(grupobodegaAux.getIsSelected()) {
						grupobodegasSeleccionados.add(grupobodegaAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(GrupoBodega grupobodegaAux:this.grupobodegas) {
					if(grupobodegaAux.getIsSelected()) {
						grupobodegasSeleccionados.add(grupobodegaAux);				
					}
				}
			}
			
			if(grupobodegasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						grupobodegasSeleccionados.addAll(this.grupobodegaLogic.getGrupoBodegas());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						grupobodegasSeleccionados.addAll(this.grupobodegas);				
					}
				}
			}
		} else {
			grupobodegasSeleccionados.add(this.grupobodega);
		}
		
		return grupobodegasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteGrupoBodegasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalGrupoBodegasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoGrupoBodegasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoGrupoBodegasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoGrupoBodegasSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesGrupoBodegasSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Grupo Bodega",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesGrupoBodegasSeleccionados() throws Exception {
		ArrayList<GrupoBodega> grupobodegasSeleccionados=new ArrayList<GrupoBodega>();		
		
		grupobodegasSeleccionados=this.getGrupoBodegasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteGrupoBodegas("Todos",grupobodegasSeleccionados);
		
	}	
	
	public void generarReporteNormalGrupoBodegasSeleccionados() throws Exception {
		ArrayList<GrupoBodega> grupobodegasSeleccionados=new ArrayList<GrupoBodega>();		
		
		grupobodegasSeleccionados=this.getGrupoBodegasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteGrupoBodegas("Todos",grupobodegasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionGrupoBodegasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<GrupoBodega> grupobodegasSeleccionados=new ArrayList<GrupoBodega>();
		
		grupobodegasSeleccionados=this.getGrupoBodegasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteGrupoBodegas("Todos",grupobodegasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoGrupoBodegasSeleccionados() throws Exception {
		ArrayList<GrupoBodega> grupobodegasSeleccionados=new ArrayList<GrupoBodega>();		
		
		
		this.abrirInicializarFrameReporteDinamicoGrupoBodega();
		
		
		grupobodegasSeleccionados=this.getGrupoBodegasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoGrupoBodega();
		
		
		//this.generarReporteGrupoBodegas("Todos",grupobodegasSeleccionados ,grupobodegaImplementable,grupobodegaImplementableHome);
	}
	
	public void mostrarImportacionGrupoBodegas() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionGrupoBodega();
		
		this.abrirFrameImportacionGrupoBodega();		
		
			
		//this.generarReporteGrupoBodegas("Todos",grupobodegasSeleccionados ,grupobodegaImplementable,grupobodegaImplementableHome);
	}
	
	public void importarGrupoBodegas() throws Exception {		
	
	}
	
	public void exportarGrupoBodegasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelGrupoBodegasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoGrupoBodegasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlGrupoBodegasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Grupo Bodega",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoGrupoBodegasSeleccionados() throws Exception {
		ArrayList<GrupoBodega> grupobodegasSeleccionados=new ArrayList<GrupoBodega>();		
		
		grupobodegasSeleccionados=this.getGrupoBodegasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"grupobodega."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarGrupoBodega(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(GrupoBodega grupobodegaAux:grupobodegasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarGrupoBodega(grupobodegaAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//grupobodegaAux.setsDetalleGeneralEntityReporte(grupobodegaAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.grupobodegaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Grupo Bodega",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarGrupoBodega(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_CODIGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_NOMBRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_RUC;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_DIRECCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_TELEFONO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_IDPAIS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_IDCIUDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_IDCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_IDEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEBITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECREDITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEBONIFICA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOBONIFICA;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarGrupoBodega(GrupoBodega grupobodega,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=grupobodega.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getcodigo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getnombre();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getruc();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getdireccion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.gettelefono();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getpais_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getciudad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getcentrocosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getcuentacontableinventario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getcuentacontablecosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getcuentacontableventa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getcuentacontabledescuento_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getcuentacontabledevolucion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getcuentacontabledebito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getcuentacontablecredito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getcuentacontableproduccion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getcuentacontablebonifica_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=grupobodega.getcuentacontablecostobonifica_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelGrupoBodegasSeleccionados() throws Exception {
		ArrayList<GrupoBodega> grupobodegasSeleccionados=new ArrayList<GrupoBodega>();		
		
		grupobodegasSeleccionados=this.getGrupoBodegasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"grupobodega.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("GrupoBodegas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelGrupoBodega(row);				
				iRow++;
			}				
			
			for(GrupoBodega grupobodegaAux:grupobodegasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelGrupoBodega(grupobodegaAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.grupobodegaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Grupo Bodega",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlGrupoBodegasSeleccionados() throws Exception {
		ArrayList<GrupoBodega> grupobodegasSeleccionados=new ArrayList<GrupoBodega>();		
		
		grupobodegasSeleccionados=this.getGrupoBodegasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"grupobodega.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("grupobodegas");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("grupobodega");
			//elementRoot.appendChild(element);
		
			for(GrupoBodega grupobodegaAux:grupobodegasSeleccionados) {
				element = document.createElement("grupobodega");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlGrupoBodega(grupobodegaAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.grupobodegaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Grupo Bodega",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelGrupoBodega(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_CODIGO);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_NOMBRE);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_RUC);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_DIRECCION);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_TELEFONO);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDPAIS);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCIUDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEBITO);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECREDITO);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEBONIFICA);
		cell = row.createCell(iColumn++);cell.setCellValue(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOBONIFICA);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelGrupoBodega(GrupoBodega grupobodega,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getcodigo());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getnombre());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getruc());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getdireccion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.gettelefono());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getpais_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getciudad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getcentrocosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getcuentacontableinventario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getcuentacontablecosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getcuentacontableventa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getcuentacontabledescuento_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getcuentacontabledevolucion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getcuentacontabledebito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getcuentacontablecredito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getcuentacontableproduccion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getcuentacontablebonifica_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(grupobodega.getcuentacontablecostobonifica_descripcion());				
	}
	
	public void setFilaDatosExportarXmlGrupoBodega(GrupoBodega grupobodega,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(GrupoBodegaConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(grupobodega.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(GrupoBodegaConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(grupobodega.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(GrupoBodegaConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(grupobodega.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementcodigo = document.createElement(GrupoBodegaConstantesFunciones.CODIGO);
		elementcodigo.appendChild(document.createTextNode(grupobodega.getcodigo().trim()));
		element.appendChild(elementcodigo);

		Element elementnombre = document.createElement(GrupoBodegaConstantesFunciones.NOMBRE);
		elementnombre.appendChild(document.createTextNode(grupobodega.getnombre().trim()));
		element.appendChild(elementnombre);

		Element elementruc = document.createElement(GrupoBodegaConstantesFunciones.RUC);
		elementruc.appendChild(document.createTextNode(grupobodega.getruc().trim()));
		element.appendChild(elementruc);

		Element elementdireccion = document.createElement(GrupoBodegaConstantesFunciones.DIRECCION);
		elementdireccion.appendChild(document.createTextNode(grupobodega.getdireccion().trim()));
		element.appendChild(elementdireccion);

		Element elementtelefono = document.createElement(GrupoBodegaConstantesFunciones.TELEFONO);
		elementtelefono.appendChild(document.createTextNode(grupobodega.gettelefono().trim()));
		element.appendChild(elementtelefono);

		Element elementpais_descripcion = document.createElement(GrupoBodegaConstantesFunciones.IDPAIS);
		elementpais_descripcion.appendChild(document.createTextNode(grupobodega.getpais_descripcion()));
		element.appendChild(elementpais_descripcion);

		Element elementciudad_descripcion = document.createElement(GrupoBodegaConstantesFunciones.IDCIUDAD);
		elementciudad_descripcion.appendChild(document.createTextNode(grupobodega.getciudad_descripcion()));
		element.appendChild(elementciudad_descripcion);

		Element elementcentrocosto_descripcion = document.createElement(GrupoBodegaConstantesFunciones.IDCENTROCOSTO);
		elementcentrocosto_descripcion.appendChild(document.createTextNode(grupobodega.getcentrocosto_descripcion()));
		element.appendChild(elementcentrocosto_descripcion);

		Element elementempleado_descripcion = document.createElement(GrupoBodegaConstantesFunciones.IDEMPLEADO);
		elementempleado_descripcion.appendChild(document.createTextNode(grupobodega.getempleado_descripcion()));
		element.appendChild(elementempleado_descripcion);

		Element elementdescripcion = document.createElement(GrupoBodegaConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(grupobodega.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementcuentacontableinventario_descripcion = document.createElement(GrupoBodegaConstantesFunciones.IDCUENTACONTABLEINVENTARIO);
		elementcuentacontableinventario_descripcion.appendChild(document.createTextNode(grupobodega.getcuentacontableinventario_descripcion()));
		element.appendChild(elementcuentacontableinventario_descripcion);

		Element elementcuentacontablecosto_descripcion = document.createElement(GrupoBodegaConstantesFunciones.IDCUENTACONTABLECOSTO);
		elementcuentacontablecosto_descripcion.appendChild(document.createTextNode(grupobodega.getcuentacontablecosto_descripcion()));
		element.appendChild(elementcuentacontablecosto_descripcion);

		Element elementcuentacontableventa_descripcion = document.createElement(GrupoBodegaConstantesFunciones.IDCUENTACONTABLEVENTA);
		elementcuentacontableventa_descripcion.appendChild(document.createTextNode(grupobodega.getcuentacontableventa_descripcion()));
		element.appendChild(elementcuentacontableventa_descripcion);

		Element elementcuentacontabledescuento_descripcion = document.createElement(GrupoBodegaConstantesFunciones.IDCUENTACONTABLEDESCUENTO);
		elementcuentacontabledescuento_descripcion.appendChild(document.createTextNode(grupobodega.getcuentacontabledescuento_descripcion()));
		element.appendChild(elementcuentacontabledescuento_descripcion);

		Element elementcuentacontabledevolucion_descripcion = document.createElement(GrupoBodegaConstantesFunciones.IDCUENTACONTABLEDEVOLUCION);
		elementcuentacontabledevolucion_descripcion.appendChild(document.createTextNode(grupobodega.getcuentacontabledevolucion_descripcion()));
		element.appendChild(elementcuentacontabledevolucion_descripcion);

		Element elementcuentacontabledebito_descripcion = document.createElement(GrupoBodegaConstantesFunciones.IDCUENTACONTABLEDEBITO);
		elementcuentacontabledebito_descripcion.appendChild(document.createTextNode(grupobodega.getcuentacontabledebito_descripcion()));
		element.appendChild(elementcuentacontabledebito_descripcion);

		Element elementcuentacontablecredito_descripcion = document.createElement(GrupoBodegaConstantesFunciones.IDCUENTACONTABLECREDITO);
		elementcuentacontablecredito_descripcion.appendChild(document.createTextNode(grupobodega.getcuentacontablecredito_descripcion()));
		element.appendChild(elementcuentacontablecredito_descripcion);

		Element elementcuentacontableproduccion_descripcion = document.createElement(GrupoBodegaConstantesFunciones.IDCUENTACONTABLEPRODUCCION);
		elementcuentacontableproduccion_descripcion.appendChild(document.createTextNode(grupobodega.getcuentacontableproduccion_descripcion()));
		element.appendChild(elementcuentacontableproduccion_descripcion);

		Element elementcuentacontablebonifica_descripcion = document.createElement(GrupoBodegaConstantesFunciones.IDCUENTACONTABLEBONIFICA);
		elementcuentacontablebonifica_descripcion.appendChild(document.createTextNode(grupobodega.getcuentacontablebonifica_descripcion()));
		element.appendChild(elementcuentacontablebonifica_descripcion);

		Element elementcuentacontablecostobonifica_descripcion = document.createElement(GrupoBodegaConstantesFunciones.IDCUENTACONTABLECOSTOBONIFICA);
		elementcuentacontablecostobonifica_descripcion.appendChild(document.createTextNode(grupobodega.getcuentacontablecostobonifica_descripcion()));
		element.appendChild(elementcuentacontablecostobonifica_descripcion);
	}
	
	public void generarReporteGroupGenericoGrupoBodegasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<GrupoBodega> grupobodegasSeleccionados=new ArrayList<GrupoBodega>();
		
		grupobodegasSeleccionados=this.getGrupoBodegasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoGrupoBodega(grupobodegasSeleccionados);
		
		this.generarReporteGrupoBodegas("Todos",grupobodegasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoGrupoBodega(ArrayList<GrupoBodega> grupobodegasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(GrupoBodega grupobodegaAux:grupobodegasSeleccionados) {
				grupobodegaAux.setsDetalleGeneralEntityReporte(grupobodegaAux.toString());
			
				if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_CODIGO)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getcodigo());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_NOMBRE)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getnombre());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_RUC)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getruc());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_DIRECCION)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getdireccion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_TELEFONO)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.gettelefono());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_IDPAIS)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getpais_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_IDCIUDAD)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getciudad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_IDCENTROCOSTO)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getcentrocosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_IDEMPLEADO)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getcuentacontableinventario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTO)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getcuentacontablecosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getcuentacontableventa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getcuentacontabledescuento_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getcuentacontabledevolucion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEDEBITO)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getcuentacontabledebito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECREDITO)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getcuentacontablecredito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getcuentacontableproduccion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLEBONIFICA)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getcuentacontablebonifica_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GrupoBodegaConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOBONIFICA)) {
					existe=true;
					grupobodegaAux.setsDescripcionGeneralEntityReporte1(grupobodegaAux.getcuentacontablecostobonifica_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GrupoBodegaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesGrupoBodega(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoGrupoBodega=true;
				this.isVisibilidadCeldaNuevoRelacionesGrupoBodega=true;
				this.isVisibilidadCeldaGuardarCambiosGrupoBodega=true;
			}
			
			this.isVisibilidadCeldaModificarGrupoBodega=false;
			this.isVisibilidadCeldaActualizarGrupoBodega=false;
			this.isVisibilidadCeldaEliminarGrupoBodega=false;
			this.isVisibilidadCeldaCancelarGrupoBodega=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarGrupoBodega=true;
				} else {
					this.isVisibilidadCeldaGuardarGrupoBodega=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoGrupoBodega=false;
			this.isVisibilidadCeldaNuevoRelacionesGrupoBodega=false;
			this.isVisibilidadCeldaGuardarCambiosGrupoBodega=false;
			this.isVisibilidadCeldaModificarGrupoBodega=false;
			this.isVisibilidadCeldaActualizarGrupoBodega=true;
			this.isVisibilidadCeldaEliminarGrupoBodega=false;
			this.isVisibilidadCeldaCancelarGrupoBodega=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarGrupoBodega=true;
				} else {
					this.isVisibilidadCeldaGuardarGrupoBodega=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoGrupoBodega=false;
			this.isVisibilidadCeldaNuevoRelacionesGrupoBodega=false;
			this.isVisibilidadCeldaGuardarCambiosGrupoBodega=false;
			this.isVisibilidadCeldaModificarGrupoBodega=false;
			this.isVisibilidadCeldaActualizarGrupoBodega=true;
			this.isVisibilidadCeldaEliminarGrupoBodega=true;
			this.isVisibilidadCeldaCancelarGrupoBodega=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarGrupoBodega=true;
				} else {
					this.isVisibilidadCeldaGuardarGrupoBodega=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoGrupoBodega=false;
			this.isVisibilidadCeldaNuevoRelacionesGrupoBodega=false;
			this.isVisibilidadCeldaGuardarCambiosGrupoBodega=false;
			this.isVisibilidadCeldaModificarGrupoBodega=false;
			this.isVisibilidadCeldaActualizarGrupoBodega=true;
			this.isVisibilidadCeldaEliminarGrupoBodega=false;
			this.isVisibilidadCeldaCancelarGrupoBodega=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarGrupoBodega=false;
				} else {
					this.isVisibilidadCeldaGuardarGrupoBodega=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoGrupoBodega=true;
			this.isVisibilidadCeldaNuevoRelacionesGrupoBodega=true;
			this.isVisibilidadCeldaGuardarCambiosGrupoBodega=true;
			this.isVisibilidadCeldaModificarGrupoBodega=false;
			this.isVisibilidadCeldaActualizarGrupoBodega=false;
			this.isVisibilidadCeldaEliminarGrupoBodega=false;
			this.isVisibilidadCeldaCancelarGrupoBodega=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarGrupoBodega=true;
				} else {
					this.isVisibilidadCeldaGuardarGrupoBodega=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoGrupoBodega=false;
			this.isVisibilidadCeldaNuevoRelacionesGrupoBodega=false;
			this.isVisibilidadCeldaGuardarCambiosGrupoBodega=false;
			this.isVisibilidadCeldaActualizarGrupoBodega=false;
			this.isVisibilidadCeldaEliminarGrupoBodega=false;
			this.isVisibilidadCeldaCancelarGrupoBodega=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarGrupoBodega=false;
				} else {
					this.isVisibilidadCeldaGuardarGrupoBodega=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoGrupoBodega=false;
			this.isVisibilidadCeldaNuevoRelacionesGrupoBodega=false;
			this.isVisibilidadCeldaGuardarCambiosGrupoBodega=false;
			this.isVisibilidadCeldaModificarGrupoBodega=true;
			this.isVisibilidadCeldaActualizarGrupoBodega=false;
			this.isVisibilidadCeldaEliminarGrupoBodega=false;
			this.isVisibilidadCeldaCancelarGrupoBodega=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarGrupoBodega=false;
				} else {
					this.isVisibilidadCeldaGuardarGrupoBodega=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(GrupoBodegaJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoGrupoBodega=true;
			this.isVisibilidadCeldaNuevoRelacionesGrupoBodega=true;
			this.isVisibilidadCeldaGuardarCambiosGrupoBodega=true;
		} else {
			this.actualizarEstadoPanelsGrupoBodega(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarGrupoBodega=false;
			//this.isVisibilidadCeldaVerFormGrupoBodega=false;
			this.isVisibilidadCeldaDuplicarGrupoBodega=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!grupobodegaSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesGrupoBodega=false;
		} else {
			this.isVisibilidadCeldaNuevoGrupoBodega=false;
			this.isVisibilidadCeldaGuardarCambiosGrupoBodega=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(grupobodegaSessionBean.getEsGuardarRelacionado()) {
			if(!grupobodegaSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesGrupoBodega=false;												
			}
			
			this.jButtonCerrarGrupoBodega.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesGrupoBodega=false;
		}
		
		if(!this.permiteMantenimiento(this.grupobodega)) {
			this.isVisibilidadCeldaActualizarGrupoBodega=false;
			this.isVisibilidadCeldaEliminarGrupoBodega=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesGrupoBodega() {
		this.isVisibilidadCeldaNuevoGrupoBodega=false;
		this.isVisibilidadCeldaGuardarCambiosGrupoBodega=false;
	}
	
	public void actualizarEstadoPanelsGrupoBodega(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionGrupoBodega!=null) {
				this.jScrollPanelDatosEdicionGrupoBodega.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGrupoBodega!=null) {
				this.jTabbedPaneBusquedasGrupoBodega.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosGrupoBodega!=null) {
				this.jScrollPanelDatosGrupoBodega.setVisible(true);
			}
			
			if(this.jPanelPaginacionGrupoBodega!=null) {
				this.jPanelPaginacionGrupoBodega.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesGrupoBodega!=null) {
				this.jPanelParametrosReportesGrupoBodega.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionGrupoBodega!=null) {
				this.jScrollPanelDatosEdicionGrupoBodega.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGrupoBodega!=null) {
				this.jTabbedPaneBusquedasGrupoBodega.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosGrupoBodega!=null) {
				this.jScrollPanelDatosGrupoBodega.setVisible(false);
			}
			
			if(this.jPanelPaginacionGrupoBodega!=null) {
				this.jPanelPaginacionGrupoBodega.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesGrupoBodega!=null) {
				this.jPanelParametrosReportesGrupoBodega.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionGrupoBodega!=null) {
				this.jScrollPanelDatosEdicionGrupoBodega.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGrupoBodega!=null) {
				this.jTabbedPaneBusquedasGrupoBodega.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosGrupoBodega!=null) {
				this.jScrollPanelDatosGrupoBodega.setVisible(false);
			}
			
			if(this.jPanelPaginacionGrupoBodega!=null) {
				this.jPanelPaginacionGrupoBodega.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesGrupoBodega!=null) {
				this.jPanelParametrosReportesGrupoBodega.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionGrupoBodega!=null) {
				this.jScrollPanelDatosEdicionGrupoBodega.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGrupoBodega!=null) {
				this.jTabbedPaneBusquedasGrupoBodega.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosGrupoBodega!=null) {
				this.jScrollPanelDatosGrupoBodega.setVisible(false);
			}
			
			if(this.jPanelPaginacionGrupoBodega!=null) {
				this.jPanelPaginacionGrupoBodega.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesGrupoBodega!=null) {
				this.jPanelParametrosReportesGrupoBodega.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionGrupoBodega!=null) {
				this.jScrollPanelDatosEdicionGrupoBodega.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGrupoBodega!=null) {
				this.jTabbedPaneBusquedasGrupoBodega.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosGrupoBodega!=null) {
				this.jScrollPanelDatosGrupoBodega.setVisible(true);
			}
			
			if(this.jPanelPaginacionGrupoBodega!=null) {
				this.jPanelPaginacionGrupoBodega.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesGrupoBodega!=null) {
				this.jPanelParametrosReportesGrupoBodega.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionGrupoBodega!=null) {
				this.jScrollPanelDatosEdicionGrupoBodega.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGrupoBodega!=null) {
				this.jTabbedPaneBusquedasGrupoBodega.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosGrupoBodega!=null) {
				this.jScrollPanelDatosGrupoBodega.setVisible(true);
			}
			
			if(this.jPanelPaginacionGrupoBodega!=null) {
				this.jPanelPaginacionGrupoBodega.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesGrupoBodega!=null) {
				this.jPanelParametrosReportesGrupoBodega.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionGrupoBodega!=null) {
				this.jScrollPanelDatosEdicionGrupoBodega.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGrupoBodega!=null) {
				this.jTabbedPaneBusquedasGrupoBodega.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosGrupoBodega!=null) {
				this.jScrollPanelDatosGrupoBodega.setVisible(true);
			}
			
			if(this.jPanelPaginacionGrupoBodega!=null) {
				this.jPanelPaginacionGrupoBodega.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesGrupoBodega!=null) {
				this.jPanelParametrosReportesGrupoBodega.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasGrupoBodega!=null) {
					this.jTabbedPaneBusquedasGrupoBodega.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesGrupoBodega!=null) {
				this.jPanelParametrosReportesGrupoBodega.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.grupobodegaSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGrupoBodega!=null) {
				this.jTabbedPaneBusquedasGrupoBodega.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesGrupoBodega!=null) {
				this.jPanelParametrosReportesGrupoBodega.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadBusquedaPorCodigo=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorCodigoGrupoBodega);}

			this.isVisibilidadBusquedaPorNombre=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorNombreGrupoBodega);}

			this.isVisibilidadBusquedaPorRuc=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorRucGrupoBodega);}

			this.isVisibilidadBusquedaPorTelefono=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorTelefono) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorTelefonoGrupoBodega);}

			this.isVisibilidadFK_IdCentroCosto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdCentroCostoGrupoBodega);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdEmpleadoGrupoBodega);}

			this.isVisibilidadFK_IdPais=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdPaisGrupoBodega);}
		}
		
	}

	public void setVisibilidadBusquedasParaPais(Boolean isParaPais){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPaisNegation=!isParaPais;

			this.isVisibilidadBusquedaPorCodigo=isParaPaisNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorCodigoGrupoBodega);}

			this.isVisibilidadBusquedaPorNombre=isParaPaisNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorNombreGrupoBodega);}

			this.isVisibilidadBusquedaPorRuc=isParaPaisNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorRucGrupoBodega);}

			this.isVisibilidadBusquedaPorTelefono=isParaPaisNegation;
			if(!this.isVisibilidadBusquedaPorTelefono) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorTelefonoGrupoBodega);}

			this.isVisibilidadFK_IdCentroCosto=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdCentroCostoGrupoBodega);}

			this.isVisibilidadFK_IdEmpleado=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdEmpleadoGrupoBodega);}

			this.isVisibilidadFK_IdPais=isParaPais;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdPaisGrupoBodega);}
		}
		
	}

	public void setVisibilidadBusquedasParaCiudad(Boolean isParaCiudad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCiudadNegation=!isParaCiudad;

			this.isVisibilidadBusquedaPorCodigo=isParaCiudadNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorCodigoGrupoBodega);}

			this.isVisibilidadBusquedaPorNombre=isParaCiudadNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorNombreGrupoBodega);}

			this.isVisibilidadBusquedaPorRuc=isParaCiudadNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorRucGrupoBodega);}

			this.isVisibilidadBusquedaPorTelefono=isParaCiudadNegation;
			if(!this.isVisibilidadBusquedaPorTelefono) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorTelefonoGrupoBodega);}

			this.isVisibilidadFK_IdCentroCosto=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdCentroCostoGrupoBodega);}

			this.isVisibilidadFK_IdEmpleado=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdEmpleadoGrupoBodega);}

			this.isVisibilidadFK_IdPais=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdPaisGrupoBodega);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroCosto(Boolean isParaCentroCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroCostoNegation=!isParaCentroCosto;

			this.isVisibilidadBusquedaPorCodigo=isParaCentroCostoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorCodigoGrupoBodega);}

			this.isVisibilidadBusquedaPorNombre=isParaCentroCostoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorNombreGrupoBodega);}

			this.isVisibilidadBusquedaPorRuc=isParaCentroCostoNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorRucGrupoBodega);}

			this.isVisibilidadBusquedaPorTelefono=isParaCentroCostoNegation;
			if(!this.isVisibilidadBusquedaPorTelefono) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorTelefonoGrupoBodega);}

			this.isVisibilidadFK_IdCentroCosto=isParaCentroCosto;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdCentroCostoGrupoBodega);}

			this.isVisibilidadFK_IdEmpleado=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdEmpleadoGrupoBodega);}

			this.isVisibilidadFK_IdPais=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdPaisGrupoBodega);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleado(Boolean isParaEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoNegation=!isParaEmpleado;

			this.isVisibilidadBusquedaPorCodigo=isParaEmpleadoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorCodigoGrupoBodega);}

			this.isVisibilidadBusquedaPorNombre=isParaEmpleadoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorNombreGrupoBodega);}

			this.isVisibilidadBusquedaPorRuc=isParaEmpleadoNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorRucGrupoBodega);}

			this.isVisibilidadBusquedaPorTelefono=isParaEmpleadoNegation;
			if(!this.isVisibilidadBusquedaPorTelefono) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorTelefonoGrupoBodega);}

			this.isVisibilidadFK_IdCentroCosto=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdCentroCostoGrupoBodega);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpleado;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdEmpleadoGrupoBodega);}

			this.isVisibilidadFK_IdPais=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdPaisGrupoBodega);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableInventario(Boolean isParaCuentaContableInventario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableInventarioNegation=!isParaCuentaContableInventario;

			this.isVisibilidadBusquedaPorCodigo=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorCodigoGrupoBodega);}

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorNombreGrupoBodega);}

			this.isVisibilidadBusquedaPorRuc=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorRucGrupoBodega);}

			this.isVisibilidadBusquedaPorTelefono=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadBusquedaPorTelefono) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorTelefonoGrupoBodega);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdCentroCostoGrupoBodega);}

			this.isVisibilidadFK_IdEmpleado=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdEmpleadoGrupoBodega);}

			this.isVisibilidadFK_IdPais=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdPaisGrupoBodega);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableCosto(Boolean isParaCuentaContableCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableCostoNegation=!isParaCuentaContableCosto;

			this.isVisibilidadBusquedaPorCodigo=isParaCuentaContableCostoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorCodigoGrupoBodega);}

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableCostoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorNombreGrupoBodega);}

			this.isVisibilidadBusquedaPorRuc=isParaCuentaContableCostoNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorRucGrupoBodega);}

			this.isVisibilidadBusquedaPorTelefono=isParaCuentaContableCostoNegation;
			if(!this.isVisibilidadBusquedaPorTelefono) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorTelefonoGrupoBodega);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableCostoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdCentroCostoGrupoBodega);}

			this.isVisibilidadFK_IdEmpleado=isParaCuentaContableCostoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdEmpleadoGrupoBodega);}

			this.isVisibilidadFK_IdPais=isParaCuentaContableCostoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdPaisGrupoBodega);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableVenta(Boolean isParaCuentaContableVenta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableVentaNegation=!isParaCuentaContableVenta;

			this.isVisibilidadBusquedaPorCodigo=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorCodigoGrupoBodega);}

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorNombreGrupoBodega);}

			this.isVisibilidadBusquedaPorRuc=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorRucGrupoBodega);}

			this.isVisibilidadBusquedaPorTelefono=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadBusquedaPorTelefono) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorTelefonoGrupoBodega);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdCentroCostoGrupoBodega);}

			this.isVisibilidadFK_IdEmpleado=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdEmpleadoGrupoBodega);}

			this.isVisibilidadFK_IdPais=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdPaisGrupoBodega);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableDescuento(Boolean isParaCuentaContableDescuento){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableDescuentoNegation=!isParaCuentaContableDescuento;

			this.isVisibilidadBusquedaPorCodigo=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorCodigoGrupoBodega);}

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorNombreGrupoBodega);}

			this.isVisibilidadBusquedaPorRuc=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorRucGrupoBodega);}

			this.isVisibilidadBusquedaPorTelefono=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadBusquedaPorTelefono) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorTelefonoGrupoBodega);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdCentroCostoGrupoBodega);}

			this.isVisibilidadFK_IdEmpleado=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdEmpleadoGrupoBodega);}

			this.isVisibilidadFK_IdPais=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdPaisGrupoBodega);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableDevolucion(Boolean isParaCuentaContableDevolucion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableDevolucionNegation=!isParaCuentaContableDevolucion;

			this.isVisibilidadBusquedaPorCodigo=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorCodigoGrupoBodega);}

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorNombreGrupoBodega);}

			this.isVisibilidadBusquedaPorRuc=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorRucGrupoBodega);}

			this.isVisibilidadBusquedaPorTelefono=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadBusquedaPorTelefono) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorTelefonoGrupoBodega);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdCentroCostoGrupoBodega);}

			this.isVisibilidadFK_IdEmpleado=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdEmpleadoGrupoBodega);}

			this.isVisibilidadFK_IdPais=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdPaisGrupoBodega);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableDebito(Boolean isParaCuentaContableDebito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableDebitoNegation=!isParaCuentaContableDebito;

			this.isVisibilidadBusquedaPorCodigo=isParaCuentaContableDebitoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorCodigoGrupoBodega);}

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableDebitoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorNombreGrupoBodega);}

			this.isVisibilidadBusquedaPorRuc=isParaCuentaContableDebitoNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorRucGrupoBodega);}

			this.isVisibilidadBusquedaPorTelefono=isParaCuentaContableDebitoNegation;
			if(!this.isVisibilidadBusquedaPorTelefono) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorTelefonoGrupoBodega);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableDebitoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdCentroCostoGrupoBodega);}

			this.isVisibilidadFK_IdEmpleado=isParaCuentaContableDebitoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdEmpleadoGrupoBodega);}

			this.isVisibilidadFK_IdPais=isParaCuentaContableDebitoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdPaisGrupoBodega);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableCredito(Boolean isParaCuentaContableCredito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableCreditoNegation=!isParaCuentaContableCredito;

			this.isVisibilidadBusquedaPorCodigo=isParaCuentaContableCreditoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorCodigoGrupoBodega);}

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableCreditoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorNombreGrupoBodega);}

			this.isVisibilidadBusquedaPorRuc=isParaCuentaContableCreditoNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorRucGrupoBodega);}

			this.isVisibilidadBusquedaPorTelefono=isParaCuentaContableCreditoNegation;
			if(!this.isVisibilidadBusquedaPorTelefono) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorTelefonoGrupoBodega);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableCreditoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdCentroCostoGrupoBodega);}

			this.isVisibilidadFK_IdEmpleado=isParaCuentaContableCreditoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdEmpleadoGrupoBodega);}

			this.isVisibilidadFK_IdPais=isParaCuentaContableCreditoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdPaisGrupoBodega);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableProduccion(Boolean isParaCuentaContableProduccion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableProduccionNegation=!isParaCuentaContableProduccion;

			this.isVisibilidadBusquedaPorCodigo=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorCodigoGrupoBodega);}

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorNombreGrupoBodega);}

			this.isVisibilidadBusquedaPorRuc=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorRucGrupoBodega);}

			this.isVisibilidadBusquedaPorTelefono=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadBusquedaPorTelefono) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorTelefonoGrupoBodega);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdCentroCostoGrupoBodega);}

			this.isVisibilidadFK_IdEmpleado=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdEmpleadoGrupoBodega);}

			this.isVisibilidadFK_IdPais=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdPaisGrupoBodega);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableBonifica(Boolean isParaCuentaContableBonifica){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableBonificaNegation=!isParaCuentaContableBonifica;

			this.isVisibilidadBusquedaPorCodigo=isParaCuentaContableBonificaNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorCodigoGrupoBodega);}

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableBonificaNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorNombreGrupoBodega);}

			this.isVisibilidadBusquedaPorRuc=isParaCuentaContableBonificaNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorRucGrupoBodega);}

			this.isVisibilidadBusquedaPorTelefono=isParaCuentaContableBonificaNegation;
			if(!this.isVisibilidadBusquedaPorTelefono) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorTelefonoGrupoBodega);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableBonificaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdCentroCostoGrupoBodega);}

			this.isVisibilidadFK_IdEmpleado=isParaCuentaContableBonificaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdEmpleadoGrupoBodega);}

			this.isVisibilidadFK_IdPais=isParaCuentaContableBonificaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdPaisGrupoBodega);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableCostoBonifica(Boolean isParaCuentaContableCostoBonifica){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableCostoBonificaNegation=!isParaCuentaContableCostoBonifica;

			this.isVisibilidadBusquedaPorCodigo=isParaCuentaContableCostoBonificaNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorCodigoGrupoBodega);}

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableCostoBonificaNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorNombreGrupoBodega);}

			this.isVisibilidadBusquedaPorRuc=isParaCuentaContableCostoBonificaNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorRucGrupoBodega);}

			this.isVisibilidadBusquedaPorTelefono=isParaCuentaContableCostoBonificaNegation;
			if(!this.isVisibilidadBusquedaPorTelefono) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelBusquedaPorTelefonoGrupoBodega);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableCostoBonificaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdCentroCostoGrupoBodega);}

			this.isVisibilidadFK_IdEmpleado=isParaCuentaContableCostoBonificaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdEmpleadoGrupoBodega);}

			this.isVisibilidadFK_IdPais=isParaCuentaContableCostoBonificaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasGrupoBodega.remove(jPanelFK_IdPaisGrupoBodega);}
		}
		
	}
	
	

	public String registrarSesionGrupoBodegaParaBodegas() throws Exception {
		Boolean isPaginaPopupBodega=false;

		try {

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.bodegaSessionBean==null) {
				this.jInternalFrameDetalleFormGrupoBodega.bodegaSessionBean=new BodegaSessionBean();
			}

			this.jInternalFrameDetalleFormGrupoBodega.bodegaSessionBean.setsPathNavegacionActual(grupobodegaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+BodegaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormGrupoBodega.bodegaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupBodega=this.jInternalFrameDetalleFormGrupoBodega.bodegaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormGrupoBodega.bodegaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeBodega(true);
			this.jInternalFrameDetalleFormGrupoBodega.bodegaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeBodega(GrupoBodegaConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormGrupoBodega.bodegaSessionBean.setisBusquedaDesdeForeignKeySesionGrupoBodega(true);
			this.jInternalFrameDetalleFormGrupoBodega.bodegaSessionBean.setlidGrupoBodegaActual(this.idGrupoBodegaActual);

			grupobodegaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyGrupoBodega(true);
			grupobodegaSessionBean.setlIdGrupoBodegaActualForeignKey(this.idGrupoBodegaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionGrupoBodegaParaParametroInventarioDefectos() throws Exception {
		Boolean isPaginaPopupParametroInventarioDefecto=false;

		try {

			if(this.grupobodegaSessionBean==null) {
				this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
			}

			if(this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoSessionBean==null) {
				this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoSessionBean=new ParametroInventarioDefectoSessionBean();
			}

			this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoSessionBean.setsPathNavegacionActual(grupobodegaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ParametroInventarioDefectoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupParametroInventarioDefecto=this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeParametroInventarioDefecto(true);
			this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeParametroInventarioDefecto(GrupoBodegaConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoSessionBean.setisBusquedaDesdeForeignKeySesionGrupoBodega(true);
			this.jInternalFrameDetalleFormGrupoBodega.parametroinventariodefectoSessionBean.setlidGrupoBodegaActual(this.idGrupoBodegaActual);

			grupobodegaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyGrupoBodega(true);
			grupobodegaSessionBean.setlIdGrupoBodegaActualForeignKey(this.idGrupoBodegaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//GrupoBodegaSessionBean grupobodegaSessionBean=new GrupoBodegaSessionBean();
		
		if(this.grupobodegaSessionBean==null) {
			this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
		}
		
		this.grupobodegaSessionBean.setsUltimaBusquedaGrupoBodega(this.getsAccionBusqueda());
		this.grupobodegaSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.grupobodegaSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("BusquedaPorCodigo")) {
			grupobodegaSessionBean.setcodigo(this.getcodigoBusquedaPorCodigo());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
			grupobodegaSessionBean.setnombre(this.getnombreBusquedaPorNombre());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorRuc")) {
			grupobodegaSessionBean.setruc(this.getrucBusquedaPorRuc());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorTelefono")) {
			grupobodegaSessionBean.settelefono(this.gettelefonoBusquedaPorTelefono());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
			grupobodegaSessionBean.setid_centro_costo(this.getid_centro_costoFK_IdCentroCosto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
			grupobodegaSessionBean.setid_empleado(this.getid_empleadoFK_IdEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPais")) {
			grupobodegaSessionBean.setid_pais(this.getid_paisFK_IdPais());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//GrupoBodegaSessionBean grupobodegaSessionBean=new GrupoBodegaSessionBean();
		
		if(this.grupobodegaSessionBean==null) {
			this.grupobodegaSessionBean=new GrupoBodegaSessionBean();
		}
		
		if(this.grupobodegaSessionBean.getsUltimaBusquedaGrupoBodega()!=null&&!this.grupobodegaSessionBean.getsUltimaBusquedaGrupoBodega().equals("")) {
			this.setsAccionBusqueda(grupobodegaSessionBean.getsUltimaBusquedaGrupoBodega());
			this.setiNumeroPaginacion(grupobodegaSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(grupobodegaSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("BusquedaPorCodigo")) {
				this.setcodigoBusquedaPorCodigo(grupobodegaSessionBean.getcodigo());
				grupobodegaSessionBean.setcodigo("");
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
				this.setnombreBusquedaPorNombre(grupobodegaSessionBean.getnombre());
				grupobodegaSessionBean.setnombre("");
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorRuc")) {
				this.setrucBusquedaPorRuc(grupobodegaSessionBean.getruc());
				grupobodegaSessionBean.setruc("");
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorTelefono")) {
				this.settelefonoBusquedaPorTelefono(grupobodegaSessionBean.gettelefono());
				grupobodegaSessionBean.settelefono("");
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
				this.setid_centro_costoFK_IdCentroCosto(grupobodegaSessionBean.getid_centro_costo());
				grupobodegaSessionBean.setid_centro_costo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
				this.setid_empleadoFK_IdEmpleado(grupobodegaSessionBean.getid_empleado());
				grupobodegaSessionBean.setid_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPais")) {
				this.setid_paisFK_IdPais(grupobodegaSessionBean.getid_pais());
				grupobodegaSessionBean.setid_pais(-1L);
			}
		}
		
		this.grupobodegaSessionBean.setsUltimaBusquedaGrupoBodega("");
		this.grupobodegaSessionBean.setiNumeroPaginacion(GrupoBodegaConstantesFunciones.INUMEROPAGINACION);
		this.grupobodegaSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaGrupoBodega(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioGrupoBodega() {
		this.updateBorderResaltarBusquedasFormularioGrupoBodega();
		this.updateVisibilidadBusquedasFormularioGrupoBodega();
		this.updateHabilitarBusquedasFormularioGrupoBodega();
	}
	
	public void updateBorderResaltarBusquedasFormularioGrupoBodega() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasGrupoBodega.getComponents().length>0) {
	

		if(this.grupobodegaConstantesFunciones.resaltarBusquedaPorCodigoGrupoBodega!=null) {
			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorCodigoGrupoBodega);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
				jPanel.setBorder(this.grupobodegaConstantesFunciones.resaltarBusquedaPorCodigoGrupoBodega);
			}
		}

		if(this.grupobodegaConstantesFunciones.resaltarBusquedaPorNombreGrupoBodega!=null) {
			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorNombreGrupoBodega);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
				jPanel.setBorder(this.grupobodegaConstantesFunciones.resaltarBusquedaPorNombreGrupoBodega);
			}
		}

		if(this.grupobodegaConstantesFunciones.resaltarBusquedaPorRucGrupoBodega!=null) {
			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorRucGrupoBodega);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
				jPanel.setBorder(this.grupobodegaConstantesFunciones.resaltarBusquedaPorRucGrupoBodega);
			}
		}

		if(this.grupobodegaConstantesFunciones.resaltarBusquedaPorTelefonoGrupoBodega!=null) {
			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorTelefonoGrupoBodega);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
				jPanel.setBorder(this.grupobodegaConstantesFunciones.resaltarBusquedaPorTelefonoGrupoBodega);
			}
		}

		if(this.grupobodegaConstantesFunciones.resaltarFK_IdCentroCostoGrupoBodega!=null) {
			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelFK_IdCentroCostoGrupoBodega);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
				jPanel.setBorder(this.grupobodegaConstantesFunciones.resaltarFK_IdCentroCostoGrupoBodega);
			}
		}

		if(this.grupobodegaConstantesFunciones.resaltarFK_IdEmpleadoGrupoBodega!=null) {
			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelFK_IdEmpleadoGrupoBodega);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
				jPanel.setBorder(this.grupobodegaConstantesFunciones.resaltarFK_IdEmpleadoGrupoBodega);
			}
		}

		if(this.grupobodegaConstantesFunciones.resaltarFK_IdPaisGrupoBodega!=null) {
			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelFK_IdPaisGrupoBodega);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
				jPanel.setBorder(this.grupobodegaConstantesFunciones.resaltarFK_IdPaisGrupoBodega);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioGrupoBodega() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasGrupoBodega.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorCodigoGrupoBodega);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.grupobodegaConstantesFunciones.mostrarBusquedaPorCodigoGrupoBodega);
			if(!this.grupobodegaConstantesFunciones.mostrarBusquedaPorCodigoGrupoBodega && index>-1) {
				this.jTabbedPaneBusquedasGrupoBodega.remove(index);
			}

			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorNombreGrupoBodega);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.grupobodegaConstantesFunciones.mostrarBusquedaPorNombreGrupoBodega);
			if(!this.grupobodegaConstantesFunciones.mostrarBusquedaPorNombreGrupoBodega && index>-1) {
				this.jTabbedPaneBusquedasGrupoBodega.remove(index);
			}

			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorRucGrupoBodega);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.grupobodegaConstantesFunciones.mostrarBusquedaPorRucGrupoBodega);
			if(!this.grupobodegaConstantesFunciones.mostrarBusquedaPorRucGrupoBodega && index>-1) {
				this.jTabbedPaneBusquedasGrupoBodega.remove(index);
			}

			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorTelefonoGrupoBodega);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.grupobodegaConstantesFunciones.mostrarBusquedaPorTelefonoGrupoBodega);
			if(!this.grupobodegaConstantesFunciones.mostrarBusquedaPorTelefonoGrupoBodega && index>-1) {
				this.jTabbedPaneBusquedasGrupoBodega.remove(index);
			}

			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelFK_IdCentroCostoGrupoBodega);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.grupobodegaConstantesFunciones.mostrarFK_IdCentroCostoGrupoBodega);
			if(!this.grupobodegaConstantesFunciones.mostrarFK_IdCentroCostoGrupoBodega && index>-1) {
				this.jTabbedPaneBusquedasGrupoBodega.remove(index);
			}

			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelFK_IdEmpleadoGrupoBodega);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.grupobodegaConstantesFunciones.mostrarFK_IdEmpleadoGrupoBodega);
			if(!this.grupobodegaConstantesFunciones.mostrarFK_IdEmpleadoGrupoBodega && index>-1) {
				this.jTabbedPaneBusquedasGrupoBodega.remove(index);
			}

			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelFK_IdPaisGrupoBodega);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.grupobodegaConstantesFunciones.mostrarFK_IdPaisGrupoBodega);
			if(!this.grupobodegaConstantesFunciones.mostrarFK_IdPaisGrupoBodega && index>-1) {
				this.jTabbedPaneBusquedasGrupoBodega.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioGrupoBodega() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasGrupoBodega.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorCodigoGrupoBodega);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.grupobodegaConstantesFunciones.activarBusquedaPorCodigoGrupoBodega);
				this.jTabbedPaneBusquedasGrupoBodega.setEnabledAt(index,this.grupobodegaConstantesFunciones.activarBusquedaPorCodigoGrupoBodega);
			}

			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorNombreGrupoBodega);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.grupobodegaConstantesFunciones.activarBusquedaPorNombreGrupoBodega);
				this.jTabbedPaneBusquedasGrupoBodega.setEnabledAt(index,this.grupobodegaConstantesFunciones.activarBusquedaPorNombreGrupoBodega);
			}

			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorRucGrupoBodega);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.grupobodegaConstantesFunciones.activarBusquedaPorRucGrupoBodega);
				this.jTabbedPaneBusquedasGrupoBodega.setEnabledAt(index,this.grupobodegaConstantesFunciones.activarBusquedaPorRucGrupoBodega);
			}

			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorTelefonoGrupoBodega);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.grupobodegaConstantesFunciones.activarBusquedaPorTelefonoGrupoBodega);
				this.jTabbedPaneBusquedasGrupoBodega.setEnabledAt(index,this.grupobodegaConstantesFunciones.activarBusquedaPorTelefonoGrupoBodega);
			}

			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelFK_IdCentroCostoGrupoBodega);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.grupobodegaConstantesFunciones.activarFK_IdCentroCostoGrupoBodega);
				this.jTabbedPaneBusquedasGrupoBodega.setEnabledAt(index,this.grupobodegaConstantesFunciones.activarFK_IdCentroCostoGrupoBodega);
			}

			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelFK_IdEmpleadoGrupoBodega);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.grupobodegaConstantesFunciones.activarFK_IdEmpleadoGrupoBodega);
				this.jTabbedPaneBusquedasGrupoBodega.setEnabledAt(index,this.grupobodegaConstantesFunciones.activarFK_IdEmpleadoGrupoBodega);
			}

			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelFK_IdPaisGrupoBodega);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.grupobodegaConstantesFunciones.activarFK_IdPaisGrupoBodega);
				this.jTabbedPaneBusquedasGrupoBodega.setEnabledAt(index,this.grupobodegaConstantesFunciones.activarFK_IdPaisGrupoBodega);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaGrupoBodega(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("BusquedaPorCodigo")) {
			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorCodigoGrupoBodega);

			this.jTabbedPaneBusquedasGrupoBodega.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);

			this.grupobodegaConstantesFunciones.setResaltarBusquedaPorCodigoGrupoBodega(resaltar);

			jPanel.setBorder(this.grupobodegaConstantesFunciones.resaltarBusquedaPorCodigoGrupoBodega);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorNombre")) {
			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorNombreGrupoBodega);

			this.jTabbedPaneBusquedasGrupoBodega.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);

			this.grupobodegaConstantesFunciones.setResaltarBusquedaPorNombreGrupoBodega(resaltar);

			jPanel.setBorder(this.grupobodegaConstantesFunciones.resaltarBusquedaPorNombreGrupoBodega);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorRuc")) {
			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorRucGrupoBodega);

			this.jTabbedPaneBusquedasGrupoBodega.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);

			this.grupobodegaConstantesFunciones.setResaltarBusquedaPorRucGrupoBodega(resaltar);

			jPanel.setBorder(this.grupobodegaConstantesFunciones.resaltarBusquedaPorRucGrupoBodega);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorTelefono")) {
			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelBusquedaPorTelefonoGrupoBodega);

			this.jTabbedPaneBusquedasGrupoBodega.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);

			this.grupobodegaConstantesFunciones.setResaltarBusquedaPorTelefonoGrupoBodega(resaltar);

			jPanel.setBorder(this.grupobodegaConstantesFunciones.resaltarBusquedaPorTelefonoGrupoBodega);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCentroCosto")) {
			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelFK_IdCentroCostoGrupoBodega);

			this.jTabbedPaneBusquedasGrupoBodega.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);

			this.grupobodegaConstantesFunciones.setResaltarFK_IdCentroCostoGrupoBodega(resaltar);

			jPanel.setBorder(this.grupobodegaConstantesFunciones.resaltarFK_IdCentroCostoGrupoBodega);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpleado")) {
			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelFK_IdEmpleadoGrupoBodega);

			this.jTabbedPaneBusquedasGrupoBodega.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);

			this.grupobodegaConstantesFunciones.setResaltarFK_IdEmpleadoGrupoBodega(resaltar);

			jPanel.setBorder(this.grupobodegaConstantesFunciones.resaltarFK_IdEmpleadoGrupoBodega);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdPais")) {
			index= this.jTabbedPaneBusquedasGrupoBodega.indexOfComponent(this.jPanelFK_IdPaisGrupoBodega);

			this.jTabbedPaneBusquedasGrupoBodega.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGrupoBodega.getComponent(index);

			this.grupobodegaConstantesFunciones.setResaltarFK_IdPaisGrupoBodega(resaltar);

			jPanel.setBorder(this.grupobodegaConstantesFunciones.resaltarFK_IdPaisGrupoBodega);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarGrupoBodega.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioGrupoBodega() throws Exception {

		if(this.jInternalFrameDetalleFormGrupoBodega==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioGrupoBodega();
		this.updateVisibilidadResaltarControlesFormularioGrupoBodega();
		this.updateHabilitarResaltarControlesFormularioGrupoBodega();
		
	}
	
	public void updateBorderResaltarControlesFormularioGrupoBodega() throws Exception {
		if(this.jInternalFrameDetalleFormGrupoBodega==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.grupobodegaConstantesFunciones.resaltaridGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jLabelidGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltaridGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarid_empresaGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empresaGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarid_empresaGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarcodigoGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jTextFieldcodigoGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarcodigoGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarnombreGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jTextAreanombreGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarnombreGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarrucGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jTextFieldrucGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarrucGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltardireccionGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jTextAreadireccionGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltardireccionGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltartelefonoGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jTextFieldtelefonoGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltartelefonoGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarid_paisGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_paisGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarid_paisGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarid_ciudadGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_ciudadGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarid_ciudadGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarid_centro_costoGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_centro_costoGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarid_centro_costoGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarid_empleadoGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empleadoGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarid_empleadoGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltardescripcionGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jTextAreadescripcionGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltardescripcionGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_inventarioGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_inventarioGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_inventarioGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_costoGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costoGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_costoGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_ventaGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_ventaGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_ventaGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_descuentoGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_descuentoGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_descuentoGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_devolucionGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_devolucionGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_devolucionGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_debitoGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_debitoGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_debitoGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_creditoGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_creditoGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_creditoGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_produccionGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_produccionGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_produccionGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_bonificaGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_bonificaGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_bonificaGrupoBodega);}
		if(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_costo_bonificaGrupoBodega!=null && this.jInternalFrameDetalleFormGrupoBodega!=null) {this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega.setBorder(this.grupobodegaConstantesFunciones.resaltarid_cuenta_contable_costo_bonificaGrupoBodega);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioGrupoBodega() throws Exception {		
		if(this.jInternalFrameDetalleFormGrupoBodega==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
	
		//this.jInternalFrameDetalleFormGrupoBodega.jLabelidGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostraridGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelidGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostraridGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empresaGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_empresaGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelid_empresaGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_empresaGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jTextFieldcodigoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarcodigoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelcodigoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarcodigoGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jTextAreanombreGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarnombreGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelnombreGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarnombreGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jTextFieldrucGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarrucGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelrucGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarrucGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jTextAreadireccionGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrardireccionGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPaneldireccionGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrardireccionGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jTextFieldtelefonoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrartelefonoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPaneltelefonoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrartelefonoGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_paisGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_paisGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelid_paisGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_paisGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_ciudadGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_ciudadGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelid_ciudadGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_ciudadGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_centro_costoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_centro_costoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelid_centro_costoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_centro_costoGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empleadoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_empleadoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelid_empleadoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_empleadoGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jTextAreadescripcionGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrardescripcionGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPaneldescripcionGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrardescripcionGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_inventarioGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_inventarioGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelid_cuenta_contable_inventarioGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_inventarioGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_costoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelid_cuenta_contable_costoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_costoGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_ventaGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_ventaGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelid_cuenta_contable_ventaGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_ventaGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_descuentoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_descuentoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelid_cuenta_contable_descuentoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_descuentoGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_devolucionGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_devolucionGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelid_cuenta_contable_devolucionGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_devolucionGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_debitoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_debitoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelid_cuenta_contable_debitoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_debitoGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_creditoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_creditoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelid_cuenta_contable_creditoGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_creditoGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_produccionGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_produccionGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelid_cuenta_contable_produccionGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_produccionGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_bonificaGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_bonificaGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelid_cuenta_contable_bonificaGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_bonificaGrupoBodega);
		//this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_costo_bonificaGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jPanelid_cuenta_contable_costo_bonificaGrupoBodega.setVisible(this.grupobodegaConstantesFunciones.mostrarid_cuenta_contable_costo_bonificaGrupoBodega);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioGrupoBodega() throws Exception {
		if(this.jInternalFrameDetalleFormGrupoBodega==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormGrupoBodega!=null) {
	
		this.jInternalFrameDetalleFormGrupoBodega.jLabelidGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activaridGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empresaGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarid_empresaGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jTextFieldcodigoGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarcodigoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jTextAreanombreGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarnombreGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jTextFieldrucGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarrucGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jTextAreadireccionGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activardireccionGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jTextFieldtelefonoGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activartelefonoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_paisGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarid_paisGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_ciudadGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarid_ciudadGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_centro_costoGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarid_centro_costoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_empleadoGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarid_empleadoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jTextAreadescripcionGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activardescripcionGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_inventarioGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarid_cuenta_contable_inventarioGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costoGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarid_cuenta_contable_costoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_ventaGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarid_cuenta_contable_ventaGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_descuentoGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarid_cuenta_contable_descuentoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_devolucionGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarid_cuenta_contable_devolucionGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_debitoGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarid_cuenta_contable_debitoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_creditoGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarid_cuenta_contable_creditoGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_produccionGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarid_cuenta_contable_produccionGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_bonificaGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarid_cuenta_contable_bonificaGrupoBodega);
		this.jInternalFrameDetalleFormGrupoBodega.jComboBoxid_cuenta_contable_costo_bonificaGrupoBodega.setEnabled(this.grupobodegaConstantesFunciones.activarid_cuenta_contable_costo_bonificaGrupoBodega);
		}
	}
	
		
}