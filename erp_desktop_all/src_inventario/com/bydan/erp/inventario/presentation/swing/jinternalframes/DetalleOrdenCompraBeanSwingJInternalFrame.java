/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.inventario.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.inventario.util.DetalleOrdenCompraConstantesFunciones;
import com.bydan.erp.inventario.util.DetalleOrdenCompraParameterReturnGeneral;
//import com.bydan.erp.inventario.util.DetalleOrdenCompraParameterGeneral;
//import com.bydan.erp.inventario.presentation.report.source.DetalleOrdenCompraBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.inventario.resources.reportes.AuxiliarReportes;


import com.bydan.erp.inventario.util.*;
import com.bydan.erp.inventario.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.inventario.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class DetalleOrdenCompraBeanSwingJInternalFrame extends DetalleOrdenCompraJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(DetalleOrdenCompraBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<DetalleOrdenCompra> detalleordencompraValidator = new ClassValidator<DetalleOrdenCompra>(DetalleOrdenCompra.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public DetalleOrdenCompra detalleordencompra;	
	public DetalleOrdenCompra detalleordencompraAux;
	public DetalleOrdenCompra detalleordencompraAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public DetalleOrdenCompra detalleordencompraTotales;
	public Long idDetalleOrdenCompraActual;
	public Long iIdNuevoDetalleOrdenCompra=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboOrdenCompra="";

	public List<OrdenCompra> ordencomprasForeignKey;

	public List<OrdenCompra> getordencomprasForeignKey() {
		return ordencomprasForeignKey;
	}

	public void setordencomprasForeignKey(List<OrdenCompra> ordencomprasForeignKey) {
		this.ordencomprasForeignKey = ordencomprasForeignKey;
	}

	//OBJETO FK ACTUAL
	public OrdenCompra ordencompraForeignKey;

	public OrdenCompra getordencompraForeignKey() {
		return ordencompraForeignKey;
	}

	public void setordencompraForeignKey(OrdenCompra ordencompraForeignKey) {
		this.ordencompraForeignKey = ordencompraForeignKey;
	}

	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboBodega="";

	public List<Bodega> bodegasForeignKey;

	public List<Bodega> getbodegasForeignKey() {
		return bodegasForeignKey;
	}

	public void setbodegasForeignKey(List<Bodega> bodegasForeignKey) {
		this.bodegasForeignKey = bodegasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegaForeignKey;

	public Bodega getbodegaForeignKey() {
		return bodegaForeignKey;
	}

	public void setbodegaForeignKey(Bodega bodegaForeignKey) {
		this.bodegaForeignKey = bodegaForeignKey;
	}

	public String sFinalQueryComboProducto="";

	public List<Producto> productosForeignKey;

	public List<Producto> getproductosForeignKey() {
		return productosForeignKey;
	}

	public void setproductosForeignKey(List<Producto> productosForeignKey) {
		this.productosForeignKey = productosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Producto productoForeignKey;

	public Producto getproductoForeignKey() {
		return productoForeignKey;
	}

	public void setproductoForeignKey(Producto productoForeignKey) {
		this.productoForeignKey = productoForeignKey;
	}

	public String sFinalQueryComboUnidad="";

	public List<Unidad> unidadsForeignKey;

	public List<Unidad> getunidadsForeignKey() {
		return unidadsForeignKey;
	}

	public void setunidadsForeignKey(List<Unidad> unidadsForeignKey) {
		this.unidadsForeignKey = unidadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Unidad unidadForeignKey;

	public Unidad getunidadForeignKey() {
		return unidadForeignKey;
	}

	public void setunidadForeignKey(Unidad unidadForeignKey) {
		this.unidadForeignKey = unidadForeignKey;
	}

	public String sFinalQueryComboNovedadProducto="";

	public List<NovedadProducto> novedadproductosForeignKey;

	public List<NovedadProducto> getnovedadproductosForeignKey() {
		return novedadproductosForeignKey;
	}

	public void setnovedadproductosForeignKey(List<NovedadProducto> novedadproductosForeignKey) {
		this.novedadproductosForeignKey = novedadproductosForeignKey;
	}

	//OBJETO FK ACTUAL
	public NovedadProducto novedadproductoForeignKey;

	public NovedadProducto getnovedadproductoForeignKey() {
		return novedadproductoForeignKey;
	}

	public void setnovedadproductoForeignKey(NovedadProducto novedadproductoForeignKey) {
		this.novedadproductoForeignKey = novedadproductoForeignKey;
	}

	public String sFinalQueryComboEstadoDetalleOrdenCompra="";

	public List<EstadoDetalleOrdenCompra> estadodetalleordencomprasForeignKey;

	public List<EstadoDetalleOrdenCompra> getestadodetalleordencomprasForeignKey() {
		return estadodetalleordencomprasForeignKey;
	}

	public void setestadodetalleordencomprasForeignKey(List<EstadoDetalleOrdenCompra> estadodetalleordencomprasForeignKey) {
		this.estadodetalleordencomprasForeignKey = estadodetalleordencomprasForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoDetalleOrdenCompra estadodetalleordencompraForeignKey;

	public EstadoDetalleOrdenCompra getestadodetalleordencompraForeignKey() {
		return estadodetalleordencompraForeignKey;
	}

	public void setestadodetalleordencompraForeignKey(EstadoDetalleOrdenCompra estadodetalleordencompraForeignKey) {
		this.estadodetalleordencompraForeignKey = estadodetalleordencompraForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idProductoActual=0L;

	public Long getidProductoActual() {
		return idProductoActual;
	}

	public void setidProductoActual(Long idProductoActual) {
		this.idProductoActual= idProductoActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoDetalleOrdenCompra;
	public Boolean isPermisoNuevoDetalleOrdenCompra;
	public Boolean isPermisoActualizarDetalleOrdenCompra;
	public Boolean isPermisoActualizarOriginalDetalleOrdenCompra;
	public Boolean isPermisoEliminarDetalleOrdenCompra;
	public Boolean isPermisoGuardarCambiosDetalleOrdenCompra;
	public Boolean isPermisoConsultaDetalleOrdenCompra;
	public Boolean isPermisoBusquedaDetalleOrdenCompra;
	public Boolean isPermisoReporteDetalleOrdenCompra;
	public Boolean isPermisoPaginacionMedioDetalleOrdenCompra;
	public Boolean isPermisoPaginacionAltoDetalleOrdenCompra;
	public Boolean isPermisoPaginacionTodoDetalleOrdenCompra;
	public Boolean isPermisoCopiarDetalleOrdenCompra;
	public Boolean isPermisoVerFormDetalleOrdenCompra;
	public Boolean isPermisoDuplicarDetalleOrdenCompra;
	public Boolean isPermisoOrdenDetalleOrdenCompra;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public DetalleOrdenCompraParameterReturnGeneral detalleordencompraReturnGeneral;
	public DetalleOrdenCompraParameterReturnGeneral detalleordencompraParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoDetalleOrdenCompra=false;
	public Boolean esParaAccionDesdeFormularioDetalleOrdenCompra=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected DetalleOrdenCompraSessionBeanAdditional detalleordencompraSessionBeanAdditional=null;
	
	public DetalleOrdenCompraSessionBeanAdditional getDetalleOrdenCompraSessionBeanAdditional() {
		return this.detalleordencompraSessionBeanAdditional;
	}
	
	public void setDetalleOrdenCompraSessionBeanAdditional(DetalleOrdenCompraSessionBeanAdditional detalleordencompraSessionBeanAdditional) {
		try {
			this.detalleordencompraSessionBeanAdditional=detalleordencompraSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected DetalleOrdenCompraBeanSwingJInternalFrameAdditional detalleordencompraBeanSwingJInternalFrameAdditional=null;
	//public class DetalleOrdenCompraBeanSwingJInternalFrame
	
	public DetalleOrdenCompraBeanSwingJInternalFrameAdditional getDetalleOrdenCompraBeanSwingJInternalFrameAdditional() {
		return this.detalleordencompraBeanSwingJInternalFrameAdditional;
	}
	
	public void setDetalleOrdenCompraBeanSwingJInternalFrameAdditional(DetalleOrdenCompraBeanSwingJInternalFrameAdditional detalleordencompraBeanSwingJInternalFrameAdditional) {
		try {
			this.detalleordencompraBeanSwingJInternalFrameAdditional=detalleordencompraBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public DetalleOrdenCompraLogic detalleordencompraLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public DetalleOrdenCompra detalleordencompraBean;
	public DetalleOrdenCompraConstantesFunciones detalleordencompraConstantesFunciones;
	//public DetalleOrdenCompraParameterReturnGeneral detalleordencompraReturnGeneral;
	
	//FK
	
	public OrdenCompraLogic ordencompraLogic;
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public BodegaLogic bodegaLogic;
	public ProductoLogic productoLogic;
	public UnidadLogic unidadLogic;
	public NovedadProductoLogic novedadproductoLogic;
	public EstadoDetalleOrdenCompraLogic estadodetalleordencompraLogic;
	
	//PARAMETROS
	
	
	//public List<DetalleOrdenCompra> detalleordencompras;	
	//public List<DetalleOrdenCompra> detalleordencomprasEliminados;
	//public List<DetalleOrdenCompra> detalleordencomprasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoDetalleOrdenCompra=false;
	public Boolean isVisibilidadCeldaDuplicarDetalleOrdenCompra=true;
	public Boolean isVisibilidadCeldaCopiarDetalleOrdenCompra=true;
	public Boolean isVisibilidadCeldaVerFormDetalleOrdenCompra=true;
	public Boolean isVisibilidadCeldaOrdenDetalleOrdenCompra=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=false;
	public Boolean isVisibilidadCeldaModificarDetalleOrdenCompra=false;
	public Boolean isVisibilidadCeldaActualizarDetalleOrdenCompra=false;
	public Boolean isVisibilidadCeldaEliminarDetalleOrdenCompra=false;
	public Boolean isVisibilidadCeldaCancelarDetalleOrdenCompra=false;
	public Boolean isVisibilidadCeldaGuardarDetalleOrdenCompra=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdBodega=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoDetalleOrdenCompra=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdNovedadProducto=false;
	public Boolean isVisibilidadFK_IdOrdenCompra=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdProducto=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdUnidad=false;
	
	public Long getiIdNuevoDetalleOrdenCompra() {
		return this.iIdNuevoDetalleOrdenCompra;
	}

	public void setiIdNuevoDetalleOrdenCompra(Long iIdNuevoDetalleOrdenCompra) {
		this.iIdNuevoDetalleOrdenCompra = iIdNuevoDetalleOrdenCompra;
	}
	
	public Long getidDetalleOrdenCompraActual() {
		return this.idDetalleOrdenCompraActual;
	}

	public void setidDetalleOrdenCompraActual(Long idDetalleOrdenCompraActual) {
		this.idDetalleOrdenCompraActual = idDetalleOrdenCompraActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public DetalleOrdenCompra getdetalleordencompra() {
		return this.detalleordencompra;
	}

	public void setdetalleordencompra(DetalleOrdenCompra detalleordencompra) {
		this.detalleordencompra = detalleordencompra;
	}
	
	public DetalleOrdenCompra getdetalleordencompraAux() {
		return this.detalleordencompraAux;
	}

	public void setdetalleordencompraAux(DetalleOrdenCompra detalleordencompraAux) {
		this.detalleordencompraAux = detalleordencompraAux;
	}				
	
	public DetalleOrdenCompra getdetalleordencompraAnterior() {
		return this.detalleordencompraAnterior;
	}

	public void setdetalleordencompraAnterior(DetalleOrdenCompra detalleordencompraAnterior) {
		this.detalleordencompraAnterior = detalleordencompraAnterior;
	}	
	
	public DetalleOrdenCompra getdetalleordencompraTotales() {
		return this.detalleordencompraTotales;
	}

	public void setdetalleordencompraTotales(DetalleOrdenCompra detalleordencompraTotales) {
		this.detalleordencompraTotales = detalleordencompraTotales;
	}	
	
	public DetalleOrdenCompra getdetalleordencompraBean() {
		return this.detalleordencompraBean;
	}

	public void setdetalleordencompraBean(DetalleOrdenCompra detalleordencompraBean) {
		this.detalleordencompraBean = detalleordencompraBean;
	}	
	
	public DetalleOrdenCompraParameterReturnGeneral getdetalleordencompraReturnGeneral() {
		return this.detalleordencompraReturnGeneral;
	}

	public void setdetalleordencompraReturnGeneral(DetalleOrdenCompraParameterReturnGeneral detalleordencompraReturnGeneral) {
		this.detalleordencompraReturnGeneral = detalleordencompraReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_bodegaFK_IdBodega=-1L;

	public Long getid_bodegaFK_IdBodega() {
		return this.id_bodegaFK_IdBodega;
	}

	public void setid_bodegaFK_IdBodega(Long id_bodegaFK_IdBodega) {
		this.id_bodegaFK_IdBodega = id_bodegaFK_IdBodega;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra=-1L;

	public Long getid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra() {
		return this.id_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra;
	}

	public void setid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra(Long id_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra) {
		this.id_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra = id_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_novedad_productoFK_IdNovedadProducto=null;

	public Long getid_novedad_productoFK_IdNovedadProducto() {
		return this.id_novedad_productoFK_IdNovedadProducto;
	}

	public void setid_novedad_productoFK_IdNovedadProducto(Long id_novedad_productoFK_IdNovedadProducto) {
		this.id_novedad_productoFK_IdNovedadProducto = id_novedad_productoFK_IdNovedadProducto;
	}

	public Long id_orden_compraFK_IdOrdenCompra=-1L;

	public Long getid_orden_compraFK_IdOrdenCompra() {
		return this.id_orden_compraFK_IdOrdenCompra;
	}

	public void setid_orden_compraFK_IdOrdenCompra(Long id_orden_compraFK_IdOrdenCompra) {
		this.id_orden_compraFK_IdOrdenCompra = id_orden_compraFK_IdOrdenCompra;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_productoFK_IdProducto=-1L;

	public Long getid_productoFK_IdProducto() {
		return this.id_productoFK_IdProducto;
	}

	public void setid_productoFK_IdProducto(Long id_productoFK_IdProducto) {
		this.id_productoFK_IdProducto = id_productoFK_IdProducto;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_unidadFK_IdUnidad=-1L;

	public Long getid_unidadFK_IdUnidad() {
		return this.id_unidadFK_IdUnidad;
	}

	public void setid_unidadFK_IdUnidad(Long id_unidadFK_IdUnidad) {
		this.id_unidadFK_IdUnidad = id_unidadFK_IdUnidad;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public DetalleOrdenCompraLogic getDetalleOrdenCompraLogic()	{		
		return detalleordencompraLogic;
	}

	public void setDetalleOrdenCompraLogic(DetalleOrdenCompraLogic detalleordencompraLogic) {
		this.detalleordencompraLogic = detalleordencompraLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoDetalleOrdenCompra() {
		return isEsNuevoDetalleOrdenCompra;
	}

	public void setIsEsNuevoDetalleOrdenCompra(Boolean isEsNuevoDetalleOrdenCompra) {
		this.isEsNuevoDetalleOrdenCompra = isEsNuevoDetalleOrdenCompra;
	}

	public Boolean getEsParaAccionDesdeFormularioDetalleOrdenCompra() {
		return esParaAccionDesdeFormularioDetalleOrdenCompra;
	}
	
	public void setEsParaAccionDesdeFormularioDetalleOrdenCompra(Boolean esParaAccionDesdeFormularioDetalleOrdenCompra) {
		this.esParaAccionDesdeFormularioDetalleOrdenCompra = esParaAccionDesdeFormularioDetalleOrdenCompra;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosOrdenComprasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ordencomprasForeignKey=new ArrayList<OrdenCompra>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			OrdenCompraLogic ordencompraLogic=new OrdenCompraLogic();

			ordencompraLogic.getOrdenCompraDataAccess().setIsForForeingKeyData(true);

			if(this.detalleordencompraSessionBean==null) {
				this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionOrdenCompra()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenCompraDataAccess().setIsForForeingKeyData(true);

					ordencompraLogic.getTodosOrdenComprasWithConnection(sFinalQuery,new Pagination());

					this.ordencomprasForeignKey=ordencompraLogic.getOrdenCompras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaOrdenCompra(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getEntityWithConnection(detalleordencompraSessionBean.getlidOrdenCompraActual());
					this.ordencomprasForeignKey.add(ordencompraLogic.getOrdenCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detalleordencompraSessionBean==null) {
				this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(detalleordencompraSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.detalleordencompraSessionBean==null) {
				this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(detalleordencompraSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.detalleordencompraSessionBean==null) {
				this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(detalleordencompraSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.detalleordencompraSessionBean==null) {
				this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(detalleordencompraSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.detalleordencompraSessionBean==null) {
				this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(detalleordencompraSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.detalleordencompraSessionBean==null) {
				this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(detalleordencompraSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegasForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.detalleordencompraSessionBean==null) {
				this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegasForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodega(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(detalleordencompraSessionBean.getlidBodegaActual());
					this.bodegasForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.productosForeignKey=new ArrayList<Producto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ProductoLogic productoLogic=new ProductoLogic();

			//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

			if(this.detalleordencompraSessionBean==null) {
				this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

					productoLogic.getTodosProductosWithConnection(sFinalQuery,new Pagination());

					this.productosForeignKey=productoLogic.getProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(detalleordencompraSessionBean.getlidProductoActual());
					this.productosForeignKey.add(productoLogic.getProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUnidadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.unidadsForeignKey=new ArrayList<Unidad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UnidadLogic unidadLogic=new UnidadLogic();

			//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

			if(this.detalleordencompraSessionBean==null) {
				this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

					unidadLogic.getTodosUnidadsWithConnection(sFinalQuery,new Pagination());

					this.unidadsForeignKey=unidadLogic.getUnidads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUnidad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					unidadLogic.getEntityWithConnection(detalleordencompraSessionBean.getlidUnidadActual());
					this.unidadsForeignKey.add(unidadLogic.getUnidad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosNovedadProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.novedadproductosForeignKey=new ArrayList<NovedadProducto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			NovedadProducto novedadproductoNulo = new NovedadProducto();

			NovedadProductoLogic novedadproductoLogic=new NovedadProductoLogic();

			//novedadproductoLogic.getNovedadProductoDataAccess().setIsForForeingKeyData(true);

			if(this.detalleordencompraSessionBean==null) {
				this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionNovedadProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//novedadproductoLogic.getNovedadProductoDataAccess().setIsForForeingKeyData(true);

					novedadproductoLogic.getTodosNovedadProductosWithConnection(sFinalQuery,new Pagination());

					this.novedadproductosForeignKey=novedadproductoLogic.getNovedadProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.novedadproductosForeignKey.add(0, novedadproductoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaNovedadProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					novedadproductoLogic.getEntityWithConnection(detalleordencompraSessionBean.getlidNovedadProductoActual());
					this.novedadproductosForeignKey.add(novedadproductoLogic.getNovedadProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoDetalleOrdenComprasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadodetalleordencomprasForeignKey=new ArrayList<EstadoDetalleOrdenCompra>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoDetalleOrdenCompraLogic estadodetalleordencompraLogic=new EstadoDetalleOrdenCompraLogic();

			//estadodetalleordencompraLogic.getEstadoDetalleOrdenCompraDataAccess().setIsForForeingKeyData(true);

			if(this.detalleordencompraSessionBean==null) {
				this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoDetalleOrdenCompra()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadodetalleordencompraLogic.getEstadoDetalleOrdenCompraDataAccess().setIsForForeingKeyData(true);

					estadodetalleordencompraLogic.getTodosEstadoDetalleOrdenComprasWithConnection(sFinalQuery,new Pagination());

					this.estadodetalleordencomprasForeignKey=estadodetalleordencompraLogic.getEstadoDetalleOrdenCompras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoDetalleOrdenCompra(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadodetalleordencompraLogic.getEntityWithConnection(detalleordencompraSessionBean.getlidEstadoDetalleOrdenCompraActual());
					this.estadodetalleordencomprasForeignKey.add(estadodetalleordencompraLogic.getEstadoDetalleOrdenCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualOrdenCompraForeignKey(Long idOrdenCompraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			OrdenCompra  ordencompraTemp=null;

			for(OrdenCompra ordencompraAux:ordencomprasForeignKey) {
				if(ordencompraAux.getId()!=null && ordencompraAux.getId().equals(idOrdenCompraSeleccionado)) {
					ordencompraTemp=ordencompraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ordencompraTemp!=null) {

					if(this.detalleordencompra!=null) {
						this.detalleordencompra.setOrdenCompra(ordencompraTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_orden_compraDetalleOrdenCompra.setSelectedItem(ordencompraTemp);
					}
				} else {
					//jComboBoxid_orden_compraDetalleOrdenCompra.setSelectedItem(ordencompraTemp);
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_orden_compraDetalleOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_orden_compraDetalleOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdOrdenCompra") || sFormularioTipoBusqueda.equals("Todos")){
					if(ordencompraTemp!=null && jComboBoxid_orden_compraFK_IdOrdenCompraDetalleOrdenCompra!=null) {
						jComboBoxid_orden_compraFK_IdOrdenCompraDetalleOrdenCompra.setSelectedItem(ordencompraTemp);
					} else {
						if(jComboBoxid_orden_compraFK_IdOrdenCompraDetalleOrdenCompra!=null) {
							//jComboBoxid_orden_compraFK_IdOrdenCompraDetalleOrdenCompra.setSelectedItem(ordencompraTemp);
							if(jComboBoxid_orden_compraFK_IdOrdenCompraDetalleOrdenCompra.getItemCount()>0) {
								jComboBoxid_orden_compraFK_IdOrdenCompraDetalleOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualOrdenCompraForeignKeyDescripcion(Long idOrdenCompraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			OrdenCompra  ordencompraTemp=null;

			for(OrdenCompra ordencompraAux:ordencomprasForeignKey) {
				if(ordencompraAux.getId()!=null && ordencompraAux.getId().equals(idOrdenCompraSeleccionado)) {
					ordencompraTemp=ordencompraAux;
					break;
				}
			}


			sDescripcion=OrdenCompraConstantesFunciones.getOrdenCompraDescripcion(ordencompraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualOrdenCompraForeignKeyGenerico(Long idOrdenCompraSeleccionado,JComboBox jComboBoxid_orden_compraDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			OrdenCompra  ordencompraTemp=null;

			for(OrdenCompra ordencompraAux:ordencomprasForeignKey) {
				if(ordencompraAux.getId()!=null && ordencompraAux.getId().equals(idOrdenCompraSeleccionado)) {
					ordencompraTemp=ordencompraAux;
					break;
				}
			}

			if(ordencompraTemp!=null) {
				jComboBoxid_orden_compraDetalleOrdenCompraGenerico.setSelectedItem(ordencompraTemp);
			} else {
				if(jComboBoxid_orden_compraDetalleOrdenCompraGenerico!=null && jComboBoxid_orden_compraDetalleOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_orden_compraDetalleOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.detalleordencompra!=null) {
						this.detalleordencompra.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_empresaDetalleOrdenCompra.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaDetalleOrdenCompra.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_empresaDetalleOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_empresaDetalleOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaDetalleOrdenCompraGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaDetalleOrdenCompraGenerico!=null && jComboBoxid_empresaDetalleOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_empresaDetalleOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.detalleordencompra!=null) {
						this.detalleordencompra.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_sucursalDetalleOrdenCompra.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalDetalleOrdenCompra.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_sucursalDetalleOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_sucursalDetalleOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalDetalleOrdenCompraGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalDetalleOrdenCompraGenerico!=null && jComboBoxid_sucursalDetalleOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_sucursalDetalleOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.detalleordencompra!=null) {
						this.detalleordencompra.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioDetalleOrdenCompra.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioDetalleOrdenCompraGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioDetalleOrdenCompraGenerico!=null && jComboBoxid_ejercicioDetalleOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioDetalleOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.detalleordencompra!=null) {
						this.detalleordencompra.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoDetalleOrdenCompra.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoDetalleOrdenCompraGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoDetalleOrdenCompraGenerico!=null && jComboBoxid_periodoDetalleOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_periodoDetalleOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.detalleordencompra!=null) {
						this.detalleordencompra.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_anioDetalleOrdenCompra.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioDetalleOrdenCompra.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_anioDetalleOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_anioDetalleOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioDetalleOrdenCompraGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioDetalleOrdenCompraGenerico!=null && jComboBoxid_anioDetalleOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_anioDetalleOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.detalleordencompra!=null) {
						this.detalleordencompra.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_mesDetalleOrdenCompra.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesDetalleOrdenCompra.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_mesDetalleOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_mesDetalleOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesDetalleOrdenCompraGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesDetalleOrdenCompraGenerico!=null && jComboBoxid_mesDetalleOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_mesDetalleOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaForeignKey(Long idBodegaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegaTemp!=null) {

					if(this.detalleordencompra!=null) {
						this.detalleordencompra.setBodega(bodegaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.setSelectedItem(bodegaTemp);
					}
				} else {
					//jComboBoxid_bodegaDetalleOrdenCompra.setSelectedItem(bodegaTemp);
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegaTemp!=null && jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra!=null) {
						jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra.setSelectedItem(bodegaTemp);
					} else {
						if(jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra!=null) {
							//jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra.setSelectedItem(bodegaTemp);
							if(jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra.getItemCount()>0) {
								jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaForeignKeyDescripcion(Long idBodegaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaForeignKeyGenerico(Long idBodegaSeleccionado,JComboBox jComboBoxid_bodegaDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(bodegaTemp!=null) {
				jComboBoxid_bodegaDetalleOrdenCompraGenerico.setSelectedItem(bodegaTemp);
			} else {
				if(jComboBoxid_bodegaDetalleOrdenCompraGenerico!=null && jComboBoxid_bodegaDetalleOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_bodegaDetalleOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualProductoForeignKey(Long idProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(productoTemp!=null) {

					if(this.detalleordencompra!=null) {
						this.detalleordencompra.setProducto(productoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.setSelectedItem(productoTemp);
					}
				} else {
					//jComboBoxid_productoDetalleOrdenCompra.setSelectedItem(productoTemp);
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){
					if(productoTemp!=null && jComboBoxid_productoFK_IdProductoDetalleOrdenCompra!=null) {
						jComboBoxid_productoFK_IdProductoDetalleOrdenCompra.setSelectedItem(productoTemp);
					} else {
						if(jComboBoxid_productoFK_IdProductoDetalleOrdenCompra!=null) {
							//jComboBoxid_productoFK_IdProductoDetalleOrdenCompra.setSelectedItem(productoTemp);
							if(jComboBoxid_productoFK_IdProductoDetalleOrdenCompra.getItemCount()>0) {
								jComboBoxid_productoFK_IdProductoDetalleOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualProductoForeignKeyDescripcion(Long idProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}


			sDescripcion=ProductoConstantesFunciones.getProductoDescripcion(productoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualProductoForeignKeyGenerico(Long idProductoSeleccionado,JComboBox jComboBoxid_productoDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(productoTemp!=null) {
				jComboBoxid_productoDetalleOrdenCompraGenerico.setSelectedItem(productoTemp);
			} else {
				if(jComboBoxid_productoDetalleOrdenCompraGenerico!=null && jComboBoxid_productoDetalleOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_productoDetalleOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUnidadForeignKey(Long idUnidadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(unidadTemp!=null) {

					if(this.detalleordencompra!=null) {
						this.detalleordencompra.setUnidad(unidadTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_unidadDetalleOrdenCompra.setSelectedItem(unidadTemp);
					}
				} else {
					//jComboBoxid_unidadDetalleOrdenCompra.setSelectedItem(unidadTemp);
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_unidadDetalleOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_unidadDetalleOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){
					if(unidadTemp!=null && jComboBoxid_unidadFK_IdUnidadDetalleOrdenCompra!=null) {
						jComboBoxid_unidadFK_IdUnidadDetalleOrdenCompra.setSelectedItem(unidadTemp);
					} else {
						if(jComboBoxid_unidadFK_IdUnidadDetalleOrdenCompra!=null) {
							//jComboBoxid_unidadFK_IdUnidadDetalleOrdenCompra.setSelectedItem(unidadTemp);
							if(jComboBoxid_unidadFK_IdUnidadDetalleOrdenCompra.getItemCount()>0) {
								jComboBoxid_unidadFK_IdUnidadDetalleOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUnidadForeignKeyDescripcion(Long idUnidadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}


			sDescripcion=UnidadConstantesFunciones.getUnidadDescripcion(unidadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUnidadForeignKeyGenerico(Long idUnidadSeleccionado,JComboBox jComboBoxid_unidadDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(unidadTemp!=null) {
				jComboBoxid_unidadDetalleOrdenCompraGenerico.setSelectedItem(unidadTemp);
			} else {
				if(jComboBoxid_unidadDetalleOrdenCompraGenerico!=null && jComboBoxid_unidadDetalleOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_unidadDetalleOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualNovedadProductoForeignKey(Long idNovedadProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			NovedadProducto  novedadproductoTemp=null;

			for(NovedadProducto novedadproductoAux:novedadproductosForeignKey) {
				if(novedadproductoAux.getId()!=null && novedadproductoAux.getId().equals(idNovedadProductoSeleccionado)) {
					novedadproductoTemp=novedadproductoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(novedadproductoTemp!=null) {

					if(this.detalleordencompra!=null) {
						this.detalleordencompra.setNovedadProducto(novedadproductoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_novedad_productoDetalleOrdenCompra.setSelectedItem(novedadproductoTemp);
					}
				} else {
					//jComboBoxid_novedad_productoDetalleOrdenCompra.setSelectedItem(novedadproductoTemp);
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_novedad_productoDetalleOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_novedad_productoDetalleOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdNovedadProducto") || sFormularioTipoBusqueda.equals("Todos")){
					if(novedadproductoTemp!=null && jComboBoxid_novedad_productoFK_IdNovedadProductoDetalleOrdenCompra!=null) {
						jComboBoxid_novedad_productoFK_IdNovedadProductoDetalleOrdenCompra.setSelectedItem(novedadproductoTemp);
					} else {
						if(jComboBoxid_novedad_productoFK_IdNovedadProductoDetalleOrdenCompra!=null) {
							//jComboBoxid_novedad_productoFK_IdNovedadProductoDetalleOrdenCompra.setSelectedItem(novedadproductoTemp);
							if(jComboBoxid_novedad_productoFK_IdNovedadProductoDetalleOrdenCompra.getItemCount()>0) {
								jComboBoxid_novedad_productoFK_IdNovedadProductoDetalleOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualNovedadProductoForeignKeyDescripcion(Long idNovedadProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			NovedadProducto  novedadproductoTemp=null;

			for(NovedadProducto novedadproductoAux:novedadproductosForeignKey) {
				if(novedadproductoAux.getId()!=null && novedadproductoAux.getId().equals(idNovedadProductoSeleccionado)) {
					novedadproductoTemp=novedadproductoAux;
					break;
				}
			}


			sDescripcion=NovedadProductoConstantesFunciones.getNovedadProductoDescripcion(novedadproductoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualNovedadProductoForeignKeyGenerico(Long idNovedadProductoSeleccionado,JComboBox jComboBoxid_novedad_productoDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			NovedadProducto  novedadproductoTemp=null;

			for(NovedadProducto novedadproductoAux:novedadproductosForeignKey) {
				if(novedadproductoAux.getId()!=null && novedadproductoAux.getId().equals(idNovedadProductoSeleccionado)) {
					novedadproductoTemp=novedadproductoAux;
					break;
				}
			}

			if(novedadproductoTemp!=null) {
				jComboBoxid_novedad_productoDetalleOrdenCompraGenerico.setSelectedItem(novedadproductoTemp);
			} else {
				if(jComboBoxid_novedad_productoDetalleOrdenCompraGenerico!=null && jComboBoxid_novedad_productoDetalleOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_novedad_productoDetalleOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoDetalleOrdenCompraForeignKey(Long idEstadoDetalleOrdenCompraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoDetalleOrdenCompra  estadodetalleordencompraTemp=null;

			for(EstadoDetalleOrdenCompra estadodetalleordencompraAux:estadodetalleordencomprasForeignKey) {
				if(estadodetalleordencompraAux.getId()!=null && estadodetalleordencompraAux.getId().equals(idEstadoDetalleOrdenCompraSeleccionado)) {
					estadodetalleordencompraTemp=estadodetalleordencompraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadodetalleordencompraTemp!=null) {

					if(this.detalleordencompra!=null) {
						this.detalleordencompra.setEstadoDetalleOrdenCompra(estadodetalleordencompraTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra.setSelectedItem(estadodetalleordencompraTemp);
					}
				} else {
					//jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra.setSelectedItem(estadodetalleordencompraTemp);
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoDetalleOrdenCompra") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadodetalleordencompraTemp!=null && jComboBoxid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra!=null) {
						jComboBoxid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra.setSelectedItem(estadodetalleordencompraTemp);
					} else {
						if(jComboBoxid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra!=null) {
							//jComboBoxid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra.setSelectedItem(estadodetalleordencompraTemp);
							if(jComboBoxid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra.getItemCount()>0) {
								jComboBoxid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoDetalleOrdenCompraForeignKeyDescripcion(Long idEstadoDetalleOrdenCompraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoDetalleOrdenCompra  estadodetalleordencompraTemp=null;

			for(EstadoDetalleOrdenCompra estadodetalleordencompraAux:estadodetalleordencomprasForeignKey) {
				if(estadodetalleordencompraAux.getId()!=null && estadodetalleordencompraAux.getId().equals(idEstadoDetalleOrdenCompraSeleccionado)) {
					estadodetalleordencompraTemp=estadodetalleordencompraAux;
					break;
				}
			}


			sDescripcion=EstadoDetalleOrdenCompraConstantesFunciones.getEstadoDetalleOrdenCompraDescripcion(estadodetalleordencompraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoDetalleOrdenCompraForeignKeyGenerico(Long idEstadoDetalleOrdenCompraSeleccionado,JComboBox jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			EstadoDetalleOrdenCompra  estadodetalleordencompraTemp=null;

			for(EstadoDetalleOrdenCompra estadodetalleordencompraAux:estadodetalleordencomprasForeignKey) {
				if(estadodetalleordencompraAux.getId()!=null && estadodetalleordencompraAux.getId().equals(idEstadoDetalleOrdenCompraSeleccionado)) {
					estadodetalleordencompraTemp=estadodetalleordencompraAux;
					break;
				}
			}

			if(estadodetalleordencompraTemp!=null) {
				jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompraGenerico.setSelectedItem(estadodetalleordencompraTemp);
			} else {
				if(jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompraGenerico!=null && jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarOrdenCompraForeignKey(DetalleOrdenCompra detalleordencompra,JComboBox jComboBoxid_orden_compraDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			OrdenCompra  ordencompraAux=new OrdenCompra();

			if(jComboBoxid_orden_compraDetalleOrdenCompraGenerico==null) {
				ordencompraAux=(OrdenCompra)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_orden_compraDetalleOrdenCompra.getSelectedItem();
			} else {
				ordencompraAux=(OrdenCompra)jComboBoxid_orden_compraDetalleOrdenCompraGenerico.getSelectedItem();
			}

			if(ordencompraAux!=null && ordencompraAux.getId()!=null) {
				detalleordencompra.setid_orden_compra(ordencompraAux.getId());
				detalleordencompra.setordencompra_descripcion(DetalleOrdenCompraConstantesFunciones.getOrdenCompraDescripcion(ordencompraAux));
				detalleordencompra.setOrdenCompra(ordencompraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(DetalleOrdenCompra detalleordencompra,JComboBox jComboBoxid_empresaDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaDetalleOrdenCompraGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_empresaDetalleOrdenCompra.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaDetalleOrdenCompraGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				detalleordencompra.setid_empresa(empresaAux.getId());
				detalleordencompra.setempresa_descripcion(DetalleOrdenCompraConstantesFunciones.getEmpresaDescripcion(empresaAux));
				detalleordencompra.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(DetalleOrdenCompra detalleordencompra,JComboBox jComboBoxid_sucursalDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalDetalleOrdenCompraGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_sucursalDetalleOrdenCompra.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalDetalleOrdenCompraGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				detalleordencompra.setid_sucursal(sucursalAux.getId());
				detalleordencompra.setsucursal_descripcion(DetalleOrdenCompraConstantesFunciones.getSucursalDescripcion(sucursalAux));
				detalleordencompra.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(DetalleOrdenCompra detalleordencompra,JComboBox jComboBoxid_ejercicioDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioDetalleOrdenCompraGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioDetalleOrdenCompraGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				detalleordencompra.setid_ejercicio(ejercicioAux.getId());
				detalleordencompra.setejercicio_descripcion(DetalleOrdenCompraConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				detalleordencompra.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(DetalleOrdenCompra detalleordencompra,JComboBox jComboBoxid_periodoDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoDetalleOrdenCompraGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoDetalleOrdenCompraGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				detalleordencompra.setid_periodo(periodoAux.getId());
				detalleordencompra.setperiodo_descripcion(DetalleOrdenCompraConstantesFunciones.getPeriodoDescripcion(periodoAux));
				detalleordencompra.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(DetalleOrdenCompra detalleordencompra,JComboBox jComboBoxid_anioDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioDetalleOrdenCompraGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_anioDetalleOrdenCompra.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioDetalleOrdenCompraGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				detalleordencompra.setid_anio(anioAux.getId());
				detalleordencompra.setanio_descripcion(DetalleOrdenCompraConstantesFunciones.getAnioDescripcion(anioAux));
				detalleordencompra.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(DetalleOrdenCompra detalleordencompra,JComboBox jComboBoxid_mesDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesDetalleOrdenCompraGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_mesDetalleOrdenCompra.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesDetalleOrdenCompraGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				detalleordencompra.setid_mes(mesAux.getId());
				detalleordencompra.setmes_descripcion(DetalleOrdenCompraConstantesFunciones.getMesDescripcion(mesAux));
				detalleordencompra.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaForeignKey(DetalleOrdenCompra detalleordencompra,JComboBox jComboBoxid_bodegaDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodegaDetalleOrdenCompraGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodegaDetalleOrdenCompraGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				detalleordencompra.setid_bodega(bodegaAux.getId());
				detalleordencompra.setbodega_descripcion(DetalleOrdenCompraConstantesFunciones.getBodegaDescripcion(bodegaAux));
				detalleordencompra.setBodega(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarProductoForeignKey(DetalleOrdenCompra detalleordencompra,JComboBox jComboBoxid_productoDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Producto  productoAux=new Producto();

			if(jComboBoxid_productoDetalleOrdenCompraGenerico==null) {
				productoAux=(Producto)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.getSelectedItem();
			} else {
				productoAux=(Producto)jComboBoxid_productoDetalleOrdenCompraGenerico.getSelectedItem();
			}

			if(productoAux!=null && productoAux.getId()!=null) {
				detalleordencompra.setid_producto(productoAux.getId());
				detalleordencompra.setproducto_descripcion(DetalleOrdenCompraConstantesFunciones.getProductoDescripcion(productoAux));
				detalleordencompra.setProducto(productoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUnidadForeignKey(DetalleOrdenCompra detalleordencompra,JComboBox jComboBoxid_unidadDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			Unidad  unidadAux=new Unidad();

			if(jComboBoxid_unidadDetalleOrdenCompraGenerico==null) {
				unidadAux=(Unidad)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_unidadDetalleOrdenCompra.getSelectedItem();
			} else {
				unidadAux=(Unidad)jComboBoxid_unidadDetalleOrdenCompraGenerico.getSelectedItem();
			}

			if(unidadAux!=null && unidadAux.getId()!=null) {
				detalleordencompra.setid_unidad(unidadAux.getId());
				detalleordencompra.setunidad_descripcion(DetalleOrdenCompraConstantesFunciones.getUnidadDescripcion(unidadAux));
				detalleordencompra.setUnidad(unidadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarNovedadProductoForeignKey(DetalleOrdenCompra detalleordencompra,JComboBox jComboBoxid_novedad_productoDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			NovedadProducto  novedadproductoAux=new NovedadProducto();

			if(jComboBoxid_novedad_productoDetalleOrdenCompraGenerico==null) {
				novedadproductoAux=(NovedadProducto)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_novedad_productoDetalleOrdenCompra.getSelectedItem();
			} else {
				novedadproductoAux=(NovedadProducto)jComboBoxid_novedad_productoDetalleOrdenCompraGenerico.getSelectedItem();
			}

			if(novedadproductoAux!=null) {
				detalleordencompra.setid_novedad_producto(novedadproductoAux.getId());
				detalleordencompra.setnovedadproducto_descripcion(DetalleOrdenCompraConstantesFunciones.getNovedadProductoDescripcion(novedadproductoAux));
				detalleordencompra.setNovedadProducto(novedadproductoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoDetalleOrdenCompraForeignKey(DetalleOrdenCompra detalleordencompra,JComboBox jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompraGenerico)throws Exception
	{
		try
		{
			EstadoDetalleOrdenCompra  estadodetalleordencompraAux=new EstadoDetalleOrdenCompra();

			if(jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompraGenerico==null) {
				estadodetalleordencompraAux=(EstadoDetalleOrdenCompra)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra.getSelectedItem();
			} else {
				estadodetalleordencompraAux=(EstadoDetalleOrdenCompra)jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompraGenerico.getSelectedItem();
			}

			if(estadodetalleordencompraAux!=null && estadodetalleordencompraAux.getId()!=null) {
				detalleordencompra.setid_estado_detalle_orden_compra(estadodetalleordencompraAux.getId());
				detalleordencompra.setestadodetalleordencompra_descripcion(DetalleOrdenCompraConstantesFunciones.getEstadoDetalleOrdenCompraDescripcion(estadodetalleordencompraAux));
				detalleordencompra.setEstadoDetalleOrdenCompra(estadodetalleordencompraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameOrdenComprasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingOrdenCompra=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_orden_compraDetalleOrdenCompra.removeAllItems();

							for(OrdenCompra ordencompra:this.ordencomprasForeignKey) {
								this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_orden_compraDetalleOrdenCompra.addItem(ordencompra);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
					}

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdOrdenCompra") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_orden_compraFK_IdOrdenCompraDetalleOrdenCompra.removeAllItems();

							for(OrdenCompra ordencompra:this.ordencomprasForeignKey) {
								this.jComboBoxid_orden_compraFK_IdOrdenCompraDetalleOrdenCompra.addItem(ordencompra);
							}
						}

						if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_empresaDetalleOrdenCompra.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_empresaDetalleOrdenCompra.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
					}

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_sucursalDetalleOrdenCompra.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_sucursalDetalleOrdenCompra.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
					}

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
					}

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
					}

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_anioDetalleOrdenCompra.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_anioDetalleOrdenCompra.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
					}

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_mesDetalleOrdenCompra.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_mesDetalleOrdenCompra.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
					}

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.addItem(bodega);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
					}

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra.addItem(bodega);
							}
						}

						if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.addItem(producto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
					}

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_productoFK_IdProductoDetalleOrdenCompra.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jComboBoxid_productoFK_IdProductoDetalleOrdenCompra.addItem(producto);
							}
						}

						if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUnidadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUnidad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_unidadDetalleOrdenCompra.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_unidadDetalleOrdenCompra.addItem(unidad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
					}

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetalleOrdenCompra.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jComboBoxid_unidadFK_IdUnidadDetalleOrdenCompra.addItem(unidad);
							}
						}

						if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameNovedadProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingNovedadProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_novedad_productoDetalleOrdenCompra.removeAllItems();

							for(NovedadProducto novedadproducto:this.novedadproductosForeignKey) {
								this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_novedad_productoDetalleOrdenCompra.addItem(novedadproducto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
					}

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdNovedadProducto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_novedad_productoFK_IdNovedadProductoDetalleOrdenCompra.removeAllItems();

							for(NovedadProducto novedadproducto:this.novedadproductosForeignKey) {
								this.jComboBoxid_novedad_productoFK_IdNovedadProductoDetalleOrdenCompra.addItem(novedadproducto);
							}
						}

						if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoDetalleOrdenComprasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoDetalleOrdenCompra=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra.removeAllItems();

							for(EstadoDetalleOrdenCompra estadodetalleordencompra:this.estadodetalleordencomprasForeignKey) {
								this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra.addItem(estadodetalleordencompra);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { 
					}

					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoDetalleOrdenCompra") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra.removeAllItems();

							for(EstadoDetalleOrdenCompra estadodetalleordencompra:this.estadodetalleordencomprasForeignKey) {
								this.jComboBoxid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra.addItem(estadodetalleordencompra);
							}
						}

						if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameOrdenCompraForeignKey(OrdenCompra ordencompra,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_orden_compraDetalleOrdenCompra.setSelectedItem(ordencompra);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_orden_compraDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_orden_compraFK_IdOrdenCompraDetalleOrdenCompra.setSelectedItem(ordencompra);
						} else {
							this.jComboBoxid_orden_compraFK_IdOrdenCompraDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_empresaDetalleOrdenCompra.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_empresaDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_sucursalDetalleOrdenCompra.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_sucursalDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_anioDetalleOrdenCompra.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_anioDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_mesDetalleOrdenCompra.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_mesDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaForeignKey(Bodega bodega,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.setSelectedItem(bodega);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra.setSelectedItem(bodega);
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameProductoForeignKey(Producto producto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.setSelectedItem(producto);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_productoFK_IdProductoDetalleOrdenCompra.setSelectedItem(producto);
						} else {
							this.jComboBoxid_productoFK_IdProductoDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUnidadForeignKey(Unidad unidad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_unidadDetalleOrdenCompra.setSelectedItem(unidad);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_unidadDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_unidadFK_IdUnidadDetalleOrdenCompra.setSelectedItem(unidad);
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameNovedadProductoForeignKey(NovedadProducto novedadproducto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_novedad_productoDetalleOrdenCompra.setSelectedItem(novedadproducto);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_novedad_productoDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_novedad_productoFK_IdNovedadProductoDetalleOrdenCompra.setSelectedItem(novedadproducto);
						} else {
							this.jComboBoxid_novedad_productoFK_IdNovedadProductoDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoDetalleOrdenCompraForeignKey(EstadoDetalleOrdenCompra estadodetalleordencompra,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra.setSelectedItem(estadodetalleordencompra);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra.setSelectedItem(estadodetalleordencompra);
						} else {
							this.jComboBoxid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesDetalleOrdenCompra() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			DetalleOrdenCompraConstantesFunciones.refrescarForeignKeysDescripcionesDetalleOrdenCompra(this.detalleordencompraLogic.getDetalleOrdenCompras());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			DetalleOrdenCompraConstantesFunciones.refrescarForeignKeysDescripcionesDetalleOrdenCompra(this.detalleordencompras);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(OrdenCompra.class));
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(Bodega.class));
		classes.add(new Classe(Producto.class));
		classes.add(new Classe(Unidad.class));
		classes.add(new Classe(NovedadProducto.class));
		classes.add(new Classe(EstadoDetalleOrdenCompra.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//detalleordencompraLogic.setDetalleOrdenCompras(this.detalleordencompras);
			detalleordencompraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public DetalleOrdenCompraParameterReturnGeneral getDetalleOrdenCompraParameterGeneral() {
		return this.detalleordencompraParameterGeneral;
	}
	
	public void setDetalleOrdenCompraParameterGeneral(DetalleOrdenCompraParameterReturnGeneral detalleordencompraParameterGeneral) {
		this.detalleordencompraParameterGeneral = detalleordencompraParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoDetalleOrdenCompra() {
		return isPermisoTodoDetalleOrdenCompra;
	}

	public void setIsPermisoTodoDetalleOrdenCompra(Boolean isPermisoTodoDetalleOrdenCompra) {
		this.isPermisoTodoDetalleOrdenCompra = isPermisoTodoDetalleOrdenCompra;
	}

	public Boolean getIsPermisoNuevoDetalleOrdenCompra() {
		return isPermisoNuevoDetalleOrdenCompra;
	}

	public void setIsPermisoNuevoDetalleOrdenCompra(Boolean isPermisoNuevoDetalleOrdenCompra) {
		this.isPermisoNuevoDetalleOrdenCompra = isPermisoNuevoDetalleOrdenCompra;
	}

	public Boolean getIsPermisoActualizarDetalleOrdenCompra() {
		return isPermisoActualizarDetalleOrdenCompra;
	}

	public void setIsPermisoActualizarDetalleOrdenCompra(Boolean isPermisoActualizarDetalleOrdenCompra) {
		this.isPermisoActualizarDetalleOrdenCompra = isPermisoActualizarDetalleOrdenCompra;
	}

	public Boolean getIsPermisoEliminarDetalleOrdenCompra() {
		return isPermisoEliminarDetalleOrdenCompra;
	}

	public void setIsPermisoEliminarDetalleOrdenCompra(Boolean isPermisoEliminarDetalleOrdenCompra) {
		this.isPermisoEliminarDetalleOrdenCompra = isPermisoEliminarDetalleOrdenCompra;
	}

	public Boolean getIsPermisoGuardarCambiosDetalleOrdenCompra() {
		return isPermisoGuardarCambiosDetalleOrdenCompra;
	}

	public void setIsPermisoGuardarCambiosDetalleOrdenCompra(Boolean isPermisoGuardarCambiosDetalleOrdenCompra) {
		this.isPermisoGuardarCambiosDetalleOrdenCompra = isPermisoGuardarCambiosDetalleOrdenCompra;
	}
	
	public Boolean getIsPermisoConsultaDetalleOrdenCompra() {
		return isPermisoConsultaDetalleOrdenCompra;
	}

	public void setIsPermisoConsultaDetalleOrdenCompra(Boolean isPermisoConsultaDetalleOrdenCompra) {
		this.isPermisoConsultaDetalleOrdenCompra = isPermisoConsultaDetalleOrdenCompra;
	}

	public Boolean getIsPermisoBusquedaDetalleOrdenCompra() {
		return isPermisoBusquedaDetalleOrdenCompra;
	}

	public void setIsPermisoBusquedaDetalleOrdenCompra(Boolean isPermisoBusquedaDetalleOrdenCompra) {
		this.isPermisoBusquedaDetalleOrdenCompra = isPermisoBusquedaDetalleOrdenCompra;
	}

	public Boolean getIsPermisoReporteDetalleOrdenCompra() {
		return isPermisoReporteDetalleOrdenCompra;
	}

	public void setIsPermisoReporteDetalleOrdenCompra(Boolean isPermisoReporteDetalleOrdenCompra) {
		this.isPermisoReporteDetalleOrdenCompra = isPermisoReporteDetalleOrdenCompra;
	}
	
	public Boolean getIsPermisoPaginacionMedioDetalleOrdenCompra() {
		return isPermisoPaginacionMedioDetalleOrdenCompra;
	}

	public void setIsPermisoPaginacionMedioDetalleOrdenCompra(Boolean isPermisoPaginacionMedioDetalleOrdenCompra) {
		this.isPermisoPaginacionMedioDetalleOrdenCompra = isPermisoPaginacionMedioDetalleOrdenCompra;
	}
	
	public Boolean getIsPermisoPaginacionTodoDetalleOrdenCompra() {
		return isPermisoPaginacionTodoDetalleOrdenCompra;
	}

	public void setIsPermisoPaginacionTodoDetalleOrdenCompra(Boolean isPermisoPaginacionTodoDetalleOrdenCompra) {
		this.isPermisoPaginacionTodoDetalleOrdenCompra = isPermisoPaginacionTodoDetalleOrdenCompra;
	}
	
	public Boolean getIsPermisoPaginacionAltoDetalleOrdenCompra() {
		return isPermisoPaginacionAltoDetalleOrdenCompra;
	}

	public void setIsPermisoPaginacionAltoDetalleOrdenCompra(Boolean isPermisoPaginacionAltoDetalleOrdenCompra) {
		this.isPermisoPaginacionAltoDetalleOrdenCompra = isPermisoPaginacionAltoDetalleOrdenCompra;
	}
	
	public Boolean getIsPermisoCopiarDetalleOrdenCompra() {
		return isPermisoCopiarDetalleOrdenCompra;
	}

	public void setIsPermisoCopiarDetalleOrdenCompra(Boolean isPermisoCopiarDetalleOrdenCompra) {
		this.isPermisoCopiarDetalleOrdenCompra = isPermisoCopiarDetalleOrdenCompra;
	}
	
	public Boolean getIsPermisoVerFormDetalleOrdenCompra() {
		return isPermisoVerFormDetalleOrdenCompra;
	}

	public void setIsPermisoVerFormDetalleOrdenCompra(Boolean isPermisoVerFormDetalleOrdenCompra) {
		this.isPermisoVerFormDetalleOrdenCompra = isPermisoVerFormDetalleOrdenCompra;
	}
	
	public Boolean getIsPermisoDuplicarDetalleOrdenCompra() {
		return isPermisoDuplicarDetalleOrdenCompra;
	}

	public void setIsPermisoDuplicarDetalleOrdenCompra(Boolean isPermisoDuplicarDetalleOrdenCompra) {
		this.isPermisoDuplicarDetalleOrdenCompra = isPermisoDuplicarDetalleOrdenCompra;
	}
	
	public Boolean getIsPermisoOrdenDetalleOrdenCompra() {
		return isPermisoOrdenDetalleOrdenCompra;
	}

	public void setIsPermisoOrdenDetalleOrdenCompra(Boolean isPermisoOrdenDetalleOrdenCompra) {
		this.isPermisoOrdenDetalleOrdenCompra = isPermisoOrdenDetalleOrdenCompra;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoDetalleOrdenCompra() {
		return isVisibilidadCeldaNuevoDetalleOrdenCompra;
	}

	public void setIsVisibilidadCeldaNuevoDetalleOrdenCompra(Boolean isVisibilidadCeldaNuevoDetalleOrdenCompra) {
		this.isVisibilidadCeldaNuevoDetalleOrdenCompra = isVisibilidadCeldaNuevoDetalleOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarDetalleOrdenCompra() {
		return isVisibilidadCeldaDuplicarDetalleOrdenCompra;
	}

	public void setIsVisibilidadCeldaDuplicarDetalleOrdenCompra(Boolean isVisibilidadCeldaDuplicarDetalleOrdenCompra) {
		this.isVisibilidadCeldaDuplicarDetalleOrdenCompra = isVisibilidadCeldaDuplicarDetalleOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarDetalleOrdenCompra() {
		return isVisibilidadCeldaCopiarDetalleOrdenCompra;
	}

	public void setIsVisibilidadCeldaCopiarDetalleOrdenCompra(Boolean isVisibilidadCeldaCopiarDetalleOrdenCompra) {
		this.isVisibilidadCeldaCopiarDetalleOrdenCompra = isVisibilidadCeldaCopiarDetalleOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormDetalleOrdenCompra() {
		return isVisibilidadCeldaVerFormDetalleOrdenCompra;
	}

	public void setIsVisibilidadCeldaVerFormDetalleOrdenCompra(Boolean isVisibilidadCeldaVerFormDetalleOrdenCompra) {
		this.isVisibilidadCeldaVerFormDetalleOrdenCompra = isVisibilidadCeldaVerFormDetalleOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenDetalleOrdenCompra() {
		return isVisibilidadCeldaOrdenDetalleOrdenCompra;
	}

	public void setIsVisibilidadCeldaOrdenDetalleOrdenCompra(Boolean isVisibilidadCeldaOrdenDetalleOrdenCompra) {
		this.isVisibilidadCeldaOrdenDetalleOrdenCompra = isVisibilidadCeldaOrdenDetalleOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra() {
		return isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra(Boolean isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra) {
		this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra = isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaModificarDetalleOrdenCompra() {
		return isVisibilidadCeldaModificarDetalleOrdenCompra;
	}

	public void setIsVisibilidadCeldaModificarDetalleOrdenCompra(Boolean isVisibilidadCeldaModificarDetalleOrdenCompra) {
		this.isVisibilidadCeldaModificarDetalleOrdenCompra = isVisibilidadCeldaModificarDetalleOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarDetalleOrdenCompra() {
		return isVisibilidadCeldaActualizarDetalleOrdenCompra;
	}

	public void setIsVisibilidadCeldaActualizarDetalleOrdenCompra(Boolean isVisibilidadCeldaActualizarDetalleOrdenCompra) {
		this.isVisibilidadCeldaActualizarDetalleOrdenCompra = isVisibilidadCeldaActualizarDetalleOrdenCompra;
	}

	public Boolean getIsVisibilidadCeldaEliminarDetalleOrdenCompra() {
		return isVisibilidadCeldaEliminarDetalleOrdenCompra;
	}

	public void setIsVisibilidadCeldaEliminarDetalleOrdenCompra(Boolean isVisibilidadCeldaEliminarDetalleOrdenCompra) {
		this.isVisibilidadCeldaEliminarDetalleOrdenCompra = isVisibilidadCeldaEliminarDetalleOrdenCompra;
	}

	public Boolean getIsVisibilidadCeldaCancelarDetalleOrdenCompra() {
		return isVisibilidadCeldaCancelarDetalleOrdenCompra;
	}

	public void setIsVisibilidadCeldaCancelarDetalleOrdenCompra(Boolean isVisibilidadCeldaCancelarDetalleOrdenCompra) {
		this.isVisibilidadCeldaCancelarDetalleOrdenCompra = isVisibilidadCeldaCancelarDetalleOrdenCompra;
	}

	public Boolean getIsVisibilidadCeldaGuardarDetalleOrdenCompra() {
		return isVisibilidadCeldaGuardarDetalleOrdenCompra;
	}

	public void setIsVisibilidadCeldaGuardarDetalleOrdenCompra(Boolean isVisibilidadCeldaGuardarDetalleOrdenCompra) {
		this.isVisibilidadCeldaGuardarDetalleOrdenCompra = isVisibilidadCeldaGuardarDetalleOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosDetalleOrdenCompra() {
		return isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra;
	}

	public void setIsVisibilidadCeldaGuardarCambiosDetalleOrdenCompra(Boolean isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra) {
		this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra = isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra;
	}
		
	public DetalleOrdenCompraSessionBean getdetalleordencompraSessionBean() {
		return this.detalleordencompraSessionBean;
	}
	
	public void setdetalleordencompraSessionBean(DetalleOrdenCompraSessionBean detalleordencompraSessionBean) {
		this.detalleordencompraSessionBean=detalleordencompraSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdBodega() {
		return this.isVisibilidadFK_IdBodega;
	}

	public void setisVisibilidadFK_IdBodega(Boolean isVisibilidadFK_IdBodega) {
		this.isVisibilidadFK_IdBodega=isVisibilidadFK_IdBodega;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoDetalleOrdenCompra() {
		return this.isVisibilidadFK_IdEstadoDetalleOrdenCompra;
	}

	public void setisVisibilidadFK_IdEstadoDetalleOrdenCompra(Boolean isVisibilidadFK_IdEstadoDetalleOrdenCompra) {
		this.isVisibilidadFK_IdEstadoDetalleOrdenCompra=isVisibilidadFK_IdEstadoDetalleOrdenCompra;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdNovedadProducto() {
		return this.isVisibilidadFK_IdNovedadProducto;
	}

	public void setisVisibilidadFK_IdNovedadProducto(Boolean isVisibilidadFK_IdNovedadProducto) {
		this.isVisibilidadFK_IdNovedadProducto=isVisibilidadFK_IdNovedadProducto;
	}

	public Boolean getisVisibilidadFK_IdOrdenCompra() {
		return this.isVisibilidadFK_IdOrdenCompra;
	}

	public void setisVisibilidadFK_IdOrdenCompra(Boolean isVisibilidadFK_IdOrdenCompra) {
		this.isVisibilidadFK_IdOrdenCompra=isVisibilidadFK_IdOrdenCompra;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdProducto() {
		return this.isVisibilidadFK_IdProducto;
	}

	public void setisVisibilidadFK_IdProducto(Boolean isVisibilidadFK_IdProducto) {
		this.isVisibilidadFK_IdProducto=isVisibilidadFK_IdProducto;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdUnidad() {
		return this.isVisibilidadFK_IdUnidad;
	}

	public void setisVisibilidadFK_IdUnidad(Boolean isVisibilidadFK_IdUnidad) {
		this.isVisibilidadFK_IdUnidad=isVisibilidadFK_IdUnidad;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra)throws Exception {
		try {
			
				this.setActualParaGuardarOrdenCompraForeignKey(detalleordencompra,null);
				this.setActualParaGuardarEmpresaForeignKey(detalleordencompra,null);
				this.setActualParaGuardarSucursalForeignKey(detalleordencompra,null);
				this.setActualParaGuardarEjercicioForeignKey(detalleordencompra,null);
				this.setActualParaGuardarPeriodoForeignKey(detalleordencompra,null);
				this.setActualParaGuardarAnioForeignKey(detalleordencompra,null);
				this.setActualParaGuardarMesForeignKey(detalleordencompra,null);
				this.setActualParaGuardarBodegaForeignKey(detalleordencompra,null);
				this.setActualParaGuardarProductoForeignKey(detalleordencompra,null);
				this.setActualParaGuardarUnidadForeignKey(detalleordencompra,null);
				this.setActualParaGuardarNovedadProductoForeignKey(detalleordencompra,null);
				this.setActualParaGuardarEstadoDetalleOrdenCompraForeignKey(detalleordencompra,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		/*
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		*/
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			/*
			//this.cargarLicenciaCliente(this.datosCliente);
			*/
	}
	
	public void bugActualizarReferenciaActual(DetalleOrdenCompra detalleordencompra,DetalleOrdenCompra detalleordencompraAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalDetalleOrdenCompra(detalleordencompra);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		detalleordencompraAux.setId(detalleordencompra.getId());
		detalleordencompraAux.setVersionRow(detalleordencompra.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessDetalleOrdenCompra();
		
			int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = detalleordencompraValidator.getInvalidValues(this.detalleordencompra);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			detalleordencompraLogic.setDatosCliente(datosCliente);
			detalleordencompraLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				detalleordencompraAux=new  DetalleOrdenCompra();
				
				detalleordencompraAux.setIsNew(true);
				detalleordencompraAux.setIsChanged(true);
				
				detalleordencompraAux.setDetalleOrdenCompraOriginal(this.detalleordencompra);
				
				detalleordencompraAux.setId(this.detalleordencompra.getId());	
				detalleordencompraAux.setVersionRow(this.detalleordencompra.getVersionRow());	
				detalleordencompraAux.setid_orden_compra(this.detalleordencompra.getid_orden_compra());	
				detalleordencompraAux.setid_empresa(this.detalleordencompra.getid_empresa());	
				detalleordencompraAux.setid_sucursal(this.detalleordencompra.getid_sucursal());	
				detalleordencompraAux.setid_ejercicio(this.detalleordencompra.getid_ejercicio());	
				detalleordencompraAux.setid_periodo(this.detalleordencompra.getid_periodo());	
				detalleordencompraAux.setid_anio(this.detalleordencompra.getid_anio());	
				detalleordencompraAux.setid_mes(this.detalleordencompra.getid_mes());	
				detalleordencompraAux.setid_bodega(this.detalleordencompra.getid_bodega());	
				detalleordencompraAux.setid_producto(this.detalleordencompra.getid_producto());	
				detalleordencompraAux.setid_unidad(this.detalleordencompra.getid_unidad());	
				detalleordencompraAux.setdescripcion(this.detalleordencompra.getdescripcion());	
				detalleordencompraAux.setcantidad(this.detalleordencompra.getcantidad());	
				detalleordencompraAux.setdescuento(this.detalleordencompra.getdescuento());	
				detalleordencompraAux.setcosto_unitario(this.detalleordencompra.getcosto_unitario());	
				detalleordencompraAux.setiva(this.detalleordencompra.getiva());	
				detalleordencompraAux.setiva_valor(this.detalleordencompra.getiva_valor());	
				detalleordencompraAux.setcosto_total(this.detalleordencompra.getcosto_total());	
				detalleordencompraAux.setdisponible(this.detalleordencompra.getdisponible());	
				
				if(this.detalleordencompra.getid_novedad_producto()!=null && this.detalleordencompra.getid_novedad_producto()>0L) {
					detalleordencompraAux.setid_novedad_producto(this.detalleordencompra.getid_novedad_producto());
				} else {
					detalleordencompraAux.setid_novedad_producto(null);
				}	
				detalleordencompraAux.setid_estado_detalle_orden_compra(this.detalleordencompra.getid_estado_detalle_orden_compra());	
				detalleordencompraAux.setnumero_comprobante(this.detalleordencompra.getnumero_comprobante());	
				detalleordencompraAux.setlote_cliente(this.detalleordencompra.getlote_cliente());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detalleordencompraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detalleordencompraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(detalleordencompraAux,detalleordencompraLogic.getDetalleOrdenCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleordencompraAux,detalleordencompras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.detalleordencompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detalleordencompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencompraLogic.saveDetalleOrdenCompras();//WithConnection
						//detalleordencompraLogic.getSetVersionRowDetalleOrdenCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detalleordencompra,detalleordencompraAux);
					
					this.refrescarForeignKeysDescripcionesDetalleOrdenCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detalleordencompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detalleordencompraLogic.saveDetalleOrdenCompraRelaciones(detalleordencompraAux);//WithConnection
								//detalleordencompraLogic.getSetVersionRowDetalleOrdenCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detalleordencompra,detalleordencompraAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detalleordencompraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detalleordencompraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detalleordencompraAux,detalleordencompraLogic.getDetalleOrdenCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detalleordencompraAux,detalleordencompras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detalleordencompra,detalleordencompraAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				detalleordencompraAux=new  DetalleOrdenCompra();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.detalleordencompraSessionBean.getEsGuardarRelacionado() 
					|| (this.detalleordencompraSessionBean.getEsGuardarRelacionado() && this.detalleordencompra.getId()>=0)) {
						
					detalleordencompraAux.setIsNew(false);
				}
				
				detalleordencompraAux.setIsDeleted(false);
			
				detalleordencompraAux.setId(this.detalleordencompra.getId());	
				detalleordencompraAux.setVersionRow(this.detalleordencompra.getVersionRow());	
				detalleordencompraAux.setid_orden_compra(this.detalleordencompra.getid_orden_compra());	
				detalleordencompraAux.setid_empresa(this.detalleordencompra.getid_empresa());	
				detalleordencompraAux.setid_sucursal(this.detalleordencompra.getid_sucursal());	
				detalleordencompraAux.setid_ejercicio(this.detalleordencompra.getid_ejercicio());	
				detalleordencompraAux.setid_periodo(this.detalleordencompra.getid_periodo());	
				detalleordencompraAux.setid_anio(this.detalleordencompra.getid_anio());	
				detalleordencompraAux.setid_mes(this.detalleordencompra.getid_mes());	
				detalleordencompraAux.setid_bodega(this.detalleordencompra.getid_bodega());	
				detalleordencompraAux.setid_producto(this.detalleordencompra.getid_producto());	
				detalleordencompraAux.setid_unidad(this.detalleordencompra.getid_unidad());	
				detalleordencompraAux.setdescripcion(this.detalleordencompra.getdescripcion());	
				detalleordencompraAux.setcantidad(this.detalleordencompra.getcantidad());	
				detalleordencompraAux.setdescuento(this.detalleordencompra.getdescuento());	
				detalleordencompraAux.setcosto_unitario(this.detalleordencompra.getcosto_unitario());	
				detalleordencompraAux.setiva(this.detalleordencompra.getiva());	
				detalleordencompraAux.setiva_valor(this.detalleordencompra.getiva_valor());	
				detalleordencompraAux.setcosto_total(this.detalleordencompra.getcosto_total());	
				detalleordencompraAux.setdisponible(this.detalleordencompra.getdisponible());	
				
				if(this.detalleordencompra.getid_novedad_producto()!=null && this.detalleordencompra.getid_novedad_producto()>0L) {
					detalleordencompraAux.setid_novedad_producto(this.detalleordencompra.getid_novedad_producto());
				} else {
					detalleordencompraAux.setid_novedad_producto(null);
				}	
				detalleordencompraAux.setid_estado_detalle_orden_compra(this.detalleordencompra.getid_estado_detalle_orden_compra());	
				detalleordencompraAux.setnumero_comprobante(this.detalleordencompra.getnumero_comprobante());	
				detalleordencompraAux.setlote_cliente(this.detalleordencompra.getlote_cliente());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detalleordencompraAux,detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleordencompraAux,detalleordencompras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.detalleordencompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detalleordencompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencompraLogic.saveDetalleOrdenCompras();//WithConnection
						//detalleordencompraLogic.getSetVersionRowDetalleOrdenCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detalleordencompra,detalleordencompraAux);
					
					this.refrescarForeignKeysDescripcionesDetalleOrdenCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detalleordencompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detalleordencompraLogic.saveDetalleOrdenCompraRelaciones(detalleordencompraAux);//WithConnection
								//detalleordencompraLogic.getSetVersionRowDetalleOrdenCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detalleordencompra,detalleordencompraAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detalleordencompraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detalleordencompraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detalleordencompraAux,detalleordencompraLogic.getDetalleOrdenCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detalleordencompraAux,detalleordencompras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detalleordencompra,detalleordencompraAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				detalleordencompraAux=new  DetalleOrdenCompra();
				
				detalleordencompraAux.setIsNew(false);
				detalleordencompraAux.setIsChanged(false);
				
				detalleordencompraAux.setIsDeleted(true);
				
				detalleordencompraAux.setId(this.detalleordencompra.getId());	
				detalleordencompraAux.setVersionRow(this.detalleordencompra.getVersionRow());	
				detalleordencompraAux.setid_orden_compra(this.detalleordencompra.getid_orden_compra());	
				detalleordencompraAux.setid_empresa(this.detalleordencompra.getid_empresa());	
				detalleordencompraAux.setid_sucursal(this.detalleordencompra.getid_sucursal());	
				detalleordencompraAux.setid_ejercicio(this.detalleordencompra.getid_ejercicio());	
				detalleordencompraAux.setid_periodo(this.detalleordencompra.getid_periodo());	
				detalleordencompraAux.setid_anio(this.detalleordencompra.getid_anio());	
				detalleordencompraAux.setid_mes(this.detalleordencompra.getid_mes());	
				detalleordencompraAux.setid_bodega(this.detalleordencompra.getid_bodega());	
				detalleordencompraAux.setid_producto(this.detalleordencompra.getid_producto());	
				detalleordencompraAux.setid_unidad(this.detalleordencompra.getid_unidad());	
				detalleordencompraAux.setdescripcion(this.detalleordencompra.getdescripcion());	
				detalleordencompraAux.setcantidad(this.detalleordencompra.getcantidad());	
				detalleordencompraAux.setdescuento(this.detalleordencompra.getdescuento());	
				detalleordencompraAux.setcosto_unitario(this.detalleordencompra.getcosto_unitario());	
				detalleordencompraAux.setiva(this.detalleordencompra.getiva());	
				detalleordencompraAux.setiva_valor(this.detalleordencompra.getiva_valor());	
				detalleordencompraAux.setcosto_total(this.detalleordencompra.getcosto_total());	
				detalleordencompraAux.setdisponible(this.detalleordencompra.getdisponible());	
				
				if(this.detalleordencompra.getid_novedad_producto()!=null && this.detalleordencompra.getid_novedad_producto()>0L) {
					detalleordencompraAux.setid_novedad_producto(this.detalleordencompra.getid_novedad_producto());
				} else {
					detalleordencompraAux.setid_novedad_producto(null);
				}	
				detalleordencompraAux.setid_estado_detalle_orden_compra(this.detalleordencompra.getid_estado_detalle_orden_compra());	
				detalleordencompraAux.setnumero_comprobante(this.detalleordencompra.getnumero_comprobante());	
				detalleordencompraAux.setlote_cliente(this.detalleordencompra.getlote_cliente());	
				
				if(this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.detalleordencompraAux.getId()>=0) {	
						this.detalleordencomprasEliminados.add(detalleordencompraAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(detalleordencompraAux,detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleordencompraAux,detalleordencompras);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.detalleordencompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detalleordencompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencompraLogic.saveDetalleOrdenCompras();//WithConnection
						//detalleordencompraLogic.getSetVersionRowDetalleOrdenCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detalleordencompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detalleordencompraLogic.saveDetalleOrdenCompraRelaciones(detalleordencompraAux);//WithConnection
								//detalleordencompraLogic.getSetVersionRowDetalleOrdenCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.detalleordencompraSessionBean.getEstaModoGuardarRelaciones() 
								|| this.detalleordencompraSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(detalleordencompraAux,detalleordencompraLogic.getDetalleOrdenCompras());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(detalleordencompraAux,detalleordencompras);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getDetalleOrdenCompras().addAll(this.detalleordencomprasEliminados);
					
					detalleordencompraLogic.saveDetalleOrdenCompras();//WithConnection
					//detalleordencompraLogic.getSetVersionRowDetalleOrdenCompras();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesDetalleOrdenCompra();
				
				this.detalleordencomprasEliminados= new ArrayList<DetalleOrdenCompra>();		
			}
			
			if(this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.arrDatoGeneralTotales=DetalleOrdenCompraConstantesFunciones.getTotalesListaDetalleOrdenCompra(detalleordencompraLogic.getDetalleOrdenCompras());							
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				this.arrDatoGeneralTotales=DetalleOrdenCompraConstantesFunciones.getTotalesListaDetalleOrdenCompra(this.detalleordencompras);
			}
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Detalle Orden Compra GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Orden Compra",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.detalleordencompra=detalleordencompraAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessDetalleOrdenCompra();
      	}
		
	}	
	
	public void actualizarRelaciones(DetalleOrdenCompra detalleordencompraLocal) throws Exception {
		
		if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(DetalleOrdenCompra detalleordencompraLocal) throws Exception {	
		if(this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(OrdenCompraDetalleFormJInternalFrame.class)) {
				OrdenCompraBeanSwingJInternalFrame ordencompraBeanSwingJInternalFrameLocal=(OrdenCompraBeanSwingJInternalFrame) ((OrdenCompraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ordencompraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoOrdenCompra(ordencompraBeanSwingJInternalFrameLocal.getordencompra(),true);
				ordencompraBeanSwingJInternalFrameLocal.actualizarLista(ordencompraBeanSwingJInternalFrameLocal.ordencompra,this.ordencomprasForeignKey);

				ordencompraBeanSwingJInternalFrameLocal.actualizarRelaciones(ordencompraBeanSwingJInternalFrameLocal.ordencompra);

				detalleordencompraLocal.setOrdenCompra(ordencompraBeanSwingJInternalFrameLocal.ordencompra);

				this.addItemDefectoCombosForeignKeyOrdenCompra();
				this.cargarCombosFrameOrdenComprasForeignKey("Formulario");
				this.setActualOrdenCompraForeignKey(ordencompraBeanSwingJInternalFrameLocal.ordencompra.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				detalleordencompraLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				detalleordencompraLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				detalleordencompraLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				detalleordencompraLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				detalleordencompraLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				detalleordencompraLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegaBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegaBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegaBeanSwingJInternalFrameLocal.actualizarLista(bodegaBeanSwingJInternalFrameLocal.bodega,this.bodegasForeignKey);

				bodegaBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegaBeanSwingJInternalFrameLocal.bodega);

				detalleordencompraLocal.setBodega(bodegaBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey("Formulario");
				this.setActualBodegaForeignKey(bodegaBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ProductoDetalleFormJInternalFrame.class)) {
				ProductoBeanSwingJInternalFrame productoBeanSwingJInternalFrameLocal=(ProductoBeanSwingJInternalFrame) ((ProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				productoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoProducto(productoBeanSwingJInternalFrameLocal.getproducto(),true);
				productoBeanSwingJInternalFrameLocal.actualizarLista(productoBeanSwingJInternalFrameLocal.producto,this.productosForeignKey);

				productoBeanSwingJInternalFrameLocal.actualizarRelaciones(productoBeanSwingJInternalFrameLocal.producto);

				detalleordencompraLocal.setProducto(productoBeanSwingJInternalFrameLocal.producto);

				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey("Formulario");
				this.setActualProductoForeignKey(productoBeanSwingJInternalFrameLocal.producto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UnidadDetalleFormJInternalFrame.class)) {
				UnidadBeanSwingJInternalFrame unidadBeanSwingJInternalFrameLocal=(UnidadBeanSwingJInternalFrame) ((UnidadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				unidadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUnidad(unidadBeanSwingJInternalFrameLocal.getunidad(),true);
				unidadBeanSwingJInternalFrameLocal.actualizarLista(unidadBeanSwingJInternalFrameLocal.unidad,this.unidadsForeignKey);

				unidadBeanSwingJInternalFrameLocal.actualizarRelaciones(unidadBeanSwingJInternalFrameLocal.unidad);

				detalleordencompraLocal.setUnidad(unidadBeanSwingJInternalFrameLocal.unidad);

				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey("Formulario");
				this.setActualUnidadForeignKey(unidadBeanSwingJInternalFrameLocal.unidad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(NovedadProductoDetalleFormJInternalFrame.class)) {
				NovedadProductoBeanSwingJInternalFrame novedadproductoBeanSwingJInternalFrameLocal=(NovedadProductoBeanSwingJInternalFrame) ((NovedadProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				novedadproductoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoNovedadProducto(novedadproductoBeanSwingJInternalFrameLocal.getnovedadproducto(),true);
				novedadproductoBeanSwingJInternalFrameLocal.actualizarLista(novedadproductoBeanSwingJInternalFrameLocal.novedadproducto,this.novedadproductosForeignKey);

				novedadproductoBeanSwingJInternalFrameLocal.actualizarRelaciones(novedadproductoBeanSwingJInternalFrameLocal.novedadproducto);

				detalleordencompraLocal.setNovedadProducto(novedadproductoBeanSwingJInternalFrameLocal.novedadproducto);

				this.addItemDefectoCombosForeignKeyNovedadProducto();
				this.cargarCombosFrameNovedadProductosForeignKey("Formulario");
				this.setActualNovedadProductoForeignKey(novedadproductoBeanSwingJInternalFrameLocal.novedadproducto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoDetalleOrdenCompraDetalleFormJInternalFrame.class)) {
				EstadoDetalleOrdenCompraBeanSwingJInternalFrame estadodetalleordencompraBeanSwingJInternalFrameLocal=(EstadoDetalleOrdenCompraBeanSwingJInternalFrame) ((EstadoDetalleOrdenCompraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadodetalleordencompraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoDetalleOrdenCompra(estadodetalleordencompraBeanSwingJInternalFrameLocal.getestadodetalleordencompra(),true);
				estadodetalleordencompraBeanSwingJInternalFrameLocal.actualizarLista(estadodetalleordencompraBeanSwingJInternalFrameLocal.estadodetalleordencompra,this.estadodetalleordencomprasForeignKey);

				estadodetalleordencompraBeanSwingJInternalFrameLocal.actualizarRelaciones(estadodetalleordencompraBeanSwingJInternalFrameLocal.estadodetalleordencompra);

				detalleordencompraLocal.setEstadoDetalleOrdenCompra(estadodetalleordencompraBeanSwingJInternalFrameLocal.estadodetalleordencompra);

				this.addItemDefectoCombosForeignKeyEstadoDetalleOrdenCompra();
				this.cargarCombosFrameEstadoDetalleOrdenComprasForeignKey("Formulario");
				this.setActualEstadoDetalleOrdenCompraForeignKey(estadodetalleordencompraBeanSwingJInternalFrameLocal.estadodetalleordencompra.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarDetalleOrdenCompraActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = detalleordencompraValidator.getInvalidValues(this.detalleordencompra);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(DetalleOrdenCompra detalleordencompra,List<DetalleOrdenCompra> detalleordencompras) throws Exception {
		try	{		
			DetalleOrdenCompraConstantesFunciones.actualizarLista(detalleordencompra,detalleordencompras,this.detalleordencompraSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(DetalleOrdenCompra detalleordencompra,List<DetalleOrdenCompra> detalleordencompras) throws Exception {
		try	{			
			DetalleOrdenCompraConstantesFunciones.actualizarSelectedLista(detalleordencompra,detalleordencompras);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<DetalleOrdenCompra> detalleordencomprasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				detalleordencomprasLocal=this.detalleordencompraLogic.getDetalleOrdenCompras();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				detalleordencomprasLocal=this.detalleordencompras;
			}
			//ARCHITECTURE
		
			for(DetalleOrdenCompra detalleordencompraLocal:detalleordencomprasLocal) {
				if(this.permiteMantenimiento(detalleordencompraLocal) && detalleordencompraLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+DetalleOrdenCompraConstantesFunciones.getDetalleOrdenCompraLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.IDORDENCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_orden_compraDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_empresaDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_sucursalDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_ejercicioDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_periodoDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_anioDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_mesDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.IDBODEGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_bodegaDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.IDPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_productoDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.IDUNIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_unidadDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabeldescripcionDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.CANTIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelcantidadDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.DESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabeldescuentoDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.COSTOUNITARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelcosto_unitarioDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.IVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelivaDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.IVAVALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabeliva_valorDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.COSTOTOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelcosto_totalDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.DISPONIBLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabeldisponibleDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.IDNOVEDADPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_novedad_productoDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.IDESTADODETALLEORDENCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_estado_detalle_orden_compraDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.NUMEROCOMPROBANTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelnumero_comprobanteDetalleOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleOrdenCompraConstantesFunciones.LOTECLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabellote_clienteDetalleOrdenCompra,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_orden_compraDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_empresaDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_sucursalDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_ejercicioDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_periodoDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_anioDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_mesDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_bodegaDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_productoDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_unidadDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabeldescripcionDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelcantidadDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabeldescuentoDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelcosto_unitarioDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelivaDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabeliva_valorDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelcosto_totalDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabeldisponibleDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_novedad_productoDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelid_estado_detalle_orden_compraDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelnumero_comprobanteDetalleOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabellote_clienteDetalleOrdenCompra,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoDetalleOrdenCompra--;	
		
		
		this.detalleordencompraAux=new DetalleOrdenCompra();
		
		this.detalleordencompraAux.setId(this.iIdNuevoDetalleOrdenCompra);
		this.detalleordencompraAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detalleordencompraLogic.getDetalleOrdenCompras().add(this.detalleordencompraAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.detalleordencompras.add(this.detalleordencompraAux);
		}
		//ARCHITECTURE
		
		this.detalleordencompra=this.detalleordencompraAux;
		
		if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioDetalleOrdenCompra(this.detalleordencompra);
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleOrdenCompra(this.detalleordencompra);
		}
				
		//this.setDefaultControlesDetalleOrdenCompra();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyDetalleOrdenCompra();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyDetalleOrdenCompra();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleOrdenCompra();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleOrdenCompra(this.detalleordencompraBean,this.detalleordencompra,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
			classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.detalleordencompraReturnGeneral=detalleordencompraLogic.procesarEventosDetalleOrdenComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detalleordencompraLogic.getDetalleOrdenCompras(),this.detalleordencompra,this.detalleordencompraParameterGeneral,this.isEsNuevoDetalleOrdenCompra,classes);//this.detalleordencompraLogic.getDetalleOrdenCompra()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanDetalleOrdenCompra(this.detalleordencompraReturnGeneral,this.detalleordencompraBean,false);
		
		if(this.detalleordencompraReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleOrdenCompra(this.detalleordencompraReturnGeneral.getDetalleOrdenCompra());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioDetalleOrdenCompra(this.detalleordencompraReturnGeneral.getDetalleOrdenCompra());
		}
		
		if(this.detalleordencompraReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioDetalleOrdenCompra(this.detalleordencompraReturnGeneral.getDetalleOrdenCompra(),classes);//this.detalleordencompraBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyDetalleOrdenCompra();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyDetalleOrdenCompra();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.RecargarFormDetalleOrdenCompra(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingDetalleOrdenCompra(false);
						
			if(detalleordencompraSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleOrdenCompra();
			}
			
			this.actualizarVisualTableDatosDetalleOrdenCompra();
			
			this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(this.getIndiceNuevoDetalleOrdenCompra(), this.getIndiceNuevoDetalleOrdenCompra());
			
			this.seleccionarFilaTablaDetalleOrdenCompraActual();
						
			this.actualizarEstadoCeldasBotonesDetalleOrdenCompra("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesDetalleOrdenCompra(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextAreadescripcionDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activardescripcionDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcantidadDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarcantidadDetalleOrdenCompra);//
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFielddescuentoDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activardescuentoDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_unitarioDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarcosto_unitarioDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldivaDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarivaDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldiva_valorDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activariva_valorDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_totalDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarcosto_totalDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFielddisponibleDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activardisponibleDetalleOrdenCompra);//
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldnumero_comprobanteDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarnumero_comprobanteDetalleOrdenCompra);//
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldlote_clienteDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarlote_clienteDetalleOrdenCompra);	
		
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_orden_compraDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarid_orden_compraDetalleOrdenCompra);//
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_empresaDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarid_empresaDetalleOrdenCompra);//
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_sucursalDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarid_sucursalDetalleOrdenCompra);//
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarid_ejercicioDetalleOrdenCompra);//
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarid_periodoDetalleOrdenCompra);//
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_anioDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarid_anioDetalleOrdenCompra);//
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_mesDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarid_mesDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarid_bodegaDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarid_productoDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_unidadDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarid_unidadDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_novedad_productoDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarid_novedad_productoDetalleOrdenCompra);//
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra.setEnabled(isHabilitar && this.detalleordencompraConstantesFunciones.activarid_estado_detalle_orden_compraDetalleOrdenCompra);
	};
	
	public void setDefaultControlesDetalleOrdenCompra() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoDetalleOrdenCompra(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.detalleordencompraSessionBean.setConGuardarRelaciones(true);			
			this.detalleordencompraSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTabbedPaneRelacionesDetalleOrdenCompra.setVisible(true);
			
					
		} else {
			//this.detalleordencompraSessionBean.setConGuardarRelaciones(false);			
			this.detalleordencompraSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTabbedPaneRelacionesDetalleOrdenCompra.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoDetalleOrdenCompra() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleOrdenCompra detalleordencompraAux:this.detalleordencompraLogic.getDetalleOrdenCompras()) {
				if(detalleordencompraAux.getId().equals(this.iIdNuevoDetalleOrdenCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleOrdenCompra detalleordencompraAux:this.detalleordencompras) {
				if(detalleordencompraAux.getId().equals(this.iIdNuevoDetalleOrdenCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleOrdenCompra detalleordencompraAux:this.detalleordencompraLogic.getDetalleOrdenCompras()) {
				if(detalleordencompraAux.getId().equals(detalleordencompra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleOrdenCompra detalleordencompraAux:this.detalleordencompras) {
				if(detalleordencompraAux.getId().equals(detalleordencompra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalDetalleOrdenCompra(DetalleOrdenCompra detalleordencompraOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleOrdenCompra detalleordencompraAux:this.detalleordencompraLogic.getDetalleOrdenCompras()) {
				if(detalleordencompraAux.getDetalleOrdenCompraOriginal().getId().equals(detalleordencompraOriginal.getId())) {
					existe=true;
					detalleordencompraOriginal.setId(detalleordencompraAux.getId());
					detalleordencompraOriginal.setVersionRow(detalleordencompraAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleOrdenCompra detalleordencompraAux:this.detalleordencompras) {
				if(detalleordencompraAux.getDetalleOrdenCompraOriginal().getId().equals(detalleordencompraOriginal.getId())) {
					existe=true;
					detalleordencompraOriginal.setId(detalleordencompraAux.getId());
					detalleordencompraOriginal.setVersionRow(detalleordencompraAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosDetalleOrdenCompra(Boolean esParaCancelar) throws Exception {
		detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
		detalleordencompraAux=new DetalleOrdenCompra();
		
		if(!this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleOrdenCompra detalleordencompraAux:this.detalleordencompraLogic.getDetalleOrdenCompras()) {
					if(detalleordencompraAux.getId()<0) {
						detalleordencomprasAux.add(detalleordencompraAux);
					}		
				}
				this.iIdNuevoDetalleOrdenCompra=0L;
				this.detalleordencompraLogic.getDetalleOrdenCompras().removeAll(detalleordencomprasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleOrdenCompra detalleordencompraAux:this.detalleordencompras) {
					if(detalleordencompraAux.getId()<0) {
						detalleordencomprasAux.add(detalleordencompraAux);
					}		
				}
				this.iIdNuevoDetalleOrdenCompra=0L;
				this.detalleordencompras.removeAll(detalleordencomprasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoDetalleOrdenCompra 
					&& this.detalleordencompraLogic.getDetalleOrdenCompras().size()>0
					) {
					detalleordencompraAux=this.detalleordencompraLogic.getDetalleOrdenCompras().get(this.detalleordencompraLogic.getDetalleOrdenCompras().size() - 1);
				
					if(detalleordencompraAux.getId()<0) {
						this.detalleordencompraLogic.getDetalleOrdenCompras().remove(detalleordencompraAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoDetalleOrdenCompra && this.detalleordencompras.size()>0) {
					detalleordencompraAux=this.detalleordencompras.get(this.detalleordencompras.size() - 1);
				
					if(detalleordencompraAux.getId()<0) {
						this.detalleordencompras.remove(detalleordencompraAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoDetalleOrdenCompra(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(detalleordencompra.getId()<0) {
				this.detalleordencompraLogic.getDetalleOrdenCompras().remove(this.detalleordencompra);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(detalleordencompra.getId()<0) {
				this.detalleordencompras.remove(this.detalleordencompra);
			}
		}			
	}
	
	public void setEstadosInicialesDetalleOrdenCompra(List<DetalleOrdenCompra> detalleordencomprasAux) throws Exception {
		DetalleOrdenCompraConstantesFunciones.setEstadosInicialesDetalleOrdenCompra(detalleordencomprasAux);
	}
	
	public void setEstadosInicialesDetalleOrdenCompra(DetalleOrdenCompra detalleordencompraAux) throws Exception {
		DetalleOrdenCompraConstantesFunciones.setEstadosInicialesDetalleOrdenCompra(detalleordencompraAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarDetalleOrdenCompraActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesDetalleOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarDetalleOrdenCompraActual()) {
				if(!this.isEsNuevoDetalleOrdenCompra) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesDetalleOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoDetalleOrdenCompra=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarDetalleOrdenCompraActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Detalle Orden Compra ?", "MANTENIMIENTO DE Detalle Orden Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesDetalleOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(DetalleOrdenCompra detalleordencompra) throws Exception {
		DetalleOrdenCompraConstantesFunciones.seleccionarAsignar(this.detalleordencompra,detalleordencompra);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarDetalleOrdenCompra=this.isPermisoActualizarOriginalDetalleOrdenCompra;
			
			
			this.seleccionarAsignar(detalleordencompra);
			
			

			idProductoActual=detalleordencompra.getid_producto();
			this.seleccionarProductoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleOrdenCompraConstantesFunciones.quitarEspaciosDetalleOrdenCompra(this.detalleordencompra,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesDetalleOrdenCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.detalleordencompraSessionBean.setsFuncionBusquedaRapida(this.detalleordencompraSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarProductoActual() throws Exception {
		try	{
			Producto productoAux=new Producto();

			if(this.idProductoActual != null && this.idProductoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(this.idProductoActual);
					productoAux= productoLogic.getProducto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				productosForeignKey=new ArrayList<Producto>();
				productosForeignKey.add(productoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoDetalleOrdenCompra) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosDetalleOrdenCompra(esParaCancelar);				
				this.cancelarNuevoDetalleOrdenCompra(esParaCancelar);								
			}
			
			this.detalleordencompra=new DetalleOrdenCompra();
			
			this.inicializarDetalleOrdenCompra();
			
			this.actualizarEstadoCeldasBotonesDetalleOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarDetalleOrdenCompra() throws Exception {
		try {
			DetalleOrdenCompraConstantesFunciones.inicializarDetalleOrdenCompra(this.detalleordencompra);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.detalleordencompraLogic.getDetalleOrdenCompras().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteDetalleOrdenCompras(String sAccionBusqueda,List<DetalleOrdenCompra> detalleordencomprasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="DetalleOrdenCompra"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="DetalleOrdenCompraMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("DetalleOrdenCompraMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="DetalleOrdenCompra"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Detalle Orden Compras");		
		parameters.put("busquedapor", DetalleOrdenCompraConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceDetalleOrdenCompra=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			DetalleOrdenCompraConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			DetalleOrdenCompraConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceDetalleOrdenCompra=new JRBeanArrayDataSource(DetalleOrdenCompraJInternalFrame.TraerDetalleOrdenCompraBeans(detalleordencomprasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceDetalleOrdenCompra);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+DetalleOrdenCompraConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+DetalleOrdenCompraConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(DetalleOrdenCompraBean.TraerDetalleOrdenCompraBeans(detalleordencomprasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteDetalleOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,detalleordencomprasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalDetalleOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,detalleordencomprasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					/*
					this.jButtonGenerarExcelReporteDinamicoDetalleOrdenCompraActionPerformed(null);
					//this.generarExcelReporteDetalleOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,detalleordencomprasParaReportes);
					*/
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalDetalleOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,detalleordencomprasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesDetalleOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,detalleordencomprasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesDetalleOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,detalleordencomprasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteDetalleOrdenCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleOrdenCompra> detalleordencomprasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleordencompra";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleOrdenCompras");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleOrdenCompra("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(DetalleOrdenCompra detalleordencompra : detalleordencomprasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			DetalleOrdenCompraConstantesFunciones.generarExcelReporteDataDetalleOrdenCompra("NORMAL",row,workbook,detalleordencompra,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Orden Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderDetalleOrdenCompra(String sTipo,Row row,Workbook workbook) {
		
		DetalleOrdenCompraConstantesFunciones.generarExcelReporteHeaderDetalleOrdenCompra(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalDetalleOrdenCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleOrdenCompra> detalleordencomprasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleordencompra_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleOrdenCompras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(DetalleOrdenCompra detalleordencompra : detalleordencomprasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(DetalleOrdenCompraConstantesFunciones.getDetalleOrdenCompraDescripcion(detalleordencompra));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getordencompra_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_IDBODEGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDBODEGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getbodega_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_IDPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_IDUNIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDUNIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getunidad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getcantidad());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_DESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_DESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getdescuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_COSTOUNITARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_COSTOUNITARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getcosto_unitario());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_IVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getiva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_IVAVALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IVAVALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getiva_valor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_COSTOTOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_COSTOTOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getcosto_total());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getdisponible());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_IDNOVEDADPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDNOVEDADPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getnovedadproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_IDESTADODETALLEORDENCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDESTADODETALLEORDENCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getestadodetalleordencompra_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getnumero_comprobante());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleOrdenCompraConstantesFunciones.LABEL_LOTECLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_LOTECLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleordencompra.getlote_cliente());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Orden Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesDetalleOrdenCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleOrdenCompra> detalleordencomprasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<DetalleOrdenCompra> detalleordencomprasRespaldo=null;
		
		classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.detalleordencompraLogic.setDatosCliente(this.datosCliente);
		this.detalleordencompraLogic.setDatosDeep(this.datosDeep);
		this.detalleordencompraLogic.setIsConDeep(true);
		
		detalleordencomprasRespaldo=this.detalleordencompraLogic.getDetalleOrdenCompras();
		
		this.detalleordencompraLogic.setDetalleOrdenCompras(detalleordencomprasParaReportes);	
		this.detalleordencompraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		detalleordencomprasParaReportes=this.detalleordencompraLogic.getDetalleOrdenCompras();
		this.detalleordencompraLogic.setDetalleOrdenCompras(detalleordencomprasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleordencompra_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleOrdenCompras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleOrdenCompra("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(DetalleOrdenCompra detalleordencompra : detalleordencomprasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderDetalleOrdenCompra("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			DetalleOrdenCompraConstantesFunciones.generarExcelReporteDataDetalleOrdenCompra("NORMAL",row,workbook,detalleordencompra,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(DetalleOrdenCompraConstantesFunciones.getDetalleOrdenCompraDescripcion(detalleordencompra));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Orden Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		/*
		for(int index:this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		*/
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		/*
		for(int index:this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		*/
		
		return existe;
	}
	
	public void startProcessDetalleOrdenCompra() throws Exception {		
		this.startProcessDetalleOrdenCompra(true);
	}
	
	public void startProcessDetalleOrdenCompra(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasDetalleOrdenCompra ,this.jPanelParametrosReportesDetalleOrdenCompra, this.jScrollPanelDatosDetalleOrdenCompra,this.jPanelPaginacionDetalleOrdenCompra, this.jScrollPanelDatosEdicionDetalleOrdenCompra, this.jPanelAccionesDetalleOrdenCompra,this.jPanelAccionesFormularioDetalleOrdenCompra,this.jmenuBarDetalleOrdenCompra,this.jmenuBarDetalleDetalleOrdenCompra,this.jTtoolBarDetalleOrdenCompra,this.jTtoolBarDetalleDetalleOrdenCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleOrdenCompra=new JTabbedPane();
		
		final JPanel jPanelParametrosReportesDetalleOrdenCompra=this.jPanelParametrosReportesDetalleOrdenCompra;
		//final JScrollPane jScrollPanelDatosDetalleOrdenCompra=this.jScrollPanelDatosDetalleOrdenCompra;
		final JTable jTableDatosDetalleOrdenCompra=this.jTableDatosDetalleOrdenCompra;		
		final JPanel jPanelPaginacionDetalleOrdenCompra=this.jPanelPaginacionDetalleOrdenCompra;
		//final JScrollPane jScrollPanelDatosEdicionDetalleOrdenCompra=this.jScrollPanelDatosEdicionDetalleOrdenCompra;
		final JPanel jPanelAccionesDetalleOrdenCompra=this.jPanelAccionesDetalleOrdenCompra;
		
		JPanel jPanelCamposAuxiliarDetalleOrdenCompra=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarDetalleOrdenCompra=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
			jPanelCamposAuxiliarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelCamposDetalleOrdenCompra;
			jPanelAccionesFormularioAuxiliarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelAccionesFormularioDetalleOrdenCompra;
		}
		
		final JPanel jPanelCamposDetalleOrdenCompra=jPanelCamposAuxiliarDetalleOrdenCompra;
		final JPanel jPanelAccionesFormularioDetalleOrdenCompra=jPanelAccionesFormularioAuxiliarDetalleOrdenCompra;
		
		
		final JMenuBar jmenuBarDetalleOrdenCompra=new JMenuBar();
		final JMenuBar jmenuBarDetalleDetalleOrdenCompra=new JMenuBar();
		final JToolBar jTtoolBarDetalleOrdenCompra=new JToolBar();
		final JToolBar jTtoolBarDetalleDetalleOrdenCompra=new JToolBar();		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleOrdenCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleOrdenCompra;
			processRunnable.jTableDatos=jTableDatosDetalleOrdenCompra;
			processRunnable.jPanelCampos=jPanelCamposDetalleOrdenCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleOrdenCompra;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleOrdenCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleOrdenCompra;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleOrdenCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleOrdenCompra;
			processRunnable.jTtoolBar=jTtoolBarDetalleOrdenCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleOrdenCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleOrdenCompra ,jPanelParametrosReportesDetalleOrdenCompra,jTableDatosDetalleOrdenCompra, /*jScrollPanelDatosDetalleOrdenCompra,*/jPanelCamposDetalleOrdenCompra,jPanelPaginacionDetalleOrdenCompra, /*jScrollPanelDatosEdicionDetalleOrdenCompra,*/ jPanelAccionesDetalleOrdenCompra,jPanelAccionesFormularioDetalleOrdenCompra,jmenuBarDetalleOrdenCompra,jmenuBarDetalleDetalleOrdenCompra,jTtoolBarDetalleOrdenCompra,jTtoolBarDetalleDetalleOrdenCompra);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleOrdenCompra ,jPanelParametrosReportesDetalleOrdenCompra, jScrollPanelDatosDetalleOrdenCompra,jPanelPaginacionDetalleOrdenCompra, jScrollPanelDatosEdicionDetalleOrdenCompra, jPanelAccionesDetalleOrdenCompra,jPanelAccionesFormularioDetalleOrdenCompra,jmenuBarDetalleOrdenCompra,jmenuBarDetalleDetalleOrdenCompra,jTtoolBarDetalleOrdenCompra,jTtoolBarDetalleDetalleOrdenCompra);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessDetalleOrdenCompra() {// throws Exception 
		this.finishProcessDetalleOrdenCompra(true);
	}
	
	public void finishProcessDetalleOrdenCompra(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasDetalleOrdenCompra ,this.jPanelParametrosReportesDetalleOrdenCompra, this.jScrollPanelDatosDetalleOrdenCompra,this.jPanelPaginacionDetalleOrdenCompra, this.jScrollPanelDatosEdicionDetalleOrdenCompra, this.jPanelAccionesDetalleOrdenCompra,this.jPanelAccionesFormularioDetalleOrdenCompra,this.jmenuBarDetalleOrdenCompra,this.jmenuBarDetalleDetalleOrdenCompra,this.jTtoolBarDetalleOrdenCompra,this.jTtoolBarDetalleDetalleOrdenCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleOrdenCompra=new JTabbedPane();
		
		final JPanel jPanelParametrosReportesDetalleOrdenCompra=this.jPanelParametrosReportesDetalleOrdenCompra;
		//final JScrollPane jScrollPanelDatosDetalleOrdenCompra=this.jScrollPanelDatosDetalleOrdenCompra;
		final JTable jTableDatosDetalleOrdenCompra=this.jTableDatosDetalleOrdenCompra;		
		final JPanel jPanelPaginacionDetalleOrdenCompra=this.jPanelPaginacionDetalleOrdenCompra;
		//final JScrollPane jScrollPanelDatosEdicionDetalleOrdenCompra=this.jScrollPanelDatosEdicionDetalleOrdenCompra;
		final JPanel jPanelAccionesDetalleOrdenCompra=this.jPanelAccionesDetalleOrdenCompra;
		
		JPanel jPanelCamposAuxiliarDetalleOrdenCompra=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarDetalleOrdenCompra=new JPanel();
		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
			jPanelCamposAuxiliarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelCamposDetalleOrdenCompra;
			jPanelAccionesFormularioAuxiliarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelAccionesFormularioDetalleOrdenCompra;
		}
		
		final JPanel jPanelCamposDetalleOrdenCompra=jPanelCamposAuxiliarDetalleOrdenCompra;
		final JPanel jPanelAccionesFormularioDetalleOrdenCompra=jPanelAccionesFormularioAuxiliarDetalleOrdenCompra;
		
		
		final JMenuBar jmenuBarDetalleOrdenCompra=new JMenuBar();
		final JMenuBar jmenuBarDetalleDetalleOrdenCompra=new JMenuBar();
		final JToolBar jTtoolBarDetalleOrdenCompra=new JToolBar();
		final JToolBar jTtoolBarDetalleDetalleOrdenCompra=new JToolBar();		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleOrdenCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleOrdenCompra;
			processRunnable.jTableDatos=jTableDatosDetalleOrdenCompra;
			processRunnable.jPanelCampos=jPanelCamposDetalleOrdenCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleOrdenCompra;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleOrdenCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleOrdenCompra;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleOrdenCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleOrdenCompra;
			processRunnable.jTtoolBar=jTtoolBarDetalleOrdenCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleOrdenCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasDetalleOrdenCompra ,jPanelParametrosReportesDetalleOrdenCompra, jTableDatosDetalleOrdenCompra,/*jScrollPanelDatosDetalleOrdenCompra,*/jPanelCamposDetalleOrdenCompra,jPanelPaginacionDetalleOrdenCompra, /*jScrollPanelDatosEdicionDetalleOrdenCompra,*/ jPanelAccionesDetalleOrdenCompra,jPanelAccionesFormularioDetalleOrdenCompra,jmenuBarDetalleOrdenCompra,jmenuBarDetalleDetalleOrdenCompra,jTtoolBarDetalleOrdenCompra,jTtoolBarDetalleDetalleOrdenCompra));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesDetalleOrdenCompra(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarDetalleOrdenCompra(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuDetalleOrdenCompra(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarDetalleOrdenCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleOrdenCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleDetalleOrdenCompra,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuDetalleOrdenCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleOrdenCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleDetalleOrdenCompra,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.detalleordencompraConstantesFunciones.getsFinalQueryDetalleOrdenCompra();
		String  finalQueryPaginacionTodos=this.detalleordencompraConstantesFunciones.getsFinalQueryDetalleOrdenCompra();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=DetalleOrdenCompraConstantesFunciones.getArrayColumnasGlobalesNoDetalleOrdenCompra(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=DetalleOrdenCompraConstantesFunciones.getArrayColumnasGlobalesDetalleOrdenCompra(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,DetalleOrdenCompraConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		/*
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		*/
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.detalleordencomprasEliminados= new ArrayList<DetalleOrdenCompra>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessDetalleOrdenCompra();
		
				///*DetalleOrdenCompraSessionBean*/this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			
			if(this.detalleordencompraSessionBean==null) {
				this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=DetalleOrdenCompraConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=DetalleOrdenCompraConstantesFunciones.getClassesForeignKeysOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/detalleordencompra."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			detalleordencomprasAux= new ArrayList<DetalleOrdenCompra>();
			
				
			detalleordencompraLogic.setDatosCliente(this.datosCliente);
			detalleordencompraLogic.setDatosDeep(this.datosDeep);
			detalleordencompraLogic.setIsConDeep(true);
			
			
			detalleordencompraLogic.getDetalleOrdenCompraDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					detalleordencompraLogic.getTodosDetalleOrdenCompras(finalQueryGlobal,pagination);
					
					//detalleordencompraLogic.getTodosDetalleOrdenComprasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(detalleordencompraLogic.getDetalleOrdenCompras()==null|| detalleordencompraLogic.getDetalleOrdenCompras().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detalleordencomprasAux= new ArrayList<DetalleOrdenCompra>();
							detalleordencomprasAux.addAll(detalleordencompraLogic.getDetalleOrdenCompras());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencomprasAux= new ArrayList<DetalleOrdenCompra>();
							detalleordencomprasAux.addAll(detalleordencompras);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detalleordencompraLogic.getTodosDetalleOrdenCompras(finalQueryGlobal+"",this.pagination);												
							
							//detalleordencompraLogic.getTodosDetalleOrdenComprasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteDetalleOrdenCompras("Todos",detalleordencompraLogic.getDetalleOrdenCompras() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detalleordencompraLogic.setDetalleOrdenCompras(new ArrayList<DetalleOrdenCompra>());					
							detalleordencompraLogic.getDetalleOrdenCompras().addAll(detalleordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencompras=new ArrayList<DetalleOrdenCompra>();
							detalleordencompras.addAll(detalleordencomprasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idDetalleOrdenCompra=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idDetalleOrdenCompra=this.idActual;
				
				} else if(this.idDetalleOrdenCompraActual!=null && this.idDetalleOrdenCompraActual!=0L) {
					idDetalleOrdenCompra=idDetalleOrdenCompraActual;
				}
				
					
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndicePorId(idDetalleOrdenCompra);
				
				this.detalleordencompras=new ArrayList<DetalleOrdenCompra>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					detalleordencompraLogic.getEntity(idDetalleOrdenCompra);
					
					//detalleordencompraLogic.getEntityWithConnection(idDetalleOrdenCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleordencompraLogic.setDetalleOrdenCompras(new ArrayList<DetalleOrdenCompra>());
					detalleordencompraLogic.getDetalleOrdenCompras().add(detalleordencompraLogic.getDetalleOrdenCompra());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleordencompras=new ArrayList<DetalleOrdenCompra>();
					this.detalleordencompras.add(detalleordencompra);
				}
				
				if(detalleordencompraLogic.getDetalleOrdenCompra()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdBodega")) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleordencompraLogic.getDetalleOrdenComprasFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleordencompraLogic.getDetalleOrdenCompras()==null||detalleordencompraLogic.getDetalleOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleordencompras==null|| detalleordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
						detalleordencomprasAux.addAll(detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
							detalleordencomprasAux.addAll(detalleordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleordencompraLogic.getDetalleOrdenComprasFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleOrdenCompras("FK_IdBodega",detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleOrdenCompras("FK_IdBodega",detalleordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencompraLogic.setDetalleOrdenCompras(new ArrayList<DetalleOrdenCompra>());
						detalleordencompraLogic.getDetalleOrdenCompras().addAll(detalleordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencompras=new ArrayList<DetalleOrdenCompra>();
							detalleordencompras.addAll(detalleordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleordencompraLogic.getDetalleOrdenComprasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleordencompraLogic.getDetalleOrdenCompras()==null||detalleordencompraLogic.getDetalleOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleordencompras==null|| detalleordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
						detalleordencomprasAux.addAll(detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
							detalleordencomprasAux.addAll(detalleordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleordencompraLogic.getDetalleOrdenComprasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleOrdenCompras("FK_IdEjercicio",detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleOrdenCompras("FK_IdEjercicio",detalleordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencompraLogic.setDetalleOrdenCompras(new ArrayList<DetalleOrdenCompra>());
						detalleordencompraLogic.getDetalleOrdenCompras().addAll(detalleordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencompras=new ArrayList<DetalleOrdenCompra>();
							detalleordencompras.addAll(detalleordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleordencompraLogic.getDetalleOrdenComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleordencompraLogic.getDetalleOrdenCompras()==null||detalleordencompraLogic.getDetalleOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleordencompras==null|| detalleordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
						detalleordencomprasAux.addAll(detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
							detalleordencomprasAux.addAll(detalleordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleordencompraLogic.getDetalleOrdenComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleOrdenCompras("FK_IdEmpresa",detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleOrdenCompras("FK_IdEmpresa",detalleordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencompraLogic.setDetalleOrdenCompras(new ArrayList<DetalleOrdenCompra>());
						detalleordencompraLogic.getDetalleOrdenCompras().addAll(detalleordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencompras=new ArrayList<DetalleOrdenCompra>();
							detalleordencompras.addAll(detalleordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoDetalleOrdenCompra")) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoDetalleOrdenCompra(id_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleordencompraLogic.getDetalleOrdenComprasFK_IdEstadoDetalleOrdenCompra(finalQueryGlobal,pagination,id_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoDetalleOrdenCompra(id_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoDetalleOrdenCompra(id_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleordencompraLogic.getDetalleOrdenCompras()==null||detalleordencompraLogic.getDetalleOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleordencompras==null|| detalleordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
						detalleordencomprasAux.addAll(detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
							detalleordencomprasAux.addAll(detalleordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleordencompraLogic.getDetalleOrdenComprasFK_IdEstadoDetalleOrdenCompra(finalQueryGlobal,pagination,id_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoDetalleOrdenCompra(id_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoDetalleOrdenCompra(id_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleOrdenCompras("FK_IdEstadoDetalleOrdenCompra",detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleOrdenCompras("FK_IdEstadoDetalleOrdenCompra",detalleordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencompraLogic.setDetalleOrdenCompras(new ArrayList<DetalleOrdenCompra>());
						detalleordencompraLogic.getDetalleOrdenCompras().addAll(detalleordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencompras=new ArrayList<DetalleOrdenCompra>();
							detalleordencompras.addAll(detalleordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdNovedadProducto")) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdNovedadProducto(id_novedad_productoFK_IdNovedadProducto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleordencompraLogic.getDetalleOrdenComprasFK_IdNovedadProducto(finalQueryGlobal,pagination,id_novedad_productoFK_IdNovedadProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdNovedadProducto(id_novedad_productoFK_IdNovedadProducto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdNovedadProducto(id_novedad_productoFK_IdNovedadProducto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleordencompraLogic.getDetalleOrdenCompras()==null||detalleordencompraLogic.getDetalleOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleordencompras==null|| detalleordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
						detalleordencomprasAux.addAll(detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
							detalleordencomprasAux.addAll(detalleordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleordencompraLogic.getDetalleOrdenComprasFK_IdNovedadProducto(finalQueryGlobal,pagination,id_novedad_productoFK_IdNovedadProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdNovedadProducto(id_novedad_productoFK_IdNovedadProducto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdNovedadProducto(id_novedad_productoFK_IdNovedadProducto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleOrdenCompras("FK_IdNovedadProducto",detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleOrdenCompras("FK_IdNovedadProducto",detalleordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencompraLogic.setDetalleOrdenCompras(new ArrayList<DetalleOrdenCompra>());
						detalleordencompraLogic.getDetalleOrdenCompras().addAll(detalleordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencompras=new ArrayList<DetalleOrdenCompra>();
							detalleordencompras.addAll(detalleordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdOrdenCompra")) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleordencompraLogic.getDetalleOrdenComprasFK_IdOrdenCompra(finalQueryGlobal,pagination,id_orden_compraFK_IdOrdenCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleordencompraLogic.getDetalleOrdenCompras()==null||detalleordencompraLogic.getDetalleOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleordencompras==null|| detalleordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
						detalleordencomprasAux.addAll(detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
							detalleordencomprasAux.addAll(detalleordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleordencompraLogic.getDetalleOrdenComprasFK_IdOrdenCompra(finalQueryGlobal,pagination,id_orden_compraFK_IdOrdenCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleOrdenCompras("FK_IdOrdenCompra",detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleOrdenCompras("FK_IdOrdenCompra",detalleordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencompraLogic.setDetalleOrdenCompras(new ArrayList<DetalleOrdenCompra>());
						detalleordencompraLogic.getDetalleOrdenCompras().addAll(detalleordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencompras=new ArrayList<DetalleOrdenCompra>();
							detalleordencompras.addAll(detalleordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleordencompraLogic.getDetalleOrdenComprasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleordencompraLogic.getDetalleOrdenCompras()==null||detalleordencompraLogic.getDetalleOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleordencompras==null|| detalleordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
						detalleordencomprasAux.addAll(detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
							detalleordencomprasAux.addAll(detalleordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleordencompraLogic.getDetalleOrdenComprasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleOrdenCompras("FK_IdPeriodo",detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleOrdenCompras("FK_IdPeriodo",detalleordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencompraLogic.setDetalleOrdenCompras(new ArrayList<DetalleOrdenCompra>());
						detalleordencompraLogic.getDetalleOrdenCompras().addAll(detalleordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencompras=new ArrayList<DetalleOrdenCompra>();
							detalleordencompras.addAll(detalleordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdProducto")) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleordencompraLogic.getDetalleOrdenComprasFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleordencompraLogic.getDetalleOrdenCompras()==null||detalleordencompraLogic.getDetalleOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleordencompras==null|| detalleordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
						detalleordencomprasAux.addAll(detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
							detalleordencomprasAux.addAll(detalleordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleordencompraLogic.getDetalleOrdenComprasFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleOrdenCompras("FK_IdProducto",detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleOrdenCompras("FK_IdProducto",detalleordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencompraLogic.setDetalleOrdenCompras(new ArrayList<DetalleOrdenCompra>());
						detalleordencompraLogic.getDetalleOrdenCompras().addAll(detalleordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencompras=new ArrayList<DetalleOrdenCompra>();
							detalleordencompras.addAll(detalleordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleordencompraLogic.getDetalleOrdenComprasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleordencompraLogic.getDetalleOrdenCompras()==null||detalleordencompraLogic.getDetalleOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleordencompras==null|| detalleordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
						detalleordencomprasAux.addAll(detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
							detalleordencomprasAux.addAll(detalleordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleordencompraLogic.getDetalleOrdenComprasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleOrdenCompras("FK_IdSucursal",detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleOrdenCompras("FK_IdSucursal",detalleordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencompraLogic.setDetalleOrdenCompras(new ArrayList<DetalleOrdenCompra>());
						detalleordencompraLogic.getDetalleOrdenCompras().addAll(detalleordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencompras=new ArrayList<DetalleOrdenCompra>();
							detalleordencompras.addAll(detalleordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUnidad")) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleordencompraLogic.getDetalleOrdenComprasFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleordencompraLogic.getDetalleOrdenCompras()==null||detalleordencompraLogic.getDetalleOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleordencompras==null|| detalleordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
						detalleordencomprasAux.addAll(detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencomprasAux=new ArrayList<DetalleOrdenCompra>();
							detalleordencomprasAux.addAll(detalleordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleordencompraLogic.getDetalleOrdenComprasFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleOrdenCompras("FK_IdUnidad",detalleordencompraLogic.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleOrdenCompras("FK_IdUnidad",detalleordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencompraLogic.setDetalleOrdenCompras(new ArrayList<DetalleOrdenCompra>());
						detalleordencompraLogic.getDetalleOrdenCompras().addAll(detalleordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencompras=new ArrayList<DetalleOrdenCompra>();
							detalleordencompras.addAll(detalleordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesDetalleOrdenCompra();
		
		this.traerValoresTablaTotales();	
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetalleOrdenCompraConstantesFunciones.getTotalesListaDetalleOrdenCompra(detalleordencompraLogic.getDetalleOrdenCompras());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetalleOrdenCompraConstantesFunciones.getTotalesListaDetalleOrdenCompra(this.detalleordencompras);
		}
		*/
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessDetalleOrdenCompra();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detalleordencompraLogic.getDetalleOrdenCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detalleordencompras.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detalleordencompraLogic.getDetalleOrdenCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detalleordencompras.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(DetalleOrdenCompra detalleordencompra) {
		Boolean permite=true;
		
		if(this.detalleordencompra.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetalleOrdenCompraConstantesFunciones.getTotalesListaDetalleOrdenCompra(detalleordencompraLogic.getDetalleOrdenCompras());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetalleOrdenCompraConstantesFunciones.getTotalesListaDetalleOrdenCompra(this.detalleordencompras);
		}
	}
	
	/*
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=DetalleOrdenCompraConstantesFunciones.getOrderByListaDetalleOrdenCompra();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=DetalleOrdenCompraConstantesFunciones.getOrderByListaDetalleOrdenCompra();
		}		
	}
	*/
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleOrdenCompra detalleordencompra:detalleordencompraLogic.getDetalleOrdenCompras()) {
				if(detalleordencompra.getsType().equals(Constantes2.S_TOTALES)) {
					detalleordencompraTotales=detalleordencompra;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleOrdenCompra detalleordencompra:this.detalleordencompras) {
				if(detalleordencompra.getsType().equals(Constantes2.S_TOTALES)) {
					detalleordencompraTotales=detalleordencompra;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.detalleordencompraAux=new DetalleOrdenCompra();
			this.detalleordencompraAux.setsType(Constantes2.S_TOTALES);
			this.detalleordencompraAux.setIsNew(false);
			this.detalleordencompraAux.setIsChanged(false);
			this.detalleordencompraAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				DetalleOrdenCompraConstantesFunciones.TotalizarValoresFilaDetalleOrdenCompra(this.detalleordencompraLogic.getDetalleOrdenCompras(),this.detalleordencompraAux);
				
				this.detalleordencompraLogic.getDetalleOrdenCompras().add(this.detalleordencompraAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				DetalleOrdenCompraConstantesFunciones.TotalizarValoresFilaDetalleOrdenCompra(this.detalleordencompras,this.detalleordencompraAux);
				
				this.detalleordencompras.add(this.detalleordencompraAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		detalleordencompraTotales=new DetalleOrdenCompra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detalleordencompraLogic.getDetalleOrdenCompras().remove(detalleordencompraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detalleordencompras.remove(detalleordencompraTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		detalleordencompraTotales=new DetalleOrdenCompra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleOrdenCompra detalleordencompra:detalleordencompraLogic.getDetalleOrdenCompras()) {
				if(detalleordencompra.getsType().equals(Constantes2.S_TOTALES)) {
					detalleordencompraTotales=detalleordencompra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleOrdenCompraConstantesFunciones.TotalizarValoresFilaDetalleOrdenCompra(this.detalleordencompraLogic.getDetalleOrdenCompras(),detalleordencompraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleOrdenCompra detalleordencompra:this.detalleordencompras) {
				if(detalleordencompra.getsType().equals(Constantes2.S_TOTALES)) {
					detalleordencompraTotales=detalleordencompra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleOrdenCompraConstantesFunciones.TotalizarValoresFilaDetalleOrdenCompra(this.detalleordencompras,detalleordencompraTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosDetalleOrdenCompra() {
		this.isPermisoTodoDetalleOrdenCompra=false;
		this.isPermisoNuevoDetalleOrdenCompra=false;
		this.isPermisoActualizarDetalleOrdenCompra=false;
		this.isPermisoActualizarOriginalDetalleOrdenCompra=false;
		this.isPermisoEliminarDetalleOrdenCompra=false;
		this.isPermisoGuardarCambiosDetalleOrdenCompra=false;
		this.isPermisoConsultaDetalleOrdenCompra=false;
		this.isPermisoBusquedaDetalleOrdenCompra=false;
		this.isPermisoReporteDetalleOrdenCompra=false;		
		this.isPermisoOrdenDetalleOrdenCompra=false;		
		this.isPermisoPaginacionMedioDetalleOrdenCompra=false;		
		this.isPermisoPaginacionAltoDetalleOrdenCompra=false;
		this.isPermisoPaginacionTodoDetalleOrdenCompra=false;
		this.isPermisoCopiarDetalleOrdenCompra=false;		
		this.isPermisoVerFormDetalleOrdenCompra=false;		
		this.isPermisoDuplicarDetalleOrdenCompra=false;		
		this.isPermisoOrdenDetalleOrdenCompra=false;		
	}
	
	public void setPermisosUsuarioDetalleOrdenCompra(Boolean isPermiso) {
		this.isPermisoTodoDetalleOrdenCompra=isPermiso;
		this.isPermisoNuevoDetalleOrdenCompra=isPermiso;
		this.isPermisoActualizarDetalleOrdenCompra=isPermiso;
		this.isPermisoActualizarOriginalDetalleOrdenCompra=isPermiso;
		this.isPermisoEliminarDetalleOrdenCompra=isPermiso;
		this.isPermisoGuardarCambiosDetalleOrdenCompra=isPermiso;
		this.isPermisoConsultaDetalleOrdenCompra=isPermiso;
		this.isPermisoBusquedaDetalleOrdenCompra=isPermiso;
		this.isPermisoReporteDetalleOrdenCompra=isPermiso;
		this.isPermisoOrdenDetalleOrdenCompra=isPermiso;		
		this.isPermisoPaginacionMedioDetalleOrdenCompra=isPermiso;		
		this.isPermisoPaginacionAltoDetalleOrdenCompra=isPermiso;		
		this.isPermisoPaginacionTodoDetalleOrdenCompra=isPermiso;		
		this.isPermisoCopiarDetalleOrdenCompra=isPermiso;		
		this.isPermisoVerFormDetalleOrdenCompra=isPermiso;		
		this.isPermisoDuplicarDetalleOrdenCompra=isPermiso;
		this.isPermisoOrdenDetalleOrdenCompra=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioDetalleOrdenCompra(Boolean isPermiso) {
		//this.isPermisoTodoDetalleOrdenCompra=isPermiso;
		this.isPermisoNuevoDetalleOrdenCompra=isPermiso;
		this.isPermisoActualizarDetalleOrdenCompra=isPermiso;
		this.isPermisoActualizarOriginalDetalleOrdenCompra=isPermiso;
		this.isPermisoEliminarDetalleOrdenCompra=isPermiso;
		this.isPermisoGuardarCambiosDetalleOrdenCompra=isPermiso;
		//this.isPermisoConsultaDetalleOrdenCompra=isPermiso;
		//this.isPermisoBusquedaDetalleOrdenCompra=isPermiso;
		//this.isPermisoReporteDetalleOrdenCompra=isPermiso;
		//this.isPermisoOrdenDetalleOrdenCompra=isPermiso;		
		//this.isPermisoPaginacionMedioDetalleOrdenCompra=isPermiso;		
		//this.isPermisoPaginacionAltoDetalleOrdenCompra=isPermiso;		
		//this.isPermisoPaginacionTodoDetalleOrdenCompra=isPermiso;		
		//this.isPermisoCopiarDetalleOrdenCompra=isPermiso;		
		//this.isPermisoDuplicarDetalleOrdenCompra=isPermiso;
		//this.isPermisoOrdenDetalleOrdenCompra=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioDetalleOrdenCompraClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(DetalleOrdenCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebDetalleOrdenCompra(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioDetalleOrdenCompraClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioDetalleOrdenCompraClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionDetalleOrdenCompraClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioDetalleOrdenCompraClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioDetalleOrdenCompra() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(DetalleOrdenCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, DetalleOrdenCompraConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoDetalleOrdenCompra=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarDetalleOrdenCompra=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalDetalleOrdenCompra=this.isPermisoActualizarDetalleOrdenCompra;
			this.isPermisoEliminarDetalleOrdenCompra=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosDetalleOrdenCompra=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaDetalleOrdenCompra=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaDetalleOrdenCompra=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoDetalleOrdenCompra=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteDetalleOrdenCompra=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleOrdenCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioDetalleOrdenCompra=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoDetalleOrdenCompra=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoDetalleOrdenCompra=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarDetalleOrdenCompra=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormDetalleOrdenCompra=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarDetalleOrdenCompra=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleOrdenCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosDetalleOrdenCompra.setToolTipText(this.jTableDatosDetalleOrdenCompra.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioDetalleOrdenCompra(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioDetalleOrdenCompra(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(DetalleOrdenCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(DetalleOrdenCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioDetalleOrdenCompra() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyDetalleOrdenCompraListas()throws Exception {
		try	{						
			
				this.ordencomprasForeignKey=new ArrayList();
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.bodegasForeignKey=new ArrayList();
				this.productosForeignKey=new ArrayList();
				this.unidadsForeignKey=new ArrayList();
				this.novedadproductosForeignKey=new ArrayList();
				this.estadodetalleordencomprasForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyDetalleOrdenCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(DetalleOrdenCompraJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyDetalleOrdenCompraListas(false);
			} else {
			
				this.cargarCombosForeignKeyOrdenCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyNovedadProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoDetalleOrdenCompraListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyOrdenCompraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ordencomprasForeignKey==null||this.ordencomprasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=OrdenCompraConstantesFunciones.getArrayColumnasGlobalesOrdenCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,OrdenCompraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=OrdenCompraConstantesFunciones.SFINALQUERY;

				this.cargarCombosOrdenComprasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.productosForeignKey==null||this.productosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UnidadConstantesFunciones.SFINALQUERY;

				this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyNovedadProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.novedadproductosForeignKey==null||this.novedadproductosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=NovedadProductoConstantesFunciones.getArrayColumnasGlobalesNovedadProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,NovedadProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=NovedadProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosNovedadProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoDetalleOrdenCompraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadodetalleordencomprasForeignKey==null||this.estadodetalleordencomprasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoDetalleOrdenCompraConstantesFunciones.getArrayColumnasGlobalesEstadoDetalleOrdenCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoDetalleOrdenCompraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoDetalleOrdenCompraConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoDetalleOrdenComprasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyDetalleOrdenCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			DetalleOrdenCompraParameterReturnGeneral detalleordencompraReturnGeneral=new DetalleOrdenCompraParameterReturnGeneral();
						
			


				String finalQueryGlobalOrdenCompra="";

				if(((this.ordencomprasForeignKey==null||this.ordencomprasForeignKey.size()<=0) && this.detalleordencompraConstantesFunciones.cargarid_orden_compraDetalleOrdenCompra)
					 || (this.esRecargarFks && this.detalleordencompraConstantesFunciones.cargarid_orden_compraDetalleOrdenCompra)) {

					if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionOrdenCompra()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=OrdenCompraConstantesFunciones.getArrayColumnasGlobalesOrdenCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalOrdenCompra=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,OrdenCompraConstantesFunciones.TABLENAME);

						finalQueryGlobalOrdenCompra=Funciones.GetFinalQueryAppend(finalQueryGlobalOrdenCompra, "");
						finalQueryGlobalOrdenCompra+=OrdenCompraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosOrdenComprasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalOrdenCompra=" WHERE " + ConstantesSql.ID + "="+detalleordencompraSessionBean.getlidOrdenCompraActual();
					}
				} else {
					finalQueryGlobalOrdenCompra="NONE";
				}


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.detalleordencompraConstantesFunciones.cargarid_empresaDetalleOrdenCompra)
					 || (this.esRecargarFks && this.detalleordencompraConstantesFunciones.cargarid_empresaDetalleOrdenCompra)) {

					if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+detalleordencompraSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.detalleordencompraConstantesFunciones.cargarid_sucursalDetalleOrdenCompra)
					 || (this.esRecargarFks && this.detalleordencompraConstantesFunciones.cargarid_sucursalDetalleOrdenCompra)) {

					if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+detalleordencompraSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.detalleordencompraConstantesFunciones.cargarid_ejercicioDetalleOrdenCompra)
					 || (this.esRecargarFks && this.detalleordencompraConstantesFunciones.cargarid_ejercicioDetalleOrdenCompra)) {

					if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+detalleordencompraSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.detalleordencompraConstantesFunciones.cargarid_periodoDetalleOrdenCompra)
					 || (this.esRecargarFks && this.detalleordencompraConstantesFunciones.cargarid_periodoDetalleOrdenCompra)) {

					if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+detalleordencompraSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.detalleordencompraConstantesFunciones.cargarid_anioDetalleOrdenCompra)
					 || (this.esRecargarFks && this.detalleordencompraConstantesFunciones.cargarid_anioDetalleOrdenCompra)) {

					if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+detalleordencompraSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.detalleordencompraConstantesFunciones.cargarid_mesDetalleOrdenCompra)
					 || (this.esRecargarFks && this.detalleordencompraConstantesFunciones.cargarid_mesDetalleOrdenCompra)) {

					if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+detalleordencompraSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalBodega="";

				if(((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0) && this.detalleordencompraConstantesFunciones.cargarid_bodegaDetalleOrdenCompra)
					 || (this.esRecargarFks && this.detalleordencompraConstantesFunciones.cargarid_bodegaDetalleOrdenCompra)) {

					if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodega=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodega=Funciones.GetFinalQueryAppend(finalQueryGlobalBodega, "");
						finalQueryGlobalBodega+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodega=" WHERE " + ConstantesSql.ID + "="+detalleordencompraSessionBean.getlidBodegaActual();
					}
				} else {
					finalQueryGlobalBodega="NONE";
				}


				String finalQueryGlobalProducto="";

				if(cargarCombosDependencia && ((this.productosForeignKey==null||this.productosForeignKey.size()<=0) && this.detalleordencompraConstantesFunciones.cargarid_productoDetalleOrdenCompra)
					 || (this.esRecargarFks && this.detalleordencompraConstantesFunciones.cargarid_productoDetalleOrdenCompra)) {

					if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalProducto, "");
						finalQueryGlobalProducto+=ProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalProducto=" WHERE " + ConstantesSql.ID + "="+detalleordencompraSessionBean.getlidProductoActual();
					}
				} else {
					finalQueryGlobalProducto="NONE";
				}


				String finalQueryGlobalUnidad="";

				if(cargarCombosDependencia && ((this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0) && this.detalleordencompraConstantesFunciones.cargarid_unidadDetalleOrdenCompra)
					 || (this.esRecargarFks && this.detalleordencompraConstantesFunciones.cargarid_unidadDetalleOrdenCompra)) {

					if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUnidad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

						finalQueryGlobalUnidad=Funciones.GetFinalQueryAppend(finalQueryGlobalUnidad, "");
						finalQueryGlobalUnidad+=UnidadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUnidad=" WHERE " + ConstantesSql.ID + "="+detalleordencompraSessionBean.getlidUnidadActual();
					}
				} else {
					finalQueryGlobalUnidad="NONE";
				}


				String finalQueryGlobalNovedadProducto="";

				if(((this.novedadproductosForeignKey==null||this.novedadproductosForeignKey.size()<=0) && this.detalleordencompraConstantesFunciones.cargarid_novedad_productoDetalleOrdenCompra)
					 || (this.esRecargarFks && this.detalleordencompraConstantesFunciones.cargarid_novedad_productoDetalleOrdenCompra)) {

					if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionNovedadProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=NovedadProductoConstantesFunciones.getArrayColumnasGlobalesNovedadProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalNovedadProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,NovedadProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalNovedadProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalNovedadProducto, "");
						finalQueryGlobalNovedadProducto+=NovedadProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosNovedadProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalNovedadProducto=" WHERE " + ConstantesSql.ID + "="+detalleordencompraSessionBean.getlidNovedadProductoActual();
					}
				} else {
					finalQueryGlobalNovedadProducto="NONE";
				}


				String finalQueryGlobalEstadoDetalleOrdenCompra="";

				if(((this.estadodetalleordencomprasForeignKey==null||this.estadodetalleordencomprasForeignKey.size()<=0) && this.detalleordencompraConstantesFunciones.cargarid_estado_detalle_orden_compraDetalleOrdenCompra)
					 || (this.esRecargarFks && this.detalleordencompraConstantesFunciones.cargarid_estado_detalle_orden_compraDetalleOrdenCompra)) {

					if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoDetalleOrdenCompra()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoDetalleOrdenCompraConstantesFunciones.getArrayColumnasGlobalesEstadoDetalleOrdenCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoDetalleOrdenCompra=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoDetalleOrdenCompraConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoDetalleOrdenCompra=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoDetalleOrdenCompra, "");
						finalQueryGlobalEstadoDetalleOrdenCompra+=EstadoDetalleOrdenCompraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoDetalleOrdenComprasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoDetalleOrdenCompra=" WHERE " + ConstantesSql.ID + "="+detalleordencompraSessionBean.getlidEstadoDetalleOrdenCompraActual();
					}
				} else {
					finalQueryGlobalEstadoDetalleOrdenCompra="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				detalleordencompraReturnGeneral=detalleordencompraLogic.cargarCombosLoteForeignKeyDetalleOrdenCompra(finalQueryGlobalOrdenCompra,finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalBodega,finalQueryGlobalProducto,finalQueryGlobalUnidad,finalQueryGlobalNovedadProducto,finalQueryGlobalEstadoDetalleOrdenCompra);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalOrdenCompra.equals("NONE")) {
				this.ordencomprasForeignKey=detalleordencompraReturnGeneral.getordencomprasForeignKey();
			}

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=detalleordencompraReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=detalleordencompraReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=detalleordencompraReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=detalleordencompraReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=detalleordencompraReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=detalleordencompraReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalBodega.equals("NONE")) {
				this.bodegasForeignKey=detalleordencompraReturnGeneral.getbodegasForeignKey();
			}

			if(!finalQueryGlobalProducto.equals("NONE")) {
				this.productosForeignKey=detalleordencompraReturnGeneral.getproductosForeignKey();
			}

			if(!finalQueryGlobalUnidad.equals("NONE")) {
				this.unidadsForeignKey=detalleordencompraReturnGeneral.getunidadsForeignKey();
			}

			if(!finalQueryGlobalNovedadProducto.equals("NONE")) {
				this.novedadproductosForeignKey=detalleordencompraReturnGeneral.getnovedadproductosForeignKey();
			}

			if(!finalQueryGlobalEstadoDetalleOrdenCompra.equals("NONE")) {
				this.estadodetalleordencomprasForeignKey=detalleordencompraReturnGeneral.getestadodetalleordencomprasForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyDetalleOrdenCompra()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyOrdenCompra();
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyBodega();
			this.addItemDefectoCombosForeignKeyProducto();
			this.addItemDefectoCombosForeignKeyUnidad();
			this.addItemDefectoCombosForeignKeyNovedadProducto();
			this.addItemDefectoCombosForeignKeyEstadoDetalleOrdenCompra();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyOrdenCompra()throws Exception {
		try {
			if(this.detalleordencompraSessionBean==null) {
				this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionOrdenCompra()) {
				OrdenCompra ordencompra=new OrdenCompra();
				OrdenCompraConstantesFunciones.setOrdenCompraDescripcion(ordencompra,Constantes.SMENSAJE_ESCOJA_OPCION);
				ordencompra.setId(null);

				if(!OrdenCompraConstantesFunciones.ExisteEnLista(this.ordencomprasForeignKey,ordencompra,true)) {

					this.ordencomprasForeignKey.add(0,ordencompra);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodega()throws Exception {
		try {

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				Bodega bodega=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodega,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodega.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegasForeignKey,bodega,true)) {

					this.bodegasForeignKey.add(0,bodega);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyProducto()throws Exception {
		try {

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				Producto producto=new Producto();
				ProductoConstantesFunciones.setProductoDescripcion(producto,Constantes.SMENSAJE_ESCOJA_OPCION);
				producto.setId(null);

				if(!ProductoConstantesFunciones.ExisteEnLista(this.productosForeignKey,producto,true)) {

					this.productosForeignKey.add(0,producto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUnidad()throws Exception {
		try {

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				Unidad unidad=new Unidad();
				UnidadConstantesFunciones.setUnidadDescripcion(unidad,Constantes.SMENSAJE_ESCOJA_OPCION);
				unidad.setId(null);

				if(!UnidadConstantesFunciones.ExisteEnLista(this.unidadsForeignKey,unidad,true)) {

					this.unidadsForeignKey.add(0,unidad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyNovedadProducto()throws Exception {
		try {

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionNovedadProducto()) {
				NovedadProducto novedadproducto=new NovedadProducto();
				NovedadProductoConstantesFunciones.setNovedadProductoDescripcion(novedadproducto,Constantes.SMENSAJE_ESCOJA_OPCION);
				novedadproducto.setId(null);

				if(!NovedadProductoConstantesFunciones.ExisteEnLista(this.novedadproductosForeignKey,novedadproducto,true)) {

					this.novedadproductosForeignKey.add(0,novedadproducto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoDetalleOrdenCompra()throws Exception {
		try {

			if(!this.detalleordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoDetalleOrdenCompra()) {
				EstadoDetalleOrdenCompra estadodetalleordencompra=new EstadoDetalleOrdenCompra();
				EstadoDetalleOrdenCompraConstantesFunciones.setEstadoDetalleOrdenCompraDescripcion(estadodetalleordencompra,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadodetalleordencompra.setId(null);

				if(!EstadoDetalleOrdenCompraConstantesFunciones.ExisteEnLista(this.estadodetalleordencomprasForeignKey,estadodetalleordencompra,true)) {

					this.estadodetalleordencomprasForeignKey.add(0,estadodetalleordencompra);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyDetalleOrdenCompra()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega("Todos");
			this.initActionsCombosForeignKeyProducto("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyDetalleOrdenCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyProducto(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyBodega(JComboBox jComboBoxBodegaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Bodega bodegaLocal=(Bodega)jComboBoxBodegaGenerico.getSelectedItem();

			if(bodegaLocal!=null  && bodegaLocal.getId()!=null  && bodegaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_bodega="+bodegaLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryProductoFromBodega(bodegaLocal);

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboProducto=sFinalQueryCombo;

			this.productosForeignKey=new ArrayList<Producto>();
			this.cargarCombosForeignKeyProducto(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyProducto(JComboBox jComboBoxProductoGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Producto productoLocal=(Producto)jComboBoxProductoGenerico.getSelectedItem();

			if(productoLocal!=null  && productoLocal.getId()!=null  && productoLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_producto="+productoLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryUnidadFromBodegaYProducto(productoLocal,this.detalleordencompra.getid_bodega());

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboUnidad=sFinalQueryCombo;

			this.unidadsForeignKey=new ArrayList<Unidad>();
			this.cargarCombosForeignKeyUnidad(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyBodega(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.addItemListener(new ComboBoxItemListener(this,"id_bodegaDetalleOrdenCompra"));
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetalleOrdenCompra"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.addActionListener(new ComboBoxActionListener(this,"id_bodegaDetalleOrdenCompra"));
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetalleOrdenCompra"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra"));

						this.jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra"));

					} else {
						this.jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra"));

						this.jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra"));

					}
			*/
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyProducto(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.addItemListener(new ComboBoxItemListener(this,"id_productoDetalleOrdenCompra"));
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetalleOrdenCompra"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.addActionListener(new ComboBoxActionListener(this,"id_productoDetalleOrdenCompra"));
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetalleOrdenCompra"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_productoFK_IdProductoDetalleOrdenCompra.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_productoFK_IdProductoDetalleOrdenCompra"));

						this.jComboBoxid_productoFK_IdProductoDetalleOrdenCompra.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetalleOrdenCompra"));

					} else {
						this.jComboBoxid_productoFK_IdProductoDetalleOrdenCompra.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_productoFK_IdProductoDetalleOrdenCompra"));

						this.jComboBoxid_productoFK_IdProductoDetalleOrdenCompra.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetalleOrdenCompra"));

					}
			*/
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyDetalleOrdenCompra()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleOrdenCompra();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra)throws Exception {	
		try {
			
			this.setActualOrdenCompraForeignKey(detalleordencompra.getid_orden_compra(),false,"Formulario");
			this.setActualBodegaForeignKey(detalleordencompra.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(detalleordencompra.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(detalleordencompra.getid_unidad(),false,"Formulario");
			this.setActualNovedadProductoForeignKey(detalleordencompra.getid_novedad_producto(),false,"Formulario");
			this.setActualEstadoDetalleOrdenCompraForeignKey(detalleordencompra.getid_estado_detalle_orden_compra(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra,String sTipoEvento)throws Exception {	
		try {
			
			

				if(detalleordencompra.getProducto()!=null && !sTipoEvento.equals("id_productoDetalleOrdenCompra")) { //sTipoEvento Evita Bucle Infinito

					this.productosForeignKey=new ArrayList<Producto>();
					this.productosForeignKey.add(detalleordencompra.getProducto());

					this.addItemDefectoCombosForeignKeyProducto();
					this.cargarCombosFrameProductosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyDetalleOrdenCompra()throws Exception {	
		try {
			
			this.setActualOrdenCompraForeignKey(this.detalleordencompraConstantesFunciones.getid_orden_compra(),false,"Formulario");
			this.setActualBodegaForeignKey(this.detalleordencompraConstantesFunciones.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(this.detalleordencompraConstantesFunciones.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(this.detalleordencompraConstantesFunciones.getid_unidad(),false,"Formulario");
			this.setActualNovedadProductoForeignKey(this.detalleordencompraConstantesFunciones.getid_novedad_producto(),false,"Formulario");
			this.setActualEstadoDetalleOrdenCompraForeignKey(this.detalleordencompraConstantesFunciones.getid_estado_detalle_orden_compra(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleOrdenCompra()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyDetalleOrdenCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyDetalleOrdenCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroDetalleOrdenCompra()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyDetalleOrdenCompra()throws Exception {
		try {
			

			this.cargarCombosFrameOrdenComprasForeignKey("Todos");
			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameBodegasForeignKey("Todos");
			this.cargarCombosFrameProductosForeignKey("Todos");
			this.cargarCombosFrameUnidadsForeignKey("Todos");
			this.cargarCombosFrameNovedadProductosForeignKey("Todos");
			this.cargarCombosFrameEstadoDetalleOrdenComprasForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyDetalleOrdenCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameOrdenComprasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameNovedadProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoDetalleOrdenComprasForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyDetalleOrdenCompra()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_orden_compraDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_orden_compraDetalleOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_orden_compraDetalleOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_empresaDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_empresaDetalleOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_empresaDetalleOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_sucursalDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_sucursalDetalleOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_sucursalDetalleOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_anioDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_anioDetalleOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_anioDetalleOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_mesDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_mesDetalleOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_mesDetalleOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_unidadDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_unidadDetalleOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_unidadDetalleOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_novedad_productoDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_novedad_productoDetalleOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_novedad_productoDetalleOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	















	public void recargarFormDetalleOrdenCompraBodega(JComboBox<?> jComboBoxGenericoBodega,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetalleOrdenCompraid_producto(jComboBoxGenericoBodega,sFormularioTipoBusqueda,"Bodega",false);
	}

	public void recargarFormDetalleOrdenCompraProducto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetalleOrdenCompraid_unidad(jComboBoxGenericoProducto,sFormularioTipoBusqueda,"Producto",false);
	}






	
	



	public void recargarFormDetalleOrdenCompraid_producto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Bodega")){
				this.setActualParaGuardarBodegaForeignKey(this.detalleordencompra,jComboBoxGenericoProducto);
			}

			if(this.detalleordencompra.getid_bodega()!=null && this.detalleordencompra.getid_bodega()!=0L) {
				sFinalQuery+="  WHERE  id_bodega="+this.detalleordencompra.getid_bodega();
			} else {
				sFinalQuery+="  WHERE  id_bodega=-1";
			}



			//BUCLE RECURSIVO
			this.setActualProductoForeignKey(this.detalleordencompra.getid_bodega(),true,sFormularioTipoBusqueda);

			this.cargarCombosProductosForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormDetalleOrdenCompraid_unidad(JComboBox<?> jComboBoxGenericoUnidad,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Producto")){
				this.setActualParaGuardarProductoForeignKey(this.detalleordencompra,jComboBoxGenericoUnidad);
			}

			if(this.detalleordencompra.getid_producto()!=null && this.detalleordencompra.getid_producto()!=0L) {
				sFinalQuery+="  WHERE  id_producto="+this.detalleordencompra.getid_producto();
			} else {
				sFinalQuery+="  WHERE  id_producto=-1";
			}



			//BUCLE RECURSIVO
			this.setActualUnidadForeignKey(this.detalleordencompra.getid_producto(),true,sFormularioTipoBusqueda);

			this.cargarCombosUnidadsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public DetalleOrdenCompraBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public DetalleOrdenCompraBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public DetalleOrdenCompraBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean(); 
		this.detalleordencompraConstantesFunciones=new DetalleOrdenCompraConstantesFunciones(); 
		this.detalleordencompraBean=new DetalleOrdenCompra();//(this.detalleordencompraConstantesFunciones); 		
		this.detalleordencompraReturnGeneral=new DetalleOrdenCompraParameterReturnGeneral(); 
		
		this.detalleordencompraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.detalleordencompraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public DetalleOrdenCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public DetalleOrdenCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public DetalleOrdenCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessDetalleOrdenCompra(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.detalleordencompraConstantesFunciones=new DetalleOrdenCompraConstantesFunciones(); 
			this.detalleordencompraBean=new DetalleOrdenCompra();//this.detalleordencompraConstantesFunciones); 			
			this.detalleordencompraReturnGeneral=new DetalleOrdenCompraParameterReturnGeneral(); 
		
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Detalle Orden Compra Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.detalleordencompra=new DetalleOrdenCompra();
			this.detalleordencompras = new ArrayList<DetalleOrdenCompra>();
			this.detalleordencomprasAux = new ArrayList<DetalleOrdenCompra>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic=new DetalleOrdenCompraLogic();
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}
			
			//this.detalleordencompraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.detalleordencompraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormDetalleOrdenCompra);
				
				if(!this.conCargarMinimo) {
					/*
					if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleOrdenCompra);	
					}
					
					if(this.jInternalFrameImportacionDetalleOrdenCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleOrdenCompra);							
					}
					*/
				}
				
				if(this.jInternalFrameTotalesDetalleOrdenCompra!=null) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetalleOrdenCompra);
				}
				
				if(!this.conCargarMinimo) {
					/*
					if(this.jInternalFrameOrderByDetalleOrdenCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByDetalleOrdenCompra);					
					}
					*/
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleOrdenCompra);
				this.jInternalFrameDetalleFormDetalleOrdenCompra.setVisible(false);
				this.jInternalFrameDetalleFormDetalleOrdenCompra.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				/*
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleOrdenCompra);
					this.jInternalFrameReporteDinamicoDetalleOrdenCompra.setVisible(false);
					this.jInternalFrameReporteDinamicoDetalleOrdenCompra.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionDetalleOrdenCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionDetalleOrdenCompra);
					this.jInternalFrameImportacionDetalleOrdenCompra.setVisible(false);
					this.jInternalFrameImportacionDetalleOrdenCompra.setSelected(false);
				}
				
				*/
			}
			
			if(this.jInternalFrameTotalesDetalleOrdenCompra!=null) {
				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetalleOrdenCompra);
				this.jInternalFrameTotalesDetalleOrdenCompra.setVisible(false);
				this.jInternalFrameTotalesDetalleOrdenCompra.setSelected(false);
			}
			
			if(!this.conCargarMinimo) {
				/*
				if(this.jInternalFrameOrderByDetalleOrdenCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByDetalleOrdenCompra);
					this.jInternalFrameOrderByDetalleOrdenCompra.setVisible(false);
					this.jInternalFrameOrderByDetalleOrdenCompra.setSelected(false);				
				}
				*/
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idDetalleOrdenCompraActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=DetalleOrdenCompraConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.detalleordencompraReturnGeneral=new DetalleOrdenCompraParameterReturnGeneral();
			
			this.detalleordencompraParameterGeneral=new DetalleOrdenCompraParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.detalleordencompraLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			/*
			if(!this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			*/
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(DetalleOrdenCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleOrdenCompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detalleordencompraSessionBean.getEsGuardarRelacionado(),this.detalleordencompraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleOrdenCompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detalleordencompraSessionBean.getEsGuardarRelacionado(),this.detalleordencompraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoDetalleOrdenCompra=false;
			this.isVisibilidadCeldaDuplicarDetalleOrdenCompra=true;
			this.isVisibilidadCeldaCopiarDetalleOrdenCompra=true;
			this.isVisibilidadCeldaVerFormDetalleOrdenCompra=true;
			this.isVisibilidadCeldaOrdenDetalleOrdenCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=false;
			this.isVisibilidadCeldaModificarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaActualizarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaEliminarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaCancelarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaGuardarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdBodega=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoDetalleOrdenCompra=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdNovedadProducto=true;
			this.isVisibilidadFK_IdOrdenCompra=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdProducto=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdUnidad=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesDetalleOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosDetalleOrdenCompra();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioDetalleOrdenCompra(false);
			
			this.setPermisosUsuarioDetalleOrdenCompra();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detalleordencompraSessionBean.getEsGuardarRelacionado() 
				|| (this.detalleordencompraSessionBean.getEsGuardarRelacionado() && this.detalleordencompraSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioDetalleOrdenCompraClasesRelacionadas();
			}
			
			if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioDetalleOrdenCompraClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosDetalleOrdenCompra();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualDetalleOrdenCompra();
			}
			
			if(!this.isPermisoBusquedaDetalleOrdenCompra) {
				//BYDAN_BUSQUEDAS
				/*
				this.jTabbedPaneBusquedasDetalleOrdenCompra.setVisible(false);				
				*/
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioDetalleOrdenCompra,this.isPermisoPaginacionMedioDetalleOrdenCompra,this.isPermisoPaginacionTodoDetalleOrdenCompra);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(DetalleOrdenCompraConstantesFunciones.getTiposSeleccionarDetalleOrdenCompra());
				
				this.tiposColumnasSelect=DetalleOrdenCompraConstantesFunciones.getTiposSeleccionarDetalleOrdenCompra(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioDetalleOrdenCompra();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioDetalleOrdenCompra(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioDetalleOrdenCompra(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleOrdenCompra() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			this.arrDatoGeneralTotales= new  ArrayList<DatoGeneral>();
			
			/*
			this.arrOrderBy= new  ArrayList<OrderBy>();
			*/
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			/*
			this.traerValoresTablaOrderBy();			
			*/
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.ordencompraLogic=new OrdenCompraLogic();
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.bodegaLogic=new BodegaLogic();
			this.productoLogic=new ProductoLogic();
			this.unidadLogic=new UnidadLogic();
			this.novedadproductoLogic=new NovedadProductoLogic();
			this.estadodetalleordencompraLogic=new EstadoDetalleOrdenCompraLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				detalleordencompraImplementable= (DetalleOrdenCompraImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleOrdenCompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				detalleordencompraImplementableHome= (DetalleOrdenCompraImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleOrdenCompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.detalleordencompras= new ArrayList<DetalleOrdenCompra>();
			this.detalleordencomprasEliminados= new ArrayList<DetalleOrdenCompra>();
						
			this.isEsNuevoDetalleOrdenCompra=false;
			this.esParaAccionDesdeFormularioDetalleOrdenCompra=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idProductoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.ordencomprasForeignKey=new ArrayList<OrdenCompra>() ;
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.bodegasForeignKey=new ArrayList<Bodega>() ;
			this.productosForeignKey=new ArrayList<Producto>() ;
			this.unidadsForeignKey=new ArrayList<Unidad>() ;
			this.novedadproductosForeignKey=new ArrayList<NovedadProducto>() ;
			this.estadodetalleordencomprasForeignKey=new ArrayList<EstadoDetalleOrdenCompra>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyDetalleOrdenCompra(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroDetalleOrdenCompra();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=DetalleOrdenCompraConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesDetalleOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingDetalleOrdenCompra(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioDetalleOrdenCompra();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioDetalleOrdenCompra();
			}
			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				/*
				
				for(int i=0; i<this.jTabbedPaneBusquedasDetalleOrdenCompra.getTabCount(); i++) {
					this.jTabbedPaneBusquedasDetalleOrdenCompra.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasDetalleOrdenCompra.setSelectedIndex(0);
				}	
				
				*/
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessDetalleOrdenCompra(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga DetalleOrdenCompra: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectDetalleOrdenCompra() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesDetalleOrdenCompra")) {
				iIndex=this.jInternalFrameDetalleFormDetalleOrdenCompra.jTabbedPaneRelacionesDetalleOrdenCompra.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormDetalleOrdenCompra.jTabbedPaneRelacionesDetalleOrdenCompra.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessDetalleOrdenCompra();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyDetalleOrdenCompra(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyDetalleOrdenCompra(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyDetalleOrdenCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyDetalleOrdenCompraListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyDetalleOrdenCompra();
		
		this.cargarCombosFrameForeignKeyDetalleOrdenCompra();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyDetalleOrdenCompra();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyDetalleOrdenCompra();
		}
	}
	
	

	public void cargarCombosForeignKeyOrdenCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyOrdenCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyOrdenCompra();
				this.cargarCombosFrameOrdenComprasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaOrdenCompra(this.ordencomprasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodega(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyBodega("Todos");
				}

			this.recargarComboTablaBodega(this.bodegasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaProducto(this.productosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaUnidad(this.unidadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyNovedadProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyNovedadProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyNovedadProducto();
				this.cargarCombosFrameNovedadProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaNovedadProducto(this.novedadproductosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoDetalleOrdenCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoDetalleOrdenCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoDetalleOrdenCompra();
				this.cargarCombosFrameEstadoDetalleOrdenComprasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaEstadoDetalleOrdenCompra(this.estadodetalleordencomprasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoDetalleOrdenCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			
			
			if(jTableDatosDetalleOrdenCompra.getRowCount()>=1) {
				jTableDatosDetalleOrdenCompra.removeRowSelectionInterval(0, jTableDatosDetalleOrdenCompra.getRowCount()-1);						
			}
			
			this.isEsNuevoDetalleOrdenCompra=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoDetalleOrdenCompra(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesDetalleOrdenCompra(true);			
			//this.detalleordencompra=new DetalleOrdenCompra();
			//this.detalleordencompra.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleOrdenCompra(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleOrdenCompra() ;
			
			if(DetalleOrdenCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleOrdenCompra(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.detalleordencompra);	
			this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);				
			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			
			if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar DetalleOrdenCompra: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarDetalleOrdenCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<DetalleOrdenCompra> detalleordencomprasSeleccionados=new ArrayList<DetalleOrdenCompra>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosDetalleOrdenCompra.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosDetalleOrdenCompra.getSelectedRows().length;			
			}
			
			detalleordencomprasSeleccionados=this.getDetalleOrdenComprasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoDetalleOrdenCompra--;			
				//DetalleOrdenCompra detalleordencompraAux= new DetalleOrdenCompra();			
				//detalleordencompraAux.setId(this.iIdNuevoDetalleOrdenCompra);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//DetalleOrdenCompra detalleordencompraOrigen=new DetalleOrdenCompra();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(DetalleOrdenCompra detalleordencompraOrigen : detalleordencomprasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							detalleordencompraOrigen =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleordencompraOrigen =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaDetalleOrdenCompra();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.detalleordencompra.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosDetalleOrdenCompra(detalleordencompraOrigen,this.detalleordencompra,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detalleordencompraLogic.getDetalleOrdenCompras().add(this.detalleordencompraAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detalleordencompras.add(this.detalleordencompraAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
				
				this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(this.getIndiceNuevoDetalleOrdenCompra(), this.getIndiceNuevoDetalleOrdenCompra());
				
				int iLastRow =  this.jTableDatosDetalleOrdenCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleOrdenCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleOrdenCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<DetalleOrdenCompra> detalleordencomprasSeleccionados=new ArrayList<DetalleOrdenCompra>();									
		
			DetalleOrdenCompra detalleordencompraOrigen=new DetalleOrdenCompra();
			DetalleOrdenCompra detalleordencompraDestino=new DetalleOrdenCompra();
				
			detalleordencomprasSeleccionados=this.getDetalleOrdenComprasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosDetalleOrdenCompra.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || detalleordencomprasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosDetalleOrdenCompra.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencompraOrigen =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detalleordencompraOrigen =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleordencompraDestino =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detalleordencompraDestino =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				detalleordencompraOrigen =detalleordencomprasSeleccionados.get(0);
				detalleordencompraDestino =detalleordencomprasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosDetalleOrdenCompra(detalleordencompraOrigen,detalleordencompraDestino,true,false);
				
				detalleordencompraDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detalleordencompraDestino,detalleordencompraLogic.getDetalleOrdenCompras());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleordencompraDestino,detalleordencompras);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
				
				//this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(this.getIndiceNuevoDetalleOrdenCompra(), this.getIndiceNuevoDetalleOrdenCompra());
				
				int iLastRow =  this.jTableDatosDetalleOrdenCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleOrdenCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleOrdenCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormDetalleOrdenCompra.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesDetalleOrdenCompra.isVisible();
			
			//BYDAN_BUSQUEDAS
			/*
			this.jTabbedPaneBusquedasDetalleOrdenCompra.setVisible(!isVisible);			
			*/
			
			this.jPanelParametrosReportesDetalleOrdenCompra.setVisible(!isVisible);
			this.jPanelPaginacionDetalleOrdenCompra.setVisible(!isVisible);
			this.jPanelAccionesDetalleOrdenCompra.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameDetalleOrdenCompra();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			this.cerrarFrameReporteDinamicoDetalleOrdenCompra();
			*/
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			this.cerrarFrameImportacionDetalleOrdenCompra();
			*/
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirTotalesDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.abrirInicializarFrameTotalesDetalleOrdenCompra();
			
			this.abrirFrameTotalesDetalleOrdenCompra();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarTotalesDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.cerrarFrameTotalesDetalleOrdenCompra();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirOrderByDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			
			this.abrirInicializarFrameOrderByDetalleOrdenCompra();
			
			this.abrirFrameOrderByDetalleOrdenCompra();
			*/
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			this.cerrarFrameOrderByDetalleOrdenCompra();
			*/
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleDetalleOrdenCompra(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleOrdenCompra);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormDetalleOrdenCompra.isMaximum()) {
					this.jInternalFrameDetalleFormDetalleOrdenCompra.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormDetalleOrdenCompra.setSize(this.jInternalFrameDetalleFormDetalleOrdenCompra.iWidthFormulario,this.jInternalFrameDetalleFormDetalleOrdenCompra.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormDetalleOrdenCompra.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormDetalleOrdenCompra.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormDetalleOrdenCompra.isMaximum()) {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jContentPaneDetalleDetalleOrdenCompra.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormDetalleOrdenCompra.jTabbedPaneRelacionesDetalleOrdenCompra.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormDetalleOrdenCompra.jContentPaneDetalleDetalleOrdenCompra.getWidth(),DetalleOrdenCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleOrdenCompra.jTabbedPaneRelacionesDetalleOrdenCompra.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormDetalleOrdenCompra.jContentPaneDetalleDetalleOrdenCompra.getWidth(),DetalleOrdenCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleOrdenCompra.jTabbedPaneRelacionesDetalleOrdenCompra.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormDetalleOrdenCompra.jContentPaneDetalleDetalleOrdenCompra.getWidth(),DetalleOrdenCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormDetalleOrdenCompra.setVisible(true);
	        this.jInternalFrameDetalleFormDetalleOrdenCompra.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	/*
	public void abrirInicializarFrameOrderByDetalleOrdenCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByDetalleOrdenCompra==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByDetalleOrdenCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleOrdenCompra,false,this);
				} else {
					this.jInternalFrameOrderByDetalleOrdenCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleOrdenCompra,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByDetalleOrdenCompra);
				this.jInternalFrameOrderByDetalleOrdenCompra.setVisible(false);
				this.jInternalFrameOrderByDetalleOrdenCompra.setSelected(false);
				
				this.jInternalFrameOrderByDetalleOrdenCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleOrdenCompra"));
				
				this.inicializarActualizarBindingTablaOrderByDetalleOrdenCompra();
			}
		} catch (final Exception e) {
			
		}
	}
	*/
	
	/*
	public void abrirInicializarFrameImportacionDetalleOrdenCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionDetalleOrdenCompra==null) {
				
				this.jInternalFrameImportacionDetalleOrdenCompra=new ImportacionJInternalFrame(DetalleOrdenCompraConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleOrdenCompra);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionDetalleOrdenCompra);
				this.jInternalFrameImportacionDetalleOrdenCompra.setVisible(false);
				this.jInternalFrameImportacionDetalleOrdenCompra.setSelected(false);


				this.jInternalFrameImportacionDetalleOrdenCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleOrdenCompra"));
				this.jInternalFrameImportacionDetalleOrdenCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleOrdenCompra"));
				this.jInternalFrameImportacionDetalleOrdenCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleOrdenCompra"));


			}
		} catch (final Exception e) {
			
		}
	}		
	*/
	
	/*
	public void abrirInicializarFrameReporteDinamicoDetalleOrdenCompra() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra==null) {
				this.jInternalFrameReporteDinamicoDetalleOrdenCompra=new ReporteDinamicoJInternalFrame(DetalleOrdenCompraConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleOrdenCompra);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleOrdenCompra);
				this.jInternalFrameReporteDinamicoDetalleOrdenCompra.setVisible(false);
				this.jInternalFrameReporteDinamicoDetalleOrdenCompra.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleOrdenCompra"));
				this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleOrdenCompra"));
				this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleOrdenCompra"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleOrdenCompra();
			}

		} catch (final Exception e) {
			
		}
	}	
	*/
	
	public void abrirInicializarFrameTotalesDetalleOrdenCompra() throws Exception {	    	        
	    try {			
			if(this.jInternalFrameTotalesDetalleOrdenCompra==null) {
				this.jInternalFrameTotalesDetalleOrdenCompra=new TotalesJInternalFrame(this.jButtonAbrirTotalesDetalleOrdenCompra,STIPO_TAMANIO_GENERAL,this);
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetalleOrdenCompra);

				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetalleOrdenCompra);
				this.jInternalFrameTotalesDetalleOrdenCompra.setVisible(false);
				this.jInternalFrameTotalesDetalleOrdenCompra.setSelected(false);


				this.jInternalFrameTotalesDetalleOrdenCompra.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetalleOrdenCompra"));
								
				this.inicializarActualizarBindingTablaTotalesDetalleOrdenCompra();
				
				this.redimensionarTablaTotales();
			}			
		} catch (final Exception e) {
			
		}
	}	
	
		
					
	public void cerrarFrameDetalleDetalleOrdenCompra() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleOrdenCompra);
			
	       	this.jInternalFrameDetalleFormDetalleOrdenCompra.setVisible(false);
	        this.jInternalFrameDetalleFormDetalleOrdenCompra.setSelected(false);
			
			//this.jInternalFrameDetalleFormDetalleOrdenCompra.dispose();
			//this.jInternalFrameDetalleFormDetalleOrdenCompra=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	/*
	public void abrirFrameReporteDinamicoDetalleOrdenCompra() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoDetalleOrdenCompra.setVisible(true);
	        this.jInternalFrameReporteDinamicoDetalleOrdenCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void abrirFrameImportacionDetalleOrdenCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionDetalleOrdenCompra.setVisible(true);
	        this.jInternalFrameImportacionDetalleOrdenCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}	
	*/
	
	public void abrirFrameTotalesDetalleOrdenCompra() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetalleOrdenCompra.setVisible(true);
	        this.jInternalFrameTotalesDetalleOrdenCompra.setSelected(true);
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	public void cerrarFrameTotalesDetalleOrdenCompra() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetalleOrdenCompra.setVisible(false);
	        this.jInternalFrameTotalesDetalleOrdenCompra.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	/*
	public void abrirFrameOrderByDetalleOrdenCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByDetalleOrdenCompra.setVisible(true);
	        this.jInternalFrameOrderByDetalleOrdenCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void cerrarFrameOrderByDetalleOrdenCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByDetalleOrdenCompra.setVisible(false);
	        this.jInternalFrameOrderByDetalleOrdenCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void cerrarFrameReporteDinamicoDetalleOrdenCompra() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoDetalleOrdenCompra.setVisible(false);
	        this.jInternalFrameReporteDinamicoDetalleOrdenCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void cerrarFrameImportacionDetalleOrdenCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionDetalleOrdenCompra.setVisible(false);
	        this.jInternalFrameImportacionDetalleOrdenCompra.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	

				public void abrirFrameTreeOrdenCompra(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeOrdenCompra);
						OrdenCompraBeanSwingJInternalFrame ordencompraBeanSwingJInternalFrame=new OrdenCompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						ordencompraBeanSwingJInternalFrame.setJInternalFrameParent(this);
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.sTipoBusqueda="OrdenCompra";
						}

						ordencompraBeanSwingJInternalFrame.getTodosOrdenCompraArbol();
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.setOrdenCompras(ordencompraBeanSwingJInternalFrame.ordencomprasArbol);
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.CargarTreeOrdenCompra();
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.setVisible(true);
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.jInternalFrameParent=this;
						TitledBorder titledBorderDetalleOrdenCompra=(TitledBorder)this.jScrollPanelDatosDetalleOrdenCompra.getBorder();
						TitledBorder titledBorderOrdenCompra=(TitledBorder)ordencompraBeanSwingJInternalFrame.jScrollPanelDatosOrdenCompra.getBorder();

						titledBorderOrdenCompra.setTitle(titledBorderDetalleOrdenCompra.getTitle() + " -> OrdenCompra");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,ordencompraBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(ordencompraBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeOrdenCompra(OrdenCompraBeanSwingJInternalFrame jInternalFrameTreeOrdenCompra) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeOrdenCompra);
						jInternalFrameTreeOrdenCompra.setVisible(false);
						jInternalFrameTreeOrdenCompra.setSelected(false);
						//jInternalFrameTreeOrdenCompra.dispose();
						//jInternalFrameTreeOrdenCompra=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarDetalleOrdenCompra(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarDetalleOrdenCompra(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesDetalleOrdenCompra(true);
			//this.isEsNuevoDetalleOrdenCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesDetalleOrdenCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleOrdenCompra(false) ;
			
			if(detalleordencompraSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(DetalleOrdenCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleOrdenCompra(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleOrdenCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaDetalleOrdenCompraActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarDetalleOrdenCompra(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesDetalleOrdenCompra(true);
			//this.isEsNuevoDetalleOrdenCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.detalleordencompra.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesDetalleOrdenCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesDetalleOrdenCompra(false) ;
			
			if(DetalleOrdenCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleOrdenCompra(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleOrdenCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Producto")) {
				if(!this.detalleordencompraConstantesFunciones.cargarid_productoDetalleOrdenCompra) {
					this.cargarCombosProductosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
					this.cargarCombosFrameProductosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_producto (id);

				this.recargarComboTablaProducto(this.productosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	
	
	public void recargarComboTablaOrdenCompra(List<OrdenCompra> ordencomprasForeignKey)throws Exception{
		TableColumn tableColumnOrdenCompra=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA));
		TableCellEditor tableCellEditorOrdenCompra =tableColumnOrdenCompra.getCellEditor();

		OrdenCompraTableCell ordencompraTableCellFk=(OrdenCompraTableCell)tableCellEditorOrdenCompra;

		if(ordencompraTableCellFk!=null) {
			ordencompraTableCellFk.setordencomprasForeignKey(ordencomprasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//ordencompraTableCellFk.setRowActual(intSelectedRow);
			//ordencompraTableCellFk.setordencomprasForeignKeyActual(ordencomprasForeignKey);
		//}


		if(ordencompraTableCellFk!=null) {
			ordencompraTableCellFk.RecargarOrdenComprasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
					
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBodega(List<Bodega> bodegasForeignKey)throws Exception{
		TableColumn tableColumnBodega=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDBODEGA));
		TableCellEditor tableCellEditorBodega =tableColumnBodega.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodega;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegasForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaProducto(List<Producto> productosForeignKey)throws Exception{
		TableColumn tableColumnProducto=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDPRODUCTO));
		TableCellEditor tableCellEditorProducto =tableColumnProducto.getCellEditor();

		ProductoTableCell productoTableCellFk=(ProductoTableCell)tableCellEditorProducto;

		if(productoTableCellFk!=null) {
			productoTableCellFk.setproductosForeignKey(productosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//productoTableCellFk.setRowActual(intSelectedRow);
			//productoTableCellFk.setproductosForeignKeyActual(productosForeignKey);
		//}


		if(productoTableCellFk!=null) {
			productoTableCellFk.RecargarProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaUnidad(List<Unidad> unidadsForeignKey)throws Exception{
		TableColumn tableColumnUnidad=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDUNIDAD));
		TableCellEditor tableCellEditorUnidad =tableColumnUnidad.getCellEditor();

		UnidadTableCell unidadTableCellFk=(UnidadTableCell)tableCellEditorUnidad;

		if(unidadTableCellFk!=null) {
			unidadTableCellFk.setunidadsForeignKey(unidadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//unidadTableCellFk.setRowActual(intSelectedRow);
			//unidadTableCellFk.setunidadsForeignKeyActual(unidadsForeignKey);
		//}


		if(unidadTableCellFk!=null) {
			unidadTableCellFk.RecargarUnidadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaNovedadProducto(List<NovedadProducto> novedadproductosForeignKey)throws Exception{
		TableColumn tableColumnNovedadProducto=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDNOVEDADPRODUCTO));
		TableCellEditor tableCellEditorNovedadProducto =tableColumnNovedadProducto.getCellEditor();

		NovedadProductoTableCell novedadproductoTableCellFk=(NovedadProductoTableCell)tableCellEditorNovedadProducto;

		if(novedadproductoTableCellFk!=null) {
			novedadproductoTableCellFk.setnovedadproductosForeignKey(novedadproductosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//novedadproductoTableCellFk.setRowActual(intSelectedRow);
			//novedadproductoTableCellFk.setnovedadproductosForeignKeyActual(novedadproductosForeignKey);
		//}


		if(novedadproductoTableCellFk!=null) {
			novedadproductoTableCellFk.RecargarNovedadProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoDetalleOrdenCompra(List<EstadoDetalleOrdenCompra> estadodetalleordencomprasForeignKey)throws Exception{
		TableColumn tableColumnEstadoDetalleOrdenCompra=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDESTADODETALLEORDENCOMPRA));
		TableCellEditor tableCellEditorEstadoDetalleOrdenCompra =tableColumnEstadoDetalleOrdenCompra.getCellEditor();

		EstadoDetalleOrdenCompraTableCell estadodetalleordencompraTableCellFk=(EstadoDetalleOrdenCompraTableCell)tableCellEditorEstadoDetalleOrdenCompra;

		if(estadodetalleordencompraTableCellFk!=null) {
			estadodetalleordencompraTableCellFk.setestadodetalleordencomprasForeignKey(estadodetalleordencomprasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadodetalleordencompraTableCellFk.setRowActual(intSelectedRow);
			//estadodetalleordencompraTableCellFk.setestadodetalleordencomprasForeignKeyActual(estadodetalleordencomprasForeignKey);
		//}


		if(estadodetalleordencompraTableCellFk!=null) {
			estadodetalleordencompraTableCellFk.RecargarEstadoDetalleOrdenComprasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_producto (Long id) throws Exception {
		this.setActualProductoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesDetalleOrdenCompra(false);
			
			//if(!this.isEsNuevoDetalleOrdenCompra) {								
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				
			}
			
			if(this.permiteMantenimiento(this.detalleordencompra)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoDetalleOrdenCompra=true;
					this.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
					this.isEsNuevoDetalleOrdenCompra=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoDetalleOrdenCompra=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoDetalleOrdenCompra=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleOrdenCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleOrdenCompra(false);
				
				this.habilitarDeshabilitarControlesDetalleOrdenCompra(false);
			
												
				
				if(DetalleOrdenCompraJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleDetalleOrdenCompra();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoDetalleOrdenCompraActionPerformed(evt,detalleordencompraSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualDetalleOrdenCompra(this.detalleordencompra,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,detalleordencompraSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.detalleordencompra.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(DetalleOrdenCompra.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleOrdenCompra.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				this.detalleordencompra.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				this.detalleordencompra.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.detalleordencompra)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((DetalleOrdenCompraModel) this.jTableDatosDetalleOrdenCompra.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoDetalleOrdenCompra=true;
				this.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
				this.isEsNuevoDetalleOrdenCompra=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleOrdenCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleOrdenCompra(false);
				
				this.habilitarDeshabilitarControlesDetalleOrdenCompra(false);
				
				
				
				if(DetalleOrdenCompraJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleDetalleOrdenCompra();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosDetalleOrdenCompra.getRowCount()>=1) {
				jTableDatosDetalleOrdenCompra.removeRowSelectionInterval(0, jTableDatosDetalleOrdenCompra.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesDetalleOrdenCompra(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleOrdenCompra(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleOrdenCompra(false) ;
			
			this.isEsNuevoDetalleOrdenCompra=false;
			
			if(DetalleOrdenCompraJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleDetalleOrdenCompra();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingDetalleOrdenCompra(false);
				
				//SI ES MANUAL
				if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualDetalleOrdenCompra();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoDetalleOrdenCompra--;			
			//DetalleOrdenCompra detalleordencompraAux= new DetalleOrdenCompra();			
			//detalleordencompraAux.setId(this.iIdNuevoDetalleOrdenCompra);
			
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaDetalleOrdenCompra();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
			
			this.detalleordencompra.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.detalleordencompraLogic.getDetalleOrdenCompras().add(this.detalleordencompraAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.detalleordencompras.add(this.detalleordencompraAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
			
			this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(this.getIndiceNuevoDetalleOrdenCompra(), this.getIndiceNuevoDetalleOrdenCompra());
			
			int iLastRow =  this.jTableDatosDetalleOrdenCompra.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosDetalleOrdenCompra.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosDetalleOrdenCompra.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleOrdenCompra(false);
			
			//SI ES MANUAL
			if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleOrdenCompra();
			}
			
			//this.abrirFrameTreeDetalleOrdenCompra();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	/*
	public void jButtonGenerarImportacionDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Detalle Orden CompraS ?", "MANTENIMIENTO DE Detalle Orden Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionDetalleOrdenCompra.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralDetalleOrdenCompra();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.detalleordencompraReturnGeneral=detalleordencompraLogic.procesarImportacionDetalleOrdenComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.detalleordencompraParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarDetalleOrdenCompraReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	*/
	
	/*
	public void jButtonAbrirImportacionDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionDetalleOrdenCompra.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionDetalleOrdenCompra.setFileImportacion(this.jInternalFrameImportacionDetalleOrdenCompra.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionDetalleOrdenCompra.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionDetalleOrdenCompra.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionDetalleOrdenCompra.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionDetalleOrdenCompra.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	*/
	
	public void jButtonGenerarReporteDinamicoDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<DetalleOrdenCompra> detalleordencomprasSeleccionados=new ArrayList<DetalleOrdenCompra>();		

		detalleordencomprasSeleccionados=this.getDetalleOrdenComprasSeleccionados(true);
		
		/*
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		*/
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("DetalleOrdenCompraBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"DetalleOrdenCompraBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			/*
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			*/
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteDetalleOrdenCompras("Todos",detalleordencomprasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Orden Compra",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	/*
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_OrdenCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_OrdenCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_OrdenCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_OrdenCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDBODEGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Bodega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Bodega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Bodega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Bodega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Producto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Producto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Producto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Producto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDUNIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Unidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Unidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Unidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Unidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_DESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_COSTOUNITARIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_stoUnitario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_stoUnitario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_stoUnitario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_stoUnitario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_a_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_a_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_a_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_a_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IVAVALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_aValor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_aValor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_aValor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_aValor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_COSTOTOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_stoTotal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_stoTotal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_stoTotal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_stoTotal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_sponible_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_sponible_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_sponible_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_sponible_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDNOVEDADPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_NovedadProducto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_NovedadProducto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_NovedadProducto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_NovedadProducto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDESTADODETALLEORDENCOMPRA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoDetalleOrdenCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoDetalleOrdenCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoDetalleOrdenCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoDetalleOrdenCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroComprobante_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroComprobante_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroComprobante_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroComprobante_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_LOTECLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_teCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_teCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_teCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_teCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	*/
	
	/*
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case DetalleOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					sNombreCampoCategoria="id_orden_compra";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoria="id_bodega";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoria="id_producto";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoria="id_unidad";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD:
					sNombreCampoCategoria="cantidad";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoria="descuento";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_COSTOUNITARIO:
					sNombreCampoCategoria="costo_unitario";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoria="iva";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IVAVALOR:
					sNombreCampoCategoria="iva_valor";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_COSTOTOTAL:
					sNombreCampoCategoria="costo_total";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE:
					sNombreCampoCategoria="disponible";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDNOVEDADPRODUCTO:
					sNombreCampoCategoria="id_novedad_producto";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDESTADODETALLEORDENCOMPRA:
					sNombreCampoCategoria="id_estado_detalle_orden_compra";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					sNombreCampoCategoria="numero_comprobante";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_LOTECLIENTE:
					sNombreCampoCategoria="lote_cliente";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case DetalleOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					sNombreCampoCategoriaValor="id_orden_compra";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoriaValor="id_bodega";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoriaValor="id_producto";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoriaValor="id_unidad";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD:
					sNombreCampoCategoriaValor="cantidad";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoriaValor="descuento";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_COSTOUNITARIO:
					sNombreCampoCategoriaValor="costo_unitario";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoriaValor="iva";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IVAVALOR:
					sNombreCampoCategoriaValor="iva_valor";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_COSTOTOTAL:
					sNombreCampoCategoriaValor="costo_total";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE:
					sNombreCampoCategoriaValor="disponible";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDNOVEDADPRODUCTO:
					sNombreCampoCategoriaValor="id_novedad_producto";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDESTADODETALLEORDENCOMPRA:
					sNombreCampoCategoriaValor="id_estado_detalle_orden_compra";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					sNombreCampoCategoriaValor="numero_comprobante";
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_LOTECLIENTE:
					sNombreCampoCategoriaValor="lote_cliente";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Orden Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_orden_compra");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDBODEGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_producto");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDUNIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Unidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_unidad");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_DESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_COSTOUNITARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo Unitario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo_unitario");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"iva");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IVAVALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"iva_valor");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_COSTOTOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo_total");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Disponible",sNombreCampoCategoria,sNombreCampoCategoriaValor,"disponible");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDNOVEDADPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Novedad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_novedad_producto");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDESTADODETALLEORDENCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_detalle_orden_compra");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nro Comprobante",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_comprobante");
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_LOTECLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Lote Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"lote_cliente");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	*/
	
	//@SuppressWarnings("deprecation")
	/*
	public void jButtonGenerarExcelReporteDinamicoDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<DetalleOrdenCompra> detalleordencomprasSeleccionados=new ArrayList<DetalleOrdenCompra>();		
		
		detalleordencomprasSeleccionados=this.getDetalleOrdenComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleordencompra";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("DetalleOrdenCompras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case DetalleOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getordencompra_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDBODEGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDBODEGA);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getbodega_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDPRODUCTO);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDUNIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDUNIDAD);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getunidad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getcantidad());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_DESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_DESCUENTO);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getdescuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_COSTOUNITARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_COSTOUNITARIO);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getcosto_unitario());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IVA);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getiva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IVAVALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IVAVALOR);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getiva_valor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_COSTOTOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_COSTOTOTAL);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getcosto_total());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getdisponible());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDNOVEDADPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDNOVEDADPRODUCTO);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getnovedadproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_IDESTADODETALLEORDENCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDESTADODETALLEORDENCOMPRA);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getestadodetalleordencompra_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getnumero_comprobante());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleOrdenCompraConstantesFunciones.LABEL_LOTECLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_LOTECLIENTE);
					iRow++;

					for(DetalleOrdenCompra detalleordencompra:detalleordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleordencompra.getlote_cliente());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelDetalleOrdenCompra(row);				
			//	iRow++;
			//}				
			
			//for(DetalleOrdenCompra detalleordencompraAux:detalleordencomprasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelDetalleOrdenCompra(detalleordencompraAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Orden Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	*/
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleOrdenCompra(false);
			
			//SI ES MANUAL
			if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleOrdenCompra();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleOrdenCompra(false);
			
			//SI ES MANUAL
			if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleOrdenCompra();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesDetalleOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleOrdenCompra(false);
			
			//SI ES MANUAL
			if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleOrdenCompra();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaDetalleOrdenCompra() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosDetalleOrdenCompra.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosDetalleOrdenCompra.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosDetalleOrdenCompra.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosDetalleOrdenCompra.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosDetalleOrdenCompra.setMinimumSize(dimensionMinimum);
		this.jTableDatosDetalleOrdenCompra.setMaximumSize(dimensionMaximum);
		this.jTableDatosDetalleOrdenCompra.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingDetalleOrdenCompra(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingDetalleOrdenCompra(esInicializar,true);
	}
	
	public void inicializarActualizarBindingDetalleOrdenCompra(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaDetalleOrdenCompra(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesDetalleOrdenCompra(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasDetalleOrdenCompra(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleOrdenCompra(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesDetalleOrdenCompra(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualDetalleOrdenCompra() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaDetalleOrdenCompra();
		
		this.inicializarActualizarBindingBotonesManualDetalleOrdenCompra(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
			/*
			this.inicializarActualizarBindingBusquedasManualDetalleOrdenCompra();			
			*/
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleOrdenCompra() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleOrdenCompra(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleOrdenCompra(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosDetalleOrdenCompra.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosDetalleOrdenCompra.isSelected();
				
				/*
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteDetalleOrdenCompra.isSelected();															
				*/
				
				if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormDetalleOrdenCompra.jCheckBoxPostAccionNuevoDetalleOrdenCompra.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormDetalleOrdenCompra.jCheckBoxPostAccionSinCerrarDetalleOrdenCompra.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormDetalleOrdenCompra.jCheckBoxPostAccionSinMensajeDetalleOrdenCompra.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosDetalleOrdenCompra.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosDetalleOrdenCompra.setSelected(this.isSeleccionados);
				
				/*
				this.jCheckBoxConGraficoReporteDetalleOrdenCompra.setSelected(this.conGraficoReporte);				
				*/
				
				if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jCheckBoxPostAccionNuevoDetalleOrdenCompra.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jCheckBoxPostAccionSinCerrarDetalleOrdenCompra.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jCheckBoxPostAccionSinMensajeDetalleOrdenCompra.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			/*
			if(this.jComboBoxTiposPaginacionDetalleOrdenCompra.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionDetalleOrdenCompra.getSelectedItem()).getsCodigo();			
			}
			*/
			
			
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxTiposAccionesFormularioDetalleOrdenCompra.getSelectedItem()).getsCodigo();
			}
			
			
			/*
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesDetalleOrdenCompra.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesDetalleOrdenCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesDetalleOrdenCompra.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarDetalleOrdenCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesDetalleOrdenCompra.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesDetalleOrdenCompra.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralDetalleOrdenCompra.getText();						
			
			*/
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesDetalleOrdenCompra(Boolean esInicializar) throws Exception {
		try	{	
			if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleOrdenCompra(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesDetalleOrdenCompra() throws Exception {
		try	{
			if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleOrdenCompra();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleOrdenCompra() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxTiposAccionesFormularioDetalleOrdenCompra.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxTiposAccionesFormularioDetalleOrdenCompra.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleOrdenCompra() throws Exception {
		try	{
			/*
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesDetalleOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesDetalleOrdenCompra.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesDetalleOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesDetalleOrdenCompra.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesDetalleOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesDetalleOrdenCompra.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionDetalleOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionDetalleOrdenCompra.addItem(reporte);
			}
			
			
			if(!this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionDetalleOrdenCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionDetalleOrdenCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesDetalleOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesDetalleOrdenCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesDetalleOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesDetalleOrdenCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			*/
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxTiposAccionesFormularioDetalleOrdenCompra.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxTiposAccionesFormularioDetalleOrdenCompra.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			/*
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarDetalleOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarDetalleOrdenCompra.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarDetalleOrdenCompra.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleOrdenCompra();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			*/
		} catch(Exception e) {
			throw e;
		}
	}		
	
	/*
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleOrdenCompra() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra!=null) {
				this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra!=null) {
				this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra!=null) {
				
				if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=DetalleOrdenCompraConstantesFunciones.getTiposSeleccionarDetalleOrdenCompra(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=DetalleOrdenCompraConstantesFunciones.getTiposSeleccionarDetalleOrdenCompra(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=DetalleOrdenCompraConstantesFunciones.getTiposSeleccionarDetalleOrdenCompra(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	*/
	
	/*
	public void inicializarActualizarBindingBusquedasManualDetalleOrdenCompra()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra.getSelectedItem()!=null){this.id_bodegaFK_IdBodega=((Bodega)this.jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra.getSelectedItem()!=null){this.id_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra=((EstadoDetalleOrdenCompra)this.jComboBoxid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_novedad_productoFK_IdNovedadProductoDetalleOrdenCompra.getSelectedItem()!=null){this.id_novedad_productoFK_IdNovedadProducto=((NovedadProducto)this.jComboBoxid_novedad_productoFK_IdNovedadProductoDetalleOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_orden_compraFK_IdOrdenCompraDetalleOrdenCompra.getSelectedItem()!=null){this.id_orden_compraFK_IdOrdenCompra=((OrdenCompra)this.jComboBoxid_orden_compraFK_IdOrdenCompraDetalleOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_productoFK_IdProductoDetalleOrdenCompra.getSelectedItem()!=null){this.id_productoFK_IdProducto=((Producto)this.jComboBoxid_productoFK_IdProductoDetalleOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_unidadFK_IdUnidadDetalleOrdenCompra.getSelectedItem()!=null){this.id_unidadFK_IdUnidad=((Unidad)this.jComboBoxid_unidadFK_IdUnidadDetalleOrdenCompra.getSelectedItem()).getId();}
		
	}
	*/
	
	
	
	public void inicializarActualizarBindingBusquedasDetalleOrdenCompra(Boolean esInicializar) throws Exception {				
		if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
			/*
			this.inicializarActualizarBindingBusquedasManualDetalleOrdenCompra();			
			*/
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaDetalleOrdenCompra() throws Exception {
		this.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
	}
	
	/*
	public void inicializarActualizarBindingTablaOrderByDetalleOrdenCompra() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByDetalleOrdenCompra.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByDetalleOrdenCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleOrdenCompra.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByDetalleOrdenCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleOrdenCompra.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosDetalleOrdenCompraOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompraOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByDetalleOrdenCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleOrdenCompra.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByDetalleOrdenCompra.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	*/
	
	public void inicializarActualizarBindingTablaTotalesDetalleOrdenCompra() {		
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		
		//TABLA TOTALES
		this.jInternalFrameTotalesDetalleOrdenCompra.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
		//DEFINIR RENDERERS TOTALES
		tableColumn=this.jInternalFrameTotalesDetalleOrdenCompra.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleOrdenCompra.getjTableDatosTotales(),Constantes2.S_TIPO));			
		//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
				
				
		tableColumn=this.jInternalFrameTotalesDetalleOrdenCompra.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleOrdenCompra.getjTableDatosTotales(),Constantes2.S_TOTAL));
		//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());		
	}
	
	public void inicializarActualizarBindingTablaDetalleOrdenCompra(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=detalleordencompraLogic.getDetalleOrdenCompras().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=detalleordencompras.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosDetalleOrdenCompra.setModel(new DetalleOrdenCompraModel(this.detalleordencompraLogic.getDetalleOrdenCompras(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosDetalleOrdenCompra.setModel(new DetalleOrdenCompraModel(this.detalleordencompras,this));
			}
			//ARCHITECTURE
			
			if(this.jInternalFrameTotalesDetalleOrdenCompra!=null) {
				//TABLA TOTALES
				this.jInternalFrameTotalesDetalleOrdenCompra.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
				//DEFINIR RENDERERS TOTALES
				tableColumn=this.jInternalFrameTotalesDetalleOrdenCompra.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleOrdenCompra.getjTableDatosTotales(),Constantes2.S_TIPO));			
				//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
				
				
				tableColumn=this.jInternalFrameTotalesDetalleOrdenCompra.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleOrdenCompra.getjTableDatosTotales(),Constantes2.S_TOTAL));
				//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
			}
							
			/*
			
			if(this.jInternalFrameOrderByDetalleOrdenCompra!=null && this.jInternalFrameOrderByDetalleOrdenCompra.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByDetalleOrdenCompra();
			}
			*/
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+DetalleOrdenCompraConstantesFunciones.SCLASSWEBTITULO,detalleordencompraConstantesFunciones.resaltarSeleccionarDetalleOrdenCompra,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+DetalleOrdenCompraConstantesFunciones.SCLASSWEBTITULO,detalleordencompraConstantesFunciones.resaltarSeleccionarDetalleOrdenCompra,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_ID));

		if(this.detalleordencompraConstantesFunciones.mostraridDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleordencompraConstantesFunciones.resaltaridDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activaridDetalleOrdenCompra,iSizeTabla,this,true,"idDetalleOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleordencompraConstantesFunciones.resaltaridDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activaridDetalleOrdenCompra,this,true,"idDetalleOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA));

		if(this.detalleordencompraConstantesFunciones.mostrarid_orden_compraDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new OrdenCompraTableCell(this.ordencomprasForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_orden_compraDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_orden_compraDetalleOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new OrdenCompraTableCell(this.ordencomprasForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_orden_compraDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_orden_compraDetalleOrdenCompra,true,"id_orden_compraDetalleOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDEMPRESA));

		if(this.detalleordencompraConstantesFunciones.mostrarid_empresaDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_empresaDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_empresaDetalleOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_empresaDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_empresaDetalleOrdenCompra,false,"id_empresaDetalleOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.detalleordencompraConstantesFunciones.mostrarid_sucursalDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_sucursalDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_sucursalDetalleOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_sucursalDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_sucursalDetalleOrdenCompra,false,"id_sucursalDetalleOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.detalleordencompraConstantesFunciones.mostrarid_ejercicioDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_ejercicioDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_ejercicioDetalleOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_ejercicioDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_ejercicioDetalleOrdenCompra,false,"id_ejercicioDetalleOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDPERIODO));

		if(this.detalleordencompraConstantesFunciones.mostrarid_periodoDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_periodoDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_periodoDetalleOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_periodoDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_periodoDetalleOrdenCompra,false,"id_periodoDetalleOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDANIO));

		if(this.detalleordencompraConstantesFunciones.mostrarid_anioDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_anioDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_anioDetalleOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_anioDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_anioDetalleOrdenCompra,true,"id_anioDetalleOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDMES));

		if(this.detalleordencompraConstantesFunciones.mostrarid_mesDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_mesDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_mesDetalleOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_mesDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_mesDetalleOrdenCompra,true,"id_mesDetalleOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDBODEGA));

		if(this.detalleordencompraConstantesFunciones.mostrarid_bodegaDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_IDBODEGA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegasForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_bodegaDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_bodegaDetalleOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegasForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_bodegaDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_bodegaDetalleOrdenCompra,true,"id_bodegaDetalleOrdenCompra","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDPRODUCTO));

		if(this.detalleordencompraConstantesFunciones.mostrarid_productoDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_IDPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ProductoTableCell(this.productosForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_productoDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_productoDetalleOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new ProductoTableCell(this.productosForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_productoDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_productoDetalleOrdenCompra,true,"id_productoDetalleOrdenCompra","CON_BUSQUEDA-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDUNIDAD));

		if(this.detalleordencompraConstantesFunciones.mostrarid_unidadDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_IDUNIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new UnidadTableCell(this.unidadsForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_unidadDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_unidadDetalleOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new UnidadTableCell(this.unidadsForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_unidadDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_unidadDetalleOrdenCompra,true,"id_unidadDetalleOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION));

		if(this.detalleordencompraConstantesFunciones.mostrardescripcionDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleordencompraConstantesFunciones.resaltardescripcionDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activardescripcionDetalleOrdenCompra,iSizeTabla,this,true,"descripcionDetalleOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleordencompraConstantesFunciones.resaltardescripcionDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activardescripcionDetalleOrdenCompra,this,true,"descripcionDetalleOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD));

		if(this.detalleordencompraConstantesFunciones.mostrarcantidadDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleordencompraConstantesFunciones.resaltarcantidadDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activarcantidadDetalleOrdenCompra,iSizeTabla,this,true,"cantidadDetalleOrdenCompra","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleordencompraConstantesFunciones.resaltarcantidadDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activarcantidadDetalleOrdenCompra,this,true,"cantidadDetalleOrdenCompra","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_COSTOUNITARIO));

		if(this.detalleordencompraConstantesFunciones.mostrarcosto_unitarioDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_COSTOUNITARIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleordencompraConstantesFunciones.resaltarcosto_unitarioDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activarcosto_unitarioDetalleOrdenCompra,iSizeTabla,this,true,"costo_unitarioDetalleOrdenCompra","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleordencompraConstantesFunciones.resaltarcosto_unitarioDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activarcosto_unitarioDetalleOrdenCompra,this,true,"costo_unitarioDetalleOrdenCompra","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IVA));

		if(this.detalleordencompraConstantesFunciones.mostrarivaDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_IVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleordencompraConstantesFunciones.resaltarivaDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activarivaDetalleOrdenCompra,iSizeTabla,this,true,"ivaDetalleOrdenCompra","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleordencompraConstantesFunciones.resaltarivaDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activarivaDetalleOrdenCompra,this,true,"ivaDetalleOrdenCompra","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IVAVALOR));

		if(this.detalleordencompraConstantesFunciones.mostrariva_valorDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_IVAVALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleordencompraConstantesFunciones.resaltariva_valorDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activariva_valorDetalleOrdenCompra,iSizeTabla,this,true,"iva_valorDetalleOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleordencompraConstantesFunciones.resaltariva_valorDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activariva_valorDetalleOrdenCompra,this,true,"iva_valorDetalleOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_COSTOTOTAL));

		if(this.detalleordencompraConstantesFunciones.mostrarcosto_totalDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_COSTOTOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleordencompraConstantesFunciones.resaltarcosto_totalDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activarcosto_totalDetalleOrdenCompra,iSizeTabla,this,true,"costo_totalDetalleOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleordencompraConstantesFunciones.resaltarcosto_totalDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activarcosto_totalDetalleOrdenCompra,this,true,"costo_totalDetalleOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE));

		if(this.detalleordencompraConstantesFunciones.mostrardisponibleDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleordencompraConstantesFunciones.resaltardisponibleDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activardisponibleDetalleOrdenCompra,iSizeTabla,this,true,"disponibleDetalleOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleordencompraConstantesFunciones.resaltardisponibleDetalleOrdenCompra,this.detalleordencompraConstantesFunciones.activardisponibleDetalleOrdenCompra,this,true,"disponibleDetalleOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDNOVEDADPRODUCTO));

		if(this.detalleordencompraConstantesFunciones.mostrarid_novedad_productoDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_IDNOVEDADPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new NovedadProductoTableCell(this.novedadproductosForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_novedad_productoDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_novedad_productoDetalleOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new NovedadProductoTableCell(this.novedadproductosForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_novedad_productoDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_novedad_productoDetalleOrdenCompra,true,"id_novedad_productoDetalleOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,DetalleOrdenCompraConstantesFunciones.LABEL_IDESTADODETALLEORDENCOMPRA));

		if(this.detalleordencompraConstantesFunciones.mostrarid_estado_detalle_orden_compraDetalleOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleOrdenCompraConstantesFunciones.LABEL_IDESTADODETALLEORDENCOMPRA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoDetalleOrdenCompraTableCell(this.estadodetalleordencomprasForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_estado_detalle_orden_compraDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_estado_detalle_orden_compraDetalleOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new EstadoDetalleOrdenCompraTableCell(this.estadodetalleordencomprasForeignKey,this.detalleordencompraConstantesFunciones.resaltarid_estado_detalle_orden_compraDetalleOrdenCompra,this,this.detalleordencompraConstantesFunciones.activarid_estado_detalle_orden_compraDetalleOrdenCompra,true,"id_estado_detalle_orden_compraDetalleOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.detalleordencompraSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detalleordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detalleordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleOrdenCompra.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detalleordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detalleordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleOrdenCompra.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarDetalleOrdenCompra && this.isPermisoGuardarCambiosDetalleOrdenCompra) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.detalleordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.detalleordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosDetalleOrdenCompra.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosDetalleOrdenCompra.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleOrdenCompra && this.isPermisoGuardarCambiosDetalleOrdenCompra) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleOrdenCompra && this.isPermisoGuardarCambiosDetalleOrdenCompra) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosDetalleOrdenCompra.moveColumn(this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosDetalleOrdenCompra.moveColumn(this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosDetalleOrdenCompra.moveColumn(this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosDetalleOrdenCompra.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosDetalleOrdenCompra.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosDetalleOrdenCompra,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosDetalleOrdenCompra.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosDetalleOrdenCompra.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosDetalleOrdenCompra.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=detalleordencompraLogic.getDetalleOrdenCompras().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=detalleordencompras.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosDetalleOrdenCompra.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosDetalleOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosDetalleOrdenCompra();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoDetalleOrdenCompra=false;
					
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			
				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormDetalleOrdenCompra==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleOrdenCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleOrdenCompra.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.detalleordencompra.getsType().equals("DUPLICADO")
				   || this.detalleordencompra.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoDetalleOrdenCompra=true;
				
				} else {
					this.isEsNuevoDetalleOrdenCompra=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
					if(this.detalleordencompra.getId()>=0 && !this.detalleordencompra.getIsNew()) {						
						this.isEsNuevoDetalleOrdenCompra=false;
						
					} else {
						this.isEsNuevoDetalleOrdenCompra=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoDetalleOrdenCompra(esRelaciones);						
				
				this.seleccionarDetalleOrdenCompra(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.detalleordencompra.getId()<0) {
					this.isEsNuevoDetalleOrdenCompra=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarDetalleOrdenCompra(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarDetalleOrdenCompra(evt,rowIndex);
				}	
				
				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion DetalleOrdenCompra: " + this.dDif); 
					}
				}								
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarDetalleOrdenCompra(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.detalleordencompra)) {
					if(this.detalleordencompra.getId()>0) {
						this.detalleordencompra.setIsDeleted(true);
						
						this.detalleordencomprasEliminados.add(this.detalleordencompra);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detalleordencompraLogic.getDetalleOrdenCompras().remove(this.detalleordencompra);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detalleordencompras.remove(this.detalleordencompra);				
					}
					
					
					((DetalleOrdenCompraModel) this.jTableDatosDetalleOrdenCompra.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleOrdenCompra(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarDetalleOrdenCompra(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoDetalleOrdenCompra) {
			
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleOrdenCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleOrdenCompra.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioDetalleOrdenCompra(this.detalleordencompra);
				}
				
				//ARCHITECTURE
				try {
					

					//OrdenCompra
					if(!this.detalleordencompraConstantesFunciones.cargarid_orden_compraDetalleOrdenCompra || this.detalleordencompraConstantesFunciones.event_dependid_orden_compraDetalleOrdenCompra) {
						//this.cargarCombosOrdenComprasForeignKeyLista(" where id="+this.detalleordencompra.getid_orden_compra());
									//this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
						this.ordencomprasForeignKey=new ArrayList<OrdenCompra>();

						if(detalleordencompra.getOrdenCompra()!=null) {
							this.ordencomprasForeignKey.add(detalleordencompra.getOrdenCompra());
						}

						this.addItemDefectoCombosForeignKeyOrdenCompra();
						this.cargarCombosFrameOrdenComprasForeignKey("Todos");
					}
					this.setActualOrdenCompraForeignKey(this.detalleordencompra.getid_orden_compra(),false,"Formulario");

					//Empresa
					if(!this.detalleordencompraConstantesFunciones.cargarid_empresaDetalleOrdenCompra || this.detalleordencompraConstantesFunciones.event_dependid_empresaDetalleOrdenCompra) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.detalleordencompra.getid_empresa());
									//this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(detalleordencompra.getEmpresa()!=null) {
							this.empresasForeignKey.add(detalleordencompra.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.detalleordencompra.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.detalleordencompraConstantesFunciones.cargarid_sucursalDetalleOrdenCompra || this.detalleordencompraConstantesFunciones.event_dependid_sucursalDetalleOrdenCompra) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.detalleordencompra.getid_sucursal());
									//this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(detalleordencompra.getSucursal()!=null) {
							this.sucursalsForeignKey.add(detalleordencompra.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.detalleordencompra.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.detalleordencompraConstantesFunciones.cargarid_ejercicioDetalleOrdenCompra || this.detalleordencompraConstantesFunciones.event_dependid_ejercicioDetalleOrdenCompra) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.detalleordencompra.getid_ejercicio());
									//this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(detalleordencompra.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(detalleordencompra.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.detalleordencompra.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.detalleordencompraConstantesFunciones.cargarid_periodoDetalleOrdenCompra || this.detalleordencompraConstantesFunciones.event_dependid_periodoDetalleOrdenCompra) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.detalleordencompra.getid_periodo());
									//this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(detalleordencompra.getPeriodo()!=null) {
							this.periodosForeignKey.add(detalleordencompra.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.detalleordencompra.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.detalleordencompraConstantesFunciones.cargarid_anioDetalleOrdenCompra || this.detalleordencompraConstantesFunciones.event_dependid_anioDetalleOrdenCompra) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.detalleordencompra.getid_anio());
									//this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(detalleordencompra.getAnio()!=null) {
							this.aniosForeignKey.add(detalleordencompra.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.detalleordencompra.getid_anio(),false,"Formulario");

					//Mes
					if(!this.detalleordencompraConstantesFunciones.cargarid_mesDetalleOrdenCompra || this.detalleordencompraConstantesFunciones.event_dependid_mesDetalleOrdenCompra) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.detalleordencompra.getid_mes());
									//this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(detalleordencompra.getMes()!=null) {
							this.messForeignKey.add(detalleordencompra.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.detalleordencompra.getid_mes(),false,"Formulario");

					//Bodega
					if(!this.detalleordencompraConstantesFunciones.cargarid_bodegaDetalleOrdenCompra || this.detalleordencompraConstantesFunciones.event_dependid_bodegaDetalleOrdenCompra) {
						//this.cargarCombosBodegasForeignKeyLista(" where id="+this.detalleordencompra.getid_bodega());
									//this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
						this.bodegasForeignKey=new ArrayList<Bodega>();

						if(detalleordencompra.getBodega()!=null) {
							this.bodegasForeignKey.add(detalleordencompra.getBodega());
						}

						this.addItemDefectoCombosForeignKeyBodega();
						this.cargarCombosFrameBodegasForeignKey("Todos");
					}
					this.setActualBodegaForeignKey(this.detalleordencompra.getid_bodega(),false,"Formulario");

					//Producto
					if(!this.detalleordencompraConstantesFunciones.cargarid_productoDetalleOrdenCompra || this.detalleordencompraConstantesFunciones.event_dependid_productoDetalleOrdenCompra) {
						//this.cargarCombosProductosForeignKeyLista(" where id="+this.detalleordencompra.getid_producto());
									//this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
						this.productosForeignKey=new ArrayList<Producto>();

						if(detalleordencompra.getProducto()!=null) {
							this.productosForeignKey.add(detalleordencompra.getProducto());
						}

						this.addItemDefectoCombosForeignKeyProducto();
						this.cargarCombosFrameProductosForeignKey("Todos");
					}
					this.setActualProductoForeignKey(this.detalleordencompra.getid_producto(),false,"Formulario");

					//Unidad
					if(!this.detalleordencompraConstantesFunciones.cargarid_unidadDetalleOrdenCompra || this.detalleordencompraConstantesFunciones.event_dependid_unidadDetalleOrdenCompra) {
						//this.cargarCombosUnidadsForeignKeyLista(" where id="+this.detalleordencompra.getid_unidad());
									//this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
						this.unidadsForeignKey=new ArrayList<Unidad>();

						if(detalleordencompra.getUnidad()!=null) {
							this.unidadsForeignKey.add(detalleordencompra.getUnidad());
						}

						this.addItemDefectoCombosForeignKeyUnidad();
						this.cargarCombosFrameUnidadsForeignKey("Todos");
					}
					this.setActualUnidadForeignKey(this.detalleordencompra.getid_unidad(),false,"Formulario");

					//NovedadProducto
					if(!this.detalleordencompraConstantesFunciones.cargarid_novedad_productoDetalleOrdenCompra || this.detalleordencompraConstantesFunciones.event_dependid_novedad_productoDetalleOrdenCompra) {
						//this.cargarCombosNovedadProductosForeignKeyLista(" where id="+this.detalleordencompra.getid_novedad_producto());
									//this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
						this.novedadproductosForeignKey=new ArrayList<NovedadProducto>();

						if(detalleordencompra.getNovedadProducto()!=null) {
							this.novedadproductosForeignKey.add(detalleordencompra.getNovedadProducto());
						}

						this.addItemDefectoCombosForeignKeyNovedadProducto();
						this.cargarCombosFrameNovedadProductosForeignKey("Todos");
					}
					this.setActualNovedadProductoForeignKey(this.detalleordencompra.getid_novedad_producto(),false,"Formulario");

					//EstadoDetalleOrdenCompra
					if(!this.detalleordencompraConstantesFunciones.cargarid_estado_detalle_orden_compraDetalleOrdenCompra || this.detalleordencompraConstantesFunciones.event_dependid_estado_detalle_orden_compraDetalleOrdenCompra) {
						//this.cargarCombosEstadoDetalleOrdenComprasForeignKeyLista(" where id="+this.detalleordencompra.getid_estado_detalle_orden_compra());
									//this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
						this.estadodetalleordencomprasForeignKey=new ArrayList<EstadoDetalleOrdenCompra>();

						if(detalleordencompra.getEstadoDetalleOrdenCompra()!=null) {
							this.estadodetalleordencomprasForeignKey.add(detalleordencompra.getEstadoDetalleOrdenCompra());
						}

						this.addItemDefectoCombosForeignKeyEstadoDetalleOrdenCompra();
						this.cargarCombosFrameEstadoDetalleOrdenComprasForeignKey("Todos");
					}
					this.setActualEstadoDetalleOrdenCompraForeignKey(this.detalleordencompra.getid_estado_detalle_orden_compra(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesDetalleOrdenCompra("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesDetalleOrdenCompra(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleOrdenCompra() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoDetalleOrdenCompra(detalleordencompra,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioDetalleOrdenCompra(detalleordencompra);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyDetalleOrdenCompra(detalleordencompra,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyDetalleOrdenCompra(detalleordencompra);
	}
	
	public void setVariablesObjetoActualToFormularioDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelidDetalleOrdenCompra.setText(detalleordencompra.getId().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextAreadescripcionDetalleOrdenCompra.setText(detalleordencompra.getdescripcion());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcantidadDetalleOrdenCompra.setText(detalleordencompra.getcantidad().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_unitarioDetalleOrdenCompra.setText(detalleordencompra.getcosto_unitario().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldivaDetalleOrdenCompra.setText(detalleordencompra.getiva().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldiva_valorDetalleOrdenCompra.setText(detalleordencompra.getiva_valor().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_totalDetalleOrdenCompra.setText(detalleordencompra.getcosto_total().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFielddisponibleDetalleOrdenCompra.setText(detalleordencompra.getdisponible().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,DetalleOrdenCompra detalleordencompraLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,detalleordencompraLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,DetalleOrdenCompra detalleordencompraLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				detalleordencompraLocal=this.detalleordencompra;
			} else {
				detalleordencompraLocal=this.detalleordencompraAnterior;
			}
		}
		
		if(this.permiteMantenimiento(detalleordencompraLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoDetalleOrdenCompra(detalleordencompraLocal,true);
					
					if(detalleordencompraSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(detalleordencompraLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(detalleordencompraLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(detalleordencompra,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(detalleordencompra);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(detalleordencompra,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelidDetalleOrdenCompra.getText()==null || this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelidDetalleOrdenCompra.getText()=="" || this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelidDetalleOrdenCompra.getText()=="Id") {
				this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelidDetalleOrdenCompra.setText("0");
			}

			if(conColumnasBase) {detalleordencompra.setId(Long.parseLong(this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelidDetalleOrdenCompra.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleOrdenCompraConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelIdDetalleOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleordencompra.setdescripcion(this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextAreadescripcionDetalleOrdenCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabeldescripcionDetalleOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleordencompra.setcantidad(Integer.parseInt(this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcantidadDetalleOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelcantidadDetalleOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleordencompra.setcosto_unitario(Double.parseDouble(this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_unitarioDetalleOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleOrdenCompraConstantesFunciones.LABEL_COSTOUNITARIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelcosto_unitarioDetalleOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleordencompra.setiva(Double.parseDouble(this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldivaDetalleOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleOrdenCompraConstantesFunciones.LABEL_IVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelivaDetalleOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleordencompra.setiva_valor(Double.parseDouble(this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldiva_valorDetalleOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleOrdenCompraConstantesFunciones.LABEL_IVAVALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabeliva_valorDetalleOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleordencompra.setcosto_total(Double.parseDouble(this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_totalDetalleOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleOrdenCompraConstantesFunciones.LABEL_COSTOTOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelcosto_totalDetalleOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleordencompra.setdisponible(Integer.parseInt(this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFielddisponibleDetalleOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabeldisponibleDetalleOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleOrdenCompra(DetalleOrdenCompra detalleordencompraBean,DetalleOrdenCompra detalleordencompra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosDetalleOrdenCompra(DetalleOrdenCompra detalleordencompraOrigen,DetalleOrdenCompra detalleordencompra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detalleordencompraOrigen.getId()!=null && !detalleordencompraOrigen.getId().equals(0L))) {detalleordencompra.setId(detalleordencompraOrigen.getId());}}
			if(conDefault || (!conDefault && detalleordencompraOrigen.getdescripcion()!=null && !detalleordencompraOrigen.getdescripcion().equals(""))) {detalleordencompra.setdescripcion(detalleordencompraOrigen.getdescripcion());}
			if(conDefault || (!conDefault && detalleordencompraOrigen.getcantidad()!=null && !detalleordencompraOrigen.getcantidad().equals(0))) {detalleordencompra.setcantidad(detalleordencompraOrigen.getcantidad());}
			if(conDefault || (!conDefault && detalleordencompraOrigen.getdescuento()!=null && !detalleordencompraOrigen.getdescuento().equals(0.0))) {detalleordencompra.setdescuento(detalleordencompraOrigen.getdescuento());}
			if(conDefault || (!conDefault && detalleordencompraOrigen.getcosto_unitario()!=null && !detalleordencompraOrigen.getcosto_unitario().equals(0.0))) {detalleordencompra.setcosto_unitario(detalleordencompraOrigen.getcosto_unitario());}
			if(conDefault || (!conDefault && detalleordencompraOrigen.getiva()!=null && !detalleordencompraOrigen.getiva().equals(0.0))) {detalleordencompra.setiva(detalleordencompraOrigen.getiva());}
			if(conDefault || (!conDefault && detalleordencompraOrigen.getiva_valor()!=null && !detalleordencompraOrigen.getiva_valor().equals(0.0))) {detalleordencompra.setiva_valor(detalleordencompraOrigen.getiva_valor());}
			if(conDefault || (!conDefault && detalleordencompraOrigen.getcosto_total()!=null && !detalleordencompraOrigen.getcosto_total().equals(0.0))) {detalleordencompra.setcosto_total(detalleordencompraOrigen.getcosto_total());}
			if(conDefault || (!conDefault && detalleordencompraOrigen.getdisponible()!=null && !detalleordencompraOrigen.getdisponible().equals(0))) {detalleordencompra.setdisponible(detalleordencompraOrigen.getdisponible());}
			if(conDefault || (!conDefault && detalleordencompraOrigen.getnumero_comprobante()!=null && !detalleordencompraOrigen.getnumero_comprobante().equals(""))) {detalleordencompra.setnumero_comprobante(detalleordencompraOrigen.getnumero_comprobante());}
			if(conDefault || (!conDefault && detalleordencompraOrigen.getlote_cliente()!=null && !detalleordencompraOrigen.getlote_cliente().equals(""))) {detalleordencompra.setlote_cliente(detalleordencompraOrigen.getlote_cliente());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelidDetalleOrdenCompra.setText(detalleordencompra.getId().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextAreadescripcionDetalleOrdenCompra.setText(detalleordencompra.getdescripcion());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcantidadDetalleOrdenCompra.setText(detalleordencompra.getcantidad().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_unitarioDetalleOrdenCompra.setText(detalleordencompra.getcosto_unitario().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldivaDetalleOrdenCompra.setText(detalleordencompra.getiva().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldiva_valorDetalleOrdenCompra.setText(detalleordencompra.getiva_valor().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_totalDetalleOrdenCompra.setText(detalleordencompra.getcosto_total().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFielddisponibleDetalleOrdenCompra.setText(detalleordencompra.getdisponible().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleOrdenCompra(DetalleOrdenCompraBean detalleordencompraBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelidDetalleOrdenCompra.setText(detalleordencompraBean.getId().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextAreadescripcionDetalleOrdenCompra.setText(detalleordencompraBean.getdescripcion());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcantidadDetalleOrdenCompra.setText(detalleordencompraBean.getcantidad().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_unitarioDetalleOrdenCompra.setText(detalleordencompraBean.getcosto_unitario().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldivaDetalleOrdenCompra.setText(detalleordencompraBean.getiva().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldiva_valorDetalleOrdenCompra.setText(detalleordencompraBean.getiva_valor().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_totalDetalleOrdenCompra.setText(detalleordencompraBean.getcosto_total().toString());
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFielddisponibleDetalleOrdenCompra.setText(detalleordencompraBean.getdisponible().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanDetalleOrdenCompra(DetalleOrdenCompraParameterReturnGeneral detalleordencompraReturnGeneral,DetalleOrdenCompraBean detalleordencompraBean,Boolean conDefault) throws Exception { 
		try {
			DetalleOrdenCompra detalleordencompraLocal=new DetalleOrdenCompra();
			
			detalleordencompraLocal=detalleordencompraReturnGeneral.getDetalleOrdenCompra();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detalleordencompraLocal.getId()!=null && !detalleordencompraLocal.getId().equals(0L))) {detalleordencompraBean.setId(detalleordencompraLocal.getId());}}
			if(conDefault || (!conDefault && detalleordencompraLocal.getdescripcion()!=null && !detalleordencompraLocal.getdescripcion().equals(""))) {detalleordencompraBean.setdescripcion(detalleordencompraLocal.getdescripcion());}
			if(conDefault || (!conDefault && detalleordencompraLocal.getcantidad()!=null && !detalleordencompraLocal.getcantidad().equals(0))) {detalleordencompraBean.setcantidad(detalleordencompraLocal.getcantidad());}
			if(conDefault || (!conDefault && detalleordencompraLocal.getcosto_unitario()!=null && !detalleordencompraLocal.getcosto_unitario().equals(0.0))) {detalleordencompraBean.setcosto_unitario(detalleordencompraLocal.getcosto_unitario());}
			if(conDefault || (!conDefault && detalleordencompraLocal.getiva()!=null && !detalleordencompraLocal.getiva().equals(0.0))) {detalleordencompraBean.setiva(detalleordencompraLocal.getiva());}
			if(conDefault || (!conDefault && detalleordencompraLocal.getiva_valor()!=null && !detalleordencompraLocal.getiva_valor().equals(0.0))) {detalleordencompraBean.setiva_valor(detalleordencompraLocal.getiva_valor());}
			if(conDefault || (!conDefault && detalleordencompraLocal.getcosto_total()!=null && !detalleordencompraLocal.getcosto_total().equals(0.0))) {detalleordencompraBean.setcosto_total(detalleordencompraLocal.getcosto_total());}
			if(conDefault || (!conDefault && detalleordencompraLocal.getdisponible()!=null && !detalleordencompraLocal.getdisponible().equals(0))) {detalleordencompraBean.setdisponible(detalleordencompraLocal.getdisponible());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxDetalleOrdenCompraGenerico(Long idDetalleOrdenCompraSeleccionado,JComboBox jComboBoxDetalleOrdenCompra,List<DetalleOrdenCompra> detalleordencomprasLocal)throws Exception {
		try {
			DetalleOrdenCompra  detalleordencompraTemp=null;

			for(DetalleOrdenCompra detalleordencompraAux:detalleordencomprasLocal) {
				if(detalleordencompraAux.getId()!=null && detalleordencompraAux.getId().equals(idDetalleOrdenCompraSeleccionado)) {
					detalleordencompraTemp=detalleordencompraAux;
					break;
				}
			}

			jComboBoxDetalleOrdenCompra.setSelectedItem(detalleordencompraTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxDetalleOrdenCompraGenerico(JComboBox jComboBoxDetalleOrdenCompra,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxDetalleOrdenCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleOrdenCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxDetalleOrdenCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleOrdenCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleOrdenCompra.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxDetalleOrdenCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleOrdenCompra.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxDetalleOrdenCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxDetalleOrdenCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxDetalleOrdenCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detalleordencompra=(DetalleOrdenCompra) detalleordencompraLogic.getDetalleOrdenCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detalleordencompra =(DetalleOrdenCompra) detalleordencompras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("OrdenCompra")) {
			//sDescripcion=this.getActualOrdenCompraForeignKeyDescripcion((Long)value);
			if(!detalleordencompra.getIsNew() && !detalleordencompra.getIsChanged() && !detalleordencompra.getIsDeleted()) {
				sDescripcion=detalleordencompra.getordencompra_descripcion();
			} else {
				//sDescripcion=this.getActualOrdenCompraForeignKeyDescripcion((Long)value);
				sDescripcion=detalleordencompra.getordencompra_descripcion();
			}
		}

		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!detalleordencompra.getIsNew() && !detalleordencompra.getIsChanged() && !detalleordencompra.getIsDeleted()) {
				sDescripcion=detalleordencompra.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detalleordencompra.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!detalleordencompra.getIsNew() && !detalleordencompra.getIsChanged() && !detalleordencompra.getIsDeleted()) {
				sDescripcion=detalleordencompra.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=detalleordencompra.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!detalleordencompra.getIsNew() && !detalleordencompra.getIsChanged() && !detalleordencompra.getIsDeleted()) {
				sDescripcion=detalleordencompra.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=detalleordencompra.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!detalleordencompra.getIsNew() && !detalleordencompra.getIsChanged() && !detalleordencompra.getIsDeleted()) {
				sDescripcion=detalleordencompra.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=detalleordencompra.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!detalleordencompra.getIsNew() && !detalleordencompra.getIsChanged() && !detalleordencompra.getIsDeleted()) {
				sDescripcion=detalleordencompra.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=detalleordencompra.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!detalleordencompra.getIsNew() && !detalleordencompra.getIsChanged() && !detalleordencompra.getIsDeleted()) {
				sDescripcion=detalleordencompra.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=detalleordencompra.getmes_descripcion();
			}
		}

		if(sTipo.equals("Bodega")) {
			//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
			if(!detalleordencompra.getIsNew() && !detalleordencompra.getIsChanged() && !detalleordencompra.getIsDeleted()) {
				sDescripcion=detalleordencompra.getbodega_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
				sDescripcion=detalleordencompra.getbodega_descripcion();
			}
		}

		if(sTipo.equals("Producto")) {
			//sDescripcion=this.getActualProductoForeignKeyDescripcion((Long)value);
			if(!detalleordencompra.getIsNew() && !detalleordencompra.getIsChanged() && !detalleordencompra.getIsDeleted()) {
				sDescripcion=detalleordencompra.getproducto_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detalleordencompra.getproducto_descripcion();
			}
		}

		if(sTipo.equals("Unidad")) {
			//sDescripcion=this.getActualUnidadForeignKeyDescripcion((Long)value);
			if(!detalleordencompra.getIsNew() && !detalleordencompra.getIsChanged() && !detalleordencompra.getIsDeleted()) {
				sDescripcion=detalleordencompra.getunidad_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detalleordencompra.getunidad_descripcion();
			}
		}

		if(sTipo.equals("NovedadProducto")) {
			//sDescripcion=this.getActualNovedadProductoForeignKeyDescripcion((Long)value);
			if(!detalleordencompra.getIsNew() && !detalleordencompra.getIsChanged() && !detalleordencompra.getIsDeleted()) {
				sDescripcion=detalleordencompra.getnovedadproducto_descripcion();
			} else {
				//sDescripcion=this.getActualNovedadProductoForeignKeyDescripcion((Long)value);
				sDescripcion=detalleordencompra.getnovedadproducto_descripcion();
			}
		}

		if(sTipo.equals("EstadoDetalleOrdenCompra")) {
			//sDescripcion=this.getActualEstadoDetalleOrdenCompraForeignKeyDescripcion((Long)value);
			if(!detalleordencompra.getIsNew() && !detalleordencompra.getIsChanged() && !detalleordencompra.getIsDeleted()) {
				sDescripcion=detalleordencompra.getestadodetalleordencompra_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoDetalleOrdenCompraForeignKeyDescripcion((Long)value);
				sDescripcion=detalleordencompra.getestadodetalleordencompra_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		DetalleOrdenCompra detalleordencompraRow=new DetalleOrdenCompra();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detalleordencompraRow=(DetalleOrdenCompra) detalleordencompraLogic.getDetalleOrdenCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detalleordencompraRow=(DetalleOrdenCompra) detalleordencompras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualDetalleOrdenCompra(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoDetalleOrdenCompra && this.isPermisoNuevoDetalleOrdenCompra));			
			this.jButtonDuplicarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaDuplicarDetalleOrdenCompra && this.isPermisoDuplicarDetalleOrdenCompra));			
			this.jButtonCopiarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaCopiarDetalleOrdenCompra && this.isPermisoCopiarDetalleOrdenCompra));
			this.jButtonVerFormDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaVerFormDetalleOrdenCompra && this.isPermisoVerFormDetalleOrdenCompra));
			/*
			this.jButtonAbrirOrderByDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenDetalleOrdenCompra && this.isPermisoOrdenDetalleOrdenCompra));			
			*/
			this.jButtonNuevoRelacionesDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra && this.isPermisoNuevoDetalleOrdenCompra));			
			this.jButtonNuevoGuardarCambiosDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoDetalleOrdenCompra && this.isPermisoNuevoDetalleOrdenCompra && this.isPermisoGuardarCambiosDetalleOrdenCompra));
			
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonModificarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaModificarDetalleOrdenCompra && this.isPermisoActualizarDetalleOrdenCompra));	
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonActualizarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaActualizarDetalleOrdenCompra && this.isPermisoActualizarDetalleOrdenCompra));	
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonEliminarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaEliminarDetalleOrdenCompra && this.isPermisoEliminarDetalleOrdenCompra));
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonCancelarDetalleOrdenCompra.setVisible(this.isVisibilidadCeldaCancelarDetalleOrdenCompra);							
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonGuardarCambiosDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarDetalleOrdenCompra && this.isPermisoGuardarCambiosDetalleOrdenCompra));			
			
			}
						
			this.jButtonGuardarCambiosTablaDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra && this.isPermisoGuardarCambiosDetalleOrdenCompra));							
			
			//TOOLBAR
			/*
			this.jButtonNuevoToolBarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoDetalleOrdenCompra && this.isPermisoNuevoDetalleOrdenCompra));						
			this.jButtonDuplicarToolBarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaDuplicarDetalleOrdenCompra && this.isPermisoDuplicarDetalleOrdenCompra));						
			this.jButtonCopiarToolBarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaCopiarDetalleOrdenCompra && this.isPermisoCopiarDetalleOrdenCompra));			
			this.jButtonVerFormToolBarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaVerFormDetalleOrdenCompra && this.isPermisoVerFormDetalleOrdenCompra));			
			this.jButtonAbrirOrderByToolBarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenDetalleOrdenCompra && this.isPermisoOrdenDetalleOrdenCompra));
			this.jButtonNuevoRelacionesToolBarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra && this.isPermisoNuevoDetalleOrdenCompra));			
			this.jButtonNuevoGuardarCambiosToolBarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoDetalleOrdenCompra && this.isPermisoNuevoDetalleOrdenCompra && this.isPermisoGuardarCambiosDetalleOrdenCompra));			
			
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonModificarToolBarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaModificarDetalleOrdenCompra && this.isPermisoActualizarDetalleOrdenCompra));	
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonActualizarToolBarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaActualizarDetalleOrdenCompra  && this.isPermisoActualizarDetalleOrdenCompra));	
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonEliminarToolBarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaEliminarDetalleOrdenCompra && this.isPermisoEliminarDetalleOrdenCompra));
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonCancelarToolBarDetalleOrdenCompra.setVisible(this.isVisibilidadCeldaCancelarDetalleOrdenCompra);				
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonGuardarCambiosToolBarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarDetalleOrdenCompra && this.isPermisoGuardarCambiosDetalleOrdenCompra));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra && this.isPermisoGuardarCambiosDetalleOrdenCompra));									
			*/
			//TOOLBAR
			
			//MENUS
			/*
			this.jMenuItemNuevoDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoDetalleOrdenCompra && this.isPermisoNuevoDetalleOrdenCompra));			
			this.jMenuItemDuplicarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaDuplicarDetalleOrdenCompra && this.isPermisoDuplicarDetalleOrdenCompra));			
			this.jMenuItemCopiarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaCopiarDetalleOrdenCompra && this.isPermisoCopiarDetalleOrdenCompra));			
			this.jMenuItemVerFormDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaVerFormDetalleOrdenCompra && this.isPermisoVerFormDetalleOrdenCompra));			
			this.jMenuItemAbrirOrderByDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenDetalleOrdenCompra && this.isPermisoOrdenDetalleOrdenCompra));			
			//this.jMenuItemMostrarOcultarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenDetalleOrdenCompra && this.isPermisoOrdenDetalleOrdenCompra));
			this.jMenuItemDetalleAbrirOrderByDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenDetalleOrdenCompra && this.isPermisoOrdenDetalleOrdenCompra));			
			//this.jMenuItemDetalleMostrarOcultarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenDetalleOrdenCompra && this.isPermisoOrdenDetalleOrdenCompra));			
			this.jMenuItemNuevoRelacionesDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra && this.isPermisoNuevoDetalleOrdenCompra));			
			this.jMenuItemNuevoGuardarCambiosDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoDetalleOrdenCompra && this.isPermisoNuevoDetalleOrdenCompra && this.isPermisoGuardarCambiosDetalleOrdenCompra));									
			
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemModificarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaModificarDetalleOrdenCompra && this.isPermisoActualizarDetalleOrdenCompra));	
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemActualizarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaActualizarDetalleOrdenCompra && this.isPermisoActualizarDetalleOrdenCompra));	
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemEliminarDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaEliminarDetalleOrdenCompra && this.isPermisoEliminarDetalleOrdenCompra));
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemCancelarDetalleOrdenCompra.setVisible(this.isVisibilidadCeldaCancelarDetalleOrdenCompra);				
			}
			
			this.jMenuItemGuardarCambiosDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarDetalleOrdenCompra && this.isPermisoGuardarCambiosDetalleOrdenCompra));						
			this.jMenuItemGuardarCambiosTablaDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra && this.isPermisoGuardarCambiosDetalleOrdenCompra));						
			*/
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoDetalleOrdenCompra=this.jButtonNuevoDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaDuplicarDetalleOrdenCompra=this.jButtonDuplicarDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaCopiarDetalleOrdenCompra=this.jButtonCopiarDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaVerFormDetalleOrdenCompra=this.jButtonVerFormDetalleOrdenCompra.isVisible();
			/*
			this.isVisibilidadCeldaOrdenDetalleOrdenCompra=this.jButtonAbrirOrderByDetalleOrdenCompra.isVisible();			
			*/
			this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=this.jButtonNuevoRelacionesDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaModificarDetalleOrdenCompra=this.jButtonModificarDetalleOrdenCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
			this.isVisibilidadCeldaActualizarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonActualizarDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaEliminarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonEliminarDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaCancelarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonCancelarDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaGuardarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonGuardarCambiosDetalleOrdenCompra.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra=this.jButtonGuardarCambiosTablaDetalleOrdenCompra.isVisible();
			
			//TOOLBAR
			/*
			this.isVisibilidadCeldaNuevoDetalleOrdenCompra=this.jButtonNuevoToolBarDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=this.jButtonNuevoRelacionesToolBarDetalleOrdenCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
			this.isVisibilidadCeldaModificarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonModificarToolBarDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaActualizarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonActualizarToolBarDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaEliminarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonEliminarToolBarDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaCancelarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonCancelarToolBarDetalleOrdenCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleOrdenCompra=this.jButtonGuardarCambiosToolBarDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra=this.jButtonGuardarCambiosTablaToolBarDetalleOrdenCompra.isVisible();						
			*/
			//TOOLBAR
			
			//MENUS
			/*
			this.isVisibilidadCeldaNuevoDetalleOrdenCompra=this.jMenuItemNuevoDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=this.jMenuItemNuevoRelacionesDetalleOrdenCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
			this.isVisibilidadCeldaModificarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemModificarDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaActualizarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemActualizarDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaEliminarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemEliminarDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaCancelarDetalleOrdenCompra=this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemCancelarDetalleOrdenCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleOrdenCompra=this.jMenuItemGuardarCambiosDetalleOrdenCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra=this.jMenuItemGuardarCambiosTablaDetalleOrdenCompra.isVisible();						
			*/
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesDetalleOrdenCompra(Boolean esInicializar) {
		if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {			
			if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
				//if(this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleOrdenCompra();
			}
			
			this.inicializarActualizarBindingBotonesManualDetalleOrdenCompra(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualDetalleOrdenCompra() {
		this.jButtonNuevoDetalleOrdenCompra.setVisible(this.isPermisoNuevoDetalleOrdenCompra);			
		this.jButtonDuplicarDetalleOrdenCompra.setVisible(this.isPermisoDuplicarDetalleOrdenCompra);			
		this.jButtonCopiarDetalleOrdenCompra.setVisible(this.isPermisoCopiarDetalleOrdenCompra);			
		this.jButtonVerFormDetalleOrdenCompra.setVisible(this.isPermisoVerFormDetalleOrdenCompra);			
		/*
		this.jButtonAbrirOrderByDetalleOrdenCompra.setVisible(this.isPermisoOrdenDetalleOrdenCompra);					
		*/
		this.jButtonNuevoRelacionesDetalleOrdenCompra.setVisible(this.isPermisoNuevoDetalleOrdenCompra);			
		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonModificarDetalleOrdenCompra.setVisible(this.isPermisoActualizarDetalleOrdenCompra);	
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonActualizarDetalleOrdenCompra.setVisible(this.isPermisoActualizarDetalleOrdenCompra);	
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonEliminarDetalleOrdenCompra.setVisible(this.isPermisoEliminarDetalleOrdenCompra);
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonCancelarDetalleOrdenCompra.setVisible(this.isVisibilidadCeldaCancelarDetalleOrdenCompra);						
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonGuardarCambiosDetalleOrdenCompra.setVisible(this.isPermisoGuardarCambiosDetalleOrdenCompra);							
		}
		
		this.jButtonGuardarCambiosTablaDetalleOrdenCompra.setVisible(this.isPermisoActualizarDetalleOrdenCompra);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleOrdenCompra() {
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonModificarDetalleOrdenCompra.setVisible(this.isPermisoActualizarDetalleOrdenCompra);	
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonActualizarDetalleOrdenCompra.setVisible(this.isPermisoActualizarDetalleOrdenCompra);	
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonEliminarDetalleOrdenCompra.setVisible(this.isPermisoEliminarDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonCancelarDetalleOrdenCompra.setVisible(this.isVisibilidadCeldaCancelarDetalleOrdenCompra);							
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonGuardarCambiosDetalleOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarDetalleOrdenCompra && this.isPermisoGuardarCambiosDetalleOrdenCompra));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosDetalleOrdenCompra() {
		if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualDetalleOrdenCompra();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesDetalleOrdenCompra() {
	}
	
	public void jTableDatosDetalleOrdenCompraListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarDetalleOrdenCompra(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.detalleordencompra.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_orden_compraDetalleOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoordencompra=true;

			idTienePermisoordencompra=this.tienePermisosUsuarioEnPaginaWebDetalleOrdenCompra(OrdenCompraConstantesFunciones.CLASSNAME);

			if(idTienePermisoordencompra) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);

				this.ordencompraBeanSwingJInternalFrame=new OrdenCompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ordencompraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ordencompraBeanSwingJInternalFrame.getOrdenCompraLogic().setConnexion(this.detalleordencompraLogic.getConnexion());

				if(this.detalleordencompra.getid_orden_compra()!=null) {
					this.ordencompraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ordencompraBeanSwingJInternalFrame.setIdActual(this.detalleordencompra.getid_orden_compra());
					this.ordencompraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ordencompraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ordencompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaOrdenCompra();
				}

				JInternalFrameBase jinternalFrame =this.ordencompraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleOrdenCompra=(TitledBorder)this.jScrollPanelDatosDetalleOrdenCompra.getBorder();
				TitledBorder titledBorderordencompra=(TitledBorder)this.ordencompraBeanSwingJInternalFrame.jScrollPanelDatosOrdenCompra.getBorder();

				titledBorderordencompra.setTitle(titledBorderDetalleOrdenCompra.getTitle() + " -> OrdenCompra");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_orden_compraDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getid_orden_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_orden_compra = "+this.detalleordencompra.getid_orden_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaDetalleOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebDetalleOrdenCompra(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.detalleordencompraLogic.getConnexion());

				if(this.detalleordencompra.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.detalleordencompra.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleOrdenCompra=(TitledBorder)this.jScrollPanelDatosDetalleOrdenCompra.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderDetalleOrdenCompra.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.detalleordencompra.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalDetalleOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebDetalleOrdenCompra(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.detalleordencompraLogic.getConnexion());

				if(this.detalleordencompra.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.detalleordencompra.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleOrdenCompra=(TitledBorder)this.jScrollPanelDatosDetalleOrdenCompra.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderDetalleOrdenCompra.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.detalleordencompra.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioDetalleOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebDetalleOrdenCompra(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.detalleordencompraLogic.getConnexion());

				if(this.detalleordencompra.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.detalleordencompra.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleOrdenCompra=(TitledBorder)this.jScrollPanelDatosDetalleOrdenCompra.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderDetalleOrdenCompra.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.detalleordencompra.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoDetalleOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebDetalleOrdenCompra(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.detalleordencompraLogic.getConnexion());

				if(this.detalleordencompra.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.detalleordencompra.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleOrdenCompra=(TitledBorder)this.jScrollPanelDatosDetalleOrdenCompra.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderDetalleOrdenCompra.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.detalleordencompra.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioDetalleOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebDetalleOrdenCompra(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.detalleordencompraLogic.getConnexion());

				if(this.detalleordencompra.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.detalleordencompra.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleOrdenCompra=(TitledBorder)this.jScrollPanelDatosDetalleOrdenCompra.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderDetalleOrdenCompra.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.detalleordencompra.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesDetalleOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebDetalleOrdenCompra(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.detalleordencompraLogic.getConnexion());

				if(this.detalleordencompra.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.detalleordencompra.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleOrdenCompra=(TitledBorder)this.jScrollPanelDatosDetalleOrdenCompra.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderDetalleOrdenCompra.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.detalleordencompra.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodegaDetalleOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodega=true;

			idTienePermisobodega=this.tienePermisosUsuarioEnPaginaWebDetalleOrdenCompra(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodega) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);

				this.bodegaBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegaBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.detalleordencompraLogic.getConnexion());

				if(this.detalleordencompra.getid_bodega()!=null) {
					this.bodegaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegaBeanSwingJInternalFrame.setIdActual(this.detalleordencompra.getid_bodega());
					this.bodegaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleOrdenCompra=(TitledBorder)this.jScrollPanelDatosDetalleOrdenCompra.getBorder();
				TitledBorder titledBorderbodega=(TitledBorder)this.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodega.setTitle(titledBorderDetalleOrdenCompra.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodegaDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getid_bodega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega = "+this.detalleordencompra.getid_bodega().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_productoDetalleOrdenCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.productoBeanSwingJInternalFrame.sTipoBusqueda="Producto";

			if(!this.sFinalQueryGeneral_producto.equals("")) {
				this.productoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_producto);
				this.productoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.productoBeanSwingJInternalFrame.procesarBusqueda(this.productoBeanSwingJInternalFrame.sAccionBusqueda);
				this.productoBeanSwingJInternalFrame.inicializarActualizarBindingProducto(false);
			}

			if(!this.sFinalQueryComboProducto.equals("") && false) {

				//BUSQUEDA FILTRADA DESDE COMBO EVENT Y EVENTDEPEND
				this.productoBeanSwingJInternalFrame.sFinalQueryGeneral=this.sFinalQueryComboProducto;
				this.productoBeanSwingJInternalFrame.procesarBusqueda(this.productoBeanSwingJInternalFrame.sAccionBusqueda);
				this.productoBeanSwingJInternalFrame.inicializarActualizarBindingProducto(false);
			}


			JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetalleOrdenCompra=null;
			TitledBorder titledBorderproducto=null;

			if(!this.jScrollPanelDatosDetalleOrdenCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetalleOrdenCompra=(TitledBorder)this.jScrollPanelDatosDetalleOrdenCompra.getBorder();
				titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetalleOrdenCompra.getTitle() + " -> Producto");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_productoDetalleOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoproducto=true;

			idTienePermisoproducto=this.tienePermisosUsuarioEnPaginaWebDetalleOrdenCompra(ProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisoproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);

				this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.productoBeanSwingJInternalFrame.getProductoLogic().setConnexion(this.detalleordencompraLogic.getConnexion());

				if(this.detalleordencompra.getid_producto()!=null) {
					this.productoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.productoBeanSwingJInternalFrame.setIdActual(this.detalleordencompra.getid_producto());
					this.productoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProducto();
				}

				JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleOrdenCompra=(TitledBorder)this.jScrollPanelDatosDetalleOrdenCompra.getBorder();
				TitledBorder titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetalleOrdenCompra.getTitle() + " -> Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_productoDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getid_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_producto = "+this.detalleordencompra.getid_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_unidadDetalleOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisounidad=true;

			idTienePermisounidad=this.tienePermisosUsuarioEnPaginaWebDetalleOrdenCompra(UnidadConstantesFunciones.CLASSNAME);

			if(idTienePermisounidad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);

				this.unidadBeanSwingJInternalFrame=new UnidadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.unidadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.unidadBeanSwingJInternalFrame.getUnidadLogic().setConnexion(this.detalleordencompraLogic.getConnexion());

				if(this.detalleordencompra.getid_unidad()!=null) {
					this.unidadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.unidadBeanSwingJInternalFrame.setIdActual(this.detalleordencompra.getid_unidad());
					this.unidadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.inicializarActualizarBindingTablaUnidad();
				}

				JInternalFrameBase jinternalFrame =this.unidadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleOrdenCompra=(TitledBorder)this.jScrollPanelDatosDetalleOrdenCompra.getBorder();
				TitledBorder titledBorderunidad=(TitledBorder)this.unidadBeanSwingJInternalFrame.jScrollPanelDatosUnidad.getBorder();

				titledBorderunidad.setTitle(titledBorderDetalleOrdenCompra.getTitle() + " -> Unidad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_unidadDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getid_unidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_unidad = "+this.detalleordencompra.getid_unidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.detalleordencompra.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidadDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getcantidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad = "+this.detalleordencompra.getcantidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuentoDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getdescuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento = "+this.detalleordencompra.getdescuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncosto_unitarioDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getcosto_unitario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo_unitario = "+this.detalleordencompra.getcosto_unitario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonivaDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getiva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where iva = "+this.detalleordencompra.getiva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoniva_valorDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getiva_valor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where iva_valor = "+this.detalleordencompra.getiva_valor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncosto_totalDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getcosto_total()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo_total = "+this.detalleordencompra.getcosto_total().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondisponibleDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getdisponible()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where disponible = "+this.detalleordencompra.getdisponible().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_novedad_productoDetalleOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisonovedadproducto=true;

			idTienePermisonovedadproducto=this.tienePermisosUsuarioEnPaginaWebDetalleOrdenCompra(NovedadProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisonovedadproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);

				this.novedadproductoBeanSwingJInternalFrame=new NovedadProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.novedadproductoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.novedadproductoBeanSwingJInternalFrame.getNovedadProductoLogic().setConnexion(this.detalleordencompraLogic.getConnexion());

				if(this.detalleordencompra.getid_novedad_producto()!=null) {
					this.novedadproductoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.novedadproductoBeanSwingJInternalFrame.setIdActual(this.detalleordencompra.getid_novedad_producto());
					this.novedadproductoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.novedadproductoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.novedadproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaNovedadProducto();
				}

				JInternalFrameBase jinternalFrame =this.novedadproductoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleOrdenCompra=(TitledBorder)this.jScrollPanelDatosDetalleOrdenCompra.getBorder();
				TitledBorder titledBordernovedadproducto=(TitledBorder)this.novedadproductoBeanSwingJInternalFrame.jScrollPanelDatosNovedadProducto.getBorder();

				titledBordernovedadproducto.setTitle(titledBorderDetalleOrdenCompra.getTitle() + " -> Novedad Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_novedad_productoDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getid_novedad_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_novedad_producto = "+this.detalleordencompra.getid_novedad_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_detalle_orden_compraDetalleOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadodetalleordencompra=true;

			idTienePermisoestadodetalleordencompra=this.tienePermisosUsuarioEnPaginaWebDetalleOrdenCompra(EstadoDetalleOrdenCompraConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadodetalleordencompra) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);

				this.estadodetalleordencompraBeanSwingJInternalFrame=new EstadoDetalleOrdenCompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadodetalleordencompraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadodetalleordencompraBeanSwingJInternalFrame.getEstadoDetalleOrdenCompraLogic().setConnexion(this.detalleordencompraLogic.getConnexion());

				if(this.detalleordencompra.getid_estado_detalle_orden_compra()!=null) {
					this.estadodetalleordencompraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadodetalleordencompraBeanSwingJInternalFrame.setIdActual(this.detalleordencompra.getid_estado_detalle_orden_compra());
					this.estadodetalleordencompraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadodetalleordencompraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadodetalleordencompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoDetalleOrdenCompra();
				}

				JInternalFrameBase jinternalFrame =this.estadodetalleordencompraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleOrdenCompra=(TitledBorder)this.jScrollPanelDatosDetalleOrdenCompra.getBorder();
				TitledBorder titledBorderestadodetalleordencompra=(TitledBorder)this.estadodetalleordencompraBeanSwingJInternalFrame.jScrollPanelDatosEstadoDetalleOrdenCompra.getBorder();

				titledBorderestadodetalleordencompra.setTitle(titledBorderDetalleOrdenCompra.getTitle() + " -> Estado Detalle Orden Compra");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_detalle_orden_compraDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getid_estado_detalle_orden_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_detalle_orden_compra = "+this.detalleordencompra.getid_estado_detalle_orden_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_comprobanteDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getnumero_comprobante()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_comprobante like '%"+this.detalleordencompra.getnumero_comprobante()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonlote_clienteDetalleOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.getdetalleordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleordencompra==null) {
						this.detalleordencompra = new DetalleOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);
				}

				if(this.detalleordencompra.getlote_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where lote_cliente like '%"+this.detalleordencompra.getlote_cliente()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void closingInternalFrameDetalleOrdenCompra() {
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.setVisible(false);	    			
			this.jInternalFrameDetalleFormDetalleOrdenCompra.dispose();
			this.jInternalFrameDetalleFormDetalleOrdenCompra=null;
		}
		
		/*
		if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra!=null) {
			this.jInternalFrameReporteDinamicoDetalleOrdenCompra.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoDetalleOrdenCompra.dispose();
			this.jInternalFrameReporteDinamicoDetalleOrdenCompra=null;
		}
		
		if(this.jInternalFrameImportacionDetalleOrdenCompra!=null) {
			this.jInternalFrameImportacionDetalleOrdenCompra.setVisible(false);	    			
			this.jInternalFrameImportacionDetalleOrdenCompra.dispose();
			this.jInternalFrameImportacionDetalleOrdenCompra=null;
		}		
		*/
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessDetalleOrdenCompra();
			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			
			
			if(sTipo.equals("NuevoDetalleOrdenCompra")) {
				jButtonNuevoDetalleOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarDetalleOrdenCompra")) {
				jButtonDuplicarDetalleOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarDetalleOrdenCompra")) {
				jButtonCopiarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormDetalleOrdenCompra")) {
				jButtonVerFormDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarDetalleOrdenCompra")) {
				jButtonNuevoDetalleOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarDetalleOrdenCompra")) {
				jButtonDuplicarDetalleOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoDetalleOrdenCompra")) {
				jButtonNuevoDetalleOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarDetalleOrdenCompra")) {
				jButtonDuplicarDetalleOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesDetalleOrdenCompra")) {
				jButtonNuevoDetalleOrdenCompraActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarDetalleOrdenCompra")) {
				jButtonNuevoDetalleOrdenCompraActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesDetalleOrdenCompra")) {
				jButtonNuevoDetalleOrdenCompraActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarDetalleOrdenCompra")) {
				jButtonModificarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarDetalleOrdenCompra")) {
				jButtonModificarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarDetalleOrdenCompra")) {
				jButtonModificarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarDetalleOrdenCompra")) {
				jButtonActualizarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarDetalleOrdenCompra")) {
				jButtonActualizarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarDetalleOrdenCompra")) {
				jButtonActualizarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarDetalleOrdenCompra")) {
				jButtonEliminarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarDetalleOrdenCompra")) {
				jButtonEliminarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarDetalleOrdenCompra")) {
				jButtonEliminarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarDetalleOrdenCompra")) {
				jButtonCancelarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarDetalleOrdenCompra")) {
				jButtonCancelarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarDetalleOrdenCompra")) {
				jButtonCancelarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarDetalleOrdenCompra")) {
				jButtonCerrarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarDetalleOrdenCompra")) {
				jButtonCerrarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarDetalleOrdenCompra")) {
				jButtonCerrarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarDetalleOrdenCompra")) {
				jButtonMostrarOcultarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarDetalleOrdenCompra")) {
				jButtonCancelarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosDetalleOrdenCompra")) {
				jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarDetalleOrdenCompra")) {
				jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarDetalleOrdenCompra")) {
				jButtonCopiarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarDetalleOrdenCompra")) {
				jButtonVerFormDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosDetalleOrdenCompra")) {
				jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarDetalleOrdenCompra")) {
				jButtonCopiarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormDetalleOrdenCompra")) {
				jButtonVerFormDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaDetalleOrdenCompra")) {
				jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarDetalleOrdenCompra")) {
				jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaDetalleOrdenCompra")) {
				jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionDetalleOrdenCompra")) {
				jButtonRecargarInformacionDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarDetalleOrdenCompra")) {
				jButtonRecargarInformacionDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionDetalleOrdenCompra")) {
				jButtonRecargarInformacionDetalleOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresDetalleOrdenCompra")) {
				jButtonAnterioresDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarDetalleOrdenCompra")) {
				jButtonAnterioresDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreDetalleOrdenCompra")) {
				jButtonAnterioresDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesDetalleOrdenCompra")) {
				jButtonSiguientesDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarDetalleOrdenCompra")) {
				jButtonSiguientesDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesDetalleOrdenCompra")) {
				jButtonSiguientesDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByDetalleOrdenCompra") || sTipo.equals("MenuItemDetalleAbrirOrderByDetalleOrdenCompra")) {
				jButtonAbrirOrderByDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarDetalleOrdenCompra") || sTipo.equals("MenuItemDetalleMostrarOcultarDetalleOrdenCompra")) {
				jButtonMostrarOcultarDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleOrdenCompra")) {
				jButtonNuevoGuardarCambiosDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarDetalleOrdenCompra")) {
				jButtonNuevoGuardarCambiosDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosDetalleOrdenCompra")) {
				jButtonNuevoGuardarCambiosDetalleOrdenCompraActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoDetalleOrdenCompra")) {
				jButtonCerrarReporteDinamicoDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoDetalleOrdenCompra")) {
				jButtonGenerarReporteDinamicoDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoDetalleOrdenCompra")) {
				/*
				jButtonGenerarExcelReporteDinamicoDetalleOrdenCompraActionPerformed(evt);
				*/
			} else if(sTipo.equals("CerrarImportacionDetalleOrdenCompra")) {
				jButtonCerrarImportacionDetalleOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionDetalleOrdenCompra")) {
				/*
				jButtonGenerarImportacionDetalleOrdenCompraActionPerformed(evt);
				*/
			} else if(sTipo.equals("AbrirImportacionDetalleOrdenCompra")) {
				/*
				jButtonAbrirImportacionDetalleOrdenCompraActionPerformed(evt);
				*/
			} else if(sTipo.equals("TiposAccionesDetalleOrdenCompra")) {
				jComboBoxTiposAccionesDetalleOrdenCompraActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesDetalleOrdenCompra")) {
				jComboBoxTiposRelacionesDetalleOrdenCompraActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioDetalleOrdenCompra")) {
				jComboBoxTiposAccionesDetalleOrdenCompraActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarDetalleOrdenCompra")) {
				/*
				jComboBoxTiposSeleccionarDetalleOrdenCompraActionListener(evt);
				*/
			} else if(sTipo.equals("ValorCampoGeneralDetalleOrdenCompra")) {
				jTextFieldValorCampoGeneralDetalleOrdenCompraActionListener(evt);
			}
			
			else if(sTipo.equals("AbrirTotalesDetalleOrdenCompra")) {
				jButtonAbrirTotalesDetalleOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarTotalesDetalleOrdenCompra")) {
				jButtonCerrarTotalesDetalleOrdenCompraActionPerformed(evt);
			} 
			
			else if(sTipo.equals("AbrirOrderByDetalleOrdenCompra")) {
				jButtonAbrirOrderByDetalleOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarDetalleOrdenCompra")) {
				jButtonAbrirOrderByDetalleOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByDetalleOrdenCompra")) {
				jButtonCerrarOrderByDetalleOrdenCompraActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleOrdenCompraBusqueda")) {
				this.jButtonidDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_orden_compraDetalleOrdenCompraUpdate")) {
				this.jButtonid_orden_compraDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_orden_compraDetalleOrdenCompraBusqueda")) {
				this.jButtonid_orden_compraDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleOrdenCompraUpdate")) {
				this.jButtonid_empresaDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleOrdenCompraBusqueda")) {
				this.jButtonid_empresaDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleOrdenCompraUpdate")) {
				this.jButtonid_sucursalDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleOrdenCompraBusqueda")) {
				this.jButtonid_sucursalDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetalleOrdenCompraUpdate")) {
				this.jButtonid_ejercicioDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetalleOrdenCompraBusqueda")) {
				this.jButtonid_ejercicioDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetalleOrdenCompraUpdate")) {
				this.jButtonid_periodoDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetalleOrdenCompraBusqueda")) {
				this.jButtonid_periodoDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetalleOrdenCompraUpdate")) {
				this.jButtonid_anioDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetalleOrdenCompraBusqueda")) {
				this.jButtonid_anioDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetalleOrdenCompraUpdate")) {
				this.jButtonid_mesDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetalleOrdenCompraBusqueda")) {
				this.jButtonid_mesDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetalleOrdenCompraUpdate")) {
				this.jButtonid_bodegaDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetalleOrdenCompraBusqueda")) {
				this.jButtonid_bodegaDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetalleOrdenCompra")) {
				this.jButtonid_productoDetalleOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetalleOrdenCompraUpdate")) {
				this.jButtonid_productoDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetalleOrdenCompraBusqueda")) {
				this.jButtonid_productoDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetalleOrdenCompraUpdate")) {
				this.jButtonid_unidadDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetalleOrdenCompraBusqueda")) {
				this.jButtonid_unidadDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetalleOrdenCompraBusqueda")) {
				this.jButtondescripcionDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidadDetalleOrdenCompraBusqueda")) {
				this.jButtoncantidadDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoDetalleOrdenCompraBusqueda")) {
				this.jButtondescuentoDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_unitarioDetalleOrdenCompraBusqueda")) {
				this.jButtoncosto_unitarioDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaDetalleOrdenCompraBusqueda")) {
				this.jButtonivaDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iva_valorDetalleOrdenCompraBusqueda")) {
				this.jButtoniva_valorDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_totalDetalleOrdenCompraBusqueda")) {
				this.jButtoncosto_totalDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("disponibleDetalleOrdenCompraBusqueda")) {
				this.jButtondisponibleDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_novedad_productoDetalleOrdenCompraUpdate")) {
				this.jButtonid_novedad_productoDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_novedad_productoDetalleOrdenCompraBusqueda")) {
				this.jButtonid_novedad_productoDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_detalle_orden_compraDetalleOrdenCompraUpdate")) {
				this.jButtonid_estado_detalle_orden_compraDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_detalle_orden_compraDetalleOrdenCompraBusqueda")) {
				this.jButtonid_estado_detalle_orden_compraDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_comprobanteDetalleOrdenCompraBusqueda")) {
				this.jButtonnumero_comprobanteDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("lote_clienteDetalleOrdenCompraBusqueda")) {
				this.jButtonlote_clienteDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_productoDetalleOrdenCompra")) {
				this.jButtonid_productoDetalleOrdenCompraActionPerformed(evt);
			}
			
			
			;
			
			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessDetalleOrdenCompra();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleOrdenCompraActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				
				


			if(sTipo.equals("cantidadDetalleOrdenCompra")) {
				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);

				esUsoDesdeHijoLocal=true;
			}
			 else if(sTipo.equals("costo_unitarioDetalleOrdenCompra")) {
				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);

				esUsoDesdeHijoLocal=true;
			}
			 else if(sTipo.equals("ivaDetalleOrdenCompra")) {
				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);

				esUsoDesdeHijoLocal=true;
			}
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleOrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			DetalleOrdenCompra detalleordencompraLocal=null;
			
			if(!this.getEsControlTabla()) {
				detalleordencompraLocal=this.detalleordencompra;
			} else {
				detalleordencompraLocal=this.detalleordencompraAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


				if(sTipo.equals("cantidadDetalleOrdenCompra")) {
					if(detalleordencompraLocal.getcantidad()==Integer.parseInt(this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcantidadDetalleOrdenCompra.getText())){existeCambio=false;};
				}
				 else if(sTipo.equals("costo_unitarioDetalleOrdenCompra")) {
					if(detalleordencompraLocal.getcosto_unitario()==Double.parseDouble(this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_unitarioDetalleOrdenCompra.getText())){existeCambio=false;};
				}
				 else if(sTipo.equals("ivaDetalleOrdenCompra")) {
					if(detalleordencompraLocal.getiva()==Double.parseDouble(this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldivaDetalleOrdenCompra.getText())){existeCambio=false;};
				}
			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
							
				
				


			if(sTipo.equals("cantidadDetalleOrdenCompra")) {
				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);

				esUsoDesdeHijoLocal=true;
			}
			 else if(sTipo.equals("costo_unitarioDetalleOrdenCompra")) {
				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);

				esUsoDesdeHijoLocal=true;
			}
			 else if(sTipo.equals("ivaDetalleOrdenCompra")) {
				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);

				esUsoDesdeHijoLocal=true;
			}
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleOrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleOrdenCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraAnterior =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleordencompraAnterior =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			if(sTipo.equals("cantidadDetalleOrdenCompra")) {
				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);

				esUsoDesdeHijoLocal=true;
			}
			 else if(sTipo.equals("costo_unitarioDetalleOrdenCompra")) {
				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);

				esUsoDesdeHijoLocal=true;
			}
			 else if(sTipo.equals("ivaDetalleOrdenCompra")) {
				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);

				esUsoDesdeHijoLocal=true;
			}
			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleOrdenCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
								
						
				


				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleOrdenCompra.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
								
				
				


				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleOrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleOrdenCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraAnterior =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleordencompraAnterior =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleOrdenCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraAnterior =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleordencompraAnterior =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleOrdenCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleordencompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
							
				
				


				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleOrdenCompra.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleOrdenCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompraAnterior =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detalleordencompraAnterior =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleOrdenCompraActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleordencompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
								
				
				


			if(sTipo.equals("cantidadDetalleOrdenCompra")) {
				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);

				esUsoDesdeHijoLocal=true;
			}
			 else if(sTipo.equals("costo_unitarioDetalleOrdenCompra")) {
				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);

				esUsoDesdeHijoLocal=true;
			}
			 else if(sTipo.equals("ivaDetalleOrdenCompra")) {
				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);

				esUsoDesdeHijoLocal=true;
			}
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleOrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleOrdenCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraAnterior =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleordencompraAnterior =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleOrdenCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleordencompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleOrdenCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosDetalleOrdenCompra")) {
					jCheckBoxSeleccionarTodosDetalleOrdenCompraItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosDetalleOrdenCompra")) {
					jCheckBoxSeleccionadosDetalleOrdenCompraItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarDetalleOrdenCompra")) {
					
				}
				
				


				
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleOrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleordencompra);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
												
				
				


				
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleOrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleOrdenCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleordencompraAnterior =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detalleordencompraAnterior =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleOrdenCompraActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_bodegaDetalleOrdenCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra;
				}

				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra")) {
				//this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra,"FK_IdBodega");
				//recargarFormDetalleOrdenCompraBodega(jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetalleOrdenCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra;
				}

				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetalleOrdenCompra")) {
				//this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetalleOrdenCompra,"FK_IdProducto");
				//recargarFormDetalleOrdenCompraProducto(jComboBoxid_productoFK_IdProductoDetalleOrdenCompra,"FK_IdProducto");
			}
			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleOrdenCompraActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaDetalleOrdenCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra;
				}

				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra")) {
				//this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra,"FK_IdBodega");
				//recargarFormDetalleOrdenCompraBodega(jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetalleOrdenCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra;
				}

				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetalleOrdenCompra")) {
				//this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetalleOrdenCompra,"FK_IdProducto");
				//recargarFormDetalleOrdenCompraProducto(jComboBoxid_productoFK_IdProductoDetalleOrdenCompra,"FK_IdProducto");
			}
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleOrdenCompra.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleOrdenCompra.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleordencompra);
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaDetalleOrdenCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra;
				}

				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra")) {
				//this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra,"FK_IdBodega");
				//recargarFormDetalleOrdenCompraBodega(jComboBoxid_bodegaFK_IdBodegaDetalleOrdenCompra,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetalleOrdenCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra;
				}

				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetalleOrdenCompra")) {
				//this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetalleOrdenCompra,"FK_IdProducto");
				//recargarFormDetalleOrdenCompraProducto(jComboBoxid_productoFK_IdProductoDetalleOrdenCompra,"FK_IdProducto");
			}
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleOrdenCompra.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleOrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleOrdenCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleordencompraAnterior =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleordencompraAnterior =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarDetalleOrdenCompra")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosDetalleOrdenCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosDetalleOrdenCompra.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.detalleordencompra =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.detalleordencompra);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarDetalleOrdenCompra")) {
				
				}
				
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarDetalleOrdenCompra")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosDetalleOrdenCompra.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarDetalleOrdenCompra")) {
			
			}
			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessDetalleOrdenCompra();
			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			
			if(sTipo.equals("NuevoDetalleOrdenCompra")) {
				jButtonNuevoDetalleOrdenCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarDetalleOrdenCompra")) {
				jButtonDuplicarDetalleOrdenCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarDetalleOrdenCompra")) {
				jButtonCopiarDetalleOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormDetalleOrdenCompra")) {
				jButtonVerFormDetalleOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesDetalleOrdenCompra")) {
				jButtonNuevoDetalleOrdenCompraActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarDetalleOrdenCompra")) {
				jButtonModificarDetalleOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarDetalleOrdenCompra")) {
				jButtonActualizarDetalleOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarDetalleOrdenCompra")) {
				jButtonEliminarDetalleOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaDetalleOrdenCompra")) {
				jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarDetalleOrdenCompra")) {
				jButtonCancelarDetalleOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarDetalleOrdenCompra")) {
				jButtonCerrarDetalleOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosDetalleOrdenCompra")) {
				jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleOrdenCompra")) {
				jButtonNuevoGuardarCambiosDetalleOrdenCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByDetalleOrdenCompra")) {
				jButtonAbrirOrderByDetalleOrdenCompraActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionDetalleOrdenCompra")) {
				jButtonRecargarInformacionDetalleOrdenCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresDetalleOrdenCompra")) {
				jButtonAnterioresDetalleOrdenCompraActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesDetalleOrdenCompra")) {
				jButtonSiguientesDetalleOrdenCompraActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleOrdenCompraBusqueda")) {
				this.jButtonidDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_orden_compraDetalleOrdenCompraUpdate")) {
				this.jButtonid_orden_compraDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_orden_compraDetalleOrdenCompraBusqueda")) {
				this.jButtonid_orden_compraDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleOrdenCompraUpdate")) {
				this.jButtonid_empresaDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleOrdenCompraBusqueda")) {
				this.jButtonid_empresaDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleOrdenCompraUpdate")) {
				this.jButtonid_sucursalDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleOrdenCompraBusqueda")) {
				this.jButtonid_sucursalDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetalleOrdenCompraUpdate")) {
				this.jButtonid_ejercicioDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetalleOrdenCompraBusqueda")) {
				this.jButtonid_ejercicioDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetalleOrdenCompraUpdate")) {
				this.jButtonid_periodoDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetalleOrdenCompraBusqueda")) {
				this.jButtonid_periodoDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetalleOrdenCompraUpdate")) {
				this.jButtonid_anioDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetalleOrdenCompraBusqueda")) {
				this.jButtonid_anioDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetalleOrdenCompraUpdate")) {
				this.jButtonid_mesDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetalleOrdenCompraBusqueda")) {
				this.jButtonid_mesDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetalleOrdenCompraUpdate")) {
				this.jButtonid_bodegaDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetalleOrdenCompraBusqueda")) {
				this.jButtonid_bodegaDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetalleOrdenCompra")) {
				this.jButtonid_productoDetalleOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetalleOrdenCompraUpdate")) {
				this.jButtonid_productoDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetalleOrdenCompraBusqueda")) {
				this.jButtonid_productoDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetalleOrdenCompraUpdate")) {
				this.jButtonid_unidadDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetalleOrdenCompraBusqueda")) {
				this.jButtonid_unidadDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetalleOrdenCompraBusqueda")) {
				this.jButtondescripcionDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidadDetalleOrdenCompraBusqueda")) {
				this.jButtoncantidadDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoDetalleOrdenCompraBusqueda")) {
				this.jButtondescuentoDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_unitarioDetalleOrdenCompraBusqueda")) {
				this.jButtoncosto_unitarioDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaDetalleOrdenCompraBusqueda")) {
				this.jButtonivaDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iva_valorDetalleOrdenCompraBusqueda")) {
				this.jButtoniva_valorDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_totalDetalleOrdenCompraBusqueda")) {
				this.jButtoncosto_totalDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("disponibleDetalleOrdenCompraBusqueda")) {
				this.jButtondisponibleDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_novedad_productoDetalleOrdenCompraUpdate")) {
				this.jButtonid_novedad_productoDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_novedad_productoDetalleOrdenCompraBusqueda")) {
				this.jButtonid_novedad_productoDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_detalle_orden_compraDetalleOrdenCompraUpdate")) {
				this.jButtonid_estado_detalle_orden_compraDetalleOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_detalle_orden_compraDetalleOrdenCompraBusqueda")) {
				this.jButtonid_estado_detalle_orden_compraDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_comprobanteDetalleOrdenCompraBusqueda")) {
				this.jButtonnumero_comprobanteDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("lote_clienteDetalleOrdenCompraBusqueda")) {
				this.jButtonlote_clienteDetalleOrdenCompraBusquedaActionPerformed(evt);
			}
			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessDetalleOrdenCompra();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameDetalleOrdenCompra")) {
				closingInternalFrameDetalleOrdenCompra();
				
			} else if(sTipo.equals("jButtonCancelarDetalleOrdenCompra")) {
				JInternalFrameBase jInternalFrameDetalleFormDetalleOrdenCompra = (JInternalFrameBase)evt.getSource();
	            	
	            DetalleOrdenCompraBeanSwingJInternalFrame jInternalFrameParent=(DetalleOrdenCompraBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleOrdenCompra.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarDetalleOrdenCompraActionPerformed(null);
			}
			
			DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detalleordencompra,new Object(),this.detalleordencompraParameterGeneral,this.detalleordencompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormDetalleOrdenCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormDetalleOrdenCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormDetalleOrdenCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.detalleordencompra)) {
			if(!esControlTabla) {
				if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);			
				}
				
				if(this.detalleordencompraSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualDetalleOrdenCompra(this.detalleordencompra,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detalleordencompraReturnGeneral=detalleordencompraLogic.procesarEventosDetalleOrdenComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleordencompraLogic.getDetalleOrdenCompras(),this.detalleordencompra,this.detalleordencompraParameterGeneral,this.isEsNuevoDetalleOrdenCompra,classes);//this.detalleordencompraLogic.getDetalleOrdenCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanDetalleOrdenCompra(this.detalleordencompraReturnGeneral,this.detalleordencompraBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.detalleordencompraSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanDetalleOrdenCompra(classes,this.detalleordencompraReturnGeneral,this.detalleordencompraBean,false);
					}
						
					if(this.detalleordencompraReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyDetalleOrdenCompra(this.detalleordencompraReturnGeneral.getDetalleOrdenCompra());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioDetalleOrdenCompra(this.detalleordencompraReturnGeneral.getDetalleOrdenCompra());	
					}
						
					if(this.detalleordencompraReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioDetalleOrdenCompra(this.detalleordencompraReturnGeneral.getDetalleOrdenCompra(),classes);//this.detalleordencompraBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioDetalleOrdenCompra(this.detalleordencompra,classes);//this.detalleordencompraBean);									
				}
			
				if(DetalleOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualDetalleOrdenCompra(this.detalleordencompra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleOrdenCompra(this.detalleordencompra);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.detalleordencompraAnterior!=null) {
						this.detalleordencompra=this.detalleordencompraAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detalleordencompraReturnGeneral=detalleordencompraLogic.procesarEventosDetalleOrdenComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleordencompraLogic.getDetalleOrdenCompras(),this.detalleordencompra,this.detalleordencompraParameterGeneral,this.isEsNuevoDetalleOrdenCompra,classes);//this.detalleordencompraLogic.getDetalleOrdenCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detalleordencompraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detalleordencompraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.detalleordencompraReturnGeneral.getDetalleOrdenCompra(),detalleordencompraLogic.getDetalleOrdenCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.detalleordencompraReturnGeneral.getDetalleOrdenCompra(),this.detalleordencompras);
				}
				//ARCHITECTURE
				
				//this.jTableDatosDetalleOrdenCompra.repaint();
				
				//((AbstractTableModel) this.jTableDatosDetalleOrdenCompra.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosDetalleOrdenCompra();
			}
		}
	}
	
	public void actualizarVisualTableDatosDetalleOrdenCompra() throws Exception {
		
		DetalleOrdenCompraModel detalleordencompraModel=(DetalleOrdenCompraModel)this.jTableDatosDetalleOrdenCompra.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detalleordencompraModel.detalleordencompras=this.detalleordencompraLogic.getDetalleOrdenCompras();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			detalleordencompraModel.detalleordencompras=this.detalleordencompras;
		}
		
		
		((DetalleOrdenCompraModel) this.jTableDatosDetalleOrdenCompra.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaDetalleOrdenCompra() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getdetalleordencompraAnterior(),this.detalleordencompraLogic.getDetalleOrdenCompras());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getdetalleordencompraAnterior(),this.detalleordencompras);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosDetalleOrdenCompra();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleordencompra,new Object(),generalEntityParameterGeneral,this.detalleordencompraReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.detalleordencompraSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsOfDetalleOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=DetalleOrdenCompraConstantesFunciones.getClassesRelationshipsFromStringsOfDetalleOrdenCompra(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormDetalleOrdenCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				DetalleOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleordencompra,new Object(),generalEntityParameterGeneral,this.detalleordencompraReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioDetalleOrdenCompra(DetalleOrdenCompraBean detalleordencompraBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanDetalleOrdenCompra(ArrayList<Classe> classes,DetalleOrdenCompraReturnGeneral detalleordencompraReturnGeneral,DetalleOrdenCompraBean detalleordencompraBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.detalleordencompra)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormDetalleOrdenCompra = new DetalleOrdenCompraDetalleFormJInternalFrame(jDesktopPane,this.detalleordencompraSessionBean.getConGuardarRelaciones(),this.detalleordencompraSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.setVisible(false);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.setSelected(false);						
		
		this.jInternalFrameDetalleFormDetalleOrdenCompra.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormDetalleOrdenCompra.detalleordencompraLogic=this.detalleordencompraLogic;
		
		this.cargarCombosFrameForeignKeyDetalleOrdenCompra("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleOrdenCompra();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleOrdenCompra();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyDetalleOrdenCompra("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyDetalleOrdenCompra();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormDetalleOrdenCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleOrdenCompra"));
		
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonModificarDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"ModificarDetalleOrdenCompra"));

		/*
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonModificarToolBarDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleOrdenCompra"));
					
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemModificarDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleOrdenCompra"));		
		
		*/
		
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonActualizarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"ActualizarDetalleOrdenCompra"));
		
		/*
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonActualizarToolBarDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleOrdenCompra"));
						
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemActualizarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleOrdenCompra"));		
		
		*/
		
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonEliminarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"EliminarDetalleOrdenCompra"));
		
		/*
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonEliminarToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleOrdenCompra"));
								
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemEliminarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleOrdenCompra"));		
		
		*/
		
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonCancelarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"CancelarDetalleOrdenCompra"));
		
		/*
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonCancelarToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleOrdenCompra"));
					
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemCancelarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleOrdenCompra"));		
		
		*/
		
		
		/*
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemDetalleCerrarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleOrdenCompra"));		
		*/
		
		/*
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonGuardarCambiosToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleOrdenCompra"));
		*/
		
		/*
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonGuardarCambiosToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleOrdenCompra"));
		*/
		
		
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxTiposAccionesFormularioDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleOrdenCompra"));
		
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcantidadDetalleOrdenCompra.addFocusListener(new TextFieldFocusListener(this,"cantidadDetalleOrdenCompra"));
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcantidadDetalleOrdenCompra.addActionListener(new TextFieldActionListener(this,"cantidadDetalleOrdenCompra"));
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcantidadDetalleOrdenCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldcantidadDetalleOrdenCompra,"cantidadDetalleOrdenCompra"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_unitarioDetalleOrdenCompra.addFocusListener(new TextFieldFocusListener(this,"costo_unitarioDetalleOrdenCompra"));
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_unitarioDetalleOrdenCompra.addActionListener(new TextFieldActionListener(this,"costo_unitarioDetalleOrdenCompra"));
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_unitarioDetalleOrdenCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldcosto_unitarioDetalleOrdenCompra,"costo_unitarioDetalleOrdenCompra"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldivaDetalleOrdenCompra.addFocusListener(new TextFieldFocusListener(this,"ivaDetalleOrdenCompra"));
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldivaDetalleOrdenCompra.addActionListener(new TextFieldActionListener(this,"ivaDetalleOrdenCompra"));
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldivaDetalleOrdenCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldivaDetalleOrdenCompra,"ivaDetalleOrdenCompra"));


				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonidDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_orden_compraDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_orden_compraDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_orden_compraDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_orden_compraDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_empresaDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_empresaDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_sucursalDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_sucursalDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_ejercicioDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_ejercicioDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_periodoDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_periodoDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_anioDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_anioDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_mesDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_mesDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_bodegaDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_bodegaDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleOrdenCompraBusqueda"));
		//jButtonid_productoDetalleOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetalleOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_productoDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"id_productoDetalleOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_productoDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_productoDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_unidadDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_unidadDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtondescripcionDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtoncantidadDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtondescuentoDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"descuentoDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtoncosto_unitarioDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"costo_unitarioDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonivaDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"ivaDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtoniva_valorDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"iva_valorDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtoncosto_totalDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"costo_totalDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtondisponibleDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"disponibleDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_novedad_productoDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_novedad_productoDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_novedad_productoDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_novedad_productoDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_estado_detalle_orden_compraDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_detalle_orden_compraDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_estado_detalle_orden_compraDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_detalle_orden_compraDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonnumero_comprobanteDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonlote_clienteDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"lote_clienteDetalleOrdenCompraBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTabbedPaneRelacionesDetalleOrdenCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleOrdenCompra"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameDetalleOrdenCompra"));
		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleOrdenCompra"));
		}
		
		this.jTableDatosDetalleOrdenCompra.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarDetalleOrdenCompra"));
		
		this.jTableDatosDetalleOrdenCompra.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarDetalleOrdenCompra"));
		
		this.jButtonNuevoDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"NuevoDetalleOrdenCompra"));
		
		this.jButtonDuplicarDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"DuplicarDetalleOrdenCompra"));
		
		this.jButtonCopiarDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"CopiarDetalleOrdenCompra"));
		
		this.jButtonVerFormDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"VerFormDetalleOrdenCompra"));
		
		/*
		this.jButtonNuevoToolBarDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"NuevoToolBarDetalleOrdenCompra"));
			
		this.jButtonDuplicarToolBarDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"DuplicarToolBarDetalleOrdenCompra"));
			
		this.jMenuItemNuevoDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoDetalleOrdenCompra"));
			
		this.jMenuItemDuplicarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarDetalleOrdenCompra"));		
		*/
		
		this.jButtonNuevoRelacionesDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"NuevoRelacionesDetalleOrdenCompra"));
		
		/*
		this.jButtonNuevoRelacionesToolBarDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarDetalleOrdenCompra"));
			
		this.jMenuItemNuevoRelacionesDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesDetalleOrdenCompra"));		
		*/
		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonModificarDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"ModificarDetalleOrdenCompra"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonModificarToolBarDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleOrdenCompra"));
			
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemModificarDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleOrdenCompra"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonActualizarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"ActualizarDetalleOrdenCompra"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonActualizarToolBarDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleOrdenCompra"));
				
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemActualizarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleOrdenCompra"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonEliminarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"EliminarDetalleOrdenCompra"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonEliminarToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleOrdenCompra"));
						
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemEliminarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleOrdenCompra"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonCancelarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"CancelarDetalleOrdenCompra"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonCancelarToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleOrdenCompra"));
			
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemCancelarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleOrdenCompra"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarDetalleOrdenCompra"));		
		*/
		
		this.jButtonCerrarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"CerrarDetalleOrdenCompra"));
		
		/*
		this.jButtonCerrarToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"CerrarToolBarDetalleOrdenCompra"));
			
		this.jMenuItemCerrarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemCerrarDetalleOrdenCompra"));
			
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jMenuItemDetalleCerrarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleOrdenCompra"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonGuardarCambiosDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosDetalleOrdenCompra"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonGuardarCambiosToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleOrdenCompra"));
		}
		
		this.jButtonCopiarToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"CopiarToolBarDetalleOrdenCompra"));
			
		this.jButtonVerFormToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"VerFormToolBarDetalleOrdenCompra"));
		
		this.jMenuItemGuardarCambiosDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosDetalleOrdenCompra"));
			
		this.jMenuItemCopiarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemCopiarDetalleOrdenCompra"));		
		
		this.jMenuItemVerFormDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemVerFormDetalleOrdenCompra"));		
		*/
		
		this.jButtonGuardarCambiosTablaDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleOrdenCompra"));
		
		/*
		this.jButtonGuardarCambiosTablaToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarDetalleOrdenCompra"));
			
		this.jMenuItemGuardarCambiosTablaDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleOrdenCompra"));		
		*/
		
		/*
		this.jButtonRecargarInformacionDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionDetalleOrdenCompra"));
					
		this.jButtonRecargarInformacionToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarDetalleOrdenCompra"));
		
		this.jMenuItemRecargarInformacionDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionDetalleOrdenCompra"));		
		*/
		
		
		this.jButtonAnterioresDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"AnterioresDetalleOrdenCompra"));
		
		/*
		this.jButtonAnterioresToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"AnterioresToolBarDetalleOrdenCompra"));
		
		this.jMenuItemAnterioresDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresDetalleOrdenCompra"));		
		*/
		
		this.jButtonSiguientesDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"SiguientesDetalleOrdenCompra"));
		
		/*
		this.jButtonSiguientesToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"SiguientesToolBarDetalleOrdenCompra"));
			
		this.jMenuItemSiguientesDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesDetalleOrdenCompra"));
			
		this.jMenuItemAbrirOrderByDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByDetalleOrdenCompra"));
			
		this.jMenuItemMostrarOcultarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarDetalleOrdenCompra"));
			
		this.jMenuItemDetalleAbrirOrderByDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByDetalleOrdenCompra"));
			
		this.jMenuItemDetalleMostarOcultarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarDetalleOrdenCompra"));		
		*/
		
		this.jButtonNuevoGuardarCambiosDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosDetalleOrdenCompra"));
		
		/*
		this.jButtonNuevoGuardarCambiosToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarDetalleOrdenCompra"));
			
		this.jMenuItemNuevoGuardarCambiosDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosDetalleOrdenCompra"));		
		*/
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosDetalleOrdenCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosDetalleOrdenCompra"));

		this.jCheckBoxSeleccionadosDetalleOrdenCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionadosDetalleOrdenCompra"));
		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxTiposAccionesFormularioDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleOrdenCompra"));
		}
		
		/*
		this.jComboBoxTiposRelacionesDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"TiposRelacionesDetalleOrdenCompra"));
			
		this.jComboBoxTiposAccionesDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesDetalleOrdenCompra"));
					
		this.jComboBoxTiposSeleccionarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"TiposSeleccionarDetalleOrdenCompra"));
			
		this.jTextFieldValorCampoGeneralDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralDetalleOrdenCompra"));		
		*/
		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcantidadDetalleOrdenCompra.addFocusListener(new TextFieldFocusListener(this,"cantidadDetalleOrdenCompra"));
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcantidadDetalleOrdenCompra.addActionListener(new TextFieldActionListener(this,"cantidadDetalleOrdenCompra"));
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcantidadDetalleOrdenCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldcantidadDetalleOrdenCompra,"cantidadDetalleOrdenCompra"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_unitarioDetalleOrdenCompra.addFocusListener(new TextFieldFocusListener(this,"costo_unitarioDetalleOrdenCompra"));
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_unitarioDetalleOrdenCompra.addActionListener(new TextFieldActionListener(this,"costo_unitarioDetalleOrdenCompra"));
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_unitarioDetalleOrdenCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldcosto_unitarioDetalleOrdenCompra,"costo_unitarioDetalleOrdenCompra"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldivaDetalleOrdenCompra.addFocusListener(new TextFieldFocusListener(this,"ivaDetalleOrdenCompra"));
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldivaDetalleOrdenCompra.addActionListener(new TextFieldActionListener(this,"ivaDetalleOrdenCompra"));
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldivaDetalleOrdenCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldivaDetalleOrdenCompra,"ivaDetalleOrdenCompra"));


		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonidDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_orden_compraDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_orden_compraDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_orden_compraDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_orden_compraDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_empresaDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_empresaDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_sucursalDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_sucursalDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_ejercicioDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_ejercicioDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_periodoDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_periodoDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_anioDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_anioDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_mesDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_mesDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_bodegaDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_bodegaDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleOrdenCompraBusqueda"));
		//jButtonid_productoDetalleOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetalleOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_productoDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"id_productoDetalleOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_productoDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_productoDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_unidadDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_unidadDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtondescripcionDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtoncantidadDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtondescuentoDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"descuentoDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtoncosto_unitarioDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"costo_unitarioDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonivaDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"ivaDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtoniva_valorDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"iva_valorDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtoncosto_totalDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"costo_totalDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtondisponibleDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"disponibleDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_novedad_productoDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_novedad_productoDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_novedad_productoDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_novedad_productoDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_estado_detalle_orden_compraDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_detalle_orden_compraDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_estado_detalle_orden_compraDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_detalle_orden_compraDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonnumero_comprobanteDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonlote_clienteDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"lote_clienteDetalleOrdenCompraBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		/*
		
			this.jButtonFK_IdBodegaDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetalleOrdenCompra"));

			this.jButtonFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra"));

			this.jButtonFK_IdNovedadProductoDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdNovedadProductoDetalleOrdenCompra"));

			this.jButtonFK_IdOrdenCompraDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdOrdenCompraDetalleOrdenCompra"));

			this.jButtonFK_IdProductoDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetalleOrdenCompra"));

			this.jButtonBuscarFK_IdProductoid_productoDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"id_productoDetalleOrdenCompra"));

			this.jButtonFK_IdUnidadDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetalleOrdenCompra"));
		
		*/
		
			//REPORTE DINAMICO
			/*
			if(this.jInternalFrameReporteDinamicoDetalleOrdenCompra!=null) {
				this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleOrdenCompra"));
				this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleOrdenCompra"));
				this.jInternalFrameReporteDinamicoDetalleOrdenCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleOrdenCompra"));
			}
			
			//this.jButtonCerrarReporteDinamicoDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleOrdenCompra"));				
			//this.jButtonGenerarReporteDinamicoDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleOrdenCompra"));
			//this.jButtonGenerarExcelReporteDinamicoDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleOrdenCompra"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionDetalleOrdenCompra!=null) {
				this.jInternalFrameImportacionDetalleOrdenCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleOrdenCompra"));
				this.jInternalFrameImportacionDetalleOrdenCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleOrdenCompra"));
				this.jInternalFrameImportacionDetalleOrdenCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleOrdenCompra"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByDetalleOrdenCompra"));
			
			this.jButtonAbrirOrderByToolBarDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarDetalleOrdenCompra"));			
			
			if(this.jInternalFrameOrderByDetalleOrdenCompra!=null) {
				this.jInternalFrameOrderByDetalleOrdenCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleOrdenCompra"));				
			}
			*/
			
		}
		
		this.jButtonAbrirTotalesDetalleOrdenCompra.addActionListener (new ButtonActionListener(this,"AbrirTotalesDetalleOrdenCompra"));
		
		if(this.jInternalFrameTotalesDetalleOrdenCompra!=null) {
			this.jInternalFrameTotalesDetalleOrdenCompra.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetalleOrdenCompra"));
		}
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jTabbedPaneRelacionesDetalleOrdenCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleOrdenCompra"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameDetalleOrdenCompra();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormDetalleOrdenCompra.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormDetalleOrdenCompra = (JInternalFrameBase)event.getSource();
	            	
	            DetalleOrdenCompraBeanSwingJInternalFrame jInternalFrameParent=(DetalleOrdenCompraBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleOrdenCompra.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarDetalleOrdenCompraActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosDetalleOrdenCompra.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosDetalleOrdenCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosDetalleOrdenCompra.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosDetalleOrdenCompra.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleOrdenCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleOrdenCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleOrdenCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoDetalleOrdenCompra";
		inputMap = this.jButtonNuevoDetalleOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoDetalleOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleOrdenCompraActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleOrdenCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleOrdenCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleOrdenCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesDetalleOrdenCompra";
		inputMap = this.jButtonNuevoRelacionesDetalleOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesDetalleOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleOrdenCompraActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarDetalleOrdenCompra";
		inputMap = this.jButtonModificarDetalleOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarDetalleOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarDetalleOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarDetalleOrdenCompra";
		inputMap = this.jButtonActualizarDetalleOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarDetalleOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarDetalleOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarDetalleOrdenCompra";
		inputMap = this.jButtonEliminarDetalleOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarDetalleOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarDetalleOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarDetalleOrdenCompra";
		inputMap = this.jButtonCancelarDetalleOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarDetalleOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarDetalleOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarDetalleOrdenCompra";
		inputMap = this.jButtonCerrarDetalleOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarDetalleOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarDetalleOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonGuardarCambiosDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosDetalleOrdenCompra";
		inputMap = this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonGuardarCambiosDetalleOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonGuardarCambiosDetalleOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosDetalleOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosDetalleOrdenCompra.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosDetalleOrdenCompraItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesDetalleOrdenCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesDetalleOrdenCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarDetalleOrdenCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarDetalleOrdenCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralDetalleOrdenCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralDetalleOrdenCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonidDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_orden_compraDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_orden_compraDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_orden_compraDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_orden_compraDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_empresaDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_empresaDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_sucursalDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_sucursalDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_ejercicioDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_ejercicioDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_periodoDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_periodoDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_anioDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_anioDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_mesDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_mesDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_bodegaDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_bodegaDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleOrdenCompraBusqueda"));
		//jButtonid_productoDetalleOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetalleOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_productoDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"id_productoDetalleOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_productoDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_productoDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_unidadDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_unidadDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtondescripcionDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtoncantidadDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtondescuentoDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"descuentoDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtoncosto_unitarioDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"costo_unitarioDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonivaDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"ivaDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtoniva_valorDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"iva_valorDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtoncosto_totalDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"costo_totalDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtondisponibleDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"disponibleDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_novedad_productoDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_novedad_productoDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_novedad_productoDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_novedad_productoDetalleOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_estado_detalle_orden_compraDetalleOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_detalle_orden_compraDetalleOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_estado_detalle_orden_compraDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_detalle_orden_compraDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonnumero_comprobanteDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteDetalleOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonlote_clienteDetalleOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"lote_clienteDetalleOrdenCompraBusqueda"));
		
		
		this.jButtonFK_IdBodegaDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetalleOrdenCompra"));

		this.jButtonFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra"));

		this.jButtonFK_IdNovedadProductoDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdNovedadProductoDetalleOrdenCompra"));

		this.jButtonFK_IdOrdenCompraDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdOrdenCompraDetalleOrdenCompra"));

		this.jButtonFK_IdProductoDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetalleOrdenCompra"));

		this.jButtonBuscarFK_IdProductoid_productoDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"id_productoDetalleOrdenCompra"));

		this.jButtonFK_IdUnidadDetalleOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetalleOrdenCompra"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionDetalleOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionDetalleOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	/*
	public void jComboBoxTiposSeleccionarDetalleOrdenCompraActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarDetalleOrdenCompra.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}	
	*/
	
	
	public void seleccionarTodosDetalleOrdenCompra(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(DetalleOrdenCompra detalleordencompraAux:this.detalleordencompraLogic.getDetalleOrdenCompras()) {
					detalleordencompraAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleOrdenCompra detalleordencompraAux:detalleordencompras) {
					detalleordencompraAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosDetalleOrdenCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleOrdenCompra detalleordencompraAux:this.detalleordencompraLogic.getDetalleOrdenCompras()) {
						detalleordencompraAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleOrdenCompra detalleordencompraAux:detalleordencompras) {
						detalleordencompraAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(DetalleOrdenCompra detalleordencompraAux:this.detalleordencompraLogic.getDetalleOrdenCompras()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleOrdenCompra detalleordencompraAux:detalleordencompras) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleOrdenCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleOrdenCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosDetalleOrdenCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosDetalleOrdenCompra.getSelectedRows();
			
			DetalleOrdenCompra detalleordencompraLocal=new DetalleOrdenCompra();
			
			//this.seleccionarTodosDetalleOrdenCompra(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleordencompraLocal =(DetalleOrdenCompra) this.detalleordencompraLogic.getDetalleOrdenCompras().toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					detalleordencompraLocal =(DetalleOrdenCompra) this.detalleordencompras.toArray()[this.jTableDatosDetalleOrdenCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				detalleordencompraLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleOrdenCompra detalleordencompraAux:this.detalleordencompraLogic.getDetalleOrdenCompras()) {
						detalleordencompraAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleOrdenCompra detalleordencompraAux:detalleordencompras) {
						detalleordencompraAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleOrdenCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleOrdenCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleOrdenCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualDetalleOrdenCompraItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarDetalleOrdenCompraParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralDetalleOrdenCompraActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralDetalleOrdenCompra.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleOrdenCompra detalleordencompraAux:this.detalleordencompraLogic.getDetalleOrdenCompras()) {
				
						if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detalleordencompraAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD)) {
							existe=true;
							detalleordencompraAux.setcantidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							detalleordencompraAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_COSTOUNITARIO)) {
							existe=true;
							detalleordencompraAux.setcosto_unitario(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IVA)) {
							existe=true;
							detalleordencompraAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IVAVALOR)) {
							existe=true;
							detalleordencompraAux.setiva_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_COSTOTOTAL)) {
							existe=true;
							detalleordencompraAux.setcosto_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE)) {
							existe=true;
							detalleordencompraAux.setdisponible(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
							existe=true;
							detalleordencompraAux.setnumero_comprobante(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_LOTECLIENTE)) {
							existe=true;
							detalleordencompraAux.setlote_cliente(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleOrdenCompra detalleordencompraAux:detalleordencompras) {
					
						if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detalleordencompraAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD)) {
							existe=true;
							detalleordencompraAux.setcantidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							detalleordencompraAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_COSTOUNITARIO)) {
							existe=true;
							detalleordencompraAux.setcosto_unitario(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IVA)) {
							existe=true;
							detalleordencompraAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IVAVALOR)) {
							existe=true;
							detalleordencompraAux.setiva_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_COSTOTOTAL)) {
							existe=true;
							detalleordencompraAux.setcosto_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE)) {
							existe=true;
							detalleordencompraAux.setdisponible(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
							existe=true;
							detalleordencompraAux.setnumero_comprobante(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_LOTECLIENTE)) {
							existe=true;
							detalleordencompraAux.setlote_cliente(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesDetalleOrdenCompraActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioDetalleOrdenCompra=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				/*
				reporte=(Reporte)this.jComboBoxTiposAccionesDetalleOrdenCompra.getSelectedItem();
				*/
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxTiposAccionesFormularioDetalleOrdenCompra.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteDetalleOrdenCompra) {				
					conSplash=true;//false;										
					
					//this.startProcessDetalleOrdenCompra(conSplash);
				
					this.generarReporteDetalleOrdenComprasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesDetalleOrdenCompra.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxTiposAccionesFormularioDetalleOrdenCompra.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoDetalleOrdenComprasSeleccionados();
				//this.jComboBoxTiposAccionesDetalleOrdenCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleOrdenComprasSeleccionados(false);
				//this.jComboBoxTiposAccionesDetalleOrdenCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleOrdenComprasSeleccionados(true);
				//this.jComboBoxTiposAccionesDetalleOrdenCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleOrdenCompra();
				
				this.exportarDetalleOrdenComprasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesDetalleOrdenCompra.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxTiposAccionesFormularioDetalleOrdenCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionDetalleOrdenCompras();
				//this.importarDetalleOrdenCompras();
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesDetalleOrdenCompra.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxTiposAccionesFormularioDetalleOrdenCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleOrdenCompra();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelDetalleOrdenComprasSeleccionados();
				//this.jComboBoxTiposAccionesDetalleOrdenCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Detalle Orden Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessDetalleOrdenCompra();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoDetalleOrdenCompra)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyDetalleOrdenCompra(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Orden Compra",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesDetalleOrdenCompra.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxTiposAccionesFormularioDetalleOrdenCompra.setSelectedIndex(0);					
				}	
			} 			
			else if(DetalleOrdenCompraBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteDetalleOrdenCompra) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessDetalleOrdenCompra(conSplash);
					
						//this.actualizarParametrosGeneralDetalleOrdenCompra();
						
						this.generarReporteProcesoAccionDetalleOrdenComprasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							/*
							this.jComboBoxTiposAccionesDetalleOrdenCompra.setSelectedIndex(0);					
							*/
						} else {
							this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxTiposAccionesFormularioDetalleOrdenCompra.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(DetalleOrdenCompraBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Detalle Orden CompraS SELECCIONADOS?", "MANTENIMIENTO DE Detalle Orden Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessDetalleOrdenCompra();
				
						this.actualizarParametrosGeneralDetalleOrdenCompra();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.detalleordencompraReturnGeneral=detalleordencompraLogic.procesarAccionDetalleOrdenComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.detalleordencompraLogic.getDetalleOrdenCompras(),this.detalleordencompraParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarDetalleOrdenCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						/*
						this.jComboBoxTiposAccionesDetalleOrdenCompra.setSelectedIndex(0);					
						*/
					} else {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxTiposAccionesFormularioDetalleOrdenCompra.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralDetalleOrdenCompra();
					
					DetalleOrdenCompraBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarDetalleOrdenCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						/*
						this.jComboBoxTiposAccionesDetalleOrdenCompra.setSelectedIndex(0);					
						*/
					} else {
						this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxTiposAccionesFormularioDetalleOrdenCompra.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessDetalleOrdenCompra(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesDetalleOrdenCompraActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessDetalleOrdenCompra();
			
			if(this.jInternalFrameDetalleFormDetalleOrdenCompra==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<DetalleOrdenCompra> detalleordencomprasSeleccionados=new ArrayList<DetalleOrdenCompra>();		
			DetalleOrdenCompra detalleordencompra=new DetalleOrdenCompra();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingDetalleOrdenCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			/*
			reporte=(Reporte)this.jComboBoxTiposRelacionesDetalleOrdenCompra.getSelectedItem();
			*/
			
			
			
			detalleordencomprasSeleccionados=this.getDetalleOrdenComprasSeleccionados(true);
			//this.sTipoAccion;
			
			if(detalleordencomprasSeleccionados.size()==1) {
				for(DetalleOrdenCompra detalleordencompraAux:detalleordencomprasSeleccionados) {
					detalleordencompra=detalleordencompraAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessDetalleOrdenCompra();
			
      		//this.finishProcessDetalleOrdenCompra(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarDetalleOrdenCompraReturnGeneral() throws Exception {
		if(this.detalleordencompraReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.detalleordencompraReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.detalleordencompraReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.detalleordencompraReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.detalleordencompraReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.detalleordencompraReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingDetalleOrdenCompra(false);
		}
		
		if(this.detalleordencompraReturnGeneral.getConRetornoLista() || this.detalleordencompraReturnGeneral.getConRetornoObjeto()) {
			if(this.detalleordencompraReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detalleordencompraLogic.setDetalleOrdenCompras(this.detalleordencompraReturnGeneral.getDetalleOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.detalleordencompraReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detalleordencompraLogic.setDetalleOrdenCompra(this.detalleordencompraReturnGeneral.getDetalleOrdenCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingDetalleOrdenCompra(false);
		}
	}
	
	public void actualizarParametrosGeneralDetalleOrdenCompra() throws Exception {
		
		
	}
	
	public ArrayList<DetalleOrdenCompra> getDetalleOrdenComprasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<DetalleOrdenCompra> detalleordencomprasSeleccionados=new ArrayList<DetalleOrdenCompra>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioDetalleOrdenCompra) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(DetalleOrdenCompra detalleordencompraAux:detalleordencompraLogic.getDetalleOrdenCompras()) {
					if(detalleordencompraAux.getIsSelected()) {
						detalleordencomprasSeleccionados.add(detalleordencompraAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleOrdenCompra detalleordencompraAux:this.detalleordencompras) {
					if(detalleordencompraAux.getIsSelected()) {
						detalleordencomprasSeleccionados.add(detalleordencompraAux);				
					}
				}
			}
			
			if(detalleordencomprasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						detalleordencomprasSeleccionados.addAll(this.detalleordencompraLogic.getDetalleOrdenCompras());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						detalleordencomprasSeleccionados.addAll(this.detalleordencompras);				
					}
				}
			}
		} else {
			detalleordencomprasSeleccionados.add(this.detalleordencompra);
		}
		
		return detalleordencomprasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteDetalleOrdenComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalDetalleOrdenComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoDetalleOrdenComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleOrdenComprasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleOrdenComprasSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Detalle Orden Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesDetalleOrdenComprasSeleccionados() throws Exception {
		ArrayList<DetalleOrdenCompra> detalleordencomprasSeleccionados=new ArrayList<DetalleOrdenCompra>();		
		
		detalleordencomprasSeleccionados=this.getDetalleOrdenComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteDetalleOrdenCompras("Todos",detalleordencomprasSeleccionados);
		
	}	
	
	public void generarReporteNormalDetalleOrdenComprasSeleccionados() throws Exception {
		ArrayList<DetalleOrdenCompra> detalleordencomprasSeleccionados=new ArrayList<DetalleOrdenCompra>();		
		
		detalleordencomprasSeleccionados=this.getDetalleOrdenComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteDetalleOrdenCompras("Todos",detalleordencomprasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionDetalleOrdenComprasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<DetalleOrdenCompra> detalleordencomprasSeleccionados=new ArrayList<DetalleOrdenCompra>();
		
		detalleordencomprasSeleccionados=this.getDetalleOrdenComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteDetalleOrdenCompras("Todos",detalleordencomprasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoDetalleOrdenComprasSeleccionados() throws Exception {
		ArrayList<DetalleOrdenCompra> detalleordencomprasSeleccionados=new ArrayList<DetalleOrdenCompra>();		
		
		/*
		this.abrirInicializarFrameReporteDinamicoDetalleOrdenCompra();
		*/
		
		detalleordencomprasSeleccionados=this.getDetalleOrdenComprasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.abrirFrameReporteDinamicoDetalleOrdenCompra();
		*/
		
		//this.generarReporteDetalleOrdenCompras("Todos",detalleordencomprasSeleccionados ,detalleordencompraImplementable,detalleordencompraImplementableHome);
	}
	
	public void mostrarImportacionDetalleOrdenCompras() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.abrirInicializarFrameImportacionDetalleOrdenCompra();
		
		this.abrirFrameImportacionDetalleOrdenCompra();		
		*/
			
		//this.generarReporteDetalleOrdenCompras("Todos",detalleordencomprasSeleccionados ,detalleordencompraImplementable,detalleordencompraImplementableHome);
	}
	
	public void importarDetalleOrdenCompras() throws Exception {		
	
	}
	
	public void exportarDetalleOrdenComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelDetalleOrdenComprasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoDetalleOrdenComprasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlDetalleOrdenComprasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Detalle Orden Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoDetalleOrdenComprasSeleccionados() throws Exception {
		ArrayList<DetalleOrdenCompra> detalleordencomprasSeleccionados=new ArrayList<DetalleOrdenCompra>();		
		
		detalleordencomprasSeleccionados=this.getDetalleOrdenComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleordencompra."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarDetalleOrdenCompra(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(DetalleOrdenCompra detalleordencompraAux:detalleordencomprasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarDetalleOrdenCompra(detalleordencompraAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//detalleordencompraAux.setsDetalleGeneralEntityReporte(detalleordencompraAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Orden Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarDetalleOrdenCompra(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_IDBODEGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_IDPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_IDUNIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_DESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_COSTOUNITARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_IVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_IVAVALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_COSTOTOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_IDNOVEDADPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_IDESTADODETALLEORDENCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleOrdenCompraConstantesFunciones.LABEL_LOTECLIENTE;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=detalleordencompra.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getordencompra_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getbodega_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getunidad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getcantidad().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getdescuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getcosto_unitario().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getiva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getiva_valor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getcosto_total().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getdisponible().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getnovedadproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getestadodetalleordencompra_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getnumero_comprobante();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleordencompra.getlote_cliente();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelDetalleOrdenComprasSeleccionados() throws Exception {
		ArrayList<DetalleOrdenCompra> detalleordencomprasSeleccionados=new ArrayList<DetalleOrdenCompra>();		
		
		detalleordencomprasSeleccionados=this.getDetalleOrdenComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleordencompra.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("DetalleOrdenCompras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelDetalleOrdenCompra(row);				
				iRow++;
			}				
			
			for(DetalleOrdenCompra detalleordencompraAux:detalleordencomprasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelDetalleOrdenCompra(detalleordencompraAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Orden Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlDetalleOrdenComprasSeleccionados() throws Exception {
		ArrayList<DetalleOrdenCompra> detalleordencomprasSeleccionados=new ArrayList<DetalleOrdenCompra>();		
		
		detalleordencomprasSeleccionados=this.getDetalleOrdenComprasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleordencompra.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("detalleordencompras");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("detalleordencompra");
			//elementRoot.appendChild(element);
		
			for(DetalleOrdenCompra detalleordencompraAux:detalleordencomprasSeleccionados) {
				element = document.createElement("detalleordencompra");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlDetalleOrdenCompra(detalleordencompraAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Orden Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelDetalleOrdenCompra(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDBODEGA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDUNIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_DESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_COSTOUNITARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IVA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IVAVALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_COSTOTOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDNOVEDADPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_IDESTADODETALLEORDENCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleOrdenCompraConstantesFunciones.LABEL_LOTECLIENTE);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getordencompra_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getbodega_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getunidad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getcantidad());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getdescuento());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getcosto_unitario());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getiva());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getiva_valor());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getcosto_total());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getdisponible());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getnovedadproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getestadodetalleordencompra_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getnumero_comprobante());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleordencompra.getlote_cliente());				
	}
	
	public void setFilaDatosExportarXmlDetalleOrdenCompra(DetalleOrdenCompra detalleordencompra,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(DetalleOrdenCompraConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(detalleordencompra.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(DetalleOrdenCompraConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(detalleordencompra.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementordencompra_descripcion = document.createElement(DetalleOrdenCompraConstantesFunciones.IDORDENCOMPRA);
		elementordencompra_descripcion.appendChild(document.createTextNode(detalleordencompra.getordencompra_descripcion()));
		element.appendChild(elementordencompra_descripcion);

		Element elementempresa_descripcion = document.createElement(DetalleOrdenCompraConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(detalleordencompra.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(DetalleOrdenCompraConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(detalleordencompra.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(DetalleOrdenCompraConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(detalleordencompra.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(DetalleOrdenCompraConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(detalleordencompra.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(DetalleOrdenCompraConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(detalleordencompra.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(DetalleOrdenCompraConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(detalleordencompra.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementbodega_descripcion = document.createElement(DetalleOrdenCompraConstantesFunciones.IDBODEGA);
		elementbodega_descripcion.appendChild(document.createTextNode(detalleordencompra.getbodega_descripcion()));
		element.appendChild(elementbodega_descripcion);

		Element elementproducto_descripcion = document.createElement(DetalleOrdenCompraConstantesFunciones.IDPRODUCTO);
		elementproducto_descripcion.appendChild(document.createTextNode(detalleordencompra.getproducto_descripcion()));
		element.appendChild(elementproducto_descripcion);

		Element elementunidad_descripcion = document.createElement(DetalleOrdenCompraConstantesFunciones.IDUNIDAD);
		elementunidad_descripcion.appendChild(document.createTextNode(detalleordencompra.getunidad_descripcion()));
		element.appendChild(elementunidad_descripcion);

		Element elementdescripcion = document.createElement(DetalleOrdenCompraConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(detalleordencompra.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementcantidad = document.createElement(DetalleOrdenCompraConstantesFunciones.CANTIDAD);
		elementcantidad.appendChild(document.createTextNode(detalleordencompra.getcantidad().toString().trim()));
		element.appendChild(elementcantidad);

		Element elementdescuento = document.createElement(DetalleOrdenCompraConstantesFunciones.DESCUENTO);
		elementdescuento.appendChild(document.createTextNode(detalleordencompra.getdescuento().toString().trim()));
		element.appendChild(elementdescuento);

		Element elementcosto_unitario = document.createElement(DetalleOrdenCompraConstantesFunciones.COSTOUNITARIO);
		elementcosto_unitario.appendChild(document.createTextNode(detalleordencompra.getcosto_unitario().toString().trim()));
		element.appendChild(elementcosto_unitario);

		Element elementiva = document.createElement(DetalleOrdenCompraConstantesFunciones.IVA);
		elementiva.appendChild(document.createTextNode(detalleordencompra.getiva().toString().trim()));
		element.appendChild(elementiva);

		Element elementiva_valor = document.createElement(DetalleOrdenCompraConstantesFunciones.IVAVALOR);
		elementiva_valor.appendChild(document.createTextNode(detalleordencompra.getiva_valor().toString().trim()));
		element.appendChild(elementiva_valor);

		Element elementcosto_total = document.createElement(DetalleOrdenCompraConstantesFunciones.COSTOTOTAL);
		elementcosto_total.appendChild(document.createTextNode(detalleordencompra.getcosto_total().toString().trim()));
		element.appendChild(elementcosto_total);

		Element elementdisponible = document.createElement(DetalleOrdenCompraConstantesFunciones.DISPONIBLE);
		elementdisponible.appendChild(document.createTextNode(detalleordencompra.getdisponible().toString().trim()));
		element.appendChild(elementdisponible);

		Element elementnovedadproducto_descripcion = document.createElement(DetalleOrdenCompraConstantesFunciones.IDNOVEDADPRODUCTO);
		elementnovedadproducto_descripcion.appendChild(document.createTextNode(detalleordencompra.getnovedadproducto_descripcion()));
		element.appendChild(elementnovedadproducto_descripcion);

		Element elementestadodetalleordencompra_descripcion = document.createElement(DetalleOrdenCompraConstantesFunciones.IDESTADODETALLEORDENCOMPRA);
		elementestadodetalleordencompra_descripcion.appendChild(document.createTextNode(detalleordencompra.getestadodetalleordencompra_descripcion()));
		element.appendChild(elementestadodetalleordencompra_descripcion);

		Element elementnumero_comprobante = document.createElement(DetalleOrdenCompraConstantesFunciones.NUMEROCOMPROBANTE);
		elementnumero_comprobante.appendChild(document.createTextNode(detalleordencompra.getnumero_comprobante().trim()));
		element.appendChild(elementnumero_comprobante);

		Element elementlote_cliente = document.createElement(DetalleOrdenCompraConstantesFunciones.LOTECLIENTE);
		elementlote_cliente.appendChild(document.createTextNode(detalleordencompra.getlote_cliente().trim()));
		element.appendChild(elementlote_cliente);
	}
	
	public void generarReporteGroupGenericoDetalleOrdenComprasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<DetalleOrdenCompra> detalleordencomprasSeleccionados=new ArrayList<DetalleOrdenCompra>();
		
		detalleordencomprasSeleccionados=this.getDetalleOrdenComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoDetalleOrdenCompra(detalleordencomprasSeleccionados);
		
		this.generarReporteDetalleOrdenCompras("Todos",detalleordencomprasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoDetalleOrdenCompra(ArrayList<DetalleOrdenCompra> detalleordencomprasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(DetalleOrdenCompra detalleordencompraAux:detalleordencomprasSeleccionados) {
				detalleordencompraAux.setsDetalleGeneralEntityReporte(detalleordencompraAux.toString());
			
				if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getordencompra_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IDBODEGA)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getbodega_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IDPRODUCTO)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IDUNIDAD)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getunidad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_CANTIDAD)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getcantidad().toString());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_DISPONIBLE)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getdisponible().toString());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IDNOVEDADPRODUCTO)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getnovedadproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_IDESTADODETALLEORDENCOMPRA)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getestadodetalleordencompra_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getnumero_comprobante());
				}
				 else if(sTipoSeleccionar.equals(DetalleOrdenCompraConstantesFunciones.LABEL_LOTECLIENTE)) {
					existe=true;
					detalleordencompraAux.setsDescripcionGeneralEntityReporte1(detalleordencompraAux.getlote_cliente());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesDetalleOrdenCompra(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoDetalleOrdenCompra=true;
				this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=true;
				this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra=true;
			}
			
			this.isVisibilidadCeldaModificarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaActualizarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaEliminarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaCancelarDetalleOrdenCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleOrdenCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleOrdenCompra=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoDetalleOrdenCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra=false;
			this.isVisibilidadCeldaModificarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaActualizarDetalleOrdenCompra=true;
			this.isVisibilidadCeldaEliminarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaCancelarDetalleOrdenCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleOrdenCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleOrdenCompra=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoDetalleOrdenCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra=false;
			this.isVisibilidadCeldaModificarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaActualizarDetalleOrdenCompra=true;
			this.isVisibilidadCeldaEliminarDetalleOrdenCompra=true;
			this.isVisibilidadCeldaCancelarDetalleOrdenCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleOrdenCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleOrdenCompra=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoDetalleOrdenCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra=false;
			this.isVisibilidadCeldaModificarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaActualizarDetalleOrdenCompra=true;
			this.isVisibilidadCeldaEliminarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaCancelarDetalleOrdenCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleOrdenCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleOrdenCompra=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoDetalleOrdenCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra=true;
			this.isVisibilidadCeldaModificarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaActualizarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaEliminarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaCancelarDetalleOrdenCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleOrdenCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleOrdenCompra=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoDetalleOrdenCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra=false;
			this.isVisibilidadCeldaActualizarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaEliminarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaCancelarDetalleOrdenCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleOrdenCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleOrdenCompra=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoDetalleOrdenCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra=false;
			this.isVisibilidadCeldaModificarDetalleOrdenCompra=true;
			this.isVisibilidadCeldaActualizarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaEliminarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaCancelarDetalleOrdenCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleOrdenCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleOrdenCompra=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(DetalleOrdenCompraJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoDetalleOrdenCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra=true;
		} else {
			this.actualizarEstadoPanelsDetalleOrdenCompra(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarDetalleOrdenCompra=false;
			//this.isVisibilidadCeldaVerFormDetalleOrdenCompra=false;
			this.isVisibilidadCeldaDuplicarDetalleOrdenCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!detalleordencompraSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=false;
		} else {
			this.isVisibilidadCeldaNuevoDetalleOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleOrdenCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(detalleordencompraSessionBean.getEsGuardarRelacionado()) {
			if(!detalleordencompraSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=false;												
			}
			
			this.jButtonCerrarDetalleOrdenCompra.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleOrdenCompra=false;
		}
		
		if(!this.permiteMantenimiento(this.detalleordencompra)) {
			this.isVisibilidadCeldaActualizarDetalleOrdenCompra=false;
			this.isVisibilidadCeldaEliminarDetalleOrdenCompra=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleOrdenCompra() {
	}
	
	public void actualizarEstadoPanelsDetalleOrdenCompra(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionDetalleOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionDetalleOrdenCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleOrdenCompra!=null) {
				this.jTabbedPaneBusquedasDetalleOrdenCompra.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosDetalleOrdenCompra!=null) {
				this.jScrollPanelDatosDetalleOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleOrdenCompra!=null) {
				this.jPanelPaginacionDetalleOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleOrdenCompra!=null) {
				this.jPanelParametrosReportesDetalleOrdenCompra.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionDetalleOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionDetalleOrdenCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleOrdenCompra!=null) {
				this.jTabbedPaneBusquedasDetalleOrdenCompra.setVisible(false);			
			}
			*/
			
			
			if(this.jScrollPanelDatosDetalleOrdenCompra!=null) {
				this.jScrollPanelDatosDetalleOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleOrdenCompra!=null) {
				this.jPanelPaginacionDetalleOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleOrdenCompra!=null) {
				this.jPanelParametrosReportesDetalleOrdenCompra.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionDetalleOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionDetalleOrdenCompra.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleOrdenCompra!=null) {
				this.jTabbedPaneBusquedasDetalleOrdenCompra.setVisible(false);			
			}
			*/
			
			if(this.jScrollPanelDatosDetalleOrdenCompra!=null) {
				this.jScrollPanelDatosDetalleOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleOrdenCompra!=null) {
				this.jPanelPaginacionDetalleOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleOrdenCompra!=null) {
				this.jPanelParametrosReportesDetalleOrdenCompra.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionDetalleOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionDetalleOrdenCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleOrdenCompra!=null) {
				this.jTabbedPaneBusquedasDetalleOrdenCompra.setVisible(false);			
			}
			*/
			
			if(this.jScrollPanelDatosDetalleOrdenCompra!=null) {
				this.jScrollPanelDatosDetalleOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleOrdenCompra!=null) {
				this.jPanelPaginacionDetalleOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleOrdenCompra!=null) {
				this.jPanelParametrosReportesDetalleOrdenCompra.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionDetalleOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionDetalleOrdenCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleOrdenCompra!=null) {
				this.jTabbedPaneBusquedasDetalleOrdenCompra.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosDetalleOrdenCompra!=null) {
				this.jScrollPanelDatosDetalleOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleOrdenCompra!=null) {
				this.jPanelPaginacionDetalleOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleOrdenCompra!=null) {
				this.jPanelParametrosReportesDetalleOrdenCompra.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionDetalleOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionDetalleOrdenCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleOrdenCompra!=null) {
				this.jTabbedPaneBusquedasDetalleOrdenCompra.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosDetalleOrdenCompra!=null) {
				this.jScrollPanelDatosDetalleOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleOrdenCompra!=null) {
				this.jPanelPaginacionDetalleOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleOrdenCompra!=null) {
				this.jPanelParametrosReportesDetalleOrdenCompra.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionDetalleOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionDetalleOrdenCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleOrdenCompra!=null) {
				this.jTabbedPaneBusquedasDetalleOrdenCompra.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosDetalleOrdenCompra!=null) {
				this.jScrollPanelDatosDetalleOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleOrdenCompra!=null) {
				this.jPanelPaginacionDetalleOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleOrdenCompra!=null) {
				this.jPanelParametrosReportesDetalleOrdenCompra.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				/*
				if(this.jTabbedPaneBusquedasDetalleOrdenCompra!=null) {
					this.jTabbedPaneBusquedasDetalleOrdenCompra.setVisible(false);				
				}
				*/
			}
			
			if(this.jPanelParametrosReportesDetalleOrdenCompra!=null) {
				this.jPanelParametrosReportesDetalleOrdenCompra.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.detalleordencompraSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleOrdenCompra!=null) {
				this.jTabbedPaneBusquedasDetalleOrdenCompra.setVisible(true);			
			}
			*/
			if(this.jPanelParametrosReportesDetalleOrdenCompra!=null) {
				this.jPanelParametrosReportesDetalleOrdenCompra.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaOrdenCompra(Boolean isParaOrdenCompra){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaOrdenCompraNegation=!isParaOrdenCompra;

			this.isVisibilidadFK_IdBodega=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdBodegaDetalleOrdenCompra);}

			this.isVisibilidadFK_IdEstadoDetalleOrdenCompra=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdNovedadProducto=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdNovedadProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdNovedadProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaOrdenCompra;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdProducto=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdUnidad=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdUnidadDetalleOrdenCompra);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdBodega=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdBodegaDetalleOrdenCompra);}

			this.isVisibilidadFK_IdEstadoDetalleOrdenCompra=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdNovedadProducto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdNovedadProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdNovedadProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdProducto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdUnidad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdUnidadDetalleOrdenCompra);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdBodega=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdBodegaDetalleOrdenCompra);}

			this.isVisibilidadFK_IdEstadoDetalleOrdenCompra=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdNovedadProducto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdNovedadProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdNovedadProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdProducto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdUnidad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdUnidadDetalleOrdenCompra);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdBodega=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdBodegaDetalleOrdenCompra);}

			this.isVisibilidadFK_IdEstadoDetalleOrdenCompra=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdNovedadProducto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdNovedadProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdNovedadProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdProducto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdUnidad=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdUnidadDetalleOrdenCompra);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdBodega=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdBodegaDetalleOrdenCompra);}

			this.isVisibilidadFK_IdEstadoDetalleOrdenCompra=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdNovedadProducto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdNovedadProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdNovedadProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdProducto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdUnidad=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdUnidadDetalleOrdenCompra);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdBodega=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdBodegaDetalleOrdenCompra);}

			this.isVisibilidadFK_IdEstadoDetalleOrdenCompra=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdNovedadProducto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdNovedadProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdNovedadProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdProducto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdUnidad=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdUnidadDetalleOrdenCompra);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdBodega=isParaMesNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdBodegaDetalleOrdenCompra);}

			this.isVisibilidadFK_IdEstadoDetalleOrdenCompra=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdNovedadProducto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdNovedadProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdNovedadProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaMesNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdProducto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdUnidad=isParaMesNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdUnidadDetalleOrdenCompra);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaBodega(Boolean isParaBodega){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaNegation=!isParaBodega;

			this.isVisibilidadFK_IdBodega=isParaBodega;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdBodegaDetalleOrdenCompra);}

			this.isVisibilidadFK_IdEstadoDetalleOrdenCompra=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdNovedadProducto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdNovedadProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdNovedadProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdProducto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdUnidad=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdUnidadDetalleOrdenCompra);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaProducto(Boolean isParaProducto){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaProductoNegation=!isParaProducto;

			this.isVisibilidadFK_IdBodega=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdBodegaDetalleOrdenCompra);}

			this.isVisibilidadFK_IdEstadoDetalleOrdenCompra=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdNovedadProducto=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdNovedadProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdNovedadProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdProducto=isParaProducto;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdUnidad=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdUnidadDetalleOrdenCompra);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaUnidad(Boolean isParaUnidad){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaUnidadNegation=!isParaUnidad;

			this.isVisibilidadFK_IdBodega=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdBodegaDetalleOrdenCompra);}

			this.isVisibilidadFK_IdEstadoDetalleOrdenCompra=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdNovedadProducto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdNovedadProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdNovedadProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdProducto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdUnidad=isParaUnidad;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdUnidadDetalleOrdenCompra);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaNovedadProducto(Boolean isParaNovedadProducto){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaNovedadProductoNegation=!isParaNovedadProducto;

			this.isVisibilidadFK_IdBodega=isParaNovedadProductoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdBodegaDetalleOrdenCompra);}

			this.isVisibilidadFK_IdEstadoDetalleOrdenCompra=isParaNovedadProductoNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdNovedadProducto=isParaNovedadProducto;
			if(!this.isVisibilidadFK_IdNovedadProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdNovedadProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaNovedadProductoNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdProducto=isParaNovedadProductoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdUnidad=isParaNovedadProductoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdUnidadDetalleOrdenCompra);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaEstadoDetalleOrdenCompra(Boolean isParaEstadoDetalleOrdenCompra){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoDetalleOrdenCompraNegation=!isParaEstadoDetalleOrdenCompra;

			this.isVisibilidadFK_IdBodega=isParaEstadoDetalleOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdBodegaDetalleOrdenCompra);}

			this.isVisibilidadFK_IdEstadoDetalleOrdenCompra=isParaEstadoDetalleOrdenCompra;
			if(!this.isVisibilidadFK_IdEstadoDetalleOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdNovedadProducto=isParaEstadoDetalleOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdNovedadProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdNovedadProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaEstadoDetalleOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdOrdenCompraDetalleOrdenCompra);}

			this.isVisibilidadFK_IdProducto=isParaEstadoDetalleOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdProductoDetalleOrdenCompra);}

			this.isVisibilidadFK_IdUnidad=isParaEstadoDetalleOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(jPanelFK_IdUnidadDetalleOrdenCompra);}
		}
		*/
	}
	
	
	
	

	public String registrarSesionDetalleOrdenCompraParaBusquedaProductos() throws Exception {
		Boolean isPaginaPopupProducto=false;

		try {

			if(detalleordencompraSessionBean==null) {
				detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}

			if(productoSessionBean==null) {
				productoSessionBean=new ProductoSessionBean();
			}

			productoSessionBean.setsPathNavegacionActual(detalleordencompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoConstantesFunciones.SCLASSWEBTITULO);
			productoSessionBean.setisPermiteRecargarInformacion(false);
			productoSessionBean.setisPaginaPopup(true);
			isPaginaPopupProducto=productoSessionBean.getisPaginaPopup();
			productoSessionBean.setisPaginaPopup(false);
			productoSessionBean.setEstaModoBusqueda(true);
			productoSessionBean.setsFuncionBusquedaRapida("window.opener.detalleordencompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_producto(TO_REPLACE);");
			productoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProducto(true);
			productoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProducto(DetalleOrdenCompraConstantesFunciones.SNOMBREOPCION);
			//productoSessionBean.setisBusquedaDesdeForeignKeySesionDetalleOrdenCompra(true);
			//productoSessionBean.setlidDetalleOrdenCompraActual(this.idDetalleOrdenCompraActual);

			detalleordencompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleOrdenCompra(true);
			detalleordencompraSessionBean.setlIdDetalleOrdenCompraActualForeignKey(this.idDetalleOrdenCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//DetalleOrdenCompraSessionBean detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
		
		if(this.detalleordencompraSessionBean==null) {
			this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
		}
		
		this.detalleordencompraSessionBean.setsUltimaBusquedaDetalleOrdenCompra(this.getsAccionBusqueda());
		this.detalleordencompraSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.detalleordencompraSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
			detalleordencompraSessionBean.setid_bodega(this.getid_bodegaFK_IdBodega());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			detalleordencompraSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			detalleordencompraSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoDetalleOrdenCompra")) {
			detalleordencompraSessionBean.setid_estado_detalle_orden_compra(this.getid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdNovedadProducto")) {
			detalleordencompraSessionBean.setid_novedad_producto(this.getid_novedad_productoFK_IdNovedadProducto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdOrdenCompra")) {
			detalleordencompraSessionBean.setid_orden_compra(this.getid_orden_compraFK_IdOrdenCompra());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			detalleordencompraSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
			detalleordencompraSessionBean.setid_producto(this.getid_productoFK_IdProducto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			detalleordencompraSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
			detalleordencompraSessionBean.setid_unidad(this.getid_unidadFK_IdUnidad());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//DetalleOrdenCompraSessionBean detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
		
		if(this.detalleordencompraSessionBean==null) {
			this.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
		}
		
		if(this.detalleordencompraSessionBean.getsUltimaBusquedaDetalleOrdenCompra()!=null&&!this.detalleordencompraSessionBean.getsUltimaBusquedaDetalleOrdenCompra().equals("")) {
			this.setsAccionBusqueda(detalleordencompraSessionBean.getsUltimaBusquedaDetalleOrdenCompra());
			this.setiNumeroPaginacion(detalleordencompraSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(detalleordencompraSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
				this.setid_bodegaFK_IdBodega(detalleordencompraSessionBean.getid_bodega());
				detalleordencompraSessionBean.setid_bodega(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(detalleordencompraSessionBean.getid_ejercicio());
				detalleordencompraSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(detalleordencompraSessionBean.getid_empresa());
				detalleordencompraSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoDetalleOrdenCompra")) {
				this.setid_estado_detalle_orden_compraFK_IdEstadoDetalleOrdenCompra(detalleordencompraSessionBean.getid_estado_detalle_orden_compra());
				detalleordencompraSessionBean.setid_estado_detalle_orden_compra(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdNovedadProducto")) {
				this.setid_novedad_productoFK_IdNovedadProducto(detalleordencompraSessionBean.getid_novedad_producto());
				detalleordencompraSessionBean.setid_novedad_producto(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdOrdenCompra")) {
				this.setid_orden_compraFK_IdOrdenCompra(detalleordencompraSessionBean.getid_orden_compra());
				detalleordencompraSessionBean.setid_orden_compra(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(detalleordencompraSessionBean.getid_periodo());
				detalleordencompraSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
				this.setid_productoFK_IdProducto(detalleordencompraSessionBean.getid_producto());
				detalleordencompraSessionBean.setid_producto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(detalleordencompraSessionBean.getid_sucursal());
				detalleordencompraSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
				this.setid_unidadFK_IdUnidad(detalleordencompraSessionBean.getid_unidad());
				detalleordencompraSessionBean.setid_unidad(-1L);
			}
		}
		
		this.detalleordencompraSessionBean.setsUltimaBusquedaDetalleOrdenCompra("");
		this.detalleordencompraSessionBean.setiNumeroPaginacion(DetalleOrdenCompraConstantesFunciones.INUMEROPAGINACION);
		this.detalleordencompraSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioDetalleOrdenCompra() {
		this.updateBorderResaltarBusquedasFormularioDetalleOrdenCompra();
		this.updateVisibilidadBusquedasFormularioDetalleOrdenCompra();
		this.updateHabilitarBusquedasFormularioDetalleOrdenCompra();
	}
	
	public void updateBorderResaltarBusquedasFormularioDetalleOrdenCompra() {					
	//BYDAN_BUSQUEDAS
	/*	
	int index=0;
		
	if(this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponents().length>0) {
	

		if(this.detalleordencompraConstantesFunciones.resaltarFK_IdBodegaDetalleOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdBodegaDetalleOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
				jPanel.setBorder(this.detalleordencompraConstantesFunciones.resaltarFK_IdBodegaDetalleOrdenCompra);
			}
		}

		if(this.detalleordencompraConstantesFunciones.resaltarFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
				jPanel.setBorder(this.detalleordencompraConstantesFunciones.resaltarFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);
			}
		}

		if(this.detalleordencompraConstantesFunciones.resaltarFK_IdNovedadProductoDetalleOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdNovedadProductoDetalleOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
				jPanel.setBorder(this.detalleordencompraConstantesFunciones.resaltarFK_IdNovedadProductoDetalleOrdenCompra);
			}
		}

		if(this.detalleordencompraConstantesFunciones.resaltarFK_IdOrdenCompraDetalleOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraDetalleOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
				jPanel.setBorder(this.detalleordencompraConstantesFunciones.resaltarFK_IdOrdenCompraDetalleOrdenCompra);
			}
		}

		if(this.detalleordencompraConstantesFunciones.resaltarFK_IdProductoDetalleOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdProductoDetalleOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
				jPanel.setBorder(this.detalleordencompraConstantesFunciones.resaltarFK_IdProductoDetalleOrdenCompra);
			}
		}

		if(this.detalleordencompraConstantesFunciones.resaltarFK_IdUnidadDetalleOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdUnidadDetalleOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
				jPanel.setBorder(this.detalleordencompraConstantesFunciones.resaltarFK_IdUnidadDetalleOrdenCompra);
			}
		}
	}	
	*/
	}
	
	public void updateVisibilidadBusquedasFormularioDetalleOrdenCompra() {
	//BYDAN_BUSQUEDAS
	/*
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdBodegaDetalleOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleordencompraConstantesFunciones.mostrarFK_IdBodegaDetalleOrdenCompra);
			if(!this.detalleordencompraConstantesFunciones.mostrarFK_IdBodegaDetalleOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleordencompraConstantesFunciones.mostrarFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);
			if(!this.detalleordencompraConstantesFunciones.mostrarFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdNovedadProductoDetalleOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleordencompraConstantesFunciones.mostrarFK_IdNovedadProductoDetalleOrdenCompra);
			if(!this.detalleordencompraConstantesFunciones.mostrarFK_IdNovedadProductoDetalleOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraDetalleOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleordencompraConstantesFunciones.mostrarFK_IdOrdenCompraDetalleOrdenCompra);
			if(!this.detalleordencompraConstantesFunciones.mostrarFK_IdOrdenCompraDetalleOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdProductoDetalleOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleordencompraConstantesFunciones.mostrarFK_IdProductoDetalleOrdenCompra);
			if(!this.detalleordencompraConstantesFunciones.mostrarFK_IdProductoDetalleOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdUnidadDetalleOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleordencompraConstantesFunciones.mostrarFK_IdUnidadDetalleOrdenCompra);
			if(!this.detalleordencompraConstantesFunciones.mostrarFK_IdUnidadDetalleOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasDetalleOrdenCompra.remove(index);
			}
	}	
	*/
	}
	
	public void updateHabilitarBusquedasFormularioDetalleOrdenCompra() {
	/*
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdBodegaDetalleOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleordencompraConstantesFunciones.activarFK_IdBodegaDetalleOrdenCompra);
				this.jTabbedPaneBusquedasDetalleOrdenCompra.setEnabledAt(index,this.detalleordencompraConstantesFunciones.activarFK_IdBodegaDetalleOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleordencompraConstantesFunciones.activarFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);
				this.jTabbedPaneBusquedasDetalleOrdenCompra.setEnabledAt(index,this.detalleordencompraConstantesFunciones.activarFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdNovedadProductoDetalleOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleordencompraConstantesFunciones.activarFK_IdNovedadProductoDetalleOrdenCompra);
				this.jTabbedPaneBusquedasDetalleOrdenCompra.setEnabledAt(index,this.detalleordencompraConstantesFunciones.activarFK_IdNovedadProductoDetalleOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraDetalleOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleordencompraConstantesFunciones.activarFK_IdOrdenCompraDetalleOrdenCompra);
				this.jTabbedPaneBusquedasDetalleOrdenCompra.setEnabledAt(index,this.detalleordencompraConstantesFunciones.activarFK_IdOrdenCompraDetalleOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdProductoDetalleOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleordencompraConstantesFunciones.activarFK_IdProductoDetalleOrdenCompra);
				this.jTabbedPaneBusquedasDetalleOrdenCompra.setEnabledAt(index,this.detalleordencompraConstantesFunciones.activarFK_IdProductoDetalleOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdUnidadDetalleOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleordencompraConstantesFunciones.activarFK_IdUnidadDetalleOrdenCompra);
				this.jTabbedPaneBusquedasDetalleOrdenCompra.setEnabledAt(index,this.detalleordencompraConstantesFunciones.activarFK_IdUnidadDetalleOrdenCompra);
			}
		}	
	*/
	}
	
	
	public void resaltarPanelBusquedaDetalleOrdenCompra(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		/*
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdBodega")) {
			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdBodegaDetalleOrdenCompra);

			this.jTabbedPaneBusquedasDetalleOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);

			this.detalleordencompraConstantesFunciones.setResaltarFK_IdBodegaDetalleOrdenCompra(resaltar);

			jPanel.setBorder(this.detalleordencompraConstantesFunciones.resaltarFK_IdBodegaDetalleOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoDetalleOrdenCompra")) {
			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);

			this.jTabbedPaneBusquedasDetalleOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);

			this.detalleordencompraConstantesFunciones.setResaltarFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra(resaltar);

			jPanel.setBorder(this.detalleordencompraConstantesFunciones.resaltarFK_IdEstadoDetalleOrdenCompraDetalleOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdNovedadProducto")) {
			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdNovedadProductoDetalleOrdenCompra);

			this.jTabbedPaneBusquedasDetalleOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);

			this.detalleordencompraConstantesFunciones.setResaltarFK_IdNovedadProductoDetalleOrdenCompra(resaltar);

			jPanel.setBorder(this.detalleordencompraConstantesFunciones.resaltarFK_IdNovedadProductoDetalleOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdOrdenCompra")) {
			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraDetalleOrdenCompra);

			this.jTabbedPaneBusquedasDetalleOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);

			this.detalleordencompraConstantesFunciones.setResaltarFK_IdOrdenCompraDetalleOrdenCompra(resaltar);

			jPanel.setBorder(this.detalleordencompraConstantesFunciones.resaltarFK_IdOrdenCompraDetalleOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdProducto")) {
			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdProductoDetalleOrdenCompra);

			this.jTabbedPaneBusquedasDetalleOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);

			this.detalleordencompraConstantesFunciones.setResaltarFK_IdProductoDetalleOrdenCompra(resaltar);

			jPanel.setBorder(this.detalleordencompraConstantesFunciones.resaltarFK_IdProductoDetalleOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdUnidad")) {
			index= this.jTabbedPaneBusquedasDetalleOrdenCompra.indexOfComponent(this.jPanelFK_IdUnidadDetalleOrdenCompra);

			this.jTabbedPaneBusquedasDetalleOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleOrdenCompra.getComponent(index);

			this.detalleordencompraConstantesFunciones.setResaltarFK_IdUnidadDetalleOrdenCompra(resaltar);

			jPanel.setBorder(this.detalleordencompraConstantesFunciones.resaltarFK_IdUnidadDetalleOrdenCompra);
			existe=true;
		}
		*/

		if(existe) {
			/*
			this.jTtoolBarDetalleOrdenCompra.setBorder(resaltar);
			*/
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioDetalleOrdenCompra() throws Exception {

		if(this.jInternalFrameDetalleFormDetalleOrdenCompra==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioDetalleOrdenCompra();
		this.updateVisibilidadResaltarControlesFormularioDetalleOrdenCompra();
		this.updateHabilitarResaltarControlesFormularioDetalleOrdenCompra();
		
	}
	
	public void updateBorderResaltarControlesFormularioDetalleOrdenCompra() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.detalleordencompraConstantesFunciones.resaltaridDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelidDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltaridDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarid_orden_compraDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_orden_compraDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarid_orden_compraDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarid_empresaDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_empresaDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarid_empresaDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarid_sucursalDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_sucursalDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarid_sucursalDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarid_ejercicioDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarid_ejercicioDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarid_periodoDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarid_periodoDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarid_anioDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_anioDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarid_anioDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarid_mesDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_mesDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarid_mesDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarid_bodegaDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarid_bodegaDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarid_productoDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarid_productoDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarid_unidadDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_unidadDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarid_unidadDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltardescripcionDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextAreadescripcionDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltardescripcionDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarcantidadDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcantidadDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarcantidadDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltardescuentoDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFielddescuentoDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltardescuentoDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarcosto_unitarioDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_unitarioDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarcosto_unitarioDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarivaDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldivaDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarivaDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltariva_valorDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldiva_valorDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltariva_valorDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarcosto_totalDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_totalDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarcosto_totalDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltardisponibleDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFielddisponibleDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltardisponibleDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarid_novedad_productoDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_novedad_productoDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarid_novedad_productoDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarid_estado_detalle_orden_compraDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarid_estado_detalle_orden_compraDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarnumero_comprobanteDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldnumero_comprobanteDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarnumero_comprobanteDetalleOrdenCompra);}
		if(this.detalleordencompraConstantesFunciones.resaltarlote_clienteDetalleOrdenCompra!=null && this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldlote_clienteDetalleOrdenCompra.setBorder(this.detalleordencompraConstantesFunciones.resaltarlote_clienteDetalleOrdenCompra);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioDetalleOrdenCompra() throws Exception {		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
	
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelidDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostraridDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelidDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostraridDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_orden_compraDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_orden_compraDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelid_orden_compraDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_orden_compraDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_empresaDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_empresaDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelid_empresaDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_empresaDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_sucursalDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_sucursalDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelid_sucursalDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_sucursalDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_ejercicioDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelid_ejercicioDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_ejercicioDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_periodoDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelid_periodoDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_periodoDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_anioDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_anioDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelid_anioDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_anioDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_mesDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_mesDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelid_mesDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_mesDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_bodegaDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelid_bodegaDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_bodegaDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_productoDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelid_productoDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_productoDetalleOrdenCompra);
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_productoDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_productoDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_unidadDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_unidadDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelid_unidadDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_unidadDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextAreadescripcionDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrardescripcionDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPaneldescripcionDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrardescripcionDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcantidadDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarcantidadDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelcantidadDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarcantidadDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFielddescuentoDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrardescuentoDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPaneldescuentoDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrardescuentoDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_unitarioDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarcosto_unitarioDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelcosto_unitarioDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarcosto_unitarioDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldivaDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarivaDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelivaDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarivaDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldiva_valorDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrariva_valorDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPaneliva_valorDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrariva_valorDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_totalDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarcosto_totalDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelcosto_totalDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarcosto_totalDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFielddisponibleDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrardisponibleDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPaneldisponibleDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrardisponibleDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_novedad_productoDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_novedad_productoDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelid_novedad_productoDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_novedad_productoDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_estado_detalle_orden_compraDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelid_estado_detalle_orden_compraDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarid_estado_detalle_orden_compraDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldnumero_comprobanteDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarnumero_comprobanteDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanelnumero_comprobanteDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarnumero_comprobanteDetalleOrdenCompra);
		//this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldlote_clienteDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarlote_clienteDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jPanellote_clienteDetalleOrdenCompra.setVisible(this.detalleordencompraConstantesFunciones.mostrarlote_clienteDetalleOrdenCompra);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioDetalleOrdenCompra() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleOrdenCompra!=null) {
	
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jLabelidDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activaridDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_orden_compraDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarid_orden_compraDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_empresaDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarid_empresaDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_sucursalDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarid_sucursalDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_ejercicioDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarid_ejercicioDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_periodoDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarid_periodoDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_anioDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarid_anioDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_mesDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarid_mesDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_bodegaDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarid_bodegaDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_productoDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarid_productoDetalleOrdenCompra);
			this.jInternalFrameDetalleFormDetalleOrdenCompra.jButtonid_productoDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarid_productoDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_unidadDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarid_unidadDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextAreadescripcionDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activardescripcionDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcantidadDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarcantidadDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFielddescuentoDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activardescuentoDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_unitarioDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarcosto_unitarioDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldivaDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarivaDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldiva_valorDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activariva_valorDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldcosto_totalDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarcosto_totalDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFielddisponibleDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activardisponibleDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_novedad_productoDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarid_novedad_productoDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jComboBoxid_estado_detalle_orden_compraDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarid_estado_detalle_orden_compraDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldnumero_comprobanteDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarnumero_comprobanteDetalleOrdenCompra);
		this.jInternalFrameDetalleFormDetalleOrdenCompra.jTextFieldlote_clienteDetalleOrdenCompra.setEnabled(this.detalleordencompraConstantesFunciones.activarlote_clienteDetalleOrdenCompra);
		}
	}
	
		
}