/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.inventario.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.inventario.util.ProductoEstadisticaConstantesFunciones;
import com.bydan.erp.inventario.util.ProductoEstadisticaParameterReturnGeneral;
//import com.bydan.erp.inventario.util.ProductoEstadisticaParameterGeneral;
//import com.bydan.erp.inventario.presentation.report.source.ProductoEstadisticaBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.inventario.resources.reportes.AuxiliarReportes;


import com.bydan.erp.inventario.util.*;
import com.bydan.erp.inventario.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.inventario.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class ProductoEstadisticaBeanSwingJInternalFrame extends ProductoEstadisticaJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(ProductoEstadisticaBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<ProductoEstadistica> productoestadisticaValidator = new ClassValidator<ProductoEstadistica>(ProductoEstadistica.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public ProductoEstadistica productoestadistica;	
	public ProductoEstadistica productoestadisticaAux;
	public ProductoEstadistica productoestadisticaAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public ProductoEstadistica productoestadisticaTotales;
	public Long idProductoEstadisticaActual;
	public Long iIdNuevoProductoEstadistica=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboBodega="";

	public List<Bodega> bodegasForeignKey;

	public List<Bodega> getbodegasForeignKey() {
		return bodegasForeignKey;
	}

	public void setbodegasForeignKey(List<Bodega> bodegasForeignKey) {
		this.bodegasForeignKey = bodegasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegaForeignKey;

	public Bodega getbodegaForeignKey() {
		return bodegaForeignKey;
	}

	public void setbodegaForeignKey(Bodega bodegaForeignKey) {
		this.bodegaForeignKey = bodegaForeignKey;
	}

	public String sFinalQueryComboProducto="";

	public List<Producto> productosForeignKey;

	public List<Producto> getproductosForeignKey() {
		return productosForeignKey;
	}

	public void setproductosForeignKey(List<Producto> productosForeignKey) {
		this.productosForeignKey = productosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Producto productoForeignKey;

	public Producto getproductoForeignKey() {
		return productoForeignKey;
	}

	public void setproductoForeignKey(Producto productoForeignKey) {
		this.productoForeignKey = productoForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idProductoActual=0L;

	public Long getidProductoActual() {
		return idProductoActual;
	}

	public void setidProductoActual(Long idProductoActual) {
		this.idProductoActual= idProductoActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoProductoEstadistica;
	public Boolean isPermisoNuevoProductoEstadistica;
	public Boolean isPermisoActualizarProductoEstadistica;
	public Boolean isPermisoActualizarOriginalProductoEstadistica;
	public Boolean isPermisoEliminarProductoEstadistica;
	public Boolean isPermisoGuardarCambiosProductoEstadistica;
	public Boolean isPermisoConsultaProductoEstadistica;
	public Boolean isPermisoBusquedaProductoEstadistica;
	public Boolean isPermisoReporteProductoEstadistica;
	public Boolean isPermisoPaginacionMedioProductoEstadistica;
	public Boolean isPermisoPaginacionAltoProductoEstadistica;
	public Boolean isPermisoPaginacionTodoProductoEstadistica;
	public Boolean isPermisoCopiarProductoEstadistica;
	public Boolean isPermisoVerFormProductoEstadistica;
	public Boolean isPermisoDuplicarProductoEstadistica;
	public Boolean isPermisoOrdenProductoEstadistica;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public ProductoEstadisticaParameterReturnGeneral productoestadisticaReturnGeneral;
	public ProductoEstadisticaParameterReturnGeneral productoestadisticaParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoProductoEstadistica=false;
	public Boolean esParaAccionDesdeFormularioProductoEstadistica=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected ProductoEstadisticaSessionBeanAdditional productoestadisticaSessionBeanAdditional=null;
	
	public ProductoEstadisticaSessionBeanAdditional getProductoEstadisticaSessionBeanAdditional() {
		return this.productoestadisticaSessionBeanAdditional;
	}
	
	public void setProductoEstadisticaSessionBeanAdditional(ProductoEstadisticaSessionBeanAdditional productoestadisticaSessionBeanAdditional) {
		try {
			this.productoestadisticaSessionBeanAdditional=productoestadisticaSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected ProductoEstadisticaBeanSwingJInternalFrameAdditional productoestadisticaBeanSwingJInternalFrameAdditional=null;
	//public class ProductoEstadisticaBeanSwingJInternalFrame
	
	public ProductoEstadisticaBeanSwingJInternalFrameAdditional getProductoEstadisticaBeanSwingJInternalFrameAdditional() {
		return this.productoestadisticaBeanSwingJInternalFrameAdditional;
	}
	
	public void setProductoEstadisticaBeanSwingJInternalFrameAdditional(ProductoEstadisticaBeanSwingJInternalFrameAdditional productoestadisticaBeanSwingJInternalFrameAdditional) {
		try {
			this.productoestadisticaBeanSwingJInternalFrameAdditional=productoestadisticaBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public ProductoEstadisticaLogic productoestadisticaLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public ProductoEstadistica productoestadisticaBean;
	public ProductoEstadisticaConstantesFunciones productoestadisticaConstantesFunciones;
	//public ProductoEstadisticaParameterReturnGeneral productoestadisticaReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public BodegaLogic bodegaLogic;
	public ProductoLogic productoLogic;
	
	//PARAMETROS
	
	
	//public List<ProductoEstadistica> productoestadisticas;	
	//public List<ProductoEstadistica> productoestadisticasEliminados;
	//public List<ProductoEstadistica> productoestadisticasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoProductoEstadistica=false;
	public Boolean isVisibilidadCeldaDuplicarProductoEstadistica=true;
	public Boolean isVisibilidadCeldaCopiarProductoEstadistica=true;
	public Boolean isVisibilidadCeldaVerFormProductoEstadistica=true;
	public Boolean isVisibilidadCeldaOrdenProductoEstadistica=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesProductoEstadistica=false;
	public Boolean isVisibilidadCeldaModificarProductoEstadistica=false;
	public Boolean isVisibilidadCeldaActualizarProductoEstadistica=false;
	public Boolean isVisibilidadCeldaEliminarProductoEstadistica=false;
	public Boolean isVisibilidadCeldaCancelarProductoEstadistica=false;
	public Boolean isVisibilidadCeldaGuardarProductoEstadistica=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosProductoEstadistica=false;	
	
	
	public Boolean isVisibilidadFK_IdBodega=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdProducto=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	
	public Long getiIdNuevoProductoEstadistica() {
		return this.iIdNuevoProductoEstadistica;
	}

	public void setiIdNuevoProductoEstadistica(Long iIdNuevoProductoEstadistica) {
		this.iIdNuevoProductoEstadistica = iIdNuevoProductoEstadistica;
	}
	
	public Long getidProductoEstadisticaActual() {
		return this.idProductoEstadisticaActual;
	}

	public void setidProductoEstadisticaActual(Long idProductoEstadisticaActual) {
		this.idProductoEstadisticaActual = idProductoEstadisticaActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public ProductoEstadistica getproductoestadistica() {
		return this.productoestadistica;
	}

	public void setproductoestadistica(ProductoEstadistica productoestadistica) {
		this.productoestadistica = productoestadistica;
	}
	
	public ProductoEstadistica getproductoestadisticaAux() {
		return this.productoestadisticaAux;
	}

	public void setproductoestadisticaAux(ProductoEstadistica productoestadisticaAux) {
		this.productoestadisticaAux = productoestadisticaAux;
	}				
	
	public ProductoEstadistica getproductoestadisticaAnterior() {
		return this.productoestadisticaAnterior;
	}

	public void setproductoestadisticaAnterior(ProductoEstadistica productoestadisticaAnterior) {
		this.productoestadisticaAnterior = productoestadisticaAnterior;
	}	
	
	public ProductoEstadistica getproductoestadisticaTotales() {
		return this.productoestadisticaTotales;
	}

	public void setproductoestadisticaTotales(ProductoEstadistica productoestadisticaTotales) {
		this.productoestadisticaTotales = productoestadisticaTotales;
	}	
	
	public ProductoEstadistica getproductoestadisticaBean() {
		return this.productoestadisticaBean;
	}

	public void setproductoestadisticaBean(ProductoEstadistica productoestadisticaBean) {
		this.productoestadisticaBean = productoestadisticaBean;
	}	
	
	public ProductoEstadisticaParameterReturnGeneral getproductoestadisticaReturnGeneral() {
		return this.productoestadisticaReturnGeneral;
	}

	public void setproductoestadisticaReturnGeneral(ProductoEstadisticaParameterReturnGeneral productoestadisticaReturnGeneral) {
		this.productoestadisticaReturnGeneral = productoestadisticaReturnGeneral;
	}	
	
	
	public Long id_bodegaFK_IdBodega=-1L;

	public Long getid_bodegaFK_IdBodega() {
		return this.id_bodegaFK_IdBodega;
	}

	public void setid_bodegaFK_IdBodega(Long id_bodegaFK_IdBodega) {
		this.id_bodegaFK_IdBodega = id_bodegaFK_IdBodega;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_productoFK_IdProducto=-1L;

	public Long getid_productoFK_IdProducto() {
		return this.id_productoFK_IdProducto;
	}

	public void setid_productoFK_IdProducto(Long id_productoFK_IdProducto) {
		this.id_productoFK_IdProducto = id_productoFK_IdProducto;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public ProductoEstadisticaLogic getProductoEstadisticaLogic()	{		
		return productoestadisticaLogic;
	}

	public void setProductoEstadisticaLogic(ProductoEstadisticaLogic productoestadisticaLogic) {
		this.productoestadisticaLogic = productoestadisticaLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoProductoEstadistica() {
		return isEsNuevoProductoEstadistica;
	}

	public void setIsEsNuevoProductoEstadistica(Boolean isEsNuevoProductoEstadistica) {
		this.isEsNuevoProductoEstadistica = isEsNuevoProductoEstadistica;
	}

	public Boolean getEsParaAccionDesdeFormularioProductoEstadistica() {
		return esParaAccionDesdeFormularioProductoEstadistica;
	}
	
	public void setEsParaAccionDesdeFormularioProductoEstadistica(Boolean esParaAccionDesdeFormularioProductoEstadistica) {
		this.esParaAccionDesdeFormularioProductoEstadistica = esParaAccionDesdeFormularioProductoEstadistica;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.productoestadisticaSessionBean==null) {
				this.productoestadisticaSessionBean=new ProductoEstadisticaSessionBean();
			}

			if(!this.productoestadisticaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(productoestadisticaSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.productoestadisticaSessionBean==null) {
				this.productoestadisticaSessionBean=new ProductoEstadisticaSessionBean();
			}

			if(!this.productoestadisticaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(productoestadisticaSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegasForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.productoestadisticaSessionBean==null) {
				this.productoestadisticaSessionBean=new ProductoEstadisticaSessionBean();
			}

			if(!this.productoestadisticaSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegasForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodega(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(productoestadisticaSessionBean.getlidBodegaActual());
					this.bodegasForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.productosForeignKey=new ArrayList<Producto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ProductoLogic productoLogic=new ProductoLogic();

			//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

			if(this.productoestadisticaSessionBean==null) {
				this.productoestadisticaSessionBean=new ProductoEstadisticaSessionBean();
			}

			if(!this.productoestadisticaSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

					productoLogic.getTodosProductosWithConnection(sFinalQuery,new Pagination());

					this.productosForeignKey=productoLogic.getProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(productoestadisticaSessionBean.getlidProductoActual());
					this.productosForeignKey.add(productoLogic.getProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.productoestadistica!=null) {
						this.productoestadistica.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
						this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_empresaProductoEstadistica.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaProductoEstadistica.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
						if(this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_empresaProductoEstadistica.getItemCount()>0) {
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_empresaProductoEstadistica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaProductoEstadisticaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaProductoEstadisticaGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaProductoEstadisticaGenerico!=null && jComboBoxid_empresaProductoEstadisticaGenerico.getItemCount()>0) {
					jComboBoxid_empresaProductoEstadisticaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.productoestadistica!=null) {
						this.productoestadistica.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
						this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_sucursalProductoEstadistica.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalProductoEstadistica.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
						if(this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_sucursalProductoEstadistica.getItemCount()>0) {
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_sucursalProductoEstadistica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalProductoEstadisticaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalProductoEstadisticaGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalProductoEstadisticaGenerico!=null && jComboBoxid_sucursalProductoEstadisticaGenerico.getItemCount()>0) {
					jComboBoxid_sucursalProductoEstadisticaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaForeignKey(Long idBodegaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegaTemp!=null) {

					if(this.productoestadistica!=null) {
						this.productoestadistica.setBodega(bodegaTemp);
					}

					if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
						this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_bodegaProductoEstadistica.setSelectedItem(bodegaTemp);
					}
				} else {
					//jComboBoxid_bodegaProductoEstadistica.setSelectedItem(bodegaTemp);
					if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
						if(this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_bodegaProductoEstadistica.getItemCount()>0) {
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_bodegaProductoEstadistica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegaTemp!=null && jComboBoxid_bodegaFK_IdBodegaProductoEstadistica!=null) {
						jComboBoxid_bodegaFK_IdBodegaProductoEstadistica.setSelectedItem(bodegaTemp);
					} else {
						if(jComboBoxid_bodegaFK_IdBodegaProductoEstadistica!=null) {
							//jComboBoxid_bodegaFK_IdBodegaProductoEstadistica.setSelectedItem(bodegaTemp);
							if(jComboBoxid_bodegaFK_IdBodegaProductoEstadistica.getItemCount()>0) {
								jComboBoxid_bodegaFK_IdBodegaProductoEstadistica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaForeignKeyDescripcion(Long idBodegaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaForeignKeyGenerico(Long idBodegaSeleccionado,JComboBox jComboBoxid_bodegaProductoEstadisticaGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(bodegaTemp!=null) {
				jComboBoxid_bodegaProductoEstadisticaGenerico.setSelectedItem(bodegaTemp);
			} else {
				if(jComboBoxid_bodegaProductoEstadisticaGenerico!=null && jComboBoxid_bodegaProductoEstadisticaGenerico.getItemCount()>0) {
					jComboBoxid_bodegaProductoEstadisticaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualProductoForeignKey(Long idProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(productoTemp!=null) {

					if(this.productoestadistica!=null) {
						this.productoestadistica.setProducto(productoTemp);
					}

					if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
						this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_productoProductoEstadistica.setSelectedItem(productoTemp);
					}
				} else {
					//jComboBoxid_productoProductoEstadistica.setSelectedItem(productoTemp);
					if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
						if(this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_productoProductoEstadistica.getItemCount()>0) {
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_productoProductoEstadistica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){
					if(productoTemp!=null && jComboBoxid_productoFK_IdProductoProductoEstadistica!=null) {
						jComboBoxid_productoFK_IdProductoProductoEstadistica.setSelectedItem(productoTemp);
					} else {
						if(jComboBoxid_productoFK_IdProductoProductoEstadistica!=null) {
							//jComboBoxid_productoFK_IdProductoProductoEstadistica.setSelectedItem(productoTemp);
							if(jComboBoxid_productoFK_IdProductoProductoEstadistica.getItemCount()>0) {
								jComboBoxid_productoFK_IdProductoProductoEstadistica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualProductoForeignKeyDescripcion(Long idProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}


			sDescripcion=ProductoConstantesFunciones.getProductoDescripcion(productoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualProductoForeignKeyGenerico(Long idProductoSeleccionado,JComboBox jComboBoxid_productoProductoEstadisticaGenerico)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(productoTemp!=null) {
				jComboBoxid_productoProductoEstadisticaGenerico.setSelectedItem(productoTemp);
			} else {
				if(jComboBoxid_productoProductoEstadisticaGenerico!=null && jComboBoxid_productoProductoEstadisticaGenerico.getItemCount()>0) {
					jComboBoxid_productoProductoEstadisticaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(ProductoEstadistica productoestadistica,JComboBox jComboBoxid_empresaProductoEstadisticaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaProductoEstadisticaGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_empresaProductoEstadistica.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaProductoEstadisticaGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				productoestadistica.setid_empresa(empresaAux.getId());
				productoestadistica.setempresa_descripcion(ProductoEstadisticaConstantesFunciones.getEmpresaDescripcion(empresaAux));
				productoestadistica.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(ProductoEstadistica productoestadistica,JComboBox jComboBoxid_sucursalProductoEstadisticaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalProductoEstadisticaGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_sucursalProductoEstadistica.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalProductoEstadisticaGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				productoestadistica.setid_sucursal(sucursalAux.getId());
				productoestadistica.setsucursal_descripcion(ProductoEstadisticaConstantesFunciones.getSucursalDescripcion(sucursalAux));
				productoestadistica.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaForeignKey(ProductoEstadistica productoestadistica,JComboBox jComboBoxid_bodegaProductoEstadisticaGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodegaProductoEstadisticaGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_bodegaProductoEstadistica.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodegaProductoEstadisticaGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				productoestadistica.setid_bodega(bodegaAux.getId());
				productoestadistica.setbodega_descripcion(ProductoEstadisticaConstantesFunciones.getBodegaDescripcion(bodegaAux));
				productoestadistica.setBodega(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarProductoForeignKey(ProductoEstadistica productoestadistica,JComboBox jComboBoxid_productoProductoEstadisticaGenerico)throws Exception
	{
		try
		{
			Producto  productoAux=new Producto();

			if(jComboBoxid_productoProductoEstadisticaGenerico==null) {
				productoAux=(Producto)this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_productoProductoEstadistica.getSelectedItem();
			} else {
				productoAux=(Producto)jComboBoxid_productoProductoEstadisticaGenerico.getSelectedItem();
			}

			if(productoAux!=null && productoAux.getId()!=null) {
				productoestadistica.setid_producto(productoAux.getId());
				productoestadistica.setproducto_descripcion(ProductoEstadisticaConstantesFunciones.getProductoDescripcion(productoAux));
				productoestadistica.setProducto(productoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { 
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_empresaProductoEstadistica.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_empresaProductoEstadistica.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { 
					}

					if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { 
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_sucursalProductoEstadistica.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_sucursalProductoEstadistica.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { 
					}

					if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { 
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_bodegaProductoEstadistica.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_bodegaProductoEstadistica.addItem(bodega);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { 
					}

					if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaProductoEstadistica.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jComboBoxid_bodegaFK_IdBodegaProductoEstadistica.addItem(bodega);
							}
						}

						if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { 
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_productoProductoEstadistica.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_productoProductoEstadistica.addItem(producto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { 
					}

					if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_productoFK_IdProductoProductoEstadistica.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jComboBoxid_productoFK_IdProductoProductoEstadistica.addItem(producto);
							}
						}

						if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_empresaProductoEstadistica.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_empresaProductoEstadistica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_sucursalProductoEstadistica.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_sucursalProductoEstadistica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaForeignKey(Bodega bodega,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_bodegaProductoEstadistica.setSelectedItem(bodega);
						}
					} else {
						if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_bodegaProductoEstadistica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodegaFK_IdBodegaProductoEstadistica.setSelectedItem(bodega);
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaProductoEstadistica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameProductoForeignKey(Producto producto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_productoProductoEstadistica.setSelectedItem(producto);
						}
					} else {
						if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_productoProductoEstadistica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_productoFK_IdProductoProductoEstadistica.setSelectedItem(producto);
						} else {
							this.jComboBoxid_productoFK_IdProductoProductoEstadistica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesProductoEstadistica() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ProductoEstadisticaConstantesFunciones.refrescarForeignKeysDescripcionesProductoEstadistica(this.productoestadisticaLogic.getProductoEstadisticas());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			ProductoEstadisticaConstantesFunciones.refrescarForeignKeysDescripcionesProductoEstadistica(this.productoestadisticas);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Bodega.class));
		classes.add(new Classe(Producto.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//productoestadisticaLogic.setProductoEstadisticas(this.productoestadisticas);
			productoestadisticaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public ProductoEstadisticaParameterReturnGeneral getProductoEstadisticaParameterGeneral() {
		return this.productoestadisticaParameterGeneral;
	}
	
	public void setProductoEstadisticaParameterGeneral(ProductoEstadisticaParameterReturnGeneral productoestadisticaParameterGeneral) {
		this.productoestadisticaParameterGeneral = productoestadisticaParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoProductoEstadistica() {
		return isPermisoTodoProductoEstadistica;
	}

	public void setIsPermisoTodoProductoEstadistica(Boolean isPermisoTodoProductoEstadistica) {
		this.isPermisoTodoProductoEstadistica = isPermisoTodoProductoEstadistica;
	}

	public Boolean getIsPermisoNuevoProductoEstadistica() {
		return isPermisoNuevoProductoEstadistica;
	}

	public void setIsPermisoNuevoProductoEstadistica(Boolean isPermisoNuevoProductoEstadistica) {
		this.isPermisoNuevoProductoEstadistica = isPermisoNuevoProductoEstadistica;
	}

	public Boolean getIsPermisoActualizarProductoEstadistica() {
		return isPermisoActualizarProductoEstadistica;
	}

	public void setIsPermisoActualizarProductoEstadistica(Boolean isPermisoActualizarProductoEstadistica) {
		this.isPermisoActualizarProductoEstadistica = isPermisoActualizarProductoEstadistica;
	}

	public Boolean getIsPermisoEliminarProductoEstadistica() {
		return isPermisoEliminarProductoEstadistica;
	}

	public void setIsPermisoEliminarProductoEstadistica(Boolean isPermisoEliminarProductoEstadistica) {
		this.isPermisoEliminarProductoEstadistica = isPermisoEliminarProductoEstadistica;
	}

	public Boolean getIsPermisoGuardarCambiosProductoEstadistica() {
		return isPermisoGuardarCambiosProductoEstadistica;
	}

	public void setIsPermisoGuardarCambiosProductoEstadistica(Boolean isPermisoGuardarCambiosProductoEstadistica) {
		this.isPermisoGuardarCambiosProductoEstadistica = isPermisoGuardarCambiosProductoEstadistica;
	}
	
	public Boolean getIsPermisoConsultaProductoEstadistica() {
		return isPermisoConsultaProductoEstadistica;
	}

	public void setIsPermisoConsultaProductoEstadistica(Boolean isPermisoConsultaProductoEstadistica) {
		this.isPermisoConsultaProductoEstadistica = isPermisoConsultaProductoEstadistica;
	}

	public Boolean getIsPermisoBusquedaProductoEstadistica() {
		return isPermisoBusquedaProductoEstadistica;
	}

	public void setIsPermisoBusquedaProductoEstadistica(Boolean isPermisoBusquedaProductoEstadistica) {
		this.isPermisoBusquedaProductoEstadistica = isPermisoBusquedaProductoEstadistica;
	}

	public Boolean getIsPermisoReporteProductoEstadistica() {
		return isPermisoReporteProductoEstadistica;
	}

	public void setIsPermisoReporteProductoEstadistica(Boolean isPermisoReporteProductoEstadistica) {
		this.isPermisoReporteProductoEstadistica = isPermisoReporteProductoEstadistica;
	}
	
	public Boolean getIsPermisoPaginacionMedioProductoEstadistica() {
		return isPermisoPaginacionMedioProductoEstadistica;
	}

	public void setIsPermisoPaginacionMedioProductoEstadistica(Boolean isPermisoPaginacionMedioProductoEstadistica) {
		this.isPermisoPaginacionMedioProductoEstadistica = isPermisoPaginacionMedioProductoEstadistica;
	}
	
	public Boolean getIsPermisoPaginacionTodoProductoEstadistica() {
		return isPermisoPaginacionTodoProductoEstadistica;
	}

	public void setIsPermisoPaginacionTodoProductoEstadistica(Boolean isPermisoPaginacionTodoProductoEstadistica) {
		this.isPermisoPaginacionTodoProductoEstadistica = isPermisoPaginacionTodoProductoEstadistica;
	}
	
	public Boolean getIsPermisoPaginacionAltoProductoEstadistica() {
		return isPermisoPaginacionAltoProductoEstadistica;
	}

	public void setIsPermisoPaginacionAltoProductoEstadistica(Boolean isPermisoPaginacionAltoProductoEstadistica) {
		this.isPermisoPaginacionAltoProductoEstadistica = isPermisoPaginacionAltoProductoEstadistica;
	}
	
	public Boolean getIsPermisoCopiarProductoEstadistica() {
		return isPermisoCopiarProductoEstadistica;
	}

	public void setIsPermisoCopiarProductoEstadistica(Boolean isPermisoCopiarProductoEstadistica) {
		this.isPermisoCopiarProductoEstadistica = isPermisoCopiarProductoEstadistica;
	}
	
	public Boolean getIsPermisoVerFormProductoEstadistica() {
		return isPermisoVerFormProductoEstadistica;
	}

	public void setIsPermisoVerFormProductoEstadistica(Boolean isPermisoVerFormProductoEstadistica) {
		this.isPermisoVerFormProductoEstadistica = isPermisoVerFormProductoEstadistica;
	}
	
	public Boolean getIsPermisoDuplicarProductoEstadistica() {
		return isPermisoDuplicarProductoEstadistica;
	}

	public void setIsPermisoDuplicarProductoEstadistica(Boolean isPermisoDuplicarProductoEstadistica) {
		this.isPermisoDuplicarProductoEstadistica = isPermisoDuplicarProductoEstadistica;
	}
	
	public Boolean getIsPermisoOrdenProductoEstadistica() {
		return isPermisoOrdenProductoEstadistica;
	}

	public void setIsPermisoOrdenProductoEstadistica(Boolean isPermisoOrdenProductoEstadistica) {
		this.isPermisoOrdenProductoEstadistica = isPermisoOrdenProductoEstadistica;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoProductoEstadistica() {
		return isVisibilidadCeldaNuevoProductoEstadistica;
	}

	public void setIsVisibilidadCeldaNuevoProductoEstadistica(Boolean isVisibilidadCeldaNuevoProductoEstadistica) {
		this.isVisibilidadCeldaNuevoProductoEstadistica = isVisibilidadCeldaNuevoProductoEstadistica;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarProductoEstadistica() {
		return isVisibilidadCeldaDuplicarProductoEstadistica;
	}

	public void setIsVisibilidadCeldaDuplicarProductoEstadistica(Boolean isVisibilidadCeldaDuplicarProductoEstadistica) {
		this.isVisibilidadCeldaDuplicarProductoEstadistica = isVisibilidadCeldaDuplicarProductoEstadistica;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarProductoEstadistica() {
		return isVisibilidadCeldaCopiarProductoEstadistica;
	}

	public void setIsVisibilidadCeldaCopiarProductoEstadistica(Boolean isVisibilidadCeldaCopiarProductoEstadistica) {
		this.isVisibilidadCeldaCopiarProductoEstadistica = isVisibilidadCeldaCopiarProductoEstadistica;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormProductoEstadistica() {
		return isVisibilidadCeldaVerFormProductoEstadistica;
	}

	public void setIsVisibilidadCeldaVerFormProductoEstadistica(Boolean isVisibilidadCeldaVerFormProductoEstadistica) {
		this.isVisibilidadCeldaVerFormProductoEstadistica = isVisibilidadCeldaVerFormProductoEstadistica;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenProductoEstadistica() {
		return isVisibilidadCeldaOrdenProductoEstadistica;
	}

	public void setIsVisibilidadCeldaOrdenProductoEstadistica(Boolean isVisibilidadCeldaOrdenProductoEstadistica) {
		this.isVisibilidadCeldaOrdenProductoEstadistica = isVisibilidadCeldaOrdenProductoEstadistica;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesProductoEstadistica() {
		return isVisibilidadCeldaNuevoRelacionesProductoEstadistica;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesProductoEstadistica(Boolean isVisibilidadCeldaNuevoRelacionesProductoEstadistica) {
		this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica = isVisibilidadCeldaNuevoRelacionesProductoEstadistica;
	}
	
	public Boolean getIsVisibilidadCeldaModificarProductoEstadistica() {
		return isVisibilidadCeldaModificarProductoEstadistica;
	}

	public void setIsVisibilidadCeldaModificarProductoEstadistica(Boolean isVisibilidadCeldaModificarProductoEstadistica) {
		this.isVisibilidadCeldaModificarProductoEstadistica = isVisibilidadCeldaModificarProductoEstadistica;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarProductoEstadistica() {
		return isVisibilidadCeldaActualizarProductoEstadistica;
	}

	public void setIsVisibilidadCeldaActualizarProductoEstadistica(Boolean isVisibilidadCeldaActualizarProductoEstadistica) {
		this.isVisibilidadCeldaActualizarProductoEstadistica = isVisibilidadCeldaActualizarProductoEstadistica;
	}

	public Boolean getIsVisibilidadCeldaEliminarProductoEstadistica() {
		return isVisibilidadCeldaEliminarProductoEstadistica;
	}

	public void setIsVisibilidadCeldaEliminarProductoEstadistica(Boolean isVisibilidadCeldaEliminarProductoEstadistica) {
		this.isVisibilidadCeldaEliminarProductoEstadistica = isVisibilidadCeldaEliminarProductoEstadistica;
	}

	public Boolean getIsVisibilidadCeldaCancelarProductoEstadistica() {
		return isVisibilidadCeldaCancelarProductoEstadistica;
	}

	public void setIsVisibilidadCeldaCancelarProductoEstadistica(Boolean isVisibilidadCeldaCancelarProductoEstadistica) {
		this.isVisibilidadCeldaCancelarProductoEstadistica = isVisibilidadCeldaCancelarProductoEstadistica;
	}

	public Boolean getIsVisibilidadCeldaGuardarProductoEstadistica() {
		return isVisibilidadCeldaGuardarProductoEstadistica;
	}

	public void setIsVisibilidadCeldaGuardarProductoEstadistica(Boolean isVisibilidadCeldaGuardarProductoEstadistica) {
		this.isVisibilidadCeldaGuardarProductoEstadistica = isVisibilidadCeldaGuardarProductoEstadistica;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosProductoEstadistica() {
		return isVisibilidadCeldaGuardarCambiosProductoEstadistica;
	}

	public void setIsVisibilidadCeldaGuardarCambiosProductoEstadistica(Boolean isVisibilidadCeldaGuardarCambiosProductoEstadistica) {
		this.isVisibilidadCeldaGuardarCambiosProductoEstadistica = isVisibilidadCeldaGuardarCambiosProductoEstadistica;
	}
		
	public ProductoEstadisticaSessionBean getproductoestadisticaSessionBean() {
		return this.productoestadisticaSessionBean;
	}
	
	public void setproductoestadisticaSessionBean(ProductoEstadisticaSessionBean productoestadisticaSessionBean) {
		this.productoestadisticaSessionBean=productoestadisticaSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdBodega() {
		return this.isVisibilidadFK_IdBodega;
	}

	public void setisVisibilidadFK_IdBodega(Boolean isVisibilidadFK_IdBodega) {
		this.isVisibilidadFK_IdBodega=isVisibilidadFK_IdBodega;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdProducto() {
		return this.isVisibilidadFK_IdProducto;
	}

	public void setisVisibilidadFK_IdProducto(Boolean isVisibilidadFK_IdProducto) {
		this.isVisibilidadFK_IdProducto=isVisibilidadFK_IdProducto;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(ProductoEstadistica productoestadistica)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(productoestadistica,null);
				this.setActualParaGuardarSucursalForeignKey(productoestadistica,null);
				this.setActualParaGuardarBodegaForeignKey(productoestadistica,null);
				this.setActualParaGuardarProductoForeignKey(productoestadistica,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(ProductoEstadistica productoestadistica,ProductoEstadistica productoestadisticaAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalProductoEstadistica(productoestadistica);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		productoestadisticaAux.setId(productoestadistica.getId());
		productoestadisticaAux.setVersionRow(productoestadistica.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessProductoEstadistica();
		
			int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = productoestadisticaValidator.getInvalidValues(this.productoestadistica);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			productoestadisticaLogic.setDatosCliente(datosCliente);
			productoestadisticaLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				productoestadisticaAux=new  ProductoEstadistica();
				
				productoestadisticaAux.setIsNew(true);
				productoestadisticaAux.setIsChanged(true);
				
				productoestadisticaAux.setProductoEstadisticaOriginal(this.productoestadistica);
				
				productoestadisticaAux.setId(this.productoestadistica.getId());	
				productoestadisticaAux.setVersionRow(this.productoestadistica.getVersionRow());	
				productoestadisticaAux.setid_empresa(this.productoestadistica.getid_empresa());	
				productoestadisticaAux.setid_sucursal(this.productoestadistica.getid_sucursal());	
				productoestadisticaAux.setid_bodega(this.productoestadistica.getid_bodega());	
				productoestadisticaAux.setid_producto(this.productoestadistica.getid_producto());	
				productoestadisticaAux.setprecio_ultima_compra(this.productoestadistica.getprecio_ultima_compra());	
				productoestadisticaAux.setprecio_ultima_venta(this.productoestadistica.getprecio_ultima_venta());	
				productoestadisticaAux.setprecio_ultima_cotizacion(this.productoestadistica.getprecio_ultima_cotizacion());	
				productoestadisticaAux.setprecio_ultima_proforma(this.productoestadistica.getprecio_ultima_proforma());	
				productoestadisticaAux.setcantidad_disponible(this.productoestadistica.getcantidad_disponible());	
				productoestadisticaAux.setcantidad_reservada(this.productoestadistica.getcantidad_reservada());	
				productoestadisticaAux.setcantidad_demanda(this.productoestadistica.getcantidad_demanda());	
				productoestadisticaAux.setcantidad_maximo(this.productoestadistica.getcantidad_maximo());	
				productoestadisticaAux.setcantidad_minimo(this.productoestadistica.getcantidad_minimo());	
				productoestadisticaAux.setcantidad_fisica(this.productoestadistica.getcantidad_fisica());	
				productoestadisticaAux.setcantidad_orden_compra(this.productoestadistica.getcantidad_orden_compra());	
				productoestadisticaAux.setcantidad_pedida(this.productoestadistica.getcantidad_pedida());	
				productoestadisticaAux.setcantidad_requisicion(this.productoestadistica.getcantidad_requisicion());	
				productoestadisticaAux.setfecha_ultima_ingreso(this.productoestadistica.getfecha_ultima_ingreso());	
				productoestadisticaAux.setfecha_ultima_egreso(this.productoestadistica.getfecha_ultima_egreso());	
				productoestadisticaAux.setfecha_ultima_produccion(this.productoestadistica.getfecha_ultima_produccion());	
				productoestadisticaAux.setfecha_ultima_compra(this.productoestadistica.getfecha_ultima_compra());	
				productoestadisticaAux.setfecha_ultima_venta(this.productoestadistica.getfecha_ultima_venta());	
				productoestadisticaAux.setfecha_ultima_devolucion(this.productoestadistica.getfecha_ultima_devolucion());	
				productoestadisticaAux.setfecha_ultima_orden_compra(this.productoestadistica.getfecha_ultima_orden_compra());	
				productoestadisticaAux.setfecha_ultima_pedido(this.productoestadistica.getfecha_ultima_pedido());	
				productoestadisticaAux.setfecha_ultima_requisicion(this.productoestadistica.getfecha_ultima_requisicion());	
				productoestadisticaAux.settotal_ingreso(this.productoestadistica.gettotal_ingreso());	
				productoestadisticaAux.settotal_egreso(this.productoestadistica.gettotal_egreso());	
				productoestadisticaAux.settotal_compra(this.productoestadistica.gettotal_compra());	
				productoestadisticaAux.settotal_venta(this.productoestadistica.gettotal_venta());	
				productoestadisticaAux.settotal_producido(this.productoestadistica.gettotal_producido());	
				productoestadisticaAux.settotal_devuelto(this.productoestadistica.gettotal_devuelto());	
				productoestadisticaAux.setcosto_ultimo(this.productoestadistica.getcosto_ultimo());	
				productoestadisticaAux.setcosto_total(this.productoestadistica.getcosto_total());	
				productoestadisticaAux.setcosto_produccion(this.productoestadistica.getcosto_produccion());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.productoestadisticaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.productoestadisticaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(productoestadisticaAux,productoestadisticaLogic.getProductoEstadisticas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(productoestadisticaAux,productoestadisticas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.productoestadisticaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.productoestadisticaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						productoestadisticaLogic.saveProductoEstadisticas();//WithConnection
						//productoestadisticaLogic.getSetVersionRowProductoEstadisticas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.productoestadistica,productoestadisticaAux);
					
					this.refrescarForeignKeysDescripcionesProductoEstadistica();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.productoestadisticaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								productoestadisticaLogic.saveProductoEstadisticaRelaciones(productoestadisticaAux);//WithConnection
								//productoestadisticaLogic.getSetVersionRowProductoEstadisticas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.productoestadistica,productoestadisticaAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.productoestadisticaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.productoestadisticaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(productoestadisticaAux,productoestadisticaLogic.getProductoEstadisticas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(productoestadisticaAux,productoestadisticas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.productoestadistica,productoestadisticaAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				productoestadisticaAux=new  ProductoEstadistica();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.productoestadisticaSessionBean.getEsGuardarRelacionado() 
					|| (this.productoestadisticaSessionBean.getEsGuardarRelacionado() && this.productoestadistica.getId()>=0)) {
						
					productoestadisticaAux.setIsNew(false);
				}
				
				productoestadisticaAux.setIsDeleted(false);
			
				productoestadisticaAux.setId(this.productoestadistica.getId());	
				productoestadisticaAux.setVersionRow(this.productoestadistica.getVersionRow());	
				productoestadisticaAux.setid_empresa(this.productoestadistica.getid_empresa());	
				productoestadisticaAux.setid_sucursal(this.productoestadistica.getid_sucursal());	
				productoestadisticaAux.setid_bodega(this.productoestadistica.getid_bodega());	
				productoestadisticaAux.setid_producto(this.productoestadistica.getid_producto());	
				productoestadisticaAux.setprecio_ultima_compra(this.productoestadistica.getprecio_ultima_compra());	
				productoestadisticaAux.setprecio_ultima_venta(this.productoestadistica.getprecio_ultima_venta());	
				productoestadisticaAux.setprecio_ultima_cotizacion(this.productoestadistica.getprecio_ultima_cotizacion());	
				productoestadisticaAux.setprecio_ultima_proforma(this.productoestadistica.getprecio_ultima_proforma());	
				productoestadisticaAux.setcantidad_disponible(this.productoestadistica.getcantidad_disponible());	
				productoestadisticaAux.setcantidad_reservada(this.productoestadistica.getcantidad_reservada());	
				productoestadisticaAux.setcantidad_demanda(this.productoestadistica.getcantidad_demanda());	
				productoestadisticaAux.setcantidad_maximo(this.productoestadistica.getcantidad_maximo());	
				productoestadisticaAux.setcantidad_minimo(this.productoestadistica.getcantidad_minimo());	
				productoestadisticaAux.setcantidad_fisica(this.productoestadistica.getcantidad_fisica());	
				productoestadisticaAux.setcantidad_orden_compra(this.productoestadistica.getcantidad_orden_compra());	
				productoestadisticaAux.setcantidad_pedida(this.productoestadistica.getcantidad_pedida());	
				productoestadisticaAux.setcantidad_requisicion(this.productoestadistica.getcantidad_requisicion());	
				productoestadisticaAux.setfecha_ultima_ingreso(this.productoestadistica.getfecha_ultima_ingreso());	
				productoestadisticaAux.setfecha_ultima_egreso(this.productoestadistica.getfecha_ultima_egreso());	
				productoestadisticaAux.setfecha_ultima_produccion(this.productoestadistica.getfecha_ultima_produccion());	
				productoestadisticaAux.setfecha_ultima_compra(this.productoestadistica.getfecha_ultima_compra());	
				productoestadisticaAux.setfecha_ultima_venta(this.productoestadistica.getfecha_ultima_venta());	
				productoestadisticaAux.setfecha_ultima_devolucion(this.productoestadistica.getfecha_ultima_devolucion());	
				productoestadisticaAux.setfecha_ultima_orden_compra(this.productoestadistica.getfecha_ultima_orden_compra());	
				productoestadisticaAux.setfecha_ultima_pedido(this.productoestadistica.getfecha_ultima_pedido());	
				productoestadisticaAux.setfecha_ultima_requisicion(this.productoestadistica.getfecha_ultima_requisicion());	
				productoestadisticaAux.settotal_ingreso(this.productoestadistica.gettotal_ingreso());	
				productoestadisticaAux.settotal_egreso(this.productoestadistica.gettotal_egreso());	
				productoestadisticaAux.settotal_compra(this.productoestadistica.gettotal_compra());	
				productoestadisticaAux.settotal_venta(this.productoestadistica.gettotal_venta());	
				productoestadisticaAux.settotal_producido(this.productoestadistica.gettotal_producido());	
				productoestadisticaAux.settotal_devuelto(this.productoestadistica.gettotal_devuelto());	
				productoestadisticaAux.setcosto_ultimo(this.productoestadistica.getcosto_ultimo());	
				productoestadisticaAux.setcosto_total(this.productoestadistica.getcosto_total());	
				productoestadisticaAux.setcosto_produccion(this.productoestadistica.getcosto_produccion());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(productoestadisticaAux,productoestadisticaLogic.getProductoEstadisticas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(productoestadisticaAux,productoestadisticas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.productoestadisticaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.productoestadisticaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						productoestadisticaLogic.saveProductoEstadisticas();//WithConnection
						//productoestadisticaLogic.getSetVersionRowProductoEstadisticas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.productoestadistica,productoestadisticaAux);
					
					this.refrescarForeignKeysDescripcionesProductoEstadistica();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.productoestadisticaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								productoestadisticaLogic.saveProductoEstadisticaRelaciones(productoestadisticaAux);//WithConnection
								//productoestadisticaLogic.getSetVersionRowProductoEstadisticas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.productoestadistica,productoestadisticaAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.productoestadisticaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.productoestadisticaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(productoestadisticaAux,productoestadisticaLogic.getProductoEstadisticas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(productoestadisticaAux,productoestadisticas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.productoestadistica,productoestadisticaAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				productoestadisticaAux=new  ProductoEstadistica();
				
				productoestadisticaAux.setIsNew(false);
				productoestadisticaAux.setIsChanged(false);
				
				productoestadisticaAux.setIsDeleted(true);
				
				productoestadisticaAux.setId(this.productoestadistica.getId());	
				productoestadisticaAux.setVersionRow(this.productoestadistica.getVersionRow());	
				productoestadisticaAux.setid_empresa(this.productoestadistica.getid_empresa());	
				productoestadisticaAux.setid_sucursal(this.productoestadistica.getid_sucursal());	
				productoestadisticaAux.setid_bodega(this.productoestadistica.getid_bodega());	
				productoestadisticaAux.setid_producto(this.productoestadistica.getid_producto());	
				productoestadisticaAux.setprecio_ultima_compra(this.productoestadistica.getprecio_ultima_compra());	
				productoestadisticaAux.setprecio_ultima_venta(this.productoestadistica.getprecio_ultima_venta());	
				productoestadisticaAux.setprecio_ultima_cotizacion(this.productoestadistica.getprecio_ultima_cotizacion());	
				productoestadisticaAux.setprecio_ultima_proforma(this.productoestadistica.getprecio_ultima_proforma());	
				productoestadisticaAux.setcantidad_disponible(this.productoestadistica.getcantidad_disponible());	
				productoestadisticaAux.setcantidad_reservada(this.productoestadistica.getcantidad_reservada());	
				productoestadisticaAux.setcantidad_demanda(this.productoestadistica.getcantidad_demanda());	
				productoestadisticaAux.setcantidad_maximo(this.productoestadistica.getcantidad_maximo());	
				productoestadisticaAux.setcantidad_minimo(this.productoestadistica.getcantidad_minimo());	
				productoestadisticaAux.setcantidad_fisica(this.productoestadistica.getcantidad_fisica());	
				productoestadisticaAux.setcantidad_orden_compra(this.productoestadistica.getcantidad_orden_compra());	
				productoestadisticaAux.setcantidad_pedida(this.productoestadistica.getcantidad_pedida());	
				productoestadisticaAux.setcantidad_requisicion(this.productoestadistica.getcantidad_requisicion());	
				productoestadisticaAux.setfecha_ultima_ingreso(this.productoestadistica.getfecha_ultima_ingreso());	
				productoestadisticaAux.setfecha_ultima_egreso(this.productoestadistica.getfecha_ultima_egreso());	
				productoestadisticaAux.setfecha_ultima_produccion(this.productoestadistica.getfecha_ultima_produccion());	
				productoestadisticaAux.setfecha_ultima_compra(this.productoestadistica.getfecha_ultima_compra());	
				productoestadisticaAux.setfecha_ultima_venta(this.productoestadistica.getfecha_ultima_venta());	
				productoestadisticaAux.setfecha_ultima_devolucion(this.productoestadistica.getfecha_ultima_devolucion());	
				productoestadisticaAux.setfecha_ultima_orden_compra(this.productoestadistica.getfecha_ultima_orden_compra());	
				productoestadisticaAux.setfecha_ultima_pedido(this.productoestadistica.getfecha_ultima_pedido());	
				productoestadisticaAux.setfecha_ultima_requisicion(this.productoestadistica.getfecha_ultima_requisicion());	
				productoestadisticaAux.settotal_ingreso(this.productoestadistica.gettotal_ingreso());	
				productoestadisticaAux.settotal_egreso(this.productoestadistica.gettotal_egreso());	
				productoestadisticaAux.settotal_compra(this.productoestadistica.gettotal_compra());	
				productoestadisticaAux.settotal_venta(this.productoestadistica.gettotal_venta());	
				productoestadisticaAux.settotal_producido(this.productoestadistica.gettotal_producido());	
				productoestadisticaAux.settotal_devuelto(this.productoestadistica.gettotal_devuelto());	
				productoestadisticaAux.setcosto_ultimo(this.productoestadistica.getcosto_ultimo());	
				productoestadisticaAux.setcosto_total(this.productoestadistica.getcosto_total());	
				productoestadisticaAux.setcosto_produccion(this.productoestadistica.getcosto_produccion());	
				
				if(this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.productoestadisticaAux.getId()>=0) {	
						this.productoestadisticasEliminados.add(productoestadisticaAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(productoestadisticaAux,productoestadisticaLogic.getProductoEstadisticas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(productoestadisticaAux,productoestadisticas);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.productoestadisticaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.productoestadisticaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						productoestadisticaLogic.saveProductoEstadisticas();//WithConnection
						//productoestadisticaLogic.getSetVersionRowProductoEstadisticas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.productoestadisticaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								productoestadisticaLogic.saveProductoEstadisticaRelaciones(productoestadisticaAux);//WithConnection
								//productoestadisticaLogic.getSetVersionRowProductoEstadisticas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.productoestadisticaSessionBean.getEstaModoGuardarRelaciones() 
								|| this.productoestadisticaSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(productoestadisticaAux,productoestadisticaLogic.getProductoEstadisticas());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(productoestadisticaAux,productoestadisticas);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getProductoEstadisticas().addAll(this.productoestadisticasEliminados);
					
					productoestadisticaLogic.saveProductoEstadisticas();//WithConnection
					//productoestadisticaLogic.getSetVersionRowProductoEstadisticas();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesProductoEstadistica();
				
				this.productoestadisticasEliminados= new ArrayList<ProductoEstadistica>();		
			}
			
			if(this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Estadistica GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Estadistica",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.productoestadistica=productoestadisticaAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessProductoEstadistica();
      	}
		
	}	
	
	public void actualizarRelaciones(ProductoEstadistica productoestadisticaLocal) throws Exception {
		
		if(this.productoestadisticaSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(ProductoEstadistica productoestadisticaLocal) throws Exception {	
		if(this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				productoestadisticaLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				productoestadisticaLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegaBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegaBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegaBeanSwingJInternalFrameLocal.actualizarLista(bodegaBeanSwingJInternalFrameLocal.bodega,this.bodegasForeignKey);

				bodegaBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegaBeanSwingJInternalFrameLocal.bodega);

				productoestadisticaLocal.setBodega(bodegaBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey("Formulario");
				this.setActualBodegaForeignKey(bodegaBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ProductoDetalleFormJInternalFrame.class)) {
				ProductoBeanSwingJInternalFrame productoBeanSwingJInternalFrameLocal=(ProductoBeanSwingJInternalFrame) ((ProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				productoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoProducto(productoBeanSwingJInternalFrameLocal.getproducto(),true);
				productoBeanSwingJInternalFrameLocal.actualizarLista(productoBeanSwingJInternalFrameLocal.producto,this.productosForeignKey);

				productoBeanSwingJInternalFrameLocal.actualizarRelaciones(productoBeanSwingJInternalFrameLocal.producto);

				productoestadisticaLocal.setProducto(productoBeanSwingJInternalFrameLocal.producto);

				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey("Formulario");
				this.setActualProductoForeignKey(productoBeanSwingJInternalFrameLocal.producto.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarProductoEstadisticaActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = productoestadisticaValidator.getInvalidValues(this.productoestadistica);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(ProductoEstadistica productoestadistica,List<ProductoEstadistica> productoestadisticas) throws Exception {
		try	{		
			ProductoEstadisticaConstantesFunciones.actualizarLista(productoestadistica,productoestadisticas,this.productoestadisticaSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(ProductoEstadistica productoestadistica,List<ProductoEstadistica> productoestadisticas) throws Exception {
		try	{			
			ProductoEstadisticaConstantesFunciones.actualizarSelectedLista(productoestadistica,productoestadisticas);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<ProductoEstadistica> productoestadisticasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				productoestadisticasLocal=this.productoestadisticaLogic.getProductoEstadisticas();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				productoestadisticasLocal=this.productoestadisticas;
			}
			//ARCHITECTURE
		
			for(ProductoEstadistica productoestadisticaLocal:productoestadisticasLocal) {
				if(this.permiteMantenimiento(productoestadisticaLocal) && productoestadisticaLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+ProductoEstadisticaConstantesFunciones.getProductoEstadisticaLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelid_empresaProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelid_sucursalProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.IDBODEGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelid_bodegaProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.IDPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelid_productoProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.PRECIOULTIMACOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelprecio_ultima_compraProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.PRECIOULTIMAVENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelprecio_ultima_ventaProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.PRECIOULTIMACOTIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelprecio_ultima_cotizacionProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.PRECIOULTIMAPROFORMA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelprecio_ultima_proformaProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.CANTIDADDISPONIBLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_disponibleProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.CANTIDADRESERVADA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_reservadaProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.CANTIDADDEMANDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_demandaProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.CANTIDADMAXIMO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_maximoProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.CANTIDADMINIMO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_minimoProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.CANTIDADFISICA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_fisicaProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.CANTIDADORDENCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_orden_compraProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.CANTIDADPEDIDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_pedidaProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.CANTIDADREQUISICION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_requisicionProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.FECHAULTIMAINGRESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_ingresoProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.FECHAULTIMAEGRESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_egresoProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.FECHAULTIMAPRODUCCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_produccionProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.FECHAULTIMACOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_compraProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.FECHAULTIMAVENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_ventaProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.FECHAULTIMADEVOLUCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_devolucionProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.FECHAULTIMAORDENCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_orden_compraProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.FECHAULTIMAPEDIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_pedidoProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.FECHAULTIMAREQUISICION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_requisicionProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.TOTALINGRESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_ingresoProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.TOTALEGRESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_egresoProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.TOTALCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_compraProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.TOTALVENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_ventaProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.TOTALPRODUCIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_producidoProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.TOTALDEVUELTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_devueltoProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.COSTOULTIMO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcosto_ultimoProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.COSTOTOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcosto_totalProductoEstadistica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoEstadisticaConstantesFunciones.COSTOPRODUCCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcosto_produccionProductoEstadistica,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelid_empresaProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelid_sucursalProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelid_bodegaProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelid_productoProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelprecio_ultima_compraProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelprecio_ultima_ventaProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelprecio_ultima_cotizacionProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelprecio_ultima_proformaProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_disponibleProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_reservadaProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_demandaProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_maximoProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_minimoProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_fisicaProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_orden_compraProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_pedidaProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_requisicionProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_ingresoProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_egresoProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_produccionProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_compraProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_ventaProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_devolucionProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_orden_compraProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_pedidoProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_requisicionProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_ingresoProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_egresoProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_compraProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_ventaProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_producidoProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_devueltoProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcosto_ultimoProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcosto_totalProductoEstadistica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcosto_produccionProductoEstadistica,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoProductoEstadistica--;	
		
		
		this.productoestadisticaAux=new ProductoEstadistica();
		
		this.productoestadisticaAux.setId(this.iIdNuevoProductoEstadistica);
		this.productoestadisticaAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.productoestadisticaLogic.getProductoEstadisticas().add(this.productoestadisticaAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.productoestadisticas.add(this.productoestadisticaAux);
		}
		//ARCHITECTURE
		
		this.productoestadistica=this.productoestadisticaAux;
		
		if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioProductoEstadistica(this.productoestadistica);
			this.setVariablesObjetoActualToFormularioForeignKeyProductoEstadistica(this.productoestadistica);
		}
				
		//this.setDefaultControlesProductoEstadistica();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyProductoEstadistica();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyProductoEstadistica();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyProductoEstadistica();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualProductoEstadistica(this.productoestadisticaBean,this.productoestadistica,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.productoestadisticaSessionBean.getConGuardarRelaciones()) {
			classes=ProductoEstadisticaConstantesFunciones.getClassesRelationshipsOfProductoEstadistica(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.productoestadisticaReturnGeneral=productoestadisticaLogic.procesarEventosProductoEstadisticasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.productoestadisticaLogic.getProductoEstadisticas(),this.productoestadistica,this.productoestadisticaParameterGeneral,this.isEsNuevoProductoEstadistica,classes);//this.productoestadisticaLogic.getProductoEstadistica()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanProductoEstadistica(this.productoestadisticaReturnGeneral,this.productoestadisticaBean,false);
		
		if(this.productoestadisticaReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyProductoEstadistica(this.productoestadisticaReturnGeneral.getProductoEstadistica());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioProductoEstadistica(this.productoestadisticaReturnGeneral.getProductoEstadistica());
		}
		
		if(this.productoestadisticaReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioProductoEstadistica(this.productoestadisticaReturnGeneral.getProductoEstadistica(),classes);//this.productoestadisticaBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyProductoEstadistica();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyProductoEstadistica();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.RecargarFormProductoEstadistica(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingProductoEstadistica(false);
						
			if(productoestadisticaSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualProductoEstadistica();
			}
			
			this.actualizarVisualTableDatosProductoEstadistica();
			
			this.jTableDatosProductoEstadistica.setRowSelectionInterval(this.getIndiceNuevoProductoEstadistica(), this.getIndiceNuevoProductoEstadistica());
			
			this.seleccionarFilaTablaProductoEstadisticaActual();
						
			this.actualizarEstadoCeldasBotonesProductoEstadistica("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesProductoEstadistica(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_compraProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarprecio_ultima_compraProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_ventaProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarprecio_ultima_ventaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_cotizacionProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarprecio_ultima_cotizacionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_proformaProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarprecio_ultima_proformaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_disponibleProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarcantidad_disponibleProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_reservadaProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarcantidad_reservadaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_demandaProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarcantidad_demandaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_maximoProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarcantidad_maximoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_minimoProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarcantidad_minimoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_fisicaProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarcantidad_fisicaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_orden_compraProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarcantidad_orden_compraProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_pedidaProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarcantidad_pedidaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_requisicionProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarcantidad_requisicionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ingresoProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarfecha_ultima_ingresoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_egresoProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarfecha_ultima_egresoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_produccionProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarfecha_ultima_produccionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_compraProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarfecha_ultima_compraProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ventaProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarfecha_ultima_ventaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_devolucionProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarfecha_ultima_devolucionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_orden_compraProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarfecha_ultima_orden_compraProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_pedidoProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarfecha_ultima_pedidoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_requisicionProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarfecha_ultima_requisicionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ingresoProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activartotal_ingresoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_egresoProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activartotal_egresoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_compraProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activartotal_compraProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ventaProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activartotal_ventaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_producidoProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activartotal_producidoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_devueltoProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activartotal_devueltoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_ultimoProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarcosto_ultimoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_totalProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarcosto_totalProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_produccionProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarcosto_produccionProductoEstadistica);	
		//
		this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_empresaProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarid_empresaProductoEstadistica);//
		this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_sucursalProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarid_sucursalProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_bodegaProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarid_bodegaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_productoProductoEstadistica.setEnabled(isHabilitar && this.productoestadisticaConstantesFunciones.activarid_productoProductoEstadistica);
	};
	
	public void setDefaultControlesProductoEstadistica() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoProductoEstadistica(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.productoestadisticaSessionBean.setConGuardarRelaciones(true);			
			this.productoestadisticaSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormProductoEstadistica.jTabbedPaneRelacionesProductoEstadistica.setVisible(true);
			
					
		} else {
			//this.productoestadisticaSessionBean.setConGuardarRelaciones(false);			
			this.productoestadisticaSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormProductoEstadistica.jTabbedPaneRelacionesProductoEstadistica.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoProductoEstadistica() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ProductoEstadistica productoestadisticaAux:this.productoestadisticaLogic.getProductoEstadisticas()) {
				if(productoestadisticaAux.getId().equals(this.iIdNuevoProductoEstadistica)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ProductoEstadistica productoestadisticaAux:this.productoestadisticas) {
				if(productoestadisticaAux.getId().equals(this.iIdNuevoProductoEstadistica)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualProductoEstadistica(ProductoEstadistica productoestadistica,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ProductoEstadistica productoestadisticaAux:this.productoestadisticaLogic.getProductoEstadisticas()) {
				if(productoestadisticaAux.getId().equals(productoestadistica.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ProductoEstadistica productoestadisticaAux:this.productoestadisticas) {
				if(productoestadisticaAux.getId().equals(productoestadistica.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalProductoEstadistica(ProductoEstadistica productoestadisticaOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ProductoEstadistica productoestadisticaAux:this.productoestadisticaLogic.getProductoEstadisticas()) {
				if(productoestadisticaAux.getProductoEstadisticaOriginal().getId().equals(productoestadisticaOriginal.getId())) {
					existe=true;
					productoestadisticaOriginal.setId(productoestadisticaAux.getId());
					productoestadisticaOriginal.setVersionRow(productoestadisticaAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ProductoEstadistica productoestadisticaAux:this.productoestadisticas) {
				if(productoestadisticaAux.getProductoEstadisticaOriginal().getId().equals(productoestadisticaOriginal.getId())) {
					existe=true;
					productoestadisticaOriginal.setId(productoestadisticaAux.getId());
					productoestadisticaOriginal.setVersionRow(productoestadisticaAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosProductoEstadistica(Boolean esParaCancelar) throws Exception {
		productoestadisticasAux=new ArrayList<ProductoEstadistica>();
		productoestadisticaAux=new ProductoEstadistica();
		
		if(!this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ProductoEstadistica productoestadisticaAux:this.productoestadisticaLogic.getProductoEstadisticas()) {
					if(productoestadisticaAux.getId()<0) {
						productoestadisticasAux.add(productoestadisticaAux);
					}		
				}
				this.iIdNuevoProductoEstadistica=0L;
				this.productoestadisticaLogic.getProductoEstadisticas().removeAll(productoestadisticasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ProductoEstadistica productoestadisticaAux:this.productoestadisticas) {
					if(productoestadisticaAux.getId()<0) {
						productoestadisticasAux.add(productoestadisticaAux);
					}		
				}
				this.iIdNuevoProductoEstadistica=0L;
				this.productoestadisticas.removeAll(productoestadisticasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoProductoEstadistica 
					&& this.productoestadisticaLogic.getProductoEstadisticas().size()>0
					) {
					productoestadisticaAux=this.productoestadisticaLogic.getProductoEstadisticas().get(this.productoestadisticaLogic.getProductoEstadisticas().size() - 1);
				
					if(productoestadisticaAux.getId()<0) {
						this.productoestadisticaLogic.getProductoEstadisticas().remove(productoestadisticaAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoProductoEstadistica && this.productoestadisticas.size()>0) {
					productoestadisticaAux=this.productoestadisticas.get(this.productoestadisticas.size() - 1);
				
					if(productoestadisticaAux.getId()<0) {
						this.productoestadisticas.remove(productoestadisticaAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoProductoEstadistica(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(productoestadistica.getId()<0) {
				this.productoestadisticaLogic.getProductoEstadisticas().remove(this.productoestadistica);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(productoestadistica.getId()<0) {
				this.productoestadisticas.remove(this.productoestadistica);
			}
		}			
	}
	
	public void setEstadosInicialesProductoEstadistica(List<ProductoEstadistica> productoestadisticasAux) throws Exception {
		ProductoEstadisticaConstantesFunciones.setEstadosInicialesProductoEstadistica(productoestadisticasAux);
	}
	
	public void setEstadosInicialesProductoEstadistica(ProductoEstadistica productoestadisticaAux) throws Exception {
		ProductoEstadisticaConstantesFunciones.setEstadosInicialesProductoEstadistica(productoestadisticaAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarProductoEstadisticaActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesProductoEstadistica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarProductoEstadisticaActual()) {
				if(!this.isEsNuevoProductoEstadistica) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesProductoEstadistica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoProductoEstadistica=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarProductoEstadisticaActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Estadistica ?", "MANTENIMIENTO DE Estadistica", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesProductoEstadistica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(ProductoEstadistica productoestadistica) throws Exception {
		ProductoEstadisticaConstantesFunciones.seleccionarAsignar(this.productoestadistica,productoestadistica);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarProductoEstadistica=this.isPermisoActualizarOriginalProductoEstadistica;
			
			
			this.seleccionarAsignar(productoestadistica);
			
			

			idProductoActual=productoestadistica.getid_producto();
			this.seleccionarProductoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ProductoEstadisticaConstantesFunciones.quitarEspaciosProductoEstadistica(this.productoestadistica,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesProductoEstadistica("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.productoestadisticaSessionBean.setsFuncionBusquedaRapida(this.productoestadisticaSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarProductoActual() throws Exception {
		try	{
			Producto productoAux=new Producto();

			if(this.idProductoActual != null && this.idProductoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(this.idProductoActual);
					productoAux= productoLogic.getProducto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				productosForeignKey=new ArrayList<Producto>();
				productosForeignKey.add(productoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoProductoEstadistica) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosProductoEstadistica(esParaCancelar);				
				this.cancelarNuevoProductoEstadistica(esParaCancelar);								
			}
			
			this.productoestadistica=new ProductoEstadistica();
			
			this.inicializarProductoEstadistica();
			
			this.actualizarEstadoCeldasBotonesProductoEstadistica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarProductoEstadistica() throws Exception {
		try {
			ProductoEstadisticaConstantesFunciones.inicializarProductoEstadistica(this.productoestadistica);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.productoestadisticaLogic.getProductoEstadisticas().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteProductoEstadisticas(String sAccionBusqueda,List<ProductoEstadistica> productoestadisticasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="ProductoEstadistica"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="ProductoEstadisticaMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("ProductoEstadisticaMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="ProductoEstadistica"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Estadisticas");		
		parameters.put("busquedapor", ProductoEstadisticaConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceProductoEstadistica=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			ProductoEstadisticaConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			ProductoEstadisticaConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceProductoEstadistica=new JRBeanArrayDataSource(ProductoEstadisticaJInternalFrame.TraerProductoEstadisticaBeans(productoestadisticasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceProductoEstadistica);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+ProductoEstadisticaConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+ProductoEstadisticaConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(ProductoEstadisticaBean.TraerProductoEstadisticaBeans(productoestadisticasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteProductoEstadisticas(sAccionBusqueda,sTipoArchivoReporte,productoestadisticasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalProductoEstadisticas(sAccionBusqueda,sTipoArchivoReporte,productoestadisticasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoProductoEstadisticaActionPerformed(null);
					//this.generarExcelReporteProductoEstadisticas(sAccionBusqueda,sTipoArchivoReporte,productoestadisticasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalProductoEstadisticas(sAccionBusqueda,sTipoArchivoReporte,productoestadisticasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesProductoEstadisticas(sAccionBusqueda,sTipoArchivoReporte,productoestadisticasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesProductoEstadisticas(sAccionBusqueda,sTipoArchivoReporte,productoestadisticasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteProductoEstadisticas(String sAccionBusqueda,String sTipoArchivoReporte,List<ProductoEstadistica> productoestadisticasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"productoestadistica";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ProductoEstadisticas");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderProductoEstadistica("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(ProductoEstadistica productoestadistica : productoestadisticasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			ProductoEstadisticaConstantesFunciones.generarExcelReporteDataProductoEstadistica("NORMAL",row,workbook,productoestadistica,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estadistica",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderProductoEstadistica(String sTipo,Row row,Workbook workbook) {
		
		ProductoEstadisticaConstantesFunciones.generarExcelReporteHeaderProductoEstadistica(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalProductoEstadisticas(String sAccionBusqueda,String sTipoArchivoReporte,List<ProductoEstadistica> productoestadisticasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"productoestadistica_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ProductoEstadisticas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(ProductoEstadistica productoestadistica : productoestadisticasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(ProductoEstadisticaConstantesFunciones.getProductoEstadisticaDescripcion(productoestadistica));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_IDBODEGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_IDBODEGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getbodega_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_IDPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_IDPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getprecio_ultima_compra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAVENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAVENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getprecio_ultima_venta());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOTIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOTIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getprecio_ultima_cotizacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAPROFORMA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAPROFORMA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getprecio_ultima_proforma());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getcantidad_disponible());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADRESERVADA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADRESERVADA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getcantidad_reservada());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDEMANDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDEMANDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getcantidad_demanda());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getcantidad_maximo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getcantidad_minimo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADFISICA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADFISICA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getcantidad_fisica());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADORDENCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADORDENCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getcantidad_orden_compra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADPEDIDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADPEDIDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getcantidad_pedida());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADREQUISICION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADREQUISICION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getcantidad_requisicion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getfecha_ultima_ingreso());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getfecha_ultima_egreso());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getfecha_ultima_produccion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getfecha_ultima_compra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getfecha_ultima_venta());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getfecha_ultima_devolucion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getfecha_ultima_orden_compra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getfecha_ultima_pedido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getfecha_ultima_requisicion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_TOTALINGRESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALINGRESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.gettotal_ingreso());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_TOTALEGRESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALEGRESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.gettotal_egreso());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_TOTALCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.gettotal_compra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_TOTALVENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALVENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.gettotal_venta());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_TOTALPRODUCIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALPRODUCIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.gettotal_producido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_TOTALDEVUELTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALDEVUELTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.gettotal_devuelto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_COSTOULTIMO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_COSTOULTIMO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getcosto_ultimo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_COSTOTOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_COSTOTOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getcosto_total());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoEstadisticaConstantesFunciones.LABEL_COSTOPRODUCCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_COSTOPRODUCCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(productoestadistica.getcosto_produccion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estadistica",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesProductoEstadisticas(String sAccionBusqueda,String sTipoArchivoReporte,List<ProductoEstadistica> productoestadisticasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<ProductoEstadistica> productoestadisticasRespaldo=null;
		
		classes=ProductoEstadisticaConstantesFunciones.getClassesRelationshipsOfProductoEstadistica(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.productoestadisticaLogic.setDatosCliente(this.datosCliente);
		this.productoestadisticaLogic.setDatosDeep(this.datosDeep);
		this.productoestadisticaLogic.setIsConDeep(true);
		
		productoestadisticasRespaldo=this.productoestadisticaLogic.getProductoEstadisticas();
		
		this.productoestadisticaLogic.setProductoEstadisticas(productoestadisticasParaReportes);	
		this.productoestadisticaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		productoestadisticasParaReportes=this.productoestadisticaLogic.getProductoEstadisticas();
		this.productoestadisticaLogic.setProductoEstadisticas(productoestadisticasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"productoestadistica_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ProductoEstadisticas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderProductoEstadistica("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(ProductoEstadistica productoestadistica : productoestadisticasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderProductoEstadistica("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			ProductoEstadisticaConstantesFunciones.generarExcelReporteDataProductoEstadistica("NORMAL",row,workbook,productoestadistica,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(ProductoEstadisticaConstantesFunciones.getProductoEstadisticaDescripcion(productoestadistica));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estadistica",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoProductoEstadistica.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoProductoEstadistica.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoProductoEstadistica.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoProductoEstadistica.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessProductoEstadistica() throws Exception {		
		this.startProcessProductoEstadistica(true);
	}
	
	public void startProcessProductoEstadistica(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasProductoEstadistica ,this.jPanelParametrosReportesProductoEstadistica, this.jScrollPanelDatosProductoEstadistica,this.jPanelPaginacionProductoEstadistica, this.jScrollPanelDatosEdicionProductoEstadistica, this.jPanelAccionesProductoEstadistica,this.jPanelAccionesFormularioProductoEstadistica,this.jmenuBarProductoEstadistica,this.jmenuBarDetalleProductoEstadistica,this.jTtoolBarProductoEstadistica,this.jTtoolBarDetalleProductoEstadistica);		
		
		final JTabbedPane jTabbedPaneBusquedasProductoEstadistica=this.jTabbedPaneBusquedasProductoEstadistica; 
		
		final JPanel jPanelParametrosReportesProductoEstadistica=this.jPanelParametrosReportesProductoEstadistica;
		//final JScrollPane jScrollPanelDatosProductoEstadistica=this.jScrollPanelDatosProductoEstadistica;
		final JTable jTableDatosProductoEstadistica=this.jTableDatosProductoEstadistica;		
		final JPanel jPanelPaginacionProductoEstadistica=this.jPanelPaginacionProductoEstadistica;
		//final JScrollPane jScrollPanelDatosEdicionProductoEstadistica=this.jScrollPanelDatosEdicionProductoEstadistica;
		final JPanel jPanelAccionesProductoEstadistica=this.jPanelAccionesProductoEstadistica;
		
		JPanel jPanelCamposAuxiliarProductoEstadistica=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarProductoEstadistica=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
			jPanelCamposAuxiliarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jPanelCamposProductoEstadistica;
			jPanelAccionesFormularioAuxiliarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jPanelAccionesFormularioProductoEstadistica;
		}
		
		final JPanel jPanelCamposProductoEstadistica=jPanelCamposAuxiliarProductoEstadistica;
		final JPanel jPanelAccionesFormularioProductoEstadistica=jPanelAccionesFormularioAuxiliarProductoEstadistica;
		
		
		final JMenuBar jmenuBarProductoEstadistica=this.jmenuBarProductoEstadistica;
		final JToolBar jTtoolBarProductoEstadistica=this.jTtoolBarProductoEstadistica;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarProductoEstadistica=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarProductoEstadistica=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
			jmenuBarDetalleAuxiliarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jmenuBarDetalleProductoEstadistica;
			jTtoolBarDetalleAuxiliarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jTtoolBarDetalleProductoEstadistica;
		}
		
		final JMenuBar jmenuBarDetalleProductoEstadistica=jmenuBarDetalleAuxiliarProductoEstadistica;
		final JToolBar jTtoolBarDetalleProductoEstadistica=jTtoolBarDetalleAuxiliarProductoEstadistica;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasProductoEstadistica;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesProductoEstadistica;
			processRunnable.jTableDatos=jTableDatosProductoEstadistica;
			processRunnable.jPanelCampos=jPanelCamposProductoEstadistica;
			processRunnable.jPanelPaginacion=jPanelPaginacionProductoEstadistica;
			processRunnable.jPanelAcciones=jPanelAccionesProductoEstadistica;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioProductoEstadistica;
			
			
			processRunnable.jmenuBar=jmenuBarProductoEstadistica;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleProductoEstadistica;
			processRunnable.jTtoolBar=jTtoolBarProductoEstadistica;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleProductoEstadistica;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasProductoEstadistica ,jPanelParametrosReportesProductoEstadistica,jTableDatosProductoEstadistica, /*jScrollPanelDatosProductoEstadistica,*/jPanelCamposProductoEstadistica,jPanelPaginacionProductoEstadistica, /*jScrollPanelDatosEdicionProductoEstadistica,*/ jPanelAccionesProductoEstadistica,jPanelAccionesFormularioProductoEstadistica,jmenuBarProductoEstadistica,jmenuBarDetalleProductoEstadistica,jTtoolBarProductoEstadistica,jTtoolBarDetalleProductoEstadistica);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasProductoEstadistica ,jPanelParametrosReportesProductoEstadistica, jScrollPanelDatosProductoEstadistica,jPanelPaginacionProductoEstadistica, jScrollPanelDatosEdicionProductoEstadistica, jPanelAccionesProductoEstadistica,jPanelAccionesFormularioProductoEstadistica,jmenuBarProductoEstadistica,jmenuBarDetalleProductoEstadistica,jTtoolBarProductoEstadistica,jTtoolBarDetalleProductoEstadistica);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessProductoEstadistica() {// throws Exception 
		this.finishProcessProductoEstadistica(true);
	}
	
	public void finishProcessProductoEstadistica(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasProductoEstadistica ,this.jPanelParametrosReportesProductoEstadistica, this.jScrollPanelDatosProductoEstadistica,this.jPanelPaginacionProductoEstadistica, this.jScrollPanelDatosEdicionProductoEstadistica, this.jPanelAccionesProductoEstadistica,this.jPanelAccionesFormularioProductoEstadistica,this.jmenuBarProductoEstadistica,this.jmenuBarDetalleProductoEstadistica,this.jTtoolBarProductoEstadistica,this.jTtoolBarDetalleProductoEstadistica);		
		
		final JTabbedPane jTabbedPaneBusquedasProductoEstadistica=this.jTabbedPaneBusquedasProductoEstadistica; 
		
		final JPanel jPanelParametrosReportesProductoEstadistica=this.jPanelParametrosReportesProductoEstadistica;
		//final JScrollPane jScrollPanelDatosProductoEstadistica=this.jScrollPanelDatosProductoEstadistica;
		final JTable jTableDatosProductoEstadistica=this.jTableDatosProductoEstadistica;		
		final JPanel jPanelPaginacionProductoEstadistica=this.jPanelPaginacionProductoEstadistica;
		//final JScrollPane jScrollPanelDatosEdicionProductoEstadistica=this.jScrollPanelDatosEdicionProductoEstadistica;
		final JPanel jPanelAccionesProductoEstadistica=this.jPanelAccionesProductoEstadistica;
		
		JPanel jPanelCamposAuxiliarProductoEstadistica=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarProductoEstadistica=new JPanel();
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
			jPanelCamposAuxiliarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jPanelCamposProductoEstadistica;
			jPanelAccionesFormularioAuxiliarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jPanelAccionesFormularioProductoEstadistica;
		}
		
		final JPanel jPanelCamposProductoEstadistica=jPanelCamposAuxiliarProductoEstadistica;
		final JPanel jPanelAccionesFormularioProductoEstadistica=jPanelAccionesFormularioAuxiliarProductoEstadistica;
		
		
		final JMenuBar jmenuBarProductoEstadistica=this.jmenuBarProductoEstadistica;		
		final JToolBar jTtoolBarProductoEstadistica=this.jTtoolBarProductoEstadistica;
				
		JMenuBar jmenuBarDetalleAuxiliarProductoEstadistica=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarProductoEstadistica=new JToolBar();
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
			jmenuBarDetalleAuxiliarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jmenuBarDetalleProductoEstadistica;
			jTtoolBarDetalleAuxiliarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jTtoolBarDetalleProductoEstadistica;		
		}
		
		final JMenuBar jmenuBarDetalleProductoEstadistica=jmenuBarDetalleAuxiliarProductoEstadistica;
		final JToolBar jTtoolBarDetalleProductoEstadistica=jTtoolBarDetalleAuxiliarProductoEstadistica;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasProductoEstadistica;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesProductoEstadistica;
			processRunnable.jTableDatos=jTableDatosProductoEstadistica;
			processRunnable.jPanelCampos=jPanelCamposProductoEstadistica;
			processRunnable.jPanelPaginacion=jPanelPaginacionProductoEstadistica;
			processRunnable.jPanelAcciones=jPanelAccionesProductoEstadistica;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioProductoEstadistica;
			
			
			processRunnable.jmenuBar=jmenuBarProductoEstadistica;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleProductoEstadistica;
			processRunnable.jTtoolBar=jTtoolBarProductoEstadistica;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleProductoEstadistica;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasProductoEstadistica ,jPanelParametrosReportesProductoEstadistica, jTableDatosProductoEstadistica,/*jScrollPanelDatosProductoEstadistica,*/jPanelCamposProductoEstadistica,jPanelPaginacionProductoEstadistica, /*jScrollPanelDatosEdicionProductoEstadistica,*/ jPanelAccionesProductoEstadistica,jPanelAccionesFormularioProductoEstadistica,jmenuBarProductoEstadistica,jmenuBarDetalleProductoEstadistica,jTtoolBarProductoEstadistica,jTtoolBarDetalleProductoEstadistica));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesProductoEstadistica(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarProductoEstadistica(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuProductoEstadistica(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarProductoEstadistica(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarProductoEstadistica,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleProductoEstadistica,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuProductoEstadistica(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarProductoEstadistica,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleProductoEstadistica,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.productoestadisticaConstantesFunciones.getsFinalQueryProductoEstadistica();
		String  finalQueryPaginacionTodos=this.productoestadisticaConstantesFunciones.getsFinalQueryProductoEstadistica();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=ProductoEstadisticaConstantesFunciones.getArrayColumnasGlobalesNoProductoEstadistica(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=ProductoEstadisticaConstantesFunciones.getArrayColumnasGlobalesProductoEstadistica(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,ProductoEstadisticaConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.productoestadisticasEliminados= new ArrayList<ProductoEstadistica>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessProductoEstadistica();
		
				///*ProductoEstadisticaSessionBean*/this.productoestadisticaSessionBean=new ProductoEstadisticaSessionBean();
			
			if(this.productoestadisticaSessionBean==null) {
				this.productoestadisticaSessionBean=new ProductoEstadisticaSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=ProductoEstadisticaConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=ProductoEstadisticaConstantesFunciones.getClassesForeignKeysOfProductoEstadistica(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/productoestadistica."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			productoestadisticasAux= new ArrayList<ProductoEstadistica>();
			
				
			productoestadisticaLogic.setDatosCliente(this.datosCliente);
			productoestadisticaLogic.setDatosDeep(this.datosDeep);
			productoestadisticaLogic.setIsConDeep(true);
			
			
			productoestadisticaLogic.getProductoEstadisticaDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					productoestadisticaLogic.getTodosProductoEstadisticas(finalQueryGlobal,pagination);
					
					//productoestadisticaLogic.getTodosProductoEstadisticasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(productoestadisticaLogic.getProductoEstadisticas()==null|| productoestadisticaLogic.getProductoEstadisticas().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							productoestadisticasAux= new ArrayList<ProductoEstadistica>();
							productoestadisticasAux.addAll(productoestadisticaLogic.getProductoEstadisticas());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productoestadisticasAux= new ArrayList<ProductoEstadistica>();
							productoestadisticasAux.addAll(productoestadisticas);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							productoestadisticaLogic.getTodosProductoEstadisticas(finalQueryGlobal+"",this.pagination);												
							
							//productoestadisticaLogic.getTodosProductoEstadisticasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteProductoEstadisticas("Todos",productoestadisticaLogic.getProductoEstadisticas() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							productoestadisticaLogic.setProductoEstadisticas(new ArrayList<ProductoEstadistica>());					
							productoestadisticaLogic.getProductoEstadisticas().addAll(productoestadisticasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productoestadisticas=new ArrayList<ProductoEstadistica>();
							productoestadisticas.addAll(productoestadisticasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idProductoEstadistica=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idProductoEstadistica=this.idActual;
				
				} else if(this.idProductoEstadisticaActual!=null && this.idProductoEstadisticaActual!=0L) {
					idProductoEstadistica=idProductoEstadisticaActual;
				}
				
					
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndicePorId(idProductoEstadistica);
				
				this.productoestadisticas=new ArrayList<ProductoEstadistica>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					productoestadisticaLogic.getEntity(idProductoEstadistica);
					
					//productoestadisticaLogic.getEntityWithConnection(idProductoEstadistica);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoestadisticaLogic.setProductoEstadisticas(new ArrayList<ProductoEstadistica>());
					productoestadisticaLogic.getProductoEstadisticas().add(productoestadisticaLogic.getProductoEstadistica());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.productoestadisticas=new ArrayList<ProductoEstadistica>();
					this.productoestadisticas.add(productoestadistica);
				}
				
				if(productoestadisticaLogic.getProductoEstadistica()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdBodega")) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoestadisticaLogic.getProductoEstadisticasFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoestadisticaLogic.getProductoEstadisticas()==null||productoestadisticaLogic.getProductoEstadisticas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productoestadisticas==null|| productoestadisticas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productoestadisticasAux=new ArrayList<ProductoEstadistica>();
						productoestadisticasAux.addAll(productoestadisticaLogic.getProductoEstadisticas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productoestadisticasAux=new ArrayList<ProductoEstadistica>();
							productoestadisticasAux.addAll(productoestadisticas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoestadisticaLogic.getProductoEstadisticasFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductoEstadisticas("FK_IdBodega",productoestadisticaLogic.getProductoEstadisticas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductoEstadisticas("FK_IdBodega",productoestadisticas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoestadisticaLogic.setProductoEstadisticas(new ArrayList<ProductoEstadistica>());
						productoestadisticaLogic.getProductoEstadisticas().addAll(productoestadisticasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productoestadisticas=new ArrayList<ProductoEstadistica>();
							productoestadisticas.addAll(productoestadisticasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoestadisticaLogic.getProductoEstadisticasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoestadisticaLogic.getProductoEstadisticas()==null||productoestadisticaLogic.getProductoEstadisticas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productoestadisticas==null|| productoestadisticas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productoestadisticasAux=new ArrayList<ProductoEstadistica>();
						productoestadisticasAux.addAll(productoestadisticaLogic.getProductoEstadisticas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productoestadisticasAux=new ArrayList<ProductoEstadistica>();
							productoestadisticasAux.addAll(productoestadisticas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoestadisticaLogic.getProductoEstadisticasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductoEstadisticas("FK_IdEmpresa",productoestadisticaLogic.getProductoEstadisticas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductoEstadisticas("FK_IdEmpresa",productoestadisticas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoestadisticaLogic.setProductoEstadisticas(new ArrayList<ProductoEstadistica>());
						productoestadisticaLogic.getProductoEstadisticas().addAll(productoestadisticasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productoestadisticas=new ArrayList<ProductoEstadistica>();
							productoestadisticas.addAll(productoestadisticasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdProducto")) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoestadisticaLogic.getProductoEstadisticasFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoestadisticaLogic.getProductoEstadisticas()==null||productoestadisticaLogic.getProductoEstadisticas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productoestadisticas==null|| productoestadisticas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productoestadisticasAux=new ArrayList<ProductoEstadistica>();
						productoestadisticasAux.addAll(productoestadisticaLogic.getProductoEstadisticas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productoestadisticasAux=new ArrayList<ProductoEstadistica>();
							productoestadisticasAux.addAll(productoestadisticas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoestadisticaLogic.getProductoEstadisticasFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductoEstadisticas("FK_IdProducto",productoestadisticaLogic.getProductoEstadisticas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductoEstadisticas("FK_IdProducto",productoestadisticas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoestadisticaLogic.setProductoEstadisticas(new ArrayList<ProductoEstadistica>());
						productoestadisticaLogic.getProductoEstadisticas().addAll(productoestadisticasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productoestadisticas=new ArrayList<ProductoEstadistica>();
							productoestadisticas.addAll(productoestadisticasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoestadisticaLogic.getProductoEstadisticasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoestadisticaLogic.getProductoEstadisticas()==null||productoestadisticaLogic.getProductoEstadisticas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productoestadisticas==null|| productoestadisticas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productoestadisticasAux=new ArrayList<ProductoEstadistica>();
						productoestadisticasAux.addAll(productoestadisticaLogic.getProductoEstadisticas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productoestadisticasAux=new ArrayList<ProductoEstadistica>();
							productoestadisticasAux.addAll(productoestadisticas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoestadisticaLogic.getProductoEstadisticasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoEstadisticaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductoEstadisticas("FK_IdSucursal",productoestadisticaLogic.getProductoEstadisticas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductoEstadisticas("FK_IdSucursal",productoestadisticas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoestadisticaLogic.setProductoEstadisticas(new ArrayList<ProductoEstadistica>());
						productoestadisticaLogic.getProductoEstadisticas().addAll(productoestadisticasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productoestadisticas=new ArrayList<ProductoEstadistica>();
							productoestadisticas.addAll(productoestadisticasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesProductoEstadistica();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessProductoEstadistica();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=productoestadisticaLogic.getProductoEstadisticas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=productoestadisticas.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=productoestadisticaLogic.getProductoEstadisticas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=productoestadisticas.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(ProductoEstadistica productoestadistica) {
		Boolean permite=true;
		
		if(this.productoestadistica.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=ProductoEstadisticaConstantesFunciones.getOrderByListaProductoEstadistica();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=ProductoEstadisticaConstantesFunciones.getOrderByListaProductoEstadistica();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ProductoEstadistica productoestadistica:productoestadisticaLogic.getProductoEstadisticas()) {
				if(productoestadistica.getsType().equals(Constantes2.S_TOTALES)) {
					productoestadisticaTotales=productoestadistica;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ProductoEstadistica productoestadistica:this.productoestadisticas) {
				if(productoestadistica.getsType().equals(Constantes2.S_TOTALES)) {
					productoestadisticaTotales=productoestadistica;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.productoestadisticaAux=new ProductoEstadistica();
			this.productoestadisticaAux.setsType(Constantes2.S_TOTALES);
			this.productoestadisticaAux.setIsNew(false);
			this.productoestadisticaAux.setIsChanged(false);
			this.productoestadisticaAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				ProductoEstadisticaConstantesFunciones.TotalizarValoresFilaProductoEstadistica(this.productoestadisticaLogic.getProductoEstadisticas(),this.productoestadisticaAux);
				
				this.productoestadisticaLogic.getProductoEstadisticas().add(this.productoestadisticaAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				ProductoEstadisticaConstantesFunciones.TotalizarValoresFilaProductoEstadistica(this.productoestadisticas,this.productoestadisticaAux);
				
				this.productoestadisticas.add(this.productoestadisticaAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		productoestadisticaTotales=new ProductoEstadistica();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.productoestadisticaLogic.getProductoEstadisticas().remove(productoestadisticaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.productoestadisticas.remove(productoestadisticaTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		productoestadisticaTotales=new ProductoEstadistica();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ProductoEstadistica productoestadistica:productoestadisticaLogic.getProductoEstadisticas()) {
				if(productoestadistica.getsType().equals(Constantes2.S_TOTALES)) {
					productoestadisticaTotales=productoestadistica;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ProductoEstadisticaConstantesFunciones.TotalizarValoresFilaProductoEstadistica(this.productoestadisticaLogic.getProductoEstadisticas(),productoestadisticaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ProductoEstadistica productoestadistica:this.productoestadisticas) {
				if(productoestadistica.getsType().equals(Constantes2.S_TOTALES)) {
					productoestadisticaTotales=productoestadistica;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ProductoEstadisticaConstantesFunciones.TotalizarValoresFilaProductoEstadistica(this.productoestadisticas,productoestadisticaTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getProductoEstadisticasFK_IdBodega()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodega";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductoEstadisticasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductoEstadisticasFK_IdProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductoEstadisticasFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getProductoEstadisticasFK_IdBodega(String sFinalQuery,Long id_bodega)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoestadisticaLogic.getProductoEstadisticasFK_IdBodega(sFinalQuery,this.pagination,id_bodega);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductoEstadisticasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoestadisticaLogic.getProductoEstadisticasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductoEstadisticasFK_IdProducto(String sFinalQuery,Long id_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoestadisticaLogic.getProductoEstadisticasFK_IdProducto(sFinalQuery,this.pagination,id_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductoEstadisticasFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoestadisticaLogic.getProductoEstadisticasFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosProductoEstadistica() {
		this.isPermisoTodoProductoEstadistica=false;
		this.isPermisoNuevoProductoEstadistica=false;
		this.isPermisoActualizarProductoEstadistica=false;
		this.isPermisoActualizarOriginalProductoEstadistica=false;
		this.isPermisoEliminarProductoEstadistica=false;
		this.isPermisoGuardarCambiosProductoEstadistica=false;
		this.isPermisoConsultaProductoEstadistica=false;
		this.isPermisoBusquedaProductoEstadistica=false;
		this.isPermisoReporteProductoEstadistica=false;		
		this.isPermisoOrdenProductoEstadistica=false;		
		this.isPermisoPaginacionMedioProductoEstadistica=false;		
		this.isPermisoPaginacionAltoProductoEstadistica=false;
		this.isPermisoPaginacionTodoProductoEstadistica=false;
		this.isPermisoCopiarProductoEstadistica=false;		
		this.isPermisoVerFormProductoEstadistica=false;		
		this.isPermisoDuplicarProductoEstadistica=false;		
		this.isPermisoOrdenProductoEstadistica=false;		
	}
	
	public void setPermisosUsuarioProductoEstadistica(Boolean isPermiso) {
		this.isPermisoTodoProductoEstadistica=isPermiso;
		this.isPermisoNuevoProductoEstadistica=isPermiso;
		this.isPermisoActualizarProductoEstadistica=isPermiso;
		this.isPermisoActualizarOriginalProductoEstadistica=isPermiso;
		this.isPermisoEliminarProductoEstadistica=isPermiso;
		this.isPermisoGuardarCambiosProductoEstadistica=isPermiso;
		this.isPermisoConsultaProductoEstadistica=isPermiso;
		this.isPermisoBusquedaProductoEstadistica=isPermiso;
		this.isPermisoReporteProductoEstadistica=isPermiso;
		this.isPermisoOrdenProductoEstadistica=isPermiso;		
		this.isPermisoPaginacionMedioProductoEstadistica=isPermiso;		
		this.isPermisoPaginacionAltoProductoEstadistica=isPermiso;		
		this.isPermisoPaginacionTodoProductoEstadistica=isPermiso;		
		this.isPermisoCopiarProductoEstadistica=isPermiso;		
		this.isPermisoVerFormProductoEstadistica=isPermiso;		
		this.isPermisoDuplicarProductoEstadistica=isPermiso;
		this.isPermisoOrdenProductoEstadistica=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioProductoEstadistica(Boolean isPermiso) {
		//this.isPermisoTodoProductoEstadistica=isPermiso;
		this.isPermisoNuevoProductoEstadistica=isPermiso;
		this.isPermisoActualizarProductoEstadistica=isPermiso;
		this.isPermisoActualizarOriginalProductoEstadistica=isPermiso;
		this.isPermisoEliminarProductoEstadistica=isPermiso;
		this.isPermisoGuardarCambiosProductoEstadistica=isPermiso;
		//this.isPermisoConsultaProductoEstadistica=isPermiso;
		//this.isPermisoBusquedaProductoEstadistica=isPermiso;
		//this.isPermisoReporteProductoEstadistica=isPermiso;
		//this.isPermisoOrdenProductoEstadistica=isPermiso;		
		//this.isPermisoPaginacionMedioProductoEstadistica=isPermiso;		
		//this.isPermisoPaginacionAltoProductoEstadistica=isPermiso;		
		//this.isPermisoPaginacionTodoProductoEstadistica=isPermiso;		
		//this.isPermisoCopiarProductoEstadistica=isPermiso;		
		//this.isPermisoDuplicarProductoEstadistica=isPermiso;
		//this.isPermisoOrdenProductoEstadistica=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioProductoEstadisticaClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(ProductoEstadisticaJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebProductoEstadistica(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioProductoEstadisticaClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioProductoEstadisticaClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionProductoEstadisticaClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioProductoEstadisticaClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioProductoEstadistica() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(ProductoEstadisticaJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, ProductoEstadisticaConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoProductoEstadistica=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarProductoEstadistica=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalProductoEstadistica=this.isPermisoActualizarProductoEstadistica;
			this.isPermisoEliminarProductoEstadistica=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosProductoEstadistica=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaProductoEstadistica=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaProductoEstadistica=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoProductoEstadistica=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteProductoEstadistica=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenProductoEstadistica=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioProductoEstadistica=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoProductoEstadistica=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoProductoEstadistica=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarProductoEstadistica=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormProductoEstadistica=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarProductoEstadistica=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenProductoEstadistica=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosProductoEstadistica.setToolTipText(this.jTableDatosProductoEstadistica.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioProductoEstadistica(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioProductoEstadistica(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(ProductoEstadisticaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(ProductoEstadisticaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioProductoEstadistica() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyProductoEstadisticaListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.bodegasForeignKey=new ArrayList();
				this.productosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyProductoEstadisticaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(ProductoEstadisticaJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyProductoEstadisticaListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.productosForeignKey==null||this.productosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyProductoEstadisticaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			ProductoEstadisticaParameterReturnGeneral productoestadisticaReturnGeneral=new ProductoEstadisticaParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.productoestadisticaConstantesFunciones.cargarid_empresaProductoEstadistica)
					 || (this.esRecargarFks && this.productoestadisticaConstantesFunciones.cargarid_empresaProductoEstadistica)) {

					if(!this.productoestadisticaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+productoestadisticaSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.productoestadisticaConstantesFunciones.cargarid_sucursalProductoEstadistica)
					 || (this.esRecargarFks && this.productoestadisticaConstantesFunciones.cargarid_sucursalProductoEstadistica)) {

					if(!this.productoestadisticaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+productoestadisticaSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalBodega="";

				if(((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0) && this.productoestadisticaConstantesFunciones.cargarid_bodegaProductoEstadistica)
					 || (this.esRecargarFks && this.productoestadisticaConstantesFunciones.cargarid_bodegaProductoEstadistica)) {

					if(!this.productoestadisticaSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodega=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodega=Funciones.GetFinalQueryAppend(finalQueryGlobalBodega, "");
						finalQueryGlobalBodega+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodega=" WHERE " + ConstantesSql.ID + "="+productoestadisticaSessionBean.getlidBodegaActual();
					}
				} else {
					finalQueryGlobalBodega="NONE";
				}


				String finalQueryGlobalProducto="";

				if(((this.productosForeignKey==null||this.productosForeignKey.size()<=0) && this.productoestadisticaConstantesFunciones.cargarid_productoProductoEstadistica)
					 || (this.esRecargarFks && this.productoestadisticaConstantesFunciones.cargarid_productoProductoEstadistica)) {

					if(!this.productoestadisticaSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalProducto, "");
						finalQueryGlobalProducto+=ProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalProducto=" WHERE " + ConstantesSql.ID + "="+productoestadisticaSessionBean.getlidProductoActual();
					}
				} else {
					finalQueryGlobalProducto="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				productoestadisticaReturnGeneral=productoestadisticaLogic.cargarCombosLoteForeignKeyProductoEstadistica(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalBodega,finalQueryGlobalProducto);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=productoestadisticaReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=productoestadisticaReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalBodega.equals("NONE")) {
				this.bodegasForeignKey=productoestadisticaReturnGeneral.getbodegasForeignKey();
			}

			if(!finalQueryGlobalProducto.equals("NONE")) {
				this.productosForeignKey=productoestadisticaReturnGeneral.getproductosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyProductoEstadistica()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyBodega();
			this.addItemDefectoCombosForeignKeyProducto();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.productoestadisticaSessionBean==null) {
				this.productoestadisticaSessionBean=new ProductoEstadisticaSessionBean();
			}

			if(!this.productoestadisticaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.productoestadisticaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodega()throws Exception {
		try {

			if(!this.productoestadisticaSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				Bodega bodega=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodega,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodega.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegasForeignKey,bodega,true)) {

					this.bodegasForeignKey.add(0,bodega);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyProducto()throws Exception {
		try {

			if(!this.productoestadisticaSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				Producto producto=new Producto();
				ProductoConstantesFunciones.setProductoDescripcion(producto,Constantes.SMENSAJE_ESCOJA_OPCION);
				producto.setId(null);

				if(!ProductoConstantesFunciones.ExisteEnLista(this.productosForeignKey,producto,true)) {

					this.productosForeignKey.add(0,producto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyProductoEstadistica()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyProductoEstadistica(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyProductoEstadistica()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
			
			
				this.productoestadistica.setfecha_ultima_ingreso(this.parametroGeneralUsuario.getfecha_sistema());
				this.productoestadistica.setfecha_ultima_egreso(this.parametroGeneralUsuario.getfecha_sistema());
				this.productoestadistica.setfecha_ultima_produccion(this.parametroGeneralUsuario.getfecha_sistema());
				this.productoestadistica.setfecha_ultima_compra(this.parametroGeneralUsuario.getfecha_sistema());
				this.productoestadistica.setfecha_ultima_venta(this.parametroGeneralUsuario.getfecha_sistema());
				this.productoestadistica.setfecha_ultima_devolucion(this.parametroGeneralUsuario.getfecha_sistema());
				this.productoestadistica.setfecha_ultima_orden_compra(this.parametroGeneralUsuario.getfecha_sistema());
				this.productoestadistica.setfecha_ultima_pedido(this.parametroGeneralUsuario.getfecha_sistema());
				this.productoestadistica.setfecha_ultima_requisicion(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyProductoEstadistica();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyProductoEstadistica(ProductoEstadistica productoestadistica)throws Exception {	
		try {
			
			this.setActualBodegaForeignKey(productoestadistica.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(productoestadistica.getid_producto(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyProductoEstadistica(ProductoEstadistica productoestadistica,String sTipoEvento)throws Exception {	
		try {
			
			

				if(productoestadistica.getProducto()!=null && !sTipoEvento.equals("id_productoProductoEstadistica")) { //sTipoEvento Evita Bucle Infinito

					this.productosForeignKey=new ArrayList<Producto>();
					this.productosForeignKey.add(productoestadistica.getProducto());

					this.addItemDefectoCombosForeignKeyProducto();
					this.cargarCombosFrameProductosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyProductoEstadistica()throws Exception {	
		try {
			
			this.setActualBodegaForeignKey(this.productoestadisticaConstantesFunciones.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(this.productoestadisticaConstantesFunciones.getid_producto(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyProductoEstadistica()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyProductoEstadistica()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyProductoEstadistica()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroProductoEstadistica()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyProductoEstadistica()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameBodegasForeignKey("Todos");
			this.cargarCombosFrameProductosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyProductoEstadistica(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyProductoEstadistica()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_empresaProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_empresaProductoEstadistica.getItemCount()>0) {
				this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_empresaProductoEstadistica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_sucursalProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_sucursalProductoEstadistica.getItemCount()>0) {
				this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_sucursalProductoEstadistica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_bodegaProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_bodegaProductoEstadistica.getItemCount()>0) {
				this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_bodegaProductoEstadistica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_productoProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_productoProductoEstadistica.getItemCount()>0) {
				this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_productoProductoEstadistica.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	








	
	

	public ProductoEstadisticaBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public ProductoEstadisticaBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public ProductoEstadisticaBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.productoestadisticaSessionBean=new ProductoEstadisticaSessionBean(); 
		this.productoestadisticaConstantesFunciones=new ProductoEstadisticaConstantesFunciones(); 
		this.productoestadisticaBean=new ProductoEstadistica();//(this.productoestadisticaConstantesFunciones); 		
		this.productoestadisticaReturnGeneral=new ProductoEstadisticaParameterReturnGeneral(); 
		
		this.productoestadisticaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.productoestadisticaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public ProductoEstadisticaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public ProductoEstadisticaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public ProductoEstadisticaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessProductoEstadistica(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.productoestadisticaConstantesFunciones=new ProductoEstadisticaConstantesFunciones(); 
			this.productoestadisticaBean=new ProductoEstadistica();//this.productoestadisticaConstantesFunciones); 			
			this.productoestadisticaReturnGeneral=new ProductoEstadisticaParameterReturnGeneral(); 
		
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Estadistica Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.productoestadistica=new ProductoEstadistica();
			this.productoestadisticas = new ArrayList<ProductoEstadistica>();
			this.productoestadisticasAux = new ArrayList<ProductoEstadistica>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic=new ProductoEstadisticaLogic();
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}
			
			//this.productoestadisticaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.productoestadisticaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormProductoEstadistica);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoProductoEstadistica!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoProductoEstadistica);	
					}
					
					if(this.jInternalFrameImportacionProductoEstadistica!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionProductoEstadistica);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByProductoEstadistica!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByProductoEstadistica);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormProductoEstadistica);
				this.jInternalFrameDetalleFormProductoEstadistica.setVisible(false);
				this.jInternalFrameDetalleFormProductoEstadistica.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoProductoEstadistica!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoProductoEstadistica);
					this.jInternalFrameReporteDinamicoProductoEstadistica.setVisible(false);
					this.jInternalFrameReporteDinamicoProductoEstadistica.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionProductoEstadistica!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionProductoEstadistica);
					this.jInternalFrameImportacionProductoEstadistica.setVisible(false);
					this.jInternalFrameImportacionProductoEstadistica.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByProductoEstadistica!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByProductoEstadistica);
					this.jInternalFrameOrderByProductoEstadistica.setVisible(false);
					this.jInternalFrameOrderByProductoEstadistica.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idProductoEstadisticaActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=ProductoEstadisticaConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.productoestadisticaReturnGeneral=new ProductoEstadisticaParameterReturnGeneral();
			
			this.productoestadisticaParameterGeneral=new ProductoEstadisticaParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.productoestadisticaLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(ProductoEstadisticaJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ProductoEstadisticaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.productoestadisticaSessionBean.getEsGuardarRelacionado(),this.productoestadisticaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ProductoEstadisticaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.productoestadisticaSessionBean.getEsGuardarRelacionado(),this.productoestadisticaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoProductoEstadistica=false;
			this.isVisibilidadCeldaDuplicarProductoEstadistica=true;
			this.isVisibilidadCeldaCopiarProductoEstadistica=true;
			this.isVisibilidadCeldaVerFormProductoEstadistica=true;
			this.isVisibilidadCeldaOrdenProductoEstadistica=true;
			this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica=false;
			this.isVisibilidadCeldaModificarProductoEstadistica=false;
			this.isVisibilidadCeldaActualizarProductoEstadistica=false;
			this.isVisibilidadCeldaEliminarProductoEstadistica=false;
			this.isVisibilidadCeldaCancelarProductoEstadistica=false;
			this.isVisibilidadCeldaGuardarProductoEstadistica=false;
			this.isVisibilidadCeldaGuardarCambiosProductoEstadistica=false;
			
			
			this.isVisibilidadFK_IdBodega=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdProducto=true;
			this.isVisibilidadFK_IdSucursal=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesProductoEstadistica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosProductoEstadistica();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioProductoEstadistica(false);
			
			this.setPermisosUsuarioProductoEstadistica();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.productoestadisticaSessionBean.getEsGuardarRelacionado() 
				|| (this.productoestadisticaSessionBean.getEsGuardarRelacionado() && this.productoestadisticaSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioProductoEstadisticaClasesRelacionadas();
			}
			
			if(this.productoestadisticaSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioProductoEstadisticaClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosProductoEstadistica();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualProductoEstadistica();
			}
			
			if(!this.isPermisoBusquedaProductoEstadistica) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasProductoEstadistica.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioProductoEstadistica,this.isPermisoPaginacionMedioProductoEstadistica,this.isPermisoPaginacionTodoProductoEstadistica);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(ProductoEstadisticaConstantesFunciones.getTiposSeleccionarProductoEstadistica());
				
				this.tiposColumnasSelect=ProductoEstadisticaConstantesFunciones.getTiposSeleccionarProductoEstadistica(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioProductoEstadistica();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioProductoEstadistica(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioProductoEstadistica(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesProductoEstadistica() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.bodegaLogic=new BodegaLogic();
			this.productoLogic=new ProductoLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				productoestadisticaImplementable= (ProductoEstadisticaImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ProductoEstadisticaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				productoestadisticaImplementableHome= (ProductoEstadisticaImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ProductoEstadisticaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.productoestadisticas= new ArrayList<ProductoEstadistica>();
			this.productoestadisticasEliminados= new ArrayList<ProductoEstadistica>();
						
			this.isEsNuevoProductoEstadistica=false;
			this.esParaAccionDesdeFormularioProductoEstadistica=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idProductoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.bodegasForeignKey=new ArrayList<Bodega>() ;
			this.productosForeignKey=new ArrayList<Producto>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyProductoEstadistica(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroProductoEstadistica();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=ProductoEstadisticaConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesProductoEstadistica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingProductoEstadistica(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioProductoEstadistica();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioProductoEstadistica();
			}
			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasProductoEstadistica.getTabCount(); i++) {
					this.jTabbedPaneBusquedasProductoEstadistica.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasProductoEstadistica.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessProductoEstadistica(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga ProductoEstadistica: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectProductoEstadistica() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesProductoEstadistica")) {
				iIndex=this.jInternalFrameDetalleFormProductoEstadistica.jTabbedPaneRelacionesProductoEstadistica.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormProductoEstadistica.jTabbedPaneRelacionesProductoEstadistica.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessProductoEstadistica();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyProductoEstadistica(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyProductoEstadistica(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyProductoEstadistica(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyProductoEstadisticaListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyProductoEstadistica();
		
		this.cargarCombosFrameForeignKeyProductoEstadistica();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyProductoEstadistica();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyProductoEstadistica();
		}
	}
	
	

	public void cargarCombosForeignKeyBodega(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaBodega(this.bodegasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaProducto(this.productosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoProductoEstadisticaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.productoestadisticaSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormProductoEstadistica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			
			
			if(jTableDatosProductoEstadistica.getRowCount()>=1) {
				jTableDatosProductoEstadistica.removeRowSelectionInterval(0, jTableDatosProductoEstadistica.getRowCount()-1);						
			}
			
			this.isEsNuevoProductoEstadistica=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoProductoEstadistica(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesProductoEstadistica(true);			
			//this.productoestadistica=new ProductoEstadistica();
			//this.productoestadistica.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesProductoEstadistica(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualProductoEstadistica() ;
			
			if(ProductoEstadisticaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleProductoEstadistica(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.productoestadistica);	
			this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);				
			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			
			if(this.productoestadisticaSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar ProductoEstadistica: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarProductoEstadisticaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<ProductoEstadistica> productoestadisticasSeleccionados=new ArrayList<ProductoEstadistica>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosProductoEstadistica.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosProductoEstadistica.getSelectedRows().length;			
			}
			
			productoestadisticasSeleccionados=this.getProductoEstadisticasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoProductoEstadistica--;			
				//ProductoEstadistica productoestadisticaAux= new ProductoEstadistica();			
				//productoestadisticaAux.setId(this.iIdNuevoProductoEstadistica);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//ProductoEstadistica productoestadisticaOrigen=new ProductoEstadistica();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(ProductoEstadistica productoestadisticaOrigen : productoestadisticasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							productoestadisticaOrigen =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productoestadisticaOrigen =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaProductoEstadistica();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.productoestadistica.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosProductoEstadistica(productoestadisticaOrigen,this.productoestadistica,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.productoestadisticaLogic.getProductoEstadisticas().add(this.productoestadisticaAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.productoestadisticas.add(this.productoestadisticaAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaProductoEstadistica(false);
				
				this.jTableDatosProductoEstadistica.setRowSelectionInterval(this.getIndiceNuevoProductoEstadistica(), this.getIndiceNuevoProductoEstadistica());
				
				int iLastRow =  this.jTableDatosProductoEstadistica.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosProductoEstadistica.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosProductoEstadistica.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaProductoEstadistica(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<ProductoEstadistica> productoestadisticasSeleccionados=new ArrayList<ProductoEstadistica>();									
		
			ProductoEstadistica productoestadisticaOrigen=new ProductoEstadistica();
			ProductoEstadistica productoestadisticaDestino=new ProductoEstadistica();
				
			productoestadisticasSeleccionados=this.getProductoEstadisticasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosProductoEstadistica.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || productoestadisticasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosProductoEstadistica.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						productoestadisticaOrigen =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						productoestadisticaOrigen =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						productoestadisticaDestino =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						productoestadisticaDestino =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				productoestadisticaOrigen =productoestadisticasSeleccionados.get(0);
				productoestadisticaDestino =productoestadisticasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosProductoEstadistica(productoestadisticaOrigen,productoestadisticaDestino,true,false);
				
				productoestadisticaDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(productoestadisticaDestino,productoestadisticaLogic.getProductoEstadisticas());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(productoestadisticaDestino,productoestadisticas);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaProductoEstadistica(false);
				
				//this.jTableDatosProductoEstadistica.setRowSelectionInterval(this.getIndiceNuevoProductoEstadistica(), this.getIndiceNuevoProductoEstadistica());
				
				int iLastRow =  this.jTableDatosProductoEstadistica.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosProductoEstadistica.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosProductoEstadistica.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaProductoEstadistica(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormProductoEstadistica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormProductoEstadistica.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesProductoEstadistica.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasProductoEstadistica.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesProductoEstadistica.setVisible(!isVisible);
			this.jPanelPaginacionProductoEstadistica.setVisible(!isVisible);
			this.jPanelAccionesProductoEstadistica.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameProductoEstadistica();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoProductoEstadistica();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionProductoEstadistica();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByProductoEstadistica();
			
			this.abrirFrameOrderByProductoEstadistica();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByProductoEstadistica();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleProductoEstadistica(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormProductoEstadistica);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormProductoEstadistica.isMaximum()) {
					this.jInternalFrameDetalleFormProductoEstadistica.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormProductoEstadistica.setSize(this.jInternalFrameDetalleFormProductoEstadistica.iWidthFormulario,this.jInternalFrameDetalleFormProductoEstadistica.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormProductoEstadistica.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormProductoEstadistica.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormProductoEstadistica.isMaximum()) {
						this.jInternalFrameDetalleFormProductoEstadistica.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormProductoEstadistica.jContentPaneDetalleProductoEstadistica.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormProductoEstadistica.jTabbedPaneRelacionesProductoEstadistica.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormProductoEstadistica.jContentPaneDetalleProductoEstadistica.getWidth(),ProductoEstadisticaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormProductoEstadistica.jTabbedPaneRelacionesProductoEstadistica.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormProductoEstadistica.jContentPaneDetalleProductoEstadistica.getWidth(),ProductoEstadisticaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormProductoEstadistica.jTabbedPaneRelacionesProductoEstadistica.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormProductoEstadistica.jContentPaneDetalleProductoEstadistica.getWidth(),ProductoEstadisticaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormProductoEstadistica.setVisible(true);
	        this.jInternalFrameDetalleFormProductoEstadistica.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByProductoEstadistica() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByProductoEstadistica==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByProductoEstadistica=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByProductoEstadistica,false,this);
				} else {
					this.jInternalFrameOrderByProductoEstadistica=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByProductoEstadistica,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByProductoEstadistica);
				this.jInternalFrameOrderByProductoEstadistica.setVisible(false);
				this.jInternalFrameOrderByProductoEstadistica.setSelected(false);
				
				this.jInternalFrameOrderByProductoEstadistica.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByProductoEstadistica"));
				
				this.inicializarActualizarBindingTablaOrderByProductoEstadistica();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionProductoEstadistica() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionProductoEstadistica==null) {
				
				this.jInternalFrameImportacionProductoEstadistica=new ImportacionJInternalFrame(ProductoEstadisticaConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionProductoEstadistica);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionProductoEstadistica);
				this.jInternalFrameImportacionProductoEstadistica.setVisible(false);
				this.jInternalFrameImportacionProductoEstadistica.setSelected(false);


				this.jInternalFrameImportacionProductoEstadistica.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionProductoEstadistica"));
				this.jInternalFrameImportacionProductoEstadistica.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionProductoEstadistica"));
				this.jInternalFrameImportacionProductoEstadistica.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionProductoEstadistica"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoProductoEstadistica() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoProductoEstadistica==null) {
				this.jInternalFrameReporteDinamicoProductoEstadistica=new ReporteDinamicoJInternalFrame(ProductoEstadisticaConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoProductoEstadistica);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoProductoEstadistica);
				this.jInternalFrameReporteDinamicoProductoEstadistica.setVisible(false);
				this.jInternalFrameReporteDinamicoProductoEstadistica.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoProductoEstadistica.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoProductoEstadistica"));
				this.jInternalFrameReporteDinamicoProductoEstadistica.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoProductoEstadistica"));
				this.jInternalFrameReporteDinamicoProductoEstadistica.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoProductoEstadistica"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualProductoEstadistica();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleProductoEstadistica() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormProductoEstadistica);
			
	       	this.jInternalFrameDetalleFormProductoEstadistica.setVisible(false);
	        this.jInternalFrameDetalleFormProductoEstadistica.setSelected(false);
			
			//this.jInternalFrameDetalleFormProductoEstadistica.dispose();
			//this.jInternalFrameDetalleFormProductoEstadistica=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoProductoEstadistica() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoProductoEstadistica.setVisible(true);
	        this.jInternalFrameReporteDinamicoProductoEstadistica.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionProductoEstadistica() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionProductoEstadistica.setVisible(true);
	        this.jInternalFrameImportacionProductoEstadistica.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByProductoEstadistica() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByProductoEstadistica.setVisible(true);
	        this.jInternalFrameOrderByProductoEstadistica.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByProductoEstadistica() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByProductoEstadistica.setVisible(false);
	        this.jInternalFrameOrderByProductoEstadistica.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoProductoEstadistica() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoProductoEstadistica.setVisible(false);
	        this.jInternalFrameReporteDinamicoProductoEstadistica.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionProductoEstadistica() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionProductoEstadistica.setVisible(false);
	        this.jInternalFrameImportacionProductoEstadistica.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarProductoEstadistica(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarProductoEstadistica(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesProductoEstadistica(true);
			//this.isEsNuevoProductoEstadistica=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesProductoEstadistica("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesProductoEstadistica(false) ;
			
			if(productoestadisticaSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(ProductoEstadisticaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleProductoEstadistica(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualProductoEstadistica(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaProductoEstadisticaActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarProductoEstadistica(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormProductoEstadistica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesProductoEstadistica(true);
			//this.isEsNuevoProductoEstadistica=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.productoestadistica.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesProductoEstadistica("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesProductoEstadistica(false) ;
			
			if(ProductoEstadisticaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleProductoEstadistica(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualProductoEstadistica(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Producto")) {
				if(!this.productoestadisticaConstantesFunciones.cargarid_productoProductoEstadistica) {
					this.cargarCombosProductosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingProductoEstadistica(false,false);
					this.cargarCombosFrameProductosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_producto (id);

				this.recargarComboTablaProducto(this.productosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaBodega(List<Bodega> bodegasForeignKey)throws Exception{
		TableColumn tableColumnBodega=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_IDBODEGA));
		TableCellEditor tableCellEditorBodega =tableColumnBodega.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodega;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProductoEstadistica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegasForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaProducto(List<Producto> productosForeignKey)throws Exception{
		TableColumn tableColumnProducto=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_IDPRODUCTO));
		TableCellEditor tableCellEditorProducto =tableColumnProducto.getCellEditor();

		ProductoTableCell productoTableCellFk=(ProductoTableCell)tableCellEditorProducto;

		if(productoTableCellFk!=null) {
			productoTableCellFk.setproductosForeignKey(productosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProductoEstadistica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//productoTableCellFk.setRowActual(intSelectedRow);
			//productoTableCellFk.setproductosForeignKeyActual(productosForeignKey);
		//}


		if(productoTableCellFk!=null) {
			productoTableCellFk.RecargarProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_producto (Long id) throws Exception {
		this.setActualProductoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesProductoEstadistica(false);
			
			//if(!this.isEsNuevoProductoEstadistica) {								
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
				this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				
			}
			
			if(this.permiteMantenimiento(this.productoestadistica)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoProductoEstadistica=true;
					this.inicializarActualizarBindingTablaProductoEstadistica(false);
					this.isEsNuevoProductoEstadistica=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoProductoEstadistica=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoProductoEstadistica=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesProductoEstadistica(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualProductoEstadistica(false);
				
				this.habilitarDeshabilitarControlesProductoEstadistica(false);
			
												
				
				if(ProductoEstadisticaJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleProductoEstadistica();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoProductoEstadisticaActionPerformed(evt,productoestadisticaSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualProductoEstadistica(this.productoestadistica,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosProductoEstadistica.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,productoestadisticaSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.productoestadistica.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(ProductoEstadistica.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ProductoEstadistica.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				this.productoestadistica.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				this.productoestadistica.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.productoestadistica)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((ProductoEstadisticaModel) this.jTableDatosProductoEstadistica.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoProductoEstadistica=true;
				this.inicializarActualizarBindingTablaProductoEstadistica(false);
				this.isEsNuevoProductoEstadistica=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesProductoEstadistica(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualProductoEstadistica(false);
				
				this.habilitarDeshabilitarControlesProductoEstadistica(false);
				
				
				
				if(ProductoEstadisticaJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleProductoEstadistica();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosProductoEstadistica.getRowCount()>=1) {
				jTableDatosProductoEstadistica.removeRowSelectionInterval(0, jTableDatosProductoEstadistica.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesProductoEstadistica(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaProductoEstadistica(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesProductoEstadistica(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualProductoEstadistica(false) ;
			
			this.isEsNuevoProductoEstadistica=false;
			
			if(ProductoEstadisticaJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleProductoEstadistica();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingProductoEstadistica(false);
				
				//SI ES MANUAL
				if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualProductoEstadistica();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoProductoEstadistica--;			
			//ProductoEstadistica productoestadisticaAux= new ProductoEstadistica();			
			//productoestadisticaAux.setId(this.iIdNuevoProductoEstadistica);
			
			if(this.jInternalFrameDetalleFormProductoEstadistica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaProductoEstadistica();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
			
			this.productoestadistica.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.productoestadisticaLogic.getProductoEstadisticas().add(this.productoestadisticaAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.productoestadisticas.add(this.productoestadisticaAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaProductoEstadistica(false);
			
			this.jTableDatosProductoEstadistica.setRowSelectionInterval(this.getIndiceNuevoProductoEstadistica(), this.getIndiceNuevoProductoEstadistica());
			
			int iLastRow =  this.jTableDatosProductoEstadistica.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosProductoEstadistica.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosProductoEstadistica.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaProductoEstadistica(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingProductoEstadistica(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingProductoEstadistica(false);
			
			//SI ES MANUAL
			if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualProductoEstadistica();
			}
			
			//this.abrirFrameTreeProductoEstadistica();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE EstadisticaS ?", "MANTENIMIENTO DE Estadistica", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionProductoEstadistica.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralProductoEstadistica();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.productoestadisticaReturnGeneral=productoestadisticaLogic.procesarImportacionProductoEstadisticasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.productoestadisticaParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarProductoEstadisticaReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionProductoEstadistica.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionProductoEstadistica.setFileImportacion(this.jInternalFrameImportacionProductoEstadistica.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionProductoEstadistica.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionProductoEstadistica.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionProductoEstadistica.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionProductoEstadistica.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<ProductoEstadistica> productoestadisticasSeleccionados=new ArrayList<ProductoEstadistica>();		

		productoestadisticasSeleccionados=this.getProductoEstadisticasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("ProductoEstadisticaBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"ProductoEstadisticaBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteProductoEstadisticas("Todos",productoestadisticasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estadistica",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoProductoEstadistica.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoProductoEstadistica.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ProductoEstadisticaConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_IDBODEGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Bodega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Bodega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Bodega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Bodega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_IDPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Producto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Producto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Producto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Producto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOMPRA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecioUltimaCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecioUltimaCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecioUltimaCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecioUltimaCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAVENTA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecioUltimaVenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecioUltimaVenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecioUltimaVenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecioUltimaVenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOTIZACION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecioUltimaCotizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecioUltimaCotizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecioUltimaCotizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecioUltimaCotizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAPROFORMA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecioUltimaProforma_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecioUltimaProforma_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecioUltimaProforma_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecioUltimaProforma_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadDisponible_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadDisponible_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadDisponible_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadDisponible_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADRESERVADA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadReservada_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadReservada_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadReservada_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadReservada_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDEMANDA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadDemanda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadDemanda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadDemanda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadDemanda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadMaximo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadMaximo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadMaximo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadMaximo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadMinimo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadMinimo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadMinimo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadMinimo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADFISICA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadFisica_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadFisica_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadFisica_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadFisica_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADORDENCOMPRA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadOrdenCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadOrdenCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadOrdenCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadOrdenCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADPEDIDA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadPedida_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadPedida_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadPedida_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadPedida_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADREQUISICION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadRequisicion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadRequisicion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadRequisicion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadRequisicion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaUltimaIngreso_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaUltimaIngreso_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaUltimaIngreso_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaUltimaIngreso_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaUltimaEgreso_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaUltimaEgreso_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaUltimaEgreso_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaUltimaEgreso_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaUltimaProduccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaUltimaProduccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaUltimaProduccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaUltimaProduccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaUltimaCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaUltimaCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaUltimaCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaUltimaCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaUltimaVenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaUltimaVenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaUltimaVenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaUltimaVenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaUltimaDevolucion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaUltimaDevolucion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaUltimaDevolucion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaUltimaDevolucion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaUltimaOrdenCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaUltimaOrdenCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaUltimaOrdenCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaUltimaOrdenCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaUltimaPedido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaUltimaPedido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaUltimaPedido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaUltimaPedido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaUltimaRequisicion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaUltimaRequisicion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaUltimaRequisicion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaUltimaRequisicion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALINGRESO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talIngreso_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talIngreso_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talIngreso_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talIngreso_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALEGRESO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talEgreso_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talEgreso_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talEgreso_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talEgreso_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALCOMPRA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALVENTA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talVenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talVenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talVenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talVenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALPRODUCIDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talProducido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talProducido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talProducido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talProducido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALDEVUELTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talDevuelto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talDevuelto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talDevuelto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talDevuelto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_COSTOULTIMO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_stoUltimo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_stoUltimo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_stoUltimo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_stoUltimo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_COSTOTOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_stoTotal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_stoTotal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_stoTotal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_stoTotal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_COSTOPRODUCCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_stoProduccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_stoProduccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_stoProduccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_stoProduccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoProductoEstadistica.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case ProductoEstadisticaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoria="id_bodega";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoria="id_producto";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOMPRA:
					sNombreCampoCategoria="precio_ultima_compra";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAVENTA:
					sNombreCampoCategoria="precio_ultima_venta";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOTIZACION:
					sNombreCampoCategoria="precio_ultima_cotizacion";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAPROFORMA:
					sNombreCampoCategoria="precio_ultima_proforma";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE:
					sNombreCampoCategoria="cantidad_disponible";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADRESERVADA:
					sNombreCampoCategoria="cantidad_reservada";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDEMANDA:
					sNombreCampoCategoria="cantidad_demanda";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO:
					sNombreCampoCategoria="cantidad_maximo";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO:
					sNombreCampoCategoria="cantidad_minimo";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADFISICA:
					sNombreCampoCategoria="cantidad_fisica";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADORDENCOMPRA:
					sNombreCampoCategoria="cantidad_orden_compra";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADPEDIDA:
					sNombreCampoCategoria="cantidad_pedida";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADREQUISICION:
					sNombreCampoCategoria="cantidad_requisicion";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO:
					sNombreCampoCategoria="fecha_ultima_ingreso";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO:
					sNombreCampoCategoria="fecha_ultima_egreso";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION:
					sNombreCampoCategoria="fecha_ultima_produccion";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA:
					sNombreCampoCategoria="fecha_ultima_compra";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA:
					sNombreCampoCategoria="fecha_ultima_venta";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION:
					sNombreCampoCategoria="fecha_ultima_devolucion";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA:
					sNombreCampoCategoria="fecha_ultima_orden_compra";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO:
					sNombreCampoCategoria="fecha_ultima_pedido";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION:
					sNombreCampoCategoria="fecha_ultima_requisicion";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALINGRESO:
					sNombreCampoCategoria="total_ingreso";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALEGRESO:
					sNombreCampoCategoria="total_egreso";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALCOMPRA:
					sNombreCampoCategoria="total_compra";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALVENTA:
					sNombreCampoCategoria="total_venta";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALPRODUCIDO:
					sNombreCampoCategoria="total_producido";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALDEVUELTO:
					sNombreCampoCategoria="total_devuelto";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_COSTOULTIMO:
					sNombreCampoCategoria="costo_ultimo";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_COSTOTOTAL:
					sNombreCampoCategoria="costo_total";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_COSTOPRODUCCION:
					sNombreCampoCategoria="costo_produccion";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case ProductoEstadisticaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoriaValor="id_bodega";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoriaValor="id_producto";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOMPRA:
					sNombreCampoCategoriaValor="precio_ultima_compra";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAVENTA:
					sNombreCampoCategoriaValor="precio_ultima_venta";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOTIZACION:
					sNombreCampoCategoriaValor="precio_ultima_cotizacion";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAPROFORMA:
					sNombreCampoCategoriaValor="precio_ultima_proforma";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE:
					sNombreCampoCategoriaValor="cantidad_disponible";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADRESERVADA:
					sNombreCampoCategoriaValor="cantidad_reservada";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDEMANDA:
					sNombreCampoCategoriaValor="cantidad_demanda";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO:
					sNombreCampoCategoriaValor="cantidad_maximo";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO:
					sNombreCampoCategoriaValor="cantidad_minimo";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADFISICA:
					sNombreCampoCategoriaValor="cantidad_fisica";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADORDENCOMPRA:
					sNombreCampoCategoriaValor="cantidad_orden_compra";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADPEDIDA:
					sNombreCampoCategoriaValor="cantidad_pedida";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADREQUISICION:
					sNombreCampoCategoriaValor="cantidad_requisicion";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO:
					sNombreCampoCategoriaValor="fecha_ultima_ingreso";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO:
					sNombreCampoCategoriaValor="fecha_ultima_egreso";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION:
					sNombreCampoCategoriaValor="fecha_ultima_produccion";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA:
					sNombreCampoCategoriaValor="fecha_ultima_compra";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA:
					sNombreCampoCategoriaValor="fecha_ultima_venta";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION:
					sNombreCampoCategoriaValor="fecha_ultima_devolucion";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA:
					sNombreCampoCategoriaValor="fecha_ultima_orden_compra";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO:
					sNombreCampoCategoriaValor="fecha_ultima_pedido";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION:
					sNombreCampoCategoriaValor="fecha_ultima_requisicion";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALINGRESO:
					sNombreCampoCategoriaValor="total_ingreso";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALEGRESO:
					sNombreCampoCategoriaValor="total_egreso";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALCOMPRA:
					sNombreCampoCategoriaValor="total_compra";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALVENTA:
					sNombreCampoCategoriaValor="total_venta";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALPRODUCIDO:
					sNombreCampoCategoriaValor="total_producido";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALDEVUELTO:
					sNombreCampoCategoriaValor="total_devuelto";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_COSTOULTIMO:
					sNombreCampoCategoriaValor="costo_ultimo";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_COSTOTOTAL:
					sNombreCampoCategoriaValor="costo_total";
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_COSTOPRODUCCION:
					sNombreCampoCategoriaValor="costo_produccion";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoProductoEstadistica.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoProductoEstadistica.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ProductoEstadisticaConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_IDBODEGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_IDPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_producto");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio Ultima Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio_ultima_compra");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAVENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio Ultima Venta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio_ultima_venta");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOTIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio Ultima Cotizacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio_ultima_cotizacion");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAPROFORMA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio Ultima Proforma",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio_ultima_proforma");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Disponible",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_disponible");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADRESERVADA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Reservada",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_reservada");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDEMANDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Demanda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_demanda");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Maximo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_maximo");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Minimo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_minimo");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADFISICA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Fisica",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_fisica");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADORDENCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Orden Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_orden_compra");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADPEDIDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Pedida",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_pedida");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADREQUISICION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Requisicion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_requisicion");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Ultima Ingreso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_ultima_ingreso");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Ultima Egreso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_ultima_egreso");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Ultima Produccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_ultima_produccion");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Ultima Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_ultima_compra");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Ultima Venta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_ultima_venta");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Ultima Devolucion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_ultima_devolucion");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Ultima Orden Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_ultima_orden_compra");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Ultima Pedido",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_ultima_pedido");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Ultima Requisicion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_ultima_requisicion");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALINGRESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Ingreso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_ingreso");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALEGRESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Egreso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_egreso");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_compra");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALVENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Venta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_venta");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALPRODUCIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Producido",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_producido");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALDEVUELTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Devuelto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_devuelto");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_COSTOULTIMO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo Ultimo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo_ultimo");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_COSTOTOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo_total");
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_COSTOPRODUCCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo Produccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo_produccion");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<ProductoEstadistica> productoestadisticasSeleccionados=new ArrayList<ProductoEstadistica>();		
		
		productoestadisticasSeleccionados=this.getProductoEstadisticasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"productoestadistica";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("ProductoEstadisticas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoProductoEstadistica.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoProductoEstadistica.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case ProductoEstadisticaConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_IDBODEGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_IDBODEGA);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getbodega_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_IDPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_IDPRODUCTO);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOMPRA);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getprecio_ultima_compra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAVENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAVENTA);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getprecio_ultima_venta());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOTIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOTIZACION);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getprecio_ultima_cotizacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAPROFORMA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAPROFORMA);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getprecio_ultima_proforma());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getcantidad_disponible());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADRESERVADA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADRESERVADA);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getcantidad_reservada());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDEMANDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDEMANDA);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getcantidad_demanda());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getcantidad_maximo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getcantidad_minimo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADFISICA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADFISICA);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getcantidad_fisica());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADORDENCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADORDENCOMPRA);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getcantidad_orden_compra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADPEDIDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADPEDIDA);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getcantidad_pedida());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADREQUISICION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADREQUISICION);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getcantidad_requisicion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getfecha_ultima_ingreso());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getfecha_ultima_egreso());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getfecha_ultima_produccion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getfecha_ultima_compra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getfecha_ultima_venta());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getfecha_ultima_devolucion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getfecha_ultima_orden_compra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getfecha_ultima_pedido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getfecha_ultima_requisicion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALINGRESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALINGRESO);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.gettotal_ingreso());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALEGRESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALEGRESO);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.gettotal_egreso());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALCOMPRA);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.gettotal_compra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALVENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALVENTA);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.gettotal_venta());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALPRODUCIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALPRODUCIDO);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.gettotal_producido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_TOTALDEVUELTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALDEVUELTO);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.gettotal_devuelto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_COSTOULTIMO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_COSTOULTIMO);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getcosto_ultimo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_COSTOTOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_COSTOTOTAL);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getcosto_total());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoEstadisticaConstantesFunciones.LABEL_COSTOPRODUCCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_COSTOPRODUCCION);
					iRow++;

					for(ProductoEstadistica productoestadistica:productoestadisticasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(productoestadistica.getcosto_produccion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelProductoEstadistica(row);				
			//	iRow++;
			//}				
			
			//for(ProductoEstadistica productoestadisticaAux:productoestadisticasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelProductoEstadistica(productoestadisticaAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estadistica",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingProductoEstadistica(false);
			
			//SI ES MANUAL
			if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualProductoEstadistica();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingProductoEstadistica(false);
			
			//SI ES MANUAL
			if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualProductoEstadistica();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingProductoEstadistica(false);
			
			//SI ES MANUAL
			if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualProductoEstadistica();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaProductoEstadistica() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosProductoEstadistica.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosProductoEstadistica.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosProductoEstadistica.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosProductoEstadistica.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosProductoEstadistica.setMinimumSize(dimensionMinimum);
		this.jTableDatosProductoEstadistica.setMaximumSize(dimensionMaximum);
		this.jTableDatosProductoEstadistica.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingProductoEstadistica(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingProductoEstadistica(esInicializar,true);
	}
	
	public void inicializarActualizarBindingProductoEstadistica(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaProductoEstadistica(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesProductoEstadistica(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasProductoEstadistica(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesProductoEstadistica(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesProductoEstadistica(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualProductoEstadistica() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaProductoEstadistica();
		
		this.inicializarActualizarBindingBotonesManualProductoEstadistica(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualProductoEstadistica();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesProductoEstadistica() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualProductoEstadistica(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualProductoEstadistica(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosProductoEstadistica.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosProductoEstadistica.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteProductoEstadistica.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormProductoEstadistica.jCheckBoxPostAccionNuevoProductoEstadistica.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormProductoEstadistica.jCheckBoxPostAccionSinCerrarProductoEstadistica.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormProductoEstadistica.jCheckBoxPostAccionSinMensajeProductoEstadistica.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosProductoEstadistica.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosProductoEstadistica.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteProductoEstadistica.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
				this.jInternalFrameDetalleFormProductoEstadistica.jCheckBoxPostAccionNuevoProductoEstadistica.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormProductoEstadistica.jCheckBoxPostAccionSinCerrarProductoEstadistica.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormProductoEstadistica.jCheckBoxPostAccionSinMensajeProductoEstadistica.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionProductoEstadistica.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionProductoEstadistica.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxTiposAccionesFormularioProductoEstadistica.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesProductoEstadistica.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoProductoEstadistica!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesProductoEstadistica.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesProductoEstadistica.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarProductoEstadistica.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesProductoEstadistica.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoProductoEstadistica!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesProductoEstadistica.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralProductoEstadistica.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesProductoEstadistica(Boolean esInicializar) throws Exception {
		try	{	
			if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualProductoEstadistica(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesProductoEstadistica() throws Exception {
		try	{
			if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualProductoEstadistica();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleProductoEstadistica() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxTiposAccionesFormularioProductoEstadistica.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxTiposAccionesFormularioProductoEstadistica.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualProductoEstadistica() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesProductoEstadistica.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesProductoEstadistica.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesProductoEstadistica.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesProductoEstadistica.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesProductoEstadistica.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesProductoEstadistica.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionProductoEstadistica.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionProductoEstadistica.addItem(reporte);
			}
			
			
			if(!this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionProductoEstadistica.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionProductoEstadistica.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesProductoEstadistica.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesProductoEstadistica.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesProductoEstadistica.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesProductoEstadistica.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxTiposAccionesFormularioProductoEstadistica.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxTiposAccionesFormularioProductoEstadistica.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarProductoEstadistica.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarProductoEstadistica.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarProductoEstadistica.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualProductoEstadistica();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualProductoEstadistica() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoProductoEstadistica!=null) {
				this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoProductoEstadistica!=null) {
				this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoProductoEstadistica!=null) {
				
				if(this.jInternalFrameReporteDinamicoProductoEstadistica.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoProductoEstadistica.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoProductoEstadistica.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoProductoEstadistica.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoProductoEstadistica.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoProductoEstadistica.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=ProductoEstadisticaConstantesFunciones.getTiposSeleccionarProductoEstadistica(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=ProductoEstadisticaConstantesFunciones.getTiposSeleccionarProductoEstadistica(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoProductoEstadistica.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoProductoEstadistica.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=ProductoEstadisticaConstantesFunciones.getTiposSeleccionarProductoEstadistica(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoProductoEstadistica.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoProductoEstadistica.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualProductoEstadistica()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_bodegaFK_IdBodegaProductoEstadistica.getSelectedItem()!=null){this.id_bodegaFK_IdBodega=((Bodega)this.jComboBoxid_bodegaFK_IdBodegaProductoEstadistica.getSelectedItem()).getId();}
		if(this.jComboBoxid_productoFK_IdProductoProductoEstadistica.getSelectedItem()!=null){this.id_productoFK_IdProducto=((Producto)this.jComboBoxid_productoFK_IdProductoProductoEstadistica.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasProductoEstadistica(Boolean esInicializar) throws Exception {				
		if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualProductoEstadistica();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaProductoEstadistica() throws Exception {
		this.inicializarActualizarBindingTablaProductoEstadistica(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByProductoEstadistica() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByProductoEstadistica.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByProductoEstadistica.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByProductoEstadistica.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByProductoEstadistica.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByProductoEstadistica.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosProductoEstadisticaOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadisticaOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByProductoEstadistica.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByProductoEstadistica.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByProductoEstadistica.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaProductoEstadistica(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=productoestadisticaLogic.getProductoEstadisticas().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=productoestadisticas.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosProductoEstadistica.setModel(new ProductoEstadisticaModel(this.productoestadisticaLogic.getProductoEstadisticas(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosProductoEstadistica.setModel(new ProductoEstadisticaModel(this.productoestadisticas,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByProductoEstadistica!=null && this.jInternalFrameOrderByProductoEstadistica.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByProductoEstadistica();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+ProductoEstadisticaConstantesFunciones.SCLASSWEBTITULO,productoestadisticaConstantesFunciones.resaltarSeleccionarProductoEstadistica,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+ProductoEstadisticaConstantesFunciones.SCLASSWEBTITULO,productoestadisticaConstantesFunciones.resaltarSeleccionarProductoEstadistica,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_ID));

		if(this.productoestadisticaConstantesFunciones.mostraridProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltaridProductoEstadistica,this.productoestadisticaConstantesFunciones.activaridProductoEstadistica,iSizeTabla,this,true,"idProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltaridProductoEstadistica,this.productoestadisticaConstantesFunciones.activaridProductoEstadistica,this,true,"idProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_IDEMPRESA));

		if(this.productoestadisticaConstantesFunciones.mostrarid_empresaProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.productoestadisticaConstantesFunciones.resaltarid_empresaProductoEstadistica,this,this.productoestadisticaConstantesFunciones.activarid_empresaProductoEstadistica,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.productoestadisticaConstantesFunciones.resaltarid_empresaProductoEstadistica,this,this.productoestadisticaConstantesFunciones.activarid_empresaProductoEstadistica,false,"id_empresaProductoEstadistica","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.productoestadisticaConstantesFunciones.mostrarid_sucursalProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.productoestadisticaConstantesFunciones.resaltarid_sucursalProductoEstadistica,this,this.productoestadisticaConstantesFunciones.activarid_sucursalProductoEstadistica,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.productoestadisticaConstantesFunciones.resaltarid_sucursalProductoEstadistica,this,this.productoestadisticaConstantesFunciones.activarid_sucursalProductoEstadistica,false,"id_sucursalProductoEstadistica","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_IDBODEGA));

		if(this.productoestadisticaConstantesFunciones.mostrarid_bodegaProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_IDBODEGA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegasForeignKey,this.productoestadisticaConstantesFunciones.resaltarid_bodegaProductoEstadistica,this,this.productoestadisticaConstantesFunciones.activarid_bodegaProductoEstadistica,iSizeTabla));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegasForeignKey,this.productoestadisticaConstantesFunciones.resaltarid_bodegaProductoEstadistica,this,this.productoestadisticaConstantesFunciones.activarid_bodegaProductoEstadistica,true,"id_bodegaProductoEstadistica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_IDPRODUCTO));

		if(this.productoestadisticaConstantesFunciones.mostrarid_productoProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_IDPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ProductoTableCell(this.productosForeignKey,this.productoestadisticaConstantesFunciones.resaltarid_productoProductoEstadistica,this,this.productoestadisticaConstantesFunciones.activarid_productoProductoEstadistica,iSizeTabla));
			tableColumn.setCellEditor(new ProductoTableCell(this.productosForeignKey,this.productoestadisticaConstantesFunciones.resaltarid_productoProductoEstadistica,this,this.productoestadisticaConstantesFunciones.activarid_productoProductoEstadistica,true,"id_productoProductoEstadistica","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOMPRA));

		if(this.productoestadisticaConstantesFunciones.mostrarprecio_ultima_compraProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOMPRA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_compraProductoEstadistica,this.productoestadisticaConstantesFunciones.activarprecio_ultima_compraProductoEstadistica,iSizeTabla,this,true,"precio_ultima_compraProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_compraProductoEstadistica,this.productoestadisticaConstantesFunciones.activarprecio_ultima_compraProductoEstadistica,this,true,"precio_ultima_compraProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAVENTA));

		if(this.productoestadisticaConstantesFunciones.mostrarprecio_ultima_ventaProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAVENTA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_ventaProductoEstadistica,this.productoestadisticaConstantesFunciones.activarprecio_ultima_ventaProductoEstadistica,iSizeTabla,this,true,"precio_ultima_ventaProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_ventaProductoEstadistica,this.productoestadisticaConstantesFunciones.activarprecio_ultima_ventaProductoEstadistica,this,true,"precio_ultima_ventaProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOTIZACION));

		if(this.productoestadisticaConstantesFunciones.mostrarprecio_ultima_cotizacionProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOTIZACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_cotizacionProductoEstadistica,this.productoestadisticaConstantesFunciones.activarprecio_ultima_cotizacionProductoEstadistica,iSizeTabla,this,true,"precio_ultima_cotizacionProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_cotizacionProductoEstadistica,this.productoestadisticaConstantesFunciones.activarprecio_ultima_cotizacionProductoEstadistica,this,true,"precio_ultima_cotizacionProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAPROFORMA));

		if(this.productoestadisticaConstantesFunciones.mostrarprecio_ultima_proformaProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAPROFORMA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_proformaProductoEstadistica,this.productoestadisticaConstantesFunciones.activarprecio_ultima_proformaProductoEstadistica,iSizeTabla,this,true,"precio_ultima_proformaProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_proformaProductoEstadistica,this.productoestadisticaConstantesFunciones.activarprecio_ultima_proformaProductoEstadistica,this,true,"precio_ultima_proformaProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE));

		if(this.productoestadisticaConstantesFunciones.mostrarcantidad_disponibleProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_disponibleProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_disponibleProductoEstadistica,iSizeTabla,this,true,"cantidad_disponibleProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_disponibleProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_disponibleProductoEstadistica,this,true,"cantidad_disponibleProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADRESERVADA));

		if(this.productoestadisticaConstantesFunciones.mostrarcantidad_reservadaProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADRESERVADA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_reservadaProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_reservadaProductoEstadistica,iSizeTabla,this,true,"cantidad_reservadaProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_reservadaProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_reservadaProductoEstadistica,this,true,"cantidad_reservadaProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDEMANDA));

		if(this.productoestadisticaConstantesFunciones.mostrarcantidad_demandaProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDEMANDA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_demandaProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_demandaProductoEstadistica,iSizeTabla,this,true,"cantidad_demandaProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_demandaProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_demandaProductoEstadistica,this,true,"cantidad_demandaProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO));

		if(this.productoestadisticaConstantesFunciones.mostrarcantidad_maximoProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_maximoProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_maximoProductoEstadistica,iSizeTabla,this,true,"cantidad_maximoProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_maximoProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_maximoProductoEstadistica,this,true,"cantidad_maximoProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO));

		if(this.productoestadisticaConstantesFunciones.mostrarcantidad_minimoProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_minimoProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_minimoProductoEstadistica,iSizeTabla,this,true,"cantidad_minimoProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_minimoProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_minimoProductoEstadistica,this,true,"cantidad_minimoProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADFISICA));

		if(this.productoestadisticaConstantesFunciones.mostrarcantidad_fisicaProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADFISICA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_fisicaProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_fisicaProductoEstadistica,iSizeTabla,this,true,"cantidad_fisicaProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_fisicaProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_fisicaProductoEstadistica,this,true,"cantidad_fisicaProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADORDENCOMPRA));

		if(this.productoestadisticaConstantesFunciones.mostrarcantidad_orden_compraProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADORDENCOMPRA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_orden_compraProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_orden_compraProductoEstadistica,iSizeTabla,this,true,"cantidad_orden_compraProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_orden_compraProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_orden_compraProductoEstadistica,this,true,"cantidad_orden_compraProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADPEDIDA));

		if(this.productoestadisticaConstantesFunciones.mostrarcantidad_pedidaProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADPEDIDA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_pedidaProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_pedidaProductoEstadistica,iSizeTabla,this,true,"cantidad_pedidaProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_pedidaProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_pedidaProductoEstadistica,this,true,"cantidad_pedidaProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADREQUISICION));

		if(this.productoestadisticaConstantesFunciones.mostrarcantidad_requisicionProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADREQUISICION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_requisicionProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_requisicionProductoEstadistica,iSizeTabla,this,true,"cantidad_requisicionProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarcantidad_requisicionProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcantidad_requisicionProductoEstadistica,this,true,"cantidad_requisicionProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO));

		if(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_ingresoProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_ingresoProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_ingresoProductoEstadistica,iSizeTabla,this,true,"fecha_ultima_ingresoProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_ingresoProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_ingresoProductoEstadistica,this,true,"fecha_ultima_ingresoProductoEstadistica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO));

		if(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_egresoProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_egresoProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_egresoProductoEstadistica,iSizeTabla,this,true,"fecha_ultima_egresoProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_egresoProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_egresoProductoEstadistica,this,true,"fecha_ultima_egresoProductoEstadistica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION));

		if(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_produccionProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_produccionProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_produccionProductoEstadistica,iSizeTabla,this,true,"fecha_ultima_produccionProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_produccionProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_produccionProductoEstadistica,this,true,"fecha_ultima_produccionProductoEstadistica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA));

		if(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_compraProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_compraProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_compraProductoEstadistica,iSizeTabla,this,true,"fecha_ultima_compraProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_compraProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_compraProductoEstadistica,this,true,"fecha_ultima_compraProductoEstadistica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA));

		if(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_ventaProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_ventaProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_ventaProductoEstadistica,iSizeTabla,this,true,"fecha_ultima_ventaProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_ventaProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_ventaProductoEstadistica,this,true,"fecha_ultima_ventaProductoEstadistica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION));

		if(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_devolucionProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_devolucionProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_devolucionProductoEstadistica,iSizeTabla,this,true,"fecha_ultima_devolucionProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_devolucionProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_devolucionProductoEstadistica,this,true,"fecha_ultima_devolucionProductoEstadistica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA));

		if(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_orden_compraProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_orden_compraProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_orden_compraProductoEstadistica,iSizeTabla,this,true,"fecha_ultima_orden_compraProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_orden_compraProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_orden_compraProductoEstadistica,this,true,"fecha_ultima_orden_compraProductoEstadistica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO));

		if(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_pedidoProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_pedidoProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_pedidoProductoEstadistica,iSizeTabla,this,true,"fecha_ultima_pedidoProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_pedidoProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_pedidoProductoEstadistica,this,true,"fecha_ultima_pedidoProductoEstadistica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION));

		if(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_requisicionProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_requisicionProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_requisicionProductoEstadistica,iSizeTabla,this,true,"fecha_ultima_requisicionProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_requisicionProductoEstadistica,this.productoestadisticaConstantesFunciones.activarfecha_ultima_requisicionProductoEstadistica,this,true,"fecha_ultima_requisicionProductoEstadistica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_TOTALINGRESO));

		if(this.productoestadisticaConstantesFunciones.mostrartotal_ingresoProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_TOTALINGRESO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltartotal_ingresoProductoEstadistica,this.productoestadisticaConstantesFunciones.activartotal_ingresoProductoEstadistica,iSizeTabla,this,true,"total_ingresoProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltartotal_ingresoProductoEstadistica,this.productoestadisticaConstantesFunciones.activartotal_ingresoProductoEstadistica,this,true,"total_ingresoProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_TOTALEGRESO));

		if(this.productoestadisticaConstantesFunciones.mostrartotal_egresoProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_TOTALEGRESO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltartotal_egresoProductoEstadistica,this.productoestadisticaConstantesFunciones.activartotal_egresoProductoEstadistica,iSizeTabla,this,true,"total_egresoProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltartotal_egresoProductoEstadistica,this.productoestadisticaConstantesFunciones.activartotal_egresoProductoEstadistica,this,true,"total_egresoProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_TOTALCOMPRA));

		if(this.productoestadisticaConstantesFunciones.mostrartotal_compraProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_TOTALCOMPRA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltartotal_compraProductoEstadistica,this.productoestadisticaConstantesFunciones.activartotal_compraProductoEstadistica,iSizeTabla,this,true,"total_compraProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltartotal_compraProductoEstadistica,this.productoestadisticaConstantesFunciones.activartotal_compraProductoEstadistica,this,true,"total_compraProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_TOTALVENTA));

		if(this.productoestadisticaConstantesFunciones.mostrartotal_ventaProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_TOTALVENTA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltartotal_ventaProductoEstadistica,this.productoestadisticaConstantesFunciones.activartotal_ventaProductoEstadistica,iSizeTabla,this,true,"total_ventaProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltartotal_ventaProductoEstadistica,this.productoestadisticaConstantesFunciones.activartotal_ventaProductoEstadistica,this,true,"total_ventaProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_TOTALPRODUCIDO));

		if(this.productoestadisticaConstantesFunciones.mostrartotal_producidoProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_TOTALPRODUCIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltartotal_producidoProductoEstadistica,this.productoestadisticaConstantesFunciones.activartotal_producidoProductoEstadistica,iSizeTabla,this,true,"total_producidoProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltartotal_producidoProductoEstadistica,this.productoestadisticaConstantesFunciones.activartotal_producidoProductoEstadistica,this,true,"total_producidoProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_TOTALDEVUELTO));

		if(this.productoestadisticaConstantesFunciones.mostrartotal_devueltoProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_TOTALDEVUELTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltartotal_devueltoProductoEstadistica,this.productoestadisticaConstantesFunciones.activartotal_devueltoProductoEstadistica,iSizeTabla,this,true,"total_devueltoProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltartotal_devueltoProductoEstadistica,this.productoestadisticaConstantesFunciones.activartotal_devueltoProductoEstadistica,this,true,"total_devueltoProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_COSTOULTIMO));

		if(this.productoestadisticaConstantesFunciones.mostrarcosto_ultimoProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_COSTOULTIMO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarcosto_ultimoProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcosto_ultimoProductoEstadistica,iSizeTabla,this,true,"costo_ultimoProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarcosto_ultimoProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcosto_ultimoProductoEstadistica,this,true,"costo_ultimoProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_COSTOTOTAL));

		if(this.productoestadisticaConstantesFunciones.mostrarcosto_totalProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_COSTOTOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarcosto_totalProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcosto_totalProductoEstadistica,iSizeTabla,this,true,"costo_totalProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarcosto_totalProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcosto_totalProductoEstadistica,this,true,"costo_totalProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,ProductoEstadisticaConstantesFunciones.LABEL_COSTOPRODUCCION));

		if(this.productoestadisticaConstantesFunciones.mostrarcosto_produccionProductoEstadistica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoEstadisticaConstantesFunciones.LABEL_COSTOPRODUCCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoestadisticaConstantesFunciones.resaltarcosto_produccionProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcosto_produccionProductoEstadistica,iSizeTabla,this,true,"costo_produccionProductoEstadistica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoestadisticaConstantesFunciones.resaltarcosto_produccionProductoEstadistica,this.productoestadisticaConstantesFunciones.activarcosto_produccionProductoEstadistica,this,true,"costo_produccionProductoEstadistica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoEstadisticaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.productoestadisticaSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.productoestadisticaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.productoestadisticaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosProductoEstadistica.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.productoestadisticaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.productoestadisticaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosProductoEstadistica.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarProductoEstadistica && this.isPermisoGuardarCambiosProductoEstadistica) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.productoestadisticaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.productoestadisticaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosProductoEstadistica.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosProductoEstadistica.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarProductoEstadistica && this.isPermisoGuardarCambiosProductoEstadistica) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarProductoEstadistica && this.isPermisoGuardarCambiosProductoEstadistica) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosProductoEstadistica.moveColumn(this.jTableDatosProductoEstadistica.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosProductoEstadistica.moveColumn(this.jTableDatosProductoEstadistica.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosProductoEstadistica.moveColumn(this.jTableDatosProductoEstadistica.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosProductoEstadistica.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosProductoEstadistica.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosProductoEstadistica,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosProductoEstadistica.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosProductoEstadistica.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosProductoEstadistica.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosProductoEstadistica.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosProductoEstadistica.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=productoestadisticaLogic.getProductoEstadisticas().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=productoestadisticas.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosProductoEstadistica.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosProductoEstadistica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosProductoEstadistica();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoProductoEstadistica=false;
					
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			
				if(this.productoestadisticaSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormProductoEstadistica==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosProductoEstadistica.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosProductoEstadistica.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.productoestadistica.getsType().equals("DUPLICADO")
				   || this.productoestadistica.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoProductoEstadistica=true;
				
				} else {
					this.isEsNuevoProductoEstadistica=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
					if(this.productoestadistica.getId()>=0 && !this.productoestadistica.getIsNew()) {						
						this.isEsNuevoProductoEstadistica=false;
						
					} else {
						this.isEsNuevoProductoEstadistica=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoProductoEstadistica(esRelaciones);						
				
				this.seleccionarProductoEstadistica(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.productoestadistica.getId()<0) {
					this.isEsNuevoProductoEstadistica=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarProductoEstadistica(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarProductoEstadistica(evt,rowIndex);
				}	
				
				if(this.productoestadisticaSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion ProductoEstadistica: " + this.dDif); 
					}
				}								
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarProductoEstadistica(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.productoestadistica)) {
					if(this.productoestadistica.getId()>0) {
						this.productoestadistica.setIsDeleted(true);
						
						this.productoestadisticasEliminados.add(this.productoestadistica);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.productoestadisticaLogic.getProductoEstadisticas().remove(this.productoestadistica);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.productoestadisticas.remove(this.productoestadistica);				
					}
					
					
					((ProductoEstadisticaModel) this.jTableDatosProductoEstadistica.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaProductoEstadistica(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarProductoEstadistica(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoProductoEstadistica) {
			
			if(this.jInternalFrameDetalleFormProductoEstadistica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosProductoEstadistica.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosProductoEstadistica.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioProductoEstadistica(this.productoestadistica);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.productoestadisticaConstantesFunciones.cargarid_empresaProductoEstadistica || this.productoestadisticaConstantesFunciones.event_dependid_empresaProductoEstadistica) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.productoestadistica.getid_empresa());
									//this.inicializarActualizarBindingProductoEstadistica(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(productoestadistica.getEmpresa()!=null) {
							this.empresasForeignKey.add(productoestadistica.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.productoestadistica.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.productoestadisticaConstantesFunciones.cargarid_sucursalProductoEstadistica || this.productoestadisticaConstantesFunciones.event_dependid_sucursalProductoEstadistica) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.productoestadistica.getid_sucursal());
									//this.inicializarActualizarBindingProductoEstadistica(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(productoestadistica.getSucursal()!=null) {
							this.sucursalsForeignKey.add(productoestadistica.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.productoestadistica.getid_sucursal(),false,"Formulario");

					//Bodega
					if(!this.productoestadisticaConstantesFunciones.cargarid_bodegaProductoEstadistica || this.productoestadisticaConstantesFunciones.event_dependid_bodegaProductoEstadistica) {
						//this.cargarCombosBodegasForeignKeyLista(" where id="+this.productoestadistica.getid_bodega());
									//this.inicializarActualizarBindingProductoEstadistica(false,false);
						this.bodegasForeignKey=new ArrayList<Bodega>();

						if(productoestadistica.getBodega()!=null) {
							this.bodegasForeignKey.add(productoestadistica.getBodega());
						}

						this.addItemDefectoCombosForeignKeyBodega();
						this.cargarCombosFrameBodegasForeignKey("Todos");
					}
					this.setActualBodegaForeignKey(this.productoestadistica.getid_bodega(),false,"Formulario");

					//Producto
					if(!this.productoestadisticaConstantesFunciones.cargarid_productoProductoEstadistica || this.productoestadisticaConstantesFunciones.event_dependid_productoProductoEstadistica) {
						//this.cargarCombosProductosForeignKeyLista(" where id="+this.productoestadistica.getid_producto());
									//this.inicializarActualizarBindingProductoEstadistica(false,false);
						this.productosForeignKey=new ArrayList<Producto>();

						if(productoestadistica.getProducto()!=null) {
							this.productosForeignKey.add(productoestadistica.getProducto());
						}

						this.addItemDefectoCombosForeignKeyProducto();
						this.cargarCombosFrameProductosForeignKey("Todos");
					}
					this.setActualProductoForeignKey(this.productoestadistica.getid_producto(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesProductoEstadistica("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesProductoEstadistica(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualProductoEstadistica() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoProductoEstadistica(ProductoEstadistica productoestadistica) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoProductoEstadistica(productoestadistica,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoProductoEstadistica(ProductoEstadistica productoestadistica,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioProductoEstadistica(productoestadistica);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyProductoEstadistica(productoestadistica,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyProductoEstadistica(productoestadistica);
	}
	
	public void setVariablesObjetoActualToFormularioProductoEstadistica(ProductoEstadistica productoestadistica) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormProductoEstadistica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormProductoEstadistica.jLabelidProductoEstadistica.setText(productoestadistica.getId().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_compraProductoEstadistica.setText(productoestadistica.getprecio_ultima_compra().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_ventaProductoEstadistica.setText(productoestadistica.getprecio_ultima_venta().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_cotizacionProductoEstadistica.setText(productoestadistica.getprecio_ultima_cotizacion().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_proformaProductoEstadistica.setText(productoestadistica.getprecio_ultima_proforma().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_disponibleProductoEstadistica.setText(productoestadistica.getcantidad_disponible().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_reservadaProductoEstadistica.setText(productoestadistica.getcantidad_reservada().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_demandaProductoEstadistica.setText(productoestadistica.getcantidad_demanda().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_maximoProductoEstadistica.setText(productoestadistica.getcantidad_maximo().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_minimoProductoEstadistica.setText(productoestadistica.getcantidad_minimo().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_fisicaProductoEstadistica.setText(productoestadistica.getcantidad_fisica().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_orden_compraProductoEstadistica.setText(productoestadistica.getcantidad_orden_compra().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_pedidaProductoEstadistica.setText(productoestadistica.getcantidad_pedida().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_requisicionProductoEstadistica.setText(productoestadistica.getcantidad_requisicion().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ingresoProductoEstadistica.setDate(productoestadistica.getfecha_ultima_ingreso());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_egresoProductoEstadistica.setDate(productoestadistica.getfecha_ultima_egreso());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_produccionProductoEstadistica.setDate(productoestadistica.getfecha_ultima_produccion());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_compraProductoEstadistica.setDate(productoestadistica.getfecha_ultima_compra());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ventaProductoEstadistica.setDate(productoestadistica.getfecha_ultima_venta());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_devolucionProductoEstadistica.setDate(productoestadistica.getfecha_ultima_devolucion());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_orden_compraProductoEstadistica.setDate(productoestadistica.getfecha_ultima_orden_compra());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_pedidoProductoEstadistica.setDate(productoestadistica.getfecha_ultima_pedido());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_requisicionProductoEstadistica.setDate(productoestadistica.getfecha_ultima_requisicion());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ingresoProductoEstadistica.setText(productoestadistica.gettotal_ingreso().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_egresoProductoEstadistica.setText(productoestadistica.gettotal_egreso().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_compraProductoEstadistica.setText(productoestadistica.gettotal_compra().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ventaProductoEstadistica.setText(productoestadistica.gettotal_venta().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_producidoProductoEstadistica.setText(productoestadistica.gettotal_producido().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_devueltoProductoEstadistica.setText(productoestadistica.gettotal_devuelto().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_ultimoProductoEstadistica.setText(productoestadistica.getcosto_ultimo().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_totalProductoEstadistica.setText(productoestadistica.getcosto_total().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_produccionProductoEstadistica.setText(productoestadistica.getcosto_produccion().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,ProductoEstadistica productoestadisticaLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,productoestadisticaLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,ProductoEstadistica productoestadisticaLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				productoestadisticaLocal=this.productoestadistica;
			} else {
				productoestadisticaLocal=this.productoestadisticaAnterior;
			}
		}
		
		if(this.permiteMantenimiento(productoestadisticaLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoProductoEstadistica(productoestadisticaLocal,true);
					
					if(productoestadisticaSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(productoestadisticaLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(productoestadisticaLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoProductoEstadistica(ProductoEstadistica productoestadistica,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualProductoEstadistica(productoestadistica,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(productoestadistica);
	}
	
	public void setVariablesFormularioToObjetoActualProductoEstadistica(ProductoEstadistica productoestadistica,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualProductoEstadistica(productoestadistica,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualProductoEstadistica(ProductoEstadistica productoestadistica,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormProductoEstadistica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormProductoEstadistica.jLabelidProductoEstadistica.getText()==null || this.jInternalFrameDetalleFormProductoEstadistica.jLabelidProductoEstadistica.getText()=="" || this.jInternalFrameDetalleFormProductoEstadistica.jLabelidProductoEstadistica.getText()=="Id") {
				this.jInternalFrameDetalleFormProductoEstadistica.jLabelidProductoEstadistica.setText("0");
			}

			if(conColumnasBase) {productoestadistica.setId(Long.parseLong(this.jInternalFrameDetalleFormProductoEstadistica.jLabelidProductoEstadistica.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelIdProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setprecio_ultima_compra(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_compraProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOMPRA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelprecio_ultima_compraProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setprecio_ultima_venta(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_ventaProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAVENTA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelprecio_ultima_ventaProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setprecio_ultima_cotizacion(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_cotizacionProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOTIZACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelprecio_ultima_cotizacionProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setprecio_ultima_proforma(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_proformaProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAPROFORMA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelprecio_ultima_proformaProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setcantidad_disponible(Integer.parseInt(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_disponibleProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_disponibleProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setcantidad_reservada(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_reservadaProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADRESERVADA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_reservadaProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setcantidad_demanda(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_demandaProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDEMANDA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_demandaProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setcantidad_maximo(Integer.parseInt(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_maximoProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_maximoProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setcantidad_minimo(Integer.parseInt(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_minimoProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_minimoProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setcantidad_fisica(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_fisicaProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADFISICA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_fisicaProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setcantidad_orden_compra(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_orden_compraProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADORDENCOMPRA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_orden_compraProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setcantidad_pedida(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_pedidaProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADPEDIDA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_pedidaProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setcantidad_requisicion(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_requisicionProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADREQUISICION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcantidad_requisicionProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setfecha_ultima_ingreso(this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ingresoProductoEstadistica.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_ingresoProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setfecha_ultima_egreso(this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_egresoProductoEstadistica.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_egresoProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setfecha_ultima_produccion(this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_produccionProductoEstadistica.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_produccionProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setfecha_ultima_compra(this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_compraProductoEstadistica.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_compraProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setfecha_ultima_venta(this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ventaProductoEstadistica.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_ventaProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setfecha_ultima_devolucion(this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_devolucionProductoEstadistica.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_devolucionProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setfecha_ultima_orden_compra(this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_orden_compraProductoEstadistica.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_orden_compraProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setfecha_ultima_pedido(this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_pedidoProductoEstadistica.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_pedidoProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setfecha_ultima_requisicion(this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_requisicionProductoEstadistica.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelfecha_ultima_requisicionProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.settotal_ingreso(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ingresoProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_TOTALINGRESO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_ingresoProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.settotal_egreso(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_egresoProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_TOTALEGRESO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_egresoProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.settotal_compra(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_compraProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_TOTALCOMPRA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_compraProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.settotal_venta(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ventaProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_TOTALVENTA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_ventaProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.settotal_producido(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_producidoProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_TOTALPRODUCIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_producidoProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.settotal_devuelto(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_devueltoProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_TOTALDEVUELTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabeltotal_devueltoProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setcosto_ultimo(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_ultimoProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_COSTOULTIMO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcosto_ultimoProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setcosto_total(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_totalProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_COSTOTOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcosto_totalProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			productoestadistica.setcosto_produccion(Double.parseDouble(this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_produccionProductoEstadistica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoEstadisticaConstantesFunciones.LABEL_COSTOPRODUCCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProductoEstadistica.jLabelcosto_produccionProductoEstadistica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualProductoEstadistica(ProductoEstadistica productoestadisticaBean,ProductoEstadistica productoestadistica,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && productoestadisticaBean.getid_bodega()!=null && !productoestadisticaBean.getid_bodega().equals(-1L))) {productoestadistica.setid_bodega(productoestadisticaBean.getid_bodega());}
			if(conDefault || (!conDefault && productoestadisticaBean.getid_producto()!=null && !productoestadisticaBean.getid_producto().equals(-1L))) {productoestadistica.setid_producto(productoestadisticaBean.getid_producto());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosProductoEstadistica(ProductoEstadistica productoestadisticaOrigen,ProductoEstadistica productoestadistica,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && productoestadisticaOrigen.getId()!=null && !productoestadisticaOrigen.getId().equals(0L))) {productoestadistica.setId(productoestadisticaOrigen.getId());}}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getid_bodega()!=null && !productoestadisticaOrigen.getid_bodega().equals(-1L))) {productoestadistica.setid_bodega(productoestadisticaOrigen.getid_bodega());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getid_producto()!=null && !productoestadisticaOrigen.getid_producto().equals(-1L))) {productoestadistica.setid_producto(productoestadisticaOrigen.getid_producto());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getprecio_ultima_compra()!=null && !productoestadisticaOrigen.getprecio_ultima_compra().equals(0.0))) {productoestadistica.setprecio_ultima_compra(productoestadisticaOrigen.getprecio_ultima_compra());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getprecio_ultima_venta()!=null && !productoestadisticaOrigen.getprecio_ultima_venta().equals(0.0))) {productoestadistica.setprecio_ultima_venta(productoestadisticaOrigen.getprecio_ultima_venta());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getprecio_ultima_cotizacion()!=null && !productoestadisticaOrigen.getprecio_ultima_cotizacion().equals(0.0))) {productoestadistica.setprecio_ultima_cotizacion(productoestadisticaOrigen.getprecio_ultima_cotizacion());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getprecio_ultima_proforma()!=null && !productoestadisticaOrigen.getprecio_ultima_proforma().equals(0.0))) {productoestadistica.setprecio_ultima_proforma(productoestadisticaOrigen.getprecio_ultima_proforma());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getcantidad_disponible()!=null && !productoestadisticaOrigen.getcantidad_disponible().equals(0))) {productoestadistica.setcantidad_disponible(productoestadisticaOrigen.getcantidad_disponible());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getcantidad_reservada()!=null && !productoestadisticaOrigen.getcantidad_reservada().equals(0.0))) {productoestadistica.setcantidad_reservada(productoestadisticaOrigen.getcantidad_reservada());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getcantidad_demanda()!=null && !productoestadisticaOrigen.getcantidad_demanda().equals(0.0))) {productoestadistica.setcantidad_demanda(productoestadisticaOrigen.getcantidad_demanda());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getcantidad_maximo()!=null && !productoestadisticaOrigen.getcantidad_maximo().equals(0))) {productoestadistica.setcantidad_maximo(productoestadisticaOrigen.getcantidad_maximo());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getcantidad_minimo()!=null && !productoestadisticaOrigen.getcantidad_minimo().equals(0))) {productoestadistica.setcantidad_minimo(productoestadisticaOrigen.getcantidad_minimo());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getcantidad_fisica()!=null && !productoestadisticaOrigen.getcantidad_fisica().equals(0.0))) {productoestadistica.setcantidad_fisica(productoestadisticaOrigen.getcantidad_fisica());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getcantidad_orden_compra()!=null && !productoestadisticaOrigen.getcantidad_orden_compra().equals(0.0))) {productoestadistica.setcantidad_orden_compra(productoestadisticaOrigen.getcantidad_orden_compra());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getcantidad_pedida()!=null && !productoestadisticaOrigen.getcantidad_pedida().equals(0.0))) {productoestadistica.setcantidad_pedida(productoestadisticaOrigen.getcantidad_pedida());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getcantidad_requisicion()!=null && !productoestadisticaOrigen.getcantidad_requisicion().equals(0.0))) {productoestadistica.setcantidad_requisicion(productoestadisticaOrigen.getcantidad_requisicion());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getfecha_ultima_ingreso()!=null && !productoestadisticaOrigen.getfecha_ultima_ingreso().equals(new Date()))) {productoestadistica.setfecha_ultima_ingreso(productoestadisticaOrigen.getfecha_ultima_ingreso());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getfecha_ultima_egreso()!=null && !productoestadisticaOrigen.getfecha_ultima_egreso().equals(new Date()))) {productoestadistica.setfecha_ultima_egreso(productoestadisticaOrigen.getfecha_ultima_egreso());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getfecha_ultima_produccion()!=null && !productoestadisticaOrigen.getfecha_ultima_produccion().equals(new Date()))) {productoestadistica.setfecha_ultima_produccion(productoestadisticaOrigen.getfecha_ultima_produccion());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getfecha_ultima_compra()!=null && !productoestadisticaOrigen.getfecha_ultima_compra().equals(new Date()))) {productoestadistica.setfecha_ultima_compra(productoestadisticaOrigen.getfecha_ultima_compra());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getfecha_ultima_venta()!=null && !productoestadisticaOrigen.getfecha_ultima_venta().equals(new Date()))) {productoestadistica.setfecha_ultima_venta(productoestadisticaOrigen.getfecha_ultima_venta());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getfecha_ultima_devolucion()!=null && !productoestadisticaOrigen.getfecha_ultima_devolucion().equals(new Date()))) {productoestadistica.setfecha_ultima_devolucion(productoestadisticaOrigen.getfecha_ultima_devolucion());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getfecha_ultima_orden_compra()!=null && !productoestadisticaOrigen.getfecha_ultima_orden_compra().equals(new Date()))) {productoestadistica.setfecha_ultima_orden_compra(productoestadisticaOrigen.getfecha_ultima_orden_compra());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getfecha_ultima_pedido()!=null && !productoestadisticaOrigen.getfecha_ultima_pedido().equals(new Date()))) {productoestadistica.setfecha_ultima_pedido(productoestadisticaOrigen.getfecha_ultima_pedido());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getfecha_ultima_requisicion()!=null && !productoestadisticaOrigen.getfecha_ultima_requisicion().equals(new Date()))) {productoestadistica.setfecha_ultima_requisicion(productoestadisticaOrigen.getfecha_ultima_requisicion());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.gettotal_ingreso()!=null && !productoestadisticaOrigen.gettotal_ingreso().equals(0.0))) {productoestadistica.settotal_ingreso(productoestadisticaOrigen.gettotal_ingreso());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.gettotal_egreso()!=null && !productoestadisticaOrigen.gettotal_egreso().equals(0.0))) {productoestadistica.settotal_egreso(productoestadisticaOrigen.gettotal_egreso());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.gettotal_compra()!=null && !productoestadisticaOrigen.gettotal_compra().equals(0.0))) {productoestadistica.settotal_compra(productoestadisticaOrigen.gettotal_compra());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.gettotal_venta()!=null && !productoestadisticaOrigen.gettotal_venta().equals(0.0))) {productoestadistica.settotal_venta(productoestadisticaOrigen.gettotal_venta());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.gettotal_producido()!=null && !productoestadisticaOrigen.gettotal_producido().equals(0.0))) {productoestadistica.settotal_producido(productoestadisticaOrigen.gettotal_producido());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.gettotal_devuelto()!=null && !productoestadisticaOrigen.gettotal_devuelto().equals(0.0))) {productoestadistica.settotal_devuelto(productoestadisticaOrigen.gettotal_devuelto());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getcosto_ultimo()!=null && !productoestadisticaOrigen.getcosto_ultimo().equals(0.0))) {productoestadistica.setcosto_ultimo(productoestadisticaOrigen.getcosto_ultimo());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getcosto_total()!=null && !productoestadisticaOrigen.getcosto_total().equals(0.0))) {productoestadistica.setcosto_total(productoestadisticaOrigen.getcosto_total());}
			if(conDefault || (!conDefault && productoestadisticaOrigen.getcosto_produccion()!=null && !productoestadisticaOrigen.getcosto_produccion().equals(0.0))) {productoestadistica.setcosto_produccion(productoestadisticaOrigen.getcosto_produccion());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioProductoEstadistica(ProductoEstadistica productoestadistica) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormProductoEstadistica.jLabelidProductoEstadistica.setText(productoestadistica.getId().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_compraProductoEstadistica.setText(productoestadistica.getprecio_ultima_compra().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_ventaProductoEstadistica.setText(productoestadistica.getprecio_ultima_venta().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_cotizacionProductoEstadistica.setText(productoestadistica.getprecio_ultima_cotizacion().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_proformaProductoEstadistica.setText(productoestadistica.getprecio_ultima_proforma().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_disponibleProductoEstadistica.setText(productoestadistica.getcantidad_disponible().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_reservadaProductoEstadistica.setText(productoestadistica.getcantidad_reservada().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_demandaProductoEstadistica.setText(productoestadistica.getcantidad_demanda().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_maximoProductoEstadistica.setText(productoestadistica.getcantidad_maximo().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_minimoProductoEstadistica.setText(productoestadistica.getcantidad_minimo().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_fisicaProductoEstadistica.setText(productoestadistica.getcantidad_fisica().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_orden_compraProductoEstadistica.setText(productoestadistica.getcantidad_orden_compra().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_pedidaProductoEstadistica.setText(productoestadistica.getcantidad_pedida().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_requisicionProductoEstadistica.setText(productoestadistica.getcantidad_requisicion().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ingresoProductoEstadistica.setDate(productoestadistica.getfecha_ultima_ingreso());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_egresoProductoEstadistica.setDate(productoestadistica.getfecha_ultima_egreso());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_produccionProductoEstadistica.setDate(productoestadistica.getfecha_ultima_produccion());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_compraProductoEstadistica.setDate(productoestadistica.getfecha_ultima_compra());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ventaProductoEstadistica.setDate(productoestadistica.getfecha_ultima_venta());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_devolucionProductoEstadistica.setDate(productoestadistica.getfecha_ultima_devolucion());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_orden_compraProductoEstadistica.setDate(productoestadistica.getfecha_ultima_orden_compra());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_pedidoProductoEstadistica.setDate(productoestadistica.getfecha_ultima_pedido());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_requisicionProductoEstadistica.setDate(productoestadistica.getfecha_ultima_requisicion());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ingresoProductoEstadistica.setText(productoestadistica.gettotal_ingreso().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_egresoProductoEstadistica.setText(productoestadistica.gettotal_egreso().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_compraProductoEstadistica.setText(productoestadistica.gettotal_compra().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ventaProductoEstadistica.setText(productoestadistica.gettotal_venta().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_producidoProductoEstadistica.setText(productoestadistica.gettotal_producido().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_devueltoProductoEstadistica.setText(productoestadistica.gettotal_devuelto().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_ultimoProductoEstadistica.setText(productoestadistica.getcosto_ultimo().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_totalProductoEstadistica.setText(productoestadistica.getcosto_total().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_produccionProductoEstadistica.setText(productoestadistica.getcosto_produccion().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioProductoEstadistica(ProductoEstadisticaBean productoestadisticaBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormProductoEstadistica.jLabelidProductoEstadistica.setText(productoestadisticaBean.getId().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_compraProductoEstadistica.setText(productoestadisticaBean.getprecio_ultima_compra().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_ventaProductoEstadistica.setText(productoestadisticaBean.getprecio_ultima_venta().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_cotizacionProductoEstadistica.setText(productoestadisticaBean.getprecio_ultima_cotizacion().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_proformaProductoEstadistica.setText(productoestadisticaBean.getprecio_ultima_proforma().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_disponibleProductoEstadistica.setText(productoestadisticaBean.getcantidad_disponible().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_reservadaProductoEstadistica.setText(productoestadisticaBean.getcantidad_reservada().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_demandaProductoEstadistica.setText(productoestadisticaBean.getcantidad_demanda().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_maximoProductoEstadistica.setText(productoestadisticaBean.getcantidad_maximo().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_minimoProductoEstadistica.setText(productoestadisticaBean.getcantidad_minimo().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_fisicaProductoEstadistica.setText(productoestadisticaBean.getcantidad_fisica().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_orden_compraProductoEstadistica.setText(productoestadisticaBean.getcantidad_orden_compra().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_pedidaProductoEstadistica.setText(productoestadisticaBean.getcantidad_pedida().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_requisicionProductoEstadistica.setText(productoestadisticaBean.getcantidad_requisicion().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ingresoProductoEstadistica.setDate(productoestadisticaBean.getfecha_ultima_ingreso());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_egresoProductoEstadistica.setDate(productoestadisticaBean.getfecha_ultima_egreso());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_produccionProductoEstadistica.setDate(productoestadisticaBean.getfecha_ultima_produccion());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_compraProductoEstadistica.setDate(productoestadisticaBean.getfecha_ultima_compra());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ventaProductoEstadistica.setDate(productoestadisticaBean.getfecha_ultima_venta());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_devolucionProductoEstadistica.setDate(productoestadisticaBean.getfecha_ultima_devolucion());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_orden_compraProductoEstadistica.setDate(productoestadisticaBean.getfecha_ultima_orden_compra());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_pedidoProductoEstadistica.setDate(productoestadisticaBean.getfecha_ultima_pedido());
			this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_requisicionProductoEstadistica.setDate(productoestadisticaBean.getfecha_ultima_requisicion());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ingresoProductoEstadistica.setText(productoestadisticaBean.gettotal_ingreso().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_egresoProductoEstadistica.setText(productoestadisticaBean.gettotal_egreso().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_compraProductoEstadistica.setText(productoestadisticaBean.gettotal_compra().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ventaProductoEstadistica.setText(productoestadisticaBean.gettotal_venta().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_producidoProductoEstadistica.setText(productoestadisticaBean.gettotal_producido().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_devueltoProductoEstadistica.setText(productoestadisticaBean.gettotal_devuelto().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_ultimoProductoEstadistica.setText(productoestadisticaBean.getcosto_ultimo().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_totalProductoEstadistica.setText(productoestadisticaBean.getcosto_total().toString());
			this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_produccionProductoEstadistica.setText(productoestadisticaBean.getcosto_produccion().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanProductoEstadistica(ProductoEstadisticaParameterReturnGeneral productoestadisticaReturnGeneral,ProductoEstadisticaBean productoestadisticaBean,Boolean conDefault) throws Exception { 
		try {
			ProductoEstadistica productoestadisticaLocal=new ProductoEstadistica();
			
			productoestadisticaLocal=productoestadisticaReturnGeneral.getProductoEstadistica();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && productoestadisticaLocal.getId()!=null && !productoestadisticaLocal.getId().equals(0L))) {productoestadisticaBean.setId(productoestadisticaLocal.getId());}}
			if(conDefault || (!conDefault && productoestadisticaLocal.getid_bodega()!=null && !productoestadisticaLocal.getid_bodega().equals(-1L))) {productoestadisticaBean.setid_bodega(productoestadisticaLocal.getid_bodega());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getid_producto()!=null && !productoestadisticaLocal.getid_producto().equals(-1L))) {productoestadisticaBean.setid_producto(productoestadisticaLocal.getid_producto());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getprecio_ultima_compra()!=null && !productoestadisticaLocal.getprecio_ultima_compra().equals(0.0))) {productoestadisticaBean.setprecio_ultima_compra(productoestadisticaLocal.getprecio_ultima_compra());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getprecio_ultima_venta()!=null && !productoestadisticaLocal.getprecio_ultima_venta().equals(0.0))) {productoestadisticaBean.setprecio_ultima_venta(productoestadisticaLocal.getprecio_ultima_venta());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getprecio_ultima_cotizacion()!=null && !productoestadisticaLocal.getprecio_ultima_cotizacion().equals(0.0))) {productoestadisticaBean.setprecio_ultima_cotizacion(productoestadisticaLocal.getprecio_ultima_cotizacion());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getprecio_ultima_proforma()!=null && !productoestadisticaLocal.getprecio_ultima_proforma().equals(0.0))) {productoestadisticaBean.setprecio_ultima_proforma(productoestadisticaLocal.getprecio_ultima_proforma());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getcantidad_disponible()!=null && !productoestadisticaLocal.getcantidad_disponible().equals(0))) {productoestadisticaBean.setcantidad_disponible(productoestadisticaLocal.getcantidad_disponible());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getcantidad_reservada()!=null && !productoestadisticaLocal.getcantidad_reservada().equals(0.0))) {productoestadisticaBean.setcantidad_reservada(productoestadisticaLocal.getcantidad_reservada());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getcantidad_demanda()!=null && !productoestadisticaLocal.getcantidad_demanda().equals(0.0))) {productoestadisticaBean.setcantidad_demanda(productoestadisticaLocal.getcantidad_demanda());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getcantidad_maximo()!=null && !productoestadisticaLocal.getcantidad_maximo().equals(0))) {productoestadisticaBean.setcantidad_maximo(productoestadisticaLocal.getcantidad_maximo());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getcantidad_minimo()!=null && !productoestadisticaLocal.getcantidad_minimo().equals(0))) {productoestadisticaBean.setcantidad_minimo(productoestadisticaLocal.getcantidad_minimo());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getcantidad_fisica()!=null && !productoestadisticaLocal.getcantidad_fisica().equals(0.0))) {productoestadisticaBean.setcantidad_fisica(productoestadisticaLocal.getcantidad_fisica());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getcantidad_orden_compra()!=null && !productoestadisticaLocal.getcantidad_orden_compra().equals(0.0))) {productoestadisticaBean.setcantidad_orden_compra(productoestadisticaLocal.getcantidad_orden_compra());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getcantidad_pedida()!=null && !productoestadisticaLocal.getcantidad_pedida().equals(0.0))) {productoestadisticaBean.setcantidad_pedida(productoestadisticaLocal.getcantidad_pedida());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getcantidad_requisicion()!=null && !productoestadisticaLocal.getcantidad_requisicion().equals(0.0))) {productoestadisticaBean.setcantidad_requisicion(productoestadisticaLocal.getcantidad_requisicion());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getfecha_ultima_ingreso()!=null && !productoestadisticaLocal.getfecha_ultima_ingreso().equals(new Date()))) {productoestadisticaBean.setfecha_ultima_ingreso(productoestadisticaLocal.getfecha_ultima_ingreso());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getfecha_ultima_egreso()!=null && !productoestadisticaLocal.getfecha_ultima_egreso().equals(new Date()))) {productoestadisticaBean.setfecha_ultima_egreso(productoestadisticaLocal.getfecha_ultima_egreso());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getfecha_ultima_produccion()!=null && !productoestadisticaLocal.getfecha_ultima_produccion().equals(new Date()))) {productoestadisticaBean.setfecha_ultima_produccion(productoestadisticaLocal.getfecha_ultima_produccion());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getfecha_ultima_compra()!=null && !productoestadisticaLocal.getfecha_ultima_compra().equals(new Date()))) {productoestadisticaBean.setfecha_ultima_compra(productoestadisticaLocal.getfecha_ultima_compra());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getfecha_ultima_venta()!=null && !productoestadisticaLocal.getfecha_ultima_venta().equals(new Date()))) {productoestadisticaBean.setfecha_ultima_venta(productoestadisticaLocal.getfecha_ultima_venta());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getfecha_ultima_devolucion()!=null && !productoestadisticaLocal.getfecha_ultima_devolucion().equals(new Date()))) {productoestadisticaBean.setfecha_ultima_devolucion(productoestadisticaLocal.getfecha_ultima_devolucion());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getfecha_ultima_orden_compra()!=null && !productoestadisticaLocal.getfecha_ultima_orden_compra().equals(new Date()))) {productoestadisticaBean.setfecha_ultima_orden_compra(productoestadisticaLocal.getfecha_ultima_orden_compra());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getfecha_ultima_pedido()!=null && !productoestadisticaLocal.getfecha_ultima_pedido().equals(new Date()))) {productoestadisticaBean.setfecha_ultima_pedido(productoestadisticaLocal.getfecha_ultima_pedido());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getfecha_ultima_requisicion()!=null && !productoestadisticaLocal.getfecha_ultima_requisicion().equals(new Date()))) {productoestadisticaBean.setfecha_ultima_requisicion(productoestadisticaLocal.getfecha_ultima_requisicion());}
			if(conDefault || (!conDefault && productoestadisticaLocal.gettotal_ingreso()!=null && !productoestadisticaLocal.gettotal_ingreso().equals(0.0))) {productoestadisticaBean.settotal_ingreso(productoestadisticaLocal.gettotal_ingreso());}
			if(conDefault || (!conDefault && productoestadisticaLocal.gettotal_egreso()!=null && !productoestadisticaLocal.gettotal_egreso().equals(0.0))) {productoestadisticaBean.settotal_egreso(productoestadisticaLocal.gettotal_egreso());}
			if(conDefault || (!conDefault && productoestadisticaLocal.gettotal_compra()!=null && !productoestadisticaLocal.gettotal_compra().equals(0.0))) {productoestadisticaBean.settotal_compra(productoestadisticaLocal.gettotal_compra());}
			if(conDefault || (!conDefault && productoestadisticaLocal.gettotal_venta()!=null && !productoestadisticaLocal.gettotal_venta().equals(0.0))) {productoestadisticaBean.settotal_venta(productoestadisticaLocal.gettotal_venta());}
			if(conDefault || (!conDefault && productoestadisticaLocal.gettotal_producido()!=null && !productoestadisticaLocal.gettotal_producido().equals(0.0))) {productoestadisticaBean.settotal_producido(productoestadisticaLocal.gettotal_producido());}
			if(conDefault || (!conDefault && productoestadisticaLocal.gettotal_devuelto()!=null && !productoestadisticaLocal.gettotal_devuelto().equals(0.0))) {productoestadisticaBean.settotal_devuelto(productoestadisticaLocal.gettotal_devuelto());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getcosto_ultimo()!=null && !productoestadisticaLocal.getcosto_ultimo().equals(0.0))) {productoestadisticaBean.setcosto_ultimo(productoestadisticaLocal.getcosto_ultimo());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getcosto_total()!=null && !productoestadisticaLocal.getcosto_total().equals(0.0))) {productoestadisticaBean.setcosto_total(productoestadisticaLocal.getcosto_total());}
			if(conDefault || (!conDefault && productoestadisticaLocal.getcosto_produccion()!=null && !productoestadisticaLocal.getcosto_produccion().equals(0.0))) {productoestadisticaBean.setcosto_produccion(productoestadisticaLocal.getcosto_produccion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxProductoEstadisticaGenerico(Long idProductoEstadisticaSeleccionado,JComboBox jComboBoxProductoEstadistica,List<ProductoEstadistica> productoestadisticasLocal)throws Exception {
		try {
			ProductoEstadistica  productoestadisticaTemp=null;

			for(ProductoEstadistica productoestadisticaAux:productoestadisticasLocal) {
				if(productoestadisticaAux.getId()!=null && productoestadisticaAux.getId().equals(idProductoEstadisticaSeleccionado)) {
					productoestadisticaTemp=productoestadisticaAux;
					break;
				}
			}

			jComboBoxProductoEstadistica.setSelectedItem(productoestadisticaTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxProductoEstadisticaGenerico(JComboBox jComboBoxProductoEstadistica,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxProductoEstadistica.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxProductoEstadistica.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxProductoEstadistica.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxProductoEstadistica.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxProductoEstadistica.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxProductoEstadistica.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxProductoEstadistica.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxProductoEstadistica.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxProductoEstadistica.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxProductoEstadistica.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			productoestadistica=(ProductoEstadistica) productoestadisticaLogic.getProductoEstadisticas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			productoestadistica =(ProductoEstadistica) productoestadisticas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!productoestadistica.getIsNew() && !productoestadistica.getIsChanged() && !productoestadistica.getIsDeleted()) {
				sDescripcion=productoestadistica.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=productoestadistica.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!productoestadistica.getIsNew() && !productoestadistica.getIsChanged() && !productoestadistica.getIsDeleted()) {
				sDescripcion=productoestadistica.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=productoestadistica.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Bodega")) {
			//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
			if(!productoestadistica.getIsNew() && !productoestadistica.getIsChanged() && !productoestadistica.getIsDeleted()) {
				sDescripcion=productoestadistica.getbodega_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
				sDescripcion=productoestadistica.getbodega_descripcion();
			}
		}

		if(sTipo.equals("Producto")) {
			//sDescripcion=this.getActualProductoForeignKeyDescripcion((Long)value);
			if(!productoestadistica.getIsNew() && !productoestadistica.getIsChanged() && !productoestadistica.getIsDeleted()) {
				sDescripcion=productoestadistica.getproducto_descripcion();
			} else {
				//sDescripcion=this.getActualProductoForeignKeyDescripcion((Long)value);
				sDescripcion=productoestadistica.getproducto_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		ProductoEstadistica productoestadisticaRow=new ProductoEstadistica();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			productoestadisticaRow=(ProductoEstadistica) productoestadisticaLogic.getProductoEstadisticas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			productoestadisticaRow=(ProductoEstadistica) productoestadisticas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualProductoEstadistica(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoProductoEstadistica.setVisible((this.isVisibilidadCeldaNuevoProductoEstadistica && this.isPermisoNuevoProductoEstadistica));			
			this.jButtonDuplicarProductoEstadistica.setVisible((this.isVisibilidadCeldaDuplicarProductoEstadistica && this.isPermisoDuplicarProductoEstadistica));			
			this.jButtonCopiarProductoEstadistica.setVisible((this.isVisibilidadCeldaCopiarProductoEstadistica && this.isPermisoCopiarProductoEstadistica));
			this.jButtonVerFormProductoEstadistica.setVisible((this.isVisibilidadCeldaVerFormProductoEstadistica && this.isPermisoVerFormProductoEstadistica));
			
			this.jButtonAbrirOrderByProductoEstadistica.setVisible((this.isVisibilidadCeldaOrdenProductoEstadistica && this.isPermisoOrdenProductoEstadistica));			
			
			this.jButtonNuevoRelacionesProductoEstadistica.setVisible((this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica && this.isPermisoNuevoProductoEstadistica));			
			this.jButtonNuevoGuardarCambiosProductoEstadistica.setVisible((this.isVisibilidadCeldaNuevoProductoEstadistica && this.isPermisoNuevoProductoEstadistica && this.isPermisoGuardarCambiosProductoEstadistica));
			
			if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonModificarProductoEstadistica.setVisible((this.isVisibilidadCeldaModificarProductoEstadistica && this.isPermisoActualizarProductoEstadistica));	
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonActualizarProductoEstadistica.setVisible((this.isVisibilidadCeldaActualizarProductoEstadistica && this.isPermisoActualizarProductoEstadistica));	
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonEliminarProductoEstadistica.setVisible((this.isVisibilidadCeldaEliminarProductoEstadistica && this.isPermisoEliminarProductoEstadistica));
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonCancelarProductoEstadistica.setVisible(this.isVisibilidadCeldaCancelarProductoEstadistica);							
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonGuardarCambiosProductoEstadistica.setVisible((this.isVisibilidadCeldaGuardarProductoEstadistica && this.isPermisoGuardarCambiosProductoEstadistica));			
			
			}
						
			this.jButtonGuardarCambiosTablaProductoEstadistica.setVisible((this.isVisibilidadCeldaGuardarCambiosProductoEstadistica && this.isPermisoGuardarCambiosProductoEstadistica));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarProductoEstadistica.setVisible((this.isVisibilidadCeldaNuevoProductoEstadistica && this.isPermisoNuevoProductoEstadistica));						
			this.jButtonDuplicarToolBarProductoEstadistica.setVisible((this.isVisibilidadCeldaDuplicarProductoEstadistica && this.isPermisoDuplicarProductoEstadistica));						
			this.jButtonCopiarToolBarProductoEstadistica.setVisible((this.isVisibilidadCeldaCopiarProductoEstadistica && this.isPermisoCopiarProductoEstadistica));			
			this.jButtonVerFormToolBarProductoEstadistica.setVisible((this.isVisibilidadCeldaVerFormProductoEstadistica && this.isPermisoVerFormProductoEstadistica));			
			this.jButtonAbrirOrderByToolBarProductoEstadistica.setVisible((this.isVisibilidadCeldaOrdenProductoEstadistica && this.isPermisoOrdenProductoEstadistica));
			this.jButtonNuevoRelacionesToolBarProductoEstadistica.setVisible((this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica && this.isPermisoNuevoProductoEstadistica));			
			this.jButtonNuevoGuardarCambiosToolBarProductoEstadistica.setVisible((this.isVisibilidadCeldaNuevoProductoEstadistica && this.isPermisoNuevoProductoEstadistica && this.isPermisoGuardarCambiosProductoEstadistica));			
			
			if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonModificarToolBarProductoEstadistica.setVisible((this.isVisibilidadCeldaModificarProductoEstadistica && this.isPermisoActualizarProductoEstadistica));	
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonActualizarToolBarProductoEstadistica.setVisible((this.isVisibilidadCeldaActualizarProductoEstadistica  && this.isPermisoActualizarProductoEstadistica));	
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonEliminarToolBarProductoEstadistica.setVisible((this.isVisibilidadCeldaEliminarProductoEstadistica && this.isPermisoEliminarProductoEstadistica));
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonCancelarToolBarProductoEstadistica.setVisible(this.isVisibilidadCeldaCancelarProductoEstadistica);				
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonGuardarCambiosToolBarProductoEstadistica.setVisible((this.isVisibilidadCeldaGuardarProductoEstadistica && this.isPermisoGuardarCambiosProductoEstadistica));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarProductoEstadistica.setVisible((this.isVisibilidadCeldaGuardarCambiosProductoEstadistica && this.isPermisoGuardarCambiosProductoEstadistica));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoProductoEstadistica.setVisible((this.isVisibilidadCeldaNuevoProductoEstadistica && this.isPermisoNuevoProductoEstadistica));			
			this.jMenuItemDuplicarProductoEstadistica.setVisible((this.isVisibilidadCeldaDuplicarProductoEstadistica && this.isPermisoDuplicarProductoEstadistica));			
			this.jMenuItemCopiarProductoEstadistica.setVisible((this.isVisibilidadCeldaCopiarProductoEstadistica && this.isPermisoCopiarProductoEstadistica));			
			this.jMenuItemVerFormProductoEstadistica.setVisible((this.isVisibilidadCeldaVerFormProductoEstadistica && this.isPermisoVerFormProductoEstadistica));			
			this.jMenuItemAbrirOrderByProductoEstadistica.setVisible((this.isVisibilidadCeldaOrdenProductoEstadistica && this.isPermisoOrdenProductoEstadistica));			
			//this.jMenuItemMostrarOcultarProductoEstadistica.setVisible((this.isVisibilidadCeldaOrdenProductoEstadistica && this.isPermisoOrdenProductoEstadistica));
			this.jMenuItemDetalleAbrirOrderByProductoEstadistica.setVisible((this.isVisibilidadCeldaOrdenProductoEstadistica && this.isPermisoOrdenProductoEstadistica));			
			//this.jMenuItemDetalleMostrarOcultarProductoEstadistica.setVisible((this.isVisibilidadCeldaOrdenProductoEstadistica && this.isPermisoOrdenProductoEstadistica));			
			this.jMenuItemNuevoRelacionesProductoEstadistica.setVisible((this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica && this.isPermisoNuevoProductoEstadistica));			
			this.jMenuItemNuevoGuardarCambiosProductoEstadistica.setVisible((this.isVisibilidadCeldaNuevoProductoEstadistica && this.isPermisoNuevoProductoEstadistica && this.isPermisoGuardarCambiosProductoEstadistica));									
			
			if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
			this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemModificarProductoEstadistica.setVisible((this.isVisibilidadCeldaModificarProductoEstadistica && this.isPermisoActualizarProductoEstadistica));	
			this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemActualizarProductoEstadistica.setVisible((this.isVisibilidadCeldaActualizarProductoEstadistica && this.isPermisoActualizarProductoEstadistica));	
			this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemEliminarProductoEstadistica.setVisible((this.isVisibilidadCeldaEliminarProductoEstadistica && this.isPermisoEliminarProductoEstadistica));
			this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemCancelarProductoEstadistica.setVisible(this.isVisibilidadCeldaCancelarProductoEstadistica);				
			}
			
			this.jMenuItemGuardarCambiosProductoEstadistica.setVisible((this.isVisibilidadCeldaGuardarProductoEstadistica && this.isPermisoGuardarCambiosProductoEstadistica));						
			this.jMenuItemGuardarCambiosTablaProductoEstadistica.setVisible((this.isVisibilidadCeldaGuardarCambiosProductoEstadistica && this.isPermisoGuardarCambiosProductoEstadistica));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoProductoEstadistica=this.jButtonNuevoProductoEstadistica.isVisible();
			this.isVisibilidadCeldaDuplicarProductoEstadistica=this.jButtonDuplicarProductoEstadistica.isVisible();
			this.isVisibilidadCeldaCopiarProductoEstadistica=this.jButtonCopiarProductoEstadistica.isVisible();
			this.isVisibilidadCeldaVerFormProductoEstadistica=this.jButtonVerFormProductoEstadistica.isVisible();
			
			this.isVisibilidadCeldaOrdenProductoEstadistica=this.jButtonAbrirOrderByProductoEstadistica.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica=this.jButtonNuevoRelacionesProductoEstadistica.isVisible();
			this.isVisibilidadCeldaModificarProductoEstadistica=this.jButtonModificarProductoEstadistica.isVisible();
			
			if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
			this.isVisibilidadCeldaActualizarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jButtonActualizarProductoEstadistica.isVisible();
			this.isVisibilidadCeldaEliminarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jButtonEliminarProductoEstadistica.isVisible();
			this.isVisibilidadCeldaCancelarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jButtonCancelarProductoEstadistica.isVisible();
			this.isVisibilidadCeldaGuardarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jButtonGuardarCambiosProductoEstadistica.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosProductoEstadistica=this.jButtonGuardarCambiosTablaProductoEstadistica.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoProductoEstadistica=this.jButtonNuevoToolBarProductoEstadistica.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica=this.jButtonNuevoRelacionesToolBarProductoEstadistica.isVisible();
			
			if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
			this.isVisibilidadCeldaModificarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jButtonModificarToolBarProductoEstadistica.isVisible();
			this.isVisibilidadCeldaActualizarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jButtonActualizarToolBarProductoEstadistica.isVisible();
			this.isVisibilidadCeldaEliminarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jButtonEliminarToolBarProductoEstadistica.isVisible();
			this.isVisibilidadCeldaCancelarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jButtonCancelarToolBarProductoEstadistica.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarProductoEstadistica=this.jButtonGuardarCambiosToolBarProductoEstadistica.isVisible();
			this.isVisibilidadCeldaGuardarCambiosProductoEstadistica=this.jButtonGuardarCambiosTablaToolBarProductoEstadistica.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoProductoEstadistica=this.jMenuItemNuevoProductoEstadistica.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica=this.jMenuItemNuevoRelacionesProductoEstadistica.isVisible();
			
			if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
			this.isVisibilidadCeldaModificarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemModificarProductoEstadistica.isVisible();
			this.isVisibilidadCeldaActualizarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemActualizarProductoEstadistica.isVisible();
			this.isVisibilidadCeldaEliminarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemEliminarProductoEstadistica.isVisible();
			this.isVisibilidadCeldaCancelarProductoEstadistica=this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemCancelarProductoEstadistica.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarProductoEstadistica=this.jMenuItemGuardarCambiosProductoEstadistica.isVisible();
			this.isVisibilidadCeldaGuardarCambiosProductoEstadistica=this.jMenuItemGuardarCambiosTablaProductoEstadistica.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesProductoEstadistica(Boolean esInicializar) {
		if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {			
			if(this.productoestadisticaSessionBean.getConGuardarRelaciones()) {
				//if(this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesProductoEstadistica();
			}
			
			this.inicializarActualizarBindingBotonesManualProductoEstadistica(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualProductoEstadistica() {
		this.jButtonNuevoProductoEstadistica.setVisible(this.isPermisoNuevoProductoEstadistica);			
		this.jButtonDuplicarProductoEstadistica.setVisible(this.isPermisoDuplicarProductoEstadistica);			
		this.jButtonCopiarProductoEstadistica.setVisible(this.isPermisoCopiarProductoEstadistica);			
		this.jButtonVerFormProductoEstadistica.setVisible(this.isPermisoVerFormProductoEstadistica);			
		
		this.jButtonAbrirOrderByProductoEstadistica.setVisible(this.isPermisoOrdenProductoEstadistica);					
		
		this.jButtonNuevoRelacionesProductoEstadistica.setVisible(this.isPermisoNuevoProductoEstadistica);			
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonModificarProductoEstadistica.setVisible(this.isPermisoActualizarProductoEstadistica);	
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonActualizarProductoEstadistica.setVisible(this.isPermisoActualizarProductoEstadistica);	
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonEliminarProductoEstadistica.setVisible(this.isPermisoEliminarProductoEstadistica);
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonCancelarProductoEstadistica.setVisible(this.isVisibilidadCeldaCancelarProductoEstadistica);						
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonGuardarCambiosProductoEstadistica.setVisible(this.isPermisoGuardarCambiosProductoEstadistica);							
		}
		
		this.jButtonGuardarCambiosTablaProductoEstadistica.setVisible(this.isPermisoActualizarProductoEstadistica);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleProductoEstadistica() {
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonModificarProductoEstadistica.setVisible(this.isPermisoActualizarProductoEstadistica);	
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonActualizarProductoEstadistica.setVisible(this.isPermisoActualizarProductoEstadistica);	
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonEliminarProductoEstadistica.setVisible(this.isPermisoEliminarProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonCancelarProductoEstadistica.setVisible(this.isVisibilidadCeldaCancelarProductoEstadistica);							
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonGuardarCambiosProductoEstadistica.setVisible((this.isVisibilidadCeldaGuardarProductoEstadistica && this.isPermisoGuardarCambiosProductoEstadistica));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosProductoEstadistica() {
		if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualProductoEstadistica();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesProductoEstadistica() {
	}
	
	public void jTableDatosProductoEstadisticaListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarProductoEstadistica(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.productoestadistica.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaProductoEstadisticaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebProductoEstadistica(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProductoEstadistica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProductoEstadistica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.productoestadisticaLogic.getConnexion());

				if(this.productoestadistica.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.productoestadistica.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProductoEstadistica=(TitledBorder)this.jScrollPanelDatosProductoEstadistica.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderProductoEstadistica.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.productoestadistica.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalProductoEstadisticaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebProductoEstadistica(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProductoEstadistica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProductoEstadistica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.productoestadisticaLogic.getConnexion());

				if(this.productoestadistica.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.productoestadistica.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProductoEstadistica=(TitledBorder)this.jScrollPanelDatosProductoEstadistica.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderProductoEstadistica.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.productoestadistica.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodegaProductoEstadisticaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodega=true;

			idTienePermisobodega=this.tienePermisosUsuarioEnPaginaWebProductoEstadistica(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodega) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProductoEstadistica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProductoEstadistica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);

				this.bodegaBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegaBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.productoestadisticaLogic.getConnexion());

				if(this.productoestadistica.getid_bodega()!=null) {
					this.bodegaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegaBeanSwingJInternalFrame.setIdActual(this.productoestadistica.getid_bodega());
					this.bodegaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProductoEstadistica=(TitledBorder)this.jScrollPanelDatosProductoEstadistica.getBorder();
				TitledBorder titledBorderbodega=(TitledBorder)this.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodega.setTitle(titledBorderProductoEstadistica.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodegaProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getid_bodega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega = "+this.productoestadistica.getid_bodega().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_productoProductoEstadisticaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.productoBeanSwingJInternalFrame.sTipoBusqueda="Producto";

			if(!this.sFinalQueryGeneral_producto.equals("")) {
				this.productoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_producto);
				this.productoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.productoBeanSwingJInternalFrame.procesarBusqueda(this.productoBeanSwingJInternalFrame.sAccionBusqueda);
				this.productoBeanSwingJInternalFrame.inicializarActualizarBindingProducto(false);
			}

			if(!this.sFinalQueryComboProducto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderProductoEstadistica=null;
			TitledBorder titledBorderproducto=null;

			if(!this.jScrollPanelDatosProductoEstadistica.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderProductoEstadistica=(TitledBorder)this.jScrollPanelDatosProductoEstadistica.getBorder();
				titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderProductoEstadistica.getTitle() + " -> Producto");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_productoProductoEstadisticaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoproducto=true;

			idTienePermisoproducto=this.tienePermisosUsuarioEnPaginaWebProductoEstadistica(ProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisoproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProductoEstadistica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProductoEstadistica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);

				this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.productoBeanSwingJInternalFrame.getProductoLogic().setConnexion(this.productoestadisticaLogic.getConnexion());

				if(this.productoestadistica.getid_producto()!=null) {
					this.productoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.productoBeanSwingJInternalFrame.setIdActual(this.productoestadistica.getid_producto());
					this.productoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProducto();
				}

				JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProductoEstadistica=(TitledBorder)this.jScrollPanelDatosProductoEstadistica.getBorder();
				TitledBorder titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderProductoEstadistica.getTitle() + " -> Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_productoProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getid_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_producto = "+this.productoestadistica.getid_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecio_ultima_compraProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getprecio_ultima_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio_ultima_compra = "+this.productoestadistica.getprecio_ultima_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecio_ultima_ventaProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getprecio_ultima_venta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio_ultima_venta = "+this.productoestadistica.getprecio_ultima_venta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecio_ultima_cotizacionProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getprecio_ultima_cotizacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio_ultima_cotizacion = "+this.productoestadistica.getprecio_ultima_cotizacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecio_ultima_proformaProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getprecio_ultima_proforma()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio_ultima_proforma = "+this.productoestadistica.getprecio_ultima_proforma().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_disponibleProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getcantidad_disponible()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_disponible = "+this.productoestadistica.getcantidad_disponible().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_reservadaProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getcantidad_reservada()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_reservada = "+this.productoestadistica.getcantidad_reservada().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_demandaProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getcantidad_demanda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_demanda = "+this.productoestadistica.getcantidad_demanda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_maximoProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getcantidad_maximo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_maximo = "+this.productoestadistica.getcantidad_maximo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_minimoProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getcantidad_minimo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_minimo = "+this.productoestadistica.getcantidad_minimo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_fisicaProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getcantidad_fisica()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_fisica = "+this.productoestadistica.getcantidad_fisica().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_orden_compraProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getcantidad_orden_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_orden_compra = "+this.productoestadistica.getcantidad_orden_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_pedidaProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getcantidad_pedida()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_pedida = "+this.productoestadistica.getcantidad_pedida().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_requisicionProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getcantidad_requisicion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_requisicion = "+this.productoestadistica.getcantidad_requisicion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_ultima_ingresoProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getfecha_ultima_ingreso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_ultima_ingreso = '"+Funciones2.getStringPostgresDate(this.productoestadistica.getfecha_ultima_ingreso())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_ultima_egresoProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getfecha_ultima_egreso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_ultima_egreso = '"+Funciones2.getStringPostgresDate(this.productoestadistica.getfecha_ultima_egreso())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_ultima_produccionProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getfecha_ultima_produccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_ultima_produccion = '"+Funciones2.getStringPostgresDate(this.productoestadistica.getfecha_ultima_produccion())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_ultima_compraProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getfecha_ultima_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_ultima_compra = '"+Funciones2.getStringPostgresDate(this.productoestadistica.getfecha_ultima_compra())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_ultima_ventaProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getfecha_ultima_venta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_ultima_venta = '"+Funciones2.getStringPostgresDate(this.productoestadistica.getfecha_ultima_venta())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_ultima_devolucionProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getfecha_ultima_devolucion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_ultima_devolucion = '"+Funciones2.getStringPostgresDate(this.productoestadistica.getfecha_ultima_devolucion())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_ultima_orden_compraProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getfecha_ultima_orden_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_ultima_orden_compra = '"+Funciones2.getStringPostgresDate(this.productoestadistica.getfecha_ultima_orden_compra())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_ultima_pedidoProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getfecha_ultima_pedido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_ultima_pedido = '"+Funciones2.getStringPostgresDate(this.productoestadistica.getfecha_ultima_pedido())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_ultima_requisicionProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getfecha_ultima_requisicion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_ultima_requisicion = '"+Funciones2.getStringPostgresDate(this.productoestadistica.getfecha_ultima_requisicion())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_ingresoProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.gettotal_ingreso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_ingreso = "+this.productoestadistica.gettotal_ingreso().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_egresoProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.gettotal_egreso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_egreso = "+this.productoestadistica.gettotal_egreso().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_compraProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.gettotal_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_compra = "+this.productoestadistica.gettotal_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_ventaProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.gettotal_venta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_venta = "+this.productoestadistica.gettotal_venta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_producidoProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.gettotal_producido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_producido = "+this.productoestadistica.gettotal_producido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_devueltoProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.gettotal_devuelto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_devuelto = "+this.productoestadistica.gettotal_devuelto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncosto_ultimoProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getcosto_ultimo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo_ultimo = "+this.productoestadistica.getcosto_ultimo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncosto_totalProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getcosto_total()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo_total = "+this.productoestadistica.getcosto_total().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncosto_produccionProductoEstadisticaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.getproductoestadistica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.productoestadistica==null) {
						this.productoestadistica = new ProductoEstadistica();
					}

					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);
				}

				if(this.productoestadistica.getcosto_produccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo_produccion = "+this.productoestadistica.getcosto_produccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProductoEstadistica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdBodegaProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProductoEstadistica(false,false);

			this.getProductoEstadisticasFK_IdBodega();

			this.inicializarActualizarBindingProductoEstadistica(false);

			//if(ProductoEstadisticaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProductoEstadistica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProductoEstadistica(false,false);

			this.getProductoEstadisticasFK_IdEmpresa();

			this.inicializarActualizarBindingProductoEstadistica(false);

			//if(ProductoEstadisticaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProductoEstadistica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdProductoProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProductoEstadistica(false,false);

			this.getProductoEstadisticasFK_IdProducto();

			this.inicializarActualizarBindingProductoEstadistica(false);

			//if(ProductoEstadisticaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProductoEstadistica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalProductoEstadisticaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProductoEstadistica(false,false);

			this.getProductoEstadisticasFK_IdSucursal();

			this.inicializarActualizarBindingProductoEstadistica(false);

			//if(ProductoEstadisticaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProductoEstadistica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoestadisticaLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameProductoEstadistica() {
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
			this.jInternalFrameDetalleFormProductoEstadistica.setVisible(false);	    			
			this.jInternalFrameDetalleFormProductoEstadistica.dispose();
			this.jInternalFrameDetalleFormProductoEstadistica=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoProductoEstadistica!=null) {
			this.jInternalFrameReporteDinamicoProductoEstadistica.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoProductoEstadistica.dispose();
			this.jInternalFrameReporteDinamicoProductoEstadistica=null;
		}
		
		if(this.jInternalFrameImportacionProductoEstadistica!=null) {
			this.jInternalFrameImportacionProductoEstadistica.setVisible(false);	    			
			this.jInternalFrameImportacionProductoEstadistica.dispose();
			this.jInternalFrameImportacionProductoEstadistica=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessProductoEstadistica();
			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			
			
			if(sTipo.equals("NuevoProductoEstadistica")) {
				jButtonNuevoProductoEstadisticaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarProductoEstadistica")) {
				jButtonDuplicarProductoEstadisticaActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarProductoEstadistica")) {
				jButtonCopiarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("VerFormProductoEstadistica")) {
				jButtonVerFormProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarProductoEstadistica")) {
				jButtonNuevoProductoEstadisticaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarProductoEstadistica")) {
				jButtonDuplicarProductoEstadisticaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoProductoEstadistica")) {
				jButtonNuevoProductoEstadisticaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarProductoEstadistica")) {
				jButtonDuplicarProductoEstadisticaActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesProductoEstadistica")) {
				jButtonNuevoProductoEstadisticaActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarProductoEstadistica")) {
				jButtonNuevoProductoEstadisticaActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesProductoEstadistica")) {
				jButtonNuevoProductoEstadisticaActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarProductoEstadistica")) {
				jButtonModificarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarProductoEstadistica")) {
				jButtonModificarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarProductoEstadistica")) {
				jButtonModificarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarProductoEstadistica")) {
				jButtonActualizarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarProductoEstadistica")) {
				jButtonActualizarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarProductoEstadistica")) {
				jButtonActualizarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("EliminarProductoEstadistica")) {
				jButtonEliminarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarProductoEstadistica")) {
				jButtonEliminarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarProductoEstadistica")) {
				jButtonEliminarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("CancelarProductoEstadistica")) {
				jButtonCancelarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarProductoEstadistica")) {
				jButtonCancelarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarProductoEstadistica")) {
				jButtonCancelarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("CerrarProductoEstadistica")) {
				jButtonCerrarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarProductoEstadistica")) {
				jButtonCerrarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarProductoEstadistica")) {
				jButtonCerrarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarProductoEstadistica")) {
				jButtonMostrarOcultarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarProductoEstadistica")) {
				jButtonCancelarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosProductoEstadistica")) {
				jButtonGuardarCambiosProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarProductoEstadistica")) {
				jButtonGuardarCambiosProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarProductoEstadistica")) {
				jButtonCopiarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarProductoEstadistica")) {
				jButtonVerFormProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosProductoEstadistica")) {
				jButtonGuardarCambiosProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarProductoEstadistica")) {
				jButtonCopiarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormProductoEstadistica")) {
				jButtonVerFormProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaProductoEstadistica")) {
				jButtonGuardarCambiosProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarProductoEstadistica")) {
				jButtonGuardarCambiosProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaProductoEstadistica")) {
				jButtonGuardarCambiosProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionProductoEstadistica")) {
				jButtonRecargarInformacionProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarProductoEstadistica")) {
				jButtonRecargarInformacionProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionProductoEstadistica")) {
				jButtonRecargarInformacionProductoEstadisticaActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresProductoEstadistica")) {
				jButtonAnterioresProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarProductoEstadistica")) {
				jButtonAnterioresProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreProductoEstadistica")) {
				jButtonAnterioresProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesProductoEstadistica")) {
				jButtonSiguientesProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarProductoEstadistica")) {
				jButtonSiguientesProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesProductoEstadistica")) {
				jButtonSiguientesProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByProductoEstadistica") || sTipo.equals("MenuItemDetalleAbrirOrderByProductoEstadistica")) {
				jButtonAbrirOrderByProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarProductoEstadistica") || sTipo.equals("MenuItemDetalleMostrarOcultarProductoEstadistica")) {
				jButtonMostrarOcultarProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosProductoEstadistica")) {
				jButtonNuevoGuardarCambiosProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarProductoEstadistica")) {
				jButtonNuevoGuardarCambiosProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosProductoEstadistica")) {
				jButtonNuevoGuardarCambiosProductoEstadisticaActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoProductoEstadistica")) {
				jButtonCerrarReporteDinamicoProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoProductoEstadistica")) {
				jButtonGenerarReporteDinamicoProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoProductoEstadistica")) {
				
				jButtonGenerarExcelReporteDinamicoProductoEstadisticaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionProductoEstadistica")) {
				jButtonCerrarImportacionProductoEstadisticaActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionProductoEstadistica")) {
				
				jButtonGenerarImportacionProductoEstadisticaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionProductoEstadistica")) {
				
				jButtonAbrirImportacionProductoEstadisticaActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesProductoEstadistica")) {
				jComboBoxTiposAccionesProductoEstadisticaActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesProductoEstadistica")) {
				jComboBoxTiposRelacionesProductoEstadisticaActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioProductoEstadistica")) {
				jComboBoxTiposAccionesProductoEstadisticaActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarProductoEstadistica")) {
				
				jComboBoxTiposSeleccionarProductoEstadisticaActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralProductoEstadistica")) {
				jTextFieldValorCampoGeneralProductoEstadisticaActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByProductoEstadistica")) {
				jButtonAbrirOrderByProductoEstadisticaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarProductoEstadistica")) {
				jButtonAbrirOrderByProductoEstadisticaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByProductoEstadistica")) {
				jButtonCerrarOrderByProductoEstadisticaActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idProductoEstadisticaBusqueda")) {
				this.jButtonidProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaProductoEstadisticaUpdate")) {
				this.jButtonid_empresaProductoEstadisticaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaProductoEstadisticaBusqueda")) {
				this.jButtonid_empresaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalProductoEstadisticaUpdate")) {
				this.jButtonid_sucursalProductoEstadisticaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalProductoEstadisticaBusqueda")) {
				this.jButtonid_sucursalProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaProductoEstadisticaUpdate")) {
				this.jButtonid_bodegaProductoEstadisticaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaProductoEstadisticaBusqueda")) {
				this.jButtonid_bodegaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoProductoEstadistica")) {
				this.jButtonid_productoProductoEstadisticaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoProductoEstadisticaUpdate")) {
				this.jButtonid_productoProductoEstadisticaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoProductoEstadisticaBusqueda")) {
				this.jButtonid_productoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_ultima_compraProductoEstadisticaBusqueda")) {
				this.jButtonprecio_ultima_compraProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_ultima_ventaProductoEstadisticaBusqueda")) {
				this.jButtonprecio_ultima_ventaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_ultima_cotizacionProductoEstadisticaBusqueda")) {
				this.jButtonprecio_ultima_cotizacionProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_ultima_proformaProductoEstadisticaBusqueda")) {
				this.jButtonprecio_ultima_proformaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_disponibleProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_disponibleProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_reservadaProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_reservadaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_demandaProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_demandaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_maximoProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_maximoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_minimoProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_minimoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_fisicaProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_fisicaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_orden_compraProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_orden_compraProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_pedidaProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_pedidaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_requisicionProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_requisicionProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_ingresoProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_ingresoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_egresoProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_egresoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_produccionProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_produccionProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_compraProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_compraProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_ventaProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_ventaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_devolucionProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_devolucionProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_orden_compraProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_orden_compraProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_pedidoProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_pedidoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_requisicionProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_requisicionProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_ingresoProductoEstadisticaBusqueda")) {
				this.jButtontotal_ingresoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_egresoProductoEstadisticaBusqueda")) {
				this.jButtontotal_egresoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_compraProductoEstadisticaBusqueda")) {
				this.jButtontotal_compraProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_ventaProductoEstadisticaBusqueda")) {
				this.jButtontotal_ventaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_producidoProductoEstadisticaBusqueda")) {
				this.jButtontotal_producidoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_devueltoProductoEstadisticaBusqueda")) {
				this.jButtontotal_devueltoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_ultimoProductoEstadisticaBusqueda")) {
				this.jButtoncosto_ultimoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_totalProductoEstadisticaBusqueda")) {
				this.jButtoncosto_totalProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_produccionProductoEstadisticaBusqueda")) {
				this.jButtoncosto_produccionProductoEstadisticaBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_productoProductoEstadistica")) {
				this.jButtonid_productoProductoEstadisticaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdBodegaProductoEstadistica")) {
				this.jButtonFK_IdBodegaProductoEstadisticaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdProductoProductoEstadistica")) {
				this.jButtonFK_IdProductoProductoEstadisticaActionPerformed(evt);
			}
			
			;
			
			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessProductoEstadistica();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProductoEstadisticaActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.productoestadistica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				
				


				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ProductoEstadistica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ProductoEstadistica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			ProductoEstadistica productoestadisticaLocal=null;
			
			if(!this.getEsControlTabla()) {
				productoestadisticaLocal=this.productoestadistica;
			} else {
				productoestadisticaLocal=this.productoestadisticaAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.productoestadistica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
							
				
				


				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ProductoEstadistica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ProductoEstadistica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoEstadisticaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaAnterior =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.productoestadisticaAnterior =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProductoEstadisticaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.productoestadistica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
								
						
				


				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ProductoEstadistica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ProductoEstadistica.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.productoestadistica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
								
				
				


				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ProductoEstadistica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ProductoEstadistica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoEstadisticaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaAnterior =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.productoestadisticaAnterior =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.productoestadistica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoEstadisticaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaAnterior =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.productoestadisticaAnterior =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoEstadisticaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.productoestadistica);
			
			this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.productoestadistica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
							
				
				


				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ProductoEstadistica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ProductoEstadistica.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProductoEstadisticaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadisticaAnterior =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.productoestadisticaAnterior =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoEstadisticaActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.productoestadistica);
			
			this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.productoestadistica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
								
				
				


				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ProductoEstadistica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ProductoEstadistica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoEstadisticaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaAnterior =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.productoestadisticaAnterior =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoEstadisticaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.productoestadistica);
			
			this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProductoEstadisticaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.productoestadistica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosProductoEstadistica")) {
					jCheckBoxSeleccionarTodosProductoEstadisticaItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosProductoEstadistica")) {
					jCheckBoxSeleccionadosProductoEstadisticaItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarProductoEstadistica")) {
					
				}
				
				


				
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ProductoEstadistica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ProductoEstadistica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.productoestadistica);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
												
				
				


				
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ProductoEstadistica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ProductoEstadistica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProductoEstadisticaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoestadisticaAnterior =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.productoestadisticaAnterior =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProductoEstadisticaActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.productoestadistica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProductoEstadisticaActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.productoestadistica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ProductoEstadistica.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ProductoEstadistica.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.productoestadistica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.productoestadistica);
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ProductoEstadistica.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ProductoEstadistica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoEstadisticaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoestadisticaAnterior =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.productoestadisticaAnterior =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarProductoEstadistica")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosProductoEstadisticaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosProductoEstadistica.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.productoestadistica =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.productoestadistica =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.productoestadistica);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarProductoEstadistica")) {
				
				}
				
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarProductoEstadistica")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosProductoEstadistica.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarProductoEstadistica")) {
			
			}
			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessProductoEstadistica();
			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			
			if(sTipo.equals("NuevoProductoEstadistica")) {
				jButtonNuevoProductoEstadisticaActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarProductoEstadistica")) {
				jButtonDuplicarProductoEstadisticaActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarProductoEstadistica")) {
				jButtonCopiarProductoEstadisticaActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormProductoEstadistica")) {
				jButtonVerFormProductoEstadisticaActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesProductoEstadistica")) {
				jButtonNuevoProductoEstadisticaActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarProductoEstadistica")) {
				jButtonModificarProductoEstadisticaActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarProductoEstadistica")) {
				jButtonActualizarProductoEstadisticaActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarProductoEstadistica")) {
				jButtonEliminarProductoEstadisticaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaProductoEstadistica")) {
				jButtonGuardarCambiosProductoEstadisticaActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarProductoEstadistica")) {
				jButtonCancelarProductoEstadisticaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarProductoEstadistica")) {
				jButtonCerrarProductoEstadisticaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosProductoEstadistica")) {
				jButtonGuardarCambiosProductoEstadisticaActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosProductoEstadistica")) {
				jButtonNuevoGuardarCambiosProductoEstadisticaActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByProductoEstadistica")) {
				jButtonAbrirOrderByProductoEstadisticaActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionProductoEstadistica")) {
				jButtonRecargarInformacionProductoEstadisticaActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresProductoEstadistica")) {
				jButtonAnterioresProductoEstadisticaActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesProductoEstadistica")) {
				jButtonSiguientesProductoEstadisticaActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idProductoEstadisticaBusqueda")) {
				this.jButtonidProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaProductoEstadisticaUpdate")) {
				this.jButtonid_empresaProductoEstadisticaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaProductoEstadisticaBusqueda")) {
				this.jButtonid_empresaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalProductoEstadisticaUpdate")) {
				this.jButtonid_sucursalProductoEstadisticaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalProductoEstadisticaBusqueda")) {
				this.jButtonid_sucursalProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaProductoEstadisticaUpdate")) {
				this.jButtonid_bodegaProductoEstadisticaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaProductoEstadisticaBusqueda")) {
				this.jButtonid_bodegaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoProductoEstadistica")) {
				this.jButtonid_productoProductoEstadisticaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoProductoEstadisticaUpdate")) {
				this.jButtonid_productoProductoEstadisticaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoProductoEstadisticaBusqueda")) {
				this.jButtonid_productoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_ultima_compraProductoEstadisticaBusqueda")) {
				this.jButtonprecio_ultima_compraProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_ultima_ventaProductoEstadisticaBusqueda")) {
				this.jButtonprecio_ultima_ventaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_ultima_cotizacionProductoEstadisticaBusqueda")) {
				this.jButtonprecio_ultima_cotizacionProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_ultima_proformaProductoEstadisticaBusqueda")) {
				this.jButtonprecio_ultima_proformaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_disponibleProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_disponibleProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_reservadaProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_reservadaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_demandaProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_demandaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_maximoProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_maximoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_minimoProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_minimoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_fisicaProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_fisicaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_orden_compraProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_orden_compraProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_pedidaProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_pedidaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_requisicionProductoEstadisticaBusqueda")) {
				this.jButtoncantidad_requisicionProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_ingresoProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_ingresoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_egresoProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_egresoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_produccionProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_produccionProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_compraProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_compraProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_ventaProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_ventaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_devolucionProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_devolucionProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_orden_compraProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_orden_compraProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_pedidoProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_pedidoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_requisicionProductoEstadisticaBusqueda")) {
				this.jButtonfecha_ultima_requisicionProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_ingresoProductoEstadisticaBusqueda")) {
				this.jButtontotal_ingresoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_egresoProductoEstadisticaBusqueda")) {
				this.jButtontotal_egresoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_compraProductoEstadisticaBusqueda")) {
				this.jButtontotal_compraProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_ventaProductoEstadisticaBusqueda")) {
				this.jButtontotal_ventaProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_producidoProductoEstadisticaBusqueda")) {
				this.jButtontotal_producidoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_devueltoProductoEstadisticaBusqueda")) {
				this.jButtontotal_devueltoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_ultimoProductoEstadisticaBusqueda")) {
				this.jButtoncosto_ultimoProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_totalProductoEstadisticaBusqueda")) {
				this.jButtoncosto_totalProductoEstadisticaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_produccionProductoEstadisticaBusqueda")) {
				this.jButtoncosto_produccionProductoEstadisticaBusquedaActionPerformed(evt);
			}
			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessProductoEstadistica();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameProductoEstadistica")) {
				closingInternalFrameProductoEstadistica();
				
			} else if(sTipo.equals("jButtonCancelarProductoEstadistica")) {
				JInternalFrameBase jInternalFrameDetalleFormProductoEstadistica = (JInternalFrameBase)evt.getSource();
	            	
	            ProductoEstadisticaBeanSwingJInternalFrame jInternalFrameParent=(ProductoEstadisticaBeanSwingJInternalFrame)jInternalFrameDetalleFormProductoEstadistica.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarProductoEstadisticaActionPerformed(null);
			}
			
			ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.productoestadistica,new Object(),this.productoestadisticaParameterGeneral,this.productoestadisticaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormProductoEstadistica(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormProductoEstadistica(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormProductoEstadistica(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.productoestadistica)) {
			if(!esControlTabla) {
				if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);			
				}
				
				if(this.productoestadisticaSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualProductoEstadistica(this.productoestadistica,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.productoestadisticaReturnGeneral=productoestadisticaLogic.procesarEventosProductoEstadisticasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.productoestadisticaLogic.getProductoEstadisticas(),this.productoestadistica,this.productoestadisticaParameterGeneral,this.isEsNuevoProductoEstadistica,classes);//this.productoestadisticaLogic.getProductoEstadistica()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanProductoEstadistica(this.productoestadisticaReturnGeneral,this.productoestadisticaBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.productoestadisticaSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanProductoEstadistica(classes,this.productoestadisticaReturnGeneral,this.productoestadisticaBean,false);
					}
						
					if(this.productoestadisticaReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyProductoEstadistica(this.productoestadisticaReturnGeneral.getProductoEstadistica());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioProductoEstadistica(this.productoestadisticaReturnGeneral.getProductoEstadistica());	
					}
						
					if(this.productoestadisticaReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioProductoEstadistica(this.productoestadisticaReturnGeneral.getProductoEstadistica(),classes);//this.productoestadisticaBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioProductoEstadistica(this.productoestadistica,classes);//this.productoestadisticaBean);									
				}
			
				if(ProductoEstadisticaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualProductoEstadistica(this.productoestadistica,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysProductoEstadistica(this.productoestadistica);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.productoestadisticaAnterior!=null) {
						this.productoestadistica=this.productoestadisticaAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.productoestadisticaReturnGeneral=productoestadisticaLogic.procesarEventosProductoEstadisticasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.productoestadisticaLogic.getProductoEstadisticas(),this.productoestadistica,this.productoestadisticaParameterGeneral,this.isEsNuevoProductoEstadistica,classes);//this.productoestadisticaLogic.getProductoEstadistica()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.productoestadisticaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.productoestadisticaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.productoestadisticaReturnGeneral.getProductoEstadistica(),productoestadisticaLogic.getProductoEstadisticas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.productoestadisticaReturnGeneral.getProductoEstadistica(),this.productoestadisticas);
				}
				//ARCHITECTURE
				
				//this.jTableDatosProductoEstadistica.repaint();
				
				//((AbstractTableModel) this.jTableDatosProductoEstadistica.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosProductoEstadistica();
			}
		}
	}
	
	public void actualizarVisualTableDatosProductoEstadistica() throws Exception {
		
		ProductoEstadisticaModel productoestadisticaModel=(ProductoEstadisticaModel)this.jTableDatosProductoEstadistica.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			productoestadisticaModel.productoestadisticas=this.productoestadisticaLogic.getProductoEstadisticas();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			productoestadisticaModel.productoestadisticas=this.productoestadisticas;
		}
		
		
		((ProductoEstadisticaModel) this.jTableDatosProductoEstadistica.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaProductoEstadistica() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getproductoestadisticaAnterior(),this.productoestadisticaLogic.getProductoEstadisticas());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getproductoestadisticaAnterior(),this.productoestadisticas);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosProductoEstadistica();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioProductoEstadistica(ProductoEstadistica productoestadistica,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.productoestadistica,new Object(),generalEntityParameterGeneral,this.productoestadisticaReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.productoestadisticaSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=ProductoEstadisticaConstantesFunciones.getClassesRelationshipsOfProductoEstadistica(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=ProductoEstadisticaConstantesFunciones.getClassesRelationshipsFromStringsOfProductoEstadistica(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormProductoEstadistica(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				ProductoEstadisticaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.productoestadistica,new Object(),generalEntityParameterGeneral,this.productoestadisticaReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioProductoEstadistica(ProductoEstadisticaBean productoestadisticaBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanProductoEstadistica(ArrayList<Classe> classes,ProductoEstadisticaReturnGeneral productoestadisticaReturnGeneral,ProductoEstadisticaBean productoestadisticaBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualProductoEstadistica(ProductoEstadistica productoestadistica,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.productoestadistica)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormProductoEstadistica = new ProductoEstadisticaDetalleFormJInternalFrame(jDesktopPane,this.productoestadisticaSessionBean.getConGuardarRelaciones(),this.productoestadisticaSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.setVisible(false);
		this.jInternalFrameDetalleFormProductoEstadistica.setSelected(false);						
		
		this.jInternalFrameDetalleFormProductoEstadistica.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormProductoEstadistica.productoestadisticaLogic=this.productoestadisticaLogic;
		
		this.cargarCombosFrameForeignKeyProductoEstadistica("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleProductoEstadistica();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleProductoEstadistica();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyProductoEstadistica("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyProductoEstadistica();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormProductoEstadistica.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarProductoEstadistica"));
		
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonModificarProductoEstadistica.addActionListener(new ButtonActionListener(this,"ModificarProductoEstadistica"));

		
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonModificarToolBarProductoEstadistica.addActionListener(new ButtonActionListener(this,"ModificarToolBarProductoEstadistica"));
					
		this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemModificarProductoEstadistica.addActionListener(new ButtonActionListener(this,"MenuItemModificarProductoEstadistica"));		
		
		
		
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonActualizarProductoEstadistica.addActionListener (new ButtonActionListener(this,"ActualizarProductoEstadistica"));
		
		
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonActualizarToolBarProductoEstadistica.addActionListener(new ButtonActionListener(this,"ActualizarToolBarProductoEstadistica"));
						
		this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemActualizarProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemActualizarProductoEstadistica"));		
		
		
		
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonEliminarProductoEstadistica.addActionListener (new ButtonActionListener(this,"EliminarProductoEstadistica"));
		
		
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonEliminarToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"EliminarToolBarProductoEstadistica"));
								
		this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemEliminarProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemEliminarProductoEstadistica"));		
		
		
		
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonCancelarProductoEstadistica.addActionListener (new ButtonActionListener(this,"CancelarProductoEstadistica"));
		
		
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonCancelarToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"CancelarToolBarProductoEstadistica"));
					
		this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemCancelarProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemCancelarProductoEstadistica"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemDetalleCerrarProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarProductoEstadistica"));		
		
		
		
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonGuardarCambiosToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarProductoEstadistica"));
		
		
		
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonGuardarCambiosToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarProductoEstadistica"));
		
		
		
		this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxTiposAccionesFormularioProductoEstadistica.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioProductoEstadistica"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonidProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"idProductoEstadisticaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_empresaProductoEstadisticaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaProductoEstadisticaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_empresaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaProductoEstadisticaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_sucursalProductoEstadisticaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalProductoEstadisticaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_sucursalProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalProductoEstadisticaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_bodegaProductoEstadisticaUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaProductoEstadisticaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_bodegaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaProductoEstadisticaBusqueda"));
		//jButtonid_productoProductoEstadistica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoProductoEstadisticaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_productoProductoEstadistica.addActionListener(new ButtonActionListener(this,"id_productoProductoEstadistica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_productoProductoEstadisticaUpdate.addActionListener(new ButtonActionListener(this,"id_productoProductoEstadisticaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_productoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"id_productoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonprecio_ultima_compraProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"precio_ultima_compraProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonprecio_ultima_ventaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"precio_ultima_ventaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonprecio_ultima_cotizacionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"precio_ultima_cotizacionProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonprecio_ultima_proformaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"precio_ultima_proformaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_disponibleProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_disponibleProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_reservadaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_reservadaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_demandaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_demandaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_maximoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_maximoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_minimoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_minimoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_fisicaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_fisicaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_orden_compraProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_orden_compraProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_pedidaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_pedidaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_requisicionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_requisicionProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_ingresoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_ingresoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_egresoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_egresoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_produccionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_produccionProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_compraProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_compraProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_ventaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_ventaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_devolucionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_devolucionProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_orden_compraProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_orden_compraProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_pedidoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_pedidoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_requisicionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_requisicionProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_ingresoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_ingresoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_egresoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_egresoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_compraProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_compraProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_ventaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_ventaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_producidoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_producidoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_devueltoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_devueltoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncosto_ultimoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"costo_ultimoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncosto_totalProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"costo_totalProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncosto_produccionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"costo_produccionProductoEstadisticaBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormProductoEstadistica.jTabbedPaneRelacionesProductoEstadistica.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesProductoEstadistica"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameProductoEstadistica"));
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProductoEstadistica.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarProductoEstadistica"));
		}
		
		this.jTableDatosProductoEstadistica.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarProductoEstadistica"));
		
		this.jTableDatosProductoEstadistica.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarProductoEstadistica"));
		
		this.jButtonNuevoProductoEstadistica.addActionListener(new ButtonActionListener(this,"NuevoProductoEstadistica"));
		
		this.jButtonDuplicarProductoEstadistica.addActionListener(new ButtonActionListener(this,"DuplicarProductoEstadistica"));
		
		this.jButtonCopiarProductoEstadistica.addActionListener(new ButtonActionListener(this,"CopiarProductoEstadistica"));
		
		this.jButtonVerFormProductoEstadistica.addActionListener(new ButtonActionListener(this,"VerFormProductoEstadistica"));
		
		
		this.jButtonNuevoToolBarProductoEstadistica.addActionListener(new ButtonActionListener(this,"NuevoToolBarProductoEstadistica"));
			
		this.jButtonDuplicarToolBarProductoEstadistica.addActionListener(new ButtonActionListener(this,"DuplicarToolBarProductoEstadistica"));
			
		this.jMenuItemNuevoProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemNuevoProductoEstadistica"));
			
		this.jMenuItemDuplicarProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarProductoEstadistica"));		
		
		
		this.jButtonNuevoRelacionesProductoEstadistica.addActionListener (new ButtonActionListener(this,"NuevoRelacionesProductoEstadistica"));
		
		
		this.jButtonNuevoRelacionesToolBarProductoEstadistica.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarProductoEstadistica"));
			
		this.jMenuItemNuevoRelacionesProductoEstadistica.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesProductoEstadistica"));		
		
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonModificarProductoEstadistica.addActionListener(new ButtonActionListener(this,"ModificarProductoEstadistica"));
		}
		
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonModificarToolBarProductoEstadistica.addActionListener(new ButtonActionListener(this,"ModificarToolBarProductoEstadistica"));
			
			this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemModificarProductoEstadistica.addActionListener(new ButtonActionListener(this,"MenuItemModificarProductoEstadistica"));		
		}
		
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonActualizarProductoEstadistica.addActionListener (new ButtonActionListener(this,"ActualizarProductoEstadistica"));
		}
		
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonActualizarToolBarProductoEstadistica.addActionListener(new ButtonActionListener(this,"ActualizarToolBarProductoEstadistica"));
				
			this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemActualizarProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemActualizarProductoEstadistica"));		
		}
		
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonEliminarProductoEstadistica.addActionListener (new ButtonActionListener(this,"EliminarProductoEstadistica"));
		}
		
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonEliminarToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"EliminarToolBarProductoEstadistica"));
						
			this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemEliminarProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemEliminarProductoEstadistica"));		
		}
		
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonCancelarProductoEstadistica.addActionListener (new ButtonActionListener(this,"CancelarProductoEstadistica"));
		}
		
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonCancelarToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"CancelarToolBarProductoEstadistica"));
			
			this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemCancelarProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemCancelarProductoEstadistica"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarProductoEstadistica"));		
		
		
		this.jButtonCerrarProductoEstadistica.addActionListener (new ButtonActionListener(this,"CerrarProductoEstadistica"));
		
		
		this.jButtonCerrarToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"CerrarToolBarProductoEstadistica"));
			
		this.jMenuItemCerrarProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemCerrarProductoEstadistica"));
			
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProductoEstadistica.jMenuItemDetalleCerrarProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarProductoEstadistica"));		
		}
		
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonGuardarCambiosProductoEstadistica.addActionListener (new ButtonActionListener(this,"GuardarCambiosProductoEstadistica"));
		}
		
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonGuardarCambiosToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarProductoEstadistica"));
		}
		
		this.jButtonCopiarToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"CopiarToolBarProductoEstadistica"));
			
		this.jButtonVerFormToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"VerFormToolBarProductoEstadistica"));
		
		this.jMenuItemGuardarCambiosProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosProductoEstadistica"));
			
		this.jMenuItemCopiarProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemCopiarProductoEstadistica"));		
		
		this.jMenuItemVerFormProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemVerFormProductoEstadistica"));		
		
		
		this.jButtonGuardarCambiosTablaProductoEstadistica.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaProductoEstadistica"));
		
		
		this.jButtonGuardarCambiosTablaToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarProductoEstadistica"));
			
		this.jMenuItemGuardarCambiosTablaProductoEstadistica.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaProductoEstadistica"));		
		
		
		
		this.jButtonRecargarInformacionProductoEstadistica.addActionListener (new ButtonActionListener(this,"RecargarInformacionProductoEstadistica"));
					
		this.jButtonRecargarInformacionToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarProductoEstadistica"));
		
		this.jMenuItemRecargarInformacionProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionProductoEstadistica"));		
		
		
		
		this.jButtonAnterioresProductoEstadistica.addActionListener (new ButtonActionListener(this,"AnterioresProductoEstadistica"));
		
		
		this.jButtonAnterioresToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"AnterioresToolBarProductoEstadistica"));
		
		this.jMenuItemAnterioresProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresProductoEstadistica"));		
		
		
		this.jButtonSiguientesProductoEstadistica.addActionListener (new ButtonActionListener(this,"SiguientesProductoEstadistica"));
		
		
		this.jButtonSiguientesToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"SiguientesToolBarProductoEstadistica"));
			
		this.jMenuItemSiguientesProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesProductoEstadistica"));
			
		this.jMenuItemAbrirOrderByProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByProductoEstadistica"));
			
		this.jMenuItemMostrarOcultarProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarProductoEstadistica"));
			
		this.jMenuItemDetalleAbrirOrderByProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByProductoEstadistica"));
			
		this.jMenuItemDetalleMostarOcultarProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarProductoEstadistica"));		
		
		
		this.jButtonNuevoGuardarCambiosProductoEstadistica.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosProductoEstadistica"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarProductoEstadistica"));
			
		this.jMenuItemNuevoGuardarCambiosProductoEstadistica.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosProductoEstadistica"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosProductoEstadistica.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosProductoEstadistica"));

		this.jCheckBoxSeleccionadosProductoEstadistica.addItemListener(new CheckBoxItemListener(this,"SeleccionadosProductoEstadistica"));
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxTiposAccionesFormularioProductoEstadistica.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioProductoEstadistica"));
		}
		
		
		this.jComboBoxTiposRelacionesProductoEstadistica.addActionListener (new ButtonActionListener(this,"TiposRelacionesProductoEstadistica"));
			
		this.jComboBoxTiposAccionesProductoEstadistica.addActionListener (new ButtonActionListener(this,"TiposAccionesProductoEstadistica"));
					
		this.jComboBoxTiposSeleccionarProductoEstadistica.addActionListener (new ButtonActionListener(this,"TiposSeleccionarProductoEstadistica"));
			
		this.jTextFieldValorCampoGeneralProductoEstadistica.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralProductoEstadistica"));		
		
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonidProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"idProductoEstadisticaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_empresaProductoEstadisticaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaProductoEstadisticaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_empresaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaProductoEstadisticaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_sucursalProductoEstadisticaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalProductoEstadisticaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_sucursalProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalProductoEstadisticaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_bodegaProductoEstadisticaUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaProductoEstadisticaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_bodegaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaProductoEstadisticaBusqueda"));
		//jButtonid_productoProductoEstadistica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoProductoEstadisticaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_productoProductoEstadistica.addActionListener(new ButtonActionListener(this,"id_productoProductoEstadistica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_productoProductoEstadisticaUpdate.addActionListener(new ButtonActionListener(this,"id_productoProductoEstadisticaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_productoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"id_productoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonprecio_ultima_compraProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"precio_ultima_compraProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonprecio_ultima_ventaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"precio_ultima_ventaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonprecio_ultima_cotizacionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"precio_ultima_cotizacionProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonprecio_ultima_proformaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"precio_ultima_proformaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_disponibleProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_disponibleProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_reservadaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_reservadaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_demandaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_demandaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_maximoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_maximoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_minimoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_minimoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_fisicaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_fisicaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_orden_compraProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_orden_compraProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_pedidaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_pedidaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_requisicionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_requisicionProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_ingresoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_ingresoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_egresoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_egresoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_produccionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_produccionProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_compraProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_compraProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_ventaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_ventaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_devolucionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_devolucionProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_orden_compraProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_orden_compraProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_pedidoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_pedidoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_requisicionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_requisicionProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_ingresoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_ingresoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_egresoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_egresoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_compraProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_compraProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_ventaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_ventaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_producidoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_producidoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_devueltoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_devueltoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncosto_ultimoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"costo_ultimoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncosto_totalProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"costo_totalProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncosto_produccionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"costo_produccionProductoEstadisticaBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdBodegaProductoEstadistica.addActionListener(new ButtonActionListener(this,"FK_IdBodegaProductoEstadistica"));

			this.jButtonFK_IdProductoProductoEstadistica.addActionListener(new ButtonActionListener(this,"FK_IdProductoProductoEstadistica"));

			this.jButtonBuscarFK_IdProductoid_productoProductoEstadistica.addActionListener(new ButtonActionListener(this,"id_productoProductoEstadistica"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoProductoEstadistica!=null) {
				this.jInternalFrameReporteDinamicoProductoEstadistica.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoProductoEstadistica"));
				this.jInternalFrameReporteDinamicoProductoEstadistica.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoProductoEstadistica"));
				this.jInternalFrameReporteDinamicoProductoEstadistica.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoProductoEstadistica"));
			}
			
			//this.jButtonCerrarReporteDinamicoProductoEstadistica.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoProductoEstadistica"));				
			//this.jButtonGenerarReporteDinamicoProductoEstadistica.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoProductoEstadistica"));
			//this.jButtonGenerarExcelReporteDinamicoProductoEstadistica.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoProductoEstadistica"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionProductoEstadistica!=null) {
				this.jInternalFrameImportacionProductoEstadistica.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionProductoEstadistica"));
				this.jInternalFrameImportacionProductoEstadistica.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionProductoEstadistica"));
				this.jInternalFrameImportacionProductoEstadistica.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionProductoEstadistica"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByProductoEstadistica.addActionListener (new ButtonActionListener(this,"AbrirOrderByProductoEstadistica"));
			
			this.jButtonAbrirOrderByToolBarProductoEstadistica.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarProductoEstadistica"));			
			
			if(this.jInternalFrameOrderByProductoEstadistica!=null) {
				this.jInternalFrameOrderByProductoEstadistica.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByProductoEstadistica"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProductoEstadistica.jTabbedPaneRelacionesProductoEstadistica.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesProductoEstadistica"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameProductoEstadistica();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormProductoEstadistica.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormProductoEstadistica = (JInternalFrameBase)event.getSource();
	            	
	            ProductoEstadisticaBeanSwingJInternalFrame jInternalFrameParent=(ProductoEstadisticaBeanSwingJInternalFrame)jInternalFrameDetalleFormProductoEstadistica.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarProductoEstadisticaActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosProductoEstadistica.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosProductoEstadisticaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosProductoEstadistica.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosProductoEstadistica.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProductoEstadisticaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProductoEstadisticaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProductoEstadisticaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoProductoEstadistica";
		inputMap = this.jButtonNuevoProductoEstadistica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoProductoEstadistica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoProductoEstadisticaActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProductoEstadisticaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProductoEstadisticaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProductoEstadisticaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesProductoEstadistica";
		inputMap = this.jButtonNuevoRelacionesProductoEstadistica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesProductoEstadistica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoProductoEstadisticaActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarProductoEstadistica";
		inputMap = this.jButtonModificarProductoEstadistica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarProductoEstadistica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarProductoEstadisticaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarProductoEstadistica";
		inputMap = this.jButtonActualizarProductoEstadistica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarProductoEstadistica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarProductoEstadisticaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarProductoEstadistica";
		inputMap = this.jButtonEliminarProductoEstadistica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarProductoEstadistica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarProductoEstadisticaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarProductoEstadistica";
		inputMap = this.jButtonCancelarProductoEstadistica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarProductoEstadistica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarProductoEstadisticaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarProductoEstadistica";
		inputMap = this.jButtonCerrarProductoEstadistica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarProductoEstadistica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarProductoEstadisticaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonGuardarCambiosProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosProductoEstadistica";
		inputMap = this.jInternalFrameDetalleFormProductoEstadistica.jButtonGuardarCambiosProductoEstadistica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonGuardarCambiosProductoEstadistica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosProductoEstadisticaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosProductoEstadistica.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosProductoEstadisticaItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesProductoEstadistica.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesProductoEstadisticaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarProductoEstadistica.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarProductoEstadisticaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralProductoEstadistica.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralProductoEstadisticaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonidProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"idProductoEstadisticaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_empresaProductoEstadisticaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaProductoEstadisticaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_empresaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaProductoEstadisticaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_sucursalProductoEstadisticaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalProductoEstadisticaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_sucursalProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalProductoEstadisticaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_bodegaProductoEstadisticaUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaProductoEstadisticaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_bodegaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaProductoEstadisticaBusqueda"));
		//jButtonid_productoProductoEstadistica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoProductoEstadisticaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_productoProductoEstadistica.addActionListener(new ButtonActionListener(this,"id_productoProductoEstadistica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_productoProductoEstadisticaUpdate.addActionListener(new ButtonActionListener(this,"id_productoProductoEstadisticaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_productoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"id_productoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonprecio_ultima_compraProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"precio_ultima_compraProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonprecio_ultima_ventaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"precio_ultima_ventaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonprecio_ultima_cotizacionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"precio_ultima_cotizacionProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonprecio_ultima_proformaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"precio_ultima_proformaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_disponibleProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_disponibleProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_reservadaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_reservadaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_demandaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_demandaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_maximoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_maximoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_minimoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_minimoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_fisicaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_fisicaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_orden_compraProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_orden_compraProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_pedidaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_pedidaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncantidad_requisicionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_requisicionProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_ingresoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_ingresoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_egresoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_egresoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_produccionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_produccionProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_compraProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_compraProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_ventaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_ventaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_devolucionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_devolucionProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_orden_compraProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_orden_compraProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_pedidoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_pedidoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtonfecha_ultima_requisicionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_requisicionProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_ingresoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_ingresoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_egresoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_egresoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_compraProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_compraProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_ventaProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_ventaProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_producidoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_producidoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtontotal_devueltoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"total_devueltoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncosto_ultimoProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"costo_ultimoProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncosto_totalProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"costo_totalProductoEstadisticaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProductoEstadistica.jButtoncosto_produccionProductoEstadisticaBusqueda.addActionListener(new ButtonActionListener(this,"costo_produccionProductoEstadisticaBusqueda"));
		
		
		this.jButtonFK_IdBodegaProductoEstadistica.addActionListener(new ButtonActionListener(this,"FK_IdBodegaProductoEstadistica"));

		this.jButtonFK_IdProductoProductoEstadistica.addActionListener(new ButtonActionListener(this,"FK_IdProductoProductoEstadistica"));

		this.jButtonBuscarFK_IdProductoid_productoProductoEstadistica.addActionListener(new ButtonActionListener(this,"id_productoProductoEstadistica"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionProductoEstadistica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionProductoEstadisticaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarProductoEstadisticaActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarProductoEstadistica.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosProductoEstadistica(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(ProductoEstadistica productoestadisticaAux:this.productoestadisticaLogic.getProductoEstadisticas()) {
					productoestadisticaAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ProductoEstadistica productoestadisticaAux:productoestadisticas) {
					productoestadisticaAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosProductoEstadisticaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingProductoEstadistica(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ProductoEstadistica productoestadisticaAux:this.productoestadisticaLogic.getProductoEstadisticas()) {
						productoestadisticaAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ProductoEstadistica productoestadisticaAux:productoestadisticas) {
						productoestadisticaAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(ProductoEstadistica productoestadisticaAux:this.productoestadisticaLogic.getProductoEstadisticas()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ProductoEstadistica productoestadisticaAux:productoestadisticas) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaProductoEstadistica(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosProductoEstadistica.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosProductoEstadistica.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosProductoEstadisticaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingProductoEstadistica(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosProductoEstadistica.getSelectedRows();
			
			ProductoEstadistica productoestadisticaLocal=new ProductoEstadistica();
			
			//this.seleccionarTodosProductoEstadistica(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoestadisticaLocal =(ProductoEstadistica) this.productoestadisticaLogic.getProductoEstadisticas().toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					productoestadisticaLocal =(ProductoEstadistica) this.productoestadisticas.toArray()[this.jTableDatosProductoEstadistica.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				productoestadisticaLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ProductoEstadistica productoestadisticaAux:this.productoestadisticaLogic.getProductoEstadisticas()) {
						productoestadisticaAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ProductoEstadistica productoestadisticaAux:productoestadisticas) {
						productoestadisticaAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaProductoEstadistica(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosProductoEstadistica.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosProductoEstadistica.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosProductoEstadistica,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualProductoEstadisticaItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarProductoEstadisticaParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralProductoEstadisticaActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingProductoEstadistica(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralProductoEstadistica.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ProductoEstadistica productoestadisticaAux:this.productoestadisticaLogic.getProductoEstadisticas()) {
				
						if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOMPRA)) {
							existe=true;
							productoestadisticaAux.setprecio_ultima_compra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAVENTA)) {
							existe=true;
							productoestadisticaAux.setprecio_ultima_venta(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOTIZACION)) {
							existe=true;
							productoestadisticaAux.setprecio_ultima_cotizacion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAPROFORMA)) {
							existe=true;
							productoestadisticaAux.setprecio_ultima_proforma(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE)) {
							existe=true;
							productoestadisticaAux.setcantidad_disponible(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADRESERVADA)) {
							existe=true;
							productoestadisticaAux.setcantidad_reservada(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDEMANDA)) {
							existe=true;
							productoestadisticaAux.setcantidad_demanda(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO)) {
							existe=true;
							productoestadisticaAux.setcantidad_maximo(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO)) {
							existe=true;
							productoestadisticaAux.setcantidad_minimo(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADFISICA)) {
							existe=true;
							productoestadisticaAux.setcantidad_fisica(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADORDENCOMPRA)) {
							existe=true;
							productoestadisticaAux.setcantidad_orden_compra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADPEDIDA)) {
							existe=true;
							productoestadisticaAux.setcantidad_pedida(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADREQUISICION)) {
							existe=true;
							productoestadisticaAux.setcantidad_requisicion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_ingreso(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_egreso(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_produccion(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_compra(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_venta(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_devolucion(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_orden_compra(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_pedido(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_requisicion(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_TOTALINGRESO)) {
							existe=true;
							productoestadisticaAux.settotal_ingreso(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_TOTALEGRESO)) {
							existe=true;
							productoestadisticaAux.settotal_egreso(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_TOTALCOMPRA)) {
							existe=true;
							productoestadisticaAux.settotal_compra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_TOTALVENTA)) {
							existe=true;
							productoestadisticaAux.settotal_venta(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_TOTALPRODUCIDO)) {
							existe=true;
							productoestadisticaAux.settotal_producido(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_TOTALDEVUELTO)) {
							existe=true;
							productoestadisticaAux.settotal_devuelto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_COSTOULTIMO)) {
							existe=true;
							productoestadisticaAux.setcosto_ultimo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_COSTOTOTAL)) {
							existe=true;
							productoestadisticaAux.setcosto_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_COSTOPRODUCCION)) {
							existe=true;
							productoestadisticaAux.setcosto_produccion(Double.parseDouble(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ProductoEstadistica productoestadisticaAux:productoestadisticas) {
					
						if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOMPRA)) {
							existe=true;
							productoestadisticaAux.setprecio_ultima_compra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAVENTA)) {
							existe=true;
							productoestadisticaAux.setprecio_ultima_venta(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOTIZACION)) {
							existe=true;
							productoestadisticaAux.setprecio_ultima_cotizacion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAPROFORMA)) {
							existe=true;
							productoestadisticaAux.setprecio_ultima_proforma(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE)) {
							existe=true;
							productoestadisticaAux.setcantidad_disponible(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADRESERVADA)) {
							existe=true;
							productoestadisticaAux.setcantidad_reservada(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDEMANDA)) {
							existe=true;
							productoestadisticaAux.setcantidad_demanda(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO)) {
							existe=true;
							productoestadisticaAux.setcantidad_maximo(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO)) {
							existe=true;
							productoestadisticaAux.setcantidad_minimo(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADFISICA)) {
							existe=true;
							productoestadisticaAux.setcantidad_fisica(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADORDENCOMPRA)) {
							existe=true;
							productoestadisticaAux.setcantidad_orden_compra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADPEDIDA)) {
							existe=true;
							productoestadisticaAux.setcantidad_pedida(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADREQUISICION)) {
							existe=true;
							productoestadisticaAux.setcantidad_requisicion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_ingreso(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_egreso(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_produccion(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_compra(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_venta(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_devolucion(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_orden_compra(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_pedido(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION)) {
							existe=true;
							productoestadisticaAux.setfecha_ultima_requisicion(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_TOTALINGRESO)) {
							existe=true;
							productoestadisticaAux.settotal_ingreso(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_TOTALEGRESO)) {
							existe=true;
							productoestadisticaAux.settotal_egreso(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_TOTALCOMPRA)) {
							existe=true;
							productoestadisticaAux.settotal_compra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_TOTALVENTA)) {
							existe=true;
							productoestadisticaAux.settotal_venta(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_TOTALPRODUCIDO)) {
							existe=true;
							productoestadisticaAux.settotal_producido(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_TOTALDEVUELTO)) {
							existe=true;
							productoestadisticaAux.settotal_devuelto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_COSTOULTIMO)) {
							existe=true;
							productoestadisticaAux.setcosto_ultimo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_COSTOTOTAL)) {
							existe=true;
							productoestadisticaAux.setcosto_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_COSTOPRODUCCION)) {
							existe=true;
							productoestadisticaAux.setcosto_produccion(Double.parseDouble(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaProductoEstadistica(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesProductoEstadisticaActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingProductoEstadistica(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioProductoEstadistica=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesProductoEstadistica.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxTiposAccionesFormularioProductoEstadistica.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteProductoEstadistica) {				
					conSplash=true;//false;										
					
					//this.startProcessProductoEstadistica(conSplash);
				
					this.generarReporteProductoEstadisticasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesProductoEstadistica.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxTiposAccionesFormularioProductoEstadistica.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoProductoEstadisticasSeleccionados();
				//this.jComboBoxTiposAccionesProductoEstadistica.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoProductoEstadisticasSeleccionados(false);
				//this.jComboBoxTiposAccionesProductoEstadistica.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoProductoEstadisticasSeleccionados(true);
				//this.jComboBoxTiposAccionesProductoEstadistica.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessProductoEstadistica();
				
				this.exportarProductoEstadisticasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesProductoEstadistica.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxTiposAccionesFormularioProductoEstadistica.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionProductoEstadisticas();
				//this.importarProductoEstadisticas();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesProductoEstadistica.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxTiposAccionesFormularioProductoEstadistica.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessProductoEstadistica();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelProductoEstadisticasSeleccionados();
				//this.jComboBoxTiposAccionesProductoEstadistica.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Estadistica", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessProductoEstadistica();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoProductoEstadistica)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyProductoEstadistica(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Estadistica",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesProductoEstadistica.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxTiposAccionesFormularioProductoEstadistica.setSelectedIndex(0);					
				}	
			} 			
			else if(ProductoEstadisticaBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteProductoEstadistica) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessProductoEstadistica(conSplash);
					
						//this.actualizarParametrosGeneralProductoEstadistica();
						
						this.generarReporteProcesoAccionProductoEstadisticasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesProductoEstadistica.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxTiposAccionesFormularioProductoEstadistica.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(ProductoEstadisticaBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO EstadisticaS SELECCIONADOS?", "MANTENIMIENTO DE Estadistica", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessProductoEstadistica();
				
						this.actualizarParametrosGeneralProductoEstadistica();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.productoestadisticaReturnGeneral=productoestadisticaLogic.procesarAccionProductoEstadisticasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.productoestadisticaLogic.getProductoEstadisticas(),this.productoestadisticaParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarProductoEstadisticaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesProductoEstadistica.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxTiposAccionesFormularioProductoEstadistica.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralProductoEstadistica();
					
					ProductoEstadisticaBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarProductoEstadisticaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesProductoEstadistica.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxTiposAccionesFormularioProductoEstadistica.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessProductoEstadistica(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesProductoEstadisticaActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessProductoEstadistica();
			
			if(this.jInternalFrameDetalleFormProductoEstadistica==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<ProductoEstadistica> productoestadisticasSeleccionados=new ArrayList<ProductoEstadistica>();		
			ProductoEstadistica productoestadistica=new ProductoEstadistica();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingProductoEstadistica(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesProductoEstadistica.getSelectedItem();
			
			
			
			
			productoestadisticasSeleccionados=this.getProductoEstadisticasSeleccionados(true);
			//this.sTipoAccion;
			
			if(productoestadisticasSeleccionados.size()==1) {
				for(ProductoEstadistica productoestadisticaAux:productoestadisticasSeleccionados) {
					productoestadistica=productoestadisticaAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessProductoEstadistica();
			
      		//this.finishProcessProductoEstadistica(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarProductoEstadisticaReturnGeneral() throws Exception {
		if(this.productoestadisticaReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.productoestadisticaReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.productoestadisticaReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.productoestadisticaReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.productoestadisticaReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.productoestadisticaReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingProductoEstadistica(false);
		}
		
		if(this.productoestadisticaReturnGeneral.getConRetornoLista() || this.productoestadisticaReturnGeneral.getConRetornoObjeto()) {
			if(this.productoestadisticaReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.productoestadisticaLogic.setProductoEstadisticas(this.productoestadisticaReturnGeneral.getProductoEstadisticas());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.productoestadisticaReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.productoestadisticaLogic.setProductoEstadistica(this.productoestadisticaReturnGeneral.getProductoEstadistica());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingProductoEstadistica(false);
		}
	}
	
	public void actualizarParametrosGeneralProductoEstadistica() throws Exception {
		
		
	}
	
	public ArrayList<ProductoEstadistica> getProductoEstadisticasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<ProductoEstadistica> productoestadisticasSeleccionados=new ArrayList<ProductoEstadistica>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioProductoEstadistica) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(ProductoEstadistica productoestadisticaAux:productoestadisticaLogic.getProductoEstadisticas()) {
					if(productoestadisticaAux.getIsSelected()) {
						productoestadisticasSeleccionados.add(productoestadisticaAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ProductoEstadistica productoestadisticaAux:this.productoestadisticas) {
					if(productoestadisticaAux.getIsSelected()) {
						productoestadisticasSeleccionados.add(productoestadisticaAux);				
					}
				}
			}
			
			if(productoestadisticasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						productoestadisticasSeleccionados.addAll(this.productoestadisticaLogic.getProductoEstadisticas());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						productoestadisticasSeleccionados.addAll(this.productoestadisticas);				
					}
				}
			}
		} else {
			productoestadisticasSeleccionados.add(this.productoestadistica);
		}
		
		return productoestadisticasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteProductoEstadisticasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalProductoEstadisticasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoProductoEstadisticasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoProductoEstadisticasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoProductoEstadisticasSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Estadistica",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesProductoEstadisticasSeleccionados() throws Exception {
		ArrayList<ProductoEstadistica> productoestadisticasSeleccionados=new ArrayList<ProductoEstadistica>();		
		
		productoestadisticasSeleccionados=this.getProductoEstadisticasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteProductoEstadisticas("Todos",productoestadisticasSeleccionados);
		
	}	
	
	public void generarReporteNormalProductoEstadisticasSeleccionados() throws Exception {
		ArrayList<ProductoEstadistica> productoestadisticasSeleccionados=new ArrayList<ProductoEstadistica>();		
		
		productoestadisticasSeleccionados=this.getProductoEstadisticasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteProductoEstadisticas("Todos",productoestadisticasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionProductoEstadisticasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<ProductoEstadistica> productoestadisticasSeleccionados=new ArrayList<ProductoEstadistica>();
		
		productoestadisticasSeleccionados=this.getProductoEstadisticasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteProductoEstadisticas("Todos",productoestadisticasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoProductoEstadisticasSeleccionados() throws Exception {
		ArrayList<ProductoEstadistica> productoestadisticasSeleccionados=new ArrayList<ProductoEstadistica>();		
		
		
		this.abrirInicializarFrameReporteDinamicoProductoEstadistica();
		
		
		productoestadisticasSeleccionados=this.getProductoEstadisticasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoProductoEstadistica();
		
		
		//this.generarReporteProductoEstadisticas("Todos",productoestadisticasSeleccionados ,productoestadisticaImplementable,productoestadisticaImplementableHome);
	}
	
	public void mostrarImportacionProductoEstadisticas() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionProductoEstadistica();
		
		this.abrirFrameImportacionProductoEstadistica();		
		
			
		//this.generarReporteProductoEstadisticas("Todos",productoestadisticasSeleccionados ,productoestadisticaImplementable,productoestadisticaImplementableHome);
	}
	
	public void importarProductoEstadisticas() throws Exception {		
	
	}
	
	public void exportarProductoEstadisticasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelProductoEstadisticasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoProductoEstadisticasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlProductoEstadisticasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Estadistica",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoProductoEstadisticasSeleccionados() throws Exception {
		ArrayList<ProductoEstadistica> productoestadisticasSeleccionados=new ArrayList<ProductoEstadistica>();		
		
		productoestadisticasSeleccionados=this.getProductoEstadisticasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"productoestadistica."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarProductoEstadistica(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(ProductoEstadistica productoestadisticaAux:productoestadisticasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarProductoEstadistica(productoestadisticaAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//productoestadisticaAux.setsDetalleGeneralEntityReporte(productoestadisticaAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estadistica",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarProductoEstadistica(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_IDBODEGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_IDPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAVENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOTIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAPROFORMA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADRESERVADA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDEMANDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADFISICA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADORDENCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADPEDIDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADREQUISICION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_TOTALINGRESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_TOTALEGRESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_TOTALCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_TOTALVENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_TOTALPRODUCIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_TOTALDEVUELTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_COSTOULTIMO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_COSTOTOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoEstadisticaConstantesFunciones.LABEL_COSTOPRODUCCION;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarProductoEstadistica(ProductoEstadistica productoestadistica,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=productoestadistica.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getbodega_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getprecio_ultima_compra().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getprecio_ultima_venta().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getprecio_ultima_cotizacion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getprecio_ultima_proforma().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getcantidad_disponible().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getcantidad_reservada().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getcantidad_demanda().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getcantidad_maximo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getcantidad_minimo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getcantidad_fisica().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getcantidad_orden_compra().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getcantidad_pedida().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getcantidad_requisicion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getfecha_ultima_ingreso().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getfecha_ultima_egreso().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getfecha_ultima_produccion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getfecha_ultima_compra().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getfecha_ultima_venta().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getfecha_ultima_devolucion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getfecha_ultima_orden_compra().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getfecha_ultima_pedido().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getfecha_ultima_requisicion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.gettotal_ingreso().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.gettotal_egreso().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.gettotal_compra().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.gettotal_venta().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.gettotal_producido().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.gettotal_devuelto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getcosto_ultimo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getcosto_total().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=productoestadistica.getcosto_produccion().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelProductoEstadisticasSeleccionados() throws Exception {
		ArrayList<ProductoEstadistica> productoestadisticasSeleccionados=new ArrayList<ProductoEstadistica>();		
		
		productoestadisticasSeleccionados=this.getProductoEstadisticasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"productoestadistica.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("ProductoEstadisticas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelProductoEstadistica(row);				
				iRow++;
			}				
			
			for(ProductoEstadistica productoestadisticaAux:productoestadisticasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelProductoEstadistica(productoestadisticaAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estadistica",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlProductoEstadisticasSeleccionados() throws Exception {
		ArrayList<ProductoEstadistica> productoestadisticasSeleccionados=new ArrayList<ProductoEstadistica>();		
		
		productoestadisticasSeleccionados=this.getProductoEstadisticasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"productoestadistica.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("productoestadisticas");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("productoestadistica");
			//elementRoot.appendChild(element);
		
			for(ProductoEstadistica productoestadisticaAux:productoestadisticasSeleccionados) {
				element = document.createElement("productoestadistica");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlProductoEstadistica(productoestadisticaAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estadistica",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelProductoEstadistica(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_IDBODEGA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_IDPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAVENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMACOTIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_PRECIOULTIMAPROFORMA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADRESERVADA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDEMANDA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADFISICA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADORDENCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADPEDIDA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADREQUISICION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALINGRESO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALEGRESO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALVENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALPRODUCIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_TOTALDEVUELTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_COSTOULTIMO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_COSTOTOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoEstadisticaConstantesFunciones.LABEL_COSTOPRODUCCION);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelProductoEstadistica(ProductoEstadistica productoestadistica,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getbodega_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getprecio_ultima_compra());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getprecio_ultima_venta());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getprecio_ultima_cotizacion());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getprecio_ultima_proforma());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getcantidad_disponible());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getcantidad_reservada());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getcantidad_demanda());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getcantidad_maximo());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getcantidad_minimo());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getcantidad_fisica());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getcantidad_orden_compra());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getcantidad_pedida());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getcantidad_requisicion());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getfecha_ultima_ingreso());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getfecha_ultima_egreso());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getfecha_ultima_produccion());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getfecha_ultima_compra());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getfecha_ultima_venta());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getfecha_ultima_devolucion());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getfecha_ultima_orden_compra());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getfecha_ultima_pedido());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getfecha_ultima_requisicion());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.gettotal_ingreso());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.gettotal_egreso());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.gettotal_compra());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.gettotal_venta());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.gettotal_producido());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.gettotal_devuelto());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getcosto_ultimo());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getcosto_total());
		cell = row.createCell(iColumn++);cell.setCellValue(productoestadistica.getcosto_produccion());				
	}
	
	public void setFilaDatosExportarXmlProductoEstadistica(ProductoEstadistica productoestadistica,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(ProductoEstadisticaConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(productoestadistica.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(ProductoEstadisticaConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(productoestadistica.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(ProductoEstadisticaConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(productoestadistica.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(ProductoEstadisticaConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(productoestadistica.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementbodega_descripcion = document.createElement(ProductoEstadisticaConstantesFunciones.IDBODEGA);
		elementbodega_descripcion.appendChild(document.createTextNode(productoestadistica.getbodega_descripcion()));
		element.appendChild(elementbodega_descripcion);

		Element elementproducto_descripcion = document.createElement(ProductoEstadisticaConstantesFunciones.IDPRODUCTO);
		elementproducto_descripcion.appendChild(document.createTextNode(productoestadistica.getproducto_descripcion()));
		element.appendChild(elementproducto_descripcion);

		Element elementprecio_ultima_compra = document.createElement(ProductoEstadisticaConstantesFunciones.PRECIOULTIMACOMPRA);
		elementprecio_ultima_compra.appendChild(document.createTextNode(productoestadistica.getprecio_ultima_compra().toString().trim()));
		element.appendChild(elementprecio_ultima_compra);

		Element elementprecio_ultima_venta = document.createElement(ProductoEstadisticaConstantesFunciones.PRECIOULTIMAVENTA);
		elementprecio_ultima_venta.appendChild(document.createTextNode(productoestadistica.getprecio_ultima_venta().toString().trim()));
		element.appendChild(elementprecio_ultima_venta);

		Element elementprecio_ultima_cotizacion = document.createElement(ProductoEstadisticaConstantesFunciones.PRECIOULTIMACOTIZACION);
		elementprecio_ultima_cotizacion.appendChild(document.createTextNode(productoestadistica.getprecio_ultima_cotizacion().toString().trim()));
		element.appendChild(elementprecio_ultima_cotizacion);

		Element elementprecio_ultima_proforma = document.createElement(ProductoEstadisticaConstantesFunciones.PRECIOULTIMAPROFORMA);
		elementprecio_ultima_proforma.appendChild(document.createTextNode(productoestadistica.getprecio_ultima_proforma().toString().trim()));
		element.appendChild(elementprecio_ultima_proforma);

		Element elementcantidad_disponible = document.createElement(ProductoEstadisticaConstantesFunciones.CANTIDADDISPONIBLE);
		elementcantidad_disponible.appendChild(document.createTextNode(productoestadistica.getcantidad_disponible().toString().trim()));
		element.appendChild(elementcantidad_disponible);

		Element elementcantidad_reservada = document.createElement(ProductoEstadisticaConstantesFunciones.CANTIDADRESERVADA);
		elementcantidad_reservada.appendChild(document.createTextNode(productoestadistica.getcantidad_reservada().toString().trim()));
		element.appendChild(elementcantidad_reservada);

		Element elementcantidad_demanda = document.createElement(ProductoEstadisticaConstantesFunciones.CANTIDADDEMANDA);
		elementcantidad_demanda.appendChild(document.createTextNode(productoestadistica.getcantidad_demanda().toString().trim()));
		element.appendChild(elementcantidad_demanda);

		Element elementcantidad_maximo = document.createElement(ProductoEstadisticaConstantesFunciones.CANTIDADMAXIMO);
		elementcantidad_maximo.appendChild(document.createTextNode(productoestadistica.getcantidad_maximo().toString().trim()));
		element.appendChild(elementcantidad_maximo);

		Element elementcantidad_minimo = document.createElement(ProductoEstadisticaConstantesFunciones.CANTIDADMINIMO);
		elementcantidad_minimo.appendChild(document.createTextNode(productoestadistica.getcantidad_minimo().toString().trim()));
		element.appendChild(elementcantidad_minimo);

		Element elementcantidad_fisica = document.createElement(ProductoEstadisticaConstantesFunciones.CANTIDADFISICA);
		elementcantidad_fisica.appendChild(document.createTextNode(productoestadistica.getcantidad_fisica().toString().trim()));
		element.appendChild(elementcantidad_fisica);

		Element elementcantidad_orden_compra = document.createElement(ProductoEstadisticaConstantesFunciones.CANTIDADORDENCOMPRA);
		elementcantidad_orden_compra.appendChild(document.createTextNode(productoestadistica.getcantidad_orden_compra().toString().trim()));
		element.appendChild(elementcantidad_orden_compra);

		Element elementcantidad_pedida = document.createElement(ProductoEstadisticaConstantesFunciones.CANTIDADPEDIDA);
		elementcantidad_pedida.appendChild(document.createTextNode(productoestadistica.getcantidad_pedida().toString().trim()));
		element.appendChild(elementcantidad_pedida);

		Element elementcantidad_requisicion = document.createElement(ProductoEstadisticaConstantesFunciones.CANTIDADREQUISICION);
		elementcantidad_requisicion.appendChild(document.createTextNode(productoestadistica.getcantidad_requisicion().toString().trim()));
		element.appendChild(elementcantidad_requisicion);

		Element elementfecha_ultima_ingreso = document.createElement(ProductoEstadisticaConstantesFunciones.FECHAULTIMAINGRESO);
		elementfecha_ultima_ingreso.appendChild(document.createTextNode(productoestadistica.getfecha_ultima_ingreso().toString().trim()));
		element.appendChild(elementfecha_ultima_ingreso);

		Element elementfecha_ultima_egreso = document.createElement(ProductoEstadisticaConstantesFunciones.FECHAULTIMAEGRESO);
		elementfecha_ultima_egreso.appendChild(document.createTextNode(productoestadistica.getfecha_ultima_egreso().toString().trim()));
		element.appendChild(elementfecha_ultima_egreso);

		Element elementfecha_ultima_produccion = document.createElement(ProductoEstadisticaConstantesFunciones.FECHAULTIMAPRODUCCION);
		elementfecha_ultima_produccion.appendChild(document.createTextNode(productoestadistica.getfecha_ultima_produccion().toString().trim()));
		element.appendChild(elementfecha_ultima_produccion);

		Element elementfecha_ultima_compra = document.createElement(ProductoEstadisticaConstantesFunciones.FECHAULTIMACOMPRA);
		elementfecha_ultima_compra.appendChild(document.createTextNode(productoestadistica.getfecha_ultima_compra().toString().trim()));
		element.appendChild(elementfecha_ultima_compra);

		Element elementfecha_ultima_venta = document.createElement(ProductoEstadisticaConstantesFunciones.FECHAULTIMAVENTA);
		elementfecha_ultima_venta.appendChild(document.createTextNode(productoestadistica.getfecha_ultima_venta().toString().trim()));
		element.appendChild(elementfecha_ultima_venta);

		Element elementfecha_ultima_devolucion = document.createElement(ProductoEstadisticaConstantesFunciones.FECHAULTIMADEVOLUCION);
		elementfecha_ultima_devolucion.appendChild(document.createTextNode(productoestadistica.getfecha_ultima_devolucion().toString().trim()));
		element.appendChild(elementfecha_ultima_devolucion);

		Element elementfecha_ultima_orden_compra = document.createElement(ProductoEstadisticaConstantesFunciones.FECHAULTIMAORDENCOMPRA);
		elementfecha_ultima_orden_compra.appendChild(document.createTextNode(productoestadistica.getfecha_ultima_orden_compra().toString().trim()));
		element.appendChild(elementfecha_ultima_orden_compra);

		Element elementfecha_ultima_pedido = document.createElement(ProductoEstadisticaConstantesFunciones.FECHAULTIMAPEDIDO);
		elementfecha_ultima_pedido.appendChild(document.createTextNode(productoestadistica.getfecha_ultima_pedido().toString().trim()));
		element.appendChild(elementfecha_ultima_pedido);

		Element elementfecha_ultima_requisicion = document.createElement(ProductoEstadisticaConstantesFunciones.FECHAULTIMAREQUISICION);
		elementfecha_ultima_requisicion.appendChild(document.createTextNode(productoestadistica.getfecha_ultima_requisicion().toString().trim()));
		element.appendChild(elementfecha_ultima_requisicion);

		Element elementtotal_ingreso = document.createElement(ProductoEstadisticaConstantesFunciones.TOTALINGRESO);
		elementtotal_ingreso.appendChild(document.createTextNode(productoestadistica.gettotal_ingreso().toString().trim()));
		element.appendChild(elementtotal_ingreso);

		Element elementtotal_egreso = document.createElement(ProductoEstadisticaConstantesFunciones.TOTALEGRESO);
		elementtotal_egreso.appendChild(document.createTextNode(productoestadistica.gettotal_egreso().toString().trim()));
		element.appendChild(elementtotal_egreso);

		Element elementtotal_compra = document.createElement(ProductoEstadisticaConstantesFunciones.TOTALCOMPRA);
		elementtotal_compra.appendChild(document.createTextNode(productoestadistica.gettotal_compra().toString().trim()));
		element.appendChild(elementtotal_compra);

		Element elementtotal_venta = document.createElement(ProductoEstadisticaConstantesFunciones.TOTALVENTA);
		elementtotal_venta.appendChild(document.createTextNode(productoestadistica.gettotal_venta().toString().trim()));
		element.appendChild(elementtotal_venta);

		Element elementtotal_producido = document.createElement(ProductoEstadisticaConstantesFunciones.TOTALPRODUCIDO);
		elementtotal_producido.appendChild(document.createTextNode(productoestadistica.gettotal_producido().toString().trim()));
		element.appendChild(elementtotal_producido);

		Element elementtotal_devuelto = document.createElement(ProductoEstadisticaConstantesFunciones.TOTALDEVUELTO);
		elementtotal_devuelto.appendChild(document.createTextNode(productoestadistica.gettotal_devuelto().toString().trim()));
		element.appendChild(elementtotal_devuelto);

		Element elementcosto_ultimo = document.createElement(ProductoEstadisticaConstantesFunciones.COSTOULTIMO);
		elementcosto_ultimo.appendChild(document.createTextNode(productoestadistica.getcosto_ultimo().toString().trim()));
		element.appendChild(elementcosto_ultimo);

		Element elementcosto_total = document.createElement(ProductoEstadisticaConstantesFunciones.COSTOTOTAL);
		elementcosto_total.appendChild(document.createTextNode(productoestadistica.getcosto_total().toString().trim()));
		element.appendChild(elementcosto_total);

		Element elementcosto_produccion = document.createElement(ProductoEstadisticaConstantesFunciones.COSTOPRODUCCION);
		elementcosto_produccion.appendChild(document.createTextNode(productoestadistica.getcosto_produccion().toString().trim()));
		element.appendChild(elementcosto_produccion);
	}
	
	public void generarReporteGroupGenericoProductoEstadisticasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<ProductoEstadistica> productoestadisticasSeleccionados=new ArrayList<ProductoEstadistica>();
		
		productoestadisticasSeleccionados=this.getProductoEstadisticasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoProductoEstadistica(productoestadisticasSeleccionados);
		
		this.generarReporteProductoEstadisticas("Todos",productoestadisticasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoProductoEstadistica(ArrayList<ProductoEstadistica> productoestadisticasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(ProductoEstadistica productoestadisticaAux:productoestadisticasSeleccionados) {
				productoestadisticaAux.setsDetalleGeneralEntityReporte(productoestadisticaAux.toString());
			
				if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(productoestadisticaAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(productoestadisticaAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_IDBODEGA)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(productoestadisticaAux.getbodega_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_IDPRODUCTO)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(productoestadisticaAux.getproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADDISPONIBLE)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(productoestadisticaAux.getcantidad_disponible().toString());
				}
				 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMAXIMO)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(productoestadisticaAux.getcantidad_maximo().toString());
				}
				 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_CANTIDADMINIMO)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(productoestadisticaAux.getcantidad_minimo().toString());
				}
				 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAINGRESO)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(productoestadisticaAux.getfecha_ultima_ingreso()));
				}
				 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAEGRESO)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(productoestadisticaAux.getfecha_ultima_egreso()));
				}
				 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPRODUCCION)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(productoestadisticaAux.getfecha_ultima_produccion()));
				}
				 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMACOMPRA)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(productoestadisticaAux.getfecha_ultima_compra()));
				}
				 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAVENTA)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(productoestadisticaAux.getfecha_ultima_venta()));
				}
				 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(productoestadisticaAux.getfecha_ultima_devolucion()));
				}
				 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAORDENCOMPRA)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(productoestadisticaAux.getfecha_ultima_orden_compra()));
				}
				 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAPEDIDO)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(productoestadisticaAux.getfecha_ultima_pedido()));
				}
				 else if(sTipoSeleccionar.equals(ProductoEstadisticaConstantesFunciones.LABEL_FECHAULTIMAREQUISICION)) {
					existe=true;
					productoestadisticaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(productoestadisticaAux.getfecha_ultima_requisicion()));
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoEstadisticaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesProductoEstadistica(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoProductoEstadistica=true;
				this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica=true;
				this.isVisibilidadCeldaGuardarCambiosProductoEstadistica=true;
			}
			
			this.isVisibilidadCeldaModificarProductoEstadistica=false;
			this.isVisibilidadCeldaActualizarProductoEstadistica=false;
			this.isVisibilidadCeldaEliminarProductoEstadistica=false;
			this.isVisibilidadCeldaCancelarProductoEstadistica=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProductoEstadistica=true;
				} else {
					this.isVisibilidadCeldaGuardarProductoEstadistica=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoProductoEstadistica=false;
			this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica=false;
			this.isVisibilidadCeldaGuardarCambiosProductoEstadistica=false;
			this.isVisibilidadCeldaModificarProductoEstadistica=false;
			this.isVisibilidadCeldaActualizarProductoEstadistica=true;
			this.isVisibilidadCeldaEliminarProductoEstadistica=false;
			this.isVisibilidadCeldaCancelarProductoEstadistica=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProductoEstadistica=true;
				} else {
					this.isVisibilidadCeldaGuardarProductoEstadistica=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoProductoEstadistica=false;
			this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica=false;
			this.isVisibilidadCeldaGuardarCambiosProductoEstadistica=false;
			this.isVisibilidadCeldaModificarProductoEstadistica=false;
			this.isVisibilidadCeldaActualizarProductoEstadistica=true;
			this.isVisibilidadCeldaEliminarProductoEstadistica=true;
			this.isVisibilidadCeldaCancelarProductoEstadistica=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProductoEstadistica=true;
				} else {
					this.isVisibilidadCeldaGuardarProductoEstadistica=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoProductoEstadistica=false;
			this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica=false;
			this.isVisibilidadCeldaGuardarCambiosProductoEstadistica=false;
			this.isVisibilidadCeldaModificarProductoEstadistica=false;
			this.isVisibilidadCeldaActualizarProductoEstadistica=true;
			this.isVisibilidadCeldaEliminarProductoEstadistica=false;
			this.isVisibilidadCeldaCancelarProductoEstadistica=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProductoEstadistica=false;
				} else {
					this.isVisibilidadCeldaGuardarProductoEstadistica=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoProductoEstadistica=true;
			this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica=true;
			this.isVisibilidadCeldaGuardarCambiosProductoEstadistica=true;
			this.isVisibilidadCeldaModificarProductoEstadistica=false;
			this.isVisibilidadCeldaActualizarProductoEstadistica=false;
			this.isVisibilidadCeldaEliminarProductoEstadistica=false;
			this.isVisibilidadCeldaCancelarProductoEstadistica=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProductoEstadistica=true;
				} else {
					this.isVisibilidadCeldaGuardarProductoEstadistica=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoProductoEstadistica=false;
			this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica=false;
			this.isVisibilidadCeldaGuardarCambiosProductoEstadistica=false;
			this.isVisibilidadCeldaActualizarProductoEstadistica=false;
			this.isVisibilidadCeldaEliminarProductoEstadistica=false;
			this.isVisibilidadCeldaCancelarProductoEstadistica=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProductoEstadistica=false;
				} else {
					this.isVisibilidadCeldaGuardarProductoEstadistica=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoProductoEstadistica=false;
			this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica=false;
			this.isVisibilidadCeldaGuardarCambiosProductoEstadistica=false;
			this.isVisibilidadCeldaModificarProductoEstadistica=true;
			this.isVisibilidadCeldaActualizarProductoEstadistica=false;
			this.isVisibilidadCeldaEliminarProductoEstadistica=false;
			this.isVisibilidadCeldaCancelarProductoEstadistica=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProductoEstadistica=false;
				} else {
					this.isVisibilidadCeldaGuardarProductoEstadistica=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(ProductoEstadisticaJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoProductoEstadistica=true;
			this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica=true;
			this.isVisibilidadCeldaGuardarCambiosProductoEstadistica=true;
		} else {
			this.actualizarEstadoPanelsProductoEstadistica(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarProductoEstadistica=false;
			//this.isVisibilidadCeldaVerFormProductoEstadistica=false;
			this.isVisibilidadCeldaDuplicarProductoEstadistica=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!productoestadisticaSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica=false;
		} else {
			this.isVisibilidadCeldaNuevoProductoEstadistica=false;
			this.isVisibilidadCeldaGuardarCambiosProductoEstadistica=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(productoestadisticaSessionBean.getEsGuardarRelacionado()) {
			if(!productoestadisticaSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica=false;												
			}
			
			this.jButtonCerrarProductoEstadistica.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesProductoEstadistica=false;
		}
		
		if(!this.permiteMantenimiento(this.productoestadistica)) {
			this.isVisibilidadCeldaActualizarProductoEstadistica=false;
			this.isVisibilidadCeldaEliminarProductoEstadistica=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesProductoEstadistica() {
	}
	
	public void actualizarEstadoPanelsProductoEstadistica(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionProductoEstadistica!=null) {
				this.jScrollPanelDatosEdicionProductoEstadistica.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProductoEstadistica!=null) {
				this.jTabbedPaneBusquedasProductoEstadistica.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosProductoEstadistica!=null) {
				this.jScrollPanelDatosProductoEstadistica.setVisible(true);
			}
			
			if(this.jPanelPaginacionProductoEstadistica!=null) {
				this.jPanelPaginacionProductoEstadistica.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesProductoEstadistica!=null) {
				this.jPanelParametrosReportesProductoEstadistica.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionProductoEstadistica!=null) {
				this.jScrollPanelDatosEdicionProductoEstadistica.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProductoEstadistica!=null) {
				this.jTabbedPaneBusquedasProductoEstadistica.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosProductoEstadistica!=null) {
				this.jScrollPanelDatosProductoEstadistica.setVisible(false);
			}
			
			if(this.jPanelPaginacionProductoEstadistica!=null) {
				this.jPanelPaginacionProductoEstadistica.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesProductoEstadistica!=null) {
				this.jPanelParametrosReportesProductoEstadistica.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionProductoEstadistica!=null) {
				this.jScrollPanelDatosEdicionProductoEstadistica.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProductoEstadistica!=null) {
				this.jTabbedPaneBusquedasProductoEstadistica.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosProductoEstadistica!=null) {
				this.jScrollPanelDatosProductoEstadistica.setVisible(false);
			}
			
			if(this.jPanelPaginacionProductoEstadistica!=null) {
				this.jPanelPaginacionProductoEstadistica.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesProductoEstadistica!=null) {
				this.jPanelParametrosReportesProductoEstadistica.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionProductoEstadistica!=null) {
				this.jScrollPanelDatosEdicionProductoEstadistica.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProductoEstadistica!=null) {
				this.jTabbedPaneBusquedasProductoEstadistica.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosProductoEstadistica!=null) {
				this.jScrollPanelDatosProductoEstadistica.setVisible(false);
			}
			
			if(this.jPanelPaginacionProductoEstadistica!=null) {
				this.jPanelPaginacionProductoEstadistica.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesProductoEstadistica!=null) {
				this.jPanelParametrosReportesProductoEstadistica.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionProductoEstadistica!=null) {
				this.jScrollPanelDatosEdicionProductoEstadistica.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProductoEstadistica!=null) {
				this.jTabbedPaneBusquedasProductoEstadistica.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosProductoEstadistica!=null) {
				this.jScrollPanelDatosProductoEstadistica.setVisible(true);
			}
			
			if(this.jPanelPaginacionProductoEstadistica!=null) {
				this.jPanelPaginacionProductoEstadistica.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesProductoEstadistica!=null) {
				this.jPanelParametrosReportesProductoEstadistica.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionProductoEstadistica!=null) {
				this.jScrollPanelDatosEdicionProductoEstadistica.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProductoEstadistica!=null) {
				this.jTabbedPaneBusquedasProductoEstadistica.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosProductoEstadistica!=null) {
				this.jScrollPanelDatosProductoEstadistica.setVisible(true);
			}
			
			if(this.jPanelPaginacionProductoEstadistica!=null) {
				this.jPanelPaginacionProductoEstadistica.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesProductoEstadistica!=null) {
				this.jPanelParametrosReportesProductoEstadistica.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionProductoEstadistica!=null) {
				this.jScrollPanelDatosEdicionProductoEstadistica.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProductoEstadistica!=null) {
				this.jTabbedPaneBusquedasProductoEstadistica.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosProductoEstadistica!=null) {
				this.jScrollPanelDatosProductoEstadistica.setVisible(true);
			}
			
			if(this.jPanelPaginacionProductoEstadistica!=null) {
				this.jPanelPaginacionProductoEstadistica.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesProductoEstadistica!=null) {
				this.jPanelParametrosReportesProductoEstadistica.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasProductoEstadistica!=null) {
					this.jTabbedPaneBusquedasProductoEstadistica.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesProductoEstadistica!=null) {
				this.jPanelParametrosReportesProductoEstadistica.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.productoestadisticaSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProductoEstadistica!=null) {
				this.jTabbedPaneBusquedasProductoEstadistica.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesProductoEstadistica!=null) {
				this.jPanelParametrosReportesProductoEstadistica.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdBodega=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasProductoEstadistica.remove(jPanelFK_IdBodegaProductoEstadistica);}

			this.isVisibilidadFK_IdProducto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasProductoEstadistica.remove(jPanelFK_IdProductoProductoEstadistica);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdBodega=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasProductoEstadistica.remove(jPanelFK_IdBodegaProductoEstadistica);}

			this.isVisibilidadFK_IdProducto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasProductoEstadistica.remove(jPanelFK_IdProductoProductoEstadistica);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodega(Boolean isParaBodega){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaNegation=!isParaBodega;

			this.isVisibilidadFK_IdBodega=isParaBodega;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasProductoEstadistica.remove(jPanelFK_IdBodegaProductoEstadistica);}

			this.isVisibilidadFK_IdProducto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasProductoEstadistica.remove(jPanelFK_IdProductoProductoEstadistica);}
		}
		
	}

	public void setVisibilidadBusquedasParaProducto(Boolean isParaProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaProductoNegation=!isParaProducto;

			this.isVisibilidadFK_IdBodega=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasProductoEstadistica.remove(jPanelFK_IdBodegaProductoEstadistica);}

			this.isVisibilidadFK_IdProducto=isParaProducto;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasProductoEstadistica.remove(jPanelFK_IdProductoProductoEstadistica);}
		}
		
	}
	
	
	
	

	public String registrarSesionProductoEstadisticaParaBusquedaProductos() throws Exception {
		Boolean isPaginaPopupProducto=false;

		try {

			if(productoestadisticaSessionBean==null) {
				productoestadisticaSessionBean=new ProductoEstadisticaSessionBean();
			}

			if(productoSessionBean==null) {
				productoSessionBean=new ProductoSessionBean();
			}

			productoSessionBean.setsPathNavegacionActual(productoestadisticaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoConstantesFunciones.SCLASSWEBTITULO);
			productoSessionBean.setisPermiteRecargarInformacion(false);
			productoSessionBean.setisPaginaPopup(true);
			isPaginaPopupProducto=productoSessionBean.getisPaginaPopup();
			productoSessionBean.setisPaginaPopup(false);
			productoSessionBean.setEstaModoBusqueda(true);
			productoSessionBean.setsFuncionBusquedaRapida("window.opener.productoestadisticaFuncionGeneral.setCombosCodigoDesdeBusquedaid_producto(TO_REPLACE);");
			productoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProducto(true);
			productoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProducto(ProductoEstadisticaConstantesFunciones.SNOMBREOPCION);
			//productoSessionBean.setisBusquedaDesdeForeignKeySesionProductoEstadistica(true);
			//productoSessionBean.setlidProductoEstadisticaActual(this.idProductoEstadisticaActual);

			productoestadisticaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProductoEstadistica(true);
			productoestadisticaSessionBean.setlIdProductoEstadisticaActualForeignKey(this.idProductoEstadisticaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//ProductoEstadisticaSessionBean productoestadisticaSessionBean=new ProductoEstadisticaSessionBean();
		
		if(this.productoestadisticaSessionBean==null) {
			this.productoestadisticaSessionBean=new ProductoEstadisticaSessionBean();
		}
		
		this.productoestadisticaSessionBean.setsUltimaBusquedaProductoEstadistica(this.getsAccionBusqueda());
		this.productoestadisticaSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.productoestadisticaSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
			productoestadisticaSessionBean.setid_bodega(this.getid_bodegaFK_IdBodega());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			productoestadisticaSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
			productoestadisticaSessionBean.setid_producto(this.getid_productoFK_IdProducto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			productoestadisticaSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//ProductoEstadisticaSessionBean productoestadisticaSessionBean=new ProductoEstadisticaSessionBean();
		
		if(this.productoestadisticaSessionBean==null) {
			this.productoestadisticaSessionBean=new ProductoEstadisticaSessionBean();
		}
		
		if(this.productoestadisticaSessionBean.getsUltimaBusquedaProductoEstadistica()!=null&&!this.productoestadisticaSessionBean.getsUltimaBusquedaProductoEstadistica().equals("")) {
			this.setsAccionBusqueda(productoestadisticaSessionBean.getsUltimaBusquedaProductoEstadistica());
			this.setiNumeroPaginacion(productoestadisticaSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(productoestadisticaSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
				this.setid_bodegaFK_IdBodega(productoestadisticaSessionBean.getid_bodega());
				productoestadisticaSessionBean.setid_bodega(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(productoestadisticaSessionBean.getid_empresa());
				productoestadisticaSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
				this.setid_productoFK_IdProducto(productoestadisticaSessionBean.getid_producto());
				productoestadisticaSessionBean.setid_producto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(productoestadisticaSessionBean.getid_sucursal());
				productoestadisticaSessionBean.setid_sucursal(-1L);
			}
		}
		
		this.productoestadisticaSessionBean.setsUltimaBusquedaProductoEstadistica("");
		this.productoestadisticaSessionBean.setiNumeroPaginacion(ProductoEstadisticaConstantesFunciones.INUMEROPAGINACION);
		this.productoestadisticaSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaProductoEstadistica(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioProductoEstadistica() {
		this.updateBorderResaltarBusquedasFormularioProductoEstadistica();
		this.updateVisibilidadBusquedasFormularioProductoEstadistica();
		this.updateHabilitarBusquedasFormularioProductoEstadistica();
	}
	
	public void updateBorderResaltarBusquedasFormularioProductoEstadistica() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasProductoEstadistica.getComponents().length>0) {
	

		if(this.productoestadisticaConstantesFunciones.resaltarFK_IdBodegaProductoEstadistica!=null) {
			index= this.jTabbedPaneBusquedasProductoEstadistica.indexOfComponent(this.jPanelFK_IdBodegaProductoEstadistica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProductoEstadistica.getComponent(index);
				jPanel.setBorder(this.productoestadisticaConstantesFunciones.resaltarFK_IdBodegaProductoEstadistica);
			}
		}

		if(this.productoestadisticaConstantesFunciones.resaltarFK_IdProductoProductoEstadistica!=null) {
			index= this.jTabbedPaneBusquedasProductoEstadistica.indexOfComponent(this.jPanelFK_IdProductoProductoEstadistica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProductoEstadistica.getComponent(index);
				jPanel.setBorder(this.productoestadisticaConstantesFunciones.resaltarFK_IdProductoProductoEstadistica);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioProductoEstadistica() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasProductoEstadistica.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasProductoEstadistica.indexOfComponent(this.jPanelFK_IdBodegaProductoEstadistica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProductoEstadistica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.productoestadisticaConstantesFunciones.mostrarFK_IdBodegaProductoEstadistica);
			if(!this.productoestadisticaConstantesFunciones.mostrarFK_IdBodegaProductoEstadistica && index>-1) {
				this.jTabbedPaneBusquedasProductoEstadistica.remove(index);
			}

			index= this.jTabbedPaneBusquedasProductoEstadistica.indexOfComponent(this.jPanelFK_IdProductoProductoEstadistica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProductoEstadistica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.productoestadisticaConstantesFunciones.mostrarFK_IdProductoProductoEstadistica);
			if(!this.productoestadisticaConstantesFunciones.mostrarFK_IdProductoProductoEstadistica && index>-1) {
				this.jTabbedPaneBusquedasProductoEstadistica.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioProductoEstadistica() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasProductoEstadistica.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasProductoEstadistica.indexOfComponent(this.jPanelFK_IdBodegaProductoEstadistica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProductoEstadistica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.productoestadisticaConstantesFunciones.activarFK_IdBodegaProductoEstadistica);
				this.jTabbedPaneBusquedasProductoEstadistica.setEnabledAt(index,this.productoestadisticaConstantesFunciones.activarFK_IdBodegaProductoEstadistica);
			}

			index= this.jTabbedPaneBusquedasProductoEstadistica.indexOfComponent(this.jPanelFK_IdProductoProductoEstadistica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProductoEstadistica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.productoestadisticaConstantesFunciones.activarFK_IdProductoProductoEstadistica);
				this.jTabbedPaneBusquedasProductoEstadistica.setEnabledAt(index,this.productoestadisticaConstantesFunciones.activarFK_IdProductoProductoEstadistica);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaProductoEstadistica(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdBodega")) {
			index= this.jTabbedPaneBusquedasProductoEstadistica.indexOfComponent(this.jPanelFK_IdBodegaProductoEstadistica);

			this.jTabbedPaneBusquedasProductoEstadistica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProductoEstadistica.getComponent(index);

			this.productoestadisticaConstantesFunciones.setResaltarFK_IdBodegaProductoEstadistica(resaltar);

			jPanel.setBorder(this.productoestadisticaConstantesFunciones.resaltarFK_IdBodegaProductoEstadistica);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdProducto")) {
			index= this.jTabbedPaneBusquedasProductoEstadistica.indexOfComponent(this.jPanelFK_IdProductoProductoEstadistica);

			this.jTabbedPaneBusquedasProductoEstadistica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProductoEstadistica.getComponent(index);

			this.productoestadisticaConstantesFunciones.setResaltarFK_IdProductoProductoEstadistica(resaltar);

			jPanel.setBorder(this.productoestadisticaConstantesFunciones.resaltarFK_IdProductoProductoEstadistica);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarProductoEstadistica.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioProductoEstadistica() throws Exception {

		if(this.jInternalFrameDetalleFormProductoEstadistica==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioProductoEstadistica();
		this.updateVisibilidadResaltarControlesFormularioProductoEstadistica();
		this.updateHabilitarResaltarControlesFormularioProductoEstadistica();
		
	}
	
	public void updateBorderResaltarControlesFormularioProductoEstadistica() throws Exception {
		if(this.jInternalFrameDetalleFormProductoEstadistica==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.productoestadisticaConstantesFunciones.resaltaridProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jLabelidProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltaridProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarid_empresaProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_empresaProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarid_empresaProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarid_sucursalProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_sucursalProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarid_sucursalProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarid_bodegaProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_bodegaProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarid_bodegaProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarid_productoProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_productoProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarid_productoProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_compraProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_compraProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_compraProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_ventaProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_ventaProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_ventaProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_cotizacionProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_cotizacionProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_cotizacionProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_proformaProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_proformaProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarprecio_ultima_proformaProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarcantidad_disponibleProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_disponibleProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarcantidad_disponibleProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarcantidad_reservadaProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_reservadaProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarcantidad_reservadaProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarcantidad_demandaProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_demandaProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarcantidad_demandaProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarcantidad_maximoProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_maximoProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarcantidad_maximoProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarcantidad_minimoProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_minimoProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarcantidad_minimoProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarcantidad_fisicaProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_fisicaProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarcantidad_fisicaProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarcantidad_orden_compraProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_orden_compraProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarcantidad_orden_compraProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarcantidad_pedidaProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_pedidaProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarcantidad_pedidaProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarcantidad_requisicionProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_requisicionProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarcantidad_requisicionProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_ingresoProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ingresoProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_ingresoProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_egresoProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_egresoProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_egresoProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_produccionProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_produccionProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_produccionProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_compraProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_compraProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_compraProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_ventaProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ventaProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_ventaProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_devolucionProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_devolucionProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_devolucionProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_orden_compraProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_orden_compraProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_orden_compraProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_pedidoProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_pedidoProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_pedidoProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_requisicionProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_requisicionProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarfecha_ultima_requisicionProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltartotal_ingresoProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ingresoProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltartotal_ingresoProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltartotal_egresoProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_egresoProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltartotal_egresoProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltartotal_compraProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_compraProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltartotal_compraProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltartotal_ventaProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ventaProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltartotal_ventaProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltartotal_producidoProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_producidoProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltartotal_producidoProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltartotal_devueltoProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_devueltoProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltartotal_devueltoProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarcosto_ultimoProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_ultimoProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarcosto_ultimoProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarcosto_totalProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_totalProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarcosto_totalProductoEstadistica);}
		if(this.productoestadisticaConstantesFunciones.resaltarcosto_produccionProductoEstadistica!=null && this.jInternalFrameDetalleFormProductoEstadistica!=null) {this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_produccionProductoEstadistica.setBorder(this.productoestadisticaConstantesFunciones.resaltarcosto_produccionProductoEstadistica);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioProductoEstadistica() throws Exception {		
		if(this.jInternalFrameDetalleFormProductoEstadistica==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
	
		//this.jInternalFrameDetalleFormProductoEstadistica.jLabelidProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostraridProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelidProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostraridProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_empresaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarid_empresaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelid_empresaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarid_empresaProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_sucursalProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarid_sucursalProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelid_sucursalProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarid_sucursalProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_bodegaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarid_bodegaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelid_bodegaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarid_bodegaProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_productoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarid_productoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelid_productoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarid_productoProductoEstadistica);
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_productoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarid_productoProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_compraProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarprecio_ultima_compraProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelprecio_ultima_compraProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarprecio_ultima_compraProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_ventaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarprecio_ultima_ventaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelprecio_ultima_ventaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarprecio_ultima_ventaProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_cotizacionProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarprecio_ultima_cotizacionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelprecio_ultima_cotizacionProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarprecio_ultima_cotizacionProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_proformaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarprecio_ultima_proformaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelprecio_ultima_proformaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarprecio_ultima_proformaProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_disponibleProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_disponibleProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelcantidad_disponibleProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_disponibleProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_reservadaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_reservadaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelcantidad_reservadaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_reservadaProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_demandaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_demandaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelcantidad_demandaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_demandaProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_maximoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_maximoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelcantidad_maximoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_maximoProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_minimoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_minimoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelcantidad_minimoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_minimoProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_fisicaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_fisicaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelcantidad_fisicaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_fisicaProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_orden_compraProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_orden_compraProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelcantidad_orden_compraProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_orden_compraProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_pedidaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_pedidaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelcantidad_pedidaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_pedidaProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_requisicionProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_requisicionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelcantidad_requisicionProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcantidad_requisicionProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ingresoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_ingresoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelfecha_ultima_ingresoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_ingresoProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_egresoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_egresoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelfecha_ultima_egresoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_egresoProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_produccionProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_produccionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelfecha_ultima_produccionProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_produccionProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_compraProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_compraProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelfecha_ultima_compraProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_compraProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ventaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_ventaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelfecha_ultima_ventaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_ventaProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_devolucionProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_devolucionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelfecha_ultima_devolucionProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_devolucionProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_orden_compraProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_orden_compraProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelfecha_ultima_orden_compraProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_orden_compraProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_pedidoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_pedidoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelfecha_ultima_pedidoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_pedidoProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_requisicionProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_requisicionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelfecha_ultima_requisicionProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarfecha_ultima_requisicionProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ingresoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrartotal_ingresoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPaneltotal_ingresoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrartotal_ingresoProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_egresoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrartotal_egresoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPaneltotal_egresoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrartotal_egresoProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_compraProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrartotal_compraProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPaneltotal_compraProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrartotal_compraProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ventaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrartotal_ventaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPaneltotal_ventaProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrartotal_ventaProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_producidoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrartotal_producidoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPaneltotal_producidoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrartotal_producidoProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_devueltoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrartotal_devueltoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPaneltotal_devueltoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrartotal_devueltoProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_ultimoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcosto_ultimoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelcosto_ultimoProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcosto_ultimoProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_totalProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcosto_totalProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelcosto_totalProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcosto_totalProductoEstadistica);
		//this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_produccionProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcosto_produccionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jPanelcosto_produccionProductoEstadistica.setVisible(this.productoestadisticaConstantesFunciones.mostrarcosto_produccionProductoEstadistica);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioProductoEstadistica() throws Exception {
		if(this.jInternalFrameDetalleFormProductoEstadistica==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormProductoEstadistica!=null) {
	
		this.jInternalFrameDetalleFormProductoEstadistica.jLabelidProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activaridProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_empresaProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarid_empresaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_sucursalProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarid_sucursalProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_bodegaProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarid_bodegaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jComboBoxid_productoProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarid_productoProductoEstadistica);
			this.jInternalFrameDetalleFormProductoEstadistica.jButtonid_productoProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarid_productoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_compraProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarprecio_ultima_compraProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_ventaProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarprecio_ultima_ventaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_cotizacionProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarprecio_ultima_cotizacionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldprecio_ultima_proformaProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarprecio_ultima_proformaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_disponibleProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarcantidad_disponibleProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_reservadaProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarcantidad_reservadaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_demandaProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarcantidad_demandaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_maximoProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarcantidad_maximoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_minimoProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarcantidad_minimoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_fisicaProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarcantidad_fisicaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_orden_compraProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarcantidad_orden_compraProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_pedidaProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarcantidad_pedidaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcantidad_requisicionProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarcantidad_requisicionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ingresoProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarfecha_ultima_ingresoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_egresoProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarfecha_ultima_egresoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_produccionProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarfecha_ultima_produccionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_compraProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarfecha_ultima_compraProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_ventaProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarfecha_ultima_ventaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_devolucionProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarfecha_ultima_devolucionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_orden_compraProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarfecha_ultima_orden_compraProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_pedidoProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarfecha_ultima_pedidoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jDateChooserfecha_ultima_requisicionProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarfecha_ultima_requisicionProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ingresoProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activartotal_ingresoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_egresoProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activartotal_egresoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_compraProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activartotal_compraProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_ventaProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activartotal_ventaProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_producidoProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activartotal_producidoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldtotal_devueltoProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activartotal_devueltoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_ultimoProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarcosto_ultimoProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_totalProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarcosto_totalProductoEstadistica);
		this.jInternalFrameDetalleFormProductoEstadistica.jTextFieldcosto_produccionProductoEstadistica.setEnabled(this.productoestadisticaConstantesFunciones.activarcosto_produccionProductoEstadistica);
		}
	}
	
		
}