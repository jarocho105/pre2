/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.inventario.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.inventario.util.DetalleRequisicionCompraConstantesFunciones;
import com.bydan.erp.inventario.util.DetalleRequisicionCompraParameterReturnGeneral;
//import com.bydan.erp.inventario.util.DetalleRequisicionCompraParameterGeneral;
//import com.bydan.erp.inventario.presentation.report.source.DetalleRequisicionCompraBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.inventario.resources.reportes.AuxiliarReportes;


import com.bydan.erp.inventario.util.*;
import com.bydan.erp.inventario.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.inventario.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class DetalleRequisicionCompraBeanSwingJInternalFrame extends DetalleRequisicionCompraJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(DetalleRequisicionCompraBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<DetalleRequisicionCompra> detallerequisicioncompraValidator = new ClassValidator<DetalleRequisicionCompra>(DetalleRequisicionCompra.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public DetalleRequisicionCompra detallerequisicioncompra;	
	public DetalleRequisicionCompra detallerequisicioncompraAux;
	public DetalleRequisicionCompra detallerequisicioncompraAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public DetalleRequisicionCompra detallerequisicioncompraTotales;
	public Long idDetalleRequisicionCompraActual;
	public Long iIdNuevoDetalleRequisicionCompra=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboRequisicionCompra="";

	public List<RequisicionCompra> requisicioncomprasForeignKey;

	public List<RequisicionCompra> getrequisicioncomprasForeignKey() {
		return requisicioncomprasForeignKey;
	}

	public void setrequisicioncomprasForeignKey(List<RequisicionCompra> requisicioncomprasForeignKey) {
		this.requisicioncomprasForeignKey = requisicioncomprasForeignKey;
	}

	//OBJETO FK ACTUAL
	public RequisicionCompra requisicioncompraForeignKey;

	public RequisicionCompra getrequisicioncompraForeignKey() {
		return requisicioncompraForeignKey;
	}

	public void setrequisicioncompraForeignKey(RequisicionCompra requisicioncompraForeignKey) {
		this.requisicioncompraForeignKey = requisicioncompraForeignKey;
	}

	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboBodega="";

	public List<Bodega> bodegasForeignKey;

	public List<Bodega> getbodegasForeignKey() {
		return bodegasForeignKey;
	}

	public void setbodegasForeignKey(List<Bodega> bodegasForeignKey) {
		this.bodegasForeignKey = bodegasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegaForeignKey;

	public Bodega getbodegaForeignKey() {
		return bodegaForeignKey;
	}

	public void setbodegaForeignKey(Bodega bodegaForeignKey) {
		this.bodegaForeignKey = bodegaForeignKey;
	}

	public String sFinalQueryComboProducto="";

	public List<Producto> productosForeignKey;

	public List<Producto> getproductosForeignKey() {
		return productosForeignKey;
	}

	public void setproductosForeignKey(List<Producto> productosForeignKey) {
		this.productosForeignKey = productosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Producto productoForeignKey;

	public Producto getproductoForeignKey() {
		return productoForeignKey;
	}

	public void setproductoForeignKey(Producto productoForeignKey) {
		this.productoForeignKey = productoForeignKey;
	}

	public String sFinalQueryComboUnidad="";

	public List<Unidad> unidadsForeignKey;

	public List<Unidad> getunidadsForeignKey() {
		return unidadsForeignKey;
	}

	public void setunidadsForeignKey(List<Unidad> unidadsForeignKey) {
		this.unidadsForeignKey = unidadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Unidad unidadForeignKey;

	public Unidad getunidadForeignKey() {
		return unidadForeignKey;
	}

	public void setunidadForeignKey(Unidad unidadForeignKey) {
		this.unidadForeignKey = unidadForeignKey;
	}

	public String sFinalQueryComboCentroCosto="";

	public List<CentroCosto> centrocostosForeignKey;

	public List<CentroCosto> getcentrocostosForeignKey() {
		return centrocostosForeignKey;
	}

	public void setcentrocostosForeignKey(List<CentroCosto> centrocostosForeignKey) {
		this.centrocostosForeignKey = centrocostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroCosto centrocostoForeignKey;

	public CentroCosto getcentrocostoForeignKey() {
		return centrocostoForeignKey;
	}

	public void setcentrocostoForeignKey(CentroCosto centrocostoForeignKey) {
		this.centrocostoForeignKey = centrocostoForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idProductoActual=0L;

	public Long getidProductoActual() {
		return idProductoActual;
	}

	public void setidProductoActual(Long idProductoActual) {
		this.idProductoActual= idProductoActual;
	}
	public Long idCentroCostoActual=0L;

	public Long getidCentroCostoActual() {
		return idCentroCostoActual;
	}

	public void setidCentroCostoActual(Long idCentroCostoActual) {
		this.idCentroCostoActual= idCentroCostoActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoDetalleRequisicionCompra;
	public Boolean isPermisoNuevoDetalleRequisicionCompra;
	public Boolean isPermisoActualizarDetalleRequisicionCompra;
	public Boolean isPermisoActualizarOriginalDetalleRequisicionCompra;
	public Boolean isPermisoEliminarDetalleRequisicionCompra;
	public Boolean isPermisoGuardarCambiosDetalleRequisicionCompra;
	public Boolean isPermisoConsultaDetalleRequisicionCompra;
	public Boolean isPermisoBusquedaDetalleRequisicionCompra;
	public Boolean isPermisoReporteDetalleRequisicionCompra;
	public Boolean isPermisoPaginacionMedioDetalleRequisicionCompra;
	public Boolean isPermisoPaginacionAltoDetalleRequisicionCompra;
	public Boolean isPermisoPaginacionTodoDetalleRequisicionCompra;
	public Boolean isPermisoCopiarDetalleRequisicionCompra;
	public Boolean isPermisoVerFormDetalleRequisicionCompra;
	public Boolean isPermisoDuplicarDetalleRequisicionCompra;
	public Boolean isPermisoOrdenDetalleRequisicionCompra;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public DetalleRequisicionCompraParameterReturnGeneral detallerequisicioncompraReturnGeneral;
	public DetalleRequisicionCompraParameterReturnGeneral detallerequisicioncompraParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoDetalleRequisicionCompra=false;
	public Boolean esParaAccionDesdeFormularioDetalleRequisicionCompra=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected DetalleRequisicionCompraSessionBeanAdditional detallerequisicioncompraSessionBeanAdditional=null;
	
	public DetalleRequisicionCompraSessionBeanAdditional getDetalleRequisicionCompraSessionBeanAdditional() {
		return this.detallerequisicioncompraSessionBeanAdditional;
	}
	
	public void setDetalleRequisicionCompraSessionBeanAdditional(DetalleRequisicionCompraSessionBeanAdditional detallerequisicioncompraSessionBeanAdditional) {
		try {
			this.detallerequisicioncompraSessionBeanAdditional=detallerequisicioncompraSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected DetalleRequisicionCompraBeanSwingJInternalFrameAdditional detallerequisicioncompraBeanSwingJInternalFrameAdditional=null;
	//public class DetalleRequisicionCompraBeanSwingJInternalFrame
	
	public DetalleRequisicionCompraBeanSwingJInternalFrameAdditional getDetalleRequisicionCompraBeanSwingJInternalFrameAdditional() {
		return this.detallerequisicioncompraBeanSwingJInternalFrameAdditional;
	}
	
	public void setDetalleRequisicionCompraBeanSwingJInternalFrameAdditional(DetalleRequisicionCompraBeanSwingJInternalFrameAdditional detallerequisicioncompraBeanSwingJInternalFrameAdditional) {
		try {
			this.detallerequisicioncompraBeanSwingJInternalFrameAdditional=detallerequisicioncompraBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public DetalleRequisicionCompraLogic detallerequisicioncompraLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public DetalleRequisicionCompra detallerequisicioncompraBean;
	public DetalleRequisicionCompraConstantesFunciones detallerequisicioncompraConstantesFunciones;
	//public DetalleRequisicionCompraParameterReturnGeneral detallerequisicioncompraReturnGeneral;
	
	//FK
	
	public RequisicionCompraLogic requisicioncompraLogic;
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public BodegaLogic bodegaLogic;
	public ProductoLogic productoLogic;
	public UnidadLogic unidadLogic;
	public CentroCostoLogic centrocostoLogic;
	
	//PARAMETROS
	
	
	//public List<DetalleRequisicionCompra> detallerequisicioncompras;	
	//public List<DetalleRequisicionCompra> detallerequisicioncomprasEliminados;
	//public List<DetalleRequisicionCompra> detallerequisicioncomprasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoDetalleRequisicionCompra=false;
	public Boolean isVisibilidadCeldaDuplicarDetalleRequisicionCompra=true;
	public Boolean isVisibilidadCeldaCopiarDetalleRequisicionCompra=true;
	public Boolean isVisibilidadCeldaVerFormDetalleRequisicionCompra=true;
	public Boolean isVisibilidadCeldaOrdenDetalleRequisicionCompra=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=false;
	public Boolean isVisibilidadCeldaModificarDetalleRequisicionCompra=false;
	public Boolean isVisibilidadCeldaActualizarDetalleRequisicionCompra=false;
	public Boolean isVisibilidadCeldaEliminarDetalleRequisicionCompra=false;
	public Boolean isVisibilidadCeldaCancelarDetalleRequisicionCompra=false;
	public Boolean isVisibilidadCeldaGuardarDetalleRequisicionCompra=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdBodega=false;
	public Boolean isVisibilidadFK_IdCentroCosto=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdProducto=false;
	public Boolean isVisibilidadFK_IdRequisicionCompra=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdUnidad=false;
	
	public Long getiIdNuevoDetalleRequisicionCompra() {
		return this.iIdNuevoDetalleRequisicionCompra;
	}

	public void setiIdNuevoDetalleRequisicionCompra(Long iIdNuevoDetalleRequisicionCompra) {
		this.iIdNuevoDetalleRequisicionCompra = iIdNuevoDetalleRequisicionCompra;
	}
	
	public Long getidDetalleRequisicionCompraActual() {
		return this.idDetalleRequisicionCompraActual;
	}

	public void setidDetalleRequisicionCompraActual(Long idDetalleRequisicionCompraActual) {
		this.idDetalleRequisicionCompraActual = idDetalleRequisicionCompraActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public DetalleRequisicionCompra getdetallerequisicioncompra() {
		return this.detallerequisicioncompra;
	}

	public void setdetallerequisicioncompra(DetalleRequisicionCompra detallerequisicioncompra) {
		this.detallerequisicioncompra = detallerequisicioncompra;
	}
	
	public DetalleRequisicionCompra getdetallerequisicioncompraAux() {
		return this.detallerequisicioncompraAux;
	}

	public void setdetallerequisicioncompraAux(DetalleRequisicionCompra detallerequisicioncompraAux) {
		this.detallerequisicioncompraAux = detallerequisicioncompraAux;
	}				
	
	public DetalleRequisicionCompra getdetallerequisicioncompraAnterior() {
		return this.detallerequisicioncompraAnterior;
	}

	public void setdetallerequisicioncompraAnterior(DetalleRequisicionCompra detallerequisicioncompraAnterior) {
		this.detallerequisicioncompraAnterior = detallerequisicioncompraAnterior;
	}	
	
	public DetalleRequisicionCompra getdetallerequisicioncompraTotales() {
		return this.detallerequisicioncompraTotales;
	}

	public void setdetallerequisicioncompraTotales(DetalleRequisicionCompra detallerequisicioncompraTotales) {
		this.detallerequisicioncompraTotales = detallerequisicioncompraTotales;
	}	
	
	public DetalleRequisicionCompra getdetallerequisicioncompraBean() {
		return this.detallerequisicioncompraBean;
	}

	public void setdetallerequisicioncompraBean(DetalleRequisicionCompra detallerequisicioncompraBean) {
		this.detallerequisicioncompraBean = detallerequisicioncompraBean;
	}	
	
	public DetalleRequisicionCompraParameterReturnGeneral getdetallerequisicioncompraReturnGeneral() {
		return this.detallerequisicioncompraReturnGeneral;
	}

	public void setdetallerequisicioncompraReturnGeneral(DetalleRequisicionCompraParameterReturnGeneral detallerequisicioncompraReturnGeneral) {
		this.detallerequisicioncompraReturnGeneral = detallerequisicioncompraReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_bodegaFK_IdBodega=-1L;

	public Long getid_bodegaFK_IdBodega() {
		return this.id_bodegaFK_IdBodega;
	}

	public void setid_bodegaFK_IdBodega(Long id_bodegaFK_IdBodega) {
		this.id_bodegaFK_IdBodega = id_bodegaFK_IdBodega;
	}

	public Long id_centro_costoFK_IdCentroCosto=null;

	public Long getid_centro_costoFK_IdCentroCosto() {
		return this.id_centro_costoFK_IdCentroCosto;
	}

	public void setid_centro_costoFK_IdCentroCosto(Long id_centro_costoFK_IdCentroCosto) {
		this.id_centro_costoFK_IdCentroCosto = id_centro_costoFK_IdCentroCosto;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_productoFK_IdProducto=-1L;

	public Long getid_productoFK_IdProducto() {
		return this.id_productoFK_IdProducto;
	}

	public void setid_productoFK_IdProducto(Long id_productoFK_IdProducto) {
		this.id_productoFK_IdProducto = id_productoFK_IdProducto;
	}

	public Long id_requisicion_compraFK_IdRequisicionCompra=-1L;

	public Long getid_requisicion_compraFK_IdRequisicionCompra() {
		return this.id_requisicion_compraFK_IdRequisicionCompra;
	}

	public void setid_requisicion_compraFK_IdRequisicionCompra(Long id_requisicion_compraFK_IdRequisicionCompra) {
		this.id_requisicion_compraFK_IdRequisicionCompra = id_requisicion_compraFK_IdRequisicionCompra;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_unidadFK_IdUnidad=-1L;

	public Long getid_unidadFK_IdUnidad() {
		return this.id_unidadFK_IdUnidad;
	}

	public void setid_unidadFK_IdUnidad(Long id_unidadFK_IdUnidad) {
		this.id_unidadFK_IdUnidad = id_unidadFK_IdUnidad;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public DetalleRequisicionCompraLogic getDetalleRequisicionCompraLogic()	{		
		return detallerequisicioncompraLogic;
	}

	public void setDetalleRequisicionCompraLogic(DetalleRequisicionCompraLogic detallerequisicioncompraLogic) {
		this.detallerequisicioncompraLogic = detallerequisicioncompraLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoDetalleRequisicionCompra() {
		return isEsNuevoDetalleRequisicionCompra;
	}

	public void setIsEsNuevoDetalleRequisicionCompra(Boolean isEsNuevoDetalleRequisicionCompra) {
		this.isEsNuevoDetalleRequisicionCompra = isEsNuevoDetalleRequisicionCompra;
	}

	public Boolean getEsParaAccionDesdeFormularioDetalleRequisicionCompra() {
		return esParaAccionDesdeFormularioDetalleRequisicionCompra;
	}
	
	public void setEsParaAccionDesdeFormularioDetalleRequisicionCompra(Boolean esParaAccionDesdeFormularioDetalleRequisicionCompra) {
		this.esParaAccionDesdeFormularioDetalleRequisicionCompra = esParaAccionDesdeFormularioDetalleRequisicionCompra;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosRequisicionComprasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.requisicioncomprasForeignKey=new ArrayList<RequisicionCompra>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			RequisicionCompraLogic requisicioncompraLogic=new RequisicionCompraLogic();

			requisicioncompraLogic.getRequisicionCompraDataAccess().setIsForForeingKeyData(true);

			if(this.detallerequisicioncompraSessionBean==null) {
				this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionRequisicionCompra()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getRequisicionCompraDataAccess().setIsForForeingKeyData(true);

					requisicioncompraLogic.getTodosRequisicionComprasWithConnection(sFinalQuery,new Pagination());

					this.requisicioncomprasForeignKey=requisicioncompraLogic.getRequisicionCompras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaRequisicionCompra(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					requisicioncompraLogic.getEntityWithConnection(detallerequisicioncompraSessionBean.getlidRequisicionCompraActual());
					this.requisicioncomprasForeignKey.add(requisicioncompraLogic.getRequisicionCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detallerequisicioncompraSessionBean==null) {
				this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(detallerequisicioncompraSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.detallerequisicioncompraSessionBean==null) {
				this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(detallerequisicioncompraSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.detallerequisicioncompraSessionBean==null) {
				this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(detallerequisicioncompraSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.detallerequisicioncompraSessionBean==null) {
				this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(detallerequisicioncompraSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.detallerequisicioncompraSessionBean==null) {
				this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(detallerequisicioncompraSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.detallerequisicioncompraSessionBean==null) {
				this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(detallerequisicioncompraSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegasForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.detallerequisicioncompraSessionBean==null) {
				this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegasForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodega(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(detallerequisicioncompraSessionBean.getlidBodegaActual());
					this.bodegasForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.productosForeignKey=new ArrayList<Producto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ProductoLogic productoLogic=new ProductoLogic();

			//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

			if(this.detallerequisicioncompraSessionBean==null) {
				this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

					productoLogic.getTodosProductosWithConnection(sFinalQuery,new Pagination());

					this.productosForeignKey=productoLogic.getProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(detallerequisicioncompraSessionBean.getlidProductoActual());
					this.productosForeignKey.add(productoLogic.getProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUnidadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.unidadsForeignKey=new ArrayList<Unidad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UnidadLogic unidadLogic=new UnidadLogic();

			//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

			if(this.detallerequisicioncompraSessionBean==null) {
				this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

					unidadLogic.getTodosUnidadsWithConnection(sFinalQuery,new Pagination());

					this.unidadsForeignKey=unidadLogic.getUnidads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUnidad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					unidadLogic.getEntityWithConnection(detallerequisicioncompraSessionBean.getlidUnidadActual());
					this.unidadsForeignKey.add(unidadLogic.getUnidad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centrocostosForeignKey=new ArrayList<CentroCosto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroCosto centrocostoNulo = new CentroCosto();

			CentroCostoLogic centrocostoLogic=new CentroCostoLogic();

			//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

			if(this.detallerequisicioncompraSessionBean==null) {
				this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

					centrocostoLogic.getTodosCentroCostosWithConnection(sFinalQuery,new Pagination());

					this.centrocostosForeignKey=centrocostoLogic.getCentroCostos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.centrocostosForeignKey.add(0, centrocostoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(detallerequisicioncompraSessionBean.getlidCentroCostoActual());
					this.centrocostosForeignKey.add(centrocostoLogic.getCentroCosto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualRequisicionCompraForeignKey(Long idRequisicionCompraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			RequisicionCompra  requisicioncompraTemp=null;

			for(RequisicionCompra requisicioncompraAux:requisicioncomprasForeignKey) {
				if(requisicioncompraAux.getId()!=null && requisicioncompraAux.getId().equals(idRequisicionCompraSeleccionado)) {
					requisicioncompraTemp=requisicioncompraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(requisicioncompraTemp!=null) {

					if(this.detallerequisicioncompra!=null) {
						this.detallerequisicioncompra.setRequisicionCompra(requisicioncompraTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_requisicion_compraDetalleRequisicionCompra.setSelectedItem(requisicioncompraTemp);
					}
				} else {
					//jComboBoxid_requisicion_compraDetalleRequisicionCompra.setSelectedItem(requisicioncompraTemp);
					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_requisicion_compraDetalleRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_requisicion_compraDetalleRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdRequisicionCompra") || sFormularioTipoBusqueda.equals("Todos")){
					if(requisicioncompraTemp!=null && jComboBoxid_requisicion_compraFK_IdRequisicionCompraDetalleRequisicionCompra!=null) {
						jComboBoxid_requisicion_compraFK_IdRequisicionCompraDetalleRequisicionCompra.setSelectedItem(requisicioncompraTemp);
					} else {
						if(jComboBoxid_requisicion_compraFK_IdRequisicionCompraDetalleRequisicionCompra!=null) {
							//jComboBoxid_requisicion_compraFK_IdRequisicionCompraDetalleRequisicionCompra.setSelectedItem(requisicioncompraTemp);
							if(jComboBoxid_requisicion_compraFK_IdRequisicionCompraDetalleRequisicionCompra.getItemCount()>0) {
								jComboBoxid_requisicion_compraFK_IdRequisicionCompraDetalleRequisicionCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualRequisicionCompraForeignKeyDescripcion(Long idRequisicionCompraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			RequisicionCompra  requisicioncompraTemp=null;

			for(RequisicionCompra requisicioncompraAux:requisicioncomprasForeignKey) {
				if(requisicioncompraAux.getId()!=null && requisicioncompraAux.getId().equals(idRequisicionCompraSeleccionado)) {
					requisicioncompraTemp=requisicioncompraAux;
					break;
				}
			}


			sDescripcion=RequisicionCompraConstantesFunciones.getRequisicionCompraDescripcion(requisicioncompraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualRequisicionCompraForeignKeyGenerico(Long idRequisicionCompraSeleccionado,JComboBox jComboBoxid_requisicion_compraDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			RequisicionCompra  requisicioncompraTemp=null;

			for(RequisicionCompra requisicioncompraAux:requisicioncomprasForeignKey) {
				if(requisicioncompraAux.getId()!=null && requisicioncompraAux.getId().equals(idRequisicionCompraSeleccionado)) {
					requisicioncompraTemp=requisicioncompraAux;
					break;
				}
			}

			if(requisicioncompraTemp!=null) {
				jComboBoxid_requisicion_compraDetalleRequisicionCompraGenerico.setSelectedItem(requisicioncompraTemp);
			} else {
				if(jComboBoxid_requisicion_compraDetalleRequisicionCompraGenerico!=null && jComboBoxid_requisicion_compraDetalleRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_requisicion_compraDetalleRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.detallerequisicioncompra!=null) {
						this.detallerequisicioncompra.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_empresaDetalleRequisicionCompra.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaDetalleRequisicionCompra.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_empresaDetalleRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_empresaDetalleRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaDetalleRequisicionCompraGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaDetalleRequisicionCompraGenerico!=null && jComboBoxid_empresaDetalleRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_empresaDetalleRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.detallerequisicioncompra!=null) {
						this.detallerequisicioncompra.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_sucursalDetalleRequisicionCompra.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalDetalleRequisicionCompra.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_sucursalDetalleRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_sucursalDetalleRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalDetalleRequisicionCompraGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalDetalleRequisicionCompraGenerico!=null && jComboBoxid_sucursalDetalleRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_sucursalDetalleRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.detallerequisicioncompra!=null) {
						this.detallerequisicioncompra.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioDetalleRequisicionCompra.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioDetalleRequisicionCompraGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioDetalleRequisicionCompraGenerico!=null && jComboBoxid_ejercicioDetalleRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioDetalleRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.detallerequisicioncompra!=null) {
						this.detallerequisicioncompra.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoDetalleRequisicionCompra.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoDetalleRequisicionCompraGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoDetalleRequisicionCompraGenerico!=null && jComboBoxid_periodoDetalleRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_periodoDetalleRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.detallerequisicioncompra!=null) {
						this.detallerequisicioncompra.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_anioDetalleRequisicionCompra.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioDetalleRequisicionCompra.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_anioDetalleRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_anioDetalleRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioDetalleRequisicionCompraGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioDetalleRequisicionCompraGenerico!=null && jComboBoxid_anioDetalleRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_anioDetalleRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.detallerequisicioncompra!=null) {
						this.detallerequisicioncompra.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_mesDetalleRequisicionCompra.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesDetalleRequisicionCompra.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_mesDetalleRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_mesDetalleRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesDetalleRequisicionCompraGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesDetalleRequisicionCompraGenerico!=null && jComboBoxid_mesDetalleRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_mesDetalleRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaForeignKey(Long idBodegaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegaTemp!=null) {

					if(this.detallerequisicioncompra!=null) {
						this.detallerequisicioncompra.setBodega(bodegaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.setSelectedItem(bodegaTemp);
					}
				} else {
					//jComboBoxid_bodegaDetalleRequisicionCompra.setSelectedItem(bodegaTemp);
					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegaTemp!=null && jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra!=null) {
						jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra.setSelectedItem(bodegaTemp);
					} else {
						if(jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra!=null) {
							//jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra.setSelectedItem(bodegaTemp);
							if(jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra.getItemCount()>0) {
								jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaForeignKeyDescripcion(Long idBodegaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaForeignKeyGenerico(Long idBodegaSeleccionado,JComboBox jComboBoxid_bodegaDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(bodegaTemp!=null) {
				jComboBoxid_bodegaDetalleRequisicionCompraGenerico.setSelectedItem(bodegaTemp);
			} else {
				if(jComboBoxid_bodegaDetalleRequisicionCompraGenerico!=null && jComboBoxid_bodegaDetalleRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_bodegaDetalleRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualProductoForeignKey(Long idProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(productoTemp!=null) {

					if(this.detallerequisicioncompra!=null) {
						this.detallerequisicioncompra.setProducto(productoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.setSelectedItem(productoTemp);
					}
				} else {
					//jComboBoxid_productoDetalleRequisicionCompra.setSelectedItem(productoTemp);
					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){
					if(productoTemp!=null && jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra!=null) {
						jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra.setSelectedItem(productoTemp);
					} else {
						if(jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra!=null) {
							//jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra.setSelectedItem(productoTemp);
							if(jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra.getItemCount()>0) {
								jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualProductoForeignKeyDescripcion(Long idProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}


			sDescripcion=ProductoConstantesFunciones.getProductoDescripcion(productoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualProductoForeignKeyGenerico(Long idProductoSeleccionado,JComboBox jComboBoxid_productoDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(productoTemp!=null) {
				jComboBoxid_productoDetalleRequisicionCompraGenerico.setSelectedItem(productoTemp);
			} else {
				if(jComboBoxid_productoDetalleRequisicionCompraGenerico!=null && jComboBoxid_productoDetalleRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_productoDetalleRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUnidadForeignKey(Long idUnidadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(unidadTemp!=null) {

					if(this.detallerequisicioncompra!=null) {
						this.detallerequisicioncompra.setUnidad(unidadTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_unidadDetalleRequisicionCompra.setSelectedItem(unidadTemp);
					}
				} else {
					//jComboBoxid_unidadDetalleRequisicionCompra.setSelectedItem(unidadTemp);
					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_unidadDetalleRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_unidadDetalleRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){
					if(unidadTemp!=null && jComboBoxid_unidadFK_IdUnidadDetalleRequisicionCompra!=null) {
						jComboBoxid_unidadFK_IdUnidadDetalleRequisicionCompra.setSelectedItem(unidadTemp);
					} else {
						if(jComboBoxid_unidadFK_IdUnidadDetalleRequisicionCompra!=null) {
							//jComboBoxid_unidadFK_IdUnidadDetalleRequisicionCompra.setSelectedItem(unidadTemp);
							if(jComboBoxid_unidadFK_IdUnidadDetalleRequisicionCompra.getItemCount()>0) {
								jComboBoxid_unidadFK_IdUnidadDetalleRequisicionCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUnidadForeignKeyDescripcion(Long idUnidadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}


			sDescripcion=UnidadConstantesFunciones.getUnidadDescripcion(unidadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUnidadForeignKeyGenerico(Long idUnidadSeleccionado,JComboBox jComboBoxid_unidadDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(unidadTemp!=null) {
				jComboBoxid_unidadDetalleRequisicionCompraGenerico.setSelectedItem(unidadTemp);
			} else {
				if(jComboBoxid_unidadDetalleRequisicionCompraGenerico!=null && jComboBoxid_unidadDetalleRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_unidadDetalleRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroCostoForeignKey(Long idCentroCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centrocostoTemp!=null) {

					if(this.detallerequisicioncompra!=null) {
						this.detallerequisicioncompra.setCentroCosto(centrocostoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_centro_costoDetalleRequisicionCompra.setSelectedItem(centrocostoTemp);
					}
				} else {
					//jComboBoxid_centro_costoDetalleRequisicionCompra.setSelectedItem(centrocostoTemp);
					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_centro_costoDetalleRequisicionCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_centro_costoDetalleRequisicionCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){
					if(centrocostoTemp!=null && jComboBoxid_centro_costoFK_IdCentroCostoDetalleRequisicionCompra!=null) {
						jComboBoxid_centro_costoFK_IdCentroCostoDetalleRequisicionCompra.setSelectedItem(centrocostoTemp);
					} else {
						if(jComboBoxid_centro_costoFK_IdCentroCostoDetalleRequisicionCompra!=null) {
							//jComboBoxid_centro_costoFK_IdCentroCostoDetalleRequisicionCompra.setSelectedItem(centrocostoTemp);
							if(jComboBoxid_centro_costoFK_IdCentroCostoDetalleRequisicionCompra.getItemCount()>0) {
								jComboBoxid_centro_costoFK_IdCentroCostoDetalleRequisicionCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroCostoForeignKeyDescripcion(Long idCentroCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}


			sDescripcion=CentroCostoConstantesFunciones.getCentroCostoDescripcion(centrocostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroCostoForeignKeyGenerico(Long idCentroCostoSeleccionado,JComboBox jComboBoxid_centro_costoDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(centrocostoTemp!=null) {
				jComboBoxid_centro_costoDetalleRequisicionCompraGenerico.setSelectedItem(centrocostoTemp);
			} else {
				if(jComboBoxid_centro_costoDetalleRequisicionCompraGenerico!=null && jComboBoxid_centro_costoDetalleRequisicionCompraGenerico.getItemCount()>0) {
					jComboBoxid_centro_costoDetalleRequisicionCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarRequisicionCompraForeignKey(DetalleRequisicionCompra detallerequisicioncompra,JComboBox jComboBoxid_requisicion_compraDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			RequisicionCompra  requisicioncompraAux=new RequisicionCompra();

			if(jComboBoxid_requisicion_compraDetalleRequisicionCompraGenerico==null) {
				requisicioncompraAux=(RequisicionCompra)this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_requisicion_compraDetalleRequisicionCompra.getSelectedItem();
			} else {
				requisicioncompraAux=(RequisicionCompra)jComboBoxid_requisicion_compraDetalleRequisicionCompraGenerico.getSelectedItem();
			}

			if(requisicioncompraAux!=null && requisicioncompraAux.getId()!=null) {
				detallerequisicioncompra.setid_requisicion_compra(requisicioncompraAux.getId());
				detallerequisicioncompra.setrequisicioncompra_descripcion(DetalleRequisicionCompraConstantesFunciones.getRequisicionCompraDescripcion(requisicioncompraAux));
				detallerequisicioncompra.setRequisicionCompra(requisicioncompraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(DetalleRequisicionCompra detallerequisicioncompra,JComboBox jComboBoxid_empresaDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaDetalleRequisicionCompraGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_empresaDetalleRequisicionCompra.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaDetalleRequisicionCompraGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				detallerequisicioncompra.setid_empresa(empresaAux.getId());
				detallerequisicioncompra.setempresa_descripcion(DetalleRequisicionCompraConstantesFunciones.getEmpresaDescripcion(empresaAux));
				detallerequisicioncompra.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(DetalleRequisicionCompra detallerequisicioncompra,JComboBox jComboBoxid_sucursalDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalDetalleRequisicionCompraGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_sucursalDetalleRequisicionCompra.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalDetalleRequisicionCompraGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				detallerequisicioncompra.setid_sucursal(sucursalAux.getId());
				detallerequisicioncompra.setsucursal_descripcion(DetalleRequisicionCompraConstantesFunciones.getSucursalDescripcion(sucursalAux));
				detallerequisicioncompra.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(DetalleRequisicionCompra detallerequisicioncompra,JComboBox jComboBoxid_ejercicioDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioDetalleRequisicionCompraGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioDetalleRequisicionCompraGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				detallerequisicioncompra.setid_ejercicio(ejercicioAux.getId());
				detallerequisicioncompra.setejercicio_descripcion(DetalleRequisicionCompraConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				detallerequisicioncompra.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(DetalleRequisicionCompra detallerequisicioncompra,JComboBox jComboBoxid_periodoDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoDetalleRequisicionCompraGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoDetalleRequisicionCompraGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				detallerequisicioncompra.setid_periodo(periodoAux.getId());
				detallerequisicioncompra.setperiodo_descripcion(DetalleRequisicionCompraConstantesFunciones.getPeriodoDescripcion(periodoAux));
				detallerequisicioncompra.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(DetalleRequisicionCompra detallerequisicioncompra,JComboBox jComboBoxid_anioDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioDetalleRequisicionCompraGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_anioDetalleRequisicionCompra.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioDetalleRequisicionCompraGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				detallerequisicioncompra.setid_anio(anioAux.getId());
				detallerequisicioncompra.setanio_descripcion(DetalleRequisicionCompraConstantesFunciones.getAnioDescripcion(anioAux));
				detallerequisicioncompra.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(DetalleRequisicionCompra detallerequisicioncompra,JComboBox jComboBoxid_mesDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesDetalleRequisicionCompraGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_mesDetalleRequisicionCompra.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesDetalleRequisicionCompraGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				detallerequisicioncompra.setid_mes(mesAux.getId());
				detallerequisicioncompra.setmes_descripcion(DetalleRequisicionCompraConstantesFunciones.getMesDescripcion(mesAux));
				detallerequisicioncompra.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaForeignKey(DetalleRequisicionCompra detallerequisicioncompra,JComboBox jComboBoxid_bodegaDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodegaDetalleRequisicionCompraGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodegaDetalleRequisicionCompraGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				detallerequisicioncompra.setid_bodega(bodegaAux.getId());
				detallerequisicioncompra.setbodega_descripcion(DetalleRequisicionCompraConstantesFunciones.getBodegaDescripcion(bodegaAux));
				detallerequisicioncompra.setBodega(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarProductoForeignKey(DetalleRequisicionCompra detallerequisicioncompra,JComboBox jComboBoxid_productoDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Producto  productoAux=new Producto();

			if(jComboBoxid_productoDetalleRequisicionCompraGenerico==null) {
				productoAux=(Producto)this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.getSelectedItem();
			} else {
				productoAux=(Producto)jComboBoxid_productoDetalleRequisicionCompraGenerico.getSelectedItem();
			}

			if(productoAux!=null && productoAux.getId()!=null) {
				detallerequisicioncompra.setid_producto(productoAux.getId());
				detallerequisicioncompra.setproducto_descripcion(DetalleRequisicionCompraConstantesFunciones.getProductoDescripcion(productoAux));
				detallerequisicioncompra.setProducto(productoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUnidadForeignKey(DetalleRequisicionCompra detallerequisicioncompra,JComboBox jComboBoxid_unidadDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			Unidad  unidadAux=new Unidad();

			if(jComboBoxid_unidadDetalleRequisicionCompraGenerico==null) {
				unidadAux=(Unidad)this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_unidadDetalleRequisicionCompra.getSelectedItem();
			} else {
				unidadAux=(Unidad)jComboBoxid_unidadDetalleRequisicionCompraGenerico.getSelectedItem();
			}

			if(unidadAux!=null && unidadAux.getId()!=null) {
				detallerequisicioncompra.setid_unidad(unidadAux.getId());
				detallerequisicioncompra.setunidad_descripcion(DetalleRequisicionCompraConstantesFunciones.getUnidadDescripcion(unidadAux));
				detallerequisicioncompra.setUnidad(unidadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroCostoForeignKey(DetalleRequisicionCompra detallerequisicioncompra,JComboBox jComboBoxid_centro_costoDetalleRequisicionCompraGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoAux=new CentroCosto();

			if(jComboBoxid_centro_costoDetalleRequisicionCompraGenerico==null) {
				centrocostoAux=(CentroCosto)this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_centro_costoDetalleRequisicionCompra.getSelectedItem();
			} else {
				centrocostoAux=(CentroCosto)jComboBoxid_centro_costoDetalleRequisicionCompraGenerico.getSelectedItem();
			}

			if(centrocostoAux!=null) {
				detallerequisicioncompra.setid_centro_costo(centrocostoAux.getId());
				detallerequisicioncompra.setcentrocosto_descripcion(DetalleRequisicionCompraConstantesFunciones.getCentroCostoDescripcion(centrocostoAux));
				detallerequisicioncompra.setCentroCosto(centrocostoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameRequisicionComprasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingRequisicionCompra=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_requisicion_compraDetalleRequisicionCompra.removeAllItems();

							for(RequisicionCompra requisicioncompra:this.requisicioncomprasForeignKey) {
								this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_requisicion_compraDetalleRequisicionCompra.addItem(requisicioncompra);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
					}

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdRequisicionCompra") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_requisicion_compraFK_IdRequisicionCompraDetalleRequisicionCompra.removeAllItems();

							for(RequisicionCompra requisicioncompra:this.requisicioncomprasForeignKey) {
								this.jComboBoxid_requisicion_compraFK_IdRequisicionCompraDetalleRequisicionCompra.addItem(requisicioncompra);
							}
						}

						if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_empresaDetalleRequisicionCompra.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_empresaDetalleRequisicionCompra.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
					}

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_sucursalDetalleRequisicionCompra.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_sucursalDetalleRequisicionCompra.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
					}

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
					}

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
					}

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_anioDetalleRequisicionCompra.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_anioDetalleRequisicionCompra.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
					}

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_mesDetalleRequisicionCompra.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_mesDetalleRequisicionCompra.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
					}

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.addItem(bodega);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
					}

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra.addItem(bodega);
							}
						}

						if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.addItem(producto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
					}

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra.addItem(producto);
							}
						}

						if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUnidadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUnidad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_unidadDetalleRequisicionCompra.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_unidadDetalleRequisicionCompra.addItem(unidad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
					}

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetalleRequisicionCompra.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jComboBoxid_unidadFK_IdUnidadDetalleRequisicionCompra.addItem(unidad);
							}
						}

						if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroCosto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_centro_costoDetalleRequisicionCompra.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_centro_costoDetalleRequisicionCompra.addItem(centrocosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { 
					}

					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleRequisicionCompra.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleRequisicionCompra.addItem(centrocosto);
							}
						}

						if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameRequisicionCompraForeignKey(RequisicionCompra requisicioncompra,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_requisicion_compraDetalleRequisicionCompra.setSelectedItem(requisicioncompra);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_requisicion_compraDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_requisicion_compraFK_IdRequisicionCompraDetalleRequisicionCompra.setSelectedItem(requisicioncompra);
						} else {
							this.jComboBoxid_requisicion_compraFK_IdRequisicionCompraDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_empresaDetalleRequisicionCompra.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_empresaDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_sucursalDetalleRequisicionCompra.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_sucursalDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_anioDetalleRequisicionCompra.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_anioDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_mesDetalleRequisicionCompra.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_mesDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaForeignKey(Bodega bodega,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.setSelectedItem(bodega);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra.setSelectedItem(bodega);
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameProductoForeignKey(Producto producto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.setSelectedItem(producto);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra.setSelectedItem(producto);
						} else {
							this.jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUnidadForeignKey(Unidad unidad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_unidadDetalleRequisicionCompra.setSelectedItem(unidad);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_unidadDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_unidadFK_IdUnidadDetalleRequisicionCompra.setSelectedItem(unidad);
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroCostoForeignKey(CentroCosto centrocosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_centro_costoDetalleRequisicionCompra.setSelectedItem(centrocosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_centro_costoDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleRequisicionCompra.setSelectedItem(centrocosto);
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleRequisicionCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesDetalleRequisicionCompra() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			DetalleRequisicionCompraConstantesFunciones.refrescarForeignKeysDescripcionesDetalleRequisicionCompra(this.detallerequisicioncompraLogic.getDetalleRequisicionCompras());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			DetalleRequisicionCompraConstantesFunciones.refrescarForeignKeysDescripcionesDetalleRequisicionCompra(this.detallerequisicioncompras);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(RequisicionCompra.class));
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(Bodega.class));
		classes.add(new Classe(Producto.class));
		classes.add(new Classe(Unidad.class));
		classes.add(new Classe(CentroCosto.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//detallerequisicioncompraLogic.setDetalleRequisicionCompras(this.detallerequisicioncompras);
			detallerequisicioncompraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public DetalleRequisicionCompraParameterReturnGeneral getDetalleRequisicionCompraParameterGeneral() {
		return this.detallerequisicioncompraParameterGeneral;
	}
	
	public void setDetalleRequisicionCompraParameterGeneral(DetalleRequisicionCompraParameterReturnGeneral detallerequisicioncompraParameterGeneral) {
		this.detallerequisicioncompraParameterGeneral = detallerequisicioncompraParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoDetalleRequisicionCompra() {
		return isPermisoTodoDetalleRequisicionCompra;
	}

	public void setIsPermisoTodoDetalleRequisicionCompra(Boolean isPermisoTodoDetalleRequisicionCompra) {
		this.isPermisoTodoDetalleRequisicionCompra = isPermisoTodoDetalleRequisicionCompra;
	}

	public Boolean getIsPermisoNuevoDetalleRequisicionCompra() {
		return isPermisoNuevoDetalleRequisicionCompra;
	}

	public void setIsPermisoNuevoDetalleRequisicionCompra(Boolean isPermisoNuevoDetalleRequisicionCompra) {
		this.isPermisoNuevoDetalleRequisicionCompra = isPermisoNuevoDetalleRequisicionCompra;
	}

	public Boolean getIsPermisoActualizarDetalleRequisicionCompra() {
		return isPermisoActualizarDetalleRequisicionCompra;
	}

	public void setIsPermisoActualizarDetalleRequisicionCompra(Boolean isPermisoActualizarDetalleRequisicionCompra) {
		this.isPermisoActualizarDetalleRequisicionCompra = isPermisoActualizarDetalleRequisicionCompra;
	}

	public Boolean getIsPermisoEliminarDetalleRequisicionCompra() {
		return isPermisoEliminarDetalleRequisicionCompra;
	}

	public void setIsPermisoEliminarDetalleRequisicionCompra(Boolean isPermisoEliminarDetalleRequisicionCompra) {
		this.isPermisoEliminarDetalleRequisicionCompra = isPermisoEliminarDetalleRequisicionCompra;
	}

	public Boolean getIsPermisoGuardarCambiosDetalleRequisicionCompra() {
		return isPermisoGuardarCambiosDetalleRequisicionCompra;
	}

	public void setIsPermisoGuardarCambiosDetalleRequisicionCompra(Boolean isPermisoGuardarCambiosDetalleRequisicionCompra) {
		this.isPermisoGuardarCambiosDetalleRequisicionCompra = isPermisoGuardarCambiosDetalleRequisicionCompra;
	}
	
	public Boolean getIsPermisoConsultaDetalleRequisicionCompra() {
		return isPermisoConsultaDetalleRequisicionCompra;
	}

	public void setIsPermisoConsultaDetalleRequisicionCompra(Boolean isPermisoConsultaDetalleRequisicionCompra) {
		this.isPermisoConsultaDetalleRequisicionCompra = isPermisoConsultaDetalleRequisicionCompra;
	}

	public Boolean getIsPermisoBusquedaDetalleRequisicionCompra() {
		return isPermisoBusquedaDetalleRequisicionCompra;
	}

	public void setIsPermisoBusquedaDetalleRequisicionCompra(Boolean isPermisoBusquedaDetalleRequisicionCompra) {
		this.isPermisoBusquedaDetalleRequisicionCompra = isPermisoBusquedaDetalleRequisicionCompra;
	}

	public Boolean getIsPermisoReporteDetalleRequisicionCompra() {
		return isPermisoReporteDetalleRequisicionCompra;
	}

	public void setIsPermisoReporteDetalleRequisicionCompra(Boolean isPermisoReporteDetalleRequisicionCompra) {
		this.isPermisoReporteDetalleRequisicionCompra = isPermisoReporteDetalleRequisicionCompra;
	}
	
	public Boolean getIsPermisoPaginacionMedioDetalleRequisicionCompra() {
		return isPermisoPaginacionMedioDetalleRequisicionCompra;
	}

	public void setIsPermisoPaginacionMedioDetalleRequisicionCompra(Boolean isPermisoPaginacionMedioDetalleRequisicionCompra) {
		this.isPermisoPaginacionMedioDetalleRequisicionCompra = isPermisoPaginacionMedioDetalleRequisicionCompra;
	}
	
	public Boolean getIsPermisoPaginacionTodoDetalleRequisicionCompra() {
		return isPermisoPaginacionTodoDetalleRequisicionCompra;
	}

	public void setIsPermisoPaginacionTodoDetalleRequisicionCompra(Boolean isPermisoPaginacionTodoDetalleRequisicionCompra) {
		this.isPermisoPaginacionTodoDetalleRequisicionCompra = isPermisoPaginacionTodoDetalleRequisicionCompra;
	}
	
	public Boolean getIsPermisoPaginacionAltoDetalleRequisicionCompra() {
		return isPermisoPaginacionAltoDetalleRequisicionCompra;
	}

	public void setIsPermisoPaginacionAltoDetalleRequisicionCompra(Boolean isPermisoPaginacionAltoDetalleRequisicionCompra) {
		this.isPermisoPaginacionAltoDetalleRequisicionCompra = isPermisoPaginacionAltoDetalleRequisicionCompra;
	}
	
	public Boolean getIsPermisoCopiarDetalleRequisicionCompra() {
		return isPermisoCopiarDetalleRequisicionCompra;
	}

	public void setIsPermisoCopiarDetalleRequisicionCompra(Boolean isPermisoCopiarDetalleRequisicionCompra) {
		this.isPermisoCopiarDetalleRequisicionCompra = isPermisoCopiarDetalleRequisicionCompra;
	}
	
	public Boolean getIsPermisoVerFormDetalleRequisicionCompra() {
		return isPermisoVerFormDetalleRequisicionCompra;
	}

	public void setIsPermisoVerFormDetalleRequisicionCompra(Boolean isPermisoVerFormDetalleRequisicionCompra) {
		this.isPermisoVerFormDetalleRequisicionCompra = isPermisoVerFormDetalleRequisicionCompra;
	}
	
	public Boolean getIsPermisoDuplicarDetalleRequisicionCompra() {
		return isPermisoDuplicarDetalleRequisicionCompra;
	}

	public void setIsPermisoDuplicarDetalleRequisicionCompra(Boolean isPermisoDuplicarDetalleRequisicionCompra) {
		this.isPermisoDuplicarDetalleRequisicionCompra = isPermisoDuplicarDetalleRequisicionCompra;
	}
	
	public Boolean getIsPermisoOrdenDetalleRequisicionCompra() {
		return isPermisoOrdenDetalleRequisicionCompra;
	}

	public void setIsPermisoOrdenDetalleRequisicionCompra(Boolean isPermisoOrdenDetalleRequisicionCompra) {
		this.isPermisoOrdenDetalleRequisicionCompra = isPermisoOrdenDetalleRequisicionCompra;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoDetalleRequisicionCompra() {
		return isVisibilidadCeldaNuevoDetalleRequisicionCompra;
	}

	public void setIsVisibilidadCeldaNuevoDetalleRequisicionCompra(Boolean isVisibilidadCeldaNuevoDetalleRequisicionCompra) {
		this.isVisibilidadCeldaNuevoDetalleRequisicionCompra = isVisibilidadCeldaNuevoDetalleRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarDetalleRequisicionCompra() {
		return isVisibilidadCeldaDuplicarDetalleRequisicionCompra;
	}

	public void setIsVisibilidadCeldaDuplicarDetalleRequisicionCompra(Boolean isVisibilidadCeldaDuplicarDetalleRequisicionCompra) {
		this.isVisibilidadCeldaDuplicarDetalleRequisicionCompra = isVisibilidadCeldaDuplicarDetalleRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarDetalleRequisicionCompra() {
		return isVisibilidadCeldaCopiarDetalleRequisicionCompra;
	}

	public void setIsVisibilidadCeldaCopiarDetalleRequisicionCompra(Boolean isVisibilidadCeldaCopiarDetalleRequisicionCompra) {
		this.isVisibilidadCeldaCopiarDetalleRequisicionCompra = isVisibilidadCeldaCopiarDetalleRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormDetalleRequisicionCompra() {
		return isVisibilidadCeldaVerFormDetalleRequisicionCompra;
	}

	public void setIsVisibilidadCeldaVerFormDetalleRequisicionCompra(Boolean isVisibilidadCeldaVerFormDetalleRequisicionCompra) {
		this.isVisibilidadCeldaVerFormDetalleRequisicionCompra = isVisibilidadCeldaVerFormDetalleRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenDetalleRequisicionCompra() {
		return isVisibilidadCeldaOrdenDetalleRequisicionCompra;
	}

	public void setIsVisibilidadCeldaOrdenDetalleRequisicionCompra(Boolean isVisibilidadCeldaOrdenDetalleRequisicionCompra) {
		this.isVisibilidadCeldaOrdenDetalleRequisicionCompra = isVisibilidadCeldaOrdenDetalleRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra() {
		return isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra(Boolean isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra) {
		this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra = isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaModificarDetalleRequisicionCompra() {
		return isVisibilidadCeldaModificarDetalleRequisicionCompra;
	}

	public void setIsVisibilidadCeldaModificarDetalleRequisicionCompra(Boolean isVisibilidadCeldaModificarDetalleRequisicionCompra) {
		this.isVisibilidadCeldaModificarDetalleRequisicionCompra = isVisibilidadCeldaModificarDetalleRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarDetalleRequisicionCompra() {
		return isVisibilidadCeldaActualizarDetalleRequisicionCompra;
	}

	public void setIsVisibilidadCeldaActualizarDetalleRequisicionCompra(Boolean isVisibilidadCeldaActualizarDetalleRequisicionCompra) {
		this.isVisibilidadCeldaActualizarDetalleRequisicionCompra = isVisibilidadCeldaActualizarDetalleRequisicionCompra;
	}

	public Boolean getIsVisibilidadCeldaEliminarDetalleRequisicionCompra() {
		return isVisibilidadCeldaEliminarDetalleRequisicionCompra;
	}

	public void setIsVisibilidadCeldaEliminarDetalleRequisicionCompra(Boolean isVisibilidadCeldaEliminarDetalleRequisicionCompra) {
		this.isVisibilidadCeldaEliminarDetalleRequisicionCompra = isVisibilidadCeldaEliminarDetalleRequisicionCompra;
	}

	public Boolean getIsVisibilidadCeldaCancelarDetalleRequisicionCompra() {
		return isVisibilidadCeldaCancelarDetalleRequisicionCompra;
	}

	public void setIsVisibilidadCeldaCancelarDetalleRequisicionCompra(Boolean isVisibilidadCeldaCancelarDetalleRequisicionCompra) {
		this.isVisibilidadCeldaCancelarDetalleRequisicionCompra = isVisibilidadCeldaCancelarDetalleRequisicionCompra;
	}

	public Boolean getIsVisibilidadCeldaGuardarDetalleRequisicionCompra() {
		return isVisibilidadCeldaGuardarDetalleRequisicionCompra;
	}

	public void setIsVisibilidadCeldaGuardarDetalleRequisicionCompra(Boolean isVisibilidadCeldaGuardarDetalleRequisicionCompra) {
		this.isVisibilidadCeldaGuardarDetalleRequisicionCompra = isVisibilidadCeldaGuardarDetalleRequisicionCompra;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra() {
		return isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra;
	}

	public void setIsVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra(Boolean isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra) {
		this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra = isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra;
	}
		
	public DetalleRequisicionCompraSessionBean getdetallerequisicioncompraSessionBean() {
		return this.detallerequisicioncompraSessionBean;
	}
	
	public void setdetallerequisicioncompraSessionBean(DetalleRequisicionCompraSessionBean detallerequisicioncompraSessionBean) {
		this.detallerequisicioncompraSessionBean=detallerequisicioncompraSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdBodega() {
		return this.isVisibilidadFK_IdBodega;
	}

	public void setisVisibilidadFK_IdBodega(Boolean isVisibilidadFK_IdBodega) {
		this.isVisibilidadFK_IdBodega=isVisibilidadFK_IdBodega;
	}

	public Boolean getisVisibilidadFK_IdCentroCosto() {
		return this.isVisibilidadFK_IdCentroCosto;
	}

	public void setisVisibilidadFK_IdCentroCosto(Boolean isVisibilidadFK_IdCentroCosto) {
		this.isVisibilidadFK_IdCentroCosto=isVisibilidadFK_IdCentroCosto;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdProducto() {
		return this.isVisibilidadFK_IdProducto;
	}

	public void setisVisibilidadFK_IdProducto(Boolean isVisibilidadFK_IdProducto) {
		this.isVisibilidadFK_IdProducto=isVisibilidadFK_IdProducto;
	}

	public Boolean getisVisibilidadFK_IdRequisicionCompra() {
		return this.isVisibilidadFK_IdRequisicionCompra;
	}

	public void setisVisibilidadFK_IdRequisicionCompra(Boolean isVisibilidadFK_IdRequisicionCompra) {
		this.isVisibilidadFK_IdRequisicionCompra=isVisibilidadFK_IdRequisicionCompra;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdUnidad() {
		return this.isVisibilidadFK_IdUnidad;
	}

	public void setisVisibilidadFK_IdUnidad(Boolean isVisibilidadFK_IdUnidad) {
		this.isVisibilidadFK_IdUnidad=isVisibilidadFK_IdUnidad;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra)throws Exception {
		try {
			
				this.setActualParaGuardarRequisicionCompraForeignKey(detallerequisicioncompra,null);
				this.setActualParaGuardarEmpresaForeignKey(detallerequisicioncompra,null);
				this.setActualParaGuardarSucursalForeignKey(detallerequisicioncompra,null);
				this.setActualParaGuardarEjercicioForeignKey(detallerequisicioncompra,null);
				this.setActualParaGuardarPeriodoForeignKey(detallerequisicioncompra,null);
				this.setActualParaGuardarAnioForeignKey(detallerequisicioncompra,null);
				this.setActualParaGuardarMesForeignKey(detallerequisicioncompra,null);
				this.setActualParaGuardarBodegaForeignKey(detallerequisicioncompra,null);
				this.setActualParaGuardarProductoForeignKey(detallerequisicioncompra,null);
				this.setActualParaGuardarUnidadForeignKey(detallerequisicioncompra,null);
				this.setActualParaGuardarCentroCostoForeignKey(detallerequisicioncompra,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(DetalleRequisicionCompra detallerequisicioncompra,DetalleRequisicionCompra detallerequisicioncompraAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalDetalleRequisicionCompra(detallerequisicioncompra);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		detallerequisicioncompraAux.setId(detallerequisicioncompra.getId());
		detallerequisicioncompraAux.setVersionRow(detallerequisicioncompra.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessDetalleRequisicionCompra();
		
			int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = detallerequisicioncompraValidator.getInvalidValues(this.detallerequisicioncompra);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			detallerequisicioncompraLogic.setDatosCliente(datosCliente);
			detallerequisicioncompraLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				detallerequisicioncompraAux=new  DetalleRequisicionCompra();
				
				detallerequisicioncompraAux.setIsNew(true);
				detallerequisicioncompraAux.setIsChanged(true);
				
				detallerequisicioncompraAux.setDetalleRequisicionCompraOriginal(this.detallerequisicioncompra);
				
				detallerequisicioncompraAux.setId(this.detallerequisicioncompra.getId());	
				detallerequisicioncompraAux.setVersionRow(this.detallerequisicioncompra.getVersionRow());	
				detallerequisicioncompraAux.setid_requisicion_compra(this.detallerequisicioncompra.getid_requisicion_compra());	
				detallerequisicioncompraAux.setid_empresa(this.detallerequisicioncompra.getid_empresa());	
				detallerequisicioncompraAux.setid_sucursal(this.detallerequisicioncompra.getid_sucursal());	
				detallerequisicioncompraAux.setid_ejercicio(this.detallerequisicioncompra.getid_ejercicio());	
				detallerequisicioncompraAux.setid_periodo(this.detallerequisicioncompra.getid_periodo());	
				detallerequisicioncompraAux.setid_anio(this.detallerequisicioncompra.getid_anio());	
				detallerequisicioncompraAux.setid_mes(this.detallerequisicioncompra.getid_mes());	
				detallerequisicioncompraAux.setid_bodega(this.detallerequisicioncompra.getid_bodega());	
				detallerequisicioncompraAux.setid_producto(this.detallerequisicioncompra.getid_producto());	
				detallerequisicioncompraAux.setid_unidad(this.detallerequisicioncompra.getid_unidad());	
				
				if(this.detallerequisicioncompra.getid_centro_costo()!=null && this.detallerequisicioncompra.getid_centro_costo()>0L) {
					detallerequisicioncompraAux.setid_centro_costo(this.detallerequisicioncompra.getid_centro_costo());
				} else {
					detallerequisicioncompraAux.setid_centro_costo(null);
				}	
				detallerequisicioncompraAux.setcantidad_requisicion(this.detallerequisicioncompra.getcantidad_requisicion());	
				detallerequisicioncompraAux.setcosto_unitario(this.detallerequisicioncompra.getcosto_unitario());	
				detallerequisicioncompraAux.setcosto_total(this.detallerequisicioncompra.getcosto_total());	
				detallerequisicioncompraAux.setdescripcion(this.detallerequisicioncompra.getdescripcion());	
				detallerequisicioncompraAux.setcantidad_entregada(this.detallerequisicioncompra.getcantidad_entregada());	
				detallerequisicioncompraAux.setcantidad_pendiente(this.detallerequisicioncompra.getcantidad_pendiente());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detallerequisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(detallerequisicioncompraAux,detallerequisicioncompraLogic.getDetalleRequisicionCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallerequisicioncompraAux,detallerequisicioncompras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.detallerequisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncompraLogic.saveDetalleRequisicionCompras();//WithConnection
						//detallerequisicioncompraLogic.getSetVersionRowDetalleRequisicionCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detallerequisicioncompra,detallerequisicioncompraAux);
					
					this.refrescarForeignKeysDescripcionesDetalleRequisicionCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detallerequisicioncompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detallerequisicioncompraLogic.saveDetalleRequisicionCompraRelaciones(detallerequisicioncompraAux);//WithConnection
								//detallerequisicioncompraLogic.getSetVersionRowDetalleRequisicionCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detallerequisicioncompra,detallerequisicioncompraAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detallerequisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detallerequisicioncompraAux,detallerequisicioncompraLogic.getDetalleRequisicionCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detallerequisicioncompraAux,detallerequisicioncompras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detallerequisicioncompra,detallerequisicioncompraAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				detallerequisicioncompraAux=new  DetalleRequisicionCompra();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado() 
					|| (this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado() && this.detallerequisicioncompra.getId()>=0)) {
						
					detallerequisicioncompraAux.setIsNew(false);
				}
				
				detallerequisicioncompraAux.setIsDeleted(false);
			
				detallerequisicioncompraAux.setId(this.detallerequisicioncompra.getId());	
				detallerequisicioncompraAux.setVersionRow(this.detallerequisicioncompra.getVersionRow());	
				detallerequisicioncompraAux.setid_requisicion_compra(this.detallerequisicioncompra.getid_requisicion_compra());	
				detallerequisicioncompraAux.setid_empresa(this.detallerequisicioncompra.getid_empresa());	
				detallerequisicioncompraAux.setid_sucursal(this.detallerequisicioncompra.getid_sucursal());	
				detallerequisicioncompraAux.setid_ejercicio(this.detallerequisicioncompra.getid_ejercicio());	
				detallerequisicioncompraAux.setid_periodo(this.detallerequisicioncompra.getid_periodo());	
				detallerequisicioncompraAux.setid_anio(this.detallerequisicioncompra.getid_anio());	
				detallerequisicioncompraAux.setid_mes(this.detallerequisicioncompra.getid_mes());	
				detallerequisicioncompraAux.setid_bodega(this.detallerequisicioncompra.getid_bodega());	
				detallerequisicioncompraAux.setid_producto(this.detallerequisicioncompra.getid_producto());	
				detallerequisicioncompraAux.setid_unidad(this.detallerequisicioncompra.getid_unidad());	
				
				if(this.detallerequisicioncompra.getid_centro_costo()!=null && this.detallerequisicioncompra.getid_centro_costo()>0L) {
					detallerequisicioncompraAux.setid_centro_costo(this.detallerequisicioncompra.getid_centro_costo());
				} else {
					detallerequisicioncompraAux.setid_centro_costo(null);
				}	
				detallerequisicioncompraAux.setcantidad_requisicion(this.detallerequisicioncompra.getcantidad_requisicion());	
				detallerequisicioncompraAux.setcosto_unitario(this.detallerequisicioncompra.getcosto_unitario());	
				detallerequisicioncompraAux.setcosto_total(this.detallerequisicioncompra.getcosto_total());	
				detallerequisicioncompraAux.setdescripcion(this.detallerequisicioncompra.getdescripcion());	
				detallerequisicioncompraAux.setcantidad_entregada(this.detallerequisicioncompra.getcantidad_entregada());	
				detallerequisicioncompraAux.setcantidad_pendiente(this.detallerequisicioncompra.getcantidad_pendiente());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detallerequisicioncompraAux,detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallerequisicioncompraAux,detallerequisicioncompras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.detallerequisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncompraLogic.saveDetalleRequisicionCompras();//WithConnection
						//detallerequisicioncompraLogic.getSetVersionRowDetalleRequisicionCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detallerequisicioncompra,detallerequisicioncompraAux);
					
					this.refrescarForeignKeysDescripcionesDetalleRequisicionCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detallerequisicioncompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detallerequisicioncompraLogic.saveDetalleRequisicionCompraRelaciones(detallerequisicioncompraAux);//WithConnection
								//detallerequisicioncompraLogic.getSetVersionRowDetalleRequisicionCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detallerequisicioncompra,detallerequisicioncompraAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detallerequisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detallerequisicioncompraAux,detallerequisicioncompraLogic.getDetalleRequisicionCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detallerequisicioncompraAux,detallerequisicioncompras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detallerequisicioncompra,detallerequisicioncompraAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				detallerequisicioncompraAux=new  DetalleRequisicionCompra();
				
				detallerequisicioncompraAux.setIsNew(false);
				detallerequisicioncompraAux.setIsChanged(false);
				
				detallerequisicioncompraAux.setIsDeleted(true);
				
				detallerequisicioncompraAux.setId(this.detallerequisicioncompra.getId());	
				detallerequisicioncompraAux.setVersionRow(this.detallerequisicioncompra.getVersionRow());	
				detallerequisicioncompraAux.setid_requisicion_compra(this.detallerequisicioncompra.getid_requisicion_compra());	
				detallerequisicioncompraAux.setid_empresa(this.detallerequisicioncompra.getid_empresa());	
				detallerequisicioncompraAux.setid_sucursal(this.detallerequisicioncompra.getid_sucursal());	
				detallerequisicioncompraAux.setid_ejercicio(this.detallerequisicioncompra.getid_ejercicio());	
				detallerequisicioncompraAux.setid_periodo(this.detallerequisicioncompra.getid_periodo());	
				detallerequisicioncompraAux.setid_anio(this.detallerequisicioncompra.getid_anio());	
				detallerequisicioncompraAux.setid_mes(this.detallerequisicioncompra.getid_mes());	
				detallerequisicioncompraAux.setid_bodega(this.detallerequisicioncompra.getid_bodega());	
				detallerequisicioncompraAux.setid_producto(this.detallerequisicioncompra.getid_producto());	
				detallerequisicioncompraAux.setid_unidad(this.detallerequisicioncompra.getid_unidad());	
				
				if(this.detallerequisicioncompra.getid_centro_costo()!=null && this.detallerequisicioncompra.getid_centro_costo()>0L) {
					detallerequisicioncompraAux.setid_centro_costo(this.detallerequisicioncompra.getid_centro_costo());
				} else {
					detallerequisicioncompraAux.setid_centro_costo(null);
				}	
				detallerequisicioncompraAux.setcantidad_requisicion(this.detallerequisicioncompra.getcantidad_requisicion());	
				detallerequisicioncompraAux.setcosto_unitario(this.detallerequisicioncompra.getcosto_unitario());	
				detallerequisicioncompraAux.setcosto_total(this.detallerequisicioncompra.getcosto_total());	
				detallerequisicioncompraAux.setdescripcion(this.detallerequisicioncompra.getdescripcion());	
				detallerequisicioncompraAux.setcantidad_entregada(this.detallerequisicioncompra.getcantidad_entregada());	
				detallerequisicioncompraAux.setcantidad_pendiente(this.detallerequisicioncompra.getcantidad_pendiente());	
				
				if(this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.detallerequisicioncompraAux.getId()>=0) {	
						this.detallerequisicioncomprasEliminados.add(detallerequisicioncompraAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(detallerequisicioncompraAux,detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallerequisicioncompraAux,detallerequisicioncompras);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.detallerequisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncompraLogic.saveDetalleRequisicionCompras();//WithConnection
						//detallerequisicioncompraLogic.getSetVersionRowDetalleRequisicionCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detallerequisicioncompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detallerequisicioncompraLogic.saveDetalleRequisicionCompraRelaciones(detallerequisicioncompraAux);//WithConnection
								//detallerequisicioncompraLogic.getSetVersionRowDetalleRequisicionCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.detallerequisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
								|| this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(detallerequisicioncompraAux,detallerequisicioncompraLogic.getDetalleRequisicionCompras());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(detallerequisicioncompraAux,detallerequisicioncompras);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().addAll(this.detallerequisicioncomprasEliminados);
					
					detallerequisicioncompraLogic.saveDetalleRequisicionCompras();//WithConnection
					//detallerequisicioncompraLogic.getSetVersionRowDetalleRequisicionCompras();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesDetalleRequisicionCompra();
				
				this.detallerequisicioncomprasEliminados= new ArrayList<DetalleRequisicionCompra>();		
			}
			
			if(this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.arrDatoGeneralTotales=DetalleRequisicionCompraConstantesFunciones.getTotalesListaDetalleRequisicionCompra(detallerequisicioncompraLogic.getDetalleRequisicionCompras());							
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				this.arrDatoGeneralTotales=DetalleRequisicionCompraConstantesFunciones.getTotalesListaDetalleRequisicionCompra(this.detallerequisicioncompras);
			}
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Detalle Requisicion Compra GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.detallerequisicioncompra=detallerequisicioncompraAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessDetalleRequisicionCompra();
      	}
		
	}	
	
	public void actualizarRelaciones(DetalleRequisicionCompra detallerequisicioncompraLocal) throws Exception {
		
		if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(DetalleRequisicionCompra detallerequisicioncompraLocal) throws Exception {	
		if(this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(RequisicionCompraDetalleFormJInternalFrame.class)) {
				RequisicionCompraBeanSwingJInternalFrame requisicioncompraBeanSwingJInternalFrameLocal=(RequisicionCompraBeanSwingJInternalFrame) ((RequisicionCompraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				requisicioncompraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoRequisicionCompra(requisicioncompraBeanSwingJInternalFrameLocal.getrequisicioncompra(),true);
				requisicioncompraBeanSwingJInternalFrameLocal.actualizarLista(requisicioncompraBeanSwingJInternalFrameLocal.requisicioncompra,this.requisicioncomprasForeignKey);

				requisicioncompraBeanSwingJInternalFrameLocal.actualizarRelaciones(requisicioncompraBeanSwingJInternalFrameLocal.requisicioncompra);

				detallerequisicioncompraLocal.setRequisicionCompra(requisicioncompraBeanSwingJInternalFrameLocal.requisicioncompra);

				this.addItemDefectoCombosForeignKeyRequisicionCompra();
				this.cargarCombosFrameRequisicionComprasForeignKey("Formulario");
				this.setActualRequisicionCompraForeignKey(requisicioncompraBeanSwingJInternalFrameLocal.requisicioncompra.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				detallerequisicioncompraLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				detallerequisicioncompraLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				detallerequisicioncompraLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				detallerequisicioncompraLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				detallerequisicioncompraLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				detallerequisicioncompraLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegaBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegaBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegaBeanSwingJInternalFrameLocal.actualizarLista(bodegaBeanSwingJInternalFrameLocal.bodega,this.bodegasForeignKey);

				bodegaBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegaBeanSwingJInternalFrameLocal.bodega);

				detallerequisicioncompraLocal.setBodega(bodegaBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey("Formulario");
				this.setActualBodegaForeignKey(bodegaBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ProductoDetalleFormJInternalFrame.class)) {
				ProductoBeanSwingJInternalFrame productoBeanSwingJInternalFrameLocal=(ProductoBeanSwingJInternalFrame) ((ProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				productoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoProducto(productoBeanSwingJInternalFrameLocal.getproducto(),true);
				productoBeanSwingJInternalFrameLocal.actualizarLista(productoBeanSwingJInternalFrameLocal.producto,this.productosForeignKey);

				productoBeanSwingJInternalFrameLocal.actualizarRelaciones(productoBeanSwingJInternalFrameLocal.producto);

				detallerequisicioncompraLocal.setProducto(productoBeanSwingJInternalFrameLocal.producto);

				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey("Formulario");
				this.setActualProductoForeignKey(productoBeanSwingJInternalFrameLocal.producto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UnidadDetalleFormJInternalFrame.class)) {
				UnidadBeanSwingJInternalFrame unidadBeanSwingJInternalFrameLocal=(UnidadBeanSwingJInternalFrame) ((UnidadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				unidadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUnidad(unidadBeanSwingJInternalFrameLocal.getunidad(),true);
				unidadBeanSwingJInternalFrameLocal.actualizarLista(unidadBeanSwingJInternalFrameLocal.unidad,this.unidadsForeignKey);

				unidadBeanSwingJInternalFrameLocal.actualizarRelaciones(unidadBeanSwingJInternalFrameLocal.unidad);

				detallerequisicioncompraLocal.setUnidad(unidadBeanSwingJInternalFrameLocal.unidad);

				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey("Formulario");
				this.setActualUnidadForeignKey(unidadBeanSwingJInternalFrameLocal.unidad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroCostoDetalleFormJInternalFrame.class)) {
				CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrameLocal=(CentroCostoBeanSwingJInternalFrame) ((CentroCostoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centrocostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroCosto(centrocostoBeanSwingJInternalFrameLocal.getcentrocosto(),true);
				centrocostoBeanSwingJInternalFrameLocal.actualizarLista(centrocostoBeanSwingJInternalFrameLocal.centrocosto,this.centrocostosForeignKey);

				centrocostoBeanSwingJInternalFrameLocal.actualizarRelaciones(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				detallerequisicioncompraLocal.setCentroCosto(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey("Formulario");
				this.setActualCentroCostoForeignKey(centrocostoBeanSwingJInternalFrameLocal.centrocosto.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarDetalleRequisicionCompraActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = detallerequisicioncompraValidator.getInvalidValues(this.detallerequisicioncompra);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(DetalleRequisicionCompra detallerequisicioncompra,List<DetalleRequisicionCompra> detallerequisicioncompras) throws Exception {
		try	{		
			DetalleRequisicionCompraConstantesFunciones.actualizarLista(detallerequisicioncompra,detallerequisicioncompras,this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(DetalleRequisicionCompra detallerequisicioncompra,List<DetalleRequisicionCompra> detallerequisicioncompras) throws Exception {
		try	{			
			DetalleRequisicionCompraConstantesFunciones.actualizarSelectedLista(detallerequisicioncompra,detallerequisicioncompras);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<DetalleRequisicionCompra> detallerequisicioncomprasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				detallerequisicioncomprasLocal=this.detallerequisicioncompraLogic.getDetalleRequisicionCompras();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				detallerequisicioncomprasLocal=this.detallerequisicioncompras;
			}
			//ARCHITECTURE
		
			for(DetalleRequisicionCompra detallerequisicioncompraLocal:detallerequisicioncomprasLocal) {
				if(this.permiteMantenimiento(detallerequisicioncompraLocal) && detallerequisicioncompraLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+DetalleRequisicionCompraConstantesFunciones.getDetalleRequisicionCompraLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.IDREQUISICIONCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_requisicion_compraDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_empresaDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_sucursalDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_ejercicioDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_periodoDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_anioDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_mesDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.IDBODEGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_bodegaDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.IDPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_productoDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.IDUNIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_unidadDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.IDCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_centro_costoDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.CANTIDADREQUISICION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelcantidad_requisicionDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.COSTOUNITARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelcosto_unitarioDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.COSTOTOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelcosto_totalDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabeldescripcionDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.CANTIDADENTREGADA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelcantidad_entregadaDetalleRequisicionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleRequisicionCompraConstantesFunciones.CANTIDADPENDIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelcantidad_pendienteDetalleRequisicionCompra,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_requisicion_compraDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_empresaDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_sucursalDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_ejercicioDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_periodoDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_anioDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_mesDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_bodegaDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_productoDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_unidadDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelid_centro_costoDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelcantidad_requisicionDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelcosto_unitarioDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelcosto_totalDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabeldescripcionDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelcantidad_entregadaDetalleRequisicionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelcantidad_pendienteDetalleRequisicionCompra,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoDetalleRequisicionCompra--;	
		
		
		this.detallerequisicioncompraAux=new DetalleRequisicionCompra();
		
		this.detallerequisicioncompraAux.setId(this.iIdNuevoDetalleRequisicionCompra);
		this.detallerequisicioncompraAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().add(this.detallerequisicioncompraAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.detallerequisicioncompras.add(this.detallerequisicioncompraAux);
		}
		//ARCHITECTURE
		
		this.detallerequisicioncompra=this.detallerequisicioncompraAux;
		
		if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioDetalleRequisicionCompra(this.detallerequisicioncompra);
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleRequisicionCompra(this.detallerequisicioncompra);
		}
				
		//this.setDefaultControlesDetalleRequisicionCompra();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyDetalleRequisicionCompra();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyDetalleRequisicionCompra();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleRequisicionCompra();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompraBean,this.detallerequisicioncompra,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
			classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.detallerequisicioncompraReturnGeneral=detallerequisicioncompraLogic.procesarEventosDetalleRequisicionComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detallerequisicioncompraLogic.getDetalleRequisicionCompras(),this.detallerequisicioncompra,this.detallerequisicioncompraParameterGeneral,this.isEsNuevoDetalleRequisicionCompra,classes);//this.detallerequisicioncompraLogic.getDetalleRequisicionCompra()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanDetalleRequisicionCompra(this.detallerequisicioncompraReturnGeneral,this.detallerequisicioncompraBean,false);
		
		if(this.detallerequisicioncompraReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleRequisicionCompra(this.detallerequisicioncompraReturnGeneral.getDetalleRequisicionCompra());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioDetalleRequisicionCompra(this.detallerequisicioncompraReturnGeneral.getDetalleRequisicionCompra());
		}
		
		if(this.detallerequisicioncompraReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioDetalleRequisicionCompra(this.detallerequisicioncompraReturnGeneral.getDetalleRequisicionCompra(),classes);//this.detallerequisicioncompraBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyDetalleRequisicionCompra();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyDetalleRequisicionCompra();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.RecargarFormDetalleRequisicionCompra(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingDetalleRequisicionCompra(false);
						
			if(detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleRequisicionCompra();
			}
			
			this.actualizarVisualTableDatosDetalleRequisicionCompra();
			
			this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(this.getIndiceNuevoDetalleRequisicionCompra(), this.getIndiceNuevoDetalleRequisicionCompra());
			
			this.seleccionarFilaTablaDetalleRequisicionCompraActual();
						
			this.actualizarEstadoCeldasBotonesDetalleRequisicionCompra("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesDetalleRequisicionCompra(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_requisicionDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarcantidad_requisicionDetalleRequisicionCompra);//
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_unitarioDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarcosto_unitarioDetalleRequisicionCompra);//
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_totalDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarcosto_totalDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextAreadescripcionDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activardescripcionDetalleRequisicionCompra);//
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_entregadaDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarcantidad_entregadaDetalleRequisicionCompra);//
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_pendienteDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarcantidad_pendienteDetalleRequisicionCompra);	
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_requisicion_compraDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarid_requisicion_compraDetalleRequisicionCompra);//
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_empresaDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarid_empresaDetalleRequisicionCompra);//
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_sucursalDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarid_sucursalDetalleRequisicionCompra);//
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarid_ejercicioDetalleRequisicionCompra);//
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarid_periodoDetalleRequisicionCompra);//
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_anioDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarid_anioDetalleRequisicionCompra);//
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_mesDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarid_mesDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarid_bodegaDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarid_productoDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_unidadDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarid_unidadDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_centro_costoDetalleRequisicionCompra.setEnabled(isHabilitar && this.detallerequisicioncompraConstantesFunciones.activarid_centro_costoDetalleRequisicionCompra);
	};
	
	public void setDefaultControlesDetalleRequisicionCompra() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoDetalleRequisicionCompra(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.detallerequisicioncompraSessionBean.setConGuardarRelaciones(true);			
			this.detallerequisicioncompraSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTabbedPaneRelacionesDetalleRequisicionCompra.setVisible(true);
			
					
		} else {
			//this.detallerequisicioncompraSessionBean.setConGuardarRelaciones(false);			
			this.detallerequisicioncompraSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTabbedPaneRelacionesDetalleRequisicionCompra.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoDetalleRequisicionCompra() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleRequisicionCompra detallerequisicioncompraAux:this.detallerequisicioncompraLogic.getDetalleRequisicionCompras()) {
				if(detallerequisicioncompraAux.getId().equals(this.iIdNuevoDetalleRequisicionCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleRequisicionCompra detallerequisicioncompraAux:this.detallerequisicioncompras) {
				if(detallerequisicioncompraAux.getId().equals(this.iIdNuevoDetalleRequisicionCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleRequisicionCompra detallerequisicioncompraAux:this.detallerequisicioncompraLogic.getDetalleRequisicionCompras()) {
				if(detallerequisicioncompraAux.getId().equals(detallerequisicioncompra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleRequisicionCompra detallerequisicioncompraAux:this.detallerequisicioncompras) {
				if(detallerequisicioncompraAux.getId().equals(detallerequisicioncompra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompraOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleRequisicionCompra detallerequisicioncompraAux:this.detallerequisicioncompraLogic.getDetalleRequisicionCompras()) {
				if(detallerequisicioncompraAux.getDetalleRequisicionCompraOriginal().getId().equals(detallerequisicioncompraOriginal.getId())) {
					existe=true;
					detallerequisicioncompraOriginal.setId(detallerequisicioncompraAux.getId());
					detallerequisicioncompraOriginal.setVersionRow(detallerequisicioncompraAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleRequisicionCompra detallerequisicioncompraAux:this.detallerequisicioncompras) {
				if(detallerequisicioncompraAux.getDetalleRequisicionCompraOriginal().getId().equals(detallerequisicioncompraOriginal.getId())) {
					existe=true;
					detallerequisicioncompraOriginal.setId(detallerequisicioncompraAux.getId());
					detallerequisicioncompraOriginal.setVersionRow(detallerequisicioncompraAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosDetalleRequisicionCompra(Boolean esParaCancelar) throws Exception {
		detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
		detallerequisicioncompraAux=new DetalleRequisicionCompra();
		
		if(!this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleRequisicionCompra detallerequisicioncompraAux:this.detallerequisicioncompraLogic.getDetalleRequisicionCompras()) {
					if(detallerequisicioncompraAux.getId()<0) {
						detallerequisicioncomprasAux.add(detallerequisicioncompraAux);
					}		
				}
				this.iIdNuevoDetalleRequisicionCompra=0L;
				this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().removeAll(detallerequisicioncomprasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleRequisicionCompra detallerequisicioncompraAux:this.detallerequisicioncompras) {
					if(detallerequisicioncompraAux.getId()<0) {
						detallerequisicioncomprasAux.add(detallerequisicioncompraAux);
					}		
				}
				this.iIdNuevoDetalleRequisicionCompra=0L;
				this.detallerequisicioncompras.removeAll(detallerequisicioncomprasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoDetalleRequisicionCompra 
					&& this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().size()>0
					) {
					detallerequisicioncompraAux=this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().get(this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().size() - 1);
				
					if(detallerequisicioncompraAux.getId()<0) {
						this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().remove(detallerequisicioncompraAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoDetalleRequisicionCompra && this.detallerequisicioncompras.size()>0) {
					detallerequisicioncompraAux=this.detallerequisicioncompras.get(this.detallerequisicioncompras.size() - 1);
				
					if(detallerequisicioncompraAux.getId()<0) {
						this.detallerequisicioncompras.remove(detallerequisicioncompraAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoDetalleRequisicionCompra(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(detallerequisicioncompra.getId()<0) {
				this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().remove(this.detallerequisicioncompra);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(detallerequisicioncompra.getId()<0) {
				this.detallerequisicioncompras.remove(this.detallerequisicioncompra);
			}
		}			
	}
	
	public void setEstadosInicialesDetalleRequisicionCompra(List<DetalleRequisicionCompra> detallerequisicioncomprasAux) throws Exception {
		DetalleRequisicionCompraConstantesFunciones.setEstadosInicialesDetalleRequisicionCompra(detallerequisicioncomprasAux);
	}
	
	public void setEstadosInicialesDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompraAux) throws Exception {
		DetalleRequisicionCompraConstantesFunciones.setEstadosInicialesDetalleRequisicionCompra(detallerequisicioncompraAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarDetalleRequisicionCompraActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesDetalleRequisicionCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarDetalleRequisicionCompraActual()) {
				if(!this.isEsNuevoDetalleRequisicionCompra) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesDetalleRequisicionCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoDetalleRequisicionCompra=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarDetalleRequisicionCompraActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Detalle Requisicion Compra ?", "MANTENIMIENTO DE Detalle Requisicion Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesDetalleRequisicionCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(DetalleRequisicionCompra detallerequisicioncompra) throws Exception {
		DetalleRequisicionCompraConstantesFunciones.seleccionarAsignar(this.detallerequisicioncompra,detallerequisicioncompra);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarDetalleRequisicionCompra=this.isPermisoActualizarOriginalDetalleRequisicionCompra;
			
			
			this.seleccionarAsignar(detallerequisicioncompra);
			
			

			idProductoActual=detallerequisicioncompra.getid_producto();
			this.seleccionarProductoActual();

			idCentroCostoActual=detallerequisicioncompra.getid_centro_costo();
			this.seleccionarCentroCostoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleRequisicionCompraConstantesFunciones.quitarEspaciosDetalleRequisicionCompra(this.detallerequisicioncompra,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesDetalleRequisicionCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.detallerequisicioncompraSessionBean.setsFuncionBusquedaRapida(this.detallerequisicioncompraSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarProductoActual() throws Exception {
		try	{
			Producto productoAux=new Producto();

			if(this.idProductoActual != null && this.idProductoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(this.idProductoActual);
					productoAux= productoLogic.getProducto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				productosForeignKey=new ArrayList<Producto>();
				productosForeignKey.add(productoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCentroCostoActual() throws Exception {
		try	{
			CentroCosto centrocostoAux=new CentroCosto();

			if(this.idCentroCostoActual != null && this.idCentroCostoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(this.idCentroCostoActual);
					centrocostoAux= centrocostoLogic.getCentroCosto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				centrocostosForeignKey=new ArrayList<CentroCosto>();
				centrocostosForeignKey.add(centrocostoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoDetalleRequisicionCompra) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosDetalleRequisicionCompra(esParaCancelar);				
				this.cancelarNuevoDetalleRequisicionCompra(esParaCancelar);								
			}
			
			this.detallerequisicioncompra=new DetalleRequisicionCompra();
			
			this.inicializarDetalleRequisicionCompra();
			
			this.actualizarEstadoCeldasBotonesDetalleRequisicionCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarDetalleRequisicionCompra() throws Exception {
		try {
			DetalleRequisicionCompraConstantesFunciones.inicializarDetalleRequisicionCompra(this.detallerequisicioncompra);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteDetalleRequisicionCompras(String sAccionBusqueda,List<DetalleRequisicionCompra> detallerequisicioncomprasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="DetalleRequisicionCompra"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="DetalleRequisicionCompraMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("DetalleRequisicionCompraMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="DetalleRequisicionCompra"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Detalle Requisicion Compras");		
		parameters.put("busquedapor", DetalleRequisicionCompraConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceDetalleRequisicionCompra=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			DetalleRequisicionCompraConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			DetalleRequisicionCompraConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceDetalleRequisicionCompra=new JRBeanArrayDataSource(DetalleRequisicionCompraJInternalFrame.TraerDetalleRequisicionCompraBeans(detallerequisicioncomprasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceDetalleRequisicionCompra);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+DetalleRequisicionCompraConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+DetalleRequisicionCompraConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(DetalleRequisicionCompraBean.TraerDetalleRequisicionCompraBeans(detallerequisicioncomprasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteDetalleRequisicionCompras(sAccionBusqueda,sTipoArchivoReporte,detallerequisicioncomprasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalDetalleRequisicionCompras(sAccionBusqueda,sTipoArchivoReporte,detallerequisicioncomprasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoDetalleRequisicionCompraActionPerformed(null);
					//this.generarExcelReporteDetalleRequisicionCompras(sAccionBusqueda,sTipoArchivoReporte,detallerequisicioncomprasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalDetalleRequisicionCompras(sAccionBusqueda,sTipoArchivoReporte,detallerequisicioncomprasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesDetalleRequisicionCompras(sAccionBusqueda,sTipoArchivoReporte,detallerequisicioncomprasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesDetalleRequisicionCompras(sAccionBusqueda,sTipoArchivoReporte,detallerequisicioncomprasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteDetalleRequisicionCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleRequisicionCompra> detallerequisicioncomprasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallerequisicioncompra";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleRequisicionCompras");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleRequisicionCompra("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(DetalleRequisicionCompra detallerequisicioncompra : detallerequisicioncomprasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			DetalleRequisicionCompraConstantesFunciones.generarExcelReporteDataDetalleRequisicionCompra("NORMAL",row,workbook,detallerequisicioncompra,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderDetalleRequisicionCompra(String sTipo,Row row,Workbook workbook) {
		
		DetalleRequisicionCompraConstantesFunciones.generarExcelReporteHeaderDetalleRequisicionCompra(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalDetalleRequisicionCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleRequisicionCompra> detallerequisicioncomprasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallerequisicioncompra_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleRequisicionCompras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(DetalleRequisicionCompra detallerequisicioncompra : detallerequisicioncomprasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.getDetalleRequisicionCompraDescripcion(detallerequisicioncompra));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_IDREQUISICIONCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDREQUISICIONCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getrequisicioncompra_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_IDBODEGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDBODEGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getbodega_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_IDPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_IDUNIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDUNIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getunidad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_IDCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getcentrocosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getcantidad_requisicion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOUNITARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOUNITARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getcosto_unitario());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOTOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOTOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getcosto_total());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getcantidad_entregada());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallerequisicioncompra.getcantidad_pendiente());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesDetalleRequisicionCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleRequisicionCompra> detallerequisicioncomprasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<DetalleRequisicionCompra> detallerequisicioncomprasRespaldo=null;
		
		classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.detallerequisicioncompraLogic.setDatosCliente(this.datosCliente);
		this.detallerequisicioncompraLogic.setDatosDeep(this.datosDeep);
		this.detallerequisicioncompraLogic.setIsConDeep(true);
		
		detallerequisicioncomprasRespaldo=this.detallerequisicioncompraLogic.getDetalleRequisicionCompras();
		
		this.detallerequisicioncompraLogic.setDetalleRequisicionCompras(detallerequisicioncomprasParaReportes);	
		this.detallerequisicioncompraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		detallerequisicioncomprasParaReportes=this.detallerequisicioncompraLogic.getDetalleRequisicionCompras();
		this.detallerequisicioncompraLogic.setDetalleRequisicionCompras(detallerequisicioncomprasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallerequisicioncompra_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleRequisicionCompras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleRequisicionCompra("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(DetalleRequisicionCompra detallerequisicioncompra : detallerequisicioncomprasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderDetalleRequisicionCompra("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			DetalleRequisicionCompraConstantesFunciones.generarExcelReporteDataDetalleRequisicionCompra("NORMAL",row,workbook,detallerequisicioncompra,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.getDetalleRequisicionCompraDescripcion(detallerequisicioncompra));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessDetalleRequisicionCompra() throws Exception {		
		this.startProcessDetalleRequisicionCompra(true);
	}
	
	public void startProcessDetalleRequisicionCompra(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasDetalleRequisicionCompra ,this.jPanelParametrosReportesDetalleRequisicionCompra, this.jScrollPanelDatosDetalleRequisicionCompra,this.jPanelPaginacionDetalleRequisicionCompra, this.jScrollPanelDatosEdicionDetalleRequisicionCompra, this.jPanelAccionesDetalleRequisicionCompra,this.jPanelAccionesFormularioDetalleRequisicionCompra,this.jmenuBarDetalleRequisicionCompra,this.jmenuBarDetalleDetalleRequisicionCompra,this.jTtoolBarDetalleRequisicionCompra,this.jTtoolBarDetalleDetalleRequisicionCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleRequisicionCompra=this.jTabbedPaneBusquedasDetalleRequisicionCompra; 
		
		final JPanel jPanelParametrosReportesDetalleRequisicionCompra=this.jPanelParametrosReportesDetalleRequisicionCompra;
		//final JScrollPane jScrollPanelDatosDetalleRequisicionCompra=this.jScrollPanelDatosDetalleRequisicionCompra;
		final JTable jTableDatosDetalleRequisicionCompra=this.jTableDatosDetalleRequisicionCompra;		
		final JPanel jPanelPaginacionDetalleRequisicionCompra=this.jPanelPaginacionDetalleRequisicionCompra;
		//final JScrollPane jScrollPanelDatosEdicionDetalleRequisicionCompra=this.jScrollPanelDatosEdicionDetalleRequisicionCompra;
		final JPanel jPanelAccionesDetalleRequisicionCompra=this.jPanelAccionesDetalleRequisicionCompra;
		
		JPanel jPanelCamposAuxiliarDetalleRequisicionCompra=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarDetalleRequisicionCompra=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
			jPanelCamposAuxiliarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelCamposDetalleRequisicionCompra;
			jPanelAccionesFormularioAuxiliarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelAccionesFormularioDetalleRequisicionCompra;
		}
		
		final JPanel jPanelCamposDetalleRequisicionCompra=jPanelCamposAuxiliarDetalleRequisicionCompra;
		final JPanel jPanelAccionesFormularioDetalleRequisicionCompra=jPanelAccionesFormularioAuxiliarDetalleRequisicionCompra;
		
		
		final JMenuBar jmenuBarDetalleRequisicionCompra=this.jmenuBarDetalleRequisicionCompra;
		final JToolBar jTtoolBarDetalleRequisicionCompra=this.jTtoolBarDetalleRequisicionCompra;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarDetalleRequisicionCompra=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetalleRequisicionCompra=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
			jmenuBarDetalleAuxiliarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jmenuBarDetalleDetalleRequisicionCompra;
			jTtoolBarDetalleAuxiliarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTtoolBarDetalleDetalleRequisicionCompra;
		}
		
		final JMenuBar jmenuBarDetalleDetalleRequisicionCompra=jmenuBarDetalleAuxiliarDetalleRequisicionCompra;
		final JToolBar jTtoolBarDetalleDetalleRequisicionCompra=jTtoolBarDetalleAuxiliarDetalleRequisicionCompra;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleRequisicionCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleRequisicionCompra;
			processRunnable.jTableDatos=jTableDatosDetalleRequisicionCompra;
			processRunnable.jPanelCampos=jPanelCamposDetalleRequisicionCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleRequisicionCompra;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleRequisicionCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleRequisicionCompra;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleRequisicionCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleRequisicionCompra;
			processRunnable.jTtoolBar=jTtoolBarDetalleRequisicionCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleRequisicionCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleRequisicionCompra ,jPanelParametrosReportesDetalleRequisicionCompra,jTableDatosDetalleRequisicionCompra, /*jScrollPanelDatosDetalleRequisicionCompra,*/jPanelCamposDetalleRequisicionCompra,jPanelPaginacionDetalleRequisicionCompra, /*jScrollPanelDatosEdicionDetalleRequisicionCompra,*/ jPanelAccionesDetalleRequisicionCompra,jPanelAccionesFormularioDetalleRequisicionCompra,jmenuBarDetalleRequisicionCompra,jmenuBarDetalleDetalleRequisicionCompra,jTtoolBarDetalleRequisicionCompra,jTtoolBarDetalleDetalleRequisicionCompra);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleRequisicionCompra ,jPanelParametrosReportesDetalleRequisicionCompra, jScrollPanelDatosDetalleRequisicionCompra,jPanelPaginacionDetalleRequisicionCompra, jScrollPanelDatosEdicionDetalleRequisicionCompra, jPanelAccionesDetalleRequisicionCompra,jPanelAccionesFormularioDetalleRequisicionCompra,jmenuBarDetalleRequisicionCompra,jmenuBarDetalleDetalleRequisicionCompra,jTtoolBarDetalleRequisicionCompra,jTtoolBarDetalleDetalleRequisicionCompra);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessDetalleRequisicionCompra() {// throws Exception 
		this.finishProcessDetalleRequisicionCompra(true);
	}
	
	public void finishProcessDetalleRequisicionCompra(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasDetalleRequisicionCompra ,this.jPanelParametrosReportesDetalleRequisicionCompra, this.jScrollPanelDatosDetalleRequisicionCompra,this.jPanelPaginacionDetalleRequisicionCompra, this.jScrollPanelDatosEdicionDetalleRequisicionCompra, this.jPanelAccionesDetalleRequisicionCompra,this.jPanelAccionesFormularioDetalleRequisicionCompra,this.jmenuBarDetalleRequisicionCompra,this.jmenuBarDetalleDetalleRequisicionCompra,this.jTtoolBarDetalleRequisicionCompra,this.jTtoolBarDetalleDetalleRequisicionCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleRequisicionCompra=this.jTabbedPaneBusquedasDetalleRequisicionCompra; 
		
		final JPanel jPanelParametrosReportesDetalleRequisicionCompra=this.jPanelParametrosReportesDetalleRequisicionCompra;
		//final JScrollPane jScrollPanelDatosDetalleRequisicionCompra=this.jScrollPanelDatosDetalleRequisicionCompra;
		final JTable jTableDatosDetalleRequisicionCompra=this.jTableDatosDetalleRequisicionCompra;		
		final JPanel jPanelPaginacionDetalleRequisicionCompra=this.jPanelPaginacionDetalleRequisicionCompra;
		//final JScrollPane jScrollPanelDatosEdicionDetalleRequisicionCompra=this.jScrollPanelDatosEdicionDetalleRequisicionCompra;
		final JPanel jPanelAccionesDetalleRequisicionCompra=this.jPanelAccionesDetalleRequisicionCompra;
		
		JPanel jPanelCamposAuxiliarDetalleRequisicionCompra=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarDetalleRequisicionCompra=new JPanel();
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
			jPanelCamposAuxiliarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelCamposDetalleRequisicionCompra;
			jPanelAccionesFormularioAuxiliarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelAccionesFormularioDetalleRequisicionCompra;
		}
		
		final JPanel jPanelCamposDetalleRequisicionCompra=jPanelCamposAuxiliarDetalleRequisicionCompra;
		final JPanel jPanelAccionesFormularioDetalleRequisicionCompra=jPanelAccionesFormularioAuxiliarDetalleRequisicionCompra;
		
		
		final JMenuBar jmenuBarDetalleRequisicionCompra=this.jmenuBarDetalleRequisicionCompra;		
		final JToolBar jTtoolBarDetalleRequisicionCompra=this.jTtoolBarDetalleRequisicionCompra;
				
		JMenuBar jmenuBarDetalleAuxiliarDetalleRequisicionCompra=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetalleRequisicionCompra=new JToolBar();
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
			jmenuBarDetalleAuxiliarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jmenuBarDetalleDetalleRequisicionCompra;
			jTtoolBarDetalleAuxiliarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTtoolBarDetalleDetalleRequisicionCompra;		
		}
		
		final JMenuBar jmenuBarDetalleDetalleRequisicionCompra=jmenuBarDetalleAuxiliarDetalleRequisicionCompra;
		final JToolBar jTtoolBarDetalleDetalleRequisicionCompra=jTtoolBarDetalleAuxiliarDetalleRequisicionCompra;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleRequisicionCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleRequisicionCompra;
			processRunnable.jTableDatos=jTableDatosDetalleRequisicionCompra;
			processRunnable.jPanelCampos=jPanelCamposDetalleRequisicionCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleRequisicionCompra;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleRequisicionCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleRequisicionCompra;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleRequisicionCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleRequisicionCompra;
			processRunnable.jTtoolBar=jTtoolBarDetalleRequisicionCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleRequisicionCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasDetalleRequisicionCompra ,jPanelParametrosReportesDetalleRequisicionCompra, jTableDatosDetalleRequisicionCompra,/*jScrollPanelDatosDetalleRequisicionCompra,*/jPanelCamposDetalleRequisicionCompra,jPanelPaginacionDetalleRequisicionCompra, /*jScrollPanelDatosEdicionDetalleRequisicionCompra,*/ jPanelAccionesDetalleRequisicionCompra,jPanelAccionesFormularioDetalleRequisicionCompra,jmenuBarDetalleRequisicionCompra,jmenuBarDetalleDetalleRequisicionCompra,jTtoolBarDetalleRequisicionCompra,jTtoolBarDetalleDetalleRequisicionCompra));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesDetalleRequisicionCompra(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarDetalleRequisicionCompra(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuDetalleRequisicionCompra(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarDetalleRequisicionCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleRequisicionCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleDetalleRequisicionCompra,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuDetalleRequisicionCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleRequisicionCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleDetalleRequisicionCompra,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.detallerequisicioncompraConstantesFunciones.getsFinalQueryDetalleRequisicionCompra();
		String  finalQueryPaginacionTodos=this.detallerequisicioncompraConstantesFunciones.getsFinalQueryDetalleRequisicionCompra();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=DetalleRequisicionCompraConstantesFunciones.getArrayColumnasGlobalesNoDetalleRequisicionCompra(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=DetalleRequisicionCompraConstantesFunciones.getArrayColumnasGlobalesDetalleRequisicionCompra(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,DetalleRequisicionCompraConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.detallerequisicioncomprasEliminados= new ArrayList<DetalleRequisicionCompra>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessDetalleRequisicionCompra();
		
				///*DetalleRequisicionCompraSessionBean*/this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			
			if(this.detallerequisicioncompraSessionBean==null) {
				this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=DetalleRequisicionCompraConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=DetalleRequisicionCompraConstantesFunciones.getClassesForeignKeysOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/detallerequisicioncompra."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			detallerequisicioncomprasAux= new ArrayList<DetalleRequisicionCompra>();
			
				
			detallerequisicioncompraLogic.setDatosCliente(this.datosCliente);
			detallerequisicioncompraLogic.setDatosDeep(this.datosDeep);
			detallerequisicioncompraLogic.setIsConDeep(true);
			
			
			detallerequisicioncompraLogic.getDetalleRequisicionCompraDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					detallerequisicioncompraLogic.getTodosDetalleRequisicionCompras(finalQueryGlobal,pagination);
					
					//detallerequisicioncompraLogic.getTodosDetalleRequisicionComprasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(detallerequisicioncompraLogic.getDetalleRequisicionCompras()==null|| detallerequisicioncompraLogic.getDetalleRequisicionCompras().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detallerequisicioncomprasAux= new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncomprasAux.addAll(detallerequisicioncompraLogic.getDetalleRequisicionCompras());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncomprasAux= new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncomprasAux.addAll(detallerequisicioncompras);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detallerequisicioncompraLogic.getTodosDetalleRequisicionCompras(finalQueryGlobal+"",this.pagination);												
							
							//detallerequisicioncompraLogic.getTodosDetalleRequisicionComprasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteDetalleRequisicionCompras("Todos",detallerequisicioncompraLogic.getDetalleRequisicionCompras() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detallerequisicioncompraLogic.setDetalleRequisicionCompras(new ArrayList<DetalleRequisicionCompra>());					
							detallerequisicioncompraLogic.getDetalleRequisicionCompras().addAll(detallerequisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncompras=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncompras.addAll(detallerequisicioncomprasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idDetalleRequisicionCompra=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idDetalleRequisicionCompra=this.idActual;
				
				} else if(this.idDetalleRequisicionCompraActual!=null && this.idDetalleRequisicionCompraActual!=0L) {
					idDetalleRequisicionCompra=idDetalleRequisicionCompraActual;
				}
				
					
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndicePorId(idDetalleRequisicionCompra);
				
				this.detallerequisicioncompras=new ArrayList<DetalleRequisicionCompra>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					detallerequisicioncompraLogic.getEntity(idDetalleRequisicionCompra);
					
					//detallerequisicioncompraLogic.getEntityWithConnection(idDetalleRequisicionCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallerequisicioncompraLogic.setDetalleRequisicionCompras(new ArrayList<DetalleRequisicionCompra>());
					detallerequisicioncompraLogic.getDetalleRequisicionCompras().add(detallerequisicioncompraLogic.getDetalleRequisicionCompra());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallerequisicioncompras=new ArrayList<DetalleRequisicionCompra>();
					this.detallerequisicioncompras.add(detallerequisicioncompra);
				}
				
				if(detallerequisicioncompraLogic.getDetalleRequisicionCompra()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdBodega")) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallerequisicioncompraLogic.getDetalleRequisicionCompras()==null||detallerequisicioncompraLogic.getDetalleRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallerequisicioncompras==null|| detallerequisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
						detallerequisicioncomprasAux.addAll(detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncomprasAux.addAll(detallerequisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleRequisicionCompras("FK_IdBodega",detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleRequisicionCompras("FK_IdBodega",detallerequisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncompraLogic.setDetalleRequisicionCompras(new ArrayList<DetalleRequisicionCompra>());
						detallerequisicioncompraLogic.getDetalleRequisicionCompras().addAll(detallerequisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncompras=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncompras.addAll(detallerequisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCentroCosto")) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallerequisicioncompraLogic.getDetalleRequisicionCompras()==null||detallerequisicioncompraLogic.getDetalleRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallerequisicioncompras==null|| detallerequisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
						detallerequisicioncomprasAux.addAll(detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncomprasAux.addAll(detallerequisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleRequisicionCompras("FK_IdCentroCosto",detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleRequisicionCompras("FK_IdCentroCosto",detallerequisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncompraLogic.setDetalleRequisicionCompras(new ArrayList<DetalleRequisicionCompra>());
						detallerequisicioncompraLogic.getDetalleRequisicionCompras().addAll(detallerequisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncompras=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncompras.addAll(detallerequisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallerequisicioncompraLogic.getDetalleRequisicionCompras()==null||detallerequisicioncompraLogic.getDetalleRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallerequisicioncompras==null|| detallerequisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
						detallerequisicioncomprasAux.addAll(detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncomprasAux.addAll(detallerequisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleRequisicionCompras("FK_IdEjercicio",detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleRequisicionCompras("FK_IdEjercicio",detallerequisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncompraLogic.setDetalleRequisicionCompras(new ArrayList<DetalleRequisicionCompra>());
						detallerequisicioncompraLogic.getDetalleRequisicionCompras().addAll(detallerequisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncompras=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncompras.addAll(detallerequisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallerequisicioncompraLogic.getDetalleRequisicionCompras()==null||detallerequisicioncompraLogic.getDetalleRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallerequisicioncompras==null|| detallerequisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
						detallerequisicioncomprasAux.addAll(detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncomprasAux.addAll(detallerequisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleRequisicionCompras("FK_IdEmpresa",detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleRequisicionCompras("FK_IdEmpresa",detallerequisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncompraLogic.setDetalleRequisicionCompras(new ArrayList<DetalleRequisicionCompra>());
						detallerequisicioncompraLogic.getDetalleRequisicionCompras().addAll(detallerequisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncompras=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncompras.addAll(detallerequisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallerequisicioncompraLogic.getDetalleRequisicionCompras()==null||detallerequisicioncompraLogic.getDetalleRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallerequisicioncompras==null|| detallerequisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
						detallerequisicioncomprasAux.addAll(detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncomprasAux.addAll(detallerequisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleRequisicionCompras("FK_IdPeriodo",detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleRequisicionCompras("FK_IdPeriodo",detallerequisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncompraLogic.setDetalleRequisicionCompras(new ArrayList<DetalleRequisicionCompra>());
						detallerequisicioncompraLogic.getDetalleRequisicionCompras().addAll(detallerequisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncompras=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncompras.addAll(detallerequisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdProducto")) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallerequisicioncompraLogic.getDetalleRequisicionCompras()==null||detallerequisicioncompraLogic.getDetalleRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallerequisicioncompras==null|| detallerequisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
						detallerequisicioncomprasAux.addAll(detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncomprasAux.addAll(detallerequisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleRequisicionCompras("FK_IdProducto",detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleRequisicionCompras("FK_IdProducto",detallerequisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncompraLogic.setDetalleRequisicionCompras(new ArrayList<DetalleRequisicionCompra>());
						detallerequisicioncompraLogic.getDetalleRequisicionCompras().addAll(detallerequisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncompras=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncompras.addAll(detallerequisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdRequisicionCompra")) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdRequisicionCompra(id_requisicion_compraFK_IdRequisicionCompra);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdRequisicionCompra(finalQueryGlobal,pagination,id_requisicion_compraFK_IdRequisicionCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdRequisicionCompra(id_requisicion_compraFK_IdRequisicionCompra);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdRequisicionCompra(id_requisicion_compraFK_IdRequisicionCompra);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallerequisicioncompraLogic.getDetalleRequisicionCompras()==null||detallerequisicioncompraLogic.getDetalleRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallerequisicioncompras==null|| detallerequisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
						detallerequisicioncomprasAux.addAll(detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncomprasAux.addAll(detallerequisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdRequisicionCompra(finalQueryGlobal,pagination,id_requisicion_compraFK_IdRequisicionCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdRequisicionCompra(id_requisicion_compraFK_IdRequisicionCompra);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdRequisicionCompra(id_requisicion_compraFK_IdRequisicionCompra);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleRequisicionCompras("FK_IdRequisicionCompra",detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleRequisicionCompras("FK_IdRequisicionCompra",detallerequisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncompraLogic.setDetalleRequisicionCompras(new ArrayList<DetalleRequisicionCompra>());
						detallerequisicioncompraLogic.getDetalleRequisicionCompras().addAll(detallerequisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncompras=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncompras.addAll(detallerequisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallerequisicioncompraLogic.getDetalleRequisicionCompras()==null||detallerequisicioncompraLogic.getDetalleRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallerequisicioncompras==null|| detallerequisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
						detallerequisicioncomprasAux.addAll(detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncomprasAux.addAll(detallerequisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleRequisicionCompras("FK_IdSucursal",detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleRequisicionCompras("FK_IdSucursal",detallerequisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncompraLogic.setDetalleRequisicionCompras(new ArrayList<DetalleRequisicionCompra>());
						detallerequisicioncompraLogic.getDetalleRequisicionCompras().addAll(detallerequisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncompras=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncompras.addAll(detallerequisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUnidad")) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallerequisicioncompraLogic.getDetalleRequisicionCompras()==null||detallerequisicioncompraLogic.getDetalleRequisicionCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallerequisicioncompras==null|| detallerequisicioncompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
						detallerequisicioncomprasAux.addAll(detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncomprasAux=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncomprasAux.addAll(detallerequisicioncompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleRequisicionCompraConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleRequisicionCompras("FK_IdUnidad",detallerequisicioncompraLogic.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleRequisicionCompras("FK_IdUnidad",detallerequisicioncompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncompraLogic.setDetalleRequisicionCompras(new ArrayList<DetalleRequisicionCompra>());
						detallerequisicioncompraLogic.getDetalleRequisicionCompras().addAll(detallerequisicioncomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncompras=new ArrayList<DetalleRequisicionCompra>();
							detallerequisicioncompras.addAll(detallerequisicioncomprasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesDetalleRequisicionCompra();
		
		this.traerValoresTablaTotales();	
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetalleRequisicionCompraConstantesFunciones.getTotalesListaDetalleRequisicionCompra(detallerequisicioncompraLogic.getDetalleRequisicionCompras());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetalleRequisicionCompraConstantesFunciones.getTotalesListaDetalleRequisicionCompra(this.detallerequisicioncompras);
		}
		*/
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessDetalleRequisicionCompra();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detallerequisicioncompraLogic.getDetalleRequisicionCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detallerequisicioncompras.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detallerequisicioncompraLogic.getDetalleRequisicionCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detallerequisicioncompras.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(DetalleRequisicionCompra detallerequisicioncompra) {
		Boolean permite=true;
		
		if(this.detallerequisicioncompra.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetalleRequisicionCompraConstantesFunciones.getTotalesListaDetalleRequisicionCompra(detallerequisicioncompraLogic.getDetalleRequisicionCompras());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetalleRequisicionCompraConstantesFunciones.getTotalesListaDetalleRequisicionCompra(this.detallerequisicioncompras);
		}
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=DetalleRequisicionCompraConstantesFunciones.getOrderByListaDetalleRequisicionCompra();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=DetalleRequisicionCompraConstantesFunciones.getOrderByListaDetalleRequisicionCompra();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncompraLogic.getDetalleRequisicionCompras()) {
				if(detallerequisicioncompra.getsType().equals(Constantes2.S_TOTALES)) {
					detallerequisicioncompraTotales=detallerequisicioncompra;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleRequisicionCompra detallerequisicioncompra:this.detallerequisicioncompras) {
				if(detallerequisicioncompra.getsType().equals(Constantes2.S_TOTALES)) {
					detallerequisicioncompraTotales=detallerequisicioncompra;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.detallerequisicioncompraAux=new DetalleRequisicionCompra();
			this.detallerequisicioncompraAux.setsType(Constantes2.S_TOTALES);
			this.detallerequisicioncompraAux.setIsNew(false);
			this.detallerequisicioncompraAux.setIsChanged(false);
			this.detallerequisicioncompraAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				DetalleRequisicionCompraConstantesFunciones.TotalizarValoresFilaDetalleRequisicionCompra(this.detallerequisicioncompraLogic.getDetalleRequisicionCompras(),this.detallerequisicioncompraAux);
				
				this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().add(this.detallerequisicioncompraAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				DetalleRequisicionCompraConstantesFunciones.TotalizarValoresFilaDetalleRequisicionCompra(this.detallerequisicioncompras,this.detallerequisicioncompraAux);
				
				this.detallerequisicioncompras.add(this.detallerequisicioncompraAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		detallerequisicioncompraTotales=new DetalleRequisicionCompra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().remove(detallerequisicioncompraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detallerequisicioncompras.remove(detallerequisicioncompraTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		detallerequisicioncompraTotales=new DetalleRequisicionCompra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncompraLogic.getDetalleRequisicionCompras()) {
				if(detallerequisicioncompra.getsType().equals(Constantes2.S_TOTALES)) {
					detallerequisicioncompraTotales=detallerequisicioncompra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleRequisicionCompraConstantesFunciones.TotalizarValoresFilaDetalleRequisicionCompra(this.detallerequisicioncompraLogic.getDetalleRequisicionCompras(),detallerequisicioncompraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleRequisicionCompra detallerequisicioncompra:this.detallerequisicioncompras) {
				if(detallerequisicioncompra.getsType().equals(Constantes2.S_TOTALES)) {
					detallerequisicioncompraTotales=detallerequisicioncompra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleRequisicionCompraConstantesFunciones.TotalizarValoresFilaDetalleRequisicionCompra(this.detallerequisicioncompras,detallerequisicioncompraTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getDetalleRequisicionComprasFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleRequisicionComprasFK_IdBodega()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodega";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleRequisicionComprasFK_IdCentroCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleRequisicionComprasFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleRequisicionComprasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleRequisicionComprasFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleRequisicionComprasFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleRequisicionComprasFK_IdProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleRequisicionComprasFK_IdRequisicionCompra()throws Exception {
		try {
			sAccionBusqueda="FK_IdRequisicionCompra";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleRequisicionComprasFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleRequisicionComprasFK_IdUnidad()throws Exception {
		try {
			sAccionBusqueda="FK_IdUnidad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getDetalleRequisicionComprasFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleRequisicionComprasFK_IdBodega(String sFinalQuery,Long id_bodega)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdBodega(sFinalQuery,this.pagination,id_bodega);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleRequisicionComprasFK_IdCentroCosto(String sFinalQuery,Long id_centro_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdCentroCosto(sFinalQuery,this.pagination,id_centro_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleRequisicionComprasFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleRequisicionComprasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleRequisicionComprasFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleRequisicionComprasFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleRequisicionComprasFK_IdProducto(String sFinalQuery,Long id_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdProducto(sFinalQuery,this.pagination,id_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleRequisicionComprasFK_IdRequisicionCompra(String sFinalQuery,Long id_requisicion_compra)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdRequisicionCompra(sFinalQuery,this.pagination,id_requisicion_compra);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleRequisicionComprasFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleRequisicionComprasFK_IdUnidad(String sFinalQuery,Long id_unidad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallerequisicioncompraLogic.getDetalleRequisicionComprasFK_IdUnidad(sFinalQuery,this.pagination,id_unidad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosDetalleRequisicionCompra() {
		this.isPermisoTodoDetalleRequisicionCompra=false;
		this.isPermisoNuevoDetalleRequisicionCompra=false;
		this.isPermisoActualizarDetalleRequisicionCompra=false;
		this.isPermisoActualizarOriginalDetalleRequisicionCompra=false;
		this.isPermisoEliminarDetalleRequisicionCompra=false;
		this.isPermisoGuardarCambiosDetalleRequisicionCompra=false;
		this.isPermisoConsultaDetalleRequisicionCompra=false;
		this.isPermisoBusquedaDetalleRequisicionCompra=false;
		this.isPermisoReporteDetalleRequisicionCompra=false;		
		this.isPermisoOrdenDetalleRequisicionCompra=false;		
		this.isPermisoPaginacionMedioDetalleRequisicionCompra=false;		
		this.isPermisoPaginacionAltoDetalleRequisicionCompra=false;
		this.isPermisoPaginacionTodoDetalleRequisicionCompra=false;
		this.isPermisoCopiarDetalleRequisicionCompra=false;		
		this.isPermisoVerFormDetalleRequisicionCompra=false;		
		this.isPermisoDuplicarDetalleRequisicionCompra=false;		
		this.isPermisoOrdenDetalleRequisicionCompra=false;		
	}
	
	public void setPermisosUsuarioDetalleRequisicionCompra(Boolean isPermiso) {
		this.isPermisoTodoDetalleRequisicionCompra=isPermiso;
		this.isPermisoNuevoDetalleRequisicionCompra=isPermiso;
		this.isPermisoActualizarDetalleRequisicionCompra=isPermiso;
		this.isPermisoActualizarOriginalDetalleRequisicionCompra=isPermiso;
		this.isPermisoEliminarDetalleRequisicionCompra=isPermiso;
		this.isPermisoGuardarCambiosDetalleRequisicionCompra=isPermiso;
		this.isPermisoConsultaDetalleRequisicionCompra=isPermiso;
		this.isPermisoBusquedaDetalleRequisicionCompra=isPermiso;
		this.isPermisoReporteDetalleRequisicionCompra=isPermiso;
		this.isPermisoOrdenDetalleRequisicionCompra=isPermiso;		
		this.isPermisoPaginacionMedioDetalleRequisicionCompra=isPermiso;		
		this.isPermisoPaginacionAltoDetalleRequisicionCompra=isPermiso;		
		this.isPermisoPaginacionTodoDetalleRequisicionCompra=isPermiso;		
		this.isPermisoCopiarDetalleRequisicionCompra=isPermiso;		
		this.isPermisoVerFormDetalleRequisicionCompra=isPermiso;		
		this.isPermisoDuplicarDetalleRequisicionCompra=isPermiso;
		this.isPermisoOrdenDetalleRequisicionCompra=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioDetalleRequisicionCompra(Boolean isPermiso) {
		//this.isPermisoTodoDetalleRequisicionCompra=isPermiso;
		this.isPermisoNuevoDetalleRequisicionCompra=isPermiso;
		this.isPermisoActualizarDetalleRequisicionCompra=isPermiso;
		this.isPermisoActualizarOriginalDetalleRequisicionCompra=isPermiso;
		this.isPermisoEliminarDetalleRequisicionCompra=isPermiso;
		this.isPermisoGuardarCambiosDetalleRequisicionCompra=isPermiso;
		//this.isPermisoConsultaDetalleRequisicionCompra=isPermiso;
		//this.isPermisoBusquedaDetalleRequisicionCompra=isPermiso;
		//this.isPermisoReporteDetalleRequisicionCompra=isPermiso;
		//this.isPermisoOrdenDetalleRequisicionCompra=isPermiso;		
		//this.isPermisoPaginacionMedioDetalleRequisicionCompra=isPermiso;		
		//this.isPermisoPaginacionAltoDetalleRequisicionCompra=isPermiso;		
		//this.isPermisoPaginacionTodoDetalleRequisicionCompra=isPermiso;		
		//this.isPermisoCopiarDetalleRequisicionCompra=isPermiso;		
		//this.isPermisoDuplicarDetalleRequisicionCompra=isPermiso;
		//this.isPermisoOrdenDetalleRequisicionCompra=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioDetalleRequisicionCompraClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(DetalleRequisicionCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebDetalleRequisicionCompra(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioDetalleRequisicionCompraClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioDetalleRequisicionCompraClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionDetalleRequisicionCompraClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioDetalleRequisicionCompraClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioDetalleRequisicionCompra() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(DetalleRequisicionCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, DetalleRequisicionCompraConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoDetalleRequisicionCompra=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarDetalleRequisicionCompra=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalDetalleRequisicionCompra=this.isPermisoActualizarDetalleRequisicionCompra;
			this.isPermisoEliminarDetalleRequisicionCompra=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosDetalleRequisicionCompra=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaDetalleRequisicionCompra=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaDetalleRequisicionCompra=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoDetalleRequisicionCompra=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteDetalleRequisicionCompra=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleRequisicionCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioDetalleRequisicionCompra=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoDetalleRequisicionCompra=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoDetalleRequisicionCompra=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarDetalleRequisicionCompra=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormDetalleRequisicionCompra=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarDetalleRequisicionCompra=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleRequisicionCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosDetalleRequisicionCompra.setToolTipText(this.jTableDatosDetalleRequisicionCompra.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioDetalleRequisicionCompra(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioDetalleRequisicionCompra(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(DetalleRequisicionCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(DetalleRequisicionCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioDetalleRequisicionCompra() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyDetalleRequisicionCompraListas()throws Exception {
		try	{						
			
				this.requisicioncomprasForeignKey=new ArrayList();
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.bodegasForeignKey=new ArrayList();
				this.productosForeignKey=new ArrayList();
				this.unidadsForeignKey=new ArrayList();
				this.centrocostosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyDetalleRequisicionCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(DetalleRequisicionCompraJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyDetalleRequisicionCompraListas(false);
			} else {
			
				this.cargarCombosForeignKeyRequisicionCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyRequisicionCompraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.requisicioncomprasForeignKey==null||this.requisicioncomprasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=RequisicionCompraConstantesFunciones.getArrayColumnasGlobalesRequisicionCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,RequisicionCompraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=RequisicionCompraConstantesFunciones.SFINALQUERY;

				this.cargarCombosRequisicionComprasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.productosForeignKey==null||this.productosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UnidadConstantesFunciones.SFINALQUERY;

				this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroCostoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyDetalleRequisicionCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			DetalleRequisicionCompraParameterReturnGeneral detallerequisicioncompraReturnGeneral=new DetalleRequisicionCompraParameterReturnGeneral();
						
			


				String finalQueryGlobalRequisicionCompra="";

				if(((this.requisicioncomprasForeignKey==null||this.requisicioncomprasForeignKey.size()<=0) && this.detallerequisicioncompraConstantesFunciones.cargarid_requisicion_compraDetalleRequisicionCompra)
					 || (this.esRecargarFks && this.detallerequisicioncompraConstantesFunciones.cargarid_requisicion_compraDetalleRequisicionCompra)) {

					if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionRequisicionCompra()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=RequisicionCompraConstantesFunciones.getArrayColumnasGlobalesRequisicionCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalRequisicionCompra=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,RequisicionCompraConstantesFunciones.TABLENAME);

						finalQueryGlobalRequisicionCompra=Funciones.GetFinalQueryAppend(finalQueryGlobalRequisicionCompra, "");
						finalQueryGlobalRequisicionCompra+=RequisicionCompraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosRequisicionComprasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalRequisicionCompra=" WHERE " + ConstantesSql.ID + "="+detallerequisicioncompraSessionBean.getlidRequisicionCompraActual();
					}
				} else {
					finalQueryGlobalRequisicionCompra="NONE";
				}


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.detallerequisicioncompraConstantesFunciones.cargarid_empresaDetalleRequisicionCompra)
					 || (this.esRecargarFks && this.detallerequisicioncompraConstantesFunciones.cargarid_empresaDetalleRequisicionCompra)) {

					if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+detallerequisicioncompraSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.detallerequisicioncompraConstantesFunciones.cargarid_sucursalDetalleRequisicionCompra)
					 || (this.esRecargarFks && this.detallerequisicioncompraConstantesFunciones.cargarid_sucursalDetalleRequisicionCompra)) {

					if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+detallerequisicioncompraSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.detallerequisicioncompraConstantesFunciones.cargarid_ejercicioDetalleRequisicionCompra)
					 || (this.esRecargarFks && this.detallerequisicioncompraConstantesFunciones.cargarid_ejercicioDetalleRequisicionCompra)) {

					if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+detallerequisicioncompraSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.detallerequisicioncompraConstantesFunciones.cargarid_periodoDetalleRequisicionCompra)
					 || (this.esRecargarFks && this.detallerequisicioncompraConstantesFunciones.cargarid_periodoDetalleRequisicionCompra)) {

					if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+detallerequisicioncompraSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.detallerequisicioncompraConstantesFunciones.cargarid_anioDetalleRequisicionCompra)
					 || (this.esRecargarFks && this.detallerequisicioncompraConstantesFunciones.cargarid_anioDetalleRequisicionCompra)) {

					if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+detallerequisicioncompraSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.detallerequisicioncompraConstantesFunciones.cargarid_mesDetalleRequisicionCompra)
					 || (this.esRecargarFks && this.detallerequisicioncompraConstantesFunciones.cargarid_mesDetalleRequisicionCompra)) {

					if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+detallerequisicioncompraSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalBodega="";

				if(((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0) && this.detallerequisicioncompraConstantesFunciones.cargarid_bodegaDetalleRequisicionCompra)
					 || (this.esRecargarFks && this.detallerequisicioncompraConstantesFunciones.cargarid_bodegaDetalleRequisicionCompra)) {

					if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodega=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodega=Funciones.GetFinalQueryAppend(finalQueryGlobalBodega, "");
						finalQueryGlobalBodega+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodega=" WHERE " + ConstantesSql.ID + "="+detallerequisicioncompraSessionBean.getlidBodegaActual();
					}
				} else {
					finalQueryGlobalBodega="NONE";
				}


				String finalQueryGlobalProducto="";

				if(cargarCombosDependencia && ((this.productosForeignKey==null||this.productosForeignKey.size()<=0) && this.detallerequisicioncompraConstantesFunciones.cargarid_productoDetalleRequisicionCompra)
					 || (this.esRecargarFks && this.detallerequisicioncompraConstantesFunciones.cargarid_productoDetalleRequisicionCompra)) {

					if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalProducto, "");
						finalQueryGlobalProducto+=ProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalProducto=" WHERE " + ConstantesSql.ID + "="+detallerequisicioncompraSessionBean.getlidProductoActual();
					}
				} else {
					finalQueryGlobalProducto="NONE";
				}


				String finalQueryGlobalUnidad="";

				if(cargarCombosDependencia && ((this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0) && this.detallerequisicioncompraConstantesFunciones.cargarid_unidadDetalleRequisicionCompra)
					 || (this.esRecargarFks && this.detallerequisicioncompraConstantesFunciones.cargarid_unidadDetalleRequisicionCompra)) {

					if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUnidad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

						finalQueryGlobalUnidad=Funciones.GetFinalQueryAppend(finalQueryGlobalUnidad, "");
						finalQueryGlobalUnidad+=UnidadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUnidad=" WHERE " + ConstantesSql.ID + "="+detallerequisicioncompraSessionBean.getlidUnidadActual();
					}
				} else {
					finalQueryGlobalUnidad="NONE";
				}


				String finalQueryGlobalCentroCosto="";

				if(((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0) && this.detallerequisicioncompraConstantesFunciones.cargarid_centro_costoDetalleRequisicionCompra)
					 || (this.esRecargarFks && this.detallerequisicioncompraConstantesFunciones.cargarid_centro_costoDetalleRequisicionCompra)) {

					if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroCosto, "");
						finalQueryGlobalCentroCosto+=CentroCostoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroCosto=" WHERE " + ConstantesSql.ID + "="+detallerequisicioncompraSessionBean.getlidCentroCostoActual();
					}
				} else {
					finalQueryGlobalCentroCosto="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				detallerequisicioncompraReturnGeneral=detallerequisicioncompraLogic.cargarCombosLoteForeignKeyDetalleRequisicionCompra(finalQueryGlobalRequisicionCompra,finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalBodega,finalQueryGlobalProducto,finalQueryGlobalUnidad,finalQueryGlobalCentroCosto);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalRequisicionCompra.equals("NONE")) {
				this.requisicioncomprasForeignKey=detallerequisicioncompraReturnGeneral.getrequisicioncomprasForeignKey();
			}

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=detallerequisicioncompraReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=detallerequisicioncompraReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=detallerequisicioncompraReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=detallerequisicioncompraReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=detallerequisicioncompraReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=detallerequisicioncompraReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalBodega.equals("NONE")) {
				this.bodegasForeignKey=detallerequisicioncompraReturnGeneral.getbodegasForeignKey();
			}

			if(!finalQueryGlobalProducto.equals("NONE")) {
				this.productosForeignKey=detallerequisicioncompraReturnGeneral.getproductosForeignKey();
			}

			if(!finalQueryGlobalUnidad.equals("NONE")) {
				this.unidadsForeignKey=detallerequisicioncompraReturnGeneral.getunidadsForeignKey();
			}

			if(!finalQueryGlobalCentroCosto.equals("NONE")) {
				this.centrocostosForeignKey=detallerequisicioncompraReturnGeneral.getcentrocostosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyDetalleRequisicionCompra()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyRequisicionCompra();
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyBodega();
			this.addItemDefectoCombosForeignKeyProducto();
			this.addItemDefectoCombosForeignKeyUnidad();
			this.addItemDefectoCombosForeignKeyCentroCosto();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyRequisicionCompra()throws Exception {
		try {
			if(this.detallerequisicioncompraSessionBean==null) {
				this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionRequisicionCompra()) {
				RequisicionCompra requisicioncompra=new RequisicionCompra();
				RequisicionCompraConstantesFunciones.setRequisicionCompraDescripcion(requisicioncompra,Constantes.SMENSAJE_ESCOJA_OPCION);
				requisicioncompra.setId(null);

				if(!RequisicionCompraConstantesFunciones.ExisteEnLista(this.requisicioncomprasForeignKey,requisicioncompra,true)) {

					this.requisicioncomprasForeignKey.add(0,requisicioncompra);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodega()throws Exception {
		try {

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				Bodega bodega=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodega,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodega.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegasForeignKey,bodega,true)) {

					this.bodegasForeignKey.add(0,bodega);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyProducto()throws Exception {
		try {

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				Producto producto=new Producto();
				ProductoConstantesFunciones.setProductoDescripcion(producto,Constantes.SMENSAJE_ESCOJA_OPCION);
				producto.setId(null);

				if(!ProductoConstantesFunciones.ExisteEnLista(this.productosForeignKey,producto,true)) {

					this.productosForeignKey.add(0,producto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUnidad()throws Exception {
		try {

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				Unidad unidad=new Unidad();
				UnidadConstantesFunciones.setUnidadDescripcion(unidad,Constantes.SMENSAJE_ESCOJA_OPCION);
				unidad.setId(null);

				if(!UnidadConstantesFunciones.ExisteEnLista(this.unidadsForeignKey,unidad,true)) {

					this.unidadsForeignKey.add(0,unidad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroCosto()throws Exception {
		try {

			if(!this.detallerequisicioncompraSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				CentroCosto centrocosto=new CentroCosto();
				CentroCostoConstantesFunciones.setCentroCostoDescripcion(centrocosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				centrocosto.setId(null);

				if(!CentroCostoConstantesFunciones.ExisteEnLista(this.centrocostosForeignKey,centrocosto,true)) {

					this.centrocostosForeignKey.add(0,centrocosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyDetalleRequisicionCompra()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega("Todos");
			this.initActionsCombosForeignKeyProducto("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyDetalleRequisicionCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyProducto(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyBodega(JComboBox jComboBoxBodegaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Bodega bodegaLocal=(Bodega)jComboBoxBodegaGenerico.getSelectedItem();

			if(bodegaLocal!=null  && bodegaLocal.getId()!=null  && bodegaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_bodega="+bodegaLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryProductoFromBodega(bodegaLocal);

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboProducto=sFinalQueryCombo;

			this.productosForeignKey=new ArrayList<Producto>();
			this.cargarCombosForeignKeyProducto(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyProducto(JComboBox jComboBoxProductoGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Producto productoLocal=(Producto)jComboBoxProductoGenerico.getSelectedItem();

			if(productoLocal!=null  && productoLocal.getId()!=null  && productoLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_producto="+productoLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryUnidadFromBodegaYProducto(productoLocal,this.detallerequisicioncompra.getid_bodega());

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboUnidad=sFinalQueryCombo;

			this.unidadsForeignKey=new ArrayList<Unidad>();
			this.cargarCombosForeignKeyUnidad(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyBodega(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.addItemListener(new ComboBoxItemListener(this,"id_bodegaDetalleRequisicionCompra"));
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetalleRequisicionCompra"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.addActionListener(new ComboBoxActionListener(this,"id_bodegaDetalleRequisicionCompra"));
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetalleRequisicionCompra"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra"));

						this.jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra"));

					} else {
						this.jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra"));

						this.jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyProducto(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.addItemListener(new ComboBoxItemListener(this,"id_productoDetalleRequisicionCompra"));
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetalleRequisicionCompra"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.addActionListener(new ComboBoxActionListener(this,"id_productoDetalleRequisicionCompra"));
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetalleRequisicionCompra"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra"));

						this.jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra"));

					} else {
						this.jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra"));

						this.jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyDetalleRequisicionCompra()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleRequisicionCompra();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra)throws Exception {	
		try {
			
			this.setActualRequisicionCompraForeignKey(detallerequisicioncompra.getid_requisicion_compra(),false,"Formulario");
			this.setActualBodegaForeignKey(detallerequisicioncompra.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(detallerequisicioncompra.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(detallerequisicioncompra.getid_unidad(),false,"Formulario");
			this.setActualCentroCostoForeignKey(detallerequisicioncompra.getid_centro_costo(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra,String sTipoEvento)throws Exception {	
		try {
			
			

				if(detallerequisicioncompra.getProducto()!=null && !sTipoEvento.equals("id_productoDetalleRequisicionCompra")) { //sTipoEvento Evita Bucle Infinito

					this.productosForeignKey=new ArrayList<Producto>();
					this.productosForeignKey.add(detallerequisicioncompra.getProducto());

					this.addItemDefectoCombosForeignKeyProducto();
					this.cargarCombosFrameProductosForeignKey("Todos");
				}

				if(detallerequisicioncompra.getCentroCosto()!=null && !sTipoEvento.equals("id_centro_costoDetalleRequisicionCompra")) { //sTipoEvento Evita Bucle Infinito

					this.centrocostosForeignKey=new ArrayList<CentroCosto>();
					this.centrocostosForeignKey.add(detallerequisicioncompra.getCentroCosto());

					this.addItemDefectoCombosForeignKeyCentroCosto();
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyDetalleRequisicionCompra()throws Exception {	
		try {
			
			this.setActualRequisicionCompraForeignKey(this.detallerequisicioncompraConstantesFunciones.getid_requisicion_compra(),false,"Formulario");
			this.setActualBodegaForeignKey(this.detallerequisicioncompraConstantesFunciones.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(this.detallerequisicioncompraConstantesFunciones.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(this.detallerequisicioncompraConstantesFunciones.getid_unidad(),false,"Formulario");
			this.setActualCentroCostoForeignKey(this.detallerequisicioncompraConstantesFunciones.getid_centro_costo(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleRequisicionCompra()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyDetalleRequisicionCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyDetalleRequisicionCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroDetalleRequisicionCompra()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyDetalleRequisicionCompra()throws Exception {
		try {
			

			this.cargarCombosFrameRequisicionComprasForeignKey("Todos");
			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameBodegasForeignKey("Todos");
			this.cargarCombosFrameProductosForeignKey("Todos");
			this.cargarCombosFrameUnidadsForeignKey("Todos");
			this.cargarCombosFrameCentroCostosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyDetalleRequisicionCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameRequisicionComprasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyDetalleRequisicionCompra()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_requisicion_compraDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_requisicion_compraDetalleRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_requisicion_compraDetalleRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_empresaDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_empresaDetalleRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_empresaDetalleRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_sucursalDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_sucursalDetalleRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_sucursalDetalleRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_anioDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_anioDetalleRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_anioDetalleRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_mesDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_mesDetalleRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_mesDetalleRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_unidadDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_unidadDetalleRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_unidadDetalleRequisicionCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_centro_costoDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_centro_costoDetalleRequisicionCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_centro_costoDetalleRequisicionCompra.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	















	public void recargarFormDetalleRequisicionCompraBodega(JComboBox<?> jComboBoxGenericoBodega,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetalleRequisicionCompraid_producto(jComboBoxGenericoBodega,sFormularioTipoBusqueda,"Bodega",false);
	}

	public void recargarFormDetalleRequisicionCompraProducto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetalleRequisicionCompraid_unidad(jComboBoxGenericoProducto,sFormularioTipoBusqueda,"Producto",false);
	}




	
	



	public void recargarFormDetalleRequisicionCompraid_producto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Bodega")){
				this.setActualParaGuardarBodegaForeignKey(this.detallerequisicioncompra,jComboBoxGenericoProducto);
			}

			if(this.detallerequisicioncompra.getid_bodega()!=null && this.detallerequisicioncompra.getid_bodega()!=0L) {
				sFinalQuery+="  WHERE  id_bodega="+this.detallerequisicioncompra.getid_bodega();
			} else {
				sFinalQuery+="  WHERE  id_bodega=-1";
			}



			//BUCLE RECURSIVO
			this.setActualProductoForeignKey(this.detallerequisicioncompra.getid_bodega(),true,sFormularioTipoBusqueda);

			this.cargarCombosProductosForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormDetalleRequisicionCompraid_unidad(JComboBox<?> jComboBoxGenericoUnidad,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Producto")){
				this.setActualParaGuardarProductoForeignKey(this.detallerequisicioncompra,jComboBoxGenericoUnidad);
			}

			if(this.detallerequisicioncompra.getid_producto()!=null && this.detallerequisicioncompra.getid_producto()!=0L) {
				sFinalQuery+="  WHERE  id_producto="+this.detallerequisicioncompra.getid_producto();
			} else {
				sFinalQuery+="  WHERE  id_producto=-1";
			}



			//BUCLE RECURSIVO
			this.setActualUnidadForeignKey(this.detallerequisicioncompra.getid_producto(),true,sFormularioTipoBusqueda);

			this.cargarCombosUnidadsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public DetalleRequisicionCompraBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public DetalleRequisicionCompraBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public DetalleRequisicionCompraBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean(); 
		this.detallerequisicioncompraConstantesFunciones=new DetalleRequisicionCompraConstantesFunciones(); 
		this.detallerequisicioncompraBean=new DetalleRequisicionCompra();//(this.detallerequisicioncompraConstantesFunciones); 		
		this.detallerequisicioncompraReturnGeneral=new DetalleRequisicionCompraParameterReturnGeneral(); 
		
		this.detallerequisicioncompraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.detallerequisicioncompraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public DetalleRequisicionCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public DetalleRequisicionCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public DetalleRequisicionCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessDetalleRequisicionCompra(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.detallerequisicioncompraConstantesFunciones=new DetalleRequisicionCompraConstantesFunciones(); 
			this.detallerequisicioncompraBean=new DetalleRequisicionCompra();//this.detallerequisicioncompraConstantesFunciones); 			
			this.detallerequisicioncompraReturnGeneral=new DetalleRequisicionCompraParameterReturnGeneral(); 
		
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Detalle Requisicion Compra Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.detallerequisicioncompra=new DetalleRequisicionCompra();
			this.detallerequisicioncompras = new ArrayList<DetalleRequisicionCompra>();
			this.detallerequisicioncomprasAux = new ArrayList<DetalleRequisicionCompra>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic=new DetalleRequisicionCompraLogic();
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			//this.detallerequisicioncompraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.detallerequisicioncompraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormDetalleRequisicionCompra);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleRequisicionCompra);	
					}
					
					if(this.jInternalFrameImportacionDetalleRequisicionCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleRequisicionCompra);							
					}
					
				}
				
				if(this.jInternalFrameTotalesDetalleRequisicionCompra!=null) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetalleRequisicionCompra);
				}
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByDetalleRequisicionCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByDetalleRequisicionCompra);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleRequisicionCompra);
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.setVisible(false);
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra);
					this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.setVisible(false);
					this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionDetalleRequisicionCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionDetalleRequisicionCompra);
					this.jInternalFrameImportacionDetalleRequisicionCompra.setVisible(false);
					this.jInternalFrameImportacionDetalleRequisicionCompra.setSelected(false);
				}
				
				
			}
			
			if(this.jInternalFrameTotalesDetalleRequisicionCompra!=null) {
				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetalleRequisicionCompra);
				this.jInternalFrameTotalesDetalleRequisicionCompra.setVisible(false);
				this.jInternalFrameTotalesDetalleRequisicionCompra.setSelected(false);
			}
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByDetalleRequisicionCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByDetalleRequisicionCompra);
					this.jInternalFrameOrderByDetalleRequisicionCompra.setVisible(false);
					this.jInternalFrameOrderByDetalleRequisicionCompra.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idDetalleRequisicionCompraActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=DetalleRequisicionCompraConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.detallerequisicioncompraReturnGeneral=new DetalleRequisicionCompraParameterReturnGeneral();
			
			this.detallerequisicioncompraParameterGeneral=new DetalleRequisicionCompraParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.detallerequisicioncompraLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(DetalleRequisicionCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleRequisicionCompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado(),this.detallerequisicioncompraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleRequisicionCompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado(),this.detallerequisicioncompraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaDuplicarDetalleRequisicionCompra=true;
			this.isVisibilidadCeldaCopiarDetalleRequisicionCompra=true;
			this.isVisibilidadCeldaVerFormDetalleRequisicionCompra=true;
			this.isVisibilidadCeldaOrdenDetalleRequisicionCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaModificarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaActualizarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaEliminarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaCancelarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdBodega=true;
			this.isVisibilidadFK_IdCentroCosto=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdProducto=true;
			this.isVisibilidadFK_IdRequisicionCompra=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdUnidad=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesDetalleRequisicionCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosDetalleRequisicionCompra();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioDetalleRequisicionCompra(false);
			
			this.setPermisosUsuarioDetalleRequisicionCompra();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado() 
				|| (this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado() && this.detallerequisicioncompraSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioDetalleRequisicionCompraClasesRelacionadas();
			}
			
			if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioDetalleRequisicionCompraClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosDetalleRequisicionCompra();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualDetalleRequisicionCompra();
			}
			
			if(!this.isPermisoBusquedaDetalleRequisicionCompra) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioDetalleRequisicionCompra,this.isPermisoPaginacionMedioDetalleRequisicionCompra,this.isPermisoPaginacionTodoDetalleRequisicionCompra);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(DetalleRequisicionCompraConstantesFunciones.getTiposSeleccionarDetalleRequisicionCompra());
				
				this.tiposColumnasSelect=DetalleRequisicionCompraConstantesFunciones.getTiposSeleccionarDetalleRequisicionCompra(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioDetalleRequisicionCompra();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioDetalleRequisicionCompra(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioDetalleRequisicionCompra(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleRequisicionCompra() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			this.arrDatoGeneralTotales= new  ArrayList<DatoGeneral>();
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.requisicioncompraLogic=new RequisicionCompraLogic();
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.bodegaLogic=new BodegaLogic();
			this.productoLogic=new ProductoLogic();
			this.unidadLogic=new UnidadLogic();
			this.centrocostoLogic=new CentroCostoLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				detallerequisicioncompraImplementable= (DetalleRequisicionCompraImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleRequisicionCompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				detallerequisicioncompraImplementableHome= (DetalleRequisicionCompraImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleRequisicionCompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.detallerequisicioncompras= new ArrayList<DetalleRequisicionCompra>();
			this.detallerequisicioncomprasEliminados= new ArrayList<DetalleRequisicionCompra>();
						
			this.isEsNuevoDetalleRequisicionCompra=false;
			this.esParaAccionDesdeFormularioDetalleRequisicionCompra=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idProductoActual=0L;
			this.idCentroCostoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.requisicioncomprasForeignKey=new ArrayList<RequisicionCompra>() ;
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.bodegasForeignKey=new ArrayList<Bodega>() ;
			this.productosForeignKey=new ArrayList<Producto>() ;
			this.unidadsForeignKey=new ArrayList<Unidad>() ;
			this.centrocostosForeignKey=new ArrayList<CentroCosto>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyDetalleRequisicionCompra(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroDetalleRequisicionCompra();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=DetalleRequisicionCompraConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesDetalleRequisicionCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingDetalleRequisicionCompra(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioDetalleRequisicionCompra();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioDetalleRequisicionCompra();
			}
			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasDetalleRequisicionCompra.getTabCount(); i++) {
					this.jTabbedPaneBusquedasDetalleRequisicionCompra.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasDetalleRequisicionCompra.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessDetalleRequisicionCompra(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga DetalleRequisicionCompra: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectDetalleRequisicionCompra() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesDetalleRequisicionCompra")) {
				iIndex=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTabbedPaneRelacionesDetalleRequisicionCompra.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTabbedPaneRelacionesDetalleRequisicionCompra.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessDetalleRequisicionCompra();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyDetalleRequisicionCompra(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyDetalleRequisicionCompra(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyDetalleRequisicionCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyDetalleRequisicionCompraListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyDetalleRequisicionCompra();
		
		this.cargarCombosFrameForeignKeyDetalleRequisicionCompra();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyDetalleRequisicionCompra();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyDetalleRequisicionCompra();
		}
	}
	
	

	public void cargarCombosForeignKeyRequisicionCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyRequisicionCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyRequisicionCompra();
				this.cargarCombosFrameRequisicionComprasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaRequisicionCompra(this.requisicioncomprasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodega(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyBodega("Todos");
				}

			this.recargarComboTablaBodega(this.bodegasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaProducto(this.productosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaUnidad(this.unidadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoDetalleRequisicionCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			
			
			if(jTableDatosDetalleRequisicionCompra.getRowCount()>=1) {
				jTableDatosDetalleRequisicionCompra.removeRowSelectionInterval(0, jTableDatosDetalleRequisicionCompra.getRowCount()-1);						
			}
			
			this.isEsNuevoDetalleRequisicionCompra=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoDetalleRequisicionCompra(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesDetalleRequisicionCompra(true);			
			//this.detallerequisicioncompra=new DetalleRequisicionCompra();
			//this.detallerequisicioncompra.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleRequisicionCompra(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleRequisicionCompra() ;
			
			if(DetalleRequisicionCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleRequisicionCompra(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.detallerequisicioncompra);	
			this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);				
			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			
			if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar DetalleRequisicionCompra: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarDetalleRequisicionCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<DetalleRequisicionCompra> detallerequisicioncomprasSeleccionados=new ArrayList<DetalleRequisicionCompra>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosDetalleRequisicionCompra.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosDetalleRequisicionCompra.getSelectedRows().length;			
			}
			
			detallerequisicioncomprasSeleccionados=this.getDetalleRequisicionComprasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoDetalleRequisicionCompra--;			
				//DetalleRequisicionCompra detallerequisicioncompraAux= new DetalleRequisicionCompra();			
				//detallerequisicioncompraAux.setId(this.iIdNuevoDetalleRequisicionCompra);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//DetalleRequisicionCompra detallerequisicioncompraOrigen=new DetalleRequisicionCompra();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(DetalleRequisicionCompra detallerequisicioncompraOrigen : detallerequisicioncomprasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							detallerequisicioncompraOrigen =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallerequisicioncompraOrigen =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaDetalleRequisicionCompra();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.detallerequisicioncompra.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosDetalleRequisicionCompra(detallerequisicioncompraOrigen,this.detallerequisicioncompra,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().add(this.detallerequisicioncompraAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompras.add(this.detallerequisicioncompraAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
				
				this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(this.getIndiceNuevoDetalleRequisicionCompra(), this.getIndiceNuevoDetalleRequisicionCompra());
				
				int iLastRow =  this.jTableDatosDetalleRequisicionCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleRequisicionCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleRequisicionCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<DetalleRequisicionCompra> detallerequisicioncomprasSeleccionados=new ArrayList<DetalleRequisicionCompra>();									
		
			DetalleRequisicionCompra detallerequisicioncompraOrigen=new DetalleRequisicionCompra();
			DetalleRequisicionCompra detallerequisicioncompraDestino=new DetalleRequisicionCompra();
				
			detallerequisicioncomprasSeleccionados=this.getDetalleRequisicionComprasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosDetalleRequisicionCompra.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || detallerequisicioncomprasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosDetalleRequisicionCompra.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncompraOrigen =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detallerequisicioncompraOrigen =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallerequisicioncompraDestino =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detallerequisicioncompraDestino =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				detallerequisicioncompraOrigen =detallerequisicioncomprasSeleccionados.get(0);
				detallerequisicioncompraDestino =detallerequisicioncomprasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosDetalleRequisicionCompra(detallerequisicioncompraOrigen,detallerequisicioncompraDestino,true,false);
				
				detallerequisicioncompraDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detallerequisicioncompraDestino,detallerequisicioncompraLogic.getDetalleRequisicionCompras());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallerequisicioncompraDestino,detallerequisicioncompras);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
				
				//this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(this.getIndiceNuevoDetalleRequisicionCompra(), this.getIndiceNuevoDetalleRequisicionCompra());
				
				int iLastRow =  this.jTableDatosDetalleRequisicionCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleRequisicionCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleRequisicionCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesDetalleRequisicionCompra.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasDetalleRequisicionCompra.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesDetalleRequisicionCompra.setVisible(!isVisible);
			this.jPanelPaginacionDetalleRequisicionCompra.setVisible(!isVisible);
			this.jPanelAccionesDetalleRequisicionCompra.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameDetalleRequisicionCompra();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoDetalleRequisicionCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionDetalleRequisicionCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirTotalesDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.abrirInicializarFrameTotalesDetalleRequisicionCompra();
			
			this.abrirFrameTotalesDetalleRequisicionCompra();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarTotalesDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.cerrarFrameTotalesDetalleRequisicionCompra();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirOrderByDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByDetalleRequisicionCompra();
			
			this.abrirFrameOrderByDetalleRequisicionCompra();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByDetalleRequisicionCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleDetalleRequisicionCompra(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleRequisicionCompra);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.isMaximum()) {
					this.jInternalFrameDetalleFormDetalleRequisicionCompra.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormDetalleRequisicionCompra.setSize(this.jInternalFrameDetalleFormDetalleRequisicionCompra.iWidthFormulario,this.jInternalFrameDetalleFormDetalleRequisicionCompra.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormDetalleRequisicionCompra.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormDetalleRequisicionCompra.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormDetalleRequisicionCompra.isMaximum()) {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jContentPaneDetalleDetalleRequisicionCompra.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTabbedPaneRelacionesDetalleRequisicionCompra.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jContentPaneDetalleDetalleRequisicionCompra.getWidth(),DetalleRequisicionCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTabbedPaneRelacionesDetalleRequisicionCompra.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jContentPaneDetalleDetalleRequisicionCompra.getWidth(),DetalleRequisicionCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTabbedPaneRelacionesDetalleRequisicionCompra.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jContentPaneDetalleDetalleRequisicionCompra.getWidth(),DetalleRequisicionCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormDetalleRequisicionCompra.setVisible(true);
	        this.jInternalFrameDetalleFormDetalleRequisicionCompra.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByDetalleRequisicionCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByDetalleRequisicionCompra==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByDetalleRequisicionCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleRequisicionCompra,false,this);
				} else {
					this.jInternalFrameOrderByDetalleRequisicionCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleRequisicionCompra,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByDetalleRequisicionCompra);
				this.jInternalFrameOrderByDetalleRequisicionCompra.setVisible(false);
				this.jInternalFrameOrderByDetalleRequisicionCompra.setSelected(false);
				
				this.jInternalFrameOrderByDetalleRequisicionCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleRequisicionCompra"));
				
				this.inicializarActualizarBindingTablaOrderByDetalleRequisicionCompra();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionDetalleRequisicionCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionDetalleRequisicionCompra==null) {
				
				this.jInternalFrameImportacionDetalleRequisicionCompra=new ImportacionJInternalFrame(DetalleRequisicionCompraConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleRequisicionCompra);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionDetalleRequisicionCompra);
				this.jInternalFrameImportacionDetalleRequisicionCompra.setVisible(false);
				this.jInternalFrameImportacionDetalleRequisicionCompra.setSelected(false);


				this.jInternalFrameImportacionDetalleRequisicionCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleRequisicionCompra"));
				this.jInternalFrameImportacionDetalleRequisicionCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleRequisicionCompra"));
				this.jInternalFrameImportacionDetalleRequisicionCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleRequisicionCompra"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoDetalleRequisicionCompra() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra==null) {
				this.jInternalFrameReporteDinamicoDetalleRequisicionCompra=new ReporteDinamicoJInternalFrame(DetalleRequisicionCompraConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleRequisicionCompra);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra);
				this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.setVisible(false);
				this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleRequisicionCompra"));
				this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleRequisicionCompra"));
				this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleRequisicionCompra"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleRequisicionCompra();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	public void abrirInicializarFrameTotalesDetalleRequisicionCompra() throws Exception {	    	        
	    try {			
			if(this.jInternalFrameTotalesDetalleRequisicionCompra==null) {
				this.jInternalFrameTotalesDetalleRequisicionCompra=new TotalesJInternalFrame(this.jButtonAbrirTotalesDetalleRequisicionCompra,STIPO_TAMANIO_GENERAL,this);
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetalleRequisicionCompra);

				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetalleRequisicionCompra);
				this.jInternalFrameTotalesDetalleRequisicionCompra.setVisible(false);
				this.jInternalFrameTotalesDetalleRequisicionCompra.setSelected(false);


				this.jInternalFrameTotalesDetalleRequisicionCompra.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetalleRequisicionCompra"));
								
				this.inicializarActualizarBindingTablaTotalesDetalleRequisicionCompra();
				
				this.redimensionarTablaTotales();
			}			
		} catch (final Exception e) {
			
		}
	}	
	
		
					
	public void cerrarFrameDetalleDetalleRequisicionCompra() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleRequisicionCompra);
			
	       	this.jInternalFrameDetalleFormDetalleRequisicionCompra.setVisible(false);
	        this.jInternalFrameDetalleFormDetalleRequisicionCompra.setSelected(false);
			
			//this.jInternalFrameDetalleFormDetalleRequisicionCompra.dispose();
			//this.jInternalFrameDetalleFormDetalleRequisicionCompra=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoDetalleRequisicionCompra() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.setVisible(true);
	        this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionDetalleRequisicionCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionDetalleRequisicionCompra.setVisible(true);
	        this.jInternalFrameImportacionDetalleRequisicionCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	public void abrirFrameTotalesDetalleRequisicionCompra() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetalleRequisicionCompra.setVisible(true);
	        this.jInternalFrameTotalesDetalleRequisicionCompra.setSelected(true);
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	public void cerrarFrameTotalesDetalleRequisicionCompra() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetalleRequisicionCompra.setVisible(false);
	        this.jInternalFrameTotalesDetalleRequisicionCompra.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	
	public void abrirFrameOrderByDetalleRequisicionCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByDetalleRequisicionCompra.setVisible(true);
	        this.jInternalFrameOrderByDetalleRequisicionCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByDetalleRequisicionCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByDetalleRequisicionCompra.setVisible(false);
	        this.jInternalFrameOrderByDetalleRequisicionCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoDetalleRequisicionCompra() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.setVisible(false);
	        this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionDetalleRequisicionCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionDetalleRequisicionCompra.setVisible(false);
	        this.jInternalFrameImportacionDetalleRequisicionCompra.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCentroCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCentroCosto);
						CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.sTipoBusqueda="CentroCosto";
						}

						centrocostoBeanSwingJInternalFrame.getTodosCentroCostoArbol();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setCentroCostos(centrocostoBeanSwingJInternalFrame.centrocostosArbol);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.CargarTreeCentroCosto();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setVisible(true);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.jInternalFrameParent=this;
						TitledBorder titledBorderDetalleRequisicionCompra=(TitledBorder)this.jScrollPanelDatosDetalleRequisicionCompra.getBorder();
						TitledBorder titledBorderCentroCosto=(TitledBorder)centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

						titledBorderCentroCosto.setTitle(titledBorderDetalleRequisicionCompra.getTitle() + " -> Centro Costo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(centrocostoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCentroCosto(CentroCostoBeanSwingJInternalFrame jInternalFrameTreeCentroCosto) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCentroCosto);
						jInternalFrameTreeCentroCosto.setVisible(false);
						jInternalFrameTreeCentroCosto.setSelected(false);
						//jInternalFrameTreeCentroCosto.dispose();
						//jInternalFrameTreeCentroCosto=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarDetalleRequisicionCompra(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarDetalleRequisicionCompra(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesDetalleRequisicionCompra(true);
			//this.isEsNuevoDetalleRequisicionCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesDetalleRequisicionCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleRequisicionCompra(false) ;
			
			if(detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(DetalleRequisicionCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleRequisicionCompra(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleRequisicionCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaDetalleRequisicionCompraActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarDetalleRequisicionCompra(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesDetalleRequisicionCompra(true);
			//this.isEsNuevoDetalleRequisicionCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.detallerequisicioncompra.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesDetalleRequisicionCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesDetalleRequisicionCompra(false) ;
			
			if(DetalleRequisicionCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleRequisicionCompra(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleRequisicionCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Producto")) {
				if(!this.detallerequisicioncompraConstantesFunciones.cargarid_productoDetalleRequisicionCompra) {
					this.cargarCombosProductosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
					this.cargarCombosFrameProductosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_producto (id);

				this.recargarComboTablaProducto(this.productosForeignKey);

			}
			
			if(sType.equals("CentroCosto")) {
				if(!this.detallerequisicioncompraConstantesFunciones.cargarid_centro_costoDetalleRequisicionCompra) {
					this.cargarCombosCentroCostosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_centro_costo (id);

				this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	
	
	public void recargarComboTablaRequisicionCompra(List<RequisicionCompra> requisicioncomprasForeignKey)throws Exception{
		TableColumn tableColumnRequisicionCompra=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDREQUISICIONCOMPRA));
		TableCellEditor tableCellEditorRequisicionCompra =tableColumnRequisicionCompra.getCellEditor();

		RequisicionCompraTableCell requisicioncompraTableCellFk=(RequisicionCompraTableCell)tableCellEditorRequisicionCompra;

		if(requisicioncompraTableCellFk!=null) {
			requisicioncompraTableCellFk.setrequisicioncomprasForeignKey(requisicioncomprasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//requisicioncompraTableCellFk.setRowActual(intSelectedRow);
			//requisicioncompraTableCellFk.setrequisicioncomprasForeignKeyActual(requisicioncomprasForeignKey);
		//}


		if(requisicioncompraTableCellFk!=null) {
			requisicioncompraTableCellFk.RecargarRequisicionComprasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
					
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBodega(List<Bodega> bodegasForeignKey)throws Exception{
		TableColumn tableColumnBodega=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDBODEGA));
		TableCellEditor tableCellEditorBodega =tableColumnBodega.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodega;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegasForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaProducto(List<Producto> productosForeignKey)throws Exception{
		TableColumn tableColumnProducto=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDPRODUCTO));
		TableCellEditor tableCellEditorProducto =tableColumnProducto.getCellEditor();

		ProductoTableCell productoTableCellFk=(ProductoTableCell)tableCellEditorProducto;

		if(productoTableCellFk!=null) {
			productoTableCellFk.setproductosForeignKey(productosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//productoTableCellFk.setRowActual(intSelectedRow);
			//productoTableCellFk.setproductosForeignKeyActual(productosForeignKey);
		//}


		if(productoTableCellFk!=null) {
			productoTableCellFk.RecargarProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaUnidad(List<Unidad> unidadsForeignKey)throws Exception{
		TableColumn tableColumnUnidad=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDUNIDAD));
		TableCellEditor tableCellEditorUnidad =tableColumnUnidad.getCellEditor();

		UnidadTableCell unidadTableCellFk=(UnidadTableCell)tableCellEditorUnidad;

		if(unidadTableCellFk!=null) {
			unidadTableCellFk.setunidadsForeignKey(unidadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//unidadTableCellFk.setRowActual(intSelectedRow);
			//unidadTableCellFk.setunidadsForeignKeyActual(unidadsForeignKey);
		//}


		if(unidadTableCellFk!=null) {
			unidadTableCellFk.RecargarUnidadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroCosto(List<CentroCosto> centrocostosForeignKey)throws Exception{
		TableColumn tableColumnCentroCosto=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDCENTROCOSTO));
		TableCellEditor tableCellEditorCentroCosto =tableColumnCentroCosto.getCellEditor();

		CentroCostoTableCell centrocostoTableCellFk=(CentroCostoTableCell)tableCellEditorCentroCosto;

		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.setcentrocostosForeignKey(centrocostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centrocostoTableCellFk.setRowActual(intSelectedRow);
			//centrocostoTableCellFk.setcentrocostosForeignKeyActual(centrocostosForeignKey);
		//}


		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.RecargarCentroCostosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_producto (Long id) throws Exception {
		this.setActualProductoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_centro_costo (Long id) throws Exception {
		this.setActualCentroCostoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesDetalleRequisicionCompra(false);
			
			//if(!this.isEsNuevoDetalleRequisicionCompra) {								
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				
			}
			
			if(this.permiteMantenimiento(this.detallerequisicioncompra)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoDetalleRequisicionCompra=true;
					this.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
					this.isEsNuevoDetalleRequisicionCompra=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoDetalleRequisicionCompra=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoDetalleRequisicionCompra=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleRequisicionCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleRequisicionCompra(false);
				
				this.habilitarDeshabilitarControlesDetalleRequisicionCompra(false);
			
												
				
				if(DetalleRequisicionCompraJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleDetalleRequisicionCompra();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,detallerequisicioncompraSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualDetalleRequisicionCompra(this.detallerequisicioncompra,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,detallerequisicioncompraSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.detallerequisicioncompra.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(DetalleRequisicionCompra.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleRequisicionCompra.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				this.detallerequisicioncompra.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				this.detallerequisicioncompra.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.detallerequisicioncompra)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((DetalleRequisicionCompraModel) this.jTableDatosDetalleRequisicionCompra.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoDetalleRequisicionCompra=true;
				this.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
				this.isEsNuevoDetalleRequisicionCompra=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleRequisicionCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleRequisicionCompra(false);
				
				this.habilitarDeshabilitarControlesDetalleRequisicionCompra(false);
				
				
				
				if(DetalleRequisicionCompraJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleDetalleRequisicionCompra();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosDetalleRequisicionCompra.getRowCount()>=1) {
				jTableDatosDetalleRequisicionCompra.removeRowSelectionInterval(0, jTableDatosDetalleRequisicionCompra.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesDetalleRequisicionCompra(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleRequisicionCompra(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleRequisicionCompra(false) ;
			
			this.isEsNuevoDetalleRequisicionCompra=false;
			
			if(DetalleRequisicionCompraJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleDetalleRequisicionCompra();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				
				//SI ES MANUAL
				if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualDetalleRequisicionCompra();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoDetalleRequisicionCompra--;			
			//DetalleRequisicionCompra detallerequisicioncompraAux= new DetalleRequisicionCompra();			
			//detallerequisicioncompraAux.setId(this.iIdNuevoDetalleRequisicionCompra);
			
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaDetalleRequisicionCompra();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
			
			this.detallerequisicioncompra.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().add(this.detallerequisicioncompraAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.detallerequisicioncompras.add(this.detallerequisicioncompraAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
			
			this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(this.getIndiceNuevoDetalleRequisicionCompra(), this.getIndiceNuevoDetalleRequisicionCompra());
			
			int iLastRow =  this.jTableDatosDetalleRequisicionCompra.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosDetalleRequisicionCompra.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosDetalleRequisicionCompra.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleRequisicionCompra(false);
			
			//SI ES MANUAL
			if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleRequisicionCompra();
			}
			
			//this.abrirFrameTreeDetalleRequisicionCompra();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Detalle Requisicion CompraS ?", "MANTENIMIENTO DE Detalle Requisicion Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionDetalleRequisicionCompra.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralDetalleRequisicionCompra();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.detallerequisicioncompraReturnGeneral=detallerequisicioncompraLogic.procesarImportacionDetalleRequisicionComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.detallerequisicioncompraParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarDetalleRequisicionCompraReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionDetalleRequisicionCompra.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionDetalleRequisicionCompra.setFileImportacion(this.jInternalFrameImportacionDetalleRequisicionCompra.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionDetalleRequisicionCompra.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionDetalleRequisicionCompra.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionDetalleRequisicionCompra.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionDetalleRequisicionCompra.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<DetalleRequisicionCompra> detallerequisicioncomprasSeleccionados=new ArrayList<DetalleRequisicionCompra>();		

		detallerequisicioncomprasSeleccionados=this.getDetalleRequisicionComprasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("DetalleRequisicionCompraBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"DetalleRequisicionCompraBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteDetalleRequisicionCompras("Todos",detallerequisicioncomprasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDREQUISICIONCOMPRA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_RequisicionCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_RequisicionCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_RequisicionCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_RequisicionCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDBODEGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Bodega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Bodega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Bodega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Bodega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Producto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Producto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Producto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Producto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDUNIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Unidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Unidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Unidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Unidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDCENTROCOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadRequisicion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadRequisicion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadRequisicion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadRequisicion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOUNITARIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_stoUnitario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_stoUnitario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_stoUnitario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_stoUnitario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOTOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_stoTotal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_stoTotal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_stoTotal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_stoTotal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadEntregada_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadEntregada_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadEntregada_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadEntregada_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadPendiente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadPendiente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadPendiente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadPendiente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDREQUISICIONCOMPRA:
					sNombreCampoCategoria="id_requisicion_compra";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoria="id_bodega";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoria="id_producto";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoria="id_unidad";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoria="id_centro_costo";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION:
					sNombreCampoCategoria="cantidad_requisicion";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOUNITARIO:
					sNombreCampoCategoria="costo_unitario";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOTOTAL:
					sNombreCampoCategoria="costo_total";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA:
					sNombreCampoCategoria="cantidad_entregada";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE:
					sNombreCampoCategoria="cantidad_pendiente";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDREQUISICIONCOMPRA:
					sNombreCampoCategoriaValor="id_requisicion_compra";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoriaValor="id_bodega";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoriaValor="id_producto";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoriaValor="id_unidad";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoriaValor="id_centro_costo";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION:
					sNombreCampoCategoriaValor="cantidad_requisicion";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOUNITARIO:
					sNombreCampoCategoriaValor="costo_unitario";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOTOTAL:
					sNombreCampoCategoriaValor="costo_total";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA:
					sNombreCampoCategoriaValor="cantidad_entregada";
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE:
					sNombreCampoCategoriaValor="cantidad_pendiente";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDREQUISICIONCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Requisicion Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_requisicion_compra");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDBODEGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_producto");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDUNIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Unidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_unidad");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_costo");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Requisicion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_requisicion");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOUNITARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo Unitario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo_unitario");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOTOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo_total");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Entregada",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_entregada");
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Pendiente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_pendiente");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<DetalleRequisicionCompra> detallerequisicioncomprasSeleccionados=new ArrayList<DetalleRequisicionCompra>();		
		
		detallerequisicioncomprasSeleccionados=this.getDetalleRequisicionComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallerequisicioncompra";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("DetalleRequisicionCompras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDREQUISICIONCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDREQUISICIONCOMPRA);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getrequisicioncompra_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDBODEGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDBODEGA);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getbodega_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDPRODUCTO);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDUNIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDUNIDAD);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getunidad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_IDCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDCENTROCOSTO);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getcentrocosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getcantidad_requisicion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOUNITARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOUNITARIO);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getcosto_unitario());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOTOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOTOTAL);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getcosto_total());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getcantidad_entregada());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE);
					iRow++;

					for(DetalleRequisicionCompra detallerequisicioncompra:detallerequisicioncomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallerequisicioncompra.getcantidad_pendiente());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelDetalleRequisicionCompra(row);				
			//	iRow++;
			//}				
			
			//for(DetalleRequisicionCompra detallerequisicioncompraAux:detallerequisicioncomprasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelDetalleRequisicionCompra(detallerequisicioncompraAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleRequisicionCompra(false);
			
			//SI ES MANUAL
			if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleRequisicionCompra();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleRequisicionCompra(false);
			
			//SI ES MANUAL
			if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleRequisicionCompra();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleRequisicionCompra(false);
			
			//SI ES MANUAL
			if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleRequisicionCompra();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaDetalleRequisicionCompra() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosDetalleRequisicionCompra.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosDetalleRequisicionCompra.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosDetalleRequisicionCompra.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosDetalleRequisicionCompra.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosDetalleRequisicionCompra.setMinimumSize(dimensionMinimum);
		this.jTableDatosDetalleRequisicionCompra.setMaximumSize(dimensionMaximum);
		this.jTableDatosDetalleRequisicionCompra.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingDetalleRequisicionCompra(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingDetalleRequisicionCompra(esInicializar,true);
	}
	
	public void inicializarActualizarBindingDetalleRequisicionCompra(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaDetalleRequisicionCompra(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesDetalleRequisicionCompra(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasDetalleRequisicionCompra(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleRequisicionCompra(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesDetalleRequisicionCompra(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualDetalleRequisicionCompra() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaDetalleRequisicionCompra();
		
		this.inicializarActualizarBindingBotonesManualDetalleRequisicionCompra(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualDetalleRequisicionCompra();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleRequisicionCompra() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleRequisicionCompra(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleRequisicionCompra(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosDetalleRequisicionCompra.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosDetalleRequisicionCompra.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteDetalleRequisicionCompra.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jCheckBoxPostAccionNuevoDetalleRequisicionCompra.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jCheckBoxPostAccionSinCerrarDetalleRequisicionCompra.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jCheckBoxPostAccionSinMensajeDetalleRequisicionCompra.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosDetalleRequisicionCompra.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosDetalleRequisicionCompra.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteDetalleRequisicionCompra.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jCheckBoxPostAccionNuevoDetalleRequisicionCompra.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jCheckBoxPostAccionSinCerrarDetalleRequisicionCompra.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jCheckBoxPostAccionSinMensajeDetalleRequisicionCompra.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionDetalleRequisicionCompra.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionDetalleRequisicionCompra.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxTiposAccionesFormularioDetalleRequisicionCompra.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesDetalleRequisicionCompra.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesDetalleRequisicionCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesDetalleRequisicionCompra.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarDetalleRequisicionCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesDetalleRequisicionCompra.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesDetalleRequisicionCompra.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralDetalleRequisicionCompra.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesDetalleRequisicionCompra(Boolean esInicializar) throws Exception {
		try	{	
			if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleRequisicionCompra(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesDetalleRequisicionCompra() throws Exception {
		try	{
			if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleRequisicionCompra();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleRequisicionCompra() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxTiposAccionesFormularioDetalleRequisicionCompra.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxTiposAccionesFormularioDetalleRequisicionCompra.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleRequisicionCompra() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesDetalleRequisicionCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesDetalleRequisicionCompra.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesDetalleRequisicionCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesDetalleRequisicionCompra.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesDetalleRequisicionCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesDetalleRequisicionCompra.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionDetalleRequisicionCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionDetalleRequisicionCompra.addItem(reporte);
			}
			
			
			if(!this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionDetalleRequisicionCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionDetalleRequisicionCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesDetalleRequisicionCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesDetalleRequisicionCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesDetalleRequisicionCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesDetalleRequisicionCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxTiposAccionesFormularioDetalleRequisicionCompra.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxTiposAccionesFormularioDetalleRequisicionCompra.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarDetalleRequisicionCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarDetalleRequisicionCompra.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarDetalleRequisicionCompra.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleRequisicionCompra();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleRequisicionCompra() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra!=null) {
				this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra!=null) {
				this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra!=null) {
				
				if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=DetalleRequisicionCompraConstantesFunciones.getTiposSeleccionarDetalleRequisicionCompra(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=DetalleRequisicionCompraConstantesFunciones.getTiposSeleccionarDetalleRequisicionCompra(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=DetalleRequisicionCompraConstantesFunciones.getTiposSeleccionarDetalleRequisicionCompra(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualDetalleRequisicionCompra()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra.getSelectedItem()!=null){this.id_bodegaFK_IdBodega=((Bodega)this.jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleRequisicionCompra.getSelectedItem()!=null){this.id_centro_costoFK_IdCentroCosto=((CentroCosto)this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleRequisicionCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra.getSelectedItem()!=null){this.id_productoFK_IdProducto=((Producto)this.jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_requisicion_compraFK_IdRequisicionCompraDetalleRequisicionCompra.getSelectedItem()!=null){this.id_requisicion_compraFK_IdRequisicionCompra=((RequisicionCompra)this.jComboBoxid_requisicion_compraFK_IdRequisicionCompraDetalleRequisicionCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_unidadFK_IdUnidadDetalleRequisicionCompra.getSelectedItem()!=null){this.id_unidadFK_IdUnidad=((Unidad)this.jComboBoxid_unidadFK_IdUnidadDetalleRequisicionCompra.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasDetalleRequisicionCompra(Boolean esInicializar) throws Exception {				
		if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualDetalleRequisicionCompra();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaDetalleRequisicionCompra() throws Exception {
		this.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByDetalleRequisicionCompra() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByDetalleRequisicionCompra.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByDetalleRequisicionCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleRequisicionCompra.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByDetalleRequisicionCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleRequisicionCompra.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosDetalleRequisicionCompraOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompraOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByDetalleRequisicionCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleRequisicionCompra.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByDetalleRequisicionCompra.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	public void inicializarActualizarBindingTablaTotalesDetalleRequisicionCompra() {		
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		
		//TABLA TOTALES
		this.jInternalFrameTotalesDetalleRequisicionCompra.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
		//DEFINIR RENDERERS TOTALES
		tableColumn=this.jInternalFrameTotalesDetalleRequisicionCompra.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleRequisicionCompra.getjTableDatosTotales(),Constantes2.S_TIPO));			
		//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
				
				
		tableColumn=this.jInternalFrameTotalesDetalleRequisicionCompra.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleRequisicionCompra.getjTableDatosTotales(),Constantes2.S_TOTAL));
		//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());		
	}
	
	public void inicializarActualizarBindingTablaDetalleRequisicionCompra(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=detallerequisicioncompraLogic.getDetalleRequisicionCompras().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=detallerequisicioncompras.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosDetalleRequisicionCompra.setModel(new DetalleRequisicionCompraModel(this.detallerequisicioncompraLogic.getDetalleRequisicionCompras(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosDetalleRequisicionCompra.setModel(new DetalleRequisicionCompraModel(this.detallerequisicioncompras,this));
			}
			//ARCHITECTURE
			
			if(this.jInternalFrameTotalesDetalleRequisicionCompra!=null) {
				//TABLA TOTALES
				this.jInternalFrameTotalesDetalleRequisicionCompra.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
				//DEFINIR RENDERERS TOTALES
				tableColumn=this.jInternalFrameTotalesDetalleRequisicionCompra.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleRequisicionCompra.getjTableDatosTotales(),Constantes2.S_TIPO));			
				//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
				
				
				tableColumn=this.jInternalFrameTotalesDetalleRequisicionCompra.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleRequisicionCompra.getjTableDatosTotales(),Constantes2.S_TOTAL));
				//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
			}
							
			
			
			if(this.jInternalFrameOrderByDetalleRequisicionCompra!=null && this.jInternalFrameOrderByDetalleRequisicionCompra.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByDetalleRequisicionCompra();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+DetalleRequisicionCompraConstantesFunciones.SCLASSWEBTITULO,detallerequisicioncompraConstantesFunciones.resaltarSeleccionarDetalleRequisicionCompra,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+DetalleRequisicionCompraConstantesFunciones.SCLASSWEBTITULO,detallerequisicioncompraConstantesFunciones.resaltarSeleccionarDetalleRequisicionCompra,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_ID));

		if(this.detallerequisicioncompraConstantesFunciones.mostraridDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallerequisicioncompraConstantesFunciones.resaltaridDetalleRequisicionCompra,this.detallerequisicioncompraConstantesFunciones.activaridDetalleRequisicionCompra,iSizeTabla,this,true,"idDetalleRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallerequisicioncompraConstantesFunciones.resaltaridDetalleRequisicionCompra,this.detallerequisicioncompraConstantesFunciones.activaridDetalleRequisicionCompra,this,true,"idDetalleRequisicionCompra","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDREQUISICIONCOMPRA));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarid_requisicion_compraDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_IDREQUISICIONCOMPRA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new RequisicionCompraTableCell(this.requisicioncomprasForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_requisicion_compraDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_requisicion_compraDetalleRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new RequisicionCompraTableCell(this.requisicioncomprasForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_requisicion_compraDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_requisicion_compraDetalleRequisicionCompra,true,"id_requisicion_compraDetalleRequisicionCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDEMPRESA));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarid_empresaDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_empresaDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_empresaDetalleRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_empresaDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_empresaDetalleRequisicionCompra,false,"id_empresaDetalleRequisicionCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarid_sucursalDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_sucursalDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_sucursalDetalleRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_sucursalDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_sucursalDetalleRequisicionCompra,false,"id_sucursalDetalleRequisicionCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarid_ejercicioDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_ejercicioDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_ejercicioDetalleRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_ejercicioDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_ejercicioDetalleRequisicionCompra,false,"id_ejercicioDetalleRequisicionCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDPERIODO));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarid_periodoDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_periodoDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_periodoDetalleRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_periodoDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_periodoDetalleRequisicionCompra,false,"id_periodoDetalleRequisicionCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDANIO));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarid_anioDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_anioDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_anioDetalleRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_anioDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_anioDetalleRequisicionCompra,true,"id_anioDetalleRequisicionCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDMES));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarid_mesDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_mesDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_mesDetalleRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_mesDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_mesDetalleRequisicionCompra,true,"id_mesDetalleRequisicionCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDBODEGA));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarid_bodegaDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_IDBODEGA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegasForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_bodegaDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_bodegaDetalleRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegasForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_bodegaDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_bodegaDetalleRequisicionCompra,true,"id_bodegaDetalleRequisicionCompra","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDPRODUCTO));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarid_productoDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_IDPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ProductoTableCell(this.productosForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_productoDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_productoDetalleRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new ProductoTableCell(this.productosForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_productoDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_productoDetalleRequisicionCompra,true,"id_productoDetalleRequisicionCompra","CON_BUSQUEDA-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDUNIDAD));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarid_unidadDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_IDUNIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new UnidadTableCell(this.unidadsForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_unidadDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_unidadDetalleRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new UnidadTableCell(this.unidadsForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_unidadDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_unidadDetalleRequisicionCompra,true,"id_unidadDetalleRequisicionCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_IDCENTROCOSTO));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarid_centro_costoDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_IDCENTROCOSTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CentroCostoTableCell(this.centrocostosForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_centro_costoDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_centro_costoDetalleRequisicionCompra,iSizeTabla));
			tableColumn.setCellEditor(new CentroCostoTableCell(this.centrocostosForeignKey,this.detallerequisicioncompraConstantesFunciones.resaltarid_centro_costoDetalleRequisicionCompra,this,this.detallerequisicioncompraConstantesFunciones.activarid_centro_costoDetalleRequisicionCompra,true,"id_centro_costoDetalleRequisicionCompra","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarcantidad_requisicionDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallerequisicioncompraConstantesFunciones.resaltarcantidad_requisicionDetalleRequisicionCompra,this.detallerequisicioncompraConstantesFunciones.activarcantidad_requisicionDetalleRequisicionCompra,iSizeTabla,this,true,"cantidad_requisicionDetalleRequisicionCompra","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallerequisicioncompraConstantesFunciones.resaltarcantidad_requisicionDetalleRequisicionCompra,this.detallerequisicioncompraConstantesFunciones.activarcantidad_requisicionDetalleRequisicionCompra,this,true,"cantidad_requisicionDetalleRequisicionCompra","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOUNITARIO));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarcosto_unitarioDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOUNITARIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallerequisicioncompraConstantesFunciones.resaltarcosto_unitarioDetalleRequisicionCompra,this.detallerequisicioncompraConstantesFunciones.activarcosto_unitarioDetalleRequisicionCompra,iSizeTabla,this,true,"costo_unitarioDetalleRequisicionCompra","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallerequisicioncompraConstantesFunciones.resaltarcosto_unitarioDetalleRequisicionCompra,this.detallerequisicioncompraConstantesFunciones.activarcosto_unitarioDetalleRequisicionCompra,this,true,"costo_unitarioDetalleRequisicionCompra","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOTOTAL));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarcosto_totalDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOTOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallerequisicioncompraConstantesFunciones.resaltarcosto_totalDetalleRequisicionCompra,this.detallerequisicioncompraConstantesFunciones.activarcosto_totalDetalleRequisicionCompra,iSizeTabla,this,true,"costo_totalDetalleRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallerequisicioncompraConstantesFunciones.resaltarcosto_totalDetalleRequisicionCompra,this.detallerequisicioncompraConstantesFunciones.activarcosto_totalDetalleRequisicionCompra,this,true,"costo_totalDetalleRequisicionCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION));

		if(this.detallerequisicioncompraConstantesFunciones.mostrardescripcionDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detallerequisicioncompraConstantesFunciones.resaltardescripcionDetalleRequisicionCompra,this.detallerequisicioncompraConstantesFunciones.activardescripcionDetalleRequisicionCompra,iSizeTabla,this,true,"descripcionDetalleRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallerequisicioncompraConstantesFunciones.resaltardescripcionDetalleRequisicionCompra,this.detallerequisicioncompraConstantesFunciones.activardescripcionDetalleRequisicionCompra,this,true,"descripcionDetalleRequisicionCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarcantidad_entregadaDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallerequisicioncompraConstantesFunciones.resaltarcantidad_entregadaDetalleRequisicionCompra,this.detallerequisicioncompraConstantesFunciones.activarcantidad_entregadaDetalleRequisicionCompra,iSizeTabla,this,true,"cantidad_entregadaDetalleRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallerequisicioncompraConstantesFunciones.resaltarcantidad_entregadaDetalleRequisicionCompra,this.detallerequisicioncompraConstantesFunciones.activarcantidad_entregadaDetalleRequisicionCompra,this,true,"cantidad_entregadaDetalleRequisicionCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE));

		if(this.detallerequisicioncompraConstantesFunciones.mostrarcantidad_pendienteDetalleRequisicionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallerequisicioncompraConstantesFunciones.resaltarcantidad_pendienteDetalleRequisicionCompra,this.detallerequisicioncompraConstantesFunciones.activarcantidad_pendienteDetalleRequisicionCompra,iSizeTabla,this,true,"cantidad_pendienteDetalleRequisicionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallerequisicioncompraConstantesFunciones.resaltarcantidad_pendienteDetalleRequisicionCompra,this.detallerequisicioncompraConstantesFunciones.activarcantidad_pendienteDetalleRequisicionCompra,this,true,"cantidad_pendienteDetalleRequisicionCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleRequisicionCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleRequisicionCompra.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleRequisicionCompra.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarDetalleRequisicionCompra && this.isPermisoGuardarCambiosDetalleRequisicionCompra) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosDetalleRequisicionCompra.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosDetalleRequisicionCompra.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleRequisicionCompra && this.isPermisoGuardarCambiosDetalleRequisicionCompra) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleRequisicionCompra && this.isPermisoGuardarCambiosDetalleRequisicionCompra) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosDetalleRequisicionCompra.moveColumn(this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosDetalleRequisicionCompra.moveColumn(this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosDetalleRequisicionCompra.moveColumn(this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosDetalleRequisicionCompra.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosDetalleRequisicionCompra.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosDetalleRequisicionCompra,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosDetalleRequisicionCompra.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosDetalleRequisicionCompra.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosDetalleRequisicionCompra.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=detallerequisicioncompraLogic.getDetalleRequisicionCompras().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=detallerequisicioncompras.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosDetalleRequisicionCompra.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosDetalleRequisicionCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosDetalleRequisicionCompra();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoDetalleRequisicionCompra=false;
					
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			
				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormDetalleRequisicionCompra==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleRequisicionCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleRequisicionCompra.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.detallerequisicioncompra.getsType().equals("DUPLICADO")
				   || this.detallerequisicioncompra.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoDetalleRequisicionCompra=true;
				
				} else {
					this.isEsNuevoDetalleRequisicionCompra=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
					if(this.detallerequisicioncompra.getId()>=0 && !this.detallerequisicioncompra.getIsNew()) {						
						this.isEsNuevoDetalleRequisicionCompra=false;
						
					} else {
						this.isEsNuevoDetalleRequisicionCompra=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoDetalleRequisicionCompra(esRelaciones);						
				
				this.seleccionarDetalleRequisicionCompra(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.detallerequisicioncompra.getId()<0) {
					this.isEsNuevoDetalleRequisicionCompra=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarDetalleRequisicionCompra(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarDetalleRequisicionCompra(evt,rowIndex);
				}	
				
				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion DetalleRequisicionCompra: " + this.dDif); 
					}
				}								
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarDetalleRequisicionCompra(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.detallerequisicioncompra)) {
					if(this.detallerequisicioncompra.getId()>0) {
						this.detallerequisicioncompra.setIsDeleted(true);
						
						this.detallerequisicioncomprasEliminados.add(this.detallerequisicioncompra);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().remove(this.detallerequisicioncompra);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompras.remove(this.detallerequisicioncompra);				
					}
					
					
					((DetalleRequisicionCompraModel) this.jTableDatosDetalleRequisicionCompra.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarDetalleRequisicionCompra(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoDetalleRequisicionCompra) {
			
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleRequisicionCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleRequisicionCompra.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioDetalleRequisicionCompra(this.detallerequisicioncompra);
				}
				
				//ARCHITECTURE
				try {
					

					//RequisicionCompra
					if(!this.detallerequisicioncompraConstantesFunciones.cargarid_requisicion_compraDetalleRequisicionCompra || this.detallerequisicioncompraConstantesFunciones.event_dependid_requisicion_compraDetalleRequisicionCompra) {
						//this.cargarCombosRequisicionComprasForeignKeyLista(" where id="+this.detallerequisicioncompra.getid_requisicion_compra());
									//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
						this.requisicioncomprasForeignKey=new ArrayList<RequisicionCompra>();

						if(detallerequisicioncompra.getRequisicionCompra()!=null) {
							this.requisicioncomprasForeignKey.add(detallerequisicioncompra.getRequisicionCompra());
						}

						this.addItemDefectoCombosForeignKeyRequisicionCompra();
						this.cargarCombosFrameRequisicionComprasForeignKey("Todos");
					}
					this.setActualRequisicionCompraForeignKey(this.detallerequisicioncompra.getid_requisicion_compra(),false,"Formulario");

					//Empresa
					if(!this.detallerequisicioncompraConstantesFunciones.cargarid_empresaDetalleRequisicionCompra || this.detallerequisicioncompraConstantesFunciones.event_dependid_empresaDetalleRequisicionCompra) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.detallerequisicioncompra.getid_empresa());
									//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(detallerequisicioncompra.getEmpresa()!=null) {
							this.empresasForeignKey.add(detallerequisicioncompra.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.detallerequisicioncompra.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.detallerequisicioncompraConstantesFunciones.cargarid_sucursalDetalleRequisicionCompra || this.detallerequisicioncompraConstantesFunciones.event_dependid_sucursalDetalleRequisicionCompra) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.detallerequisicioncompra.getid_sucursal());
									//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(detallerequisicioncompra.getSucursal()!=null) {
							this.sucursalsForeignKey.add(detallerequisicioncompra.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.detallerequisicioncompra.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.detallerequisicioncompraConstantesFunciones.cargarid_ejercicioDetalleRequisicionCompra || this.detallerequisicioncompraConstantesFunciones.event_dependid_ejercicioDetalleRequisicionCompra) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.detallerequisicioncompra.getid_ejercicio());
									//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(detallerequisicioncompra.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(detallerequisicioncompra.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.detallerequisicioncompra.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.detallerequisicioncompraConstantesFunciones.cargarid_periodoDetalleRequisicionCompra || this.detallerequisicioncompraConstantesFunciones.event_dependid_periodoDetalleRequisicionCompra) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.detallerequisicioncompra.getid_periodo());
									//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(detallerequisicioncompra.getPeriodo()!=null) {
							this.periodosForeignKey.add(detallerequisicioncompra.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.detallerequisicioncompra.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.detallerequisicioncompraConstantesFunciones.cargarid_anioDetalleRequisicionCompra || this.detallerequisicioncompraConstantesFunciones.event_dependid_anioDetalleRequisicionCompra) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.detallerequisicioncompra.getid_anio());
									//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(detallerequisicioncompra.getAnio()!=null) {
							this.aniosForeignKey.add(detallerequisicioncompra.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.detallerequisicioncompra.getid_anio(),false,"Formulario");

					//Mes
					if(!this.detallerequisicioncompraConstantesFunciones.cargarid_mesDetalleRequisicionCompra || this.detallerequisicioncompraConstantesFunciones.event_dependid_mesDetalleRequisicionCompra) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.detallerequisicioncompra.getid_mes());
									//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(detallerequisicioncompra.getMes()!=null) {
							this.messForeignKey.add(detallerequisicioncompra.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.detallerequisicioncompra.getid_mes(),false,"Formulario");

					//Bodega
					if(!this.detallerequisicioncompraConstantesFunciones.cargarid_bodegaDetalleRequisicionCompra || this.detallerequisicioncompraConstantesFunciones.event_dependid_bodegaDetalleRequisicionCompra) {
						//this.cargarCombosBodegasForeignKeyLista(" where id="+this.detallerequisicioncompra.getid_bodega());
									//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
						this.bodegasForeignKey=new ArrayList<Bodega>();

						if(detallerequisicioncompra.getBodega()!=null) {
							this.bodegasForeignKey.add(detallerequisicioncompra.getBodega());
						}

						this.addItemDefectoCombosForeignKeyBodega();
						this.cargarCombosFrameBodegasForeignKey("Todos");
					}
					this.setActualBodegaForeignKey(this.detallerequisicioncompra.getid_bodega(),false,"Formulario");

					//Producto
					if(!this.detallerequisicioncompraConstantesFunciones.cargarid_productoDetalleRequisicionCompra || this.detallerequisicioncompraConstantesFunciones.event_dependid_productoDetalleRequisicionCompra) {
						//this.cargarCombosProductosForeignKeyLista(" where id="+this.detallerequisicioncompra.getid_producto());
									//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
						this.productosForeignKey=new ArrayList<Producto>();

						if(detallerequisicioncompra.getProducto()!=null) {
							this.productosForeignKey.add(detallerequisicioncompra.getProducto());
						}

						this.addItemDefectoCombosForeignKeyProducto();
						this.cargarCombosFrameProductosForeignKey("Todos");
					}
					this.setActualProductoForeignKey(this.detallerequisicioncompra.getid_producto(),false,"Formulario");

					//Unidad
					if(!this.detallerequisicioncompraConstantesFunciones.cargarid_unidadDetalleRequisicionCompra || this.detallerequisicioncompraConstantesFunciones.event_dependid_unidadDetalleRequisicionCompra) {
						//this.cargarCombosUnidadsForeignKeyLista(" where id="+this.detallerequisicioncompra.getid_unidad());
									//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
						this.unidadsForeignKey=new ArrayList<Unidad>();

						if(detallerequisicioncompra.getUnidad()!=null) {
							this.unidadsForeignKey.add(detallerequisicioncompra.getUnidad());
						}

						this.addItemDefectoCombosForeignKeyUnidad();
						this.cargarCombosFrameUnidadsForeignKey("Todos");
					}
					this.setActualUnidadForeignKey(this.detallerequisicioncompra.getid_unidad(),false,"Formulario");

					//CentroCosto
					if(!this.detallerequisicioncompraConstantesFunciones.cargarid_centro_costoDetalleRequisicionCompra || this.detallerequisicioncompraConstantesFunciones.event_dependid_centro_costoDetalleRequisicionCompra) {
						//this.cargarCombosCentroCostosForeignKeyLista(" where id="+this.detallerequisicioncompra.getid_centro_costo());
									//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
						this.centrocostosForeignKey=new ArrayList<CentroCosto>();

						if(detallerequisicioncompra.getCentroCosto()!=null) {
							this.centrocostosForeignKey.add(detallerequisicioncompra.getCentroCosto());
						}

						this.addItemDefectoCombosForeignKeyCentroCosto();
						this.cargarCombosFrameCentroCostosForeignKey("Todos");
					}
					this.setActualCentroCostoForeignKey(this.detallerequisicioncompra.getid_centro_costo(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesDetalleRequisicionCompra("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesDetalleRequisicionCompra(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleRequisicionCompra() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoDetalleRequisicionCompra(detallerequisicioncompra,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioDetalleRequisicionCompra(detallerequisicioncompra);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyDetalleRequisicionCompra(detallerequisicioncompra,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyDetalleRequisicionCompra(detallerequisicioncompra);
	}
	
	public void setVariablesObjetoActualToFormularioDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelidDetalleRequisicionCompra.setText(detallerequisicioncompra.getId().toString());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_requisicionDetalleRequisicionCompra.setText(detallerequisicioncompra.getcantidad_requisicion().toString());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_unitarioDetalleRequisicionCompra.setText(detallerequisicioncompra.getcosto_unitario().toString());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_totalDetalleRequisicionCompra.setText(detallerequisicioncompra.getcosto_total().toString());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextAreadescripcionDetalleRequisicionCompra.setText(detallerequisicioncompra.getdescripcion());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_entregadaDetalleRequisicionCompra.setText(detallerequisicioncompra.getcantidad_entregada().toString());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_pendienteDetalleRequisicionCompra.setText(detallerequisicioncompra.getcantidad_pendiente().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,DetalleRequisicionCompra detallerequisicioncompraLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,detallerequisicioncompraLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,DetalleRequisicionCompra detallerequisicioncompraLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				detallerequisicioncompraLocal=this.detallerequisicioncompra;
			} else {
				detallerequisicioncompraLocal=this.detallerequisicioncompraAnterior;
			}
		}
		
		if(this.permiteMantenimiento(detallerequisicioncompraLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoDetalleRequisicionCompra(detallerequisicioncompraLocal,true);
					
					if(detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(detallerequisicioncompraLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(detallerequisicioncompraLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(detallerequisicioncompra,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(detallerequisicioncompra);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(detallerequisicioncompra,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelidDetalleRequisicionCompra.getText()==null || this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelidDetalleRequisicionCompra.getText()=="" || this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelidDetalleRequisicionCompra.getText()=="Id") {
				this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelidDetalleRequisicionCompra.setText("0");
			}

			if(conColumnasBase) {detallerequisicioncompra.setId(Long.parseLong(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelidDetalleRequisicionCompra.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleRequisicionCompraConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelIdDetalleRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallerequisicioncompra.setcantidad_requisicion(Integer.parseInt(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_requisicionDetalleRequisicionCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelcantidad_requisicionDetalleRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallerequisicioncompra.setcosto_unitario(Double.parseDouble(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_unitarioDetalleRequisicionCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOUNITARIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelcosto_unitarioDetalleRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallerequisicioncompra.setcosto_total(Double.parseDouble(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_totalDetalleRequisicionCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOTOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelcosto_totalDetalleRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallerequisicioncompra.setdescripcion(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextAreadescripcionDetalleRequisicionCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabeldescripcionDetalleRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallerequisicioncompra.setcantidad_entregada(Integer.parseInt(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_entregadaDetalleRequisicionCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelcantidad_entregadaDetalleRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallerequisicioncompra.setcantidad_pendiente(Integer.parseInt(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_pendienteDetalleRequisicionCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelcantidad_pendienteDetalleRequisicionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompraBean,DetalleRequisicionCompra detallerequisicioncompra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompraOrigen,DetalleRequisicionCompra detallerequisicioncompra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detallerequisicioncompraOrigen.getId()!=null && !detallerequisicioncompraOrigen.getId().equals(0L))) {detallerequisicioncompra.setId(detallerequisicioncompraOrigen.getId());}}
			if(conDefault || (!conDefault && detallerequisicioncompraOrigen.getcantidad_requisicion()!=null && !detallerequisicioncompraOrigen.getcantidad_requisicion().equals(0))) {detallerequisicioncompra.setcantidad_requisicion(detallerequisicioncompraOrigen.getcantidad_requisicion());}
			if(conDefault || (!conDefault && detallerequisicioncompraOrigen.getcosto_unitario()!=null && !detallerequisicioncompraOrigen.getcosto_unitario().equals(0.0))) {detallerequisicioncompra.setcosto_unitario(detallerequisicioncompraOrigen.getcosto_unitario());}
			if(conDefault || (!conDefault && detallerequisicioncompraOrigen.getcosto_total()!=null && !detallerequisicioncompraOrigen.getcosto_total().equals(0.0))) {detallerequisicioncompra.setcosto_total(detallerequisicioncompraOrigen.getcosto_total());}
			if(conDefault || (!conDefault && detallerequisicioncompraOrigen.getdescripcion()!=null && !detallerequisicioncompraOrigen.getdescripcion().equals(""))) {detallerequisicioncompra.setdescripcion(detallerequisicioncompraOrigen.getdescripcion());}
			if(conDefault || (!conDefault && detallerequisicioncompraOrigen.getcantidad_entregada()!=null && !detallerequisicioncompraOrigen.getcantidad_entregada().equals(0))) {detallerequisicioncompra.setcantidad_entregada(detallerequisicioncompraOrigen.getcantidad_entregada());}
			if(conDefault || (!conDefault && detallerequisicioncompraOrigen.getcantidad_pendiente()!=null && !detallerequisicioncompraOrigen.getcantidad_pendiente().equals(0))) {detallerequisicioncompra.setcantidad_pendiente(detallerequisicioncompraOrigen.getcantidad_pendiente());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelidDetalleRequisicionCompra.setText(detallerequisicioncompra.getId().toString());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_requisicionDetalleRequisicionCompra.setText(detallerequisicioncompra.getcantidad_requisicion().toString());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_unitarioDetalleRequisicionCompra.setText(detallerequisicioncompra.getcosto_unitario().toString());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_totalDetalleRequisicionCompra.setText(detallerequisicioncompra.getcosto_total().toString());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextAreadescripcionDetalleRequisicionCompra.setText(detallerequisicioncompra.getdescripcion());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_entregadaDetalleRequisicionCompra.setText(detallerequisicioncompra.getcantidad_entregada().toString());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_pendienteDetalleRequisicionCompra.setText(detallerequisicioncompra.getcantidad_pendiente().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleRequisicionCompra(DetalleRequisicionCompraBean detallerequisicioncompraBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelidDetalleRequisicionCompra.setText(detallerequisicioncompraBean.getId().toString());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_requisicionDetalleRequisicionCompra.setText(detallerequisicioncompraBean.getcantidad_requisicion().toString());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_unitarioDetalleRequisicionCompra.setText(detallerequisicioncompraBean.getcosto_unitario().toString());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_totalDetalleRequisicionCompra.setText(detallerequisicioncompraBean.getcosto_total().toString());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextAreadescripcionDetalleRequisicionCompra.setText(detallerequisicioncompraBean.getdescripcion());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_entregadaDetalleRequisicionCompra.setText(detallerequisicioncompraBean.getcantidad_entregada().toString());
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_pendienteDetalleRequisicionCompra.setText(detallerequisicioncompraBean.getcantidad_pendiente().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanDetalleRequisicionCompra(DetalleRequisicionCompraParameterReturnGeneral detallerequisicioncompraReturnGeneral,DetalleRequisicionCompraBean detallerequisicioncompraBean,Boolean conDefault) throws Exception { 
		try {
			DetalleRequisicionCompra detallerequisicioncompraLocal=new DetalleRequisicionCompra();
			
			detallerequisicioncompraLocal=detallerequisicioncompraReturnGeneral.getDetalleRequisicionCompra();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detallerequisicioncompraLocal.getId()!=null && !detallerequisicioncompraLocal.getId().equals(0L))) {detallerequisicioncompraBean.setId(detallerequisicioncompraLocal.getId());}}
			if(conDefault || (!conDefault && detallerequisicioncompraLocal.getcantidad_requisicion()!=null && !detallerequisicioncompraLocal.getcantidad_requisicion().equals(0))) {detallerequisicioncompraBean.setcantidad_requisicion(detallerequisicioncompraLocal.getcantidad_requisicion());}
			if(conDefault || (!conDefault && detallerequisicioncompraLocal.getcosto_unitario()!=null && !detallerequisicioncompraLocal.getcosto_unitario().equals(0.0))) {detallerequisicioncompraBean.setcosto_unitario(detallerequisicioncompraLocal.getcosto_unitario());}
			if(conDefault || (!conDefault && detallerequisicioncompraLocal.getcosto_total()!=null && !detallerequisicioncompraLocal.getcosto_total().equals(0.0))) {detallerequisicioncompraBean.setcosto_total(detallerequisicioncompraLocal.getcosto_total());}
			if(conDefault || (!conDefault && detallerequisicioncompraLocal.getdescripcion()!=null && !detallerequisicioncompraLocal.getdescripcion().equals(""))) {detallerequisicioncompraBean.setdescripcion(detallerequisicioncompraLocal.getdescripcion());}
			if(conDefault || (!conDefault && detallerequisicioncompraLocal.getcantidad_entregada()!=null && !detallerequisicioncompraLocal.getcantidad_entregada().equals(0))) {detallerequisicioncompraBean.setcantidad_entregada(detallerequisicioncompraLocal.getcantidad_entregada());}
			if(conDefault || (!conDefault && detallerequisicioncompraLocal.getcantidad_pendiente()!=null && !detallerequisicioncompraLocal.getcantidad_pendiente().equals(0))) {detallerequisicioncompraBean.setcantidad_pendiente(detallerequisicioncompraLocal.getcantidad_pendiente());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxDetalleRequisicionCompraGenerico(Long idDetalleRequisicionCompraSeleccionado,JComboBox jComboBoxDetalleRequisicionCompra,List<DetalleRequisicionCompra> detallerequisicioncomprasLocal)throws Exception {
		try {
			DetalleRequisicionCompra  detallerequisicioncompraTemp=null;

			for(DetalleRequisicionCompra detallerequisicioncompraAux:detallerequisicioncomprasLocal) {
				if(detallerequisicioncompraAux.getId()!=null && detallerequisicioncompraAux.getId().equals(idDetalleRequisicionCompraSeleccionado)) {
					detallerequisicioncompraTemp=detallerequisicioncompraAux;
					break;
				}
			}

			jComboBoxDetalleRequisicionCompra.setSelectedItem(detallerequisicioncompraTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxDetalleRequisicionCompraGenerico(JComboBox jComboBoxDetalleRequisicionCompra,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxDetalleRequisicionCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleRequisicionCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxDetalleRequisicionCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleRequisicionCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleRequisicionCompra.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxDetalleRequisicionCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleRequisicionCompra.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxDetalleRequisicionCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxDetalleRequisicionCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxDetalleRequisicionCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detallerequisicioncompra=(DetalleRequisicionCompra) detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detallerequisicioncompra =(DetalleRequisicionCompra) detallerequisicioncompras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("RequisicionCompra")) {
			//sDescripcion=this.getActualRequisicionCompraForeignKeyDescripcion((Long)value);
			if(!detallerequisicioncompra.getIsNew() && !detallerequisicioncompra.getIsChanged() && !detallerequisicioncompra.getIsDeleted()) {
				sDescripcion=detallerequisicioncompra.getrequisicioncompra_descripcion();
			} else {
				//sDescripcion=this.getActualRequisicionCompraForeignKeyDescripcion((Long)value);
				sDescripcion=detallerequisicioncompra.getrequisicioncompra_descripcion();
			}
		}

		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!detallerequisicioncompra.getIsNew() && !detallerequisicioncompra.getIsChanged() && !detallerequisicioncompra.getIsDeleted()) {
				sDescripcion=detallerequisicioncompra.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detallerequisicioncompra.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!detallerequisicioncompra.getIsNew() && !detallerequisicioncompra.getIsChanged() && !detallerequisicioncompra.getIsDeleted()) {
				sDescripcion=detallerequisicioncompra.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=detallerequisicioncompra.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!detallerequisicioncompra.getIsNew() && !detallerequisicioncompra.getIsChanged() && !detallerequisicioncompra.getIsDeleted()) {
				sDescripcion=detallerequisicioncompra.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=detallerequisicioncompra.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!detallerequisicioncompra.getIsNew() && !detallerequisicioncompra.getIsChanged() && !detallerequisicioncompra.getIsDeleted()) {
				sDescripcion=detallerequisicioncompra.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=detallerequisicioncompra.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!detallerequisicioncompra.getIsNew() && !detallerequisicioncompra.getIsChanged() && !detallerequisicioncompra.getIsDeleted()) {
				sDescripcion=detallerequisicioncompra.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=detallerequisicioncompra.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!detallerequisicioncompra.getIsNew() && !detallerequisicioncompra.getIsChanged() && !detallerequisicioncompra.getIsDeleted()) {
				sDescripcion=detallerequisicioncompra.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=detallerequisicioncompra.getmes_descripcion();
			}
		}

		if(sTipo.equals("Bodega")) {
			//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
			if(!detallerequisicioncompra.getIsNew() && !detallerequisicioncompra.getIsChanged() && !detallerequisicioncompra.getIsDeleted()) {
				sDescripcion=detallerequisicioncompra.getbodega_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
				sDescripcion=detallerequisicioncompra.getbodega_descripcion();
			}
		}

		if(sTipo.equals("Producto")) {
			//sDescripcion=this.getActualProductoForeignKeyDescripcion((Long)value);
			if(!detallerequisicioncompra.getIsNew() && !detallerequisicioncompra.getIsChanged() && !detallerequisicioncompra.getIsDeleted()) {
				sDescripcion=detallerequisicioncompra.getproducto_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detallerequisicioncompra.getproducto_descripcion();
			}
		}

		if(sTipo.equals("Unidad")) {
			//sDescripcion=this.getActualUnidadForeignKeyDescripcion((Long)value);
			if(!detallerequisicioncompra.getIsNew() && !detallerequisicioncompra.getIsChanged() && !detallerequisicioncompra.getIsDeleted()) {
				sDescripcion=detallerequisicioncompra.getunidad_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detallerequisicioncompra.getunidad_descripcion();
			}
		}

		if(sTipo.equals("CentroCosto")) {
			//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
			if(!detallerequisicioncompra.getIsNew() && !detallerequisicioncompra.getIsChanged() && !detallerequisicioncompra.getIsDeleted()) {
				sDescripcion=detallerequisicioncompra.getcentrocosto_descripcion();
			} else {
				//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
				sDescripcion=detallerequisicioncompra.getcentrocosto_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		DetalleRequisicionCompra detallerequisicioncompraRow=new DetalleRequisicionCompra();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detallerequisicioncompraRow=(DetalleRequisicionCompra) detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detallerequisicioncompraRow=(DetalleRequisicionCompra) detallerequisicioncompras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualDetalleRequisicionCompra(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoDetalleRequisicionCompra && this.isPermisoNuevoDetalleRequisicionCompra));			
			this.jButtonDuplicarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaDuplicarDetalleRequisicionCompra && this.isPermisoDuplicarDetalleRequisicionCompra));			
			this.jButtonCopiarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaCopiarDetalleRequisicionCompra && this.isPermisoCopiarDetalleRequisicionCompra));
			this.jButtonVerFormDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaVerFormDetalleRequisicionCompra && this.isPermisoVerFormDetalleRequisicionCompra));
			
			this.jButtonAbrirOrderByDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaOrdenDetalleRequisicionCompra && this.isPermisoOrdenDetalleRequisicionCompra));			
			
			this.jButtonNuevoRelacionesDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra && this.isPermisoNuevoDetalleRequisicionCompra));			
			this.jButtonNuevoGuardarCambiosDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoDetalleRequisicionCompra && this.isPermisoNuevoDetalleRequisicionCompra && this.isPermisoGuardarCambiosDetalleRequisicionCompra));
			
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonModificarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaModificarDetalleRequisicionCompra && this.isPermisoActualizarDetalleRequisicionCompra));	
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonActualizarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaActualizarDetalleRequisicionCompra && this.isPermisoActualizarDetalleRequisicionCompra));	
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonEliminarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaEliminarDetalleRequisicionCompra && this.isPermisoEliminarDetalleRequisicionCompra));
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonCancelarDetalleRequisicionCompra.setVisible(this.isVisibilidadCeldaCancelarDetalleRequisicionCompra);							
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonGuardarCambiosDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaGuardarDetalleRequisicionCompra && this.isPermisoGuardarCambiosDetalleRequisicionCompra));			
			
			}
						
			this.jButtonGuardarCambiosTablaDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra && this.isPermisoGuardarCambiosDetalleRequisicionCompra));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoDetalleRequisicionCompra && this.isPermisoNuevoDetalleRequisicionCompra));						
			this.jButtonDuplicarToolBarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaDuplicarDetalleRequisicionCompra && this.isPermisoDuplicarDetalleRequisicionCompra));						
			this.jButtonCopiarToolBarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaCopiarDetalleRequisicionCompra && this.isPermisoCopiarDetalleRequisicionCompra));			
			this.jButtonVerFormToolBarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaVerFormDetalleRequisicionCompra && this.isPermisoVerFormDetalleRequisicionCompra));			
			this.jButtonAbrirOrderByToolBarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaOrdenDetalleRequisicionCompra && this.isPermisoOrdenDetalleRequisicionCompra));
			this.jButtonNuevoRelacionesToolBarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra && this.isPermisoNuevoDetalleRequisicionCompra));			
			this.jButtonNuevoGuardarCambiosToolBarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoDetalleRequisicionCompra && this.isPermisoNuevoDetalleRequisicionCompra && this.isPermisoGuardarCambiosDetalleRequisicionCompra));			
			
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonModificarToolBarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaModificarDetalleRequisicionCompra && this.isPermisoActualizarDetalleRequisicionCompra));	
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonActualizarToolBarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaActualizarDetalleRequisicionCompra  && this.isPermisoActualizarDetalleRequisicionCompra));	
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonEliminarToolBarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaEliminarDetalleRequisicionCompra && this.isPermisoEliminarDetalleRequisicionCompra));
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonCancelarToolBarDetalleRequisicionCompra.setVisible(this.isVisibilidadCeldaCancelarDetalleRequisicionCompra);				
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonGuardarCambiosToolBarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaGuardarDetalleRequisicionCompra && this.isPermisoGuardarCambiosDetalleRequisicionCompra));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra && this.isPermisoGuardarCambiosDetalleRequisicionCompra));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoDetalleRequisicionCompra && this.isPermisoNuevoDetalleRequisicionCompra));			
			this.jMenuItemDuplicarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaDuplicarDetalleRequisicionCompra && this.isPermisoDuplicarDetalleRequisicionCompra));			
			this.jMenuItemCopiarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaCopiarDetalleRequisicionCompra && this.isPermisoCopiarDetalleRequisicionCompra));			
			this.jMenuItemVerFormDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaVerFormDetalleRequisicionCompra && this.isPermisoVerFormDetalleRequisicionCompra));			
			this.jMenuItemAbrirOrderByDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaOrdenDetalleRequisicionCompra && this.isPermisoOrdenDetalleRequisicionCompra));			
			//this.jMenuItemMostrarOcultarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaOrdenDetalleRequisicionCompra && this.isPermisoOrdenDetalleRequisicionCompra));
			this.jMenuItemDetalleAbrirOrderByDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaOrdenDetalleRequisicionCompra && this.isPermisoOrdenDetalleRequisicionCompra));			
			//this.jMenuItemDetalleMostrarOcultarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaOrdenDetalleRequisicionCompra && this.isPermisoOrdenDetalleRequisicionCompra));			
			this.jMenuItemNuevoRelacionesDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra && this.isPermisoNuevoDetalleRequisicionCompra));			
			this.jMenuItemNuevoGuardarCambiosDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaNuevoDetalleRequisicionCompra && this.isPermisoNuevoDetalleRequisicionCompra && this.isPermisoGuardarCambiosDetalleRequisicionCompra));									
			
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemModificarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaModificarDetalleRequisicionCompra && this.isPermisoActualizarDetalleRequisicionCompra));	
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemActualizarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaActualizarDetalleRequisicionCompra && this.isPermisoActualizarDetalleRequisicionCompra));	
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemEliminarDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaEliminarDetalleRequisicionCompra && this.isPermisoEliminarDetalleRequisicionCompra));
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemCancelarDetalleRequisicionCompra.setVisible(this.isVisibilidadCeldaCancelarDetalleRequisicionCompra);				
			}
			
			this.jMenuItemGuardarCambiosDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaGuardarDetalleRequisicionCompra && this.isPermisoGuardarCambiosDetalleRequisicionCompra));						
			this.jMenuItemGuardarCambiosTablaDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra && this.isPermisoGuardarCambiosDetalleRequisicionCompra));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoDetalleRequisicionCompra=this.jButtonNuevoDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaDuplicarDetalleRequisicionCompra=this.jButtonDuplicarDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaCopiarDetalleRequisicionCompra=this.jButtonCopiarDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaVerFormDetalleRequisicionCompra=this.jButtonVerFormDetalleRequisicionCompra.isVisible();
			
			this.isVisibilidadCeldaOrdenDetalleRequisicionCompra=this.jButtonAbrirOrderByDetalleRequisicionCompra.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=this.jButtonNuevoRelacionesDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaModificarDetalleRequisicionCompra=this.jButtonModificarDetalleRequisicionCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
			this.isVisibilidadCeldaActualizarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonActualizarDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaEliminarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonEliminarDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaCancelarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonCancelarDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonGuardarCambiosDetalleRequisicionCompra.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra=this.jButtonGuardarCambiosTablaDetalleRequisicionCompra.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoDetalleRequisicionCompra=this.jButtonNuevoToolBarDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=this.jButtonNuevoRelacionesToolBarDetalleRequisicionCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
			this.isVisibilidadCeldaModificarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonModificarToolBarDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaActualizarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonActualizarToolBarDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaEliminarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonEliminarToolBarDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaCancelarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonCancelarToolBarDetalleRequisicionCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=this.jButtonGuardarCambiosToolBarDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra=this.jButtonGuardarCambiosTablaToolBarDetalleRequisicionCompra.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoDetalleRequisicionCompra=this.jMenuItemNuevoDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=this.jMenuItemNuevoRelacionesDetalleRequisicionCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
			this.isVisibilidadCeldaModificarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemModificarDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaActualizarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemActualizarDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaEliminarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemEliminarDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaCancelarDetalleRequisicionCompra=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemCancelarDetalleRequisicionCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=this.jMenuItemGuardarCambiosDetalleRequisicionCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra=this.jMenuItemGuardarCambiosTablaDetalleRequisicionCompra.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesDetalleRequisicionCompra(Boolean esInicializar) {
		if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {			
			if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
				//if(this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleRequisicionCompra();
			}
			
			this.inicializarActualizarBindingBotonesManualDetalleRequisicionCompra(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualDetalleRequisicionCompra() {
		this.jButtonNuevoDetalleRequisicionCompra.setVisible(this.isPermisoNuevoDetalleRequisicionCompra);			
		this.jButtonDuplicarDetalleRequisicionCompra.setVisible(this.isPermisoDuplicarDetalleRequisicionCompra);			
		this.jButtonCopiarDetalleRequisicionCompra.setVisible(this.isPermisoCopiarDetalleRequisicionCompra);			
		this.jButtonVerFormDetalleRequisicionCompra.setVisible(this.isPermisoVerFormDetalleRequisicionCompra);			
		
		this.jButtonAbrirOrderByDetalleRequisicionCompra.setVisible(this.isPermisoOrdenDetalleRequisicionCompra);					
		
		this.jButtonNuevoRelacionesDetalleRequisicionCompra.setVisible(this.isPermisoNuevoDetalleRequisicionCompra);			
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonModificarDetalleRequisicionCompra.setVisible(this.isPermisoActualizarDetalleRequisicionCompra);	
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonActualizarDetalleRequisicionCompra.setVisible(this.isPermisoActualizarDetalleRequisicionCompra);	
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonEliminarDetalleRequisicionCompra.setVisible(this.isPermisoEliminarDetalleRequisicionCompra);
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonCancelarDetalleRequisicionCompra.setVisible(this.isVisibilidadCeldaCancelarDetalleRequisicionCompra);						
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonGuardarCambiosDetalleRequisicionCompra.setVisible(this.isPermisoGuardarCambiosDetalleRequisicionCompra);							
		}
		
		this.jButtonGuardarCambiosTablaDetalleRequisicionCompra.setVisible(this.isPermisoActualizarDetalleRequisicionCompra);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleRequisicionCompra() {
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonModificarDetalleRequisicionCompra.setVisible(this.isPermisoActualizarDetalleRequisicionCompra);	
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonActualizarDetalleRequisicionCompra.setVisible(this.isPermisoActualizarDetalleRequisicionCompra);	
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonEliminarDetalleRequisicionCompra.setVisible(this.isPermisoEliminarDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonCancelarDetalleRequisicionCompra.setVisible(this.isVisibilidadCeldaCancelarDetalleRequisicionCompra);							
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonGuardarCambiosDetalleRequisicionCompra.setVisible((this.isVisibilidadCeldaGuardarDetalleRequisicionCompra && this.isPermisoGuardarCambiosDetalleRequisicionCompra));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosDetalleRequisicionCompra() {
		if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualDetalleRequisicionCompra();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesDetalleRequisicionCompra() {
	}
	
	public void jTableDatosDetalleRequisicionCompraListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarDetalleRequisicionCompra(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.detallerequisicioncompra.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_requisicion_compraDetalleRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisorequisicioncompra=true;

			idTienePermisorequisicioncompra=this.tienePermisosUsuarioEnPaginaWebDetalleRequisicionCompra(RequisicionCompraConstantesFunciones.CLASSNAME);

			if(idTienePermisorequisicioncompra) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);

				this.requisicioncompraBeanSwingJInternalFrame=new RequisicionCompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.requisicioncompraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.requisicioncompraBeanSwingJInternalFrame.getRequisicionCompraLogic().setConnexion(this.detallerequisicioncompraLogic.getConnexion());

				if(this.detallerequisicioncompra.getid_requisicion_compra()!=null) {
					this.requisicioncompraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.requisicioncompraBeanSwingJInternalFrame.setIdActual(this.detallerequisicioncompra.getid_requisicion_compra());
					this.requisicioncompraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.requisicioncompraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.requisicioncompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaRequisicionCompra();
				}

				JInternalFrameBase jinternalFrame =this.requisicioncompraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleRequisicionCompra=(TitledBorder)this.jScrollPanelDatosDetalleRequisicionCompra.getBorder();
				TitledBorder titledBorderrequisicioncompra=(TitledBorder)this.requisicioncompraBeanSwingJInternalFrame.jScrollPanelDatosRequisicionCompra.getBorder();

				titledBorderrequisicioncompra.setTitle(titledBorderDetalleRequisicionCompra.getTitle() + " -> Requisicion Compra");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_requisicion_compraDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getid_requisicion_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_requisicion_compra = "+this.detallerequisicioncompra.getid_requisicion_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaDetalleRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebDetalleRequisicionCompra(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.detallerequisicioncompraLogic.getConnexion());

				if(this.detallerequisicioncompra.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.detallerequisicioncompra.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleRequisicionCompra=(TitledBorder)this.jScrollPanelDatosDetalleRequisicionCompra.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderDetalleRequisicionCompra.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.detallerequisicioncompra.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalDetalleRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebDetalleRequisicionCompra(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.detallerequisicioncompraLogic.getConnexion());

				if(this.detallerequisicioncompra.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.detallerequisicioncompra.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleRequisicionCompra=(TitledBorder)this.jScrollPanelDatosDetalleRequisicionCompra.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderDetalleRequisicionCompra.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.detallerequisicioncompra.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioDetalleRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebDetalleRequisicionCompra(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.detallerequisicioncompraLogic.getConnexion());

				if(this.detallerequisicioncompra.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.detallerequisicioncompra.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleRequisicionCompra=(TitledBorder)this.jScrollPanelDatosDetalleRequisicionCompra.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderDetalleRequisicionCompra.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.detallerequisicioncompra.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoDetalleRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebDetalleRequisicionCompra(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.detallerequisicioncompraLogic.getConnexion());

				if(this.detallerequisicioncompra.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.detallerequisicioncompra.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleRequisicionCompra=(TitledBorder)this.jScrollPanelDatosDetalleRequisicionCompra.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderDetalleRequisicionCompra.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.detallerequisicioncompra.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioDetalleRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebDetalleRequisicionCompra(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.detallerequisicioncompraLogic.getConnexion());

				if(this.detallerequisicioncompra.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.detallerequisicioncompra.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleRequisicionCompra=(TitledBorder)this.jScrollPanelDatosDetalleRequisicionCompra.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderDetalleRequisicionCompra.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.detallerequisicioncompra.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesDetalleRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebDetalleRequisicionCompra(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.detallerequisicioncompraLogic.getConnexion());

				if(this.detallerequisicioncompra.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.detallerequisicioncompra.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleRequisicionCompra=(TitledBorder)this.jScrollPanelDatosDetalleRequisicionCompra.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderDetalleRequisicionCompra.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.detallerequisicioncompra.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodegaDetalleRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodega=true;

			idTienePermisobodega=this.tienePermisosUsuarioEnPaginaWebDetalleRequisicionCompra(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodega) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);

				this.bodegaBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegaBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.detallerequisicioncompraLogic.getConnexion());

				if(this.detallerequisicioncompra.getid_bodega()!=null) {
					this.bodegaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegaBeanSwingJInternalFrame.setIdActual(this.detallerequisicioncompra.getid_bodega());
					this.bodegaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleRequisicionCompra=(TitledBorder)this.jScrollPanelDatosDetalleRequisicionCompra.getBorder();
				TitledBorder titledBorderbodega=(TitledBorder)this.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodega.setTitle(titledBorderDetalleRequisicionCompra.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodegaDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getid_bodega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega = "+this.detallerequisicioncompra.getid_bodega().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_productoDetalleRequisicionCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.productoBeanSwingJInternalFrame.sTipoBusqueda="Producto";

			if(!this.sFinalQueryGeneral_producto.equals("")) {
				this.productoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_producto);
				this.productoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.productoBeanSwingJInternalFrame.procesarBusqueda(this.productoBeanSwingJInternalFrame.sAccionBusqueda);
				this.productoBeanSwingJInternalFrame.inicializarActualizarBindingProducto(false);
			}

			if(!this.sFinalQueryComboProducto.equals("") && false) {

				//BUSQUEDA FILTRADA DESDE COMBO EVENT Y EVENTDEPEND
				this.productoBeanSwingJInternalFrame.sFinalQueryGeneral=this.sFinalQueryComboProducto;
				this.productoBeanSwingJInternalFrame.procesarBusqueda(this.productoBeanSwingJInternalFrame.sAccionBusqueda);
				this.productoBeanSwingJInternalFrame.inicializarActualizarBindingProducto(false);
			}


			JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetalleRequisicionCompra=null;
			TitledBorder titledBorderproducto=null;

			if(!this.jScrollPanelDatosDetalleRequisicionCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetalleRequisicionCompra=(TitledBorder)this.jScrollPanelDatosDetalleRequisicionCompra.getBorder();
				titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetalleRequisicionCompra.getTitle() + " -> Producto");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_productoDetalleRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoproducto=true;

			idTienePermisoproducto=this.tienePermisosUsuarioEnPaginaWebDetalleRequisicionCompra(ProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisoproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);

				this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.productoBeanSwingJInternalFrame.getProductoLogic().setConnexion(this.detallerequisicioncompraLogic.getConnexion());

				if(this.detallerequisicioncompra.getid_producto()!=null) {
					this.productoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.productoBeanSwingJInternalFrame.setIdActual(this.detallerequisicioncompra.getid_producto());
					this.productoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProducto();
				}

				JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleRequisicionCompra=(TitledBorder)this.jScrollPanelDatosDetalleRequisicionCompra.getBorder();
				TitledBorder titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetalleRequisicionCompra.getTitle() + " -> Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_productoDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getid_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_producto = "+this.detallerequisicioncompra.getid_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_unidadDetalleRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisounidad=true;

			idTienePermisounidad=this.tienePermisosUsuarioEnPaginaWebDetalleRequisicionCompra(UnidadConstantesFunciones.CLASSNAME);

			if(idTienePermisounidad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);

				this.unidadBeanSwingJInternalFrame=new UnidadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.unidadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.unidadBeanSwingJInternalFrame.getUnidadLogic().setConnexion(this.detallerequisicioncompraLogic.getConnexion());

				if(this.detallerequisicioncompra.getid_unidad()!=null) {
					this.unidadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.unidadBeanSwingJInternalFrame.setIdActual(this.detallerequisicioncompra.getid_unidad());
					this.unidadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.inicializarActualizarBindingTablaUnidad();
				}

				JInternalFrameBase jinternalFrame =this.unidadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleRequisicionCompra=(TitledBorder)this.jScrollPanelDatosDetalleRequisicionCompra.getBorder();
				TitledBorder titledBorderunidad=(TitledBorder)this.unidadBeanSwingJInternalFrame.jScrollPanelDatosUnidad.getBorder();

				titledBorderunidad.setTitle(titledBorderDetalleRequisicionCompra.getTitle() + " -> Unidad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_unidadDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getid_unidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_unidad = "+this.detallerequisicioncompra.getid_unidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_costoDetalleRequisicionCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="CentroCosto";

			if(!this.sFinalQueryGeneral_centrocosto.equals("")) {
				this.centrocostoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_centrocosto);
				this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.centrocostoBeanSwingJInternalFrame.procesarBusqueda(this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda);
				this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingCentroCosto(false);
			}

			if(!this.sFinalQueryComboCentroCosto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetalleRequisicionCompra=null;
			TitledBorder titledBordercentrocosto=null;

			if(!this.jScrollPanelDatosDetalleRequisicionCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetalleRequisicionCompra=(TitledBorder)this.jScrollPanelDatosDetalleRequisicionCompra.getBorder();
				titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderDetalleRequisicionCompra.getTitle() + " -> Centro Costo");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_centro_costoDetalleRequisicionCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentrocosto=true;

			idTienePermisocentrocosto=this.tienePermisosUsuarioEnPaginaWebDetalleRequisicionCompra(CentroCostoConstantesFunciones.CLASSNAME);

			if(idTienePermisocentrocosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleRequisicionCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleRequisicionCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);

				this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centrocostoBeanSwingJInternalFrame.getCentroCostoLogic().setConnexion(this.detallerequisicioncompraLogic.getConnexion());

				if(this.detallerequisicioncompra.getid_centro_costo()!=null) {
					this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centrocostoBeanSwingJInternalFrame.setIdActual(this.detallerequisicioncompra.getid_centro_costo());
					this.centrocostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCosto();
				}

				JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleRequisicionCompra=(TitledBorder)this.jScrollPanelDatosDetalleRequisicionCompra.getBorder();
				TitledBorder titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderDetalleRequisicionCompra.getTitle() + " -> Centro Costo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_costoDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getid_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_costo = "+this.detallerequisicioncompra.getid_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_requisicionDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getcantidad_requisicion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_requisicion = "+this.detallerequisicioncompra.getcantidad_requisicion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncosto_unitarioDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getcosto_unitario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo_unitario = "+this.detallerequisicioncompra.getcosto_unitario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncosto_totalDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getcosto_total()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo_total = "+this.detallerequisicioncompra.getcosto_total().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.detallerequisicioncompra.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_entregadaDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getcantidad_entregada()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_entregada = "+this.detallerequisicioncompra.getcantidad_entregada().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_pendienteDetalleRequisicionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.getdetallerequisicioncompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallerequisicioncompra==null) {
						this.detallerequisicioncompra = new DetalleRequisicionCompra();
					}

					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);
				}

				if(this.detallerequisicioncompra.getcantidad_pendiente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_pendiente = "+this.detallerequisicioncompra.getcantidad_pendiente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleRequisicionCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);

			this.getDetalleRequisicionComprasFK_IdAnio();

			this.inicializarActualizarBindingDetalleRequisicionCompra(false);

			//if(DetalleRequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdBodegaDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);

			this.getDetalleRequisicionComprasFK_IdBodega();

			this.inicializarActualizarBindingDetalleRequisicionCompra(false);

			//if(DetalleRequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroCostoDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);

			this.getDetalleRequisicionComprasFK_IdCentroCosto();

			this.inicializarActualizarBindingDetalleRequisicionCompra(false);

			//if(DetalleRequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);

			this.getDetalleRequisicionComprasFK_IdEjercicio();

			this.inicializarActualizarBindingDetalleRequisicionCompra(false);

			//if(DetalleRequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);

			this.getDetalleRequisicionComprasFK_IdEmpresa();

			this.inicializarActualizarBindingDetalleRequisicionCompra(false);

			//if(DetalleRequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);

			this.getDetalleRequisicionComprasFK_IdMes();

			this.inicializarActualizarBindingDetalleRequisicionCompra(false);

			//if(DetalleRequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);

			this.getDetalleRequisicionComprasFK_IdPeriodo();

			this.inicializarActualizarBindingDetalleRequisicionCompra(false);

			//if(DetalleRequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdProductoDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);

			this.getDetalleRequisicionComprasFK_IdProducto();

			this.inicializarActualizarBindingDetalleRequisicionCompra(false);

			//if(DetalleRequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdRequisicionCompraDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);

			this.getDetalleRequisicionComprasFK_IdRequisicionCompra();

			this.inicializarActualizarBindingDetalleRequisicionCompra(false);

			//if(DetalleRequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);

			this.getDetalleRequisicionComprasFK_IdSucursal();

			this.inicializarActualizarBindingDetalleRequisicionCompra(false);

			//if(DetalleRequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUnidadDetalleRequisicionCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);

			this.getDetalleRequisicionComprasFK_IdUnidad();

			this.inicializarActualizarBindingDetalleRequisicionCompra(false);

			//if(DetalleRequisicionCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallerequisicioncompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameDetalleRequisicionCompra() {
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.setVisible(false);	    			
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.dispose();
			this.jInternalFrameDetalleFormDetalleRequisicionCompra=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra!=null) {
			this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.dispose();
			this.jInternalFrameReporteDinamicoDetalleRequisicionCompra=null;
		}
		
		if(this.jInternalFrameImportacionDetalleRequisicionCompra!=null) {
			this.jInternalFrameImportacionDetalleRequisicionCompra.setVisible(false);	    			
			this.jInternalFrameImportacionDetalleRequisicionCompra.dispose();
			this.jInternalFrameImportacionDetalleRequisicionCompra=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessDetalleRequisicionCompra();
			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			
			
			if(sTipo.equals("NuevoDetalleRequisicionCompra")) {
				jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarDetalleRequisicionCompra")) {
				jButtonDuplicarDetalleRequisicionCompraActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarDetalleRequisicionCompra")) {
				jButtonCopiarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormDetalleRequisicionCompra")) {
				jButtonVerFormDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarDetalleRequisicionCompra")) {
				jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarDetalleRequisicionCompra")) {
				jButtonDuplicarDetalleRequisicionCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoDetalleRequisicionCompra")) {
				jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarDetalleRequisicionCompra")) {
				jButtonDuplicarDetalleRequisicionCompraActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesDetalleRequisicionCompra")) {
				jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarDetalleRequisicionCompra")) {
				jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesDetalleRequisicionCompra")) {
				jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarDetalleRequisicionCompra")) {
				jButtonModificarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarDetalleRequisicionCompra")) {
				jButtonModificarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarDetalleRequisicionCompra")) {
				jButtonModificarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarDetalleRequisicionCompra")) {
				jButtonActualizarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarDetalleRequisicionCompra")) {
				jButtonActualizarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarDetalleRequisicionCompra")) {
				jButtonActualizarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarDetalleRequisicionCompra")) {
				jButtonEliminarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarDetalleRequisicionCompra")) {
				jButtonEliminarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarDetalleRequisicionCompra")) {
				jButtonEliminarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarDetalleRequisicionCompra")) {
				jButtonCancelarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarDetalleRequisicionCompra")) {
				jButtonCancelarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarDetalleRequisicionCompra")) {
				jButtonCancelarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarDetalleRequisicionCompra")) {
				jButtonCerrarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarDetalleRequisicionCompra")) {
				jButtonCerrarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarDetalleRequisicionCompra")) {
				jButtonCerrarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarDetalleRequisicionCompra")) {
				jButtonMostrarOcultarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarDetalleRequisicionCompra")) {
				jButtonCancelarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosDetalleRequisicionCompra")) {
				jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarDetalleRequisicionCompra")) {
				jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarDetalleRequisicionCompra")) {
				jButtonCopiarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarDetalleRequisicionCompra")) {
				jButtonVerFormDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosDetalleRequisicionCompra")) {
				jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarDetalleRequisicionCompra")) {
				jButtonCopiarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormDetalleRequisicionCompra")) {
				jButtonVerFormDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaDetalleRequisicionCompra")) {
				jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarDetalleRequisicionCompra")) {
				jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaDetalleRequisicionCompra")) {
				jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionDetalleRequisicionCompra")) {
				jButtonRecargarInformacionDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarDetalleRequisicionCompra")) {
				jButtonRecargarInformacionDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionDetalleRequisicionCompra")) {
				jButtonRecargarInformacionDetalleRequisicionCompraActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresDetalleRequisicionCompra")) {
				jButtonAnterioresDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarDetalleRequisicionCompra")) {
				jButtonAnterioresDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreDetalleRequisicionCompra")) {
				jButtonAnterioresDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesDetalleRequisicionCompra")) {
				jButtonSiguientesDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarDetalleRequisicionCompra")) {
				jButtonSiguientesDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesDetalleRequisicionCompra")) {
				jButtonSiguientesDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByDetalleRequisicionCompra") || sTipo.equals("MenuItemDetalleAbrirOrderByDetalleRequisicionCompra")) {
				jButtonAbrirOrderByDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarDetalleRequisicionCompra") || sTipo.equals("MenuItemDetalleMostrarOcultarDetalleRequisicionCompra")) {
				jButtonMostrarOcultarDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleRequisicionCompra")) {
				jButtonNuevoGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarDetalleRequisicionCompra")) {
				jButtonNuevoGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosDetalleRequisicionCompra")) {
				jButtonNuevoGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoDetalleRequisicionCompra")) {
				jButtonCerrarReporteDinamicoDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoDetalleRequisicionCompra")) {
				jButtonGenerarReporteDinamicoDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoDetalleRequisicionCompra")) {
				
				jButtonGenerarExcelReporteDinamicoDetalleRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionDetalleRequisicionCompra")) {
				jButtonCerrarImportacionDetalleRequisicionCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionDetalleRequisicionCompra")) {
				
				jButtonGenerarImportacionDetalleRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionDetalleRequisicionCompra")) {
				
				jButtonAbrirImportacionDetalleRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesDetalleRequisicionCompra")) {
				jComboBoxTiposAccionesDetalleRequisicionCompraActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesDetalleRequisicionCompra")) {
				jComboBoxTiposRelacionesDetalleRequisicionCompraActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioDetalleRequisicionCompra")) {
				jComboBoxTiposAccionesDetalleRequisicionCompraActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarDetalleRequisicionCompra")) {
				
				jComboBoxTiposSeleccionarDetalleRequisicionCompraActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralDetalleRequisicionCompra")) {
				jTextFieldValorCampoGeneralDetalleRequisicionCompraActionListener(evt);
			}
			
			else if(sTipo.equals("AbrirTotalesDetalleRequisicionCompra")) {
				jButtonAbrirTotalesDetalleRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarTotalesDetalleRequisicionCompra")) {
				jButtonCerrarTotalesDetalleRequisicionCompraActionPerformed(evt);
			} 
			
			else if(sTipo.equals("AbrirOrderByDetalleRequisicionCompra")) {
				jButtonAbrirOrderByDetalleRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarDetalleRequisicionCompra")) {
				jButtonAbrirOrderByDetalleRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByDetalleRequisicionCompra")) {
				jButtonCerrarOrderByDetalleRequisicionCompraActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleRequisicionCompraBusqueda")) {
				this.jButtonidDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_requisicion_compraDetalleRequisicionCompraUpdate")) {
				this.jButtonid_requisicion_compraDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_requisicion_compraDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_requisicion_compraDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleRequisicionCompraUpdate")) {
				this.jButtonid_empresaDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_empresaDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleRequisicionCompraUpdate")) {
				this.jButtonid_sucursalDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_sucursalDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetalleRequisicionCompraUpdate")) {
				this.jButtonid_ejercicioDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_ejercicioDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetalleRequisicionCompraUpdate")) {
				this.jButtonid_periodoDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_periodoDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetalleRequisicionCompraUpdate")) {
				this.jButtonid_anioDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_anioDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetalleRequisicionCompraUpdate")) {
				this.jButtonid_mesDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_mesDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetalleRequisicionCompraUpdate")) {
				this.jButtonid_bodegaDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_bodegaDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetalleRequisicionCompra")) {
				this.jButtonid_productoDetalleRequisicionCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetalleRequisicionCompraUpdate")) {
				this.jButtonid_productoDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_productoDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetalleRequisicionCompraUpdate")) {
				this.jButtonid_unidadDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_unidadDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoDetalleRequisicionCompra")) {
				this.jButtonid_centro_costoDetalleRequisicionCompraActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoDetalleRequisicionCompraArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoDetalleRequisicionCompraUpdate")) {
				this.jButtonid_centro_costoDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_centro_costoDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_requisicionDetalleRequisicionCompraBusqueda")) {
				this.jButtoncantidad_requisicionDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_unitarioDetalleRequisicionCompraBusqueda")) {
				this.jButtoncosto_unitarioDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_totalDetalleRequisicionCompraBusqueda")) {
				this.jButtoncosto_totalDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetalleRequisicionCompraBusqueda")) {
				this.jButtondescripcionDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_entregadaDetalleRequisicionCompraBusqueda")) {
				this.jButtoncantidad_entregadaDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_pendienteDetalleRequisicionCompraBusqueda")) {
				this.jButtoncantidad_pendienteDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_centro_costoDetalleRequisicionCompra")) {
				this.jButtonid_centro_costoDetalleRequisicionCompraActionPerformed(evt);
			}
			else if(sTipo.equals("id_productoDetalleRequisicionCompra")) {
				this.jButtonid_productoDetalleRequisicionCompraActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdBodegaDetalleRequisicionCompra")) {
				this.jButtonFK_IdBodegaDetalleRequisicionCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCentroCostoDetalleRequisicionCompra")) {
				this.jButtonFK_IdCentroCostoDetalleRequisicionCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdProductoDetalleRequisicionCompra")) {
				this.jButtonFK_IdProductoDetalleRequisicionCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdRequisicionCompraDetalleRequisicionCompra")) {
				this.jButtonFK_IdRequisicionCompraDetalleRequisicionCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdUnidadDetalleRequisicionCompra")) {
				this.jButtonFK_IdUnidadDetalleRequisicionCompraActionPerformed(evt);
			}
			
			;
			
			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessDetalleRequisicionCompra();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleRequisicionCompraActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallerequisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
				


			if(sTipo.equals("cantidad_requisicionDetalleRequisicionCompra")) {
				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleRequisicionCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("costo_unitarioDetalleRequisicionCompra")) {
				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleRequisicionCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleRequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleRequisicionCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			DetalleRequisicionCompra detallerequisicioncompraLocal=null;
			
			if(!this.getEsControlTabla()) {
				detallerequisicioncompraLocal=this.detallerequisicioncompra;
			} else {
				detallerequisicioncompraLocal=this.detallerequisicioncompraAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


				if(sTipo.equals("cantidad_requisicionDetalleRequisicionCompra")) {
					if(detallerequisicioncompraLocal.getcantidad_requisicion()==Integer.parseInt(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_requisicionDetalleRequisicionCompra.getText())){existeCambio=false;};
				}
				 else if(sTipo.equals("costo_unitarioDetalleRequisicionCompra")) {
					if(detallerequisicioncompraLocal.getcosto_unitario()==Double.parseDouble(this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_unitarioDetalleRequisicionCompra.getText())){existeCambio=false;};
				}
			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallerequisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
							
				
				


			if(sTipo.equals("cantidad_requisicionDetalleRequisicionCompra")) {
				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleRequisicionCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("costo_unitarioDetalleRequisicionCompra")) {
				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleRequisicionCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleRequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleRequisicionCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleRequisicionCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraAnterior =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallerequisicioncompraAnterior =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			if(sTipo.equals("cantidad_requisicionDetalleRequisicionCompra")) {
				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleRequisicionCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("costo_unitarioDetalleRequisicionCompra")) {
				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleRequisicionCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleRequisicionCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallerequisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
								
						
				


				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleRequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleRequisicionCompra.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallerequisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
								
				
				


				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleRequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleRequisicionCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleRequisicionCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraAnterior =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallerequisicioncompraAnterior =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallerequisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleRequisicionCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraAnterior =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallerequisicioncompraAnterior =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleRequisicionCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detallerequisicioncompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallerequisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
							
				
				


				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleRequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleRequisicionCompra.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleRequisicionCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompraAnterior =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detallerequisicioncompraAnterior =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleRequisicionCompraActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detallerequisicioncompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallerequisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
								
				
				


			if(sTipo.equals("cantidad_requisicionDetalleRequisicionCompra")) {
				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleRequisicionCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("costo_unitarioDetalleRequisicionCompra")) {
				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleRequisicionCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleRequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleRequisicionCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleRequisicionCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraAnterior =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallerequisicioncompraAnterior =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleRequisicionCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detallerequisicioncompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleRequisicionCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallerequisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosDetalleRequisicionCompra")) {
					jCheckBoxSeleccionarTodosDetalleRequisicionCompraItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosDetalleRequisicionCompra")) {
					jCheckBoxSeleccionadosDetalleRequisicionCompraItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarDetalleRequisicionCompra")) {
					
				}
				
				


				
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleRequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleRequisicionCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.detallerequisicioncompra);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
												
				
				


				
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleRequisicionCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleRequisicionCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleRequisicionCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallerequisicioncompraAnterior =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detallerequisicioncompraAnterior =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleRequisicionCompraActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallerequisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_bodegaDetalleRequisicionCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra;
				}

				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleRequisicionCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra,"FK_IdBodega");
				//recargarFormDetalleRequisicionCompraBodega(jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetalleRequisicionCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra;
				}

				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleRequisicionCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra,"FK_IdProducto");
				//recargarFormDetalleRequisicionCompraProducto(jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra,"FK_IdProducto");
			}
			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleRequisicionCompraActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallerequisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaDetalleRequisicionCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra;
				}

				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleRequisicionCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra,"FK_IdBodega");
				//recargarFormDetalleRequisicionCompraBodega(jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetalleRequisicionCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra;
				}

				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleRequisicionCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra,"FK_IdProducto");
				//recargarFormDetalleRequisicionCompraProducto(jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra,"FK_IdProducto");
			}
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleRequisicionCompra.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleRequisicionCompra.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallerequisicioncompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallerequisicioncompra);
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaDetalleRequisicionCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra;
				}

				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleRequisicionCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra,"FK_IdBodega");
				//recargarFormDetalleRequisicionCompraBodega(jComboBoxid_bodegaFK_IdBodegaDetalleRequisicionCompra,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetalleRequisicionCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra;
				}

				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleRequisicionCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra,"FK_IdProducto");
				//recargarFormDetalleRequisicionCompraProducto(jComboBoxid_productoFK_IdProductoDetalleRequisicionCompra,"FK_IdProducto");
			}
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleRequisicionCompra.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleRequisicionCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleRequisicionCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallerequisicioncompraAnterior =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallerequisicioncompraAnterior =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarDetalleRequisicionCompra")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosDetalleRequisicionCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosDetalleRequisicionCompra.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.detallerequisicioncompra =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.detallerequisicioncompra);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarDetalleRequisicionCompra")) {
				
				}
				
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarDetalleRequisicionCompra")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosDetalleRequisicionCompra.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarDetalleRequisicionCompra")) {
			
			}
			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessDetalleRequisicionCompra();
			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			
			if(sTipo.equals("NuevoDetalleRequisicionCompra")) {
				jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarDetalleRequisicionCompra")) {
				jButtonDuplicarDetalleRequisicionCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarDetalleRequisicionCompra")) {
				jButtonCopiarDetalleRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormDetalleRequisicionCompra")) {
				jButtonVerFormDetalleRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesDetalleRequisicionCompra")) {
				jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarDetalleRequisicionCompra")) {
				jButtonModificarDetalleRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarDetalleRequisicionCompra")) {
				jButtonActualizarDetalleRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarDetalleRequisicionCompra")) {
				jButtonEliminarDetalleRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaDetalleRequisicionCompra")) {
				jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarDetalleRequisicionCompra")) {
				jButtonCancelarDetalleRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarDetalleRequisicionCompra")) {
				jButtonCerrarDetalleRequisicionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosDetalleRequisicionCompra")) {
				jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleRequisicionCompra")) {
				jButtonNuevoGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByDetalleRequisicionCompra")) {
				jButtonAbrirOrderByDetalleRequisicionCompraActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionDetalleRequisicionCompra")) {
				jButtonRecargarInformacionDetalleRequisicionCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresDetalleRequisicionCompra")) {
				jButtonAnterioresDetalleRequisicionCompraActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesDetalleRequisicionCompra")) {
				jButtonSiguientesDetalleRequisicionCompraActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleRequisicionCompraBusqueda")) {
				this.jButtonidDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_requisicion_compraDetalleRequisicionCompraUpdate")) {
				this.jButtonid_requisicion_compraDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_requisicion_compraDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_requisicion_compraDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleRequisicionCompraUpdate")) {
				this.jButtonid_empresaDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_empresaDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleRequisicionCompraUpdate")) {
				this.jButtonid_sucursalDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_sucursalDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetalleRequisicionCompraUpdate")) {
				this.jButtonid_ejercicioDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_ejercicioDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetalleRequisicionCompraUpdate")) {
				this.jButtonid_periodoDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_periodoDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetalleRequisicionCompraUpdate")) {
				this.jButtonid_anioDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_anioDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetalleRequisicionCompraUpdate")) {
				this.jButtonid_mesDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_mesDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetalleRequisicionCompraUpdate")) {
				this.jButtonid_bodegaDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_bodegaDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetalleRequisicionCompra")) {
				this.jButtonid_productoDetalleRequisicionCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetalleRequisicionCompraUpdate")) {
				this.jButtonid_productoDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_productoDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetalleRequisicionCompraUpdate")) {
				this.jButtonid_unidadDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_unidadDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoDetalleRequisicionCompra")) {
				this.jButtonid_centro_costoDetalleRequisicionCompraActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoDetalleRequisicionCompraArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoDetalleRequisicionCompraUpdate")) {
				this.jButtonid_centro_costoDetalleRequisicionCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoDetalleRequisicionCompraBusqueda")) {
				this.jButtonid_centro_costoDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_requisicionDetalleRequisicionCompraBusqueda")) {
				this.jButtoncantidad_requisicionDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_unitarioDetalleRequisicionCompraBusqueda")) {
				this.jButtoncosto_unitarioDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_totalDetalleRequisicionCompraBusqueda")) {
				this.jButtoncosto_totalDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetalleRequisicionCompraBusqueda")) {
				this.jButtondescripcionDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_entregadaDetalleRequisicionCompraBusqueda")) {
				this.jButtoncantidad_entregadaDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_pendienteDetalleRequisicionCompraBusqueda")) {
				this.jButtoncantidad_pendienteDetalleRequisicionCompraBusquedaActionPerformed(evt);
			}
			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessDetalleRequisicionCompra();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameDetalleRequisicionCompra")) {
				closingInternalFrameDetalleRequisicionCompra();
				
			} else if(sTipo.equals("jButtonCancelarDetalleRequisicionCompra")) {
				JInternalFrameBase jInternalFrameDetalleFormDetalleRequisicionCompra = (JInternalFrameBase)evt.getSource();
	            	
	            DetalleRequisicionCompraBeanSwingJInternalFrame jInternalFrameParent=(DetalleRequisicionCompraBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleRequisicionCompra.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarDetalleRequisicionCompraActionPerformed(null);
			}
			
			DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detallerequisicioncompra,new Object(),this.detallerequisicioncompraParameterGeneral,this.detallerequisicioncompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormDetalleRequisicionCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormDetalleRequisicionCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormDetalleRequisicionCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.detallerequisicioncompra)) {
			if(!esControlTabla) {
				if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);			
				}
				
				if(this.detallerequisicioncompraSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detallerequisicioncompraReturnGeneral=detallerequisicioncompraLogic.procesarEventosDetalleRequisicionComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallerequisicioncompraLogic.getDetalleRequisicionCompras(),this.detallerequisicioncompra,this.detallerequisicioncompraParameterGeneral,this.isEsNuevoDetalleRequisicionCompra,classes);//this.detallerequisicioncompraLogic.getDetalleRequisicionCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanDetalleRequisicionCompra(this.detallerequisicioncompraReturnGeneral,this.detallerequisicioncompraBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.detallerequisicioncompraSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanDetalleRequisicionCompra(classes,this.detallerequisicioncompraReturnGeneral,this.detallerequisicioncompraBean,false);
					}
						
					if(this.detallerequisicioncompraReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyDetalleRequisicionCompra(this.detallerequisicioncompraReturnGeneral.getDetalleRequisicionCompra());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioDetalleRequisicionCompra(this.detallerequisicioncompraReturnGeneral.getDetalleRequisicionCompra());	
					}
						
					if(this.detallerequisicioncompraReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioDetalleRequisicionCompra(this.detallerequisicioncompraReturnGeneral.getDetalleRequisicionCompra(),classes);//this.detallerequisicioncompraBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioDetalleRequisicionCompra(this.detallerequisicioncompra,classes);//this.detallerequisicioncompraBean);									
				}
			
				if(DetalleRequisicionCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualDetalleRequisicionCompra(this.detallerequisicioncompra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleRequisicionCompra(this.detallerequisicioncompra);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.detallerequisicioncompraAnterior!=null) {
						this.detallerequisicioncompra=this.detallerequisicioncompraAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detallerequisicioncompraReturnGeneral=detallerequisicioncompraLogic.procesarEventosDetalleRequisicionComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallerequisicioncompraLogic.getDetalleRequisicionCompras(),this.detallerequisicioncompra,this.detallerequisicioncompraParameterGeneral,this.isEsNuevoDetalleRequisicionCompra,classes);//this.detallerequisicioncompraLogic.getDetalleRequisicionCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detallerequisicioncompraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.detallerequisicioncompraReturnGeneral.getDetalleRequisicionCompra(),detallerequisicioncompraLogic.getDetalleRequisicionCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.detallerequisicioncompraReturnGeneral.getDetalleRequisicionCompra(),this.detallerequisicioncompras);
				}
				//ARCHITECTURE
				
				//this.jTableDatosDetalleRequisicionCompra.repaint();
				
				//((AbstractTableModel) this.jTableDatosDetalleRequisicionCompra.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosDetalleRequisicionCompra();
			}
		}
	}
	
	public void actualizarVisualTableDatosDetalleRequisicionCompra() throws Exception {
		
		DetalleRequisicionCompraModel detallerequisicioncompraModel=(DetalleRequisicionCompraModel)this.jTableDatosDetalleRequisicionCompra.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detallerequisicioncompraModel.detallerequisicioncompras=this.detallerequisicioncompraLogic.getDetalleRequisicionCompras();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			detallerequisicioncompraModel.detallerequisicioncompras=this.detallerequisicioncompras;
		}
		
		
		((DetalleRequisicionCompraModel) this.jTableDatosDetalleRequisicionCompra.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaDetalleRequisicionCompra() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getdetallerequisicioncompraAnterior(),this.detallerequisicioncompraLogic.getDetalleRequisicionCompras());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getdetallerequisicioncompraAnterior(),this.detallerequisicioncompras);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosDetalleRequisicionCompra();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallerequisicioncompra,new Object(),generalEntityParameterGeneral,this.detallerequisicioncompraReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsOfDetalleRequisicionCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=DetalleRequisicionCompraConstantesFunciones.getClassesRelationshipsFromStringsOfDetalleRequisicionCompra(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormDetalleRequisicionCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallerequisicioncompra,new Object(),generalEntityParameterGeneral,this.detallerequisicioncompraReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioDetalleRequisicionCompra(DetalleRequisicionCompraBean detallerequisicioncompraBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanDetalleRequisicionCompra(ArrayList<Classe> classes,DetalleRequisicionCompraReturnGeneral detallerequisicioncompraReturnGeneral,DetalleRequisicionCompraBean detallerequisicioncompraBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.detallerequisicioncompra)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra = new DetalleRequisicionCompraDetalleFormJInternalFrame(jDesktopPane,this.detallerequisicioncompraSessionBean.getConGuardarRelaciones(),this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.setVisible(false);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.setSelected(false);						
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.detallerequisicioncompraLogic=this.detallerequisicioncompraLogic;
		
		this.cargarCombosFrameForeignKeyDetalleRequisicionCompra("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleRequisicionCompra();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleRequisicionCompra();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyDetalleRequisicionCompra("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyDetalleRequisicionCompra();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleRequisicionCompra"));
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonModificarDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"ModificarDetalleRequisicionCompra"));

		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonModificarToolBarDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleRequisicionCompra"));
					
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemModificarDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleRequisicionCompra"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonActualizarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"ActualizarDetalleRequisicionCompra"));
		
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonActualizarToolBarDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleRequisicionCompra"));
						
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemActualizarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleRequisicionCompra"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonEliminarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"EliminarDetalleRequisicionCompra"));
		
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonEliminarToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleRequisicionCompra"));
								
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemEliminarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleRequisicionCompra"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonCancelarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"CancelarDetalleRequisicionCompra"));
		
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonCancelarToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleRequisicionCompra"));
					
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemCancelarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleRequisicionCompra"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemDetalleCerrarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleRequisicionCompra"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonGuardarCambiosToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleRequisicionCompra"));
		
		
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonGuardarCambiosToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleRequisicionCompra"));
		
		
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxTiposAccionesFormularioDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleRequisicionCompra"));
		
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_requisicionDetalleRequisicionCompra.addFocusListener(new TextFieldFocusListener(this,"cantidad_requisicionDetalleRequisicionCompra"));
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_requisicionDetalleRequisicionCompra.addActionListener(new TextFieldActionListener(this,"cantidad_requisicionDetalleRequisicionCompra"));
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_requisicionDetalleRequisicionCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldcantidad_requisicionDetalleRequisicionCompra,"cantidad_requisicionDetalleRequisicionCompra"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_unitarioDetalleRequisicionCompra.addFocusListener(new TextFieldFocusListener(this,"costo_unitarioDetalleRequisicionCompra"));
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_unitarioDetalleRequisicionCompra.addActionListener(new TextFieldActionListener(this,"costo_unitarioDetalleRequisicionCompra"));
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_unitarioDetalleRequisicionCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldcosto_unitarioDetalleRequisicionCompra,"costo_unitarioDetalleRequisicionCompra"));


				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonidDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_requisicion_compraDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_requisicion_compraDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_requisicion_compraDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_requisicion_compraDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_empresaDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_empresaDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_sucursalDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_sucursalDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_ejercicioDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_ejercicioDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_periodoDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_periodoDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_anioDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_anioDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_mesDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_mesDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_bodegaDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_bodegaDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleRequisicionCompraBusqueda"));
		//jButtonid_productoDetalleRequisicionCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetalleRequisicionCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_productoDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_productoDetalleRequisicionCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_productoDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_productoDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_unidadDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_unidadDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetalleRequisicionCompraBusqueda"));
		//jButtonid_centro_costoDetalleRequisicionCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoDetalleRequisicionCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_centro_costoDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleRequisicionCompra"));
		//jButtonid_centro_costoDetalleRequisicionCompraArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_centro_costoDetalleRequisicionCompraArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleRequisicionCompraArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_centro_costoDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_centro_costoDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtoncantidad_requisicionDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_requisicionDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtoncosto_unitarioDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"costo_unitarioDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtoncosto_totalDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"costo_totalDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtondescripcionDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtoncantidad_entregadaDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_entregadaDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtoncantidad_pendienteDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_pendienteDetalleRequisicionCompraBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTabbedPaneRelacionesDetalleRequisicionCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleRequisicionCompra"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameDetalleRequisicionCompra"));
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleRequisicionCompra"));
		}
		
		this.jTableDatosDetalleRequisicionCompra.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarDetalleRequisicionCompra"));
		
		this.jTableDatosDetalleRequisicionCompra.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarDetalleRequisicionCompra"));
		
		this.jButtonNuevoDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"NuevoDetalleRequisicionCompra"));
		
		this.jButtonDuplicarDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"DuplicarDetalleRequisicionCompra"));
		
		this.jButtonCopiarDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"CopiarDetalleRequisicionCompra"));
		
		this.jButtonVerFormDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"VerFormDetalleRequisicionCompra"));
		
		
		this.jButtonNuevoToolBarDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"NuevoToolBarDetalleRequisicionCompra"));
			
		this.jButtonDuplicarToolBarDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"DuplicarToolBarDetalleRequisicionCompra"));
			
		this.jMenuItemNuevoDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoDetalleRequisicionCompra"));
			
		this.jMenuItemDuplicarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarDetalleRequisicionCompra"));		
		
		
		this.jButtonNuevoRelacionesDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"NuevoRelacionesDetalleRequisicionCompra"));
		
		
		this.jButtonNuevoRelacionesToolBarDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarDetalleRequisicionCompra"));
			
		this.jMenuItemNuevoRelacionesDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesDetalleRequisicionCompra"));		
		
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonModificarDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"ModificarDetalleRequisicionCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonModificarToolBarDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleRequisicionCompra"));
			
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemModificarDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleRequisicionCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonActualizarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"ActualizarDetalleRequisicionCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonActualizarToolBarDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleRequisicionCompra"));
				
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemActualizarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleRequisicionCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonEliminarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"EliminarDetalleRequisicionCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonEliminarToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleRequisicionCompra"));
						
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemEliminarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleRequisicionCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonCancelarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"CancelarDetalleRequisicionCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonCancelarToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleRequisicionCompra"));
			
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemCancelarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleRequisicionCompra"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarDetalleRequisicionCompra"));		
		
		
		this.jButtonCerrarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"CerrarDetalleRequisicionCompra"));
		
		
		this.jButtonCerrarToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"CerrarToolBarDetalleRequisicionCompra"));
			
		this.jMenuItemCerrarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemCerrarDetalleRequisicionCompra"));
			
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jMenuItemDetalleCerrarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleRequisicionCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonGuardarCambiosDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosDetalleRequisicionCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonGuardarCambiosToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleRequisicionCompra"));
		}
		
		this.jButtonCopiarToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"CopiarToolBarDetalleRequisicionCompra"));
			
		this.jButtonVerFormToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"VerFormToolBarDetalleRequisicionCompra"));
		
		this.jMenuItemGuardarCambiosDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosDetalleRequisicionCompra"));
			
		this.jMenuItemCopiarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemCopiarDetalleRequisicionCompra"));		
		
		this.jMenuItemVerFormDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemVerFormDetalleRequisicionCompra"));		
		
		
		this.jButtonGuardarCambiosTablaDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleRequisicionCompra"));
		
		
		this.jButtonGuardarCambiosTablaToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarDetalleRequisicionCompra"));
			
		this.jMenuItemGuardarCambiosTablaDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleRequisicionCompra"));		
		
		
		
		this.jButtonRecargarInformacionDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionDetalleRequisicionCompra"));
					
		this.jButtonRecargarInformacionToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarDetalleRequisicionCompra"));
		
		this.jMenuItemRecargarInformacionDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionDetalleRequisicionCompra"));		
		
		
		
		this.jButtonAnterioresDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"AnterioresDetalleRequisicionCompra"));
		
		
		this.jButtonAnterioresToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"AnterioresToolBarDetalleRequisicionCompra"));
		
		this.jMenuItemAnterioresDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresDetalleRequisicionCompra"));		
		
		
		this.jButtonSiguientesDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"SiguientesDetalleRequisicionCompra"));
		
		
		this.jButtonSiguientesToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"SiguientesToolBarDetalleRequisicionCompra"));
			
		this.jMenuItemSiguientesDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesDetalleRequisicionCompra"));
			
		this.jMenuItemAbrirOrderByDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByDetalleRequisicionCompra"));
			
		this.jMenuItemMostrarOcultarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarDetalleRequisicionCompra"));
			
		this.jMenuItemDetalleAbrirOrderByDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByDetalleRequisicionCompra"));
			
		this.jMenuItemDetalleMostarOcultarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarDetalleRequisicionCompra"));		
		
		
		this.jButtonNuevoGuardarCambiosDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosDetalleRequisicionCompra"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarDetalleRequisicionCompra"));
			
		this.jMenuItemNuevoGuardarCambiosDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosDetalleRequisicionCompra"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosDetalleRequisicionCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosDetalleRequisicionCompra"));

		this.jCheckBoxSeleccionadosDetalleRequisicionCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionadosDetalleRequisicionCompra"));
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxTiposAccionesFormularioDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleRequisicionCompra"));
		}
		
		
		this.jComboBoxTiposRelacionesDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"TiposRelacionesDetalleRequisicionCompra"));
			
		this.jComboBoxTiposAccionesDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesDetalleRequisicionCompra"));
					
		this.jComboBoxTiposSeleccionarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"TiposSeleccionarDetalleRequisicionCompra"));
			
		this.jTextFieldValorCampoGeneralDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralDetalleRequisicionCompra"));		
		
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_requisicionDetalleRequisicionCompra.addFocusListener(new TextFieldFocusListener(this,"cantidad_requisicionDetalleRequisicionCompra"));
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_requisicionDetalleRequisicionCompra.addActionListener(new TextFieldActionListener(this,"cantidad_requisicionDetalleRequisicionCompra"));
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_requisicionDetalleRequisicionCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldcantidad_requisicionDetalleRequisicionCompra,"cantidad_requisicionDetalleRequisicionCompra"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_unitarioDetalleRequisicionCompra.addFocusListener(new TextFieldFocusListener(this,"costo_unitarioDetalleRequisicionCompra"));
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_unitarioDetalleRequisicionCompra.addActionListener(new TextFieldActionListener(this,"costo_unitarioDetalleRequisicionCompra"));
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_unitarioDetalleRequisicionCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldcosto_unitarioDetalleRequisicionCompra,"costo_unitarioDetalleRequisicionCompra"));


		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonidDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_requisicion_compraDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_requisicion_compraDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_requisicion_compraDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_requisicion_compraDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_empresaDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_empresaDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_sucursalDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_sucursalDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_ejercicioDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_ejercicioDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_periodoDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_periodoDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_anioDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_anioDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_mesDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_mesDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_bodegaDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_bodegaDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleRequisicionCompraBusqueda"));
		//jButtonid_productoDetalleRequisicionCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetalleRequisicionCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_productoDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_productoDetalleRequisicionCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_productoDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_productoDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_unidadDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_unidadDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetalleRequisicionCompraBusqueda"));
		//jButtonid_centro_costoDetalleRequisicionCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoDetalleRequisicionCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_centro_costoDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleRequisicionCompra"));
		//jButtonid_centro_costoDetalleRequisicionCompraArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_centro_costoDetalleRequisicionCompraArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleRequisicionCompraArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_centro_costoDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_centro_costoDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtoncantidad_requisicionDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_requisicionDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtoncosto_unitarioDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"costo_unitarioDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtoncosto_totalDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"costo_totalDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtondescripcionDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtoncantidad_entregadaDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_entregadaDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtoncantidad_pendienteDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_pendienteDetalleRequisicionCompraBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdBodegaDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetalleRequisicionCompra"));

			this.jButtonFK_IdCentroCostoDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoDetalleRequisicionCompra"));

			this.jButtonBuscarFK_IdCentroCostoid_centro_costoDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleRequisicionCompra"));

			this.jButtonFK_IdProductoDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetalleRequisicionCompra"));

			this.jButtonBuscarFK_IdProductoid_productoDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_productoDetalleRequisicionCompra"));

			this.jButtonFK_IdRequisicionCompraDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdRequisicionCompraDetalleRequisicionCompra"));

			this.jButtonFK_IdUnidadDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetalleRequisicionCompra"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoDetalleRequisicionCompra!=null) {
				this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleRequisicionCompra"));
				this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleRequisicionCompra"));
				this.jInternalFrameReporteDinamicoDetalleRequisicionCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleRequisicionCompra"));
			}
			
			//this.jButtonCerrarReporteDinamicoDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleRequisicionCompra"));				
			//this.jButtonGenerarReporteDinamicoDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleRequisicionCompra"));
			//this.jButtonGenerarExcelReporteDinamicoDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleRequisicionCompra"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionDetalleRequisicionCompra!=null) {
				this.jInternalFrameImportacionDetalleRequisicionCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleRequisicionCompra"));
				this.jInternalFrameImportacionDetalleRequisicionCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleRequisicionCompra"));
				this.jInternalFrameImportacionDetalleRequisicionCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleRequisicionCompra"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByDetalleRequisicionCompra"));
			
			this.jButtonAbrirOrderByToolBarDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarDetalleRequisicionCompra"));			
			
			if(this.jInternalFrameOrderByDetalleRequisicionCompra!=null) {
				this.jInternalFrameOrderByDetalleRequisicionCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleRequisicionCompra"));				
			}
			
			
		}
		
		this.jButtonAbrirTotalesDetalleRequisicionCompra.addActionListener (new ButtonActionListener(this,"AbrirTotalesDetalleRequisicionCompra"));
		
		if(this.jInternalFrameTotalesDetalleRequisicionCompra!=null) {
			this.jInternalFrameTotalesDetalleRequisicionCompra.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetalleRequisicionCompra"));
		}
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTabbedPaneRelacionesDetalleRequisicionCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleRequisicionCompra"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameDetalleRequisicionCompra();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormDetalleRequisicionCompra = (JInternalFrameBase)event.getSource();
	            	
	            DetalleRequisicionCompraBeanSwingJInternalFrame jInternalFrameParent=(DetalleRequisicionCompraBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleRequisicionCompra.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarDetalleRequisicionCompraActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosDetalleRequisicionCompra.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosDetalleRequisicionCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosDetalleRequisicionCompra.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosDetalleRequisicionCompra.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoDetalleRequisicionCompra";
		inputMap = this.jButtonNuevoDetalleRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoDetalleRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesDetalleRequisicionCompra";
		inputMap = this.jButtonNuevoRelacionesDetalleRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesDetalleRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleRequisicionCompraActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarDetalleRequisicionCompra";
		inputMap = this.jButtonModificarDetalleRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarDetalleRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarDetalleRequisicionCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarDetalleRequisicionCompra";
		inputMap = this.jButtonActualizarDetalleRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarDetalleRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarDetalleRequisicionCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarDetalleRequisicionCompra";
		inputMap = this.jButtonEliminarDetalleRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarDetalleRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarDetalleRequisicionCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarDetalleRequisicionCompra";
		inputMap = this.jButtonCancelarDetalleRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarDetalleRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarDetalleRequisicionCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarDetalleRequisicionCompra";
		inputMap = this.jButtonCerrarDetalleRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarDetalleRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarDetalleRequisicionCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonGuardarCambiosDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosDetalleRequisicionCompra";
		inputMap = this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonGuardarCambiosDetalleRequisicionCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonGuardarCambiosDetalleRequisicionCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosDetalleRequisicionCompra.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosDetalleRequisicionCompraItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesDetalleRequisicionCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesDetalleRequisicionCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarDetalleRequisicionCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarDetalleRequisicionCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralDetalleRequisicionCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralDetalleRequisicionCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonidDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_requisicion_compraDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_requisicion_compraDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_requisicion_compraDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_requisicion_compraDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_empresaDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_empresaDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_sucursalDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_sucursalDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_ejercicioDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_ejercicioDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_periodoDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_periodoDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_anioDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_anioDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_mesDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_mesDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_bodegaDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_bodegaDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleRequisicionCompraBusqueda"));
		//jButtonid_productoDetalleRequisicionCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetalleRequisicionCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_productoDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_productoDetalleRequisicionCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_productoDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_productoDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetalleRequisicionCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_unidadDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_unidadDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetalleRequisicionCompraBusqueda"));
		//jButtonid_centro_costoDetalleRequisicionCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoDetalleRequisicionCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_centro_costoDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleRequisicionCompra"));
		//jButtonid_centro_costoDetalleRequisicionCompraArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_centro_costoDetalleRequisicionCompraArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleRequisicionCompraArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_centro_costoDetalleRequisicionCompraUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleRequisicionCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_centro_costoDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtoncantidad_requisicionDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_requisicionDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtoncosto_unitarioDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"costo_unitarioDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtoncosto_totalDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"costo_totalDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtondescripcionDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtoncantidad_entregadaDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_entregadaDetalleRequisicionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtoncantidad_pendienteDetalleRequisicionCompraBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_pendienteDetalleRequisicionCompraBusqueda"));
		
		
		this.jButtonFK_IdBodegaDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetalleRequisicionCompra"));

		this.jButtonFK_IdCentroCostoDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoDetalleRequisicionCompra"));

		this.jButtonBuscarFK_IdCentroCostoid_centro_costoDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleRequisicionCompra"));

		this.jButtonFK_IdProductoDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetalleRequisicionCompra"));

		this.jButtonBuscarFK_IdProductoid_productoDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"id_productoDetalleRequisicionCompra"));

		this.jButtonFK_IdRequisicionCompraDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdRequisicionCompraDetalleRequisicionCompra"));

		this.jButtonFK_IdUnidadDetalleRequisicionCompra.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetalleRequisicionCompra"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionDetalleRequisicionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionDetalleRequisicionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarDetalleRequisicionCompraActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarDetalleRequisicionCompra.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosDetalleRequisicionCompra(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(DetalleRequisicionCompra detallerequisicioncompraAux:this.detallerequisicioncompraLogic.getDetalleRequisicionCompras()) {
					detallerequisicioncompraAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleRequisicionCompra detallerequisicioncompraAux:detallerequisicioncompras) {
					detallerequisicioncompraAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosDetalleRequisicionCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleRequisicionCompra detallerequisicioncompraAux:this.detallerequisicioncompraLogic.getDetalleRequisicionCompras()) {
						detallerequisicioncompraAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleRequisicionCompra detallerequisicioncompraAux:detallerequisicioncompras) {
						detallerequisicioncompraAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(DetalleRequisicionCompra detallerequisicioncompraAux:this.detallerequisicioncompraLogic.getDetalleRequisicionCompras()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleRequisicionCompra detallerequisicioncompraAux:detallerequisicioncompras) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleRequisicionCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleRequisicionCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosDetalleRequisicionCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosDetalleRequisicionCompra.getSelectedRows();
			
			DetalleRequisicionCompra detallerequisicioncompraLocal=new DetalleRequisicionCompra();
			
			//this.seleccionarTodosDetalleRequisicionCompra(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallerequisicioncompraLocal =(DetalleRequisicionCompra) this.detallerequisicioncompraLogic.getDetalleRequisicionCompras().toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					detallerequisicioncompraLocal =(DetalleRequisicionCompra) this.detallerequisicioncompras.toArray()[this.jTableDatosDetalleRequisicionCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				detallerequisicioncompraLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleRequisicionCompra detallerequisicioncompraAux:this.detallerequisicioncompraLogic.getDetalleRequisicionCompras()) {
						detallerequisicioncompraAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleRequisicionCompra detallerequisicioncompraAux:detallerequisicioncompras) {
						detallerequisicioncompraAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleRequisicionCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleRequisicionCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleRequisicionCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualDetalleRequisicionCompraItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarDetalleRequisicionCompraParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralDetalleRequisicionCompraActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralDetalleRequisicionCompra.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleRequisicionCompra detallerequisicioncompraAux:this.detallerequisicioncompraLogic.getDetalleRequisicionCompras()) {
				
						if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION)) {
							existe=true;
							detallerequisicioncompraAux.setcantidad_requisicion(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOUNITARIO)) {
							existe=true;
							detallerequisicioncompraAux.setcosto_unitario(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOTOTAL)) {
							existe=true;
							detallerequisicioncompraAux.setcosto_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detallerequisicioncompraAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA)) {
							existe=true;
							detallerequisicioncompraAux.setcantidad_entregada(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE)) {
							existe=true;
							detallerequisicioncompraAux.setcantidad_pendiente(Integer.parseInt(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleRequisicionCompra detallerequisicioncompraAux:detallerequisicioncompras) {
					
						if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION)) {
							existe=true;
							detallerequisicioncompraAux.setcantidad_requisicion(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOUNITARIO)) {
							existe=true;
							detallerequisicioncompraAux.setcosto_unitario(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOTOTAL)) {
							existe=true;
							detallerequisicioncompraAux.setcosto_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detallerequisicioncompraAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA)) {
							existe=true;
							detallerequisicioncompraAux.setcantidad_entregada(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE)) {
							existe=true;
							detallerequisicioncompraAux.setcantidad_pendiente(Integer.parseInt(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesDetalleRequisicionCompraActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioDetalleRequisicionCompra=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesDetalleRequisicionCompra.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxTiposAccionesFormularioDetalleRequisicionCompra.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteDetalleRequisicionCompra) {				
					conSplash=true;//false;										
					
					//this.startProcessDetalleRequisicionCompra(conSplash);
				
					this.generarReporteDetalleRequisicionComprasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleRequisicionCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxTiposAccionesFormularioDetalleRequisicionCompra.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoDetalleRequisicionComprasSeleccionados();
				//this.jComboBoxTiposAccionesDetalleRequisicionCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleRequisicionComprasSeleccionados(false);
				//this.jComboBoxTiposAccionesDetalleRequisicionCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleRequisicionComprasSeleccionados(true);
				//this.jComboBoxTiposAccionesDetalleRequisicionCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleRequisicionCompra();
				
				this.exportarDetalleRequisicionComprasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleRequisicionCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxTiposAccionesFormularioDetalleRequisicionCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionDetalleRequisicionCompras();
				//this.importarDetalleRequisicionCompras();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleRequisicionCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxTiposAccionesFormularioDetalleRequisicionCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleRequisicionCompra();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelDetalleRequisicionComprasSeleccionados();
				//this.jComboBoxTiposAccionesDetalleRequisicionCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Detalle Requisicion Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessDetalleRequisicionCompra();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoDetalleRequisicionCompra)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyDetalleRequisicionCompra(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleRequisicionCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxTiposAccionesFormularioDetalleRequisicionCompra.setSelectedIndex(0);					
				}	
			} 			
			else if(DetalleRequisicionCompraBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteDetalleRequisicionCompra) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessDetalleRequisicionCompra(conSplash);
					
						//this.actualizarParametrosGeneralDetalleRequisicionCompra();
						
						this.generarReporteProcesoAccionDetalleRequisicionComprasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesDetalleRequisicionCompra.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxTiposAccionesFormularioDetalleRequisicionCompra.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Detalle Requisicion CompraS SELECCIONADOS?", "MANTENIMIENTO DE Detalle Requisicion Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessDetalleRequisicionCompra();
				
						this.actualizarParametrosGeneralDetalleRequisicionCompra();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.detallerequisicioncompraReturnGeneral=detallerequisicioncompraLogic.procesarAccionDetalleRequisicionComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.detallerequisicioncompraLogic.getDetalleRequisicionCompras(),this.detallerequisicioncompraParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarDetalleRequisicionCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetalleRequisicionCompra.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxTiposAccionesFormularioDetalleRequisicionCompra.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralDetalleRequisicionCompra();
					
					DetalleRequisicionCompraBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarDetalleRequisicionCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetalleRequisicionCompra.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxTiposAccionesFormularioDetalleRequisicionCompra.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessDetalleRequisicionCompra(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesDetalleRequisicionCompraActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessDetalleRequisicionCompra();
			
			if(this.jInternalFrameDetalleFormDetalleRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<DetalleRequisicionCompra> detallerequisicioncomprasSeleccionados=new ArrayList<DetalleRequisicionCompra>();		
			DetalleRequisicionCompra detallerequisicioncompra=new DetalleRequisicionCompra();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingDetalleRequisicionCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesDetalleRequisicionCompra.getSelectedItem();
			
			
			
			
			detallerequisicioncomprasSeleccionados=this.getDetalleRequisicionComprasSeleccionados(true);
			//this.sTipoAccion;
			
			if(detallerequisicioncomprasSeleccionados.size()==1) {
				for(DetalleRequisicionCompra detallerequisicioncompraAux:detallerequisicioncomprasSeleccionados) {
					detallerequisicioncompra=detallerequisicioncompraAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessDetalleRequisicionCompra();
			
      		//this.finishProcessDetalleRequisicionCompra(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarDetalleRequisicionCompraReturnGeneral() throws Exception {
		if(this.detallerequisicioncompraReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.detallerequisicioncompraReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.detallerequisicioncompraReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.detallerequisicioncompraReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.detallerequisicioncompraReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.detallerequisicioncompraReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingDetalleRequisicionCompra(false);
		}
		
		if(this.detallerequisicioncompraReturnGeneral.getConRetornoLista() || this.detallerequisicioncompraReturnGeneral.getConRetornoObjeto()) {
			if(this.detallerequisicioncompraReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detallerequisicioncompraLogic.setDetalleRequisicionCompras(this.detallerequisicioncompraReturnGeneral.getDetalleRequisicionCompras());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.detallerequisicioncompraReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detallerequisicioncompraLogic.setDetalleRequisicionCompra(this.detallerequisicioncompraReturnGeneral.getDetalleRequisicionCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingDetalleRequisicionCompra(false);
		}
	}
	
	public void actualizarParametrosGeneralDetalleRequisicionCompra() throws Exception {
		
		
	}
	
	public ArrayList<DetalleRequisicionCompra> getDetalleRequisicionComprasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<DetalleRequisicionCompra> detallerequisicioncomprasSeleccionados=new ArrayList<DetalleRequisicionCompra>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioDetalleRequisicionCompra) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(DetalleRequisicionCompra detallerequisicioncompraAux:detallerequisicioncompraLogic.getDetalleRequisicionCompras()) {
					if(detallerequisicioncompraAux.getIsSelected()) {
						detallerequisicioncomprasSeleccionados.add(detallerequisicioncompraAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleRequisicionCompra detallerequisicioncompraAux:this.detallerequisicioncompras) {
					if(detallerequisicioncompraAux.getIsSelected()) {
						detallerequisicioncomprasSeleccionados.add(detallerequisicioncompraAux);				
					}
				}
			}
			
			if(detallerequisicioncomprasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						detallerequisicioncomprasSeleccionados.addAll(this.detallerequisicioncompraLogic.getDetalleRequisicionCompras());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						detallerequisicioncomprasSeleccionados.addAll(this.detallerequisicioncompras);				
					}
				}
			}
		} else {
			detallerequisicioncomprasSeleccionados.add(this.detallerequisicioncompra);
		}
		
		return detallerequisicioncomprasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteDetalleRequisicionComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalDetalleRequisicionComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoDetalleRequisicionComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleRequisicionComprasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleRequisicionComprasSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Detalle Requisicion Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesDetalleRequisicionComprasSeleccionados() throws Exception {
		ArrayList<DetalleRequisicionCompra> detallerequisicioncomprasSeleccionados=new ArrayList<DetalleRequisicionCompra>();		
		
		detallerequisicioncomprasSeleccionados=this.getDetalleRequisicionComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteDetalleRequisicionCompras("Todos",detallerequisicioncomprasSeleccionados);
		
	}	
	
	public void generarReporteNormalDetalleRequisicionComprasSeleccionados() throws Exception {
		ArrayList<DetalleRequisicionCompra> detallerequisicioncomprasSeleccionados=new ArrayList<DetalleRequisicionCompra>();		
		
		detallerequisicioncomprasSeleccionados=this.getDetalleRequisicionComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteDetalleRequisicionCompras("Todos",detallerequisicioncomprasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionDetalleRequisicionComprasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<DetalleRequisicionCompra> detallerequisicioncomprasSeleccionados=new ArrayList<DetalleRequisicionCompra>();
		
		detallerequisicioncomprasSeleccionados=this.getDetalleRequisicionComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteDetalleRequisicionCompras("Todos",detallerequisicioncomprasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoDetalleRequisicionComprasSeleccionados() throws Exception {
		ArrayList<DetalleRequisicionCompra> detallerequisicioncomprasSeleccionados=new ArrayList<DetalleRequisicionCompra>();		
		
		
		this.abrirInicializarFrameReporteDinamicoDetalleRequisicionCompra();
		
		
		detallerequisicioncomprasSeleccionados=this.getDetalleRequisicionComprasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoDetalleRequisicionCompra();
		
		
		//this.generarReporteDetalleRequisicionCompras("Todos",detallerequisicioncomprasSeleccionados ,detallerequisicioncompraImplementable,detallerequisicioncompraImplementableHome);
	}
	
	public void mostrarImportacionDetalleRequisicionCompras() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionDetalleRequisicionCompra();
		
		this.abrirFrameImportacionDetalleRequisicionCompra();		
		
			
		//this.generarReporteDetalleRequisicionCompras("Todos",detallerequisicioncomprasSeleccionados ,detallerequisicioncompraImplementable,detallerequisicioncompraImplementableHome);
	}
	
	public void importarDetalleRequisicionCompras() throws Exception {		
	
	}
	
	public void exportarDetalleRequisicionComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelDetalleRequisicionComprasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoDetalleRequisicionComprasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlDetalleRequisicionComprasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Detalle Requisicion Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoDetalleRequisicionComprasSeleccionados() throws Exception {
		ArrayList<DetalleRequisicionCompra> detallerequisicioncomprasSeleccionados=new ArrayList<DetalleRequisicionCompra>();		
		
		detallerequisicioncomprasSeleccionados=this.getDetalleRequisicionComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallerequisicioncompra."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarDetalleRequisicionCompra(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(DetalleRequisicionCompra detallerequisicioncompraAux:detallerequisicioncomprasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarDetalleRequisicionCompra(detallerequisicioncompraAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//detallerequisicioncompraAux.setsDetalleGeneralEntityReporte(detallerequisicioncompraAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarDetalleRequisicionCompra(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_IDREQUISICIONCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_IDBODEGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_IDPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_IDUNIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_IDCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOUNITARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOTOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=detallerequisicioncompra.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getrequisicioncompra_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getbodega_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getunidad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getcentrocosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getcantidad_requisicion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getcosto_unitario().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getcosto_total().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getcantidad_entregada().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallerequisicioncompra.getcantidad_pendiente().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelDetalleRequisicionComprasSeleccionados() throws Exception {
		ArrayList<DetalleRequisicionCompra> detallerequisicioncomprasSeleccionados=new ArrayList<DetalleRequisicionCompra>();		
		
		detallerequisicioncomprasSeleccionados=this.getDetalleRequisicionComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallerequisicioncompra.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("DetalleRequisicionCompras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelDetalleRequisicionCompra(row);				
				iRow++;
			}				
			
			for(DetalleRequisicionCompra detallerequisicioncompraAux:detallerequisicioncomprasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelDetalleRequisicionCompra(detallerequisicioncompraAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlDetalleRequisicionComprasSeleccionados() throws Exception {
		ArrayList<DetalleRequisicionCompra> detallerequisicioncomprasSeleccionados=new ArrayList<DetalleRequisicionCompra>();		
		
		detallerequisicioncomprasSeleccionados=this.getDetalleRequisicionComprasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallerequisicioncompra.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("detallerequisicioncompras");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("detallerequisicioncompra");
			//elementRoot.appendChild(element);
		
			for(DetalleRequisicionCompra detallerequisicioncompraAux:detallerequisicioncomprasSeleccionados) {
				element = document.createElement("detallerequisicioncompra");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlDetalleRequisicionCompra(detallerequisicioncompraAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Requisicion Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelDetalleRequisicionCompra(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDREQUISICIONCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDBODEGA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDUNIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_IDCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOUNITARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_COSTOTOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getrequisicioncompra_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getbodega_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getunidad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getcentrocosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getcantidad_requisicion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getcosto_unitario());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getcosto_total());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getcantidad_entregada());
		cell = row.createCell(iColumn++);cell.setCellValue(detallerequisicioncompra.getcantidad_pendiente());				
	}
	
	public void setFilaDatosExportarXmlDetalleRequisicionCompra(DetalleRequisicionCompra detallerequisicioncompra,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(DetalleRequisicionCompraConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(detallerequisicioncompra.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(DetalleRequisicionCompraConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(detallerequisicioncompra.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementrequisicioncompra_descripcion = document.createElement(DetalleRequisicionCompraConstantesFunciones.IDREQUISICIONCOMPRA);
		elementrequisicioncompra_descripcion.appendChild(document.createTextNode(detallerequisicioncompra.getrequisicioncompra_descripcion()));
		element.appendChild(elementrequisicioncompra_descripcion);

		Element elementempresa_descripcion = document.createElement(DetalleRequisicionCompraConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(detallerequisicioncompra.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(DetalleRequisicionCompraConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(detallerequisicioncompra.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(DetalleRequisicionCompraConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(detallerequisicioncompra.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(DetalleRequisicionCompraConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(detallerequisicioncompra.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(DetalleRequisicionCompraConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(detallerequisicioncompra.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(DetalleRequisicionCompraConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(detallerequisicioncompra.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementbodega_descripcion = document.createElement(DetalleRequisicionCompraConstantesFunciones.IDBODEGA);
		elementbodega_descripcion.appendChild(document.createTextNode(detallerequisicioncompra.getbodega_descripcion()));
		element.appendChild(elementbodega_descripcion);

		Element elementproducto_descripcion = document.createElement(DetalleRequisicionCompraConstantesFunciones.IDPRODUCTO);
		elementproducto_descripcion.appendChild(document.createTextNode(detallerequisicioncompra.getproducto_descripcion()));
		element.appendChild(elementproducto_descripcion);

		Element elementunidad_descripcion = document.createElement(DetalleRequisicionCompraConstantesFunciones.IDUNIDAD);
		elementunidad_descripcion.appendChild(document.createTextNode(detallerequisicioncompra.getunidad_descripcion()));
		element.appendChild(elementunidad_descripcion);

		Element elementcentrocosto_descripcion = document.createElement(DetalleRequisicionCompraConstantesFunciones.IDCENTROCOSTO);
		elementcentrocosto_descripcion.appendChild(document.createTextNode(detallerequisicioncompra.getcentrocosto_descripcion()));
		element.appendChild(elementcentrocosto_descripcion);

		Element elementcantidad_requisicion = document.createElement(DetalleRequisicionCompraConstantesFunciones.CANTIDADREQUISICION);
		elementcantidad_requisicion.appendChild(document.createTextNode(detallerequisicioncompra.getcantidad_requisicion().toString().trim()));
		element.appendChild(elementcantidad_requisicion);

		Element elementcosto_unitario = document.createElement(DetalleRequisicionCompraConstantesFunciones.COSTOUNITARIO);
		elementcosto_unitario.appendChild(document.createTextNode(detallerequisicioncompra.getcosto_unitario().toString().trim()));
		element.appendChild(elementcosto_unitario);

		Element elementcosto_total = document.createElement(DetalleRequisicionCompraConstantesFunciones.COSTOTOTAL);
		elementcosto_total.appendChild(document.createTextNode(detallerequisicioncompra.getcosto_total().toString().trim()));
		element.appendChild(elementcosto_total);

		Element elementdescripcion = document.createElement(DetalleRequisicionCompraConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(detallerequisicioncompra.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementcantidad_entregada = document.createElement(DetalleRequisicionCompraConstantesFunciones.CANTIDADENTREGADA);
		elementcantidad_entregada.appendChild(document.createTextNode(detallerequisicioncompra.getcantidad_entregada().toString().trim()));
		element.appendChild(elementcantidad_entregada);

		Element elementcantidad_pendiente = document.createElement(DetalleRequisicionCompraConstantesFunciones.CANTIDADPENDIENTE);
		elementcantidad_pendiente.appendChild(document.createTextNode(detallerequisicioncompra.getcantidad_pendiente().toString().trim()));
		element.appendChild(elementcantidad_pendiente);
	}
	
	public void generarReporteGroupGenericoDetalleRequisicionComprasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<DetalleRequisicionCompra> detallerequisicioncomprasSeleccionados=new ArrayList<DetalleRequisicionCompra>();
		
		detallerequisicioncomprasSeleccionados=this.getDetalleRequisicionComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoDetalleRequisicionCompra(detallerequisicioncomprasSeleccionados);
		
		this.generarReporteDetalleRequisicionCompras("Todos",detallerequisicioncomprasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoDetalleRequisicionCompra(ArrayList<DetalleRequisicionCompra> detallerequisicioncomprasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(DetalleRequisicionCompra detallerequisicioncompraAux:detallerequisicioncomprasSeleccionados) {
				detallerequisicioncompraAux.setsDetalleGeneralEntityReporte(detallerequisicioncompraAux.toString());
			
				if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_IDREQUISICIONCOMPRA)) {
					existe=true;
					detallerequisicioncompraAux.setsDescripcionGeneralEntityReporte1(detallerequisicioncompraAux.getrequisicioncompra_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					detallerequisicioncompraAux.setsDescripcionGeneralEntityReporte1(detallerequisicioncompraAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					detallerequisicioncompraAux.setsDescripcionGeneralEntityReporte1(detallerequisicioncompraAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					detallerequisicioncompraAux.setsDescripcionGeneralEntityReporte1(detallerequisicioncompraAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					detallerequisicioncompraAux.setsDescripcionGeneralEntityReporte1(detallerequisicioncompraAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					detallerequisicioncompraAux.setsDescripcionGeneralEntityReporte1(detallerequisicioncompraAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					detallerequisicioncompraAux.setsDescripcionGeneralEntityReporte1(detallerequisicioncompraAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_IDBODEGA)) {
					existe=true;
					detallerequisicioncompraAux.setsDescripcionGeneralEntityReporte1(detallerequisicioncompraAux.getbodega_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_IDPRODUCTO)) {
					existe=true;
					detallerequisicioncompraAux.setsDescripcionGeneralEntityReporte1(detallerequisicioncompraAux.getproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_IDUNIDAD)) {
					existe=true;
					detallerequisicioncompraAux.setsDescripcionGeneralEntityReporte1(detallerequisicioncompraAux.getunidad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_IDCENTROCOSTO)) {
					existe=true;
					detallerequisicioncompraAux.setsDescripcionGeneralEntityReporte1(detallerequisicioncompraAux.getcentrocosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADREQUISICION)) {
					existe=true;
					detallerequisicioncompraAux.setsDescripcionGeneralEntityReporte1(detallerequisicioncompraAux.getcantidad_requisicion().toString());
				}
				 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					detallerequisicioncompraAux.setsDescripcionGeneralEntityReporte1(detallerequisicioncompraAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADENTREGADA)) {
					existe=true;
					detallerequisicioncompraAux.setsDescripcionGeneralEntityReporte1(detallerequisicioncompraAux.getcantidad_entregada().toString());
				}
				 else if(sTipoSeleccionar.equals(DetalleRequisicionCompraConstantesFunciones.LABEL_CANTIDADPENDIENTE)) {
					existe=true;
					detallerequisicioncompraAux.setsDescripcionGeneralEntityReporte1(detallerequisicioncompraAux.getcantidad_pendiente().toString());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleRequisicionCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesDetalleRequisicionCompra(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoDetalleRequisicionCompra=true;
				this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=true;
				this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra=true;
			}
			
			this.isVisibilidadCeldaModificarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaActualizarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaEliminarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaCancelarDetalleRequisicionCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaModificarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaActualizarDetalleRequisicionCompra=true;
			this.isVisibilidadCeldaEliminarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaCancelarDetalleRequisicionCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaModificarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaActualizarDetalleRequisicionCompra=true;
			this.isVisibilidadCeldaEliminarDetalleRequisicionCompra=true;
			this.isVisibilidadCeldaCancelarDetalleRequisicionCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaModificarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaActualizarDetalleRequisicionCompra=true;
			this.isVisibilidadCeldaEliminarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaCancelarDetalleRequisicionCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoDetalleRequisicionCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra=true;
			this.isVisibilidadCeldaModificarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaActualizarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaEliminarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaCancelarDetalleRequisicionCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaActualizarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaEliminarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaCancelarDetalleRequisicionCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaModificarDetalleRequisicionCompra=true;
			this.isVisibilidadCeldaActualizarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaEliminarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaCancelarDetalleRequisicionCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleRequisicionCompra=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(DetalleRequisicionCompraJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoDetalleRequisicionCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra=true;
		} else {
			this.actualizarEstadoPanelsDetalleRequisicionCompra(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarDetalleRequisicionCompra=false;
			//this.isVisibilidadCeldaVerFormDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaDuplicarDetalleRequisicionCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=false;
		} else {
			this.isVisibilidadCeldaNuevoDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleRequisicionCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
			if(!detallerequisicioncompraSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=false;												
			}
			
			this.jButtonCerrarDetalleRequisicionCompra.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleRequisicionCompra=false;
		}
		
		if(!this.permiteMantenimiento(this.detallerequisicioncompra)) {
			this.isVisibilidadCeldaActualizarDetalleRequisicionCompra=false;
			this.isVisibilidadCeldaEliminarDetalleRequisicionCompra=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleRequisicionCompra() {
	}
	
	public void actualizarEstadoPanelsDetalleRequisicionCompra(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionDetalleRequisicionCompra!=null) {
				this.jScrollPanelDatosEdicionDetalleRequisicionCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleRequisicionCompra!=null) {
				this.jScrollPanelDatosDetalleRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleRequisicionCompra!=null) {
				this.jPanelPaginacionDetalleRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleRequisicionCompra!=null) {
				this.jPanelParametrosReportesDetalleRequisicionCompra.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionDetalleRequisicionCompra!=null) {
				this.jScrollPanelDatosEdicionDetalleRequisicionCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosDetalleRequisicionCompra!=null) {
				this.jScrollPanelDatosDetalleRequisicionCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleRequisicionCompra!=null) {
				this.jPanelPaginacionDetalleRequisicionCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleRequisicionCompra!=null) {
				this.jPanelParametrosReportesDetalleRequisicionCompra.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionDetalleRequisicionCompra!=null) {
				this.jScrollPanelDatosEdicionDetalleRequisicionCompra.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetalleRequisicionCompra!=null) {
				this.jScrollPanelDatosDetalleRequisicionCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleRequisicionCompra!=null) {
				this.jPanelPaginacionDetalleRequisicionCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleRequisicionCompra!=null) {
				this.jPanelParametrosReportesDetalleRequisicionCompra.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionDetalleRequisicionCompra!=null) {
				this.jScrollPanelDatosEdicionDetalleRequisicionCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetalleRequisicionCompra!=null) {
				this.jScrollPanelDatosDetalleRequisicionCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleRequisicionCompra!=null) {
				this.jPanelPaginacionDetalleRequisicionCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleRequisicionCompra!=null) {
				this.jPanelParametrosReportesDetalleRequisicionCompra.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionDetalleRequisicionCompra!=null) {
				this.jScrollPanelDatosEdicionDetalleRequisicionCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleRequisicionCompra!=null) {
				this.jScrollPanelDatosDetalleRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleRequisicionCompra!=null) {
				this.jPanelPaginacionDetalleRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleRequisicionCompra!=null) {
				this.jPanelParametrosReportesDetalleRequisicionCompra.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionDetalleRequisicionCompra!=null) {
				this.jScrollPanelDatosEdicionDetalleRequisicionCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleRequisicionCompra!=null) {
				this.jScrollPanelDatosDetalleRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleRequisicionCompra!=null) {
				this.jPanelPaginacionDetalleRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleRequisicionCompra!=null) {
				this.jPanelParametrosReportesDetalleRequisicionCompra.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionDetalleRequisicionCompra!=null) {
				this.jScrollPanelDatosEdicionDetalleRequisicionCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleRequisicionCompra!=null) {
				this.jScrollPanelDatosDetalleRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleRequisicionCompra!=null) {
				this.jPanelPaginacionDetalleRequisicionCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleRequisicionCompra!=null) {
				this.jPanelParametrosReportesDetalleRequisicionCompra.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasDetalleRequisicionCompra!=null) {
					this.jTabbedPaneBusquedasDetalleRequisicionCompra.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesDetalleRequisicionCompra!=null) {
				this.jPanelParametrosReportesDetalleRequisicionCompra.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.detallerequisicioncompraSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleRequisicionCompra!=null) {
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesDetalleRequisicionCompra!=null) {
				this.jPanelParametrosReportesDetalleRequisicionCompra.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaRequisicionCompra(Boolean isParaRequisicionCompra){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaRequisicionCompraNegation=!isParaRequisicionCompra;

			this.isVisibilidadFK_IdBodega=isParaRequisicionCompraNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdBodegaDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdCentroCosto=isParaRequisicionCompraNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdCentroCostoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdProducto=isParaRequisicionCompraNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdProductoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdRequisicionCompra=isParaRequisicionCompra;
			if(!this.isVisibilidadFK_IdRequisicionCompra) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdRequisicionCompraDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdUnidad=isParaRequisicionCompraNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdUnidadDetalleRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdBodega=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdBodegaDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdCentroCosto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdCentroCostoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdProducto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdProductoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdRequisicionCompra=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdRequisicionCompra) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdRequisicionCompraDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdUnidad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdUnidadDetalleRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdBodega=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdBodegaDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdCentroCosto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdCentroCostoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdProducto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdProductoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdRequisicionCompra=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdRequisicionCompra) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdRequisicionCompraDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdUnidad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdUnidadDetalleRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdBodega=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdBodegaDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdCentroCosto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdCentroCostoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdProducto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdProductoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdRequisicionCompra=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdRequisicionCompra) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdRequisicionCompraDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdUnidad=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdUnidadDetalleRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdBodega=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdBodegaDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdCentroCosto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdCentroCostoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdProducto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdProductoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdRequisicionCompra=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdRequisicionCompra) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdRequisicionCompraDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdUnidad=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdUnidadDetalleRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdBodega=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdBodegaDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdCentroCosto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdCentroCostoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdProducto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdProductoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdRequisicionCompra=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdRequisicionCompra) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdRequisicionCompraDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdUnidad=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdUnidadDetalleRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdBodega=isParaMesNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdBodegaDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdCentroCosto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdCentroCostoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdProducto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdProductoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdRequisicionCompra=isParaMesNegation;
			if(!this.isVisibilidadFK_IdRequisicionCompra) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdRequisicionCompraDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdUnidad=isParaMesNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdUnidadDetalleRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodega(Boolean isParaBodega){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaNegation=!isParaBodega;

			this.isVisibilidadFK_IdBodega=isParaBodega;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdBodegaDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdCentroCosto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdCentroCostoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdProducto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdProductoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdRequisicionCompra=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdRequisicionCompra) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdRequisicionCompraDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdUnidad=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdUnidadDetalleRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaProducto(Boolean isParaProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaProductoNegation=!isParaProducto;

			this.isVisibilidadFK_IdBodega=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdBodegaDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdCentroCosto=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdCentroCostoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdProducto=isParaProducto;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdProductoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdRequisicionCompra=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdRequisicionCompra) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdRequisicionCompraDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdUnidad=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdUnidadDetalleRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaUnidad(Boolean isParaUnidad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUnidadNegation=!isParaUnidad;

			this.isVisibilidadFK_IdBodega=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdBodegaDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdCentroCosto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdCentroCostoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdProducto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdProductoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdRequisicionCompra=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdRequisicionCompra) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdRequisicionCompraDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdUnidad=isParaUnidad;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdUnidadDetalleRequisicionCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroCosto(Boolean isParaCentroCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroCostoNegation=!isParaCentroCosto;

			this.isVisibilidadFK_IdBodega=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdBodegaDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdCentroCosto=isParaCentroCosto;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdCentroCostoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdProducto=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdProductoDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdRequisicionCompra=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdRequisicionCompra) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdRequisicionCompraDetalleRequisicionCompra);}

			this.isVisibilidadFK_IdUnidad=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(jPanelFK_IdUnidadDetalleRequisicionCompra);}
		}
		
	}
	
	
	
	

	public String registrarSesionDetalleRequisicionCompraParaBusquedaProductos() throws Exception {
		Boolean isPaginaPopupProducto=false;

		try {

			if(detallerequisicioncompraSessionBean==null) {
				detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}

			if(productoSessionBean==null) {
				productoSessionBean=new ProductoSessionBean();
			}

			productoSessionBean.setsPathNavegacionActual(detallerequisicioncompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoConstantesFunciones.SCLASSWEBTITULO);
			productoSessionBean.setisPermiteRecargarInformacion(false);
			productoSessionBean.setisPaginaPopup(true);
			isPaginaPopupProducto=productoSessionBean.getisPaginaPopup();
			productoSessionBean.setisPaginaPopup(false);
			productoSessionBean.setEstaModoBusqueda(true);
			productoSessionBean.setsFuncionBusquedaRapida("window.opener.detallerequisicioncompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_producto(TO_REPLACE);");
			productoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProducto(true);
			productoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProducto(DetalleRequisicionCompraConstantesFunciones.SNOMBREOPCION);
			//productoSessionBean.setisBusquedaDesdeForeignKeySesionDetalleRequisicionCompra(true);
			//productoSessionBean.setlidDetalleRequisicionCompraActual(this.idDetalleRequisicionCompraActual);

			detallerequisicioncompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleRequisicionCompra(true);
			detallerequisicioncompraSessionBean.setlIdDetalleRequisicionCompraActualForeignKey(this.idDetalleRequisicionCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionDetalleRequisicionCompraParaBusquedaCentroCostos() throws Exception {
		Boolean isPaginaPopupCentroCosto=false;

		try {

			if(detallerequisicioncompraSessionBean==null) {
				detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
			}

			if(centrocostoSessionBean==null) {
				centrocostoSessionBean=new CentroCostoSessionBean();
			}

			centrocostoSessionBean.setsPathNavegacionActual(detallerequisicioncompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CentroCostoConstantesFunciones.SCLASSWEBTITULO);
			centrocostoSessionBean.setisPermiteRecargarInformacion(false);
			centrocostoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCentroCosto=centrocostoSessionBean.getisPaginaPopup();
			centrocostoSessionBean.setisPaginaPopup(false);
			centrocostoSessionBean.setEstaModoBusqueda(true);
			centrocostoSessionBean.setsFuncionBusquedaRapida("window.opener.detallerequisicioncompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_centro_costo(TO_REPLACE);");
			centrocostoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCentroCosto(true);
			centrocostoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCentroCosto(DetalleRequisicionCompraConstantesFunciones.SNOMBREOPCION);
			//centrocostoSessionBean.setisBusquedaDesdeForeignKeySesionDetalleRequisicionCompra(true);
			//centrocostoSessionBean.setlidDetalleRequisicionCompraActual(this.idDetalleRequisicionCompraActual);

			detallerequisicioncompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleRequisicionCompra(true);
			detallerequisicioncompraSessionBean.setlIdDetalleRequisicionCompraActualForeignKey(this.idDetalleRequisicionCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//DetalleRequisicionCompraSessionBean detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
		
		if(this.detallerequisicioncompraSessionBean==null) {
			this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
		}
		
		this.detallerequisicioncompraSessionBean.setsUltimaBusquedaDetalleRequisicionCompra(this.getsAccionBusqueda());
		this.detallerequisicioncompraSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.detallerequisicioncompraSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
			detallerequisicioncompraSessionBean.setid_bodega(this.getid_bodegaFK_IdBodega());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
			detallerequisicioncompraSessionBean.setid_centro_costo(this.getid_centro_costoFK_IdCentroCosto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			detallerequisicioncompraSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			detallerequisicioncompraSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			detallerequisicioncompraSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
			detallerequisicioncompraSessionBean.setid_producto(this.getid_productoFK_IdProducto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdRequisicionCompra")) {
			detallerequisicioncompraSessionBean.setid_requisicion_compra(this.getid_requisicion_compraFK_IdRequisicionCompra());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			detallerequisicioncompraSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
			detallerequisicioncompraSessionBean.setid_unidad(this.getid_unidadFK_IdUnidad());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//DetalleRequisicionCompraSessionBean detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
		
		if(this.detallerequisicioncompraSessionBean==null) {
			this.detallerequisicioncompraSessionBean=new DetalleRequisicionCompraSessionBean();
		}
		
		if(this.detallerequisicioncompraSessionBean.getsUltimaBusquedaDetalleRequisicionCompra()!=null&&!this.detallerequisicioncompraSessionBean.getsUltimaBusquedaDetalleRequisicionCompra().equals("")) {
			this.setsAccionBusqueda(detallerequisicioncompraSessionBean.getsUltimaBusquedaDetalleRequisicionCompra());
			this.setiNumeroPaginacion(detallerequisicioncompraSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(detallerequisicioncompraSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
				this.setid_bodegaFK_IdBodega(detallerequisicioncompraSessionBean.getid_bodega());
				detallerequisicioncompraSessionBean.setid_bodega(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
				this.setid_centro_costoFK_IdCentroCosto(detallerequisicioncompraSessionBean.getid_centro_costo());
				detallerequisicioncompraSessionBean.setid_centro_costo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(detallerequisicioncompraSessionBean.getid_ejercicio());
				detallerequisicioncompraSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(detallerequisicioncompraSessionBean.getid_empresa());
				detallerequisicioncompraSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(detallerequisicioncompraSessionBean.getid_periodo());
				detallerequisicioncompraSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
				this.setid_productoFK_IdProducto(detallerequisicioncompraSessionBean.getid_producto());
				detallerequisicioncompraSessionBean.setid_producto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdRequisicionCompra")) {
				this.setid_requisicion_compraFK_IdRequisicionCompra(detallerequisicioncompraSessionBean.getid_requisicion_compra());
				detallerequisicioncompraSessionBean.setid_requisicion_compra(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(detallerequisicioncompraSessionBean.getid_sucursal());
				detallerequisicioncompraSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
				this.setid_unidadFK_IdUnidad(detallerequisicioncompraSessionBean.getid_unidad());
				detallerequisicioncompraSessionBean.setid_unidad(-1L);
			}
		}
		
		this.detallerequisicioncompraSessionBean.setsUltimaBusquedaDetalleRequisicionCompra("");
		this.detallerequisicioncompraSessionBean.setiNumeroPaginacion(DetalleRequisicionCompraConstantesFunciones.INUMEROPAGINACION);
		this.detallerequisicioncompraSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaDetalleRequisicionCompra(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioDetalleRequisicionCompra() {
		this.updateBorderResaltarBusquedasFormularioDetalleRequisicionCompra();
		this.updateVisibilidadBusquedasFormularioDetalleRequisicionCompra();
		this.updateHabilitarBusquedasFormularioDetalleRequisicionCompra();
	}
	
	public void updateBorderResaltarBusquedasFormularioDetalleRequisicionCompra() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponents().length>0) {
	

		if(this.detallerequisicioncompraConstantesFunciones.resaltarFK_IdBodegaDetalleRequisicionCompra!=null) {
			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdBodegaDetalleRequisicionCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);
				jPanel.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarFK_IdBodegaDetalleRequisicionCompra);
			}
		}

		if(this.detallerequisicioncompraConstantesFunciones.resaltarFK_IdCentroCostoDetalleRequisicionCompra!=null) {
			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdCentroCostoDetalleRequisicionCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);
				jPanel.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarFK_IdCentroCostoDetalleRequisicionCompra);
			}
		}

		if(this.detallerequisicioncompraConstantesFunciones.resaltarFK_IdProductoDetalleRequisicionCompra!=null) {
			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdProductoDetalleRequisicionCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);
				jPanel.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarFK_IdProductoDetalleRequisicionCompra);
			}
		}

		if(this.detallerequisicioncompraConstantesFunciones.resaltarFK_IdRequisicionCompraDetalleRequisicionCompra!=null) {
			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdRequisicionCompraDetalleRequisicionCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);
				jPanel.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarFK_IdRequisicionCompraDetalleRequisicionCompra);
			}
		}

		if(this.detallerequisicioncompraConstantesFunciones.resaltarFK_IdUnidadDetalleRequisicionCompra!=null) {
			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdUnidadDetalleRequisicionCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);
				jPanel.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarFK_IdUnidadDetalleRequisicionCompra);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioDetalleRequisicionCompra() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdBodegaDetalleRequisicionCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarFK_IdBodegaDetalleRequisicionCompra);
			if(!this.detallerequisicioncompraConstantesFunciones.mostrarFK_IdBodegaDetalleRequisicionCompra && index>-1) {
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdCentroCostoDetalleRequisicionCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarFK_IdCentroCostoDetalleRequisicionCompra);
			if(!this.detallerequisicioncompraConstantesFunciones.mostrarFK_IdCentroCostoDetalleRequisicionCompra && index>-1) {
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdProductoDetalleRequisicionCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarFK_IdProductoDetalleRequisicionCompra);
			if(!this.detallerequisicioncompraConstantesFunciones.mostrarFK_IdProductoDetalleRequisicionCompra && index>-1) {
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdRequisicionCompraDetalleRequisicionCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarFK_IdRequisicionCompraDetalleRequisicionCompra);
			if(!this.detallerequisicioncompraConstantesFunciones.mostrarFK_IdRequisicionCompraDetalleRequisicionCompra && index>-1) {
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdUnidadDetalleRequisicionCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarFK_IdUnidadDetalleRequisicionCompra);
			if(!this.detallerequisicioncompraConstantesFunciones.mostrarFK_IdUnidadDetalleRequisicionCompra && index>-1) {
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioDetalleRequisicionCompra() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdBodegaDetalleRequisicionCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarFK_IdBodegaDetalleRequisicionCompra);
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.setEnabledAt(index,this.detallerequisicioncompraConstantesFunciones.activarFK_IdBodegaDetalleRequisicionCompra);
			}

			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdCentroCostoDetalleRequisicionCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarFK_IdCentroCostoDetalleRequisicionCompra);
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.setEnabledAt(index,this.detallerequisicioncompraConstantesFunciones.activarFK_IdCentroCostoDetalleRequisicionCompra);
			}

			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdProductoDetalleRequisicionCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarFK_IdProductoDetalleRequisicionCompra);
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.setEnabledAt(index,this.detallerequisicioncompraConstantesFunciones.activarFK_IdProductoDetalleRequisicionCompra);
			}

			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdRequisicionCompraDetalleRequisicionCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarFK_IdRequisicionCompraDetalleRequisicionCompra);
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.setEnabledAt(index,this.detallerequisicioncompraConstantesFunciones.activarFK_IdRequisicionCompraDetalleRequisicionCompra);
			}

			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdUnidadDetalleRequisicionCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarFK_IdUnidadDetalleRequisicionCompra);
				this.jTabbedPaneBusquedasDetalleRequisicionCompra.setEnabledAt(index,this.detallerequisicioncompraConstantesFunciones.activarFK_IdUnidadDetalleRequisicionCompra);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaDetalleRequisicionCompra(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdBodega")) {
			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdBodegaDetalleRequisicionCompra);

			this.jTabbedPaneBusquedasDetalleRequisicionCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);

			this.detallerequisicioncompraConstantesFunciones.setResaltarFK_IdBodegaDetalleRequisicionCompra(resaltar);

			jPanel.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarFK_IdBodegaDetalleRequisicionCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCentroCosto")) {
			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdCentroCostoDetalleRequisicionCompra);

			this.jTabbedPaneBusquedasDetalleRequisicionCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);

			this.detallerequisicioncompraConstantesFunciones.setResaltarFK_IdCentroCostoDetalleRequisicionCompra(resaltar);

			jPanel.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarFK_IdCentroCostoDetalleRequisicionCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdProducto")) {
			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdProductoDetalleRequisicionCompra);

			this.jTabbedPaneBusquedasDetalleRequisicionCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);

			this.detallerequisicioncompraConstantesFunciones.setResaltarFK_IdProductoDetalleRequisicionCompra(resaltar);

			jPanel.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarFK_IdProductoDetalleRequisicionCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdRequisicionCompra")) {
			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdRequisicionCompraDetalleRequisicionCompra);

			this.jTabbedPaneBusquedasDetalleRequisicionCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);

			this.detallerequisicioncompraConstantesFunciones.setResaltarFK_IdRequisicionCompraDetalleRequisicionCompra(resaltar);

			jPanel.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarFK_IdRequisicionCompraDetalleRequisicionCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdUnidad")) {
			index= this.jTabbedPaneBusquedasDetalleRequisicionCompra.indexOfComponent(this.jPanelFK_IdUnidadDetalleRequisicionCompra);

			this.jTabbedPaneBusquedasDetalleRequisicionCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleRequisicionCompra.getComponent(index);

			this.detallerequisicioncompraConstantesFunciones.setResaltarFK_IdUnidadDetalleRequisicionCompra(resaltar);

			jPanel.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarFK_IdUnidadDetalleRequisicionCompra);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarDetalleRequisicionCompra.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioDetalleRequisicionCompra() throws Exception {

		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioDetalleRequisicionCompra();
		this.updateVisibilidadResaltarControlesFormularioDetalleRequisicionCompra();
		this.updateHabilitarResaltarControlesFormularioDetalleRequisicionCompra();
		
	}
	
	public void updateBorderResaltarControlesFormularioDetalleRequisicionCompra() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.detallerequisicioncompraConstantesFunciones.resaltaridDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelidDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltaridDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarid_requisicion_compraDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_requisicion_compraDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarid_requisicion_compraDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarid_empresaDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_empresaDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarid_empresaDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarid_sucursalDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_sucursalDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarid_sucursalDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarid_ejercicioDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarid_ejercicioDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarid_periodoDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarid_periodoDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarid_anioDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_anioDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarid_anioDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarid_mesDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_mesDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarid_mesDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarid_bodegaDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarid_bodegaDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarid_productoDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarid_productoDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarid_unidadDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_unidadDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarid_unidadDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarid_centro_costoDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_centro_costoDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarid_centro_costoDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarcantidad_requisicionDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_requisicionDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarcantidad_requisicionDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarcosto_unitarioDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_unitarioDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarcosto_unitarioDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarcosto_totalDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_totalDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarcosto_totalDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltardescripcionDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextAreadescripcionDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltardescripcionDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarcantidad_entregadaDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_entregadaDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarcantidad_entregadaDetalleRequisicionCompra);}
		if(this.detallerequisicioncompraConstantesFunciones.resaltarcantidad_pendienteDetalleRequisicionCompra!=null && this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_pendienteDetalleRequisicionCompra.setBorder(this.detallerequisicioncompraConstantesFunciones.resaltarcantidad_pendienteDetalleRequisicionCompra);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioDetalleRequisicionCompra() throws Exception {		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
	
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelidDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostraridDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelidDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostraridDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_requisicion_compraDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_requisicion_compraDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelid_requisicion_compraDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_requisicion_compraDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_empresaDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_empresaDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelid_empresaDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_empresaDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_sucursalDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_sucursalDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelid_sucursalDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_sucursalDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_ejercicioDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelid_ejercicioDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_ejercicioDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_periodoDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelid_periodoDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_periodoDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_anioDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_anioDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelid_anioDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_anioDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_mesDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_mesDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelid_mesDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_mesDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_bodegaDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelid_bodegaDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_bodegaDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_productoDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelid_productoDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_productoDetalleRequisicionCompra);
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_productoDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_productoDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_unidadDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_unidadDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelid_unidadDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_unidadDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_centro_costoDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_centro_costoDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelid_centro_costoDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_centro_costoDetalleRequisicionCompra);
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_centro_costoDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarid_centro_costoDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_requisicionDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarcantidad_requisicionDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelcantidad_requisicionDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarcantidad_requisicionDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_unitarioDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarcosto_unitarioDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelcosto_unitarioDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarcosto_unitarioDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_totalDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarcosto_totalDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelcosto_totalDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarcosto_totalDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextAreadescripcionDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrardescripcionDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPaneldescripcionDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrardescripcionDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_entregadaDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarcantidad_entregadaDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelcantidad_entregadaDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarcantidad_entregadaDetalleRequisicionCompra);
		//this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_pendienteDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarcantidad_pendienteDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jPanelcantidad_pendienteDetalleRequisicionCompra.setVisible(this.detallerequisicioncompraConstantesFunciones.mostrarcantidad_pendienteDetalleRequisicionCompra);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioDetalleRequisicionCompra() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleRequisicionCompra!=null) {
	
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jLabelidDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activaridDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_requisicion_compraDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarid_requisicion_compraDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_empresaDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarid_empresaDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_sucursalDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarid_sucursalDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_ejercicioDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarid_ejercicioDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_periodoDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarid_periodoDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_anioDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarid_anioDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_mesDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarid_mesDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_bodegaDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarid_bodegaDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_productoDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarid_productoDetalleRequisicionCompra);
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_productoDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarid_productoDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_unidadDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarid_unidadDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jComboBoxid_centro_costoDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarid_centro_costoDetalleRequisicionCompra);
			this.jInternalFrameDetalleFormDetalleRequisicionCompra.jButtonid_centro_costoDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarid_centro_costoDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_requisicionDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarcantidad_requisicionDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_unitarioDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarcosto_unitarioDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcosto_totalDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarcosto_totalDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextAreadescripcionDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activardescripcionDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_entregadaDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarcantidad_entregadaDetalleRequisicionCompra);
		this.jInternalFrameDetalleFormDetalleRequisicionCompra.jTextFieldcantidad_pendienteDetalleRequisicionCompra.setEnabled(this.detallerequisicioncompraConstantesFunciones.activarcantidad_pendienteDetalleRequisicionCompra);
		}
	}
	
		
}