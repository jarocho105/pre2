/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.inventario.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.inventario.util.CompraConstantesFunciones;
import com.bydan.erp.inventario.util.CompraParameterReturnGeneral;
//import com.bydan.erp.inventario.util.CompraParameterGeneral;
//import com.bydan.erp.inventario.presentation.report.source.CompraBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.inventario.resources.reportes.AuxiliarReportes;


import com.bydan.erp.inventario.util.*;
import com.bydan.erp.inventario.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;
import com.bydan.erp.sris.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.inventario.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;
import com.bydan.erp.sris.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.sris.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.sris.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.sris.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.sris.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class CompraBeanSwingJInternalFrame extends CompraJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(CompraBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<Compra> compraValidator = new ClassValidator<Compra>(Compra.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public Compra compra;	
	public Compra compraAux;
	public Compra compraAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public Compra compraTotales;
	public Long idCompraActual;
	public Long iIdNuevoCompra=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboModulo="";

	public List<Modulo> modulosForeignKey;

	public List<Modulo> getmodulosForeignKey() {
		return modulosForeignKey;
	}

	public void setmodulosForeignKey(List<Modulo> modulosForeignKey) {
		this.modulosForeignKey = modulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Modulo moduloForeignKey;

	public Modulo getmoduloForeignKey() {
		return moduloForeignKey;
	}

	public void setmoduloForeignKey(Modulo moduloForeignKey) {
		this.moduloForeignKey = moduloForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboUsuario="";

	public List<Usuario> usuariosForeignKey;

	public List<Usuario> getusuariosForeignKey() {
		return usuariosForeignKey;
	}

	public void setusuariosForeignKey(List<Usuario> usuariosForeignKey) {
		this.usuariosForeignKey = usuariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Usuario usuarioForeignKey;

	public Usuario getusuarioForeignKey() {
		return usuarioForeignKey;
	}

	public void setusuarioForeignKey(Usuario usuarioForeignKey) {
		this.usuarioForeignKey = usuarioForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboTipoCambio="";

	public List<TipoCambio> tipocambiosForeignKey;

	public List<TipoCambio> gettipocambiosForeignKey() {
		return tipocambiosForeignKey;
	}

	public void settipocambiosForeignKey(List<TipoCambio> tipocambiosForeignKey) {
		this.tipocambiosForeignKey = tipocambiosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCambio tipocambioForeignKey;

	public TipoCambio gettipocambioForeignKey() {
		return tipocambioForeignKey;
	}

	public void settipocambioForeignKey(TipoCambio tipocambioForeignKey) {
		this.tipocambioForeignKey = tipocambioForeignKey;
	}

	public String sFinalQueryComboEstadoInventario="";

	public List<EstadoInventario> estadoinventariosForeignKey;

	public List<EstadoInventario> getestadoinventariosForeignKey() {
		return estadoinventariosForeignKey;
	}

	public void setestadoinventariosForeignKey(List<EstadoInventario> estadoinventariosForeignKey) {
		this.estadoinventariosForeignKey = estadoinventariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoInventario estadoinventarioForeignKey;

	public EstadoInventario getestadoinventarioForeignKey() {
		return estadoinventarioForeignKey;
	}

	public void setestadoinventarioForeignKey(EstadoInventario estadoinventarioForeignKey) {
		this.estadoinventarioForeignKey = estadoinventarioForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboFormato="";

	public List<Formato> formatosForeignKey;

	public List<Formato> getformatosForeignKey() {
		return formatosForeignKey;
	}

	public void setformatosForeignKey(List<Formato> formatosForeignKey) {
		this.formatosForeignKey = formatosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatoForeignKey;

	public Formato getformatoForeignKey() {
		return formatoForeignKey;
	}

	public void setformatoForeignKey(Formato formatoForeignKey) {
		this.formatoForeignKey = formatoForeignKey;
	}

	public String sFinalQueryComboEmpleado="";

	public List<Empleado> empleadosForeignKey;

	public List<Empleado> getempleadosForeignKey() {
		return empleadosForeignKey;
	}

	public void setempleadosForeignKey(List<Empleado> empleadosForeignKey) {
		this.empleadosForeignKey = empleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoForeignKey;

	public Empleado getempleadoForeignKey() {
		return empleadoForeignKey;
	}

	public void setempleadoForeignKey(Empleado empleadoForeignKey) {
		this.empleadoForeignKey = empleadoForeignKey;
	}

	public String sFinalQueryComboTransportista="";

	public List<Transportista> transportistasForeignKey;

	public List<Transportista> gettransportistasForeignKey() {
		return transportistasForeignKey;
	}

	public void settransportistasForeignKey(List<Transportista> transportistasForeignKey) {
		this.transportistasForeignKey = transportistasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transportista transportistaForeignKey;

	public Transportista gettransportistaForeignKey() {
		return transportistaForeignKey;
	}

	public void settransportistaForeignKey(Transportista transportistaForeignKey) {
		this.transportistaForeignKey = transportistaForeignKey;
	}

	public String sFinalQueryComboOrdenCompra="";

	public List<OrdenCompra> ordencomprasForeignKey;

	public List<OrdenCompra> getordencomprasForeignKey() {
		return ordencomprasForeignKey;
	}

	public void setordencomprasForeignKey(List<OrdenCompra> ordencomprasForeignKey) {
		this.ordencomprasForeignKey = ordencomprasForeignKey;
	}

	//OBJETO FK ACTUAL
	public OrdenCompra ordencompraForeignKey;

	public OrdenCompra getordencompraForeignKey() {
		return ordencompraForeignKey;
	}

	public void setordencompraForeignKey(OrdenCompra ordencompraForeignKey) {
		this.ordencompraForeignKey = ordencompraForeignKey;
	}

	public String sFinalQueryComboPedidoCompra="";

	public List<PedidoCompra> pedidocomprasForeignKey;

	public List<PedidoCompra> getpedidocomprasForeignKey() {
		return pedidocomprasForeignKey;
	}

	public void setpedidocomprasForeignKey(List<PedidoCompra> pedidocomprasForeignKey) {
		this.pedidocomprasForeignKey = pedidocomprasForeignKey;
	}

	//OBJETO FK ACTUAL
	public PedidoCompra pedidocompraForeignKey;

	public PedidoCompra getpedidocompraForeignKey() {
		return pedidocompraForeignKey;
	}

	public void setpedidocompraForeignKey(PedidoCompra pedidocompraForeignKey) {
		this.pedidocompraForeignKey = pedidocompraForeignKey;
	}

	public String sFinalQueryComboTipoTransaccionModulo="";

	public List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey;

	public List<TipoTransaccionModulo> gettipotransaccionmodulosForeignKey() {
		return tipotransaccionmodulosForeignKey;
	}

	public void settipotransaccionmodulosForeignKey(List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey) {
		this.tipotransaccionmodulosForeignKey = tipotransaccionmodulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoTransaccionModulo tipotransaccionmoduloForeignKey;

	public TipoTransaccionModulo gettipotransaccionmoduloForeignKey() {
		return tipotransaccionmoduloForeignKey;
	}

	public void settipotransaccionmoduloForeignKey(TipoTransaccionModulo tipotransaccionmoduloForeignKey) {
		this.tipotransaccionmoduloForeignKey = tipotransaccionmoduloForeignKey;
	}

	public String sFinalQueryComboAsientoContable="";

	public List<AsientoContable> asientocontablesForeignKey;

	public List<AsientoContable> getasientocontablesForeignKey() {
		return asientocontablesForeignKey;
	}

	public void setasientocontablesForeignKey(List<AsientoContable> asientocontablesForeignKey) {
		this.asientocontablesForeignKey = asientocontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public AsientoContable asientocontableForeignKey;

	public AsientoContable getasientocontableForeignKey() {
		return asientocontableForeignKey;
	}

	public void setasientocontableForeignKey(AsientoContable asientocontableForeignKey) {
		this.asientocontableForeignKey = asientocontableForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idTipoCambioActual=0L;

	public Long getidTipoCambioActual() {
		return idTipoCambioActual;
	}

	public void setidTipoCambioActual(Long idTipoCambioActual) {
		this.idTipoCambioActual= idTipoCambioActual;
	}
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idEmpleadoActual=0L;

	public Long getidEmpleadoActual() {
		return idEmpleadoActual;
	}

	public void setidEmpleadoActual(Long idEmpleadoActual) {
		this.idEmpleadoActual= idEmpleadoActual;
	}
	public Long idOrdenCompraActual=0L;

	public Long getidOrdenCompraActual() {
		return idOrdenCompraActual;
	}

	public void setidOrdenCompraActual(Long idOrdenCompraActual) {
		this.idOrdenCompraActual= idOrdenCompraActual;
	}
	public Long idPedidoCompraActual=0L;

	public Long getidPedidoCompraActual() {
		return idPedidoCompraActual;
	}

	public void setidPedidoCompraActual(Long idPedidoCompraActual) {
		this.idPedidoCompraActual= idPedidoCompraActual;
	}
	public Long idAsientoContableActual=0L;

	public Long getidAsientoContableActual() {
		return idAsientoContableActual;
	}

	public void setidAsientoContableActual(Long idAsientoContableActual) {
		this.idAsientoContableActual= idAsientoContableActual;
	}
	
	

	public Boolean isTienePermisosRetencionInven=false;

	public Boolean getIsTienePermisosRetencionInven() {
		return isTienePermisosRetencionInven;
	}

	public void setIsTienePermisosRetencionInven(Boolean isTienePermisosRetencionInven) {
		this.isTienePermisosRetencionInven= isTienePermisosRetencionInven;
	}


	public Boolean isTienePermisosTransaccionLocal=false;

	public Boolean getIsTienePermisosTransaccionLocal() {
		return isTienePermisosTransaccionLocal;
	}

	public void setIsTienePermisosTransaccionLocal(Boolean isTienePermisosTransaccionLocal) {
		this.isTienePermisosTransaccionLocal= isTienePermisosTransaccionLocal;
	}


	public Boolean isTienePermisosFormaPagoInven=false;

	public Boolean getIsTienePermisosFormaPagoInven() {
		return isTienePermisosFormaPagoInven;
	}

	public void setIsTienePermisosFormaPagoInven(Boolean isTienePermisosFormaPagoInven) {
		this.isTienePermisosFormaPagoInven= isTienePermisosFormaPagoInven;
	}


	public Boolean isTienePermisosDetalleCompra=false;

	public Boolean getIsTienePermisosDetalleCompra() {
		return isTienePermisosDetalleCompra;
	}

	public void setIsTienePermisosDetalleCompra(Boolean isTienePermisosDetalleCompra) {
		this.isTienePermisosDetalleCompra= isTienePermisosDetalleCompra;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoCompra;
	public Boolean isPermisoNuevoCompra;
	public Boolean isPermisoActualizarCompra;
	public Boolean isPermisoActualizarOriginalCompra;
	public Boolean isPermisoEliminarCompra;
	public Boolean isPermisoGuardarCambiosCompra;
	public Boolean isPermisoConsultaCompra;
	public Boolean isPermisoBusquedaCompra;
	public Boolean isPermisoReporteCompra;
	public Boolean isPermisoPaginacionMedioCompra;
	public Boolean isPermisoPaginacionAltoCompra;
	public Boolean isPermisoPaginacionTodoCompra;
	public Boolean isPermisoCopiarCompra;
	public Boolean isPermisoVerFormCompra;
	public Boolean isPermisoDuplicarCompra;
	public Boolean isPermisoOrdenCompra;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public CompraParameterReturnGeneral compraReturnGeneral;
	public CompraParameterReturnGeneral compraParameterGeneral;
	
	

	public RetencionInvenLogic retencioninvenLogic=null;

	public RetencionInvenLogic getRetencionInvenLogic() {
		return retencioninvenLogic;
	}

	public void setRetencionInvenLogic(RetencionInvenLogic retencioninvenLogic) {
		this.retencioninvenLogic = retencioninvenLogic;
	}


	public TransaccionLocalLogic transaccionlocalLogic=null;

	public TransaccionLocalLogic getTransaccionLocalLogic() {
		return transaccionlocalLogic;
	}

	public void setTransaccionLocalLogic(TransaccionLocalLogic transaccionlocalLogic) {
		this.transaccionlocalLogic = transaccionlocalLogic;
	}


	public FormaPagoInvenLogic formapagoinvenLogic=null;

	public FormaPagoInvenLogic getFormaPagoInvenLogic() {
		return formapagoinvenLogic;
	}

	public void setFormaPagoInvenLogic(FormaPagoInvenLogic formapagoinvenLogic) {
		this.formapagoinvenLogic = formapagoinvenLogic;
	}


	public DetalleCompraLogic detallecompraLogic=null;

	public DetalleCompraLogic getDetalleCompraLogic() {
		return detallecompraLogic;
	}

	public void setDetalleCompraLogic(DetalleCompraLogic detallecompraLogic) {
		this.detallecompraLogic = detallecompraLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoCompra=false;
	public Boolean esParaAccionDesdeFormularioCompra=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected CompraSessionBeanAdditional compraSessionBeanAdditional=null;
	
	public CompraSessionBeanAdditional getCompraSessionBeanAdditional() {
		return this.compraSessionBeanAdditional;
	}
	
	public void setCompraSessionBeanAdditional(CompraSessionBeanAdditional compraSessionBeanAdditional) {
		try {
			this.compraSessionBeanAdditional=compraSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected CompraBeanSwingJInternalFrameAdditional compraBeanSwingJInternalFrameAdditional=null;
	//public class CompraBeanSwingJInternalFrame
	
	public CompraBeanSwingJInternalFrameAdditional getCompraBeanSwingJInternalFrameAdditional() {
		return this.compraBeanSwingJInternalFrameAdditional;
	}
	
	public void setCompraBeanSwingJInternalFrameAdditional(CompraBeanSwingJInternalFrameAdditional compraBeanSwingJInternalFrameAdditional) {
		try {
			this.compraBeanSwingJInternalFrameAdditional=compraBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public CompraLogic compraLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public Compra compraBean;
	public CompraConstantesFunciones compraConstantesFunciones;
	//public CompraParameterReturnGeneral compraReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public ModuloLogic moduloLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public UsuarioLogic usuarioLogic;
	public MonedaLogic monedaLogic;
	public TipoCambioLogic tipocambioLogic;
	public EstadoInventarioLogic estadoinventarioLogic;
	public ClienteLogic clienteLogic;
	public FormatoLogic formatoLogic;
	public EmpleadoLogic empleadoLogic;
	public TransportistaLogic transportistaLogic;
	public OrdenCompraLogic ordencompraLogic;
	public PedidoCompraLogic pedidocompraLogic;
	public TipoTransaccionModuloLogic tipotransaccionmoduloLogic;
	public AsientoContableLogic asientocontableLogic;
	
	//PARAMETROS
	
	
	//public List<Compra> compras;	
	//public List<Compra> comprasEliminados;
	//public List<Compra> comprasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoCompra=false;
	public Boolean isVisibilidadCeldaDuplicarCompra=true;
	public Boolean isVisibilidadCeldaCopiarCompra=true;
	public Boolean isVisibilidadCeldaVerFormCompra=true;
	public Boolean isVisibilidadCeldaOrdenCompra=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesCompra=false;
	public Boolean isVisibilidadCeldaModificarCompra=false;
	public Boolean isVisibilidadCeldaActualizarCompra=false;
	public Boolean isVisibilidadCeldaEliminarCompra=false;
	public Boolean isVisibilidadCeldaCancelarCompra=false;
	public Boolean isVisibilidadCeldaGuardarCompra=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosCompra=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdAsientoContable=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpleado=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoInventario=false;
	public Boolean isVisibilidadFK_IdFormato=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdModulo=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdOrdenCompra=false;
	public Boolean isVisibilidadFK_IdPedidoCompra=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoCambio=false;
	public Boolean isVisibilidadFK_IdTipoTransaccionModulo=false;
	public Boolean isVisibilidadFK_IdTransportista=false;
	public Boolean isVisibilidadFK_IdUsuario=false;
	
	public Long getiIdNuevoCompra() {
		return this.iIdNuevoCompra;
	}

	public void setiIdNuevoCompra(Long iIdNuevoCompra) {
		this.iIdNuevoCompra = iIdNuevoCompra;
	}
	
	public Long getidCompraActual() {
		return this.idCompraActual;
	}

	public void setidCompraActual(Long idCompraActual) {
		this.idCompraActual = idCompraActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public Compra getcompra() {
		return this.compra;
	}

	public void setcompra(Compra compra) {
		this.compra = compra;
	}
	
	public Compra getcompraAux() {
		return this.compraAux;
	}

	public void setcompraAux(Compra compraAux) {
		this.compraAux = compraAux;
	}				
	
	public Compra getcompraAnterior() {
		return this.compraAnterior;
	}

	public void setcompraAnterior(Compra compraAnterior) {
		this.compraAnterior = compraAnterior;
	}	
	
	public Compra getcompraTotales() {
		return this.compraTotales;
	}

	public void setcompraTotales(Compra compraTotales) {
		this.compraTotales = compraTotales;
	}	
	
	public Compra getcompraBean() {
		return this.compraBean;
	}

	public void setcompraBean(Compra compraBean) {
		this.compraBean = compraBean;
	}	
	
	public CompraParameterReturnGeneral getcompraReturnGeneral() {
		return this.compraReturnGeneral;
	}

	public void setcompraReturnGeneral(CompraParameterReturnGeneral compraReturnGeneral) {
		this.compraReturnGeneral = compraReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_asiento_contableFK_IdAsientoContable=null;

	public Long getid_asiento_contableFK_IdAsientoContable() {
		return this.id_asiento_contableFK_IdAsientoContable;
	}

	public void setid_asiento_contableFK_IdAsientoContable(Long id_asiento_contableFK_IdAsientoContable) {
		this.id_asiento_contableFK_IdAsientoContable = id_asiento_contableFK_IdAsientoContable;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empleadoFK_IdEmpleado=-1L;

	public Long getid_empleadoFK_IdEmpleado() {
		return this.id_empleadoFK_IdEmpleado;
	}

	public void setid_empleadoFK_IdEmpleado(Long id_empleadoFK_IdEmpleado) {
		this.id_empleadoFK_IdEmpleado = id_empleadoFK_IdEmpleado;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_inventarioFK_IdEstadoInventario=-1L;

	public Long getid_estado_inventarioFK_IdEstadoInventario() {
		return this.id_estado_inventarioFK_IdEstadoInventario;
	}

	public void setid_estado_inventarioFK_IdEstadoInventario(Long id_estado_inventarioFK_IdEstadoInventario) {
		this.id_estado_inventarioFK_IdEstadoInventario = id_estado_inventarioFK_IdEstadoInventario;
	}

	public Long id_formatoFK_IdFormato=-1L;

	public Long getid_formatoFK_IdFormato() {
		return this.id_formatoFK_IdFormato;
	}

	public void setid_formatoFK_IdFormato(Long id_formatoFK_IdFormato) {
		this.id_formatoFK_IdFormato = id_formatoFK_IdFormato;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_moduloFK_IdModulo=-1L;

	public Long getid_moduloFK_IdModulo() {
		return this.id_moduloFK_IdModulo;
	}

	public void setid_moduloFK_IdModulo(Long id_moduloFK_IdModulo) {
		this.id_moduloFK_IdModulo = id_moduloFK_IdModulo;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_orden_compraFK_IdOrdenCompra=null;

	public Long getid_orden_compraFK_IdOrdenCompra() {
		return this.id_orden_compraFK_IdOrdenCompra;
	}

	public void setid_orden_compraFK_IdOrdenCompra(Long id_orden_compraFK_IdOrdenCompra) {
		this.id_orden_compraFK_IdOrdenCompra = id_orden_compraFK_IdOrdenCompra;
	}

	public Long id_pedido_compraFK_IdPedidoCompra=null;

	public Long getid_pedido_compraFK_IdPedidoCompra() {
		return this.id_pedido_compraFK_IdPedidoCompra;
	}

	public void setid_pedido_compraFK_IdPedidoCompra(Long id_pedido_compraFK_IdPedidoCompra) {
		this.id_pedido_compraFK_IdPedidoCompra = id_pedido_compraFK_IdPedidoCompra;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_cambioFK_IdTipoCambio=null;

	public Long getid_tipo_cambioFK_IdTipoCambio() {
		return this.id_tipo_cambioFK_IdTipoCambio;
	}

	public void setid_tipo_cambioFK_IdTipoCambio(Long id_tipo_cambioFK_IdTipoCambio) {
		this.id_tipo_cambioFK_IdTipoCambio = id_tipo_cambioFK_IdTipoCambio;
	}

	public Long id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo=null;

	public Long getid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo() {
		return this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo;
	}

	public void setid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo(Long id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo) {
		this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo = id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo;
	}

	public Long id_transportistaFK_IdTransportista=null;

	public Long getid_transportistaFK_IdTransportista() {
		return this.id_transportistaFK_IdTransportista;
	}

	public void setid_transportistaFK_IdTransportista(Long id_transportistaFK_IdTransportista) {
		this.id_transportistaFK_IdTransportista = id_transportistaFK_IdTransportista;
	}

	public Long id_usuarioFK_IdUsuario=-1L;

	public Long getid_usuarioFK_IdUsuario() {
		return this.id_usuarioFK_IdUsuario;
	}

	public void setid_usuarioFK_IdUsuario(Long id_usuarioFK_IdUsuario) {
		this.id_usuarioFK_IdUsuario = id_usuarioFK_IdUsuario;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public CompraLogic getCompraLogic()	{		
		return compraLogic;
	}

	public void setCompraLogic(CompraLogic compraLogic) {
		this.compraLogic = compraLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoCompra() {
		return isEsNuevoCompra;
	}

	public void setIsEsNuevoCompra(Boolean isEsNuevoCompra) {
		this.isEsNuevoCompra = isEsNuevoCompra;
	}

	public Boolean getEsParaAccionDesdeFormularioCompra() {
		return esParaAccionDesdeFormularioCompra;
	}
	
	public void setEsParaAccionDesdeFormularioCompra(Boolean esParaAccionDesdeFormularioCompra) {
		this.esParaAccionDesdeFormularioCompra = esParaAccionDesdeFormularioCompra;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(compraSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(compraSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.modulosForeignKey=new ArrayList<Modulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ModuloLogic moduloLogic=new ModuloLogic();

			//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

					moduloLogic.getTodosModulosWithConnection(sFinalQuery,new Pagination());

					this.modulosForeignKey=moduloLogic.getModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					moduloLogic.getEntityWithConnection(compraSessionBean.getlidModuloActual());
					this.modulosForeignKey.add(moduloLogic.getModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(compraSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(compraSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(compraSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(compraSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUsuariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.usuariosForeignKey=new ArrayList<Usuario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UsuarioLogic usuarioLogic=new UsuarioLogic();

			//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

					usuarioLogic.getTodosUsuariosWithConnection(sFinalQuery,new Pagination());

					this.usuariosForeignKey=usuarioLogic.getUsuarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUsuario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					usuarioLogic.getEntityWithConnection(compraSessionBean.getlidUsuarioActual());
					this.usuariosForeignKey.add(usuarioLogic.getUsuario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(compraSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoCambiosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCambio tipocambioNulo = new TipoCambio();

			TipoCambioLogic tipocambioLogic=new TipoCambioLogic();

			//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

					tipocambioLogic.getTodosTipoCambiosWithConnection(sFinalQuery,new Pagination());

					this.tipocambiosForeignKey=tipocambioLogic.getTipoCambios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.tipocambiosForeignKey.add(0, tipocambioNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCambio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(compraSessionBean.getlidTipoCambioActual());
					this.tipocambiosForeignKey.add(tipocambioLogic.getTipoCambio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoInventariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadoinventariosForeignKey=new ArrayList<EstadoInventario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoInventarioLogic estadoinventarioLogic=new EstadoInventarioLogic();

			//estadoinventarioLogic.getEstadoInventarioDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoInventario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadoinventarioLogic.getEstadoInventarioDataAccess().setIsForForeingKeyData(true);

					estadoinventarioLogic.getTodosEstadoInventariosWithConnection(sFinalQuery,new Pagination());

					this.estadoinventariosForeignKey=estadoinventarioLogic.getEstadoInventarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoInventario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadoinventarioLogic.getEntityWithConnection(compraSessionBean.getlidEstadoInventarioActual());
					this.estadoinventariosForeignKey.add(estadoinventarioLogic.getEstadoInventario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(compraSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatosForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatosForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormato(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(compraSessionBean.getlidFormatoActual());
					this.formatosForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadosForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadosForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(compraSessionBean.getlidEmpleadoActual());
					this.empleadosForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransportistasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transportistasForeignKey=new ArrayList<Transportista>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transportista transportistaNulo = new Transportista();

			TransportistaLogic transportistaLogic=new TransportistaLogic();

			//transportistaLogic.getTransportistaDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transportistaLogic.getTransportistaDataAccess().setIsForForeingKeyData(true);

					transportistaLogic.getTodosTransportistasWithConnection(sFinalQuery,new Pagination());

					this.transportistasForeignKey=transportistaLogic.getTransportistas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transportistasForeignKey.add(0, transportistaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransportista(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transportistaLogic.getEntityWithConnection(compraSessionBean.getlidTransportistaActual());
					this.transportistasForeignKey.add(transportistaLogic.getTransportista());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosOrdenComprasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ordencomprasForeignKey=new ArrayList<OrdenCompra>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			OrdenCompra ordencompraNulo = new OrdenCompra();

			OrdenCompraLogic ordencompraLogic=new OrdenCompraLogic();

			//ordencompraLogic.getOrdenCompraDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionOrdenCompra()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ordencompraLogic.getOrdenCompraDataAccess().setIsForForeingKeyData(true);

					ordencompraLogic.getTodosOrdenComprasWithConnection(sFinalQuery,new Pagination());

					this.ordencomprasForeignKey=ordencompraLogic.getOrdenCompras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.ordencomprasForeignKey.add(0, ordencompraNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaOrdenCompra(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getEntityWithConnection(compraSessionBean.getlidOrdenCompraActual());
					this.ordencomprasForeignKey.add(ordencompraLogic.getOrdenCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPedidoComprasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.pedidocomprasForeignKey=new ArrayList<PedidoCompra>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PedidoCompra pedidocompraNulo = new PedidoCompra();

			PedidoCompraLogic pedidocompraLogic=new PedidoCompraLogic();

			//pedidocompraLogic.getPedidoCompraDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionPedidoCompra()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//pedidocompraLogic.getPedidoCompraDataAccess().setIsForForeingKeyData(true);

					pedidocompraLogic.getTodosPedidoComprasWithConnection(sFinalQuery,new Pagination());

					this.pedidocomprasForeignKey=pedidocompraLogic.getPedidoCompras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.pedidocomprasForeignKey.add(0, pedidocompraNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPedidoCompra(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getEntityWithConnection(compraSessionBean.getlidPedidoCompraActual());
					this.pedidocomprasForeignKey.add(pedidocompraLogic.getPedidoCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoTransaccionModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoTransaccionModuloLogic tipotransaccionmoduloLogic=new TipoTransaccionModuloLogic();

			//tipotransaccionmoduloLogic.getTipoTransaccionModuloDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipotransaccionmoduloLogic.getTipoTransaccionModuloDataAccess().setIsForForeingKeyData(true);

					tipotransaccionmoduloLogic.getTodosTipoTransaccionModulosWithConnection(sFinalQuery,new Pagination());

					this.tipotransaccionmodulosForeignKey=tipotransaccionmoduloLogic.getTipoTransaccionModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoTransaccionModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipotransaccionmoduloLogic.getEntityWithConnection(compraSessionBean.getlidTipoTransaccionModuloActual());
					this.tipotransaccionmodulosForeignKey.add(tipotransaccionmoduloLogic.getTipoTransaccionModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAsientoContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AsientoContableLogic asientocontableLogic=new AsientoContableLogic();

			//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

					asientocontableLogic.getTodosAsientoContablesWithConnection(sFinalQuery,new Pagination());

					this.asientocontablesForeignKey=asientocontableLogic.getAsientoContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAsientoContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(compraSessionBean.getlidAsientoContableActual());
					this.asientocontablesForeignKey.add(asientocontableLogic.getAsientoContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.compra!=null) {
						this.compra.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_empresaCompra.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaCompra.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_empresaCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_empresaCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaCompraGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaCompraGenerico!=null && jComboBoxid_empresaCompraGenerico.getItemCount()>0) {
					jComboBoxid_empresaCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.compra!=null) {
						this.compra.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_sucursalCompra.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalCompra.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_sucursalCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_sucursalCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalCompraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalCompraGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalCompraGenerico!=null && jComboBoxid_sucursalCompraGenerico.getItemCount()>0) {
					jComboBoxid_sucursalCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualModuloForeignKey(Long idModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(moduloTemp!=null) {

					if(this.compra!=null) {
						this.compra.setModulo(moduloTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_moduloCompra.setSelectedItem(moduloTemp);
					}
				} else {
					//jComboBoxid_moduloCompra.setSelectedItem(moduloTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_moduloCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_moduloCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualModuloForeignKeyDescripcion(Long idModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}


			sDescripcion=ModuloConstantesFunciones.getModuloDescripcion(moduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualModuloForeignKeyGenerico(Long idModuloSeleccionado,JComboBox jComboBoxid_moduloCompraGenerico)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(moduloTemp!=null) {
				jComboBoxid_moduloCompraGenerico.setSelectedItem(moduloTemp);
			} else {
				if(jComboBoxid_moduloCompraGenerico!=null && jComboBoxid_moduloCompraGenerico.getItemCount()>0) {
					jComboBoxid_moduloCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.compra!=null) {
						this.compra.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioCompra.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioCompraGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioCompraGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioCompraGenerico!=null && jComboBoxid_ejercicioCompraGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.compra!=null) {
						this.compra.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoCompra.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoCompraGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoCompraGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoCompraGenerico!=null && jComboBoxid_periodoCompraGenerico.getItemCount()>0) {
					jComboBoxid_periodoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.compra!=null) {
						this.compra.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_anioCompra.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioCompra.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_anioCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_anioCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioCompraGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioCompraGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioCompraGenerico!=null && jComboBoxid_anioCompraGenerico.getItemCount()>0) {
					jComboBoxid_anioCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.compra!=null) {
						this.compra.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_mesCompra.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesCompra.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_mesCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_mesCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesCompraGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesCompraGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesCompraGenerico!=null && jComboBoxid_mesCompraGenerico.getItemCount()>0) {
					jComboBoxid_mesCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUsuarioForeignKey(Long idUsuarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(usuarioTemp!=null) {

					if(this.compra!=null) {
						this.compra.setUsuario(usuarioTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_usuarioCompra.setSelectedItem(usuarioTemp);
					}
				} else {
					//jComboBoxid_usuarioCompra.setSelectedItem(usuarioTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_usuarioCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_usuarioCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUsuarioForeignKeyDescripcion(Long idUsuarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}


			sDescripcion=UsuarioConstantesFunciones.getUsuarioDescripcion(usuarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUsuarioForeignKeyGenerico(Long idUsuarioSeleccionado,JComboBox jComboBoxid_usuarioCompraGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(usuarioTemp!=null) {
				jComboBoxid_usuarioCompraGenerico.setSelectedItem(usuarioTemp);
			} else {
				if(jComboBoxid_usuarioCompraGenerico!=null && jComboBoxid_usuarioCompraGenerico.getItemCount()>0) {
					jComboBoxid_usuarioCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.compra!=null) {
						this.compra.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_monedaCompra.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaCompra.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_monedaCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_monedaCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaCompraGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaCompraGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaCompraGenerico!=null && jComboBoxid_monedaCompraGenerico.getItemCount()>0) {
					jComboBoxid_monedaCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoCambioForeignKey(Long idTipoCambioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocambioTemp!=null) {

					if(this.compra!=null) {
						this.compra.setTipoCambio(tipocambioTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_cambioCompra.setSelectedItem(tipocambioTemp);
					}
				} else {
					//jComboBoxid_tipo_cambioCompra.setSelectedItem(tipocambioTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_cambioCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_cambioCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCambioForeignKeyDescripcion(Long idTipoCambioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}


			sDescripcion=TipoCambioConstantesFunciones.getTipoCambioDescripcion(tipocambioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCambioForeignKeyGenerico(Long idTipoCambioSeleccionado,JComboBox jComboBoxid_tipo_cambioCompraGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(tipocambioTemp!=null) {
				jComboBoxid_tipo_cambioCompraGenerico.setSelectedItem(tipocambioTemp);
			} else {
				if(jComboBoxid_tipo_cambioCompraGenerico!=null && jComboBoxid_tipo_cambioCompraGenerico.getItemCount()>0) {
					jComboBoxid_tipo_cambioCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoInventarioForeignKey(Long idEstadoInventarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoInventario  estadoinventarioTemp=null;

			for(EstadoInventario estadoinventarioAux:estadoinventariosForeignKey) {
				if(estadoinventarioAux.getId()!=null && estadoinventarioAux.getId().equals(idEstadoInventarioSeleccionado)) {
					estadoinventarioTemp=estadoinventarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadoinventarioTemp!=null) {

					if(this.compra!=null) {
						this.compra.setEstadoInventario(estadoinventarioTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_estado_inventarioCompra.setSelectedItem(estadoinventarioTemp);
					}
				} else {
					//jComboBoxid_estado_inventarioCompra.setSelectedItem(estadoinventarioTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_estado_inventarioCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_estado_inventarioCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoInventario") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadoinventarioTemp!=null && jComboBoxid_estado_inventarioFK_IdEstadoInventarioCompra!=null) {
						jComboBoxid_estado_inventarioFK_IdEstadoInventarioCompra.setSelectedItem(estadoinventarioTemp);
					} else {
						if(jComboBoxid_estado_inventarioFK_IdEstadoInventarioCompra!=null) {
							//jComboBoxid_estado_inventarioFK_IdEstadoInventarioCompra.setSelectedItem(estadoinventarioTemp);
							if(jComboBoxid_estado_inventarioFK_IdEstadoInventarioCompra.getItemCount()>0) {
								jComboBoxid_estado_inventarioFK_IdEstadoInventarioCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoInventarioForeignKeyDescripcion(Long idEstadoInventarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoInventario  estadoinventarioTemp=null;

			for(EstadoInventario estadoinventarioAux:estadoinventariosForeignKey) {
				if(estadoinventarioAux.getId()!=null && estadoinventarioAux.getId().equals(idEstadoInventarioSeleccionado)) {
					estadoinventarioTemp=estadoinventarioAux;
					break;
				}
			}


			sDescripcion=EstadoInventarioConstantesFunciones.getEstadoInventarioDescripcion(estadoinventarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoInventarioForeignKeyGenerico(Long idEstadoInventarioSeleccionado,JComboBox jComboBoxid_estado_inventarioCompraGenerico)throws Exception
	{
		try
		{
			EstadoInventario  estadoinventarioTemp=null;

			for(EstadoInventario estadoinventarioAux:estadoinventariosForeignKey) {
				if(estadoinventarioAux.getId()!=null && estadoinventarioAux.getId().equals(idEstadoInventarioSeleccionado)) {
					estadoinventarioTemp=estadoinventarioAux;
					break;
				}
			}

			if(estadoinventarioTemp!=null) {
				jComboBoxid_estado_inventarioCompraGenerico.setSelectedItem(estadoinventarioTemp);
			} else {
				if(jComboBoxid_estado_inventarioCompraGenerico!=null && jComboBoxid_estado_inventarioCompraGenerico.getItemCount()>0) {
					jComboBoxid_estado_inventarioCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.compra!=null) {
						this.compra.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteCompra.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteCompra!=null) {
						jComboBoxid_clienteFK_IdClienteCompra.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteCompra!=null) {
							//jComboBoxid_clienteFK_IdClienteCompra.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteCompra.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteCompraGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteCompraGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteCompraGenerico!=null && jComboBoxid_clienteCompraGenerico.getItemCount()>0) {
					jComboBoxid_clienteCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoForeignKey(Long idFormatoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatoTemp!=null) {

					if(this.compra!=null) {
						this.compra.setFormato(formatoTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_formatoCompra.setSelectedItem(formatoTemp);
					}
				} else {
					//jComboBoxid_formatoCompra.setSelectedItem(formatoTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_formatoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_formatoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoForeignKeyDescripcion(Long idFormatoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoForeignKeyGenerico(Long idFormatoSeleccionado,JComboBox jComboBoxid_formatoCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(formatoTemp!=null) {
				jComboBoxid_formatoCompraGenerico.setSelectedItem(formatoTemp);
			} else {
				if(jComboBoxid_formatoCompraGenerico!=null && jComboBoxid_formatoCompraGenerico.getItemCount()>0) {
					jComboBoxid_formatoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoForeignKey(Long idEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoTemp!=null) {

					if(this.compra!=null) {
						this.compra.setEmpleado(empleadoTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_empleadoCompra.setSelectedItem(empleadoTemp);
					}
				} else {
					//jComboBoxid_empleadoCompra.setSelectedItem(empleadoTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_empleadoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_empleadoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(empleadoTemp!=null && jComboBoxid_empleadoFK_IdEmpleadoCompra!=null) {
						jComboBoxid_empleadoFK_IdEmpleadoCompra.setSelectedItem(empleadoTemp);
					} else {
						if(jComboBoxid_empleadoFK_IdEmpleadoCompra!=null) {
							//jComboBoxid_empleadoFK_IdEmpleadoCompra.setSelectedItem(empleadoTemp);
							if(jComboBoxid_empleadoFK_IdEmpleadoCompra.getItemCount()>0) {
								jComboBoxid_empleadoFK_IdEmpleadoCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoForeignKeyDescripcion(Long idEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoForeignKeyGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxid_empleadoCompraGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(empleadoTemp!=null) {
				jComboBoxid_empleadoCompraGenerico.setSelectedItem(empleadoTemp);
			} else {
				if(jComboBoxid_empleadoCompraGenerico!=null && jComboBoxid_empleadoCompraGenerico.getItemCount()>0) {
					jComboBoxid_empleadoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransportistaForeignKey(Long idTransportistaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transportistaTemp!=null) {

					if(this.compra!=null) {
						this.compra.setTransportista(transportistaTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_transportistaCompra.setSelectedItem(transportistaTemp);
					}
				} else {
					//jComboBoxid_transportistaCompra.setSelectedItem(transportistaTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_transportistaCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_transportistaCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransportistaForeignKeyDescripcion(Long idTransportistaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}


			sDescripcion=TransportistaConstantesFunciones.getTransportistaDescripcion(transportistaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransportistaForeignKeyGenerico(Long idTransportistaSeleccionado,JComboBox jComboBoxid_transportistaCompraGenerico)throws Exception
	{
		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}

			if(transportistaTemp!=null) {
				jComboBoxid_transportistaCompraGenerico.setSelectedItem(transportistaTemp);
			} else {
				if(jComboBoxid_transportistaCompraGenerico!=null && jComboBoxid_transportistaCompraGenerico.getItemCount()>0) {
					jComboBoxid_transportistaCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualOrdenCompraForeignKey(Long idOrdenCompraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			OrdenCompra  ordencompraTemp=null;

			for(OrdenCompra ordencompraAux:ordencomprasForeignKey) {
				if(ordencompraAux.getId()!=null && ordencompraAux.getId().equals(idOrdenCompraSeleccionado)) {
					ordencompraTemp=ordencompraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ordencompraTemp!=null) {

					if(this.compra!=null) {
						this.compra.setOrdenCompra(ordencompraTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.setSelectedItem(ordencompraTemp);
					}
				} else {
					//jComboBoxid_orden_compraCompra.setSelectedItem(ordencompraTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdOrdenCompra") || sFormularioTipoBusqueda.equals("Todos")){
					if(ordencompraTemp!=null && jComboBoxid_orden_compraFK_IdOrdenCompraCompra!=null) {
						jComboBoxid_orden_compraFK_IdOrdenCompraCompra.setSelectedItem(ordencompraTemp);
					} else {
						if(jComboBoxid_orden_compraFK_IdOrdenCompraCompra!=null) {
							//jComboBoxid_orden_compraFK_IdOrdenCompraCompra.setSelectedItem(ordencompraTemp);
							if(jComboBoxid_orden_compraFK_IdOrdenCompraCompra.getItemCount()>0) {
								jComboBoxid_orden_compraFK_IdOrdenCompraCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualOrdenCompraForeignKeyDescripcion(Long idOrdenCompraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			OrdenCompra  ordencompraTemp=null;

			for(OrdenCompra ordencompraAux:ordencomprasForeignKey) {
				if(ordencompraAux.getId()!=null && ordencompraAux.getId().equals(idOrdenCompraSeleccionado)) {
					ordencompraTemp=ordencompraAux;
					break;
				}
			}


			sDescripcion=OrdenCompraConstantesFunciones.getOrdenCompraDescripcion(ordencompraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualOrdenCompraForeignKeyGenerico(Long idOrdenCompraSeleccionado,JComboBox jComboBoxid_orden_compraCompraGenerico)throws Exception
	{
		try
		{
			OrdenCompra  ordencompraTemp=null;

			for(OrdenCompra ordencompraAux:ordencomprasForeignKey) {
				if(ordencompraAux.getId()!=null && ordencompraAux.getId().equals(idOrdenCompraSeleccionado)) {
					ordencompraTemp=ordencompraAux;
					break;
				}
			}

			if(ordencompraTemp!=null) {
				jComboBoxid_orden_compraCompraGenerico.setSelectedItem(ordencompraTemp);
			} else {
				if(jComboBoxid_orden_compraCompraGenerico!=null && jComboBoxid_orden_compraCompraGenerico.getItemCount()>0) {
					jComboBoxid_orden_compraCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPedidoCompraForeignKey(Long idPedidoCompraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			PedidoCompra  pedidocompraTemp=null;

			for(PedidoCompra pedidocompraAux:pedidocomprasForeignKey) {
				if(pedidocompraAux.getId()!=null && pedidocompraAux.getId().equals(idPedidoCompraSeleccionado)) {
					pedidocompraTemp=pedidocompraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(pedidocompraTemp!=null) {

					if(this.compra!=null) {
						this.compra.setPedidoCompra(pedidocompraTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.setSelectedItem(pedidocompraTemp);
					}
				} else {
					//jComboBoxid_pedido_compraCompra.setSelectedItem(pedidocompraTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdPedidoCompra") || sFormularioTipoBusqueda.equals("Todos")){
					if(pedidocompraTemp!=null && jComboBoxid_pedido_compraFK_IdPedidoCompraCompra!=null) {
						jComboBoxid_pedido_compraFK_IdPedidoCompraCompra.setSelectedItem(pedidocompraTemp);
					} else {
						if(jComboBoxid_pedido_compraFK_IdPedidoCompraCompra!=null) {
							//jComboBoxid_pedido_compraFK_IdPedidoCompraCompra.setSelectedItem(pedidocompraTemp);
							if(jComboBoxid_pedido_compraFK_IdPedidoCompraCompra.getItemCount()>0) {
								jComboBoxid_pedido_compraFK_IdPedidoCompraCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPedidoCompraForeignKeyDescripcion(Long idPedidoCompraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			PedidoCompra  pedidocompraTemp=null;

			for(PedidoCompra pedidocompraAux:pedidocomprasForeignKey) {
				if(pedidocompraAux.getId()!=null && pedidocompraAux.getId().equals(idPedidoCompraSeleccionado)) {
					pedidocompraTemp=pedidocompraAux;
					break;
				}
			}


			sDescripcion=PedidoCompraConstantesFunciones.getPedidoCompraDescripcion(pedidocompraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPedidoCompraForeignKeyGenerico(Long idPedidoCompraSeleccionado,JComboBox jComboBoxid_pedido_compraCompraGenerico)throws Exception
	{
		try
		{
			PedidoCompra  pedidocompraTemp=null;

			for(PedidoCompra pedidocompraAux:pedidocomprasForeignKey) {
				if(pedidocompraAux.getId()!=null && pedidocompraAux.getId().equals(idPedidoCompraSeleccionado)) {
					pedidocompraTemp=pedidocompraAux;
					break;
				}
			}

			if(pedidocompraTemp!=null) {
				jComboBoxid_pedido_compraCompraGenerico.setSelectedItem(pedidocompraTemp);
			} else {
				if(jComboBoxid_pedido_compraCompraGenerico!=null && jComboBoxid_pedido_compraCompraGenerico.getItemCount()>0) {
					jComboBoxid_pedido_compraCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoTransaccionModuloForeignKey(Long idTipoTransaccionModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipotransaccionmoduloTemp!=null) {

					if(this.compra!=null) {
						this.compra.setTipoTransaccionModulo(tipotransaccionmoduloTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_transaccion_moduloCompra.setSelectedItem(tipotransaccionmoduloTemp);
					}
				} else {
					//jComboBoxid_tipo_transaccion_moduloCompra.setSelectedItem(tipotransaccionmoduloTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_transaccion_moduloCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_transaccion_moduloCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoTransaccionModulo") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipotransaccionmoduloTemp!=null && jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloCompra!=null) {
						jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloCompra.setSelectedItem(tipotransaccionmoduloTemp);
					} else {
						if(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloCompra!=null) {
							//jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloCompra.setSelectedItem(tipotransaccionmoduloTemp);
							if(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloCompra.getItemCount()>0) {
								jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoTransaccionModuloForeignKeyDescripcion(Long idTipoTransaccionModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}


			sDescripcion=TipoTransaccionModuloConstantesFunciones.getTipoTransaccionModuloDescripcion(tipotransaccionmoduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoTransaccionModuloForeignKeyGenerico(Long idTipoTransaccionModuloSeleccionado,JComboBox jComboBoxid_tipo_transaccion_moduloCompraGenerico)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}

			if(tipotransaccionmoduloTemp!=null) {
				jComboBoxid_tipo_transaccion_moduloCompraGenerico.setSelectedItem(tipotransaccionmoduloTemp);
			} else {
				if(jComboBoxid_tipo_transaccion_moduloCompraGenerico!=null && jComboBoxid_tipo_transaccion_moduloCompraGenerico.getItemCount()>0) {
					jComboBoxid_tipo_transaccion_moduloCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAsientoContableForeignKey(Long idAsientoContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(asientocontableTemp!=null) {

					if(this.compra!=null) {
						this.compra.setAsientoContable(asientocontableTemp);
					}

					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_asiento_contableCompra.setSelectedItem(asientocontableTemp);
					}
				} else {
					//jComboBoxid_asiento_contableCompra.setSelectedItem(asientocontableTemp);
					if(this.jInternalFrameDetalleFormCompra!=null) {
						if(this.jInternalFrameDetalleFormCompra.jComboBoxid_asiento_contableCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_asiento_contableCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(asientocontableTemp!=null && jComboBoxid_asiento_contableFK_IdAsientoContableCompra!=null) {
						jComboBoxid_asiento_contableFK_IdAsientoContableCompra.setSelectedItem(asientocontableTemp);
					} else {
						if(jComboBoxid_asiento_contableFK_IdAsientoContableCompra!=null) {
							//jComboBoxid_asiento_contableFK_IdAsientoContableCompra.setSelectedItem(asientocontableTemp);
							if(jComboBoxid_asiento_contableFK_IdAsientoContableCompra.getItemCount()>0) {
								jComboBoxid_asiento_contableFK_IdAsientoContableCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAsientoContableForeignKeyDescripcion(Long idAsientoContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}


			sDescripcion=AsientoContableConstantesFunciones.getAsientoContableDescripcion(asientocontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAsientoContableForeignKeyGenerico(Long idAsientoContableSeleccionado,JComboBox jComboBoxid_asiento_contableCompraGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(asientocontableTemp!=null) {
				jComboBoxid_asiento_contableCompraGenerico.setSelectedItem(asientocontableTemp);
			} else {
				if(jComboBoxid_asiento_contableCompraGenerico!=null && jComboBoxid_asiento_contableCompraGenerico.getItemCount()>0) {
					jComboBoxid_asiento_contableCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(Compra compra,JComboBox jComboBoxid_empresaCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaCompraGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormCompra.jComboBoxid_empresaCompra.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaCompraGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				compra.setid_empresa(empresaAux.getId());
				compra.setempresa_descripcion(CompraConstantesFunciones.getEmpresaDescripcion(empresaAux));
				compra.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(Compra compra,JComboBox jComboBoxid_sucursalCompraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalCompraGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormCompra.jComboBoxid_sucursalCompra.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalCompraGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				compra.setid_sucursal(sucursalAux.getId());
				compra.setsucursal_descripcion(CompraConstantesFunciones.getSucursalDescripcion(sucursalAux));
				compra.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarModuloForeignKey(Compra compra,JComboBox jComboBoxid_moduloCompraGenerico)throws Exception
	{
		try
		{
			Modulo  moduloAux=new Modulo();

			if(jComboBoxid_moduloCompraGenerico==null) {
				moduloAux=(Modulo)this.jInternalFrameDetalleFormCompra.jComboBoxid_moduloCompra.getSelectedItem();
			} else {
				moduloAux=(Modulo)jComboBoxid_moduloCompraGenerico.getSelectedItem();
			}

			if(moduloAux!=null && moduloAux.getId()!=null) {
				compra.setid_modulo(moduloAux.getId());
				compra.setmodulo_descripcion(CompraConstantesFunciones.getModuloDescripcion(moduloAux));
				compra.setModulo(moduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(Compra compra,JComboBox jComboBoxid_ejercicioCompraGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioCompraGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioCompraGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				compra.setid_ejercicio(ejercicioAux.getId());
				compra.setejercicio_descripcion(CompraConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				compra.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(Compra compra,JComboBox jComboBoxid_periodoCompraGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoCompraGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoCompraGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				compra.setid_periodo(periodoAux.getId());
				compra.setperiodo_descripcion(CompraConstantesFunciones.getPeriodoDescripcion(periodoAux));
				compra.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(Compra compra,JComboBox jComboBoxid_anioCompraGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioCompraGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormCompra.jComboBoxid_anioCompra.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioCompraGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				compra.setid_anio(anioAux.getId());
				compra.setanio_descripcion(CompraConstantesFunciones.getAnioDescripcion(anioAux));
				compra.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(Compra compra,JComboBox jComboBoxid_mesCompraGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesCompraGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormCompra.jComboBoxid_mesCompra.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesCompraGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				compra.setid_mes(mesAux.getId());
				compra.setmes_descripcion(CompraConstantesFunciones.getMesDescripcion(mesAux));
				compra.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUsuarioForeignKey(Compra compra,JComboBox jComboBoxid_usuarioCompraGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioAux=new Usuario();

			if(jComboBoxid_usuarioCompraGenerico==null) {
				usuarioAux=(Usuario)this.jInternalFrameDetalleFormCompra.jComboBoxid_usuarioCompra.getSelectedItem();
			} else {
				usuarioAux=(Usuario)jComboBoxid_usuarioCompraGenerico.getSelectedItem();
			}

			if(usuarioAux!=null && usuarioAux.getId()!=null) {
				compra.setid_usuario(usuarioAux.getId());
				compra.setusuario_descripcion(CompraConstantesFunciones.getUsuarioDescripcion(usuarioAux));
				compra.setUsuario(usuarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(Compra compra,JComboBox jComboBoxid_monedaCompraGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaCompraGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormCompra.jComboBoxid_monedaCompra.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaCompraGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				compra.setid_moneda(monedaAux.getId());
				compra.setmoneda_descripcion(CompraConstantesFunciones.getMonedaDescripcion(monedaAux));
				compra.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCambioForeignKey(Compra compra,JComboBox jComboBoxid_tipo_cambioCompraGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioAux=new TipoCambio();

			if(jComboBoxid_tipo_cambioCompraGenerico==null) {
				tipocambioAux=(TipoCambio)this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_cambioCompra.getSelectedItem();
			} else {
				tipocambioAux=(TipoCambio)jComboBoxid_tipo_cambioCompraGenerico.getSelectedItem();
			}

			if(tipocambioAux!=null) {
				compra.setid_tipo_cambio(tipocambioAux.getId());
				compra.settipocambio_descripcion(CompraConstantesFunciones.getTipoCambioDescripcion(tipocambioAux));
				compra.setTipoCambio(tipocambioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoInventarioForeignKey(Compra compra,JComboBox jComboBoxid_estado_inventarioCompraGenerico)throws Exception
	{
		try
		{
			EstadoInventario  estadoinventarioAux=new EstadoInventario();

			if(jComboBoxid_estado_inventarioCompraGenerico==null) {
				estadoinventarioAux=(EstadoInventario)this.jInternalFrameDetalleFormCompra.jComboBoxid_estado_inventarioCompra.getSelectedItem();
			} else {
				estadoinventarioAux=(EstadoInventario)jComboBoxid_estado_inventarioCompraGenerico.getSelectedItem();
			}

			if(estadoinventarioAux!=null && estadoinventarioAux.getId()!=null) {
				compra.setid_estado_inventario(estadoinventarioAux.getId());
				compra.setestadoinventario_descripcion(CompraConstantesFunciones.getEstadoInventarioDescripcion(estadoinventarioAux));
				compra.setEstadoInventario(estadoinventarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(Compra compra,JComboBox jComboBoxid_clienteCompraGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteCompraGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteCompraGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				compra.setid_cliente(clienteAux.getId());
				compra.setcliente_descripcion(CompraConstantesFunciones.getClienteDescripcion(clienteAux));
				compra.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoForeignKey(Compra compra,JComboBox jComboBoxid_formatoCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formatoCompraGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormCompra.jComboBoxid_formatoCompra.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formatoCompraGenerico.getSelectedItem();
			}

			if(formatoAux!=null && formatoAux.getId()!=null) {
				compra.setid_formato(formatoAux.getId());
				compra.setformato_descripcion(CompraConstantesFunciones.getFormatoDescripcion(formatoAux));
				compra.setFormato(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoForeignKey(Compra compra,JComboBox jComboBoxid_empleadoCompraGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleadoCompraGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormCompra.jComboBoxid_empleadoCompra.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleadoCompraGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				compra.setid_empleado(empleadoAux.getId());
				compra.setempleado_descripcion(CompraConstantesFunciones.getEmpleadoDescripcion(empleadoAux));
				compra.setEmpleado(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransportistaForeignKey(Compra compra,JComboBox jComboBoxid_transportistaCompraGenerico)throws Exception
	{
		try
		{
			Transportista  transportistaAux=new Transportista();

			if(jComboBoxid_transportistaCompraGenerico==null) {
				transportistaAux=(Transportista)this.jInternalFrameDetalleFormCompra.jComboBoxid_transportistaCompra.getSelectedItem();
			} else {
				transportistaAux=(Transportista)jComboBoxid_transportistaCompraGenerico.getSelectedItem();
			}

			if(transportistaAux!=null) {
				compra.setid_transportista(transportistaAux.getId());
				compra.settransportista_descripcion(CompraConstantesFunciones.getTransportistaDescripcion(transportistaAux));
				compra.setTransportista(transportistaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarOrdenCompraForeignKey(Compra compra,JComboBox jComboBoxid_orden_compraCompraGenerico)throws Exception
	{
		try
		{
			OrdenCompra  ordencompraAux=new OrdenCompra();

			if(jComboBoxid_orden_compraCompraGenerico==null) {
				ordencompraAux=(OrdenCompra)this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.getSelectedItem();
			} else {
				ordencompraAux=(OrdenCompra)jComboBoxid_orden_compraCompraGenerico.getSelectedItem();
			}

			if(ordencompraAux!=null) {
				compra.setid_orden_compra(ordencompraAux.getId());
				compra.setordencompra_descripcion(CompraConstantesFunciones.getOrdenCompraDescripcion(ordencompraAux));
				compra.setOrdenCompra(ordencompraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPedidoCompraForeignKey(Compra compra,JComboBox jComboBoxid_pedido_compraCompraGenerico)throws Exception
	{
		try
		{
			PedidoCompra  pedidocompraAux=new PedidoCompra();

			if(jComboBoxid_pedido_compraCompraGenerico==null) {
				pedidocompraAux=(PedidoCompra)this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.getSelectedItem();
			} else {
				pedidocompraAux=(PedidoCompra)jComboBoxid_pedido_compraCompraGenerico.getSelectedItem();
			}

			if(pedidocompraAux!=null) {
				compra.setid_pedido_compra(pedidocompraAux.getId());
				compra.setpedidocompra_descripcion(CompraConstantesFunciones.getPedidoCompraDescripcion(pedidocompraAux));
				compra.setPedidoCompra(pedidocompraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoTransaccionModuloForeignKey(Compra compra,JComboBox jComboBoxid_tipo_transaccion_moduloCompraGenerico)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloAux=new TipoTransaccionModulo();

			if(jComboBoxid_tipo_transaccion_moduloCompraGenerico==null) {
				tipotransaccionmoduloAux=(TipoTransaccionModulo)this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_transaccion_moduloCompra.getSelectedItem();
			} else {
				tipotransaccionmoduloAux=(TipoTransaccionModulo)jComboBoxid_tipo_transaccion_moduloCompraGenerico.getSelectedItem();
			}

			if(tipotransaccionmoduloAux!=null) {
				compra.setid_tipo_transaccion_modulo(tipotransaccionmoduloAux.getId());
				compra.settipotransaccionmodulo_descripcion(CompraConstantesFunciones.getTipoTransaccionModuloDescripcion(tipotransaccionmoduloAux));
				compra.setTipoTransaccionModulo(tipotransaccionmoduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAsientoContableForeignKey(Compra compra,JComboBox jComboBoxid_asiento_contableCompraGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableAux=new AsientoContable();

			if(jComboBoxid_asiento_contableCompraGenerico==null) {
				asientocontableAux=(AsientoContable)this.jInternalFrameDetalleFormCompra.jComboBoxid_asiento_contableCompra.getSelectedItem();
			} else {
				asientocontableAux=(AsientoContable)jComboBoxid_asiento_contableCompraGenerico.getSelectedItem();
			}

			if(asientocontableAux!=null) {
				compra.setid_asiento_contable(asientocontableAux.getId());
				compra.setasientocontable_descripcion(CompraConstantesFunciones.getAsientoContableDescripcion(asientocontableAux));
				compra.setAsientoContable(asientocontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_empresaCompra.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_empresaCompra.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_sucursalCompra.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_sucursalCompra.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_moduloCompra.removeAllItems();

							for(Modulo modulo:this.modulosForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_moduloCompra.addItem(modulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_anioCompra.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_anioCompra.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_mesCompra.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_mesCompra.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUsuariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUsuario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_usuarioCompra.removeAllItems();

							for(Usuario usuario:this.usuariosForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_usuarioCompra.addItem(usuario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_monedaCompra.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_monedaCompra.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCambiosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCambio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_cambioCompra.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_cambioCompra.addItem(tipocambio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoInventariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoInventario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_estado_inventarioCompra.removeAllItems();

							for(EstadoInventario estadoinventario:this.estadoinventariosForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_estado_inventarioCompra.addItem(estadoinventario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoInventario") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!CompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_inventarioFK_IdEstadoInventarioCompra.removeAllItems();

							for(EstadoInventario estadoinventario:this.estadoinventariosForeignKey) {
								this.jComboBoxid_estado_inventarioFK_IdEstadoInventarioCompra.addItem(estadoinventario);
							}
						}

						if(!CompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!CompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteCompra.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteCompra.addItem(cliente);
							}
						}

						if(!CompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_formatoCompra.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_formatoCompra.addItem(formato);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_empleadoCompra.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_empleadoCompra.addItem(empleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!CompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoCompra.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jComboBoxid_empleadoFK_IdEmpleadoCompra.addItem(empleado);
							}
						}

						if(!CompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransportistasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransportista=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_transportistaCompra.removeAllItems();

							for(Transportista transportista:this.transportistasForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_transportistaCompra.addItem(transportista);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameOrdenComprasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingOrdenCompra=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.removeAllItems();

							for(OrdenCompra ordencompra:this.ordencomprasForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.addItem(ordencompra);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdOrdenCompra") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!CompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_orden_compraFK_IdOrdenCompraCompra.removeAllItems();

							for(OrdenCompra ordencompra:this.ordencomprasForeignKey) {
								this.jComboBoxid_orden_compraFK_IdOrdenCompraCompra.addItem(ordencompra);
							}
						}

						if(!CompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePedidoComprasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPedidoCompra=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.removeAllItems();

							for(PedidoCompra pedidocompra:this.pedidocomprasForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.addItem(pedidocompra);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdPedidoCompra") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!CompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_pedido_compraFK_IdPedidoCompraCompra.removeAllItems();

							for(PedidoCompra pedidocompra:this.pedidocomprasForeignKey) {
								this.jComboBoxid_pedido_compraFK_IdPedidoCompraCompra.addItem(pedidocompra);
							}
						}

						if(!CompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoTransaccionModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoTransaccionModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_transaccion_moduloCompra.removeAllItems();

							for(TipoTransaccionModulo tipotransaccionmodulo:this.tipotransaccionmodulosForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_transaccion_moduloCompra.addItem(tipotransaccionmodulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoTransaccionModulo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!CompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloCompra.removeAllItems();

							for(TipoTransaccionModulo tipotransaccionmodulo:this.tipotransaccionmodulosForeignKey) {
								this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloCompra.addItem(tipotransaccionmodulo);
							}
						}

						if(!CompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAsientoContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAsientoContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) { 
							this.jInternalFrameDetalleFormCompra.jComboBoxid_asiento_contableCompra.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jInternalFrameDetalleFormCompra.jComboBoxid_asiento_contableCompra.addItem(asientocontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCompra!=null) { 
					}

					if(!CompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!CompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableCompra.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jComboBoxid_asiento_contableFK_IdAsientoContableCompra.addItem(asientocontable);
							}
						}

						if(!CompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_empresaCompra.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_empresaCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_sucursalCompra.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_sucursalCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameModuloForeignKey(Modulo modulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_moduloCompra.setSelectedItem(modulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_moduloCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_anioCompra.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_anioCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_mesCompra.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_mesCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUsuarioForeignKey(Usuario usuario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_usuarioCompra.setSelectedItem(usuario);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_usuarioCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_monedaCompra.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_monedaCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoCambioForeignKey(TipoCambio tipocambio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_cambioCompra.setSelectedItem(tipocambio);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_cambioCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoInventarioForeignKey(EstadoInventario estadoinventario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_estado_inventarioCompra.setSelectedItem(estadoinventario);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_estado_inventarioCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_inventarioFK_IdEstadoInventarioCompra.setSelectedItem(estadoinventario);
						} else {
							this.jComboBoxid_estado_inventarioFK_IdEstadoInventarioCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteCompra.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoForeignKey(Formato formato,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_formatoCompra.setSelectedItem(formato);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_formatoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoForeignKey(Empleado empleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_empleadoCompra.setSelectedItem(empleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_empleadoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empleadoFK_IdEmpleadoCompra.setSelectedItem(empleado);
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransportistaForeignKey(Transportista transportista,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_transportistaCompra.setSelectedItem(transportista);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_transportistaCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameOrdenCompraForeignKey(OrdenCompra ordencompra,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.setSelectedItem(ordencompra);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_orden_compraFK_IdOrdenCompraCompra.setSelectedItem(ordencompra);
						} else {
							this.jComboBoxid_orden_compraFK_IdOrdenCompraCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePedidoCompraForeignKey(PedidoCompra pedidocompra,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.setSelectedItem(pedidocompra);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_pedido_compraFK_IdPedidoCompraCompra.setSelectedItem(pedidocompra);
						} else {
							this.jComboBoxid_pedido_compraFK_IdPedidoCompraCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoTransaccionModuloForeignKey(TipoTransaccionModulo tipotransaccionmodulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_transaccion_moduloCompra.setSelectedItem(tipotransaccionmodulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_transaccion_moduloCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloCompra.setSelectedItem(tipotransaccionmodulo);
						} else {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAsientoContableForeignKey(AsientoContable asientocontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_asiento_contableCompra.setSelectedItem(asientocontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormCompra!=null) {
							this.jInternalFrameDetalleFormCompra.jComboBoxid_asiento_contableCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableCompra.setSelectedItem(asientocontable);
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesCompra() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			CompraConstantesFunciones.refrescarForeignKeysDescripcionesCompra(this.compraLogic.getCompras());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			CompraConstantesFunciones.refrescarForeignKeysDescripcionesCompra(this.compras);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Modulo.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(Usuario.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(TipoCambio.class));
		classes.add(new Classe(EstadoInventario.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(Formato.class));
		classes.add(new Classe(Empleado.class));
		classes.add(new Classe(Transportista.class));
		classes.add(new Classe(OrdenCompra.class));
		classes.add(new Classe(PedidoCompra.class));
		classes.add(new Classe(TipoTransaccionModulo.class));
		classes.add(new Classe(AsientoContable.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//compraLogic.setCompras(this.compras);
			compraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public CompraParameterReturnGeneral getCompraParameterGeneral() {
		return this.compraParameterGeneral;
	}
	
	public void setCompraParameterGeneral(CompraParameterReturnGeneral compraParameterGeneral) {
		this.compraParameterGeneral = compraParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoCompra() {
		return isPermisoTodoCompra;
	}

	public void setIsPermisoTodoCompra(Boolean isPermisoTodoCompra) {
		this.isPermisoTodoCompra = isPermisoTodoCompra;
	}

	public Boolean getIsPermisoNuevoCompra() {
		return isPermisoNuevoCompra;
	}

	public void setIsPermisoNuevoCompra(Boolean isPermisoNuevoCompra) {
		this.isPermisoNuevoCompra = isPermisoNuevoCompra;
	}

	public Boolean getIsPermisoActualizarCompra() {
		return isPermisoActualizarCompra;
	}

	public void setIsPermisoActualizarCompra(Boolean isPermisoActualizarCompra) {
		this.isPermisoActualizarCompra = isPermisoActualizarCompra;
	}

	public Boolean getIsPermisoEliminarCompra() {
		return isPermisoEliminarCompra;
	}

	public void setIsPermisoEliminarCompra(Boolean isPermisoEliminarCompra) {
		this.isPermisoEliminarCompra = isPermisoEliminarCompra;
	}

	public Boolean getIsPermisoGuardarCambiosCompra() {
		return isPermisoGuardarCambiosCompra;
	}

	public void setIsPermisoGuardarCambiosCompra(Boolean isPermisoGuardarCambiosCompra) {
		this.isPermisoGuardarCambiosCompra = isPermisoGuardarCambiosCompra;
	}
	
	public Boolean getIsPermisoConsultaCompra() {
		return isPermisoConsultaCompra;
	}

	public void setIsPermisoConsultaCompra(Boolean isPermisoConsultaCompra) {
		this.isPermisoConsultaCompra = isPermisoConsultaCompra;
	}

	public Boolean getIsPermisoBusquedaCompra() {
		return isPermisoBusquedaCompra;
	}

	public void setIsPermisoBusquedaCompra(Boolean isPermisoBusquedaCompra) {
		this.isPermisoBusquedaCompra = isPermisoBusquedaCompra;
	}

	public Boolean getIsPermisoReporteCompra() {
		return isPermisoReporteCompra;
	}

	public void setIsPermisoReporteCompra(Boolean isPermisoReporteCompra) {
		this.isPermisoReporteCompra = isPermisoReporteCompra;
	}
	
	public Boolean getIsPermisoPaginacionMedioCompra() {
		return isPermisoPaginacionMedioCompra;
	}

	public void setIsPermisoPaginacionMedioCompra(Boolean isPermisoPaginacionMedioCompra) {
		this.isPermisoPaginacionMedioCompra = isPermisoPaginacionMedioCompra;
	}
	
	public Boolean getIsPermisoPaginacionTodoCompra() {
		return isPermisoPaginacionTodoCompra;
	}

	public void setIsPermisoPaginacionTodoCompra(Boolean isPermisoPaginacionTodoCompra) {
		this.isPermisoPaginacionTodoCompra = isPermisoPaginacionTodoCompra;
	}
	
	public Boolean getIsPermisoPaginacionAltoCompra() {
		return isPermisoPaginacionAltoCompra;
	}

	public void setIsPermisoPaginacionAltoCompra(Boolean isPermisoPaginacionAltoCompra) {
		this.isPermisoPaginacionAltoCompra = isPermisoPaginacionAltoCompra;
	}
	
	public Boolean getIsPermisoCopiarCompra() {
		return isPermisoCopiarCompra;
	}

	public void setIsPermisoCopiarCompra(Boolean isPermisoCopiarCompra) {
		this.isPermisoCopiarCompra = isPermisoCopiarCompra;
	}
	
	public Boolean getIsPermisoVerFormCompra() {
		return isPermisoVerFormCompra;
	}

	public void setIsPermisoVerFormCompra(Boolean isPermisoVerFormCompra) {
		this.isPermisoVerFormCompra = isPermisoVerFormCompra;
	}
	
	public Boolean getIsPermisoDuplicarCompra() {
		return isPermisoDuplicarCompra;
	}

	public void setIsPermisoDuplicarCompra(Boolean isPermisoDuplicarCompra) {
		this.isPermisoDuplicarCompra = isPermisoDuplicarCompra;
	}
	
	public Boolean getIsPermisoOrdenCompra() {
		return isPermisoOrdenCompra;
	}

	public void setIsPermisoOrdenCompra(Boolean isPermisoOrdenCompra) {
		this.isPermisoOrdenCompra = isPermisoOrdenCompra;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoCompra() {
		return isVisibilidadCeldaNuevoCompra;
	}

	public void setIsVisibilidadCeldaNuevoCompra(Boolean isVisibilidadCeldaNuevoCompra) {
		this.isVisibilidadCeldaNuevoCompra = isVisibilidadCeldaNuevoCompra;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarCompra() {
		return isVisibilidadCeldaDuplicarCompra;
	}

	public void setIsVisibilidadCeldaDuplicarCompra(Boolean isVisibilidadCeldaDuplicarCompra) {
		this.isVisibilidadCeldaDuplicarCompra = isVisibilidadCeldaDuplicarCompra;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarCompra() {
		return isVisibilidadCeldaCopiarCompra;
	}

	public void setIsVisibilidadCeldaCopiarCompra(Boolean isVisibilidadCeldaCopiarCompra) {
		this.isVisibilidadCeldaCopiarCompra = isVisibilidadCeldaCopiarCompra;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormCompra() {
		return isVisibilidadCeldaVerFormCompra;
	}

	public void setIsVisibilidadCeldaVerFormCompra(Boolean isVisibilidadCeldaVerFormCompra) {
		this.isVisibilidadCeldaVerFormCompra = isVisibilidadCeldaVerFormCompra;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenCompra() {
		return isVisibilidadCeldaOrdenCompra;
	}

	public void setIsVisibilidadCeldaOrdenCompra(Boolean isVisibilidadCeldaOrdenCompra) {
		this.isVisibilidadCeldaOrdenCompra = isVisibilidadCeldaOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesCompra() {
		return isVisibilidadCeldaNuevoRelacionesCompra;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesCompra(Boolean isVisibilidadCeldaNuevoRelacionesCompra) {
		this.isVisibilidadCeldaNuevoRelacionesCompra = isVisibilidadCeldaNuevoRelacionesCompra;
	}
	
	public Boolean getIsVisibilidadCeldaModificarCompra() {
		return isVisibilidadCeldaModificarCompra;
	}

	public void setIsVisibilidadCeldaModificarCompra(Boolean isVisibilidadCeldaModificarCompra) {
		this.isVisibilidadCeldaModificarCompra = isVisibilidadCeldaModificarCompra;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarCompra() {
		return isVisibilidadCeldaActualizarCompra;
	}

	public void setIsVisibilidadCeldaActualizarCompra(Boolean isVisibilidadCeldaActualizarCompra) {
		this.isVisibilidadCeldaActualizarCompra = isVisibilidadCeldaActualizarCompra;
	}

	public Boolean getIsVisibilidadCeldaEliminarCompra() {
		return isVisibilidadCeldaEliminarCompra;
	}

	public void setIsVisibilidadCeldaEliminarCompra(Boolean isVisibilidadCeldaEliminarCompra) {
		this.isVisibilidadCeldaEliminarCompra = isVisibilidadCeldaEliminarCompra;
	}

	public Boolean getIsVisibilidadCeldaCancelarCompra() {
		return isVisibilidadCeldaCancelarCompra;
	}

	public void setIsVisibilidadCeldaCancelarCompra(Boolean isVisibilidadCeldaCancelarCompra) {
		this.isVisibilidadCeldaCancelarCompra = isVisibilidadCeldaCancelarCompra;
	}

	public Boolean getIsVisibilidadCeldaGuardarCompra() {
		return isVisibilidadCeldaGuardarCompra;
	}

	public void setIsVisibilidadCeldaGuardarCompra(Boolean isVisibilidadCeldaGuardarCompra) {
		this.isVisibilidadCeldaGuardarCompra = isVisibilidadCeldaGuardarCompra;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosCompra() {
		return isVisibilidadCeldaGuardarCambiosCompra;
	}

	public void setIsVisibilidadCeldaGuardarCambiosCompra(Boolean isVisibilidadCeldaGuardarCambiosCompra) {
		this.isVisibilidadCeldaGuardarCambiosCompra = isVisibilidadCeldaGuardarCambiosCompra;
	}
		
	public CompraSessionBean getcompraSessionBean() {
		return this.compraSessionBean;
	}
	
	public void setcompraSessionBean(CompraSessionBean compraSessionBean) {
		this.compraSessionBean=compraSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdAsientoContable() {
		return this.isVisibilidadFK_IdAsientoContable;
	}

	public void setisVisibilidadFK_IdAsientoContable(Boolean isVisibilidadFK_IdAsientoContable) {
		this.isVisibilidadFK_IdAsientoContable=isVisibilidadFK_IdAsientoContable;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpleado() {
		return this.isVisibilidadFK_IdEmpleado;
	}

	public void setisVisibilidadFK_IdEmpleado(Boolean isVisibilidadFK_IdEmpleado) {
		this.isVisibilidadFK_IdEmpleado=isVisibilidadFK_IdEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoInventario() {
		return this.isVisibilidadFK_IdEstadoInventario;
	}

	public void setisVisibilidadFK_IdEstadoInventario(Boolean isVisibilidadFK_IdEstadoInventario) {
		this.isVisibilidadFK_IdEstadoInventario=isVisibilidadFK_IdEstadoInventario;
	}

	public Boolean getisVisibilidadFK_IdFormato() {
		return this.isVisibilidadFK_IdFormato;
	}

	public void setisVisibilidadFK_IdFormato(Boolean isVisibilidadFK_IdFormato) {
		this.isVisibilidadFK_IdFormato=isVisibilidadFK_IdFormato;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdModulo() {
		return this.isVisibilidadFK_IdModulo;
	}

	public void setisVisibilidadFK_IdModulo(Boolean isVisibilidadFK_IdModulo) {
		this.isVisibilidadFK_IdModulo=isVisibilidadFK_IdModulo;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdOrdenCompra() {
		return this.isVisibilidadFK_IdOrdenCompra;
	}

	public void setisVisibilidadFK_IdOrdenCompra(Boolean isVisibilidadFK_IdOrdenCompra) {
		this.isVisibilidadFK_IdOrdenCompra=isVisibilidadFK_IdOrdenCompra;
	}

	public Boolean getisVisibilidadFK_IdPedidoCompra() {
		return this.isVisibilidadFK_IdPedidoCompra;
	}

	public void setisVisibilidadFK_IdPedidoCompra(Boolean isVisibilidadFK_IdPedidoCompra) {
		this.isVisibilidadFK_IdPedidoCompra=isVisibilidadFK_IdPedidoCompra;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoCambio() {
		return this.isVisibilidadFK_IdTipoCambio;
	}

	public void setisVisibilidadFK_IdTipoCambio(Boolean isVisibilidadFK_IdTipoCambio) {
		this.isVisibilidadFK_IdTipoCambio=isVisibilidadFK_IdTipoCambio;
	}

	public Boolean getisVisibilidadFK_IdTipoTransaccionModulo() {
		return this.isVisibilidadFK_IdTipoTransaccionModulo;
	}

	public void setisVisibilidadFK_IdTipoTransaccionModulo(Boolean isVisibilidadFK_IdTipoTransaccionModulo) {
		this.isVisibilidadFK_IdTipoTransaccionModulo=isVisibilidadFK_IdTipoTransaccionModulo;
	}

	public Boolean getisVisibilidadFK_IdTransportista() {
		return this.isVisibilidadFK_IdTransportista;
	}

	public void setisVisibilidadFK_IdTransportista(Boolean isVisibilidadFK_IdTransportista) {
		this.isVisibilidadFK_IdTransportista=isVisibilidadFK_IdTransportista;
	}

	public Boolean getisVisibilidadFK_IdUsuario() {
		return this.isVisibilidadFK_IdUsuario;
	}

	public void setisVisibilidadFK_IdUsuario(Boolean isVisibilidadFK_IdUsuario) {
		this.isVisibilidadFK_IdUsuario=isVisibilidadFK_IdUsuario;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysCompra(Compra compra)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(compra,null);
				this.setActualParaGuardarSucursalForeignKey(compra,null);
				this.setActualParaGuardarModuloForeignKey(compra,null);
				this.setActualParaGuardarEjercicioForeignKey(compra,null);
				this.setActualParaGuardarPeriodoForeignKey(compra,null);
				this.setActualParaGuardarAnioForeignKey(compra,null);
				this.setActualParaGuardarMesForeignKey(compra,null);
				this.setActualParaGuardarUsuarioForeignKey(compra,null);
				this.setActualParaGuardarMonedaForeignKey(compra,null);
				this.setActualParaGuardarTipoCambioForeignKey(compra,null);
				this.setActualParaGuardarEstadoInventarioForeignKey(compra,null);
				this.setActualParaGuardarClienteForeignKey(compra,null);
				this.setActualParaGuardarFormatoForeignKey(compra,null);
				this.setActualParaGuardarEmpleadoForeignKey(compra,null);
				this.setActualParaGuardarTransportistaForeignKey(compra,null);
				this.setActualParaGuardarOrdenCompraForeignKey(compra,null);
				this.setActualParaGuardarPedidoCompraForeignKey(compra,null);
				this.setActualParaGuardarTipoTransaccionModuloForeignKey(compra,null);
				this.setActualParaGuardarAsientoContableForeignKey(compra,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(Compra compra,Compra compraAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalCompra(compra);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		compraAux.setId(compra.getId());
		compraAux.setVersionRow(compra.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessCompra();
		
			int intSelectedRow = this.jTableDatosCompra.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(CompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = compraValidator.getInvalidValues(this.compra);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			compraLogic.setDatosCliente(datosCliente);
			compraLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				compraAux=new  Compra();
				
				compraAux.setIsNew(true);
				compraAux.setIsChanged(true);
				
				compraAux.setCompraOriginal(this.compra);
				
				compraAux.setId(this.compra.getId());	
				compraAux.setVersionRow(this.compra.getVersionRow());	
				compraAux.setid_empresa(this.compra.getid_empresa());	
				compraAux.setid_sucursal(this.compra.getid_sucursal());	
				compraAux.setid_modulo(this.compra.getid_modulo());	
				compraAux.setid_ejercicio(this.compra.getid_ejercicio());	
				compraAux.setid_periodo(this.compra.getid_periodo());	
				compraAux.setid_anio(this.compra.getid_anio());	
				compraAux.setid_mes(this.compra.getid_mes());	
				compraAux.setid_usuario(this.compra.getid_usuario());	
				compraAux.setfecha_emision(this.compra.getfecha_emision());	
				compraAux.setfecha_entrega(this.compra.getfecha_entrega());	
				compraAux.setnumero_secuencial(this.compra.getnumero_secuencial());	
				compraAux.setid_moneda(this.compra.getid_moneda());	
				
				if(this.compra.getid_tipo_cambio()!=null && this.compra.getid_tipo_cambio()>0L) {
					compraAux.setid_tipo_cambio(this.compra.getid_tipo_cambio());
				} else {
					compraAux.setid_tipo_cambio(null);
				}	
				compraAux.setid_estado_inventario(this.compra.getid_estado_inventario());	
				compraAux.setid_cliente(this.compra.getid_cliente());	
				compraAux.setid_formato(this.compra.getid_formato());	
				compraAux.setid_empleado(this.compra.getid_empleado());	
				compraAux.setnumero_factura(this.compra.getnumero_factura());	
				
				if(this.compra.getid_transportista()!=null && this.compra.getid_transportista()>0L) {
					compraAux.setid_transportista(this.compra.getid_transportista());
				} else {
					compraAux.setid_transportista(null);
				}	
				compraAux.setdescripcion(this.compra.getdescripcion());	
				
				if(this.compra.getid_orden_compra()!=null && this.compra.getid_orden_compra()>0L) {
					compraAux.setid_orden_compra(this.compra.getid_orden_compra());
				} else {
					compraAux.setid_orden_compra(null);
				}	
				
				if(this.compra.getid_pedido_compra()!=null && this.compra.getid_pedido_compra()>0L) {
					compraAux.setid_pedido_compra(this.compra.getid_pedido_compra());
				} else {
					compraAux.setid_pedido_compra(null);
				}	
				compraAux.setautori_usuario(this.compra.getautori_usuario());	
				compraAux.setfactura_inicial(this.compra.getfactura_inicial());	
				compraAux.setfactura_final(this.compra.getfactura_final());	
				compraAux.setservicio_documento(this.compra.getservicio_documento());	
				compraAux.setfecha_valor(this.compra.getfecha_valor());	
				compraAux.setporcentaje_descuento(this.compra.getporcentaje_descuento());	
				compraAux.setsuman(this.compra.getsuman());	
				compraAux.setice(this.compra.getice());	
				compraAux.setvalor_descuento(this.compra.getvalor_descuento());	
				compraAux.settotal_descuento(this.compra.gettotal_descuento());	
				compraAux.setiva(this.compra.getiva());	
				compraAux.setstock(this.compra.getstock());	
				compraAux.setsub_total(this.compra.getsub_total());	
				compraAux.settotal_otro(this.compra.gettotal_otro());	
				compraAux.setultimo_costo(this.compra.getultimo_costo());	
				compraAux.setnumero_items(this.compra.getnumero_items());	
				compraAux.setretencion(this.compra.getretencion());	
				compraAux.settotal(this.compra.gettotal());	
				compraAux.setflete(this.compra.getflete());	
				compraAux.setimpuesto(this.compra.getimpuesto());	
				compraAux.setid_tipo_transaccion_modulo(this.compra.getid_tipo_transaccion_modulo());	
				compraAux.setid_asiento_contable(this.compra.getid_asiento_contable());	
				compraAux.setnumero_comprobante(this.compra.getnumero_comprobante());	
				compraAux.setfecha(this.compra.getfecha());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.compraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.compraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(compraAux,compraLogic.getCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(compraAux,compras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.compraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.compraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.saveCompras();//WithConnection
						//compraLogic.getSetVersionRowCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.compra,compraAux);
					
					this.refrescarForeignKeysDescripcionesCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.compraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.getRetencionInvens().addAll(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvensEliminados);
							this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.getTransaccionLocals().addAll(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalsEliminados);
							this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens().addAll(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvensEliminados);
							this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.getDetalleCompras().addAll(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecomprasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvens.addAll(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvensEliminados);
							this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocals.addAll(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalsEliminados);
							this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvens.addAll(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvensEliminados);
							this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompras.addAll(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecomprasEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.compraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								compraLogic.saveCompraRelaciones(compraAux,this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.getRetencionInvens(),this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.getTransaccionLocals(),this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens(),this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.getDetalleCompras());//WithConnection
								//compraLogic.getSetVersionRowCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.compra,compraAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.setRetencionInvens(new ArrayList<RetencionInven>());
							this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.setTransaccionLocals(new ArrayList<TransaccionLocal>());
							this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.setFormaPagoInvens(new ArrayList<FormaPagoInven>());
							this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.setDetalleCompras(new ArrayList<DetalleCompra>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvens= new ArrayList<RetencionInven>();
							this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocals= new ArrayList<TransaccionLocal>();
							this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvens= new ArrayList<FormaPagoInven>();
							this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompras= new ArrayList<DetalleCompra>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.quitarFilaTotales();}
							compraAux.setRetencionInvens(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.getRetencionInvens());

							if(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.quitarFilaTotales();}
							compraAux.setTransaccionLocals(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.getTransaccionLocals());

							if(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();}
							compraAux.setFormaPagoInvens(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens());

							if(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.quitarFilaTotales();}
							compraAux.setDetalleCompras(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.getDetalleCompras());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.compraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.compraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(compraAux,compraLogic.getCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(compraAux,compras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.compra,compraAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				compraAux=new  Compra();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.compraSessionBean.getEsGuardarRelacionado() 
					|| (this.compraSessionBean.getEsGuardarRelacionado() && this.compra.getId()>=0)) {
						
					compraAux.setIsNew(false);
				}
				
				compraAux.setIsDeleted(false);
			
				compraAux.setId(this.compra.getId());	
				compraAux.setVersionRow(this.compra.getVersionRow());	
				compraAux.setid_empresa(this.compra.getid_empresa());	
				compraAux.setid_sucursal(this.compra.getid_sucursal());	
				compraAux.setid_modulo(this.compra.getid_modulo());	
				compraAux.setid_ejercicio(this.compra.getid_ejercicio());	
				compraAux.setid_periodo(this.compra.getid_periodo());	
				compraAux.setid_anio(this.compra.getid_anio());	
				compraAux.setid_mes(this.compra.getid_mes());	
				compraAux.setid_usuario(this.compra.getid_usuario());	
				compraAux.setfecha_emision(this.compra.getfecha_emision());	
				compraAux.setfecha_entrega(this.compra.getfecha_entrega());	
				compraAux.setnumero_secuencial(this.compra.getnumero_secuencial());	
				compraAux.setid_moneda(this.compra.getid_moneda());	
				
				if(this.compra.getid_tipo_cambio()!=null && this.compra.getid_tipo_cambio()>0L) {
					compraAux.setid_tipo_cambio(this.compra.getid_tipo_cambio());
				} else {
					compraAux.setid_tipo_cambio(null);
				}	
				compraAux.setid_estado_inventario(this.compra.getid_estado_inventario());	
				compraAux.setid_cliente(this.compra.getid_cliente());	
				compraAux.setid_formato(this.compra.getid_formato());	
				compraAux.setid_empleado(this.compra.getid_empleado());	
				compraAux.setnumero_factura(this.compra.getnumero_factura());	
				
				if(this.compra.getid_transportista()!=null && this.compra.getid_transportista()>0L) {
					compraAux.setid_transportista(this.compra.getid_transportista());
				} else {
					compraAux.setid_transportista(null);
				}	
				compraAux.setdescripcion(this.compra.getdescripcion());	
				
				if(this.compra.getid_orden_compra()!=null && this.compra.getid_orden_compra()>0L) {
					compraAux.setid_orden_compra(this.compra.getid_orden_compra());
				} else {
					compraAux.setid_orden_compra(null);
				}	
				
				if(this.compra.getid_pedido_compra()!=null && this.compra.getid_pedido_compra()>0L) {
					compraAux.setid_pedido_compra(this.compra.getid_pedido_compra());
				} else {
					compraAux.setid_pedido_compra(null);
				}	
				compraAux.setautori_usuario(this.compra.getautori_usuario());	
				compraAux.setfactura_inicial(this.compra.getfactura_inicial());	
				compraAux.setfactura_final(this.compra.getfactura_final());	
				compraAux.setservicio_documento(this.compra.getservicio_documento());	
				compraAux.setfecha_valor(this.compra.getfecha_valor());	
				compraAux.setporcentaje_descuento(this.compra.getporcentaje_descuento());	
				compraAux.setsuman(this.compra.getsuman());	
				compraAux.setice(this.compra.getice());	
				compraAux.setvalor_descuento(this.compra.getvalor_descuento());	
				compraAux.settotal_descuento(this.compra.gettotal_descuento());	
				compraAux.setiva(this.compra.getiva());	
				compraAux.setstock(this.compra.getstock());	
				compraAux.setsub_total(this.compra.getsub_total());	
				compraAux.settotal_otro(this.compra.gettotal_otro());	
				compraAux.setultimo_costo(this.compra.getultimo_costo());	
				compraAux.setnumero_items(this.compra.getnumero_items());	
				compraAux.setretencion(this.compra.getretencion());	
				compraAux.settotal(this.compra.gettotal());	
				compraAux.setflete(this.compra.getflete());	
				compraAux.setimpuesto(this.compra.getimpuesto());	
				compraAux.setid_tipo_transaccion_modulo(this.compra.getid_tipo_transaccion_modulo());	
				compraAux.setid_asiento_contable(this.compra.getid_asiento_contable());	
				compraAux.setnumero_comprobante(this.compra.getnumero_comprobante());	
				compraAux.setfecha(this.compra.getfecha());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(compraAux,compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(compraAux,compras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.compraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.compraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.saveCompras();//WithConnection
						//compraLogic.getSetVersionRowCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.compra,compraAux);
					
					this.refrescarForeignKeysDescripcionesCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.compraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.getRetencionInvens().addAll(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvensEliminados);
							this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.getTransaccionLocals().addAll(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalsEliminados);
							this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens().addAll(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvensEliminados);
							this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.getDetalleCompras().addAll(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecomprasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvens.addAll(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvensEliminados);
							this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocals.addAll(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalsEliminados);
							this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvens.addAll(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvensEliminados);
							this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompras.addAll(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecomprasEliminados);
						}
						//ARCHITECTURE
						
						if(!this.compraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								compraLogic.saveCompraRelaciones(compraAux,this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.getRetencionInvens(),this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.getTransaccionLocals(),this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens(),this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.getDetalleCompras());//WithConnection
								//compraLogic.getSetVersionRowCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.compra,compraAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.setRetencionInvens(new ArrayList<RetencionInven>());
							this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.setTransaccionLocals(new ArrayList<TransaccionLocal>());
							this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.setFormaPagoInvens(new ArrayList<FormaPagoInven>());
							this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.setDetalleCompras(new ArrayList<DetalleCompra>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvens= new ArrayList<RetencionInven>();
							this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocals= new ArrayList<TransaccionLocal>();
							this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvens= new ArrayList<FormaPagoInven>();
							this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompras= new ArrayList<DetalleCompra>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.quitarFilaTotales();}
							compraAux.setRetencionInvens(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.getRetencionInvens());

							if(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.quitarFilaTotales();}
							compraAux.setTransaccionLocals(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.getTransaccionLocals());

							if(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();}
							compraAux.setFormaPagoInvens(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens());

							if(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.quitarFilaTotales();}
							compraAux.setDetalleCompras(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.getDetalleCompras());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.compraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.compraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(compraAux,compraLogic.getCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(compraAux,compras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.compra,compraAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				compraAux=new  Compra();
				
				compraAux.setIsNew(false);
				compraAux.setIsChanged(false);
				
				compraAux.setIsDeleted(true);
				
				compraAux.setId(this.compra.getId());	
				compraAux.setVersionRow(this.compra.getVersionRow());	
				compraAux.setid_empresa(this.compra.getid_empresa());	
				compraAux.setid_sucursal(this.compra.getid_sucursal());	
				compraAux.setid_modulo(this.compra.getid_modulo());	
				compraAux.setid_ejercicio(this.compra.getid_ejercicio());	
				compraAux.setid_periodo(this.compra.getid_periodo());	
				compraAux.setid_anio(this.compra.getid_anio());	
				compraAux.setid_mes(this.compra.getid_mes());	
				compraAux.setid_usuario(this.compra.getid_usuario());	
				compraAux.setfecha_emision(this.compra.getfecha_emision());	
				compraAux.setfecha_entrega(this.compra.getfecha_entrega());	
				compraAux.setnumero_secuencial(this.compra.getnumero_secuencial());	
				compraAux.setid_moneda(this.compra.getid_moneda());	
				
				if(this.compra.getid_tipo_cambio()!=null && this.compra.getid_tipo_cambio()>0L) {
					compraAux.setid_tipo_cambio(this.compra.getid_tipo_cambio());
				} else {
					compraAux.setid_tipo_cambio(null);
				}	
				compraAux.setid_estado_inventario(this.compra.getid_estado_inventario());	
				compraAux.setid_cliente(this.compra.getid_cliente());	
				compraAux.setid_formato(this.compra.getid_formato());	
				compraAux.setid_empleado(this.compra.getid_empleado());	
				compraAux.setnumero_factura(this.compra.getnumero_factura());	
				
				if(this.compra.getid_transportista()!=null && this.compra.getid_transportista()>0L) {
					compraAux.setid_transportista(this.compra.getid_transportista());
				} else {
					compraAux.setid_transportista(null);
				}	
				compraAux.setdescripcion(this.compra.getdescripcion());	
				
				if(this.compra.getid_orden_compra()!=null && this.compra.getid_orden_compra()>0L) {
					compraAux.setid_orden_compra(this.compra.getid_orden_compra());
				} else {
					compraAux.setid_orden_compra(null);
				}	
				
				if(this.compra.getid_pedido_compra()!=null && this.compra.getid_pedido_compra()>0L) {
					compraAux.setid_pedido_compra(this.compra.getid_pedido_compra());
				} else {
					compraAux.setid_pedido_compra(null);
				}	
				compraAux.setautori_usuario(this.compra.getautori_usuario());	
				compraAux.setfactura_inicial(this.compra.getfactura_inicial());	
				compraAux.setfactura_final(this.compra.getfactura_final());	
				compraAux.setservicio_documento(this.compra.getservicio_documento());	
				compraAux.setfecha_valor(this.compra.getfecha_valor());	
				compraAux.setporcentaje_descuento(this.compra.getporcentaje_descuento());	
				compraAux.setsuman(this.compra.getsuman());	
				compraAux.setice(this.compra.getice());	
				compraAux.setvalor_descuento(this.compra.getvalor_descuento());	
				compraAux.settotal_descuento(this.compra.gettotal_descuento());	
				compraAux.setiva(this.compra.getiva());	
				compraAux.setstock(this.compra.getstock());	
				compraAux.setsub_total(this.compra.getsub_total());	
				compraAux.settotal_otro(this.compra.gettotal_otro());	
				compraAux.setultimo_costo(this.compra.getultimo_costo());	
				compraAux.setnumero_items(this.compra.getnumero_items());	
				compraAux.setretencion(this.compra.getretencion());	
				compraAux.settotal(this.compra.gettotal());	
				compraAux.setflete(this.compra.getflete());	
				compraAux.setimpuesto(this.compra.getimpuesto());	
				compraAux.setid_tipo_transaccion_modulo(this.compra.getid_tipo_transaccion_modulo());	
				compraAux.setid_asiento_contable(this.compra.getid_asiento_contable());	
				compraAux.setnumero_comprobante(this.compra.getnumero_comprobante());	
				compraAux.setfecha(this.compra.getfecha());	
				
				if(this.compraSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.compraAux.getId()>=0) {	
						this.comprasEliminados.add(compraAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(compraAux,compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(compraAux,compras);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.compraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.compraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.saveCompras();//WithConnection
						//compraLogic.getSetVersionRowCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.compraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.getRetencionInvens().addAll(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvensEliminados);
							this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.getTransaccionLocals().addAll(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalsEliminados);
							this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens().addAll(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvensEliminados);
							this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.getDetalleCompras().addAll(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecomprasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvens.addAll(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvensEliminados);
							this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocals.addAll(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalsEliminados);
							this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvens.addAll(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvensEliminados);
							this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompras.addAll(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecomprasEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.compraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								compraLogic.saveCompraRelaciones(compraAux,this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.getRetencionInvens(),this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.getTransaccionLocals(),this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens(),this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.getDetalleCompras());//WithConnection
								//compraLogic.getSetVersionRowCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.setRetencionInvens(new ArrayList<RetencionInven>());
							this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.setTransaccionLocals(new ArrayList<TransaccionLocal>());
							this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.setFormaPagoInvens(new ArrayList<FormaPagoInven>());
							this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.setDetalleCompras(new ArrayList<DetalleCompra>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvens= new ArrayList<RetencionInven>();
							this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocals= new ArrayList<TransaccionLocal>();
							this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvens= new ArrayList<FormaPagoInven>();
							this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompras= new ArrayList<DetalleCompra>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.quitarFilaTotales();}
							compraAux.setRetencionInvens(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.getRetencionInvens());

							if(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.quitarFilaTotales();}
							compraAux.setTransaccionLocals(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.getTransaccionLocals());

							if(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();}
							compraAux.setFormaPagoInvens(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens());

							if(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.quitarFilaTotales();}
							compraAux.setDetalleCompras(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.getDetalleCompras());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.compraSessionBean.getEstaModoGuardarRelaciones() 
								|| this.compraSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(compraAux,compraLogic.getCompras());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(compraAux,compras);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getCompras().addAll(this.comprasEliminados);
					
					compraLogic.saveCompras();//WithConnection
					//compraLogic.getSetVersionRowCompras();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesCompra();
				
				this.comprasEliminados= new ArrayList<Compra>();		
			}
			
			if(this.compraSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.compraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Compra GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Compra",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.compra=compraAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessCompra();
      	}
		
	}	
	
	public void actualizarRelaciones(Compra compraLocal) throws Exception {
		
		if(this.compraSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				compraLocal.setRetencionInvens(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.getRetencionInvens());
				compraLocal.setTransaccionLocals(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.getTransaccionLocals());
				compraLocal.setFormaPagoInvens(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens());
				compraLocal.setDetalleCompras(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.getDetalleCompras());
			
			} else {
			
				compraLocal.setRetencionInvens(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvens);
				compraLocal.setTransaccionLocals(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocals);
				compraLocal.setFormaPagoInvens(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvens);
				compraLocal.setDetalleCompras(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompras);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(Compra compraLocal) throws Exception {	
		if(this.compraSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				compraLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				compraLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ModuloDetalleFormJInternalFrame.class)) {
				ModuloBeanSwingJInternalFrame moduloBeanSwingJInternalFrameLocal=(ModuloBeanSwingJInternalFrame) ((ModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				moduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoModulo(moduloBeanSwingJInternalFrameLocal.getmodulo(),true);
				moduloBeanSwingJInternalFrameLocal.actualizarLista(moduloBeanSwingJInternalFrameLocal.modulo,this.modulosForeignKey);

				moduloBeanSwingJInternalFrameLocal.actualizarRelaciones(moduloBeanSwingJInternalFrameLocal.modulo);

				compraLocal.setModulo(moduloBeanSwingJInternalFrameLocal.modulo);

				this.addItemDefectoCombosForeignKeyModulo();
				this.cargarCombosFrameModulosForeignKey("Formulario");
				this.setActualModuloForeignKey(moduloBeanSwingJInternalFrameLocal.modulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				compraLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				compraLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				compraLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				compraLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UsuarioDetalleFormJInternalFrame.class)) {
				UsuarioBeanSwingJInternalFrame usuarioBeanSwingJInternalFrameLocal=(UsuarioBeanSwingJInternalFrame) ((UsuarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				usuarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUsuario(usuarioBeanSwingJInternalFrameLocal.getusuario(),true);
				usuarioBeanSwingJInternalFrameLocal.actualizarLista(usuarioBeanSwingJInternalFrameLocal.usuario,this.usuariosForeignKey);

				usuarioBeanSwingJInternalFrameLocal.actualizarRelaciones(usuarioBeanSwingJInternalFrameLocal.usuario);

				compraLocal.setUsuario(usuarioBeanSwingJInternalFrameLocal.usuario);

				this.addItemDefectoCombosForeignKeyUsuario();
				this.cargarCombosFrameUsuariosForeignKey("Formulario");
				this.setActualUsuarioForeignKey(usuarioBeanSwingJInternalFrameLocal.usuario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				compraLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoCambioDetalleFormJInternalFrame.class)) {
				TipoCambioBeanSwingJInternalFrame tipocambioBeanSwingJInternalFrameLocal=(TipoCambioBeanSwingJInternalFrame) ((TipoCambioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocambioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCambio(tipocambioBeanSwingJInternalFrameLocal.gettipocambio(),true);
				tipocambioBeanSwingJInternalFrameLocal.actualizarLista(tipocambioBeanSwingJInternalFrameLocal.tipocambio,this.tipocambiosForeignKey);

				tipocambioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				compraLocal.setTipoCambio(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey("Formulario");
				this.setActualTipoCambioForeignKey(tipocambioBeanSwingJInternalFrameLocal.tipocambio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoInventarioDetalleFormJInternalFrame.class)) {
				EstadoInventarioBeanSwingJInternalFrame estadoinventarioBeanSwingJInternalFrameLocal=(EstadoInventarioBeanSwingJInternalFrame) ((EstadoInventarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadoinventarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoInventario(estadoinventarioBeanSwingJInternalFrameLocal.getestadoinventario(),true);
				estadoinventarioBeanSwingJInternalFrameLocal.actualizarLista(estadoinventarioBeanSwingJInternalFrameLocal.estadoinventario,this.estadoinventariosForeignKey);

				estadoinventarioBeanSwingJInternalFrameLocal.actualizarRelaciones(estadoinventarioBeanSwingJInternalFrameLocal.estadoinventario);

				compraLocal.setEstadoInventario(estadoinventarioBeanSwingJInternalFrameLocal.estadoinventario);

				this.addItemDefectoCombosForeignKeyEstadoInventario();
				this.cargarCombosFrameEstadoInventariosForeignKey("Formulario");
				this.setActualEstadoInventarioForeignKey(estadoinventarioBeanSwingJInternalFrameLocal.estadoinventario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				compraLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatoBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatoBeanSwingJInternalFrameLocal.getformato(),true);
				formatoBeanSwingJInternalFrameLocal.actualizarLista(formatoBeanSwingJInternalFrameLocal.formato,this.formatosForeignKey);

				formatoBeanSwingJInternalFrameLocal.actualizarRelaciones(formatoBeanSwingJInternalFrameLocal.formato);

				compraLocal.setFormato(formatoBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey("Formulario");
				this.setActualFormatoForeignKey(formatoBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoBeanSwingJInternalFrameLocal.actualizarLista(empleadoBeanSwingJInternalFrameLocal.empleado,this.empleadosForeignKey);

				empleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoBeanSwingJInternalFrameLocal.empleado);

				compraLocal.setEmpleado(empleadoBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey("Formulario");
				this.setActualEmpleadoForeignKey(empleadoBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransportistaDetalleFormJInternalFrame.class)) {
				TransportistaBeanSwingJInternalFrame transportistaBeanSwingJInternalFrameLocal=(TransportistaBeanSwingJInternalFrame) ((TransportistaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transportistaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransportista(transportistaBeanSwingJInternalFrameLocal.gettransportista(),true);
				transportistaBeanSwingJInternalFrameLocal.actualizarLista(transportistaBeanSwingJInternalFrameLocal.transportista,this.transportistasForeignKey);

				transportistaBeanSwingJInternalFrameLocal.actualizarRelaciones(transportistaBeanSwingJInternalFrameLocal.transportista);

				compraLocal.setTransportista(transportistaBeanSwingJInternalFrameLocal.transportista);

				this.addItemDefectoCombosForeignKeyTransportista();
				this.cargarCombosFrameTransportistasForeignKey("Formulario");
				this.setActualTransportistaForeignKey(transportistaBeanSwingJInternalFrameLocal.transportista.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(OrdenCompraDetalleFormJInternalFrame.class)) {
				OrdenCompraBeanSwingJInternalFrame ordencompraBeanSwingJInternalFrameLocal=(OrdenCompraBeanSwingJInternalFrame) ((OrdenCompraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ordencompraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoOrdenCompra(ordencompraBeanSwingJInternalFrameLocal.getordencompra(),true);
				ordencompraBeanSwingJInternalFrameLocal.actualizarLista(ordencompraBeanSwingJInternalFrameLocal.ordencompra,this.ordencomprasForeignKey);

				ordencompraBeanSwingJInternalFrameLocal.actualizarRelaciones(ordencompraBeanSwingJInternalFrameLocal.ordencompra);

				compraLocal.setOrdenCompra(ordencompraBeanSwingJInternalFrameLocal.ordencompra);

				this.addItemDefectoCombosForeignKeyOrdenCompra();
				this.cargarCombosFrameOrdenComprasForeignKey("Formulario");
				this.setActualOrdenCompraForeignKey(ordencompraBeanSwingJInternalFrameLocal.ordencompra.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PedidoCompraDetalleFormJInternalFrame.class)) {
				PedidoCompraBeanSwingJInternalFrame pedidocompraBeanSwingJInternalFrameLocal=(PedidoCompraBeanSwingJInternalFrame) ((PedidoCompraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				pedidocompraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPedidoCompra(pedidocompraBeanSwingJInternalFrameLocal.getpedidocompra(),true);
				pedidocompraBeanSwingJInternalFrameLocal.actualizarLista(pedidocompraBeanSwingJInternalFrameLocal.pedidocompra,this.pedidocomprasForeignKey);

				pedidocompraBeanSwingJInternalFrameLocal.actualizarRelaciones(pedidocompraBeanSwingJInternalFrameLocal.pedidocompra);

				compraLocal.setPedidoCompra(pedidocompraBeanSwingJInternalFrameLocal.pedidocompra);

				this.addItemDefectoCombosForeignKeyPedidoCompra();
				this.cargarCombosFramePedidoComprasForeignKey("Formulario");
				this.setActualPedidoCompraForeignKey(pedidocompraBeanSwingJInternalFrameLocal.pedidocompra.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoTransaccionModuloDetalleFormJInternalFrame.class)) {
				TipoTransaccionModuloBeanSwingJInternalFrame tipotransaccionmoduloBeanSwingJInternalFrameLocal=(TipoTransaccionModuloBeanSwingJInternalFrame) ((TipoTransaccionModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipotransaccionmoduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoTransaccionModulo(tipotransaccionmoduloBeanSwingJInternalFrameLocal.gettipotransaccionmodulo(),true);
				tipotransaccionmoduloBeanSwingJInternalFrameLocal.actualizarLista(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo,this.tipotransaccionmodulosForeignKey);

				tipotransaccionmoduloBeanSwingJInternalFrameLocal.actualizarRelaciones(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo);

				compraLocal.setTipoTransaccionModulo(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo);

				this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
				this.cargarCombosFrameTipoTransaccionModulosForeignKey("Formulario");
				this.setActualTipoTransaccionModuloForeignKey(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AsientoContableDetalleFormJInternalFrame.class)) {
				AsientoContableBeanSwingJInternalFrame asientocontableBeanSwingJInternalFrameLocal=(AsientoContableBeanSwingJInternalFrame) ((AsientoContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				asientocontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAsientoContable(asientocontableBeanSwingJInternalFrameLocal.getasientocontable(),true);
				asientocontableBeanSwingJInternalFrameLocal.actualizarLista(asientocontableBeanSwingJInternalFrameLocal.asientocontable,this.asientocontablesForeignKey);

				asientocontableBeanSwingJInternalFrameLocal.actualizarRelaciones(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				compraLocal.setAsientoContable(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey("Formulario");
				this.setActualAsientoContableForeignKey(asientocontableBeanSwingJInternalFrameLocal.asientocontable.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarCompraActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosCompra.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = compraValidator.getInvalidValues(this.compra);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(Compra compra,List<Compra> compras) throws Exception {
		try	{		
			CompraConstantesFunciones.actualizarLista(compra,compras,this.compraSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(Compra compra,List<Compra> compras) throws Exception {
		try	{			
			CompraConstantesFunciones.actualizarSelectedLista(compra,compras);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<Compra> comprasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				comprasLocal=this.compraLogic.getCompras();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				comprasLocal=this.compras;
			}
			//ARCHITECTURE
		
			for(Compra compraLocal:comprasLocal) {
				if(this.permiteMantenimiento(compraLocal) && compraLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+CompraConstantesFunciones.getCompraLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_empresaCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_sucursalCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_moduloCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_ejercicioCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_periodoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_anioCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_mesCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_usuarioCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelfecha_emisionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.FECHAENTREGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelfecha_entregaCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.NUMEROSECUENCIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelnumero_secuencialCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_monedaCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDTIPOCAMBIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_tipo_cambioCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDESTADOINVENTARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_estado_inventarioCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_clienteCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDFORMATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_formatoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_empleadoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.NUMEROFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelnumero_facturaCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDTRANSPORTISTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_transportistaCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabeldescripcionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDORDENCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_orden_compraCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDPEDIDOCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_pedido_compraCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.AUTORIUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelautori_usuarioCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.FACTURAINICIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelfactura_inicialCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.FACTURAFINAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelfactura_finalCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.SERVICIODOCUMENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelservicio_documentoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.FECHAVALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelfecha_valorCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.PORCENTAJEDESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelporcentaje_descuentoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.SUMAN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelsumanCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.ICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabeliceCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.VALORDESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelvalor_descuentoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.TOTALDESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabeltotal_descuentoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelivaCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.STOCK)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelstockCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.SUBTOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelsub_totalCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.TOTALOTRO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabeltotal_otroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.ULTIMOCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelultimo_costoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.NUMEROITEMS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelnumero_itemsCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.RETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelretencionCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabeltotalCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.FLETE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelfleteCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IMPUESTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelimpuestoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDTIPOTRANSACCIONMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_tipo_transaccion_moduloCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.IDASIENTOCONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelid_asiento_contableCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.NUMEROCOMPROBANTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelnumero_comprobanteCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(CompraConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelfechaCompra,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormCompra!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_empresaCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_sucursalCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_moduloCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_ejercicioCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_periodoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_anioCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_mesCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_usuarioCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelfecha_emisionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelfecha_entregaCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelnumero_secuencialCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_monedaCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_tipo_cambioCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_estado_inventarioCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_clienteCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_formatoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_empleadoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelnumero_facturaCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_transportistaCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabeldescripcionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_orden_compraCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_pedido_compraCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelautori_usuarioCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelfactura_inicialCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelfactura_finalCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelservicio_documentoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelfecha_valorCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelporcentaje_descuentoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelsumanCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabeliceCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelvalor_descuentoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabeltotal_descuentoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelivaCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelstockCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelsub_totalCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabeltotal_otroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelultimo_costoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelnumero_itemsCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelretencionCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabeltotalCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelfleteCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelimpuestoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_tipo_transaccion_moduloCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelid_asiento_contableCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelnumero_comprobanteCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCompra.jLabelfechaCompra,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("RetencionInven")) {
			if(this.compra==null) {
				this.compra= new Compra();
			}

			if(this.compraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCompra
				this.setVariablesFormularioToObjetoActualCompra(this.compra,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.getretencioninven().setCompra(this.compra);
			}

			return;
		}
		 else  if(sTipo.equals("TransaccionLocal")) {
			if(this.compra==null) {
				this.compra= new Compra();
			}

			if(this.compraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCompra
				this.setVariablesFormularioToObjetoActualCompra(this.compra,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.gettransaccionlocal().setCompra(this.compra);
			}

			return;
		}
		 else  if(sTipo.equals("FormaPagoInven")) {
			if(this.compra==null) {
				this.compra= new Compra();
			}

			if(this.compraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCompra
				this.setVariablesFormularioToObjetoActualCompra(this.compra,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.getformapagoinven().setCompra(this.compra);
			}

			return;
		}
		 else  if(sTipo.equals("DetalleCompra")) {
			if(this.compra==null) {
				this.compra= new Compra();
			}

			if(this.compraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCompra
				this.setVariablesFormularioToObjetoActualCompra(this.compra,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.getdetallecompra().setCompra(this.compra);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoCompra--;	
		
		
		this.compraAux=new Compra();
		
		this.compraAux.setId(this.iIdNuevoCompra);
		this.compraAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.compraLogic.getCompras().add(this.compraAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.compras.add(this.compraAux);
		}
		//ARCHITECTURE
		
		this.compra=this.compraAux;
		
		if(CompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioCompra(this.compra);
			this.setVariablesObjetoActualToFormularioForeignKeyCompra(this.compra);
		}
				
		//this.setDefaultControlesCompra();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyCompra();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyCompra();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyCompra();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualCompra(this.compraBean,this.compra,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(CompraConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.compraSessionBean.getConGuardarRelaciones()) {
			classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.compraReturnGeneral=compraLogic.procesarEventosComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.compraLogic.getCompras(),this.compra,this.compraParameterGeneral,this.isEsNuevoCompra,classes);//this.compraLogic.getCompra()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanCompra(this.compraReturnGeneral,this.compraBean,false);
		
		if(this.compraReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyCompra(this.compraReturnGeneral.getCompra());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioCompra(this.compraReturnGeneral.getCompra());
		}
		
		if(this.compraReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioCompra(this.compraReturnGeneral.getCompra(),classes);//this.compraBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualCompra(this.compra,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyCompra();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyCompra();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			CompraBeanSwingJInternalFrameAdditional.RecargarFormCompra(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingCompra(false);
						
			if(compraSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenSessionBean.getEsGuardarRelacionado() && RetencionInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRetencionInvenActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalSessionBean.getEsGuardarRelacionado() && TransaccionLocalJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonTransaccionLocalActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.getEsGuardarRelacionado() && FormaPagoInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFormaPagoInvenActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraSessionBean.getEsGuardarRelacionado() && DetalleCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleCompraActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(CompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualCompra();
			}
			
			this.actualizarVisualTableDatosCompra();
			
			this.jTableDatosCompra.setRowSelectionInterval(this.getIndiceNuevoCompra(), this.getIndiceNuevoCompra());
			
			this.seleccionarFilaTablaCompraActual();
						
			this.actualizarEstadoCeldasBotonesCompra("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesCompra(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormCompra.jDateChooserfecha_emisionCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarfecha_emisionCompra);
		this.jInternalFrameDetalleFormCompra.jDateChooserfecha_entregaCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarfecha_entregaCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldnumero_secuencialCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarnumero_secuencialCompra);//
		this.jInternalFrameDetalleFormCompra.jTextFieldnumero_facturaCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarnumero_facturaCompra);
		this.jInternalFrameDetalleFormCompra.jTextAreadescripcionCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activardescripcionCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldautori_usuarioCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarautori_usuarioCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldfactura_inicialCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarfactura_inicialCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldfactura_finalCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarfactura_finalCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldservicio_documentoCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarservicio_documentoCompra);
		this.jInternalFrameDetalleFormCompra.jDateChooserfecha_valorCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarfecha_valorCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldporcentaje_descuentoCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarporcentaje_descuentoCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldsumanCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarsumanCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldiceCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activariceCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldvalor_descuentoCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarvalor_descuentoCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldtotal_descuentoCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activartotal_descuentoCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldivaCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarivaCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldstockCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarstockCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldsub_totalCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarsub_totalCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldtotal_otroCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activartotal_otroCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldultimo_costoCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarultimo_costoCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldnumero_itemsCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarnumero_itemsCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldretencionCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarretencionCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldtotalCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activartotalCompra);//
		this.jInternalFrameDetalleFormCompra.jTextFieldfleteCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarfleteCompra);//
		this.jInternalFrameDetalleFormCompra.jTextFieldimpuestoCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarimpuestoCompra);//
		this.jInternalFrameDetalleFormCompra.jTextFieldnumero_comprobanteCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarnumero_comprobanteCompra);//
		this.jInternalFrameDetalleFormCompra.jDateChooserfechaCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarfechaCompra);	
		//
		this.jInternalFrameDetalleFormCompra.jComboBoxid_empresaCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_empresaCompra);//
		this.jInternalFrameDetalleFormCompra.jComboBoxid_sucursalCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_sucursalCompra);//
		this.jInternalFrameDetalleFormCompra.jComboBoxid_moduloCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_moduloCompra);//
		this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_ejercicioCompra);//
		this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_periodoCompra);//
		this.jInternalFrameDetalleFormCompra.jComboBoxid_anioCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_anioCompra);//
		this.jInternalFrameDetalleFormCompra.jComboBoxid_mesCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_mesCompra);//
		this.jInternalFrameDetalleFormCompra.jComboBoxid_usuarioCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_usuarioCompra);//
		this.jInternalFrameDetalleFormCompra.jComboBoxid_monedaCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_monedaCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_cambioCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_tipo_cambioCompra);//
		this.jInternalFrameDetalleFormCompra.jComboBoxid_estado_inventarioCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_estado_inventarioCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_clienteCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_formatoCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_formatoCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_empleadoCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_empleadoCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_transportistaCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_transportistaCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_orden_compraCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_pedido_compraCompra);//
		this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_transaccion_moduloCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_tipo_transaccion_moduloCompra);//
		this.jInternalFrameDetalleFormCompra.jComboBoxid_asiento_contableCompra.setEnabled(isHabilitar && this.compraConstantesFunciones.activarid_asiento_contableCompra);
	};
	
	public void setDefaultControlesCompra() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoCompra(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.compraSessionBean.setConGuardarRelaciones(true);			
			this.compraSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormCompra.jTabbedPaneRelacionesCompra.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.compraSessionBean.setConGuardarRelaciones(false);			
			this.compraSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormCompra.jTabbedPaneRelacionesCompra.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoCompra() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Compra compraAux:this.compraLogic.getCompras()) {
				if(compraAux.getId().equals(this.iIdNuevoCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Compra compraAux:this.compras) {
				if(compraAux.getId().equals(this.iIdNuevoCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualCompra(Compra compra,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Compra compraAux:this.compraLogic.getCompras()) {
				if(compraAux.getId().equals(compra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Compra compraAux:this.compras) {
				if(compraAux.getId().equals(compra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalCompra(Compra compraOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Compra compraAux:this.compraLogic.getCompras()) {
				if(compraAux.getCompraOriginal().getId().equals(compraOriginal.getId())) {
					existe=true;
					compraOriginal.setId(compraAux.getId());
					compraOriginal.setVersionRow(compraAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Compra compraAux:this.compras) {
				if(compraAux.getCompraOriginal().getId().equals(compraOriginal.getId())) {
					existe=true;
					compraOriginal.setId(compraAux.getId());
					compraOriginal.setVersionRow(compraAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosCompra(Boolean esParaCancelar) throws Exception {
		comprasAux=new ArrayList<Compra>();
		compraAux=new Compra();
		
		if(!this.compraSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Compra compraAux:this.compraLogic.getCompras()) {
					if(compraAux.getId()<0) {
						comprasAux.add(compraAux);
					}		
				}
				this.iIdNuevoCompra=0L;
				this.compraLogic.getCompras().removeAll(comprasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Compra compraAux:this.compras) {
					if(compraAux.getId()<0) {
						comprasAux.add(compraAux);
					}		
				}
				this.iIdNuevoCompra=0L;
				this.compras.removeAll(comprasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoCompra 
					&& this.compraLogic.getCompras().size()>0
					) {
					compraAux=this.compraLogic.getCompras().get(this.compraLogic.getCompras().size() - 1);
				
					if(compraAux.getId()<0) {
						this.compraLogic.getCompras().remove(compraAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoCompra && this.compras.size()>0) {
					compraAux=this.compras.get(this.compras.size() - 1);
				
					if(compraAux.getId()<0) {
						this.compras.remove(compraAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoCompra(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(compra.getId()<0) {
				this.compraLogic.getCompras().remove(this.compra);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(compra.getId()<0) {
				this.compras.remove(this.compra);
			}
		}			
	}
	
	public void setEstadosInicialesCompra(List<Compra> comprasAux) throws Exception {
		CompraConstantesFunciones.setEstadosInicialesCompra(comprasAux);
	}
	
	public void setEstadosInicialesCompra(Compra compraAux) throws Exception {
		CompraConstantesFunciones.setEstadosInicialesCompra(compraAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarCompraActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarCompraActual()) {
				if(!this.isEsNuevoCompra) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoCompra=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarCompraActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Compra ?", "MANTENIMIENTO DE Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(Compra compra) throws Exception {
		CompraConstantesFunciones.seleccionarAsignar(this.compra,compra);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarCompra=this.isPermisoActualizarOriginalCompra;
			
			
			this.seleccionarAsignar(compra);
			
			

			idTipoCambioActual=compra.getid_tipo_cambio();
			this.seleccionarTipoCambioActual();

			idClienteActual=compra.getid_cliente();
			this.seleccionarClienteActual();

			idEmpleadoActual=compra.getid_empleado();
			this.seleccionarEmpleadoActual();

			idOrdenCompraActual=compra.getid_orden_compra();
			this.seleccionarOrdenCompraActual();

			idPedidoCompraActual=compra.getid_pedido_compra();
			this.seleccionarPedidoCompraActual();

			idAsientoContableActual=compra.getid_asiento_contable();
			this.seleccionarAsientoContableActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			CompraConstantesFunciones.quitarEspaciosCompra(this.compra,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.compraSessionBean.setsFuncionBusquedaRapida(this.compraSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarTipoCambioActual() throws Exception {
		try	{
			TipoCambio tipocambioAux=new TipoCambio();

			if(this.idTipoCambioActual != null && this.idTipoCambioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(this.idTipoCambioActual);
					tipocambioAux= tipocambioLogic.getTipoCambio();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				tipocambiosForeignKey=new ArrayList<TipoCambio>();
				tipocambiosForeignKey.add(tipocambioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarEmpleadoActual() throws Exception {
		try	{
			Empleado empleadoAux=new Empleado();

			if(this.idEmpleadoActual != null && this.idEmpleadoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(this.idEmpleadoActual);
					empleadoAux= empleadoLogic.getEmpleado();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				empleadosForeignKey=new ArrayList<Empleado>();
				empleadosForeignKey.add(empleadoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarOrdenCompraActual() throws Exception {
		try	{
			OrdenCompra ordencompraAux=new OrdenCompra();

			if(this.idOrdenCompraActual != null && this.idOrdenCompraActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getEntityWithConnection(this.idOrdenCompraActual);
					ordencompraAux= ordencompraLogic.getOrdenCompra();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				ordencomprasForeignKey=new ArrayList<OrdenCompra>();
				ordencomprasForeignKey.add(ordencompraAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarPedidoCompraActual() throws Exception {
		try	{
			PedidoCompra pedidocompraAux=new PedidoCompra();

			if(this.idPedidoCompraActual != null && this.idPedidoCompraActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getEntityWithConnection(this.idPedidoCompraActual);
					pedidocompraAux= pedidocompraLogic.getPedidoCompra();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				pedidocomprasForeignKey=new ArrayList<PedidoCompra>();
				pedidocomprasForeignKey.add(pedidocompraAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarAsientoContableActual() throws Exception {
		try	{
			AsientoContable asientocontableAux=new AsientoContable();

			if(this.idAsientoContableActual != null && this.idAsientoContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(this.idAsientoContableActual);
					asientocontableAux= asientocontableLogic.getAsientoContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				asientocontablesForeignKey=new ArrayList<AsientoContable>();
				asientocontablesForeignKey.add(asientocontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoCompra) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosCompra(esParaCancelar);				
				this.cancelarNuevoCompra(esParaCancelar);								
			}
			
			this.compra=new Compra();
			
			this.inicializarCompra();
			
			this.actualizarEstadoCeldasBotonesCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarCompra() throws Exception {
		try {
			CompraConstantesFunciones.inicializarCompra(this.compra);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.compraLogic.getCompras().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteCompras(String sAccionBusqueda,List<Compra> comprasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="Compra"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="CompraMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("CompraMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="Compra"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Compras");		
		parameters.put("busquedapor", CompraConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(RetencionInven.class));
			classes.add(new Classe(TransaccionLocal.class));
			classes.add(new Classe(FormaPagoInven.class));
			classes.add(new Classe(DetalleCompra.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					CompraLogic compraLogicAuxiliar=new CompraLogic();
					compraLogicAuxiliar.setDatosCliente(compraLogic.getDatosCliente());				
					compraLogicAuxiliar.setCompras(comprasParaReportes);
					
					compraLogicAuxiliar.cargarRelacionesLoteForeignKeyCompraWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					comprasParaReportes=compraLogicAuxiliar.getCompras();
					
					//compraLogic.getNewConnexionToDeep();
					
					//for (Compra compra:comprasParaReportes) {
					//	compraLogic.deepLoad(compra, false, DeepLoadType.INCLUDE, classes);
					//}						
					//compraLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//compraLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileRetencionInven = AuxiliarReportes.class.getResourceAsStream("RetencionInvenDetalleRelacionesDesign.jasper");
			parameters.put("subreport_retencioninven", reportFileRetencionInven);

			InputStream reportFileTransaccionLocal = AuxiliarReportes.class.getResourceAsStream("TransaccionLocalDetalleRelacionesDesign.jasper");
			parameters.put("subreport_transaccionlocal", reportFileTransaccionLocal);

			InputStream reportFileFormaPagoInven = AuxiliarReportes.class.getResourceAsStream("FormaPagoInvenDetalleRelacionesDesign.jasper");
			parameters.put("subreport_formapagoinven", reportFileFormaPagoInven);

			InputStream reportFileDetalleCompra = AuxiliarReportes.class.getResourceAsStream("DetalleCompraDetalleRelacionesDesign.jasper");
			parameters.put("subreport_detallecompra", reportFileDetalleCompra);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceCompra=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			CompraConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			CompraConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceCompra=new JRBeanArrayDataSource(CompraJInternalFrame.TraerCompraBeans(comprasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceCompra);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+CompraConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+CompraConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(CompraBean.TraerCompraBeans(comprasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteCompras(sAccionBusqueda,sTipoArchivoReporte,comprasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalCompras(sAccionBusqueda,sTipoArchivoReporte,comprasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoCompraActionPerformed(null);
					//this.generarExcelReporteCompras(sAccionBusqueda,sTipoArchivoReporte,comprasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalCompras(sAccionBusqueda,sTipoArchivoReporte,comprasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesCompras(sAccionBusqueda,sTipoArchivoReporte,comprasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesCompras(sAccionBusqueda,sTipoArchivoReporte,comprasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<Compra> comprasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"compra";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Compras");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderCompra("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(Compra compra : comprasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			CompraConstantesFunciones.generarExcelReporteDataCompra("NORMAL",row,workbook,compra,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.compraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderCompra(String sTipo,Row row,Workbook workbook) {
		
		CompraConstantesFunciones.generarExcelReporteHeaderCompra(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<Compra> comprasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"compra_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Compras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(Compra compra : comprasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(CompraConstantesFunciones.getCompraDescripcion(compra));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getusuario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_FECHAENTREGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_FECHAENTREGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getfecha_entrega());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getnumero_secuencial());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDTIPOCAMBIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDTIPOCAMBIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.gettipocambio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDESTADOINVENTARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDESTADOINVENTARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getestadoinventario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDFORMATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDFORMATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getformato_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_NUMEROFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_NUMEROFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getnumero_factura());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDTRANSPORTISTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDTRANSPORTISTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.gettransportista_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDORDENCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDORDENCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getordencompra_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDPEDIDOCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDPEDIDOCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getpedidocompra_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_AUTORIUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_AUTORIUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getautori_usuario());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_FACTURAINICIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_FACTURAINICIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getfactura_inicial());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_FACTURAFINAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_FACTURAFINAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getfactura_final());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getservicio_documento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_FECHAVALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_FECHAVALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getfecha_valor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getporcentaje_descuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_SUMAN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_SUMAN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getsuman());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_ICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_ICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getice());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_VALORDESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_VALORDESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getvalor_descuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_TOTALDESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_TOTALDESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.gettotal_descuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getiva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_STOCK))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_STOCK);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getstock());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_SUBTOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_SUBTOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getsub_total());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_TOTALOTRO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_TOTALOTRO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.gettotal_otro());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_ULTIMOCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_ULTIMOCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getultimo_costo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_NUMEROITEMS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_NUMEROITEMS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getnumero_items());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_RETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_RETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getretencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_FLETE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_FLETE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getflete());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IMPUESTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IMPUESTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getimpuesto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.gettipotransaccionmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_IDASIENTOCONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_IDASIENTOCONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getasientocontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getnumero_comprobante());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(CompraConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(CompraConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(compra.getfecha());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.compraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<Compra> comprasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<Compra> comprasRespaldo=null;
		
		classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.compraLogic.setDatosCliente(this.datosCliente);
		this.compraLogic.setDatosDeep(this.datosDeep);
		this.compraLogic.setIsConDeep(true);
		
		comprasRespaldo=this.compraLogic.getCompras();
		
		this.compraLogic.setCompras(comprasParaReportes);	
		this.compraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		comprasParaReportes=this.compraLogic.getCompras();
		this.compraLogic.setCompras(comprasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"compra_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Compras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderCompra("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(Compra compra : comprasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderCompra("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			CompraConstantesFunciones.generarExcelReporteDataCompra("NORMAL",row,workbook,compra,cellStyleDataAux);
		
			
			


				//RetencionInven
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(RetencionInvenConstantesFunciones.SCLASSWEBTITULO))) {

				if(compra.getRetencionInvens()!=null && compra.getRetencionInvens().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(RetencionInvenConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					RetencionInvenConstantesFunciones.generarExcelReporteHeaderRetencionInven("RELACIONADO",row,workbook);
				}

				if(compra.getRetencionInvens()!=null) {
					i2=0;
					for(RetencionInven retencioninven : compra.getRetencionInvens()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						RetencionInvenConstantesFunciones.generarExcelReporteDataRetencionInven("RELACIONADO",row,workbook,retencioninven,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//TransaccionLocal
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(TransaccionLocalConstantesFunciones.SCLASSWEBTITULO))) {

				if(compra.getTransaccionLocals()!=null && compra.getTransaccionLocals().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(TransaccionLocalConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					TransaccionLocalConstantesFunciones.generarExcelReporteHeaderTransaccionLocal("RELACIONADO",row,workbook);
				}

				if(compra.getTransaccionLocals()!=null) {
					i2=0;
					for(TransaccionLocal transaccionlocal : compra.getTransaccionLocals()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						TransaccionLocalConstantesFunciones.generarExcelReporteDataTransaccionLocal("RELACIONADO",row,workbook,transaccionlocal,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//FormaPagoInven
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(FormaPagoInvenConstantesFunciones.SCLASSWEBTITULO))) {

				if(compra.getFormaPagoInvens()!=null && compra.getFormaPagoInvens().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(FormaPagoInvenConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					FormaPagoInvenConstantesFunciones.generarExcelReporteHeaderFormaPagoInven("RELACIONADO",row,workbook);
				}

				if(compra.getFormaPagoInvens()!=null) {
					i2=0;
					for(FormaPagoInven formapagoinven : compra.getFormaPagoInvens()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						FormaPagoInvenConstantesFunciones.generarExcelReporteDataFormaPagoInven("RELACIONADO",row,workbook,formapagoinven,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//DetalleCompra
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DetalleCompraConstantesFunciones.SCLASSWEBTITULO))) {

				if(compra.getDetalleCompras()!=null && compra.getDetalleCompras().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DetalleCompraConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DetalleCompraConstantesFunciones.generarExcelReporteHeaderDetalleCompra("RELACIONADO",row,workbook);
				}

				if(compra.getDetalleCompras()!=null) {
					i2=0;
					for(DetalleCompra detallecompra : compra.getDetalleCompras()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DetalleCompraConstantesFunciones.generarExcelReporteDataDetalleCompra("RELACIONADO",row,workbook,detallecompra,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(CompraConstantesFunciones.getCompraDescripcion(compra));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.compraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoCompra.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoCompra.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessCompra() throws Exception {		
		this.startProcessCompra(true);
	}
	
	public void startProcessCompra(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasCompra ,this.jPanelParametrosReportesCompra, this.jScrollPanelDatosCompra,this.jPanelPaginacionCompra, this.jScrollPanelDatosEdicionCompra, this.jPanelAccionesCompra,this.jPanelAccionesFormularioCompra,this.jmenuBarCompra,this.jmenuBarDetalleCompra,this.jTtoolBarCompra,this.jTtoolBarDetalleCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasCompra=this.jTabbedPaneBusquedasCompra; 
		
		final JPanel jPanelParametrosReportesCompra=this.jPanelParametrosReportesCompra;
		//final JScrollPane jScrollPanelDatosCompra=this.jScrollPanelDatosCompra;
		final JTable jTableDatosCompra=this.jTableDatosCompra;		
		final JPanel jPanelPaginacionCompra=this.jPanelPaginacionCompra;
		//final JScrollPane jScrollPanelDatosEdicionCompra=this.jScrollPanelDatosEdicionCompra;
		final JPanel jPanelAccionesCompra=this.jPanelAccionesCompra;
		
		JPanel jPanelCamposAuxiliarCompra=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarCompra=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormCompra!=null) {
			jPanelCamposAuxiliarCompra=this.jInternalFrameDetalleFormCompra.jPanelCamposCompra;
			jPanelAccionesFormularioAuxiliarCompra=this.jInternalFrameDetalleFormCompra.jPanelAccionesFormularioCompra;
		}
		
		final JPanel jPanelCamposCompra=jPanelCamposAuxiliarCompra;
		final JPanel jPanelAccionesFormularioCompra=jPanelAccionesFormularioAuxiliarCompra;
		
		
		final JMenuBar jmenuBarCompra=this.jmenuBarCompra;
		final JToolBar jTtoolBarCompra=this.jTtoolBarCompra;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarCompra=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarCompra=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormCompra!=null) {
			jmenuBarDetalleAuxiliarCompra=this.jInternalFrameDetalleFormCompra.jmenuBarDetalleCompra;
			jTtoolBarDetalleAuxiliarCompra=this.jInternalFrameDetalleFormCompra.jTtoolBarDetalleCompra;
		}
		
		final JMenuBar jmenuBarDetalleCompra=jmenuBarDetalleAuxiliarCompra;
		final JToolBar jTtoolBarDetalleCompra=jTtoolBarDetalleAuxiliarCompra;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesCompra;
			processRunnable.jTableDatos=jTableDatosCompra;
			processRunnable.jPanelCampos=jPanelCamposCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionCompra;
			processRunnable.jPanelAcciones=jPanelAccionesCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioCompra;
			
			
			processRunnable.jmenuBar=jmenuBarCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleCompra;
			processRunnable.jTtoolBar=jTtoolBarCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasCompra ,jPanelParametrosReportesCompra,jTableDatosCompra, /*jScrollPanelDatosCompra,*/jPanelCamposCompra,jPanelPaginacionCompra, /*jScrollPanelDatosEdicionCompra,*/ jPanelAccionesCompra,jPanelAccionesFormularioCompra,jmenuBarCompra,jmenuBarDetalleCompra,jTtoolBarCompra,jTtoolBarDetalleCompra);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasCompra ,jPanelParametrosReportesCompra, jScrollPanelDatosCompra,jPanelPaginacionCompra, jScrollPanelDatosEdicionCompra, jPanelAccionesCompra,jPanelAccionesFormularioCompra,jmenuBarCompra,jmenuBarDetalleCompra,jTtoolBarCompra,jTtoolBarDetalleCompra);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessCompra() {// throws Exception 
		this.finishProcessCompra(true);
	}
	
	public void finishProcessCompra(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasCompra ,this.jPanelParametrosReportesCompra, this.jScrollPanelDatosCompra,this.jPanelPaginacionCompra, this.jScrollPanelDatosEdicionCompra, this.jPanelAccionesCompra,this.jPanelAccionesFormularioCompra,this.jmenuBarCompra,this.jmenuBarDetalleCompra,this.jTtoolBarCompra,this.jTtoolBarDetalleCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasCompra=this.jTabbedPaneBusquedasCompra; 
		
		final JPanel jPanelParametrosReportesCompra=this.jPanelParametrosReportesCompra;
		//final JScrollPane jScrollPanelDatosCompra=this.jScrollPanelDatosCompra;
		final JTable jTableDatosCompra=this.jTableDatosCompra;		
		final JPanel jPanelPaginacionCompra=this.jPanelPaginacionCompra;
		//final JScrollPane jScrollPanelDatosEdicionCompra=this.jScrollPanelDatosEdicionCompra;
		final JPanel jPanelAccionesCompra=this.jPanelAccionesCompra;
		
		JPanel jPanelCamposAuxiliarCompra=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarCompra=new JPanel();
		
		if(this.jInternalFrameDetalleFormCompra!=null) {
			jPanelCamposAuxiliarCompra=this.jInternalFrameDetalleFormCompra.jPanelCamposCompra;
			jPanelAccionesFormularioAuxiliarCompra=this.jInternalFrameDetalleFormCompra.jPanelAccionesFormularioCompra;
		}
		
		final JPanel jPanelCamposCompra=jPanelCamposAuxiliarCompra;
		final JPanel jPanelAccionesFormularioCompra=jPanelAccionesFormularioAuxiliarCompra;
		
		
		final JMenuBar jmenuBarCompra=this.jmenuBarCompra;		
		final JToolBar jTtoolBarCompra=this.jTtoolBarCompra;
				
		JMenuBar jmenuBarDetalleAuxiliarCompra=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarCompra=new JToolBar();
		
		if(this.jInternalFrameDetalleFormCompra!=null) {
			jmenuBarDetalleAuxiliarCompra=this.jInternalFrameDetalleFormCompra.jmenuBarDetalleCompra;
			jTtoolBarDetalleAuxiliarCompra=this.jInternalFrameDetalleFormCompra.jTtoolBarDetalleCompra;		
		}
		
		final JMenuBar jmenuBarDetalleCompra=jmenuBarDetalleAuxiliarCompra;
		final JToolBar jTtoolBarDetalleCompra=jTtoolBarDetalleAuxiliarCompra;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesCompra;
			processRunnable.jTableDatos=jTableDatosCompra;
			processRunnable.jPanelCampos=jPanelCamposCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionCompra;
			processRunnable.jPanelAcciones=jPanelAccionesCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioCompra;
			
			
			processRunnable.jmenuBar=jmenuBarCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleCompra;
			processRunnable.jTtoolBar=jTtoolBarCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasCompra ,jPanelParametrosReportesCompra, jTableDatosCompra,/*jScrollPanelDatosCompra,*/jPanelCamposCompra,jPanelPaginacionCompra, /*jScrollPanelDatosEdicionCompra,*/ jPanelAccionesCompra,jPanelAccionesFormularioCompra,jmenuBarCompra,jmenuBarDetalleCompra,jTtoolBarCompra,jTtoolBarDetalleCompra));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesCompra(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarCompra(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuCompra(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleCompra,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleCompra,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.compraConstantesFunciones.getsFinalQueryCompra();
		String  finalQueryPaginacionTodos=this.compraConstantesFunciones.getsFinalQueryCompra();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=CompraConstantesFunciones.getArrayColumnasGlobalesNoCompra(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=CompraConstantesFunciones.getArrayColumnasGlobalesCompra(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,CompraConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.comprasEliminados= new ArrayList<Compra>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessCompra();
		
				///*CompraSessionBean*/this.compraSessionBean=new CompraSessionBean();
			
			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=CompraConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=CompraConstantesFunciones.getClassesForeignKeysOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/compra."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			comprasAux= new ArrayList<Compra>();
			
				
			compraLogic.setDatosCliente(this.datosCliente);
			compraLogic.setDatosDeep(this.datosDeep);
			compraLogic.setIsConDeep(true);
			
			
			compraLogic.getCompraDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					compraLogic.getTodosCompras(finalQueryGlobal,pagination);
					
					//compraLogic.getTodosComprasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(compraLogic.getCompras()==null|| compraLogic.getCompras().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							comprasAux= new ArrayList<Compra>();
							comprasAux.addAll(compraLogic.getCompras());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							comprasAux= new ArrayList<Compra>();
							comprasAux.addAll(compras);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							compraLogic.getTodosCompras(finalQueryGlobal+"",this.pagination);												
							
							//compraLogic.getTodosComprasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteCompras("Todos",compraLogic.getCompras() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							compraLogic.setCompras(new ArrayList<Compra>());					
							compraLogic.getCompras().addAll(comprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							compras=new ArrayList<Compra>();
							compras.addAll(comprasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idCompra=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idCompra=this.idActual;
				
				} else if(this.idCompraActual!=null && this.idCompraActual!=0L) {
					idCompra=idCompraActual;
				}
				
					
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndicePorId(idCompra);
				
				this.compras=new ArrayList<Compra>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					compraLogic.getEntity(idCompra);
					
					//compraLogic.getEntityWithConnection(idCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.setCompras(new ArrayList<Compra>());
					compraLogic.getCompras().add(compraLogic.getCompra());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compras=new ArrayList<Compra>();
					this.compras.add(compra);
				}
				
				if(compraLogic.getCompra()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdAsientoContable")) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					compraLogic.getComprasFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=compraLogic.getCompras()==null||compraLogic.getCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=compras==null|| compras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						comprasAux=new ArrayList<Compra>();
						comprasAux.addAll(compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							comprasAux=new ArrayList<Compra>();
							comprasAux.addAll(compras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							compraLogic.getComprasFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteCompras("FK_IdAsientoContable",compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteCompras("FK_IdAsientoContable",compras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.setCompras(new ArrayList<Compra>());
						compraLogic.getCompras().addAll(comprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							compras=new ArrayList<Compra>();
							compras.addAll(comprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					compraLogic.getComprasFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=compraLogic.getCompras()==null||compraLogic.getCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=compras==null|| compras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						comprasAux=new ArrayList<Compra>();
						comprasAux.addAll(compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							comprasAux=new ArrayList<Compra>();
							comprasAux.addAll(compras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							compraLogic.getComprasFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteCompras("FK_IdCliente",compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteCompras("FK_IdCliente",compras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.setCompras(new ArrayList<Compra>());
						compraLogic.getCompras().addAll(comprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							compras=new ArrayList<Compra>();
							compras.addAll(comprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					compraLogic.getComprasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=compraLogic.getCompras()==null||compraLogic.getCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=compras==null|| compras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						comprasAux=new ArrayList<Compra>();
						comprasAux.addAll(compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							comprasAux=new ArrayList<Compra>();
							comprasAux.addAll(compras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							compraLogic.getComprasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteCompras("FK_IdEjercicio",compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteCompras("FK_IdEjercicio",compras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.setCompras(new ArrayList<Compra>());
						compraLogic.getCompras().addAll(comprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							compras=new ArrayList<Compra>();
							compras.addAll(comprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpleado")) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					compraLogic.getComprasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=compraLogic.getCompras()==null||compraLogic.getCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=compras==null|| compras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						comprasAux=new ArrayList<Compra>();
						comprasAux.addAll(compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							comprasAux=new ArrayList<Compra>();
							comprasAux.addAll(compras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							compraLogic.getComprasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteCompras("FK_IdEmpleado",compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteCompras("FK_IdEmpleado",compras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.setCompras(new ArrayList<Compra>());
						compraLogic.getCompras().addAll(comprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							compras=new ArrayList<Compra>();
							compras.addAll(comprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					compraLogic.getComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=compraLogic.getCompras()==null||compraLogic.getCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=compras==null|| compras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						comprasAux=new ArrayList<Compra>();
						comprasAux.addAll(compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							comprasAux=new ArrayList<Compra>();
							comprasAux.addAll(compras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							compraLogic.getComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteCompras("FK_IdEmpresa",compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteCompras("FK_IdEmpresa",compras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.setCompras(new ArrayList<Compra>());
						compraLogic.getCompras().addAll(comprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							compras=new ArrayList<Compra>();
							compras.addAll(comprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoInventario")) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEstadoInventario(id_estado_inventarioFK_IdEstadoInventario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					compraLogic.getComprasFK_IdEstadoInventario(finalQueryGlobal,pagination,id_estado_inventarioFK_IdEstadoInventario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEstadoInventario(id_estado_inventarioFK_IdEstadoInventario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEstadoInventario(id_estado_inventarioFK_IdEstadoInventario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=compraLogic.getCompras()==null||compraLogic.getCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=compras==null|| compras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						comprasAux=new ArrayList<Compra>();
						comprasAux.addAll(compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							comprasAux=new ArrayList<Compra>();
							comprasAux.addAll(compras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							compraLogic.getComprasFK_IdEstadoInventario(finalQueryGlobal,pagination,id_estado_inventarioFK_IdEstadoInventario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEstadoInventario(id_estado_inventarioFK_IdEstadoInventario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdEstadoInventario(id_estado_inventarioFK_IdEstadoInventario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteCompras("FK_IdEstadoInventario",compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteCompras("FK_IdEstadoInventario",compras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.setCompras(new ArrayList<Compra>());
						compraLogic.getCompras().addAll(comprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							compras=new ArrayList<Compra>();
							compras.addAll(comprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdModulo")) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					compraLogic.getComprasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=compraLogic.getCompras()==null||compraLogic.getCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=compras==null|| compras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						comprasAux=new ArrayList<Compra>();
						comprasAux.addAll(compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							comprasAux=new ArrayList<Compra>();
							comprasAux.addAll(compras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							compraLogic.getComprasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteCompras("FK_IdModulo",compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteCompras("FK_IdModulo",compras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.setCompras(new ArrayList<Compra>());
						compraLogic.getCompras().addAll(comprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							compras=new ArrayList<Compra>();
							compras.addAll(comprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdOrdenCompra")) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					compraLogic.getComprasFK_IdOrdenCompra(finalQueryGlobal,pagination,id_orden_compraFK_IdOrdenCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=compraLogic.getCompras()==null||compraLogic.getCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=compras==null|| compras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						comprasAux=new ArrayList<Compra>();
						comprasAux.addAll(compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							comprasAux=new ArrayList<Compra>();
							comprasAux.addAll(compras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							compraLogic.getComprasFK_IdOrdenCompra(finalQueryGlobal,pagination,id_orden_compraFK_IdOrdenCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteCompras("FK_IdOrdenCompra",compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteCompras("FK_IdOrdenCompra",compras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.setCompras(new ArrayList<Compra>());
						compraLogic.getCompras().addAll(comprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							compras=new ArrayList<Compra>();
							compras.addAll(comprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPedidoCompra")) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdPedidoCompra(id_pedido_compraFK_IdPedidoCompra);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					compraLogic.getComprasFK_IdPedidoCompra(finalQueryGlobal,pagination,id_pedido_compraFK_IdPedidoCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdPedidoCompra(id_pedido_compraFK_IdPedidoCompra);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdPedidoCompra(id_pedido_compraFK_IdPedidoCompra);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=compraLogic.getCompras()==null||compraLogic.getCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=compras==null|| compras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						comprasAux=new ArrayList<Compra>();
						comprasAux.addAll(compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							comprasAux=new ArrayList<Compra>();
							comprasAux.addAll(compras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							compraLogic.getComprasFK_IdPedidoCompra(finalQueryGlobal,pagination,id_pedido_compraFK_IdPedidoCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdPedidoCompra(id_pedido_compraFK_IdPedidoCompra);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdPedidoCompra(id_pedido_compraFK_IdPedidoCompra);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteCompras("FK_IdPedidoCompra",compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteCompras("FK_IdPedidoCompra",compras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.setCompras(new ArrayList<Compra>());
						compraLogic.getCompras().addAll(comprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							compras=new ArrayList<Compra>();
							compras.addAll(comprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					compraLogic.getComprasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=compraLogic.getCompras()==null||compraLogic.getCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=compras==null|| compras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						comprasAux=new ArrayList<Compra>();
						comprasAux.addAll(compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							comprasAux=new ArrayList<Compra>();
							comprasAux.addAll(compras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							compraLogic.getComprasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteCompras("FK_IdPeriodo",compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteCompras("FK_IdPeriodo",compras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.setCompras(new ArrayList<Compra>());
						compraLogic.getCompras().addAll(comprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							compras=new ArrayList<Compra>();
							compras.addAll(comprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					compraLogic.getComprasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=compraLogic.getCompras()==null||compraLogic.getCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=compras==null|| compras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						comprasAux=new ArrayList<Compra>();
						comprasAux.addAll(compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							comprasAux=new ArrayList<Compra>();
							comprasAux.addAll(compras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							compraLogic.getComprasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteCompras("FK_IdSucursal",compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteCompras("FK_IdSucursal",compras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.setCompras(new ArrayList<Compra>());
						compraLogic.getCompras().addAll(comprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							compras=new ArrayList<Compra>();
							compras.addAll(comprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoTransaccionModulo")) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					compraLogic.getComprasFK_IdTipoTransaccionModulo(finalQueryGlobal,pagination,id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=compraLogic.getCompras()==null||compraLogic.getCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=compras==null|| compras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						comprasAux=new ArrayList<Compra>();
						comprasAux.addAll(compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							comprasAux=new ArrayList<Compra>();
							comprasAux.addAll(compras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							compraLogic.getComprasFK_IdTipoTransaccionModulo(finalQueryGlobal,pagination,id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteCompras("FK_IdTipoTransaccionModulo",compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteCompras("FK_IdTipoTransaccionModulo",compras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.setCompras(new ArrayList<Compra>());
						compraLogic.getCompras().addAll(comprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							compras=new ArrayList<Compra>();
							compras.addAll(comprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUsuario")) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					compraLogic.getComprasFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=compraLogic.getCompras()==null||compraLogic.getCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=compras==null|| compras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						comprasAux=new ArrayList<Compra>();
						comprasAux.addAll(compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							comprasAux=new ArrayList<Compra>();
							comprasAux.addAll(compras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							compraLogic.getComprasFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=CompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteCompras("FK_IdUsuario",compraLogic.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteCompras("FK_IdUsuario",compras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						compraLogic.setCompras(new ArrayList<Compra>());
						compraLogic.getCompras().addAll(comprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							compras=new ArrayList<Compra>();
							compras.addAll(comprasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesCompra();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessCompra();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=compraLogic.getCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=compras.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=compraLogic.getCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=compras.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(Compra compra) {
		Boolean permite=true;
		
		if(this.compra.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=CompraConstantesFunciones.getOrderByListaCompra();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=CompraConstantesFunciones.getOrderByListaCompra();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Compra compra:compraLogic.getCompras()) {
				if(compra.getsType().equals(Constantes2.S_TOTALES)) {
					compraTotales=compra;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Compra compra:this.compras) {
				if(compra.getsType().equals(Constantes2.S_TOTALES)) {
					compraTotales=compra;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.compraAux=new Compra();
			this.compraAux.setsType(Constantes2.S_TOTALES);
			this.compraAux.setIsNew(false);
			this.compraAux.setIsChanged(false);
			this.compraAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				CompraConstantesFunciones.TotalizarValoresFilaCompra(this.compraLogic.getCompras(),this.compraAux);
				
				this.compraLogic.getCompras().add(this.compraAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				CompraConstantesFunciones.TotalizarValoresFilaCompra(this.compras,this.compraAux);
				
				this.compras.add(this.compraAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		compraTotales=new Compra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.compraLogic.getCompras().remove(compraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.compras.remove(compraTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		compraTotales=new Compra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Compra compra:compraLogic.getCompras()) {
				if(compra.getsType().equals(Constantes2.S_TOTALES)) {
					compraTotales=compra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				CompraConstantesFunciones.TotalizarValoresFilaCompra(this.compraLogic.getCompras(),compraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Compra compra:this.compras) {
				if(compra.getsType().equals(Constantes2.S_TOTALES)) {
					compraTotales=compra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				CompraConstantesFunciones.TotalizarValoresFilaCompra(this.compras,compraTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getComprasFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdAsientoContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdAsientoContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdEstadoInventario()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoInventario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdFormato()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormato";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdMoneda()throws Exception {
		try {
			sAccionBusqueda="FK_IdMoneda";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdOrdenCompra()throws Exception {
		try {
			sAccionBusqueda="FK_IdOrdenCompra";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdPedidoCompra()throws Exception {
		try {
			sAccionBusqueda="FK_IdPedidoCompra";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdTipoCambio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCambio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdTipoTransaccionModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoTransaccionModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdTransportista()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransportista";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getComprasFK_IdUsuario()throws Exception {
		try {
			sAccionBusqueda="FK_IdUsuario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getComprasFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdAsientoContable(String sFinalQuery,Long id_asiento_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdAsientoContable(sFinalQuery,this.pagination,id_asiento_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdEmpleado(String sFinalQuery,Long id_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdEmpleado(sFinalQuery,this.pagination,id_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdEstadoInventario(String sFinalQuery,Long id_estado_inventario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdEstadoInventario(sFinalQuery,this.pagination,id_estado_inventario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdFormato(String sFinalQuery,Long id_formato)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdFormato(sFinalQuery,this.pagination,id_formato);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdModulo(String sFinalQuery,Long id_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdModulo(sFinalQuery,this.pagination,id_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdMoneda(String sFinalQuery,Long id_moneda)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdMoneda(sFinalQuery,this.pagination,id_moneda);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdOrdenCompra(String sFinalQuery,Long id_orden_compra)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdOrdenCompra(sFinalQuery,this.pagination,id_orden_compra);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdPedidoCompra(String sFinalQuery,Long id_pedido_compra)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdPedidoCompra(sFinalQuery,this.pagination,id_pedido_compra);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdTipoCambio(String sFinalQuery,Long id_tipo_cambio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdTipoCambio(sFinalQuery,this.pagination,id_tipo_cambio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdTipoTransaccionModulo(String sFinalQuery,Long id_tipo_transaccion_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdTipoTransaccionModulo(sFinalQuery,this.pagination,id_tipo_transaccion_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdTransportista(String sFinalQuery,Long id_transportista)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdTransportista(sFinalQuery,this.pagination,id_transportista);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getComprasFK_IdUsuario(String sFinalQuery,Long id_usuario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLogic.getComprasFK_IdUsuario(sFinalQuery,this.pagination,id_usuario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosCompra() {
		this.isPermisoTodoCompra=false;
		this.isPermisoNuevoCompra=false;
		this.isPermisoActualizarCompra=false;
		this.isPermisoActualizarOriginalCompra=false;
		this.isPermisoEliminarCompra=false;
		this.isPermisoGuardarCambiosCompra=false;
		this.isPermisoConsultaCompra=false;
		this.isPermisoBusquedaCompra=false;
		this.isPermisoReporteCompra=false;		
		this.isPermisoOrdenCompra=false;		
		this.isPermisoPaginacionMedioCompra=false;		
		this.isPermisoPaginacionAltoCompra=false;
		this.isPermisoPaginacionTodoCompra=false;
		this.isPermisoCopiarCompra=false;		
		this.isPermisoVerFormCompra=false;		
		this.isPermisoDuplicarCompra=false;		
		this.isPermisoOrdenCompra=false;		
	}
	
	public void setPermisosUsuarioCompra(Boolean isPermiso) {
		this.isPermisoTodoCompra=isPermiso;
		this.isPermisoNuevoCompra=isPermiso;
		this.isPermisoActualizarCompra=isPermiso;
		this.isPermisoActualizarOriginalCompra=isPermiso;
		this.isPermisoEliminarCompra=isPermiso;
		this.isPermisoGuardarCambiosCompra=isPermiso;
		this.isPermisoConsultaCompra=isPermiso;
		this.isPermisoBusquedaCompra=isPermiso;
		this.isPermisoReporteCompra=isPermiso;
		this.isPermisoOrdenCompra=isPermiso;		
		this.isPermisoPaginacionMedioCompra=isPermiso;		
		this.isPermisoPaginacionAltoCompra=isPermiso;		
		this.isPermisoPaginacionTodoCompra=isPermiso;		
		this.isPermisoCopiarCompra=isPermiso;		
		this.isPermisoVerFormCompra=isPermiso;		
		this.isPermisoDuplicarCompra=isPermiso;
		this.isPermisoOrdenCompra=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioCompra(Boolean isPermiso) {
		//this.isPermisoTodoCompra=isPermiso;
		this.isPermisoNuevoCompra=isPermiso;
		this.isPermisoActualizarCompra=isPermiso;
		this.isPermisoActualizarOriginalCompra=isPermiso;
		this.isPermisoEliminarCompra=isPermiso;
		this.isPermisoGuardarCambiosCompra=isPermiso;
		//this.isPermisoConsultaCompra=isPermiso;
		//this.isPermisoBusquedaCompra=isPermiso;
		//this.isPermisoReporteCompra=isPermiso;
		//this.isPermisoOrdenCompra=isPermiso;		
		//this.isPermisoPaginacionMedioCompra=isPermiso;		
		//this.isPermisoPaginacionAltoCompra=isPermiso;		
		//this.isPermisoPaginacionTodoCompra=isPermiso;		
		//this.isPermisoCopiarCompra=isPermiso;		
		//this.isPermisoDuplicarCompra=isPermiso;
		//this.isPermisoOrdenCompra=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioCompraClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(RetencionInvenConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(TransaccionLocalConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(FormaPagoInvenConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(DetalleCompraConstantesFunciones.SNOMBREOPCION);
		
		if(CompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosRetencionInven=false;
		this.isTienePermisosRetencionInven=this.verificarGetPermisosUsuarioOpcionCompraClaseRelacionada(this.opcionsRelacionadas,RetencionInvenConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosTransaccionLocal=false;
		this.isTienePermisosTransaccionLocal=this.verificarGetPermisosUsuarioOpcionCompraClaseRelacionada(this.opcionsRelacionadas,TransaccionLocalConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosFormaPagoInven=false;
		this.isTienePermisosFormaPagoInven=this.verificarGetPermisosUsuarioOpcionCompraClaseRelacionada(this.opcionsRelacionadas,FormaPagoInvenConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosDetalleCompra=false;
		this.isTienePermisosDetalleCompra=this.verificarGetPermisosUsuarioOpcionCompraClaseRelacionada(this.opcionsRelacionadas,DetalleCompraConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebCompra(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioCompraClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosRetencionInven=conPermiso;
		this.isTienePermisosTransaccionLocal=conPermiso;
		this.isTienePermisosFormaPagoInven=conPermiso;
		this.isTienePermisosDetalleCompra=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioCompraClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionCompraClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioCompraClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosRetencionInven && this.jInternalFrameDetalleFormCompra!=null && this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCompra.jTabbedPaneRelacionesCompra.remove(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosTransaccionLocal && this.jInternalFrameDetalleFormCompra!=null && this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCompra.jTabbedPaneRelacionesCompra.remove(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosFormaPagoInven && this.jInternalFrameDetalleFormCompra!=null && this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCompra.jTabbedPaneRelacionesCompra.remove(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosDetalleCompra && this.jInternalFrameDetalleFormCompra!=null && this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCompra.jTabbedPaneRelacionesCompra.remove(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioCompra() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(CompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.compraSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, CompraConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoCompra=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarCompra=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalCompra=this.isPermisoActualizarCompra;
			this.isPermisoEliminarCompra=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosCompra=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaCompra=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaCompra=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoCompra=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteCompra=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioCompra=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoCompra=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoCompra=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarCompra=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormCompra=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarCompra=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.compraSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosCompra.setToolTipText(this.jTableDatosCompra.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioCompra(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioCompra(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(CompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(CompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioCompra() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosRetencionInven && this.compraConstantesFunciones.mostrarRetencionInvenCompra && !CompraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Retencion");
			reporte.setsDescripcion("Retencion");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosTransaccionLocal && this.compraConstantesFunciones.mostrarTransaccionLocalCompra && !CompraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Transaccion Local");
			reporte.setsDescripcion("Transaccion Local");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosFormaPagoInven && this.compraConstantesFunciones.mostrarFormaPagoInvenCompra && !CompraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Forma Pago");
			reporte.setsDescripcion("Forma Pago");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosDetalleCompra && this.compraConstantesFunciones.mostrarDetalleCompraCompra && !CompraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Detalle Compra");
			reporte.setsDescripcion("Detalle Compra");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyCompraListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.modulosForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.usuariosForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.tipocambiosForeignKey=new ArrayList();
				this.estadoinventariosForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.formatosForeignKey=new ArrayList();
				this.empleadosForeignKey=new ArrayList();
				this.transportistasForeignKey=new ArrayList();
				this.ordencomprasForeignKey=new ArrayList();
				this.pedidocomprasForeignKey=new ArrayList();
				this.tipotransaccionmodulosForeignKey=new ArrayList();
				this.asientocontablesForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(CompraJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyCompraListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUsuarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoInventarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransportistaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyOrdenCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPedidoCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoTransaccionModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUsuarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UsuarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCambioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoInventarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadoinventariosForeignKey==null||this.estadoinventariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoInventarioConstantesFunciones.getArrayColumnasGlobalesEstadoInventario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoInventarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoInventarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoInventariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransportistaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transportistasForeignKey==null||this.transportistasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransportistaConstantesFunciones.getArrayColumnasGlobalesTransportista(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransportistaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransportistaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransportistasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyOrdenCompraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ordencomprasForeignKey==null||this.ordencomprasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=OrdenCompraConstantesFunciones.getArrayColumnasGlobalesOrdenCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,OrdenCompraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=OrdenCompraConstantesFunciones.SFINALQUERY;

				this.cargarCombosOrdenComprasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPedidoCompraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.pedidocomprasForeignKey==null||this.pedidocomprasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PedidoCompraConstantesFunciones.getArrayColumnasGlobalesPedidoCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PedidoCompraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PedidoCompraConstantesFunciones.SFINALQUERY;

				this.cargarCombosPedidoComprasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTransaccionModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipotransaccionmodulosForeignKey==null||this.tipotransaccionmodulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoTransaccionModuloConstantesFunciones.getArrayColumnasGlobalesTipoTransaccionModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_INVENTARIO);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoTransaccionModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoTransaccionModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoTransaccionModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AsientoContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			CompraParameterReturnGeneral compraReturnGeneral=new CompraParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_empresaCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_empresaCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_sucursalCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_sucursalCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalModulo="";

				if(((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_moduloCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_moduloCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalModulo, "");
						finalQueryGlobalModulo+=ModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalModulo=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidModuloActual();
					}
				} else {
					finalQueryGlobalModulo="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_ejercicioCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_ejercicioCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_periodoCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_periodoCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_anioCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_anioCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_mesCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_mesCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalUsuario="";

				if(((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_usuarioCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_usuarioCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUsuario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

						finalQueryGlobalUsuario=Funciones.GetFinalQueryAppend(finalQueryGlobalUsuario, "");
						finalQueryGlobalUsuario+=UsuarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUsuario=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidUsuarioActual();
					}
				} else {
					finalQueryGlobalUsuario="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_monedaCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_monedaCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalTipoCambio="";

				if(((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_tipo_cambioCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_tipo_cambioCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCambio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCambio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCambio, "");
						finalQueryGlobalTipoCambio+=TipoCambioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCambio=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidTipoCambioActual();
					}
				} else {
					finalQueryGlobalTipoCambio="NONE";
				}


				String finalQueryGlobalEstadoInventario="";

				if(((this.estadoinventariosForeignKey==null||this.estadoinventariosForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_estado_inventarioCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_estado_inventarioCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoInventario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoInventarioConstantesFunciones.getArrayColumnasGlobalesEstadoInventario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoInventario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoInventarioConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoInventario=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoInventario, "");
						finalQueryGlobalEstadoInventario+=EstadoInventarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoInventariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoInventario=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidEstadoInventarioActual();
					}
				} else {
					finalQueryGlobalEstadoInventario="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_clienteCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_clienteCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalFormato="";

				if(((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_formatoCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_formatoCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormato=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormato=Funciones.GetFinalQueryAppend(finalQueryGlobalFormato, "");
						finalQueryGlobalFormato+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormato=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidFormatoActual();
					}
				} else {
					finalQueryGlobalFormato="NONE";
				}


				String finalQueryGlobalEmpleado="";

				if(((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_empleadoCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_empleadoCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleado, "");
						finalQueryGlobalEmpleado+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleado=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidEmpleadoActual();
					}
				} else {
					finalQueryGlobalEmpleado="NONE";
				}


				String finalQueryGlobalTransportista="";

				if(((this.transportistasForeignKey==null||this.transportistasForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_transportistaCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_transportistaCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransportistaConstantesFunciones.getArrayColumnasGlobalesTransportista(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransportista=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransportistaConstantesFunciones.TABLENAME);

						finalQueryGlobalTransportista=Funciones.GetFinalQueryAppend(finalQueryGlobalTransportista, "");
						finalQueryGlobalTransportista+=TransportistaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransportistasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransportista=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidTransportistaActual();
					}
				} else {
					finalQueryGlobalTransportista="NONE";
				}


				String finalQueryGlobalOrdenCompra="";

				if(((this.ordencomprasForeignKey==null||this.ordencomprasForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_orden_compraCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_orden_compraCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionOrdenCompra()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=OrdenCompraConstantesFunciones.getArrayColumnasGlobalesOrdenCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalOrdenCompra=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,OrdenCompraConstantesFunciones.TABLENAME);

						finalQueryGlobalOrdenCompra=Funciones.GetFinalQueryAppend(finalQueryGlobalOrdenCompra, "");
						finalQueryGlobalOrdenCompra+=OrdenCompraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosOrdenComprasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalOrdenCompra=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidOrdenCompraActual();
					}
				} else {
					finalQueryGlobalOrdenCompra="NONE";
				}


				String finalQueryGlobalPedidoCompra="";

				if(((this.pedidocomprasForeignKey==null||this.pedidocomprasForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_pedido_compraCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_pedido_compraCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionPedidoCompra()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PedidoCompraConstantesFunciones.getArrayColumnasGlobalesPedidoCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPedidoCompra=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PedidoCompraConstantesFunciones.TABLENAME);

						finalQueryGlobalPedidoCompra=Funciones.GetFinalQueryAppend(finalQueryGlobalPedidoCompra, "");
						finalQueryGlobalPedidoCompra+=PedidoCompraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPedidoComprasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPedidoCompra=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidPedidoCompraActual();
					}
				} else {
					finalQueryGlobalPedidoCompra="NONE";
				}


				String finalQueryGlobalTipoTransaccionModulo="";

				if(((this.tipotransaccionmodulosForeignKey==null||this.tipotransaccionmodulosForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_tipo_transaccion_moduloCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_tipo_transaccion_moduloCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoTransaccionModuloConstantesFunciones.getArrayColumnasGlobalesTipoTransaccionModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_INVENTARIO);

						finalQueryGlobalTipoTransaccionModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoTransaccionModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoTransaccionModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoTransaccionModulo, "");
						finalQueryGlobalTipoTransaccionModulo+=TipoTransaccionModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoTransaccionModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoTransaccionModulo=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidTipoTransaccionModuloActual();
					}
				} else {
					finalQueryGlobalTipoTransaccionModulo="NONE";
				}


				String finalQueryGlobalAsientoContable="";

				if(((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0) && this.compraConstantesFunciones.cargarid_asiento_contableCompra)
					 || (this.esRecargarFks && this.compraConstantesFunciones.cargarid_asiento_contableCompra)) {

					if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAsientoContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

						finalQueryGlobalAsientoContable=Funciones.GetFinalQueryAppend(finalQueryGlobalAsientoContable, "");
						finalQueryGlobalAsientoContable+=AsientoContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAsientoContable=" WHERE " + ConstantesSql.ID + "="+compraSessionBean.getlidAsientoContableActual();
					}
				} else {
					finalQueryGlobalAsientoContable="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				compraReturnGeneral=compraLogic.cargarCombosLoteForeignKeyCompra(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalModulo,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalUsuario,finalQueryGlobalMoneda,finalQueryGlobalTipoCambio,finalQueryGlobalEstadoInventario,finalQueryGlobalCliente,finalQueryGlobalFormato,finalQueryGlobalEmpleado,finalQueryGlobalTransportista,finalQueryGlobalOrdenCompra,finalQueryGlobalPedidoCompra,finalQueryGlobalTipoTransaccionModulo,finalQueryGlobalAsientoContable);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=compraReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=compraReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalModulo.equals("NONE")) {
				this.modulosForeignKey=compraReturnGeneral.getmodulosForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=compraReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=compraReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=compraReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=compraReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalUsuario.equals("NONE")) {
				this.usuariosForeignKey=compraReturnGeneral.getusuariosForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=compraReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalTipoCambio.equals("NONE")) {
				this.tipocambiosForeignKey=compraReturnGeneral.gettipocambiosForeignKey();
			}

			if(!finalQueryGlobalEstadoInventario.equals("NONE")) {
				this.estadoinventariosForeignKey=compraReturnGeneral.getestadoinventariosForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=compraReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalFormato.equals("NONE")) {
				this.formatosForeignKey=compraReturnGeneral.getformatosForeignKey();
			}

			if(!finalQueryGlobalEmpleado.equals("NONE")) {
				this.empleadosForeignKey=compraReturnGeneral.getempleadosForeignKey();
			}

			if(!finalQueryGlobalTransportista.equals("NONE")) {
				this.transportistasForeignKey=compraReturnGeneral.gettransportistasForeignKey();
			}

			if(!finalQueryGlobalOrdenCompra.equals("NONE")) {
				this.ordencomprasForeignKey=compraReturnGeneral.getordencomprasForeignKey();
			}

			if(!finalQueryGlobalPedidoCompra.equals("NONE")) {
				this.pedidocomprasForeignKey=compraReturnGeneral.getpedidocomprasForeignKey();
			}

			if(!finalQueryGlobalTipoTransaccionModulo.equals("NONE")) {
				this.tipotransaccionmodulosForeignKey=compraReturnGeneral.gettipotransaccionmodulosForeignKey();
			}

			if(!finalQueryGlobalAsientoContable.equals("NONE")) {
				this.asientocontablesForeignKey=compraReturnGeneral.getasientocontablesForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyCompra()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyModulo();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyUsuario();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeyTipoCambio();
			this.addItemDefectoCombosForeignKeyEstadoInventario();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyFormato();
			this.addItemDefectoCombosForeignKeyEmpleado();
			this.addItemDefectoCombosForeignKeyTransportista();
			this.addItemDefectoCombosForeignKeyOrdenCompra();
			this.addItemDefectoCombosForeignKeyPedidoCompra();
			this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
			this.addItemDefectoCombosForeignKeyAsientoContable();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyModulo()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				Modulo modulo=new Modulo();
				ModuloConstantesFunciones.setModuloDescripcion(modulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				modulo.setId(null);

				if(!ModuloConstantesFunciones.ExisteEnLista(this.modulosForeignKey,modulo,true)) {

					this.modulosForeignKey.add(0,modulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUsuario()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				Usuario usuario=new Usuario();
				UsuarioConstantesFunciones.setUsuarioDescripcion(usuario,Constantes.SMENSAJE_ESCOJA_OPCION);
				usuario.setId(null);

				if(!UsuarioConstantesFunciones.ExisteEnLista(this.usuariosForeignKey,usuario,true)) {

					this.usuariosForeignKey.add(0,usuario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoCambio()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				TipoCambio tipocambio=new TipoCambio();
				TipoCambioConstantesFunciones.setTipoCambioDescripcion(tipocambio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocambio.setId(null);

				if(!TipoCambioConstantesFunciones.ExisteEnLista(this.tipocambiosForeignKey,tipocambio,true)) {

					this.tipocambiosForeignKey.add(0,tipocambio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoInventario()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoInventario()) {
				EstadoInventario estadoinventario=new EstadoInventario();
				EstadoInventarioConstantesFunciones.setEstadoInventarioDescripcion(estadoinventario,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadoinventario.setId(null);

				if(!EstadoInventarioConstantesFunciones.ExisteEnLista(this.estadoinventariosForeignKey,estadoinventario,true)) {

					this.estadoinventariosForeignKey.add(0,estadoinventario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormato()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				Formato formato=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formato,Constantes.SMENSAJE_ESCOJA_OPCION);
				formato.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatosForeignKey,formato,true)) {

					this.formatosForeignKey.add(0,formato);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				Empleado empleado=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleado.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadosForeignKey,empleado,true)) {

					this.empleadosForeignKey.add(0,empleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransportista()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {
				Transportista transportista=new Transportista();
				TransportistaConstantesFunciones.setTransportistaDescripcion(transportista,Constantes.SMENSAJE_ESCOJA_OPCION);
				transportista.setId(null);

				if(!TransportistaConstantesFunciones.ExisteEnLista(this.transportistasForeignKey,transportista,true)) {

					this.transportistasForeignKey.add(0,transportista);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyOrdenCompra()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionOrdenCompra()) {
				OrdenCompra ordencompra=new OrdenCompra();
				OrdenCompraConstantesFunciones.setOrdenCompraDescripcion(ordencompra,Constantes.SMENSAJE_ESCOJA_OPCION);
				ordencompra.setId(null);

				if(!OrdenCompraConstantesFunciones.ExisteEnLista(this.ordencomprasForeignKey,ordencompra,true)) {

					this.ordencomprasForeignKey.add(0,ordencompra);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPedidoCompra()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionPedidoCompra()) {
				PedidoCompra pedidocompra=new PedidoCompra();
				PedidoCompraConstantesFunciones.setPedidoCompraDescripcion(pedidocompra,Constantes.SMENSAJE_ESCOJA_OPCION);
				pedidocompra.setId(null);

				if(!PedidoCompraConstantesFunciones.ExisteEnLista(this.pedidocomprasForeignKey,pedidocompra,true)) {

					this.pedidocomprasForeignKey.add(0,pedidocompra);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoTransaccionModulo()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {
				TipoTransaccionModulo tipotransaccionmodulo=new TipoTransaccionModulo();
				TipoTransaccionModuloConstantesFunciones.setTipoTransaccionModuloDescripcion(tipotransaccionmodulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipotransaccionmodulo.setId(null);

				if(!TipoTransaccionModuloConstantesFunciones.ExisteEnLista(this.tipotransaccionmodulosForeignKey,tipotransaccionmodulo,true)) {

					this.tipotransaccionmodulosForeignKey.add(0,tipotransaccionmodulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAsientoContable()throws Exception {
		try {

			if(!this.compraSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				AsientoContable asientocontable=new AsientoContable();
				AsientoContableConstantesFunciones.setAsientoContableDescripcion(asientocontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				asientocontable.setId(null);

				if(!AsientoContableConstantesFunciones.ExisteEnLista(this.asientocontablesForeignKey,asientocontable,true)) {

					this.asientocontablesForeignKey.add(0,asientocontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyCompra()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyCliente("Todos");
			this.initActionsCombosForeignKeyOrdenCompra("Todos");
			this.initActionsCombosForeignKeyPedidoCompra("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyCliente(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyOrdenCompra(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyPedidoCompra(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyCliente(JComboBox jComboBoxClienteGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Cliente clienteLocal=(Cliente)jComboBoxClienteGenerico.getSelectedItem();

			if(clienteLocal!=null  && clienteLocal.getId()!=null  && clienteLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_cliente="+clienteLocal.getId();
			}
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyOrdenCompra(JComboBox jComboBoxOrdenCompraGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			OrdenCompra ordencompraLocal=(OrdenCompra)jComboBoxOrdenCompraGenerico.getSelectedItem();

			if(ordencompraLocal!=null  && ordencompraLocal.getId()!=null  && ordencompraLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_orden_compra="+ordencompraLocal.getId();
			}
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyPedidoCompra(JComboBox jComboBoxPedidoCompraGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			PedidoCompra pedidocompraLocal=(PedidoCompra)jComboBoxPedidoCompraGenerico.getSelectedItem();

			if(pedidocompraLocal!=null  && pedidocompraLocal.getId()!=null  && pedidocompraLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_pedido_compra="+pedidocompraLocal.getId();
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyCliente(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.addItemListener(new ComboBoxItemListener(this,"id_clienteCompra"));
						this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.addFocusListener(new ComboBoxFocusListener(this,"id_clienteCompra"));
					}
				} else {
					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.addActionListener(new ComboBoxActionListener(this,"id_clienteCompra"));
						this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.addFocusListener(new ComboBoxFocusListener(this,"id_clienteCompra"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_clienteFK_IdClienteCompra.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_clienteFK_IdClienteCompra"));

						this.jComboBoxid_clienteFK_IdClienteCompra.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_clienteFK_IdClienteCompra"));

					} else {
						this.jComboBoxid_clienteFK_IdClienteCompra.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_clienteFK_IdClienteCompra"));

						this.jComboBoxid_clienteFK_IdClienteCompra.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_clienteFK_IdClienteCompra"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyOrdenCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.addItemListener(new ComboBoxItemListener(this,"id_orden_compraCompra"));
						this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.addFocusListener(new ComboBoxFocusListener(this,"id_orden_compraCompra"));
					}
				} else {
					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.addActionListener(new ComboBoxActionListener(this,"id_orden_compraCompra"));
						this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.addFocusListener(new ComboBoxFocusListener(this,"id_orden_compraCompra"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_orden_compraFK_IdOrdenCompraCompra.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_orden_compraFK_IdOrdenCompraCompra"));

						this.jComboBoxid_orden_compraFK_IdOrdenCompraCompra.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_orden_compraFK_IdOrdenCompraCompra"));

					} else {
						this.jComboBoxid_orden_compraFK_IdOrdenCompraCompra.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_orden_compraFK_IdOrdenCompraCompra"));

						this.jComboBoxid_orden_compraFK_IdOrdenCompraCompra.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_orden_compraFK_IdOrdenCompraCompra"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyPedidoCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.addItemListener(new ComboBoxItemListener(this,"id_pedido_compraCompra"));
						this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.addFocusListener(new ComboBoxFocusListener(this,"id_pedido_compraCompra"));
					}
				} else {
					if(this.jInternalFrameDetalleFormCompra!=null) {
						this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.addActionListener(new ComboBoxActionListener(this,"id_pedido_compraCompra"));
						this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.addFocusListener(new ComboBoxFocusListener(this,"id_pedido_compraCompra"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_pedido_compraFK_IdPedidoCompraCompra.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_pedido_compraFK_IdPedidoCompraCompra"));

						this.jComboBoxid_pedido_compraFK_IdPedidoCompraCompra.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_pedido_compraFK_IdPedidoCompraCompra"));

					} else {
						this.jComboBoxid_pedido_compraFK_IdPedidoCompraCompra.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_pedido_compraFK_IdPedidoCompraCompra"));

						this.jComboBoxid_pedido_compraFK_IdPedidoCompraCompra.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_pedido_compraFK_IdPedidoCompraCompra"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyCompra()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualModuloForeignKey(this.moduloActual.getId(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
				this.setActualUsuarioForeignKey(this.parametroGeneralUsuario.getid_usuario(),false,"Formulario");
				this.setActualMonedaForeignKey(this.parametroGeneralUsuario.getid_moneda(),false,"Formulario");
			
			
				this.compra.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
				this.compra.setfecha_entrega(this.parametroGeneralUsuario.getfecha_sistema());
				this.compra.setfecha_valor(this.parametroGeneralUsuario.getfecha_sistema());
				this.compra.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyCompra();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyCompra(Compra compra)throws Exception {	
		try {
			
			this.setActualTipoCambioForeignKey(compra.getid_tipo_cambio(),false,"Formulario");
			this.setActualEstadoInventarioForeignKey(compra.getid_estado_inventario(),false,"Formulario");
			this.setActualClienteForeignKey(compra.getid_cliente(),false,"Formulario");
			this.setActualFormatoForeignKey(compra.getid_formato(),false,"Formulario");
			this.setActualEmpleadoForeignKey(compra.getid_empleado(),false,"Formulario");
			this.setActualTransportistaForeignKey(compra.getid_transportista(),false,"Formulario");
			this.setActualOrdenCompraForeignKey(compra.getid_orden_compra(),false,"Formulario");
			this.setActualPedidoCompraForeignKey(compra.getid_pedido_compra(),false,"Formulario");
			this.setActualTipoTransaccionModuloForeignKey(compra.getid_tipo_transaccion_modulo(),false,"Formulario");
			this.setActualAsientoContableForeignKey(compra.getid_asiento_contable(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyCompra(Compra compra,String sTipoEvento)throws Exception {	
		try {
			
			

				if(compra.getTipoCambio()!=null && !sTipoEvento.equals("id_tipo_cambioCompra")) { //sTipoEvento Evita Bucle Infinito

					this.tipocambiosForeignKey=new ArrayList<TipoCambio>();
					this.tipocambiosForeignKey.add(compra.getTipoCambio());

					this.addItemDefectoCombosForeignKeyTipoCambio();
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				if(compra.getCliente()!=null && !sTipoEvento.equals("id_clienteCompra")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(compra.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(compra.getEmpleado()!=null && !sTipoEvento.equals("id_empleadoCompra")) { //sTipoEvento Evita Bucle Infinito

					this.empleadosForeignKey=new ArrayList<Empleado>();
					this.empleadosForeignKey.add(compra.getEmpleado());

					this.addItemDefectoCombosForeignKeyEmpleado();
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				if(compra.getOrdenCompra()!=null && !sTipoEvento.equals("id_orden_compraCompra")) { //sTipoEvento Evita Bucle Infinito

					this.ordencomprasForeignKey=new ArrayList<OrdenCompra>();
					this.ordencomprasForeignKey.add(compra.getOrdenCompra());

					this.addItemDefectoCombosForeignKeyOrdenCompra();
					this.cargarCombosFrameOrdenComprasForeignKey("Todos");
				}

				if(compra.getPedidoCompra()!=null && !sTipoEvento.equals("id_pedido_compraCompra")) { //sTipoEvento Evita Bucle Infinito

					this.pedidocomprasForeignKey=new ArrayList<PedidoCompra>();
					this.pedidocomprasForeignKey.add(compra.getPedidoCompra());

					this.addItemDefectoCombosForeignKeyPedidoCompra();
					this.cargarCombosFramePedidoComprasForeignKey("Todos");
				}

				if(compra.getAsientoContable()!=null && !sTipoEvento.equals("id_asiento_contableCompra")) { //sTipoEvento Evita Bucle Infinito

					this.asientocontablesForeignKey=new ArrayList<AsientoContable>();
					this.asientocontablesForeignKey.add(compra.getAsientoContable());

					this.addItemDefectoCombosForeignKeyAsientoContable();
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyCompra()throws Exception {	
		try {
			
			this.setActualTipoCambioForeignKey(this.compraConstantesFunciones.getid_tipo_cambio(),false,"Formulario");
			this.setActualEstadoInventarioForeignKey(this.compraConstantesFunciones.getid_estado_inventario(),false,"Formulario");
			this.setActualClienteForeignKey(this.compraConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualFormatoForeignKey(this.compraConstantesFunciones.getid_formato(),false,"Formulario");
			this.setActualEmpleadoForeignKey(this.compraConstantesFunciones.getid_empleado(),false,"Formulario");
			this.setActualTransportistaForeignKey(this.compraConstantesFunciones.getid_transportista(),false,"Formulario");
			this.setActualOrdenCompraForeignKey(this.compraConstantesFunciones.getid_orden_compra(),false,"Formulario");
			this.setActualPedidoCompraForeignKey(this.compraConstantesFunciones.getid_pedido_compra(),false,"Formulario");
			this.setActualTipoTransaccionModuloForeignKey(this.compraConstantesFunciones.getid_tipo_transaccion_modulo(),false,"Formulario");
			this.setActualAsientoContableForeignKey(this.compraConstantesFunciones.getid_asiento_contable(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyCompra()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormCompra!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormCompra!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}

				this.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,"Formulario");
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroCompra()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyCompra()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameModulosForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameUsuariosForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameTipoCambiosForeignKey("Todos");
			this.cargarCombosFrameEstadoInventariosForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameFormatosForeignKey("Todos");
			this.cargarCombosFrameEmpleadosForeignKey("Todos");
			this.cargarCombosFrameTransportistasForeignKey("Todos");
			this.cargarCombosFrameOrdenComprasForeignKey("Todos");
			this.cargarCombosFramePedidoComprasForeignKey("Todos");
			this.cargarCombosFrameTipoTransaccionModulosForeignKey("Todos");
			this.cargarCombosFrameAsientoContablesForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUsuariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoInventariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransportistasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameOrdenComprasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePedidoComprasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoTransaccionModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyCompra()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_empresaCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_empresaCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_empresaCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_sucursalCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_sucursalCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_sucursalCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_moduloCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_moduloCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_moduloCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_anioCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_anioCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_anioCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_mesCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_mesCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_mesCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_usuarioCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_usuarioCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_usuarioCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_monedaCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_monedaCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_monedaCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_cambioCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_cambioCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_cambioCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_estado_inventarioCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_estado_inventarioCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_estado_inventarioCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_formatoCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_formatoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_formatoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_empleadoCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_empleadoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_empleadoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_transportistaCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_transportistaCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_transportistaCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_transaccion_moduloCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_transaccion_moduloCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_transaccion_moduloCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCompra.jComboBoxid_asiento_contableCompra!=null && this.jInternalFrameDetalleFormCompra.jComboBoxid_asiento_contableCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormCompra.jComboBoxid_asiento_contableCompra.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	























	public void recargarFormCompraCliente(JComboBox<?> jComboBoxGenericoCliente,String sFormularioTipoBusqueda) throws Exception {

	}







	public void recargarFormCompraOrdenCompra(JComboBox<?> jComboBoxGenericoOrdenCompra,String sFormularioTipoBusqueda) throws Exception {

	}

	public void recargarFormCompraPedidoCompra(JComboBox<?> jComboBoxGenericoPedidoCompra,String sFormularioTipoBusqueda) throws Exception {

	}




	
	

	public CompraBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public CompraBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public CompraBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.compraSessionBean=new CompraSessionBean(); 
		this.compraConstantesFunciones=new CompraConstantesFunciones(); 
		this.compraBean=new Compra();//(this.compraConstantesFunciones); 		
		this.compraReturnGeneral=new CompraParameterReturnGeneral(); 
		
		this.compraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.compraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public CompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public CompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public CompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessCompra(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			//OBLIGA VALIDA CON GUARDAR RELACIONES, TAMBIEN EN SWING
			conGuardarRelaciones=true;
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.compraConstantesFunciones=new CompraConstantesFunciones(); 
			this.compraBean=new Compra();//this.compraConstantesFunciones); 			
			this.compraReturnGeneral=new CompraParameterReturnGeneral(); 
		
			CompraBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Compra Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.compra=new Compra();
			this.compras = new ArrayList<Compra>();
			this.comprasAux = new ArrayList<Compra>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic=new CompraLogic();
				this.compraLogic.getNewConnexionToDeep("");
			}
			
			//this.compraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.compraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormCompra);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoCompra);	
					}
					
					if(this.jInternalFrameImportacionCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionCompra);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByCompra);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormCompra!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormCompra);
				this.jInternalFrameDetalleFormCompra.setVisible(false);
				this.jInternalFrameDetalleFormCompra.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoCompra);
					this.jInternalFrameReporteDinamicoCompra.setVisible(false);
					this.jInternalFrameReporteDinamicoCompra.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionCompra);
					this.jInternalFrameImportacionCompra.setVisible(false);
					this.jInternalFrameImportacionCompra.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByCompra);
					this.jInternalFrameOrderByCompra.setVisible(false);
					this.jInternalFrameOrderByCompra.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idCompraActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=CompraConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.compraReturnGeneral=new CompraParameterReturnGeneral();
			
			this.compraParameterGeneral=new CompraParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.compraLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.compraSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(CompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.compraSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(RetencionInvenConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(TransaccionLocalConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(FormaPagoInvenConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(DetalleCompraConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,CompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.compraSessionBean.getEsGuardarRelacionado(),this.compraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,CompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.compraSessionBean.getEsGuardarRelacionado(),this.compraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoCompra=false;
			this.isVisibilidadCeldaDuplicarCompra=true;
			this.isVisibilidadCeldaCopiarCompra=true;
			this.isVisibilidadCeldaVerFormCompra=true;
			this.isVisibilidadCeldaOrdenCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesCompra=false;
			this.isVisibilidadCeldaModificarCompra=false;
			this.isVisibilidadCeldaActualizarCompra=false;
			this.isVisibilidadCeldaEliminarCompra=false;
			this.isVisibilidadCeldaCancelarCompra=false;
			this.isVisibilidadCeldaGuardarCompra=false;
			this.isVisibilidadCeldaGuardarCambiosCompra=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdAsientoContable=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpleado=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoInventario=true;
			this.isVisibilidadFK_IdFormato=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdModulo=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdOrdenCompra=true;
			this.isVisibilidadFK_IdPedidoCompra=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoCambio=true;
			this.isVisibilidadFK_IdTipoTransaccionModulo=true;
			this.isVisibilidadFK_IdTransportista=true;
			this.isVisibilidadFK_IdUsuario=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosCompra();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioCompra(false);
			
			this.setPermisosUsuarioCompra();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.compraSessionBean.getEsGuardarRelacionado() 
				|| (this.compraSessionBean.getEsGuardarRelacionado() && this.compraSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioCompraClasesRelacionadas();
			}
			
			if(this.compraSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioCompraClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!CompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosCompra();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualCompra();
			}
			
			if(!this.isPermisoBusquedaCompra) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasCompra.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.compraSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioCompra,this.isPermisoPaginacionMedioCompra,this.isPermisoPaginacionTodoCompra);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(CompraConstantesFunciones.getTiposSeleccionarCompra());
				
				this.tiposColumnasSelect=CompraConstantesFunciones.getTiposSeleccionarCompra(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectCompra();				
				//this.tiposRelacionesSelect=CompraConstantesFunciones.getTiposRelacionesCompra(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.compraSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioCompra();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioCompra(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioCompra(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesCompra() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.retencioninvenLogic=new RetencionInvenLogic();
			this.transaccionlocalLogic=new TransaccionLocalLogic();
			this.formapagoinvenLogic=new FormaPagoInvenLogic();
			this.detallecompraLogic=new DetalleCompraLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.moduloLogic=new ModuloLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.usuarioLogic=new UsuarioLogic();
			this.monedaLogic=new MonedaLogic();
			this.tipocambioLogic=new TipoCambioLogic();
			this.estadoinventarioLogic=new EstadoInventarioLogic();
			this.clienteLogic=new ClienteLogic();
			this.formatoLogic=new FormatoLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.transportistaLogic=new TransportistaLogic();
			this.ordencompraLogic=new OrdenCompraLogic();
			this.pedidocompraLogic=new PedidoCompraLogic();
			this.tipotransaccionmoduloLogic=new TipoTransaccionModuloLogic();
			this.asientocontableLogic=new AsientoContableLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				compraImplementable= (CompraImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+CompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				compraImplementableHome= (CompraImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+CompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.compras= new ArrayList<Compra>();
			this.comprasEliminados= new ArrayList<Compra>();
						
			this.isEsNuevoCompra=false;
			this.esParaAccionDesdeFormularioCompra=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idTipoCambioActual=0L;
			this.idClienteActual=0L;
			this.idEmpleadoActual=0L;
			this.idOrdenCompraActual=0L;
			this.idPedidoCompraActual=0L;
			this.idAsientoContableActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.modulosForeignKey=new ArrayList<Modulo>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.usuariosForeignKey=new ArrayList<Usuario>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>() ;
			this.estadoinventariosForeignKey=new ArrayList<EstadoInventario>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.formatosForeignKey=new ArrayList<Formato>() ;
			this.empleadosForeignKey=new ArrayList<Empleado>() ;
			this.transportistasForeignKey=new ArrayList<Transportista>() ;
			this.ordencomprasForeignKey=new ArrayList<OrdenCompra>() ;
			this.pedidocomprasForeignKey=new ArrayList<PedidoCompra>() ;
			this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>() ;
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyCompra(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroCompra();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.compraSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			CompraBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=CompraConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingCompra(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormCompra!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioCompra();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioCompra();
			}
			
			CompraBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasCompra.getTabCount(); i++) {
					this.jTabbedPaneBusquedasCompra.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasCompra.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessCompra(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga Compra: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectCompra() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(RetencionInvenConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(RetencionInvenConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(TransaccionLocalConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(TransaccionLocalConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(FormaPagoInvenConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(FormaPagoInvenConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(DetalleCompraConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DetalleCompraConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesCompra")) {
				iIndex=this.jInternalFrameDetalleFormCompra.jTabbedPaneRelacionesCompra.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormCompra.jTabbedPaneRelacionesCompra.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosCompra.getSelectedRow();	
				
				

				if(sTitle.equals("Detalle Compras")) {
					if(!DetalleCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCompra();

						this.cargarParteTabPanelRelacionadaDetalleCompra(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Forma Pagoes")) {
					if(!FormaPagoInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCompra();

						this.cargarParteTabPanelRelacionadaFormaPagoInven(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Retenciones")) {
					if(!RetencionInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCompra();

						this.cargarParteTabPanelRelacionadaRetencionInven(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Transaccion Locales")) {
					if(!TransaccionLocalJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCompra();

						this.cargarParteTabPanelRelacionadaTransaccionLocal(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessCompra();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaDetalleCompra(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCompra.cargarSessionConBeanSwingJInternalFrameDetalleCompra(false,true,iIndex);
		this.jButtonDetalleCompraActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDetalleCompra();

		//this.jTabbedPaneRelacionesCompra.updateUI();
		//this.jTabbedPaneRelacionesCompra.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCompra.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaFormaPagoInven(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCompra.cargarSessionConBeanSwingJInternalFrameFormaPagoInven(false,true,iIndex);
		this.jButtonFormaPagoInvenActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaFormaPagoInven();

		//this.jTabbedPaneRelacionesCompra.updateUI();
		//this.jTabbedPaneRelacionesCompra.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCompra.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaRetencionInven(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCompra.cargarSessionConBeanSwingJInternalFrameRetencionInven(false,true,iIndex);
		this.jButtonRetencionInvenActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaRetencionInven();

		//this.jTabbedPaneRelacionesCompra.updateUI();
		//this.jTabbedPaneRelacionesCompra.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCompra.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaTransaccionLocal(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCompra.cargarSessionConBeanSwingJInternalFrameTransaccionLocal(false,true,iIndex);
		this.jButtonTransaccionLocalActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaTransaccionLocal();

		//this.jTabbedPaneRelacionesCompra.updateUI();
		//this.jTabbedPaneRelacionesCompra.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCompra.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("RetencionInven")) {
				int row=this.jTableDatosCompra.getSelectedRow();
				jButtonRetencionInvenActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("TransaccionLocal")) {
				int row=this.jTableDatosCompra.getSelectedRow();
				jButtonTransaccionLocalActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("FormaPagoInven")) {
				int row=this.jTableDatosCompra.getSelectedRow();
				jButtonFormaPagoInvenActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("DetalleCompra")) {
				int row=this.jTableDatosCompra.getSelectedRow();
				jButtonDetalleCompraActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.compraSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Retencion")) {

					if(this.isTienePermisosRetencionInven && this.compraConstantesFunciones.mostrarRetencionInvenCompra && !CompraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Retenciones"+"("+RetencionInvenConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Retenciones");

						if(compraConstantesFunciones.resaltarRetencionInvenCompra!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(compraConstantesFunciones.resaltarRetencionInvenCompra);
						}

						jmenuItem.setEnabled(this.compraConstantesFunciones.activarRetencionInvenCompra);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"RetencionInven"));

						

						this.jInternalFrameDetalleFormCompra.jmenuDetalleCompra.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Transaccion Local")) {

					if(this.isTienePermisosTransaccionLocal && this.compraConstantesFunciones.mostrarTransaccionLocalCompra && !CompraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Transaccion Locales"+"("+TransaccionLocalConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Transaccion Locales");

						if(compraConstantesFunciones.resaltarTransaccionLocalCompra!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(compraConstantesFunciones.resaltarTransaccionLocalCompra);
						}

						jmenuItem.setEnabled(this.compraConstantesFunciones.activarTransaccionLocalCompra);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"TransaccionLocal"));

						

						this.jInternalFrameDetalleFormCompra.jmenuDetalleCompra.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Forma Pago")) {

					if(this.isTienePermisosFormaPagoInven && this.compraConstantesFunciones.mostrarFormaPagoInvenCompra && !CompraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Forma Pagoes"+"("+FormaPagoInvenConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Forma Pagoes");

						if(compraConstantesFunciones.resaltarFormaPagoInvenCompra!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(compraConstantesFunciones.resaltarFormaPagoInvenCompra);
						}

						jmenuItem.setEnabled(this.compraConstantesFunciones.activarFormaPagoInvenCompra);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"FormaPagoInven"));

						

						this.jInternalFrameDetalleFormCompra.jmenuDetalleCompra.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Detalle Compra")) {

					if(this.isTienePermisosDetalleCompra && this.compraConstantesFunciones.mostrarDetalleCompraCompra && !CompraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Detalle Compras"+"("+DetalleCompraConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Detalle Compras");

						if(compraConstantesFunciones.resaltarDetalleCompraCompra!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(compraConstantesFunciones.resaltarDetalleCompraCompra);
						}

						jmenuItem.setEnabled(this.compraConstantesFunciones.activarDetalleCompraCompra);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DetalleCompra"));

						

						this.jInternalFrameDetalleFormCompra.jmenuDetalleCompra.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyCompra(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyCompra(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyCompraListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyCompra();
		
		this.cargarCombosFrameForeignKeyCompra();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyCompra();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyCompra();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoInventario(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoInventarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoInventario();
				this.cargarCombosFrameEstadoInventariosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoInventario(this.estadoinventariosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyCliente("Todos");
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormato(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyCliente("Todos");
				}

			this.recargarComboTablaFormato(this.formatosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyCliente("Todos");
				}

			this.recargarComboTablaEmpleado(this.empleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransportista(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransportistaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransportista();
				this.cargarCombosFrameTransportistasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyCliente("Todos");
				}

			this.recargarComboTablaTransportista(this.transportistasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyOrdenCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyOrdenCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyOrdenCompra();
				this.cargarCombosFrameOrdenComprasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyOrdenCompra("Todos");
				}

			this.recargarComboTablaOrdenCompra(this.ordencomprasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPedidoCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPedidoCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPedidoCompra();
				this.cargarCombosFramePedidoComprasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPedidoCompra("Todos");
				}

			this.recargarComboTablaPedidoCompra(this.pedidocomprasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTransaccionModulo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoTransaccionModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
				this.cargarCombosFrameTipoTransaccionModulosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPedidoCompra("Todos");
				}

			this.recargarComboTablaTipoTransaccionModulo(this.tipotransaccionmodulosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPedidoCompra("Todos");
				}

			this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.compraSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			
			
			if(jTableDatosCompra.getRowCount()>=1) {
				jTableDatosCompra.removeRowSelectionInterval(0, jTableDatosCompra.getRowCount()-1);						
			}
			
			this.isEsNuevoCompra=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoCompra(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesCompra(true);			
			//this.compra=new Compra();
			//this.compra.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesCompra(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualCompra() ;
			
			if(CompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleCompra(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.compra);	
			this.actualizarInformacion("INFO_PADRE",false,this.compra);				
			
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			
			if(this.compraSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar Compra: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<Compra> comprasSeleccionados=new ArrayList<Compra>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosCompra.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosCompra.getSelectedRows().length;			
			}
			
			comprasSeleccionados=this.getComprasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoCompra--;			
				//Compra compraAux= new Compra();			
				//compraAux.setId(this.iIdNuevoCompra);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//Compra compraOrigen=new Compra();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(Compra compraOrigen : comprasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosCompra.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							compraOrigen =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							compraOrigen =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaCompra();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.compra.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosCompra(compraOrigen,this.compra,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.compraLogic.getCompras().add(this.compraAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.compras.add(this.compraAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaCompra(false);
				
				this.jTableDatosCompra.setRowSelectionInterval(this.getIndiceNuevoCompra(), this.getIndiceNuevoCompra());
				
				int iLastRow =  this.jTableDatosCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaCompra(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<Compra> comprasSeleccionados=new ArrayList<Compra>();									
		
			Compra compraOrigen=new Compra();
			Compra compraDestino=new Compra();
				
			comprasSeleccionados=this.getComprasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosCompra.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || comprasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosCompra.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						compraOrigen =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						compraOrigen =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						compraDestino =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						compraDestino =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				compraOrigen =comprasSeleccionados.get(0);
				compraDestino =comprasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosCompra(compraOrigen,compraDestino,true,false);
				
				compraDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(compraDestino,compraLogic.getCompras());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(compraDestino,compras);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaCompra(false);
				
				//this.jTableDatosCompra.setRowSelectionInterval(this.getIndiceNuevoCompra(), this.getIndiceNuevoCompra());
				
				int iLastRow =  this.jTableDatosCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaCompra(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormCompra.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesCompra.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasCompra.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesCompra.setVisible(!isVisible);
			this.jPanelPaginacionCompra.setVisible(!isVisible);
			this.jPanelAccionesCompra.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameCompra();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByCompra();
			
			this.abrirFrameOrderByCompra();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleCompra(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormCompra);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormCompra.isMaximum()) {
					this.jInternalFrameDetalleFormCompra.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormCompra.setSize(this.jInternalFrameDetalleFormCompra.iWidthFormulario,this.jInternalFrameDetalleFormCompra.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormCompra.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormCompra.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormCompra.isMaximum()) {
						this.jInternalFrameDetalleFormCompra.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormCompra.jContentPaneDetalleCompra.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormCompra.jTabbedPaneRelacionesCompra.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormCompra.jContentPaneDetalleCompra.getWidth(),CompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormCompra.jTabbedPaneRelacionesCompra.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormCompra.jContentPaneDetalleCompra.getWidth(),CompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormCompra.jTabbedPaneRelacionesCompra.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormCompra.jContentPaneDetalleCompra.getWidth(),CompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(DetalleCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDetalleCompra();
					}

					if(FormaPagoInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaFormaPagoInven();
					}

					if(RetencionInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaRetencionInven();
					}

					if(TransaccionLocalJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaTransaccionLocal();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormCompra.setVisible(true);
	        this.jInternalFrameDetalleFormCompra.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByCompra==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByCompra,false,this);
				} else {
					this.jInternalFrameOrderByCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByCompra,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByCompra);
				this.jInternalFrameOrderByCompra.setVisible(false);
				this.jInternalFrameOrderByCompra.setSelected(false);
				
				this.jInternalFrameOrderByCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByCompra"));
				
				this.inicializarActualizarBindingTablaOrderByCompra();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionCompra==null) {
				
				this.jInternalFrameImportacionCompra=new ImportacionJInternalFrame(CompraConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionCompra);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionCompra);
				this.jInternalFrameImportacionCompra.setVisible(false);
				this.jInternalFrameImportacionCompra.setSelected(false);


				this.jInternalFrameImportacionCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionCompra"));
				this.jInternalFrameImportacionCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionCompra"));
				this.jInternalFrameImportacionCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionCompra"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoCompra() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoCompra==null) {
				this.jInternalFrameReporteDinamicoCompra=new ReporteDinamicoJInternalFrame(CompraConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoCompra);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoCompra);
				this.jInternalFrameReporteDinamicoCompra.setVisible(false);
				this.jInternalFrameReporteDinamicoCompra.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoCompra"));
				this.jInternalFrameReporteDinamicoCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoCompra"));
				this.jInternalFrameReporteDinamicoCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoCompra"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualCompra();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaDetalleCompra() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.jScrollPanelDatosDetalleCompra.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCompra.jContentPaneDetalleCompra.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.jScrollPanelDatosDetalleCompra.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.jScrollPanelDatosDetalleCompra.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.jScrollPanelDatosDetalleCompra.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaFormaPagoInven() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.jScrollPanelDatosFormaPagoInven.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCompra.jContentPaneDetalleCompra.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.jScrollPanelDatosFormaPagoInven.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.jScrollPanelDatosFormaPagoInven.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.jScrollPanelDatosFormaPagoInven.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaRetencionInven() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.jScrollPanelDatosRetencionInven.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCompra.jContentPaneDetalleCompra.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.jScrollPanelDatosRetencionInven.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.jScrollPanelDatosRetencionInven.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.jScrollPanelDatosRetencionInven.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaTransaccionLocal() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.jScrollPanelDatosTransaccionLocal.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCompra.jContentPaneDetalleCompra.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.jScrollPanelDatosTransaccionLocal.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.jScrollPanelDatosTransaccionLocal.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.jScrollPanelDatosTransaccionLocal.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleCompra() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormCompra);
			
	       	this.jInternalFrameDetalleFormCompra.setVisible(false);
	        this.jInternalFrameDetalleFormCompra.setSelected(false);
			
			//this.jInternalFrameDetalleFormCompra.dispose();
			//this.jInternalFrameDetalleFormCompra=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoCompra() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoCompra.setVisible(true);
	        this.jInternalFrameReporteDinamicoCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionCompra.setVisible(true);
	        this.jInternalFrameImportacionCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByCompra.setVisible(true);
	        this.jInternalFrameOrderByCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByCompra.setVisible(false);
	        this.jInternalFrameOrderByCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoCompra() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoCompra.setVisible(false);
	        this.jInternalFrameReporteDinamicoCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionCompra.setVisible(false);
	        this.jInternalFrameImportacionCompra.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeOrdenCompra(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeOrdenCompra);
						OrdenCompraBeanSwingJInternalFrame ordencompraBeanSwingJInternalFrame=new OrdenCompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						ordencompraBeanSwingJInternalFrame.setJInternalFrameParent(this);
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.sTipoBusqueda="OrdenCompra";
						}

						ordencompraBeanSwingJInternalFrame.getTodosOrdenCompraArbol();
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.setOrdenCompras(ordencompraBeanSwingJInternalFrame.ordencomprasArbol);
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.CargarTreeOrdenCompra();
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.setVisible(true);
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.jInternalFrameParent=this;
						TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
						TitledBorder titledBorderOrdenCompra=(TitledBorder)ordencompraBeanSwingJInternalFrame.jScrollPanelDatosOrdenCompra.getBorder();

						titledBorderOrdenCompra.setTitle(titledBorderCompra.getTitle() + " -> OrdenCompra");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,ordencompraBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(ordencompraBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeOrdenCompra(OrdenCompraBeanSwingJInternalFrame jInternalFrameTreeOrdenCompra) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeOrdenCompra);
						jInternalFrameTreeOrdenCompra.setVisible(false);
						jInternalFrameTreeOrdenCompra.setSelected(false);
						//jInternalFrameTreeOrdenCompra.dispose();
						//jInternalFrameTreeOrdenCompra=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarCompra(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarCompra(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosCompra.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesCompra(true);
			//this.isEsNuevoCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesCompra(false) ;
			
			if(compraSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenSessionBean.getEsGuardarRelacionado() && RetencionInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRetencionInvenActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalSessionBean.getEsGuardarRelacionado() && TransaccionLocalJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonTransaccionLocalActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.getEsGuardarRelacionado() && FormaPagoInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFormaPagoInvenActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraSessionBean.getEsGuardarRelacionado() && DetalleCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleCompraActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(CompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleCompra(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaCompraActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarCompra(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosCompra.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesCompra(true);
			//this.isEsNuevoCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.compra.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesCompra(false) ;
			
			if(CompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleCompra(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("TipoCambio")) {
				if(!this.compraConstantesFunciones.cargarid_tipo_cambioCompra) {
					this.cargarCombosTipoCambiosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingCompra(false,false);
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_tipo_cambio (id);

				this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

			}
			
			if(sType.equals("Cliente")) {
				if(!this.compraConstantesFunciones.cargarid_clienteCompra) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingCompra(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("Empleado")) {
				if(!this.compraConstantesFunciones.cargarid_empleadoCompra) {
					this.cargarCombosEmpleadosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingCompra(false,false);
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_empleado (id);

				this.recargarComboTablaEmpleado(this.empleadosForeignKey);

			}
			
			if(sType.equals("OrdenCompra")) {
				if(!this.compraConstantesFunciones.cargarid_orden_compraCompra) {
					this.cargarCombosOrdenComprasForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingCompra(false,false);
					this.cargarCombosFrameOrdenComprasForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_orden_compra (id);

				this.recargarComboTablaOrdenCompra(this.ordencomprasForeignKey);

			}
			
			if(sType.equals("PedidoCompra")) {
				if(!this.compraConstantesFunciones.cargarid_pedido_compraCompra) {
					this.cargarCombosPedidoComprasForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingCompra(false,false);
					this.cargarCombosFramePedidoComprasForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_pedido_compra (id);

				this.recargarComboTablaPedidoCompra(this.pedidocomprasForeignKey);

			}
			
			if(sType.equals("AsientoContable")) {
				if(!this.compraConstantesFunciones.cargarid_asiento_contableCompra) {
					this.cargarCombosAsientoContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingCompra(false,false);
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_asiento_contable (id);

				this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
						
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
			
	
	public void recargarComboTablaTipoCambio(List<TipoCambio> tipocambiosForeignKey)throws Exception{
		TableColumn tableColumnTipoCambio=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDTIPOCAMBIO));
		TableCellEditor tableCellEditorTipoCambio =tableColumnTipoCambio.getCellEditor();

		TipoCambioTableCell tipocambioTableCellFk=(TipoCambioTableCell)tableCellEditorTipoCambio;

		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.settipocambiosForeignKey(tipocambiosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocambioTableCellFk.setRowActual(intSelectedRow);
			//tipocambioTableCellFk.settipocambiosForeignKeyActual(tipocambiosForeignKey);
		//}


		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.RecargarTipoCambiosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoInventario(List<EstadoInventario> estadoinventariosForeignKey)throws Exception{
		TableColumn tableColumnEstadoInventario=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDESTADOINVENTARIO));
		TableCellEditor tableCellEditorEstadoInventario =tableColumnEstadoInventario.getCellEditor();

		EstadoInventarioTableCell estadoinventarioTableCellFk=(EstadoInventarioTableCell)tableCellEditorEstadoInventario;

		if(estadoinventarioTableCellFk!=null) {
			estadoinventarioTableCellFk.setestadoinventariosForeignKey(estadoinventariosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadoinventarioTableCellFk.setRowActual(intSelectedRow);
			//estadoinventarioTableCellFk.setestadoinventariosForeignKeyActual(estadoinventariosForeignKey);
		//}


		if(estadoinventarioTableCellFk!=null) {
			estadoinventarioTableCellFk.RecargarEstadoInventariosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormato(List<Formato> formatosForeignKey)throws Exception{
		TableColumn tableColumnFormato=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDFORMATO));
		TableCellEditor tableCellEditorFormato =tableColumnFormato.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormato;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatosForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpleado(List<Empleado> empleadosForeignKey)throws Exception{
		TableColumn tableColumnEmpleado=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDEMPLEADO));
		TableCellEditor tableCellEditorEmpleado =tableColumnEmpleado.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleado;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadosForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransportista(List<Transportista> transportistasForeignKey)throws Exception{
		TableColumn tableColumnTransportista=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDTRANSPORTISTA));
		TableCellEditor tableCellEditorTransportista =tableColumnTransportista.getCellEditor();

		TransportistaTableCell transportistaTableCellFk=(TransportistaTableCell)tableCellEditorTransportista;

		if(transportistaTableCellFk!=null) {
			transportistaTableCellFk.settransportistasForeignKey(transportistasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transportistaTableCellFk.setRowActual(intSelectedRow);
			//transportistaTableCellFk.settransportistasForeignKeyActual(transportistasForeignKey);
		//}


		if(transportistaTableCellFk!=null) {
			transportistaTableCellFk.RecargarTransportistasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaOrdenCompra(List<OrdenCompra> ordencomprasForeignKey)throws Exception{
		TableColumn tableColumnOrdenCompra=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDORDENCOMPRA));
		TableCellEditor tableCellEditorOrdenCompra =tableColumnOrdenCompra.getCellEditor();

		OrdenCompraTableCell ordencompraTableCellFk=(OrdenCompraTableCell)tableCellEditorOrdenCompra;

		if(ordencompraTableCellFk!=null) {
			ordencompraTableCellFk.setordencomprasForeignKey(ordencomprasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//ordencompraTableCellFk.setRowActual(intSelectedRow);
			//ordencompraTableCellFk.setordencomprasForeignKeyActual(ordencomprasForeignKey);
		//}


		if(ordencompraTableCellFk!=null) {
			ordencompraTableCellFk.RecargarOrdenComprasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaPedidoCompra(List<PedidoCompra> pedidocomprasForeignKey)throws Exception{
		TableColumn tableColumnPedidoCompra=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDPEDIDOCOMPRA));
		TableCellEditor tableCellEditorPedidoCompra =tableColumnPedidoCompra.getCellEditor();

		PedidoCompraTableCell pedidocompraTableCellFk=(PedidoCompraTableCell)tableCellEditorPedidoCompra;

		if(pedidocompraTableCellFk!=null) {
			pedidocompraTableCellFk.setpedidocomprasForeignKey(pedidocomprasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//pedidocompraTableCellFk.setRowActual(intSelectedRow);
			//pedidocompraTableCellFk.setpedidocomprasForeignKeyActual(pedidocomprasForeignKey);
		//}


		if(pedidocompraTableCellFk!=null) {
			pedidocompraTableCellFk.RecargarPedidoComprasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoTransaccionModulo(List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey)throws Exception{
		TableColumn tableColumnTipoTransaccionModulo=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO));
		TableCellEditor tableCellEditorTipoTransaccionModulo =tableColumnTipoTransaccionModulo.getCellEditor();

		TipoTransaccionModuloTableCell tipotransaccionmoduloTableCellFk=(TipoTransaccionModuloTableCell)tableCellEditorTipoTransaccionModulo;

		if(tipotransaccionmoduloTableCellFk!=null) {
			tipotransaccionmoduloTableCellFk.settipotransaccionmodulosForeignKey(tipotransaccionmodulosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipotransaccionmoduloTableCellFk.setRowActual(intSelectedRow);
			//tipotransaccionmoduloTableCellFk.settipotransaccionmodulosForeignKeyActual(tipotransaccionmodulosForeignKey);
		//}


		if(tipotransaccionmoduloTableCellFk!=null) {
			tipotransaccionmoduloTableCellFk.RecargarTipoTransaccionModulosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaAsientoContable(List<AsientoContable> asientocontablesForeignKey)throws Exception{
		TableColumn tableColumnAsientoContable=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDASIENTOCONTABLE));
		TableCellEditor tableCellEditorAsientoContable =tableColumnAsientoContable.getCellEditor();

		AsientoContableTableCell asientocontableTableCellFk=(AsientoContableTableCell)tableCellEditorAsientoContable;

		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.setasientocontablesForeignKey(asientocontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//asientocontableTableCellFk.setRowActual(intSelectedRow);
			//asientocontableTableCellFk.setasientocontablesForeignKeyActual(asientocontablesForeignKey);
		//}


		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.RecargarAsientoContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_tipo_cambio (Long id) throws Exception {
		this.setActualTipoCambioForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_empleado (Long id) throws Exception {
		this.setActualEmpleadoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_orden_compra (Long id) throws Exception {
		this.setActualOrdenCompraForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_pedido_compra (Long id) throws Exception {
		this.setActualPedidoCompraForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_asiento_contable (Long id) throws Exception {
		this.setActualAsientoContableForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesCompra(false);
			
			//if(!this.isEsNuevoCompra) {								
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(CompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				
			}
			
			if(this.permiteMantenimiento(this.compra)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.compraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoCompra=true;
					this.inicializarActualizarBindingTablaCompra(false);
					this.isEsNuevoCompra=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoCompra=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoCompra=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualCompra(false);
				
				this.habilitarDeshabilitarControlesCompra(false);
			
												
				
				if(CompraJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleCompra();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoCompraActionPerformed(evt,compraSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualCompra(this.compra,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosCompra.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,compraSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.compra.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(Compra.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Compra.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosCompra.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				this.compra.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				this.compra.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.compra)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.compraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((CompraModel) this.jTableDatosCompra.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoCompra=true;
				this.inicializarActualizarBindingTablaCompra(false);
				this.isEsNuevoCompra=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualCompra(false);
				
				this.habilitarDeshabilitarControlesCompra(false);
				
				
				
				if(CompraJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleCompra();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarCompraActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosCompra.getRowCount()>=1) {
				jTableDatosCompra.removeRowSelectionInterval(0, jTableDatosCompra.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesCompra(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaCompra(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesCompra(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualCompra(false) ;
			
			this.isEsNuevoCompra=false;
			
			if(CompraJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleCompra();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingCompra(false);
				
				//SI ES MANUAL
				if(CompraJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualCompra();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoCompra--;			
			//Compra compraAux= new Compra();			
			//compraAux.setId(this.iIdNuevoCompra);
			
			if(this.jInternalFrameDetalleFormCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaCompra();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
			
			this.compra.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.compraLogic.getCompras().add(this.compraAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.compras.add(this.compraAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaCompra(false);
			
			this.jTableDatosCompra.setRowSelectionInterval(this.getIndiceNuevoCompra(), this.getIndiceNuevoCompra());
			
			int iLastRow =  this.jTableDatosCompra.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosCompra.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosCompra.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaCompra(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingCompra(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingCompra(false);
			
			//SI ES MANUAL
			if(CompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualCompra();
			}
			
			//this.abrirFrameTreeCompra();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE CompraS ?", "MANTENIMIENTO DE Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionCompra.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralCompra();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.compraReturnGeneral=compraLogic.procesarImportacionComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.compraParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarCompraReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionCompra.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionCompra.setFileImportacion(this.jInternalFrameImportacionCompra.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionCompra.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionCompra.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionCompra.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionCompra.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoCompraActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<Compra> comprasSeleccionados=new ArrayList<Compra>();		

		comprasSeleccionados=this.getComprasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("CompraBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"CompraBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteCompras("Todos",comprasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.compraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Compra",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case CompraConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Modulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Modulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Modulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Modulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDUSUARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Usuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Usuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Usuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Usuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_FECHAENTREGA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEntrega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEntrega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEntrega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEntrega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroSecuencial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroSecuencial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroSecuencial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroSecuencial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCambio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCambio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCambio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCambio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDESTADOINVENTARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoInventario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoInventario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoInventario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoInventario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDFORMATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Formato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Formato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Formato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Formato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_NUMEROFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroFactura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroFactura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroFactura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroFactura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDTRANSPORTISTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transportista_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transportista_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transportista_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transportista_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_OrdenCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_OrdenCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_OrdenCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_OrdenCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDPEDIDOCOMPRA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_PedidoCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_PedidoCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_PedidoCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_PedidoCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_AUTORIUSUARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_toriUsuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_toriUsuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_toriUsuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_toriUsuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_FACTURAINICIAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cturaInicial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cturaInicial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cturaInicial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cturaInicial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_FACTURAFINAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cturaFinal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cturaFinal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cturaFinal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cturaFinal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rvicioDocumento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rvicioDocumento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rvicioDocumento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rvicioDocumento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_FECHAVALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaValor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaValor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaValor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaValor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentajeDescuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentajeDescuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentajeDescuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentajeDescuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_SUMAN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_man_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_man_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_man_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_man_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_ICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_e_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_e_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_e_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_e_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_VALORDESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorDescuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorDescuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorDescuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorDescuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_TOTALDESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talDescuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talDescuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talDescuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talDescuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_a_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_a_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_a_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_a_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_STOCK:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ock_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ock_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ock_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ock_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_SUBTOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_bTotal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_bTotal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_bTotal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_bTotal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_TOTALOTRO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talOtro_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talOtro_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talOtro_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talOtro_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_ULTIMOCOSTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_timoCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_timoCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_timoCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_timoCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_NUMEROITEMS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroItems_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroItems_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroItems_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroItems_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_RETENCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_FLETE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ete_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ete_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ete_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ete_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IMPUESTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_puesto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_puesto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_puesto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_puesto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoTransaccionModulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoTransaccionModulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoTransaccionModulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoTransaccionModulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AsientoContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AsientoContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AsientoContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AsientoContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroComprobante_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroComprobante_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroComprobante_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroComprobante_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case CompraConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoCompra.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoCompra.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoCompra.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case CompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case CompraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case CompraConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoria="id_modulo";
					break;

				case CompraConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case CompraConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case CompraConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case CompraConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case CompraConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoria="id_usuario";
					break;

				case CompraConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case CompraConstantesFunciones.LABEL_FECHAENTREGA:
					sNombreCampoCategoria="fecha_entrega";
					break;

				case CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					sNombreCampoCategoria="numero_secuencial";
					break;

				case CompraConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case CompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoria="id_tipo_cambio";
					break;

				case CompraConstantesFunciones.LABEL_IDESTADOINVENTARIO:
					sNombreCampoCategoria="id_estado_inventario";
					break;

				case CompraConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case CompraConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoria="id_formato";
					break;

				case CompraConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoria="id_empleado";
					break;

				case CompraConstantesFunciones.LABEL_NUMEROFACTURA:
					sNombreCampoCategoria="numero_factura";
					break;

				case CompraConstantesFunciones.LABEL_IDTRANSPORTISTA:
					sNombreCampoCategoria="id_transportista";
					break;

				case CompraConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case CompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					sNombreCampoCategoria="id_orden_compra";
					break;

				case CompraConstantesFunciones.LABEL_IDPEDIDOCOMPRA:
					sNombreCampoCategoria="id_pedido_compra";
					break;

				case CompraConstantesFunciones.LABEL_AUTORIUSUARIO:
					sNombreCampoCategoria="autori_usuario";
					break;

				case CompraConstantesFunciones.LABEL_FACTURAINICIAL:
					sNombreCampoCategoria="factura_inicial";
					break;

				case CompraConstantesFunciones.LABEL_FACTURAFINAL:
					sNombreCampoCategoria="factura_final";
					break;

				case CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO:
					sNombreCampoCategoria="servicio_documento";
					break;

				case CompraConstantesFunciones.LABEL_FECHAVALOR:
					sNombreCampoCategoria="fecha_valor";
					break;

				case CompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO:
					sNombreCampoCategoria="porcentaje_descuento";
					break;

				case CompraConstantesFunciones.LABEL_SUMAN:
					sNombreCampoCategoria="suman";
					break;

				case CompraConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoria="ice";
					break;

				case CompraConstantesFunciones.LABEL_VALORDESCUENTO:
					sNombreCampoCategoria="valor_descuento";
					break;

				case CompraConstantesFunciones.LABEL_TOTALDESCUENTO:
					sNombreCampoCategoria="total_descuento";
					break;

				case CompraConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoria="iva";
					break;

				case CompraConstantesFunciones.LABEL_STOCK:
					sNombreCampoCategoria="stock";
					break;

				case CompraConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoria="sub_total";
					break;

				case CompraConstantesFunciones.LABEL_TOTALOTRO:
					sNombreCampoCategoria="total_otro";
					break;

				case CompraConstantesFunciones.LABEL_ULTIMOCOSTO:
					sNombreCampoCategoria="ultimo_costo";
					break;

				case CompraConstantesFunciones.LABEL_NUMEROITEMS:
					sNombreCampoCategoria="numero_items";
					break;

				case CompraConstantesFunciones.LABEL_RETENCION:
					sNombreCampoCategoria="retencion";
					break;

				case CompraConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case CompraConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoria="flete";
					break;

				case CompraConstantesFunciones.LABEL_IMPUESTO:
					sNombreCampoCategoria="impuesto";
					break;

				case CompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					sNombreCampoCategoria="id_tipo_transaccion_modulo";
					break;

				case CompraConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoria="id_asiento_contable";
					break;

				case CompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					sNombreCampoCategoria="numero_comprobante";
					break;

				case CompraConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoCompra.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case CompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case CompraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case CompraConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoriaValor="id_modulo";
					break;

				case CompraConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case CompraConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case CompraConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case CompraConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case CompraConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoriaValor="id_usuario";
					break;

				case CompraConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case CompraConstantesFunciones.LABEL_FECHAENTREGA:
					sNombreCampoCategoriaValor="fecha_entrega";
					break;

				case CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					sNombreCampoCategoriaValor="numero_secuencial";
					break;

				case CompraConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case CompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoriaValor="id_tipo_cambio";
					break;

				case CompraConstantesFunciones.LABEL_IDESTADOINVENTARIO:
					sNombreCampoCategoriaValor="id_estado_inventario";
					break;

				case CompraConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case CompraConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoriaValor="id_formato";
					break;

				case CompraConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoriaValor="id_empleado";
					break;

				case CompraConstantesFunciones.LABEL_NUMEROFACTURA:
					sNombreCampoCategoriaValor="numero_factura";
					break;

				case CompraConstantesFunciones.LABEL_IDTRANSPORTISTA:
					sNombreCampoCategoriaValor="id_transportista";
					break;

				case CompraConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case CompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					sNombreCampoCategoriaValor="id_orden_compra";
					break;

				case CompraConstantesFunciones.LABEL_IDPEDIDOCOMPRA:
					sNombreCampoCategoriaValor="id_pedido_compra";
					break;

				case CompraConstantesFunciones.LABEL_AUTORIUSUARIO:
					sNombreCampoCategoriaValor="autori_usuario";
					break;

				case CompraConstantesFunciones.LABEL_FACTURAINICIAL:
					sNombreCampoCategoriaValor="factura_inicial";
					break;

				case CompraConstantesFunciones.LABEL_FACTURAFINAL:
					sNombreCampoCategoriaValor="factura_final";
					break;

				case CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO:
					sNombreCampoCategoriaValor="servicio_documento";
					break;

				case CompraConstantesFunciones.LABEL_FECHAVALOR:
					sNombreCampoCategoriaValor="fecha_valor";
					break;

				case CompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO:
					sNombreCampoCategoriaValor="porcentaje_descuento";
					break;

				case CompraConstantesFunciones.LABEL_SUMAN:
					sNombreCampoCategoriaValor="suman";
					break;

				case CompraConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoriaValor="ice";
					break;

				case CompraConstantesFunciones.LABEL_VALORDESCUENTO:
					sNombreCampoCategoriaValor="valor_descuento";
					break;

				case CompraConstantesFunciones.LABEL_TOTALDESCUENTO:
					sNombreCampoCategoriaValor="total_descuento";
					break;

				case CompraConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoriaValor="iva";
					break;

				case CompraConstantesFunciones.LABEL_STOCK:
					sNombreCampoCategoriaValor="stock";
					break;

				case CompraConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoriaValor="sub_total";
					break;

				case CompraConstantesFunciones.LABEL_TOTALOTRO:
					sNombreCampoCategoriaValor="total_otro";
					break;

				case CompraConstantesFunciones.LABEL_ULTIMOCOSTO:
					sNombreCampoCategoriaValor="ultimo_costo";
					break;

				case CompraConstantesFunciones.LABEL_NUMEROITEMS:
					sNombreCampoCategoriaValor="numero_items";
					break;

				case CompraConstantesFunciones.LABEL_RETENCION:
					sNombreCampoCategoriaValor="retencion";
					break;

				case CompraConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case CompraConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoriaValor="flete";
					break;

				case CompraConstantesFunciones.LABEL_IMPUESTO:
					sNombreCampoCategoriaValor="impuesto";
					break;

				case CompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					sNombreCampoCategoriaValor="id_tipo_transaccion_modulo";
					break;

				case CompraConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoriaValor="id_asiento_contable";
					break;

				case CompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					sNombreCampoCategoriaValor="numero_comprobante";
					break;

				case CompraConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoCompra.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoCompra.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case CompraConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case CompraConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case CompraConstantesFunciones.LABEL_IDMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_modulo");
					break;

				case CompraConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case CompraConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case CompraConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case CompraConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case CompraConstantesFunciones.LABEL_IDUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_usuario");
					break;

				case CompraConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"F Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case CompraConstantesFunciones.LABEL_FECHAENTREGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"F Entrega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_entrega");
					break;

				case CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Secuencial",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_secuencial");
					break;

				case CompraConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case CompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T Cambio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_cambio");
					break;

				case CompraConstantesFunciones.LABEL_IDESTADOINVENTARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_inventario");
					break;

				case CompraConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Proveedor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case CompraConstantesFunciones.LABEL_IDFORMATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato");
					break;

				case CompraConstantesFunciones.LABEL_IDEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado");
					break;

				case CompraConstantesFunciones.LABEL_NUMEROFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_factura");
					break;

				case CompraConstantesFunciones.LABEL_IDTRANSPORTISTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transportista",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transportista");
					break;

				case CompraConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case CompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Orden Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_orden_compra");
					break;

				case CompraConstantesFunciones.LABEL_IDPEDIDOCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Pedido Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_pedido_compra");
					break;

				case CompraConstantesFunciones.LABEL_AUTORIUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"COA->Aut. Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"autori_usuario");
					break;

				case CompraConstantesFunciones.LABEL_FACTURAINICIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fac Inicial",sNombreCampoCategoria,sNombreCampoCategoriaValor,"factura_inicial");
					break;

				case CompraConstantesFunciones.LABEL_FACTURAFINAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fac Final",sNombreCampoCategoria,sNombreCampoCategoriaValor,"factura_final");
					break;

				case CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Serv Documento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"servicio_documento");
					break;

				case CompraConstantesFunciones.LABEL_FECHAVALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"F Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_valor");
					break;

				case CompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento %",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje_descuento");
					break;

				case CompraConstantesFunciones.LABEL_SUMAN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Suman",sNombreCampoCategoria,sNombreCampoCategoriaValor,"suman");
					break;

				case CompraConstantesFunciones.LABEL_ICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ice");
					break;

				case CompraConstantesFunciones.LABEL_VALORDESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_descuento");
					break;

				case CompraConstantesFunciones.LABEL_TOTALDESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_descuento");
					break;

				case CompraConstantesFunciones.LABEL_IVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"iva");
					break;

				case CompraConstantesFunciones.LABEL_STOCK:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Stock",sNombreCampoCategoria,sNombreCampoCategoriaValor,"stock");
					break;

				case CompraConstantesFunciones.LABEL_SUBTOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sub Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"sub_total");
					break;

				case CompraConstantesFunciones.LABEL_TOTALOTRO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Otro",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_otro");
					break;

				case CompraConstantesFunciones.LABEL_ULTIMOCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ultimo Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ultimo_costo");
					break;

				case CompraConstantesFunciones.LABEL_NUMEROITEMS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Items",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_items");
					break;

				case CompraConstantesFunciones.LABEL_RETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"retencion");
					break;

				case CompraConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case CompraConstantesFunciones.LABEL_FLETE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Flete",sNombreCampoCategoria,sNombreCampoCategoriaValor,"flete");
					break;

				case CompraConstantesFunciones.LABEL_IMPUESTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Impuesto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"impuesto");
					break;

				case CompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Transaccion Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_transaccion_modulo");
					break;

				case CompraConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Asiento Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_asiento_contable");
					break;

				case CompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Comprobante",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_comprobante");
					break;

				case CompraConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoCompraActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<Compra> comprasSeleccionados=new ArrayList<Compra>();		
		
		comprasSeleccionados=this.getComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"compra";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("Compras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case CompraConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDMODULO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDUSUARIO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getusuario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_FECHAENTREGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_FECHAENTREGA);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getfecha_entrega());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getnumero_secuencial());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDTIPOCAMBIO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.gettipocambio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDESTADOINVENTARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDESTADOINVENTARIO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getestadoinventario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDFORMATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDFORMATO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getformato_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDEMPLEADO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_NUMEROFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_NUMEROFACTURA);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getnumero_factura());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDTRANSPORTISTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDTRANSPORTISTA);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.gettransportista_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDORDENCOMPRA);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getordencompra_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDPEDIDOCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDPEDIDOCOMPRA);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getpedidocompra_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_AUTORIUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_AUTORIUSUARIO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getautori_usuario());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_FACTURAINICIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_FACTURAINICIAL);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getfactura_inicial());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_FACTURAFINAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_FACTURAFINAL);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getfactura_final());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getservicio_documento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_FECHAVALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_FECHAVALOR);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getfecha_valor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getporcentaje_descuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_SUMAN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_SUMAN);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getsuman());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_ICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_ICE);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_VALORDESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_VALORDESCUENTO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getvalor_descuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_TOTALDESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_TOTALDESCUENTO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.gettotal_descuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IVA);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getiva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_STOCK:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_STOCK);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getstock());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_SUBTOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_SUBTOTAL);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getsub_total());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_TOTALOTRO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_TOTALOTRO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.gettotal_otro());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_ULTIMOCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_ULTIMOCOSTO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getultimo_costo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_NUMEROITEMS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_NUMEROITEMS);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getnumero_items());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_RETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_RETENCION);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getretencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_FLETE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_FLETE);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getflete());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IMPUESTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IMPUESTO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getimpuesto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.gettipotransaccionmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_IDASIENTOCONTABLE);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getasientocontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getnumero_comprobante());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case CompraConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(CompraConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(Compra compra:comprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(compra.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelCompra(row);				
			//	iRow++;
			//}				
			
			//for(Compra compraAux:comprasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelCompra(compraAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.compraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingCompra(false);
			
			//SI ES MANUAL
			if(CompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualCompra();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingCompra(false);
			
			//SI ES MANUAL
			if(CompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualCompra();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingCompra(false);
			
			//SI ES MANUAL
			if(CompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualCompra();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaCompra() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosCompra.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosCompra.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosCompra.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosCompra.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosCompra.setMinimumSize(dimensionMinimum);
		this.jTableDatosCompra.setMaximumSize(dimensionMaximum);
		this.jTableDatosCompra.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingCompra(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingCompra(esInicializar,true);
	}
	
	public void inicializarActualizarBindingCompra(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaCompra(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesCompra(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.compraSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasCompra(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesCompra(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesCompra(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !CompraJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!CompraJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualCompra() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaCompra();
		
		this.inicializarActualizarBindingBotonesManualCompra(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.compraSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualCompra();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesCompra() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualCompra(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualCompra(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosCompra.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosCompra.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteCompra.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormCompra!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormCompra.jCheckBoxPostAccionNuevoCompra.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormCompra.jCheckBoxPostAccionSinCerrarCompra.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormCompra.jCheckBoxPostAccionSinMensajeCompra.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosCompra.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosCompra.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteCompra.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormCompra!=null) {
				this.jInternalFrameDetalleFormCompra.jCheckBoxPostAccionNuevoCompra.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormCompra.jCheckBoxPostAccionSinCerrarCompra.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormCompra.jCheckBoxPostAccionSinMensajeCompra.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionCompra.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionCompra.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormCompra!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormCompra.jComboBoxTiposAccionesFormularioCompra.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesCompra.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoCompra!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesCompra.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesCompra.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoCompra!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesCompra.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralCompra.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesCompra(Boolean esInicializar) throws Exception {
		try	{	
			if(CompraJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualCompra(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesCompra() throws Exception {
		try	{
			if(CompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualCompra();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleCompra() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormCompra.jComboBoxTiposAccionesFormularioCompra.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormCompra.jComboBoxTiposAccionesFormularioCompra.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualCompra() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesCompra.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesCompra.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesCompra.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionCompra.addItem(reporte);
			}
			
			
			if(!this.compraSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormCompra.jComboBoxTiposAccionesFormularioCompra.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormCompra.jComboBoxTiposAccionesFormularioCompra.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarCompra.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarCompra.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualCompra();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualCompra() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoCompra!=null) {
				this.jInternalFrameReporteDinamicoCompra.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoCompra.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoCompra!=null) {
				this.jInternalFrameReporteDinamicoCompra.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoCompra.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoCompra!=null) {
				
				if(this.jInternalFrameReporteDinamicoCompra.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoCompra.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoCompra.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoCompra.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoCompra.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoCompra.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoCompra.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoCompra.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=CompraConstantesFunciones.getTiposSeleccionarCompra(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoCompra.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoCompra.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoCompra.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=CompraConstantesFunciones.getTiposSeleccionarCompra(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoCompra.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoCompra.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoCompra.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=CompraConstantesFunciones.getTiposSeleccionarCompra(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoCompra.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoCompra.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoCompra.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoCompra.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualCompra()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_asiento_contableFK_IdAsientoContableCompra.getSelectedItem()!=null){this.id_asiento_contableFK_IdAsientoContable=((AsientoContable)this.jComboBoxid_asiento_contableFK_IdAsientoContableCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_clienteFK_IdClienteCompra.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_empleadoFK_IdEmpleadoCompra.getSelectedItem()!=null){this.id_empleadoFK_IdEmpleado=((Empleado)this.jComboBoxid_empleadoFK_IdEmpleadoCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_inventarioFK_IdEstadoInventarioCompra.getSelectedItem()!=null){this.id_estado_inventarioFK_IdEstadoInventario=((EstadoInventario)this.jComboBoxid_estado_inventarioFK_IdEstadoInventarioCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_orden_compraFK_IdOrdenCompraCompra.getSelectedItem()!=null){this.id_orden_compraFK_IdOrdenCompra=((OrdenCompra)this.jComboBoxid_orden_compraFK_IdOrdenCompraCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_pedido_compraFK_IdPedidoCompraCompra.getSelectedItem()!=null){this.id_pedido_compraFK_IdPedidoCompra=((PedidoCompra)this.jComboBoxid_pedido_compraFK_IdPedidoCompraCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloCompra.getSelectedItem()!=null){this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo=((TipoTransaccionModulo)this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloCompra.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasCompra(Boolean esInicializar) throws Exception {				
		if(CompraJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualCompra();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaCompra() throws Exception {
		this.inicializarActualizarBindingTablaCompra(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByCompra() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByCompra.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByCompra.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByCompra.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosCompraOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompraOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByCompra.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByCompra.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaCompra(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=compraLogic.getCompras().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=compras.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(CompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosCompra.setModel(new CompraModel(this.compraLogic.getCompras(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosCompra.setModel(new CompraModel(this.compras,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByCompra!=null && this.jInternalFrameOrderByCompra.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByCompra();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+CompraConstantesFunciones.SCLASSWEBTITULO,compraConstantesFunciones.resaltarSeleccionarCompra,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+CompraConstantesFunciones.SCLASSWEBTITULO,compraConstantesFunciones.resaltarSeleccionarCompra,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_ID));

		if(this.compraConstantesFunciones.mostraridCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.compraConstantesFunciones.resaltaridCompra,this.compraConstantesFunciones.activaridCompra,iSizeTabla,this,true,"idCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltaridCompra,this.compraConstantesFunciones.activaridCompra,this,true,"idCompra","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDEMPRESA));

		if(this.compraConstantesFunciones.mostrarid_empresaCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.compraConstantesFunciones.resaltarid_empresaCompra,this,this.compraConstantesFunciones.activarid_empresaCompra,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.compraConstantesFunciones.resaltarid_empresaCompra,this,this.compraConstantesFunciones.activarid_empresaCompra,false,"id_empresaCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.compraConstantesFunciones.mostrarid_sucursalCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.compraConstantesFunciones.resaltarid_sucursalCompra,this,this.compraConstantesFunciones.activarid_sucursalCompra,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.compraConstantesFunciones.resaltarid_sucursalCompra,this,this.compraConstantesFunciones.activarid_sucursalCompra,false,"id_sucursalCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDMODULO));

		if(this.compraConstantesFunciones.mostrarid_moduloCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDMODULO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ModuloTableCell(this.modulosForeignKey,this.compraConstantesFunciones.resaltarid_moduloCompra,this,this.compraConstantesFunciones.activarid_moduloCompra,iSizeTabla));
			tableColumn.setCellEditor(new ModuloTableCell(this.modulosForeignKey,this.compraConstantesFunciones.resaltarid_moduloCompra,this,this.compraConstantesFunciones.activarid_moduloCompra,false,"id_moduloCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.compraConstantesFunciones.mostrarid_ejercicioCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.compraConstantesFunciones.resaltarid_ejercicioCompra,this,this.compraConstantesFunciones.activarid_ejercicioCompra,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.compraConstantesFunciones.resaltarid_ejercicioCompra,this,this.compraConstantesFunciones.activarid_ejercicioCompra,false,"id_ejercicioCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDPERIODO));

		if(this.compraConstantesFunciones.mostrarid_periodoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.compraConstantesFunciones.resaltarid_periodoCompra,this,this.compraConstantesFunciones.activarid_periodoCompra,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.compraConstantesFunciones.resaltarid_periodoCompra,this,this.compraConstantesFunciones.activarid_periodoCompra,false,"id_periodoCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDANIO));

		if(this.compraConstantesFunciones.mostrarid_anioCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.compraConstantesFunciones.resaltarid_anioCompra,this,this.compraConstantesFunciones.activarid_anioCompra,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.compraConstantesFunciones.resaltarid_anioCompra,this,this.compraConstantesFunciones.activarid_anioCompra,true,"id_anioCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDMES));

		if(this.compraConstantesFunciones.mostrarid_mesCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.compraConstantesFunciones.resaltarid_mesCompra,this,this.compraConstantesFunciones.activarid_mesCompra,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.compraConstantesFunciones.resaltarid_mesCompra,this,this.compraConstantesFunciones.activarid_mesCompra,true,"id_mesCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDUSUARIO));

		if(this.compraConstantesFunciones.mostrarid_usuarioCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDUSUARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new UsuarioTableCell(this.usuariosForeignKey,this.compraConstantesFunciones.resaltarid_usuarioCompra,this,this.compraConstantesFunciones.activarid_usuarioCompra,iSizeTabla));
			tableColumn.setCellEditor(new UsuarioTableCell(this.usuariosForeignKey,this.compraConstantesFunciones.resaltarid_usuarioCompra,this,this.compraConstantesFunciones.activarid_usuarioCompra,false,"id_usuarioCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_FECHAEMISION));

		if(this.compraConstantesFunciones.mostrarfecha_emisionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.compraConstantesFunciones.resaltarfecha_emisionCompra,this.compraConstantesFunciones.activarfecha_emisionCompra,iSizeTabla,this,true,"fecha_emisionCompra","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.compraConstantesFunciones.resaltarfecha_emisionCompra,this.compraConstantesFunciones.activarfecha_emisionCompra,this,true,"fecha_emisionCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_FECHAENTREGA));

		if(this.compraConstantesFunciones.mostrarfecha_entregaCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_FECHAENTREGA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.compraConstantesFunciones.resaltarfecha_entregaCompra,this.compraConstantesFunciones.activarfecha_entregaCompra,iSizeTabla,this,true,"fecha_entregaCompra","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.compraConstantesFunciones.resaltarfecha_entregaCompra,this.compraConstantesFunciones.activarfecha_entregaCompra,this,true,"fecha_entregaCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL));

		if(this.compraConstantesFunciones.mostrarnumero_secuencialCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.compraConstantesFunciones.resaltarnumero_secuencialCompra,this.compraConstantesFunciones.activarnumero_secuencialCompra,iSizeTabla,this,true,"numero_secuencialCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltarnumero_secuencialCompra,this.compraConstantesFunciones.activarnumero_secuencialCompra,this,true,"numero_secuencialCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDMONEDA));

		if(this.compraConstantesFunciones.mostrarid_monedaCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDMONEDA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MonedaTableCell(this.monedasForeignKey,this.compraConstantesFunciones.resaltarid_monedaCompra,this,this.compraConstantesFunciones.activarid_monedaCompra,iSizeTabla));
			tableColumn.setCellEditor(new MonedaTableCell(this.monedasForeignKey,this.compraConstantesFunciones.resaltarid_monedaCompra,this,this.compraConstantesFunciones.activarid_monedaCompra,false,"id_monedaCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDTIPOCAMBIO));

		if(this.compraConstantesFunciones.mostrarid_tipo_cambioCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDTIPOCAMBIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoCambioTableCell(this.tipocambiosForeignKey,this.compraConstantesFunciones.resaltarid_tipo_cambioCompra,this,this.compraConstantesFunciones.activarid_tipo_cambioCompra,iSizeTabla));
			tableColumn.setCellEditor(new TipoCambioTableCell(this.tipocambiosForeignKey,this.compraConstantesFunciones.resaltarid_tipo_cambioCompra,this,this.compraConstantesFunciones.activarid_tipo_cambioCompra,true,"id_tipo_cambioCompra","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDESTADOINVENTARIO));

		if(this.compraConstantesFunciones.mostrarid_estado_inventarioCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDESTADOINVENTARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoInventarioTableCell(this.estadoinventariosForeignKey,this.compraConstantesFunciones.resaltarid_estado_inventarioCompra,this,this.compraConstantesFunciones.activarid_estado_inventarioCompra,iSizeTabla));
			tableColumn.setCellEditor(new EstadoInventarioTableCell(this.estadoinventariosForeignKey,this.compraConstantesFunciones.resaltarid_estado_inventarioCompra,this,this.compraConstantesFunciones.activarid_estado_inventarioCompra,true,"id_estado_inventarioCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDCLIENTE));

		if(this.compraConstantesFunciones.mostrarid_clienteCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.compraConstantesFunciones.resaltarid_clienteCompra,this,this.compraConstantesFunciones.activarid_clienteCompra,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.compraConstantesFunciones.resaltarid_clienteCompra,this,this.compraConstantesFunciones.activarid_clienteCompra,true,"id_clienteCompra","CON_BUSQUEDA-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDFORMATO));

		if(this.compraConstantesFunciones.mostrarid_formatoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDFORMATO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatosForeignKey,this.compraConstantesFunciones.resaltarid_formatoCompra,this,this.compraConstantesFunciones.activarid_formatoCompra,iSizeTabla));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatosForeignKey,this.compraConstantesFunciones.resaltarid_formatoCompra,this,this.compraConstantesFunciones.activarid_formatoCompra,true,"id_formatoCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDEMPLEADO));

		if(this.compraConstantesFunciones.mostrarid_empleadoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadosForeignKey,this.compraConstantesFunciones.resaltarid_empleadoCompra,this,this.compraConstantesFunciones.activarid_empleadoCompra,iSizeTabla));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadosForeignKey,this.compraConstantesFunciones.resaltarid_empleadoCompra,this,this.compraConstantesFunciones.activarid_empleadoCompra,true,"id_empleadoCompra","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_NUMEROFACTURA));

		if(this.compraConstantesFunciones.mostrarnumero_facturaCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_NUMEROFACTURA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.compraConstantesFunciones.resaltarnumero_facturaCompra,this.compraConstantesFunciones.activarnumero_facturaCompra,iSizeTabla,this,true,"numero_facturaCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltarnumero_facturaCompra,this.compraConstantesFunciones.activarnumero_facturaCompra,this,true,"numero_facturaCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDTRANSPORTISTA));

		if(this.compraConstantesFunciones.mostrarid_transportistaCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDTRANSPORTISTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransportistaTableCell(this.transportistasForeignKey,this.compraConstantesFunciones.resaltarid_transportistaCompra,this,this.compraConstantesFunciones.activarid_transportistaCompra,iSizeTabla));
			tableColumn.setCellEditor(new TransportistaTableCell(this.transportistasForeignKey,this.compraConstantesFunciones.resaltarid_transportistaCompra,this,this.compraConstantesFunciones.activarid_transportistaCompra,true,"id_transportistaCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_DESCRIPCION));

		if(this.compraConstantesFunciones.mostrardescripcionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.compraConstantesFunciones.resaltardescripcionCompra,this.compraConstantesFunciones.activardescripcionCompra,iSizeTabla,this,true,"descripcionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltardescripcionCompra,this.compraConstantesFunciones.activardescripcionCompra,this,true,"descripcionCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDORDENCOMPRA));

		if(this.compraConstantesFunciones.mostrarid_orden_compraCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDORDENCOMPRA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new OrdenCompraTableCell(this.ordencomprasForeignKey,this.compraConstantesFunciones.resaltarid_orden_compraCompra,this,this.compraConstantesFunciones.activarid_orden_compraCompra,iSizeTabla));
			tableColumn.setCellEditor(new OrdenCompraTableCell(this.ordencomprasForeignKey,this.compraConstantesFunciones.resaltarid_orden_compraCompra,this,this.compraConstantesFunciones.activarid_orden_compraCompra,true,"id_orden_compraCompra","CON_BUSQUEDA-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IDPEDIDOCOMPRA));

		if(this.compraConstantesFunciones.mostrarid_pedido_compraCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IDPEDIDOCOMPRA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PedidoCompraTableCell(this.pedidocomprasForeignKey,this.compraConstantesFunciones.resaltarid_pedido_compraCompra,this,this.compraConstantesFunciones.activarid_pedido_compraCompra,iSizeTabla));
			tableColumn.setCellEditor(new PedidoCompraTableCell(this.pedidocomprasForeignKey,this.compraConstantesFunciones.resaltarid_pedido_compraCompra,this,this.compraConstantesFunciones.activarid_pedido_compraCompra,true,"id_pedido_compraCompra","CON_BUSQUEDA-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_AUTORIUSUARIO));

		if(this.compraConstantesFunciones.mostrarautori_usuarioCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_AUTORIUSUARIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.compraConstantesFunciones.resaltarautori_usuarioCompra,this.compraConstantesFunciones.activarautori_usuarioCompra,iSizeTabla,this,true,"autori_usuarioCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltarautori_usuarioCompra,this.compraConstantesFunciones.activarautori_usuarioCompra,this,true,"autori_usuarioCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_FACTURAINICIAL));

		if(this.compraConstantesFunciones.mostrarfactura_inicialCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_FACTURAINICIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.compraConstantesFunciones.resaltarfactura_inicialCompra,this.compraConstantesFunciones.activarfactura_inicialCompra,iSizeTabla,this,true,"factura_inicialCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltarfactura_inicialCompra,this.compraConstantesFunciones.activarfactura_inicialCompra,this,true,"factura_inicialCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_FACTURAFINAL));

		if(this.compraConstantesFunciones.mostrarfactura_finalCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_FACTURAFINAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.compraConstantesFunciones.resaltarfactura_finalCompra,this.compraConstantesFunciones.activarfactura_finalCompra,iSizeTabla,this,true,"factura_finalCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltarfactura_finalCompra,this.compraConstantesFunciones.activarfactura_finalCompra,this,true,"factura_finalCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO));

		if(this.compraConstantesFunciones.mostrarservicio_documentoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.compraConstantesFunciones.resaltarservicio_documentoCompra,this.compraConstantesFunciones.activarservicio_documentoCompra,iSizeTabla,this,true,"servicio_documentoCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltarservicio_documentoCompra,this.compraConstantesFunciones.activarservicio_documentoCompra,this,true,"servicio_documentoCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,-35);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_FECHAVALOR));

		if(this.compraConstantesFunciones.mostrarfecha_valorCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_FECHAVALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.compraConstantesFunciones.resaltarfecha_valorCompra,this.compraConstantesFunciones.activarfecha_valorCompra,iSizeTabla,this,true,"fecha_valorCompra","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.compraConstantesFunciones.resaltarfecha_valorCompra,this.compraConstantesFunciones.activarfecha_valorCompra,this,true,"fecha_valorCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO));

		if(this.compraConstantesFunciones.mostrarporcentaje_descuentoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.compraConstantesFunciones.resaltarporcentaje_descuentoCompra,this.compraConstantesFunciones.activarporcentaje_descuentoCompra,iSizeTabla,this,true,"porcentaje_descuentoCompra","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltarporcentaje_descuentoCompra,this.compraConstantesFunciones.activarporcentaje_descuentoCompra,this,true,"porcentaje_descuentoCompra","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_SUMAN));

		if(this.compraConstantesFunciones.mostrarsumanCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_SUMAN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.compraConstantesFunciones.resaltarsumanCompra,this.compraConstantesFunciones.activarsumanCompra,iSizeTabla,this,true,"sumanCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltarsumanCompra,this.compraConstantesFunciones.activarsumanCompra,this,true,"sumanCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_ICE));

		if(this.compraConstantesFunciones.mostrariceCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_ICE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.compraConstantesFunciones.resaltariceCompra,this.compraConstantesFunciones.activariceCompra,iSizeTabla,this,true,"iceCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltariceCompra,this.compraConstantesFunciones.activariceCompra,this,true,"iceCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_VALORDESCUENTO));

		if(this.compraConstantesFunciones.mostrarvalor_descuentoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_VALORDESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.compraConstantesFunciones.resaltarvalor_descuentoCompra,this.compraConstantesFunciones.activarvalor_descuentoCompra,iSizeTabla,this,true,"valor_descuentoCompra","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltarvalor_descuentoCompra,this.compraConstantesFunciones.activarvalor_descuentoCompra,this,true,"valor_descuentoCompra","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_TOTALDESCUENTO));

		if(this.compraConstantesFunciones.mostrartotal_descuentoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_TOTALDESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.compraConstantesFunciones.resaltartotal_descuentoCompra,this.compraConstantesFunciones.activartotal_descuentoCompra,iSizeTabla,this,true,"total_descuentoCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltartotal_descuentoCompra,this.compraConstantesFunciones.activartotal_descuentoCompra,this,true,"total_descuentoCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_IVA));

		if(this.compraConstantesFunciones.mostrarivaCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_IVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.compraConstantesFunciones.resaltarivaCompra,this.compraConstantesFunciones.activarivaCompra,iSizeTabla,this,true,"ivaCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltarivaCompra,this.compraConstantesFunciones.activarivaCompra,this,true,"ivaCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_STOCK));

		if(this.compraConstantesFunciones.mostrarstockCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_STOCK,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.compraConstantesFunciones.resaltarstockCompra,this.compraConstantesFunciones.activarstockCompra,iSizeTabla,this,true,"stockCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltarstockCompra,this.compraConstantesFunciones.activarstockCompra,this,true,"stockCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_SUBTOTAL));

		if(this.compraConstantesFunciones.mostrarsub_totalCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_SUBTOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.compraConstantesFunciones.resaltarsub_totalCompra,this.compraConstantesFunciones.activarsub_totalCompra,iSizeTabla,this,true,"sub_totalCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltarsub_totalCompra,this.compraConstantesFunciones.activarsub_totalCompra,this,true,"sub_totalCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_TOTALOTRO));

		if(this.compraConstantesFunciones.mostrartotal_otroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_TOTALOTRO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.compraConstantesFunciones.resaltartotal_otroCompra,this.compraConstantesFunciones.activartotal_otroCompra,iSizeTabla,this,true,"total_otroCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltartotal_otroCompra,this.compraConstantesFunciones.activartotal_otroCompra,this,true,"total_otroCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_ULTIMOCOSTO));

		if(this.compraConstantesFunciones.mostrarultimo_costoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_ULTIMOCOSTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.compraConstantesFunciones.resaltarultimo_costoCompra,this.compraConstantesFunciones.activarultimo_costoCompra,iSizeTabla,this,true,"ultimo_costoCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltarultimo_costoCompra,this.compraConstantesFunciones.activarultimo_costoCompra,this,true,"ultimo_costoCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_NUMEROITEMS));

		if(this.compraConstantesFunciones.mostrarnumero_itemsCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_NUMEROITEMS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.compraConstantesFunciones.resaltarnumero_itemsCompra,this.compraConstantesFunciones.activarnumero_itemsCompra,iSizeTabla,this,true,"numero_itemsCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltarnumero_itemsCompra,this.compraConstantesFunciones.activarnumero_itemsCompra,this,true,"numero_itemsCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_RETENCION));

		if(this.compraConstantesFunciones.mostrarretencionCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_RETENCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.compraConstantesFunciones.resaltarretencionCompra,this.compraConstantesFunciones.activarretencionCompra,iSizeTabla,this,true,"retencionCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltarretencionCompra,this.compraConstantesFunciones.activarretencionCompra,this,true,"retencionCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCompra,CompraConstantesFunciones.LABEL_TOTAL));

		if(this.compraConstantesFunciones.mostrartotalCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,CompraConstantesFunciones.LABEL_TOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.compraConstantesFunciones.resaltartotalCompra,this.compraConstantesFunciones.activartotalCompra,iSizeTabla,this,true,"totalCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.compraConstantesFunciones.resaltartotalCompra,this.compraConstantesFunciones.activartotalCompra,this,true,"totalCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new CompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.compraSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosRetencionInven && this.compraConstantesFunciones.mostrarRetencionInvenCompra && !CompraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Retenciones");
				tableColumn.setHeaderValue("Retenciones");
				tableColumn.setCellRenderer(new RetencionInvenTableCell(compraConstantesFunciones.resaltarRetencionInvenCompra,this,this.compraConstantesFunciones.activarRetencionInvenCompra));
				tableColumn.setCellEditor(new RetencionInvenTableCell(compraConstantesFunciones.resaltarRetencionInvenCompra,this,this.compraConstantesFunciones.activarRetencionInvenCompra));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCompra.addColumn(tableColumn);
			}

			if(this.isTienePermisosTransaccionLocal && this.compraConstantesFunciones.mostrarTransaccionLocalCompra && !CompraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Transaccion Locales");
				tableColumn.setHeaderValue("Transaccion Locales");
				tableColumn.setCellRenderer(new TransaccionLocalTableCell(compraConstantesFunciones.resaltarTransaccionLocalCompra,this,this.compraConstantesFunciones.activarTransaccionLocalCompra));
				tableColumn.setCellEditor(new TransaccionLocalTableCell(compraConstantesFunciones.resaltarTransaccionLocalCompra,this,this.compraConstantesFunciones.activarTransaccionLocalCompra));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCompra.addColumn(tableColumn);
			}

			if(this.isTienePermisosFormaPagoInven && this.compraConstantesFunciones.mostrarFormaPagoInvenCompra && !CompraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Forma Pagoes");
				tableColumn.setHeaderValue("Forma Pagoes");
				tableColumn.setCellRenderer(new FormaPagoInvenTableCell(compraConstantesFunciones.resaltarFormaPagoInvenCompra,this,this.compraConstantesFunciones.activarFormaPagoInvenCompra));
				tableColumn.setCellEditor(new FormaPagoInvenTableCell(compraConstantesFunciones.resaltarFormaPagoInvenCompra,this,this.compraConstantesFunciones.activarFormaPagoInvenCompra));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCompra.addColumn(tableColumn);
			}

			if(this.isTienePermisosDetalleCompra && this.compraConstantesFunciones.mostrarDetalleCompraCompra && !CompraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Detalle Compras");
				tableColumn.setHeaderValue("Detalle Compras");
				tableColumn.setCellRenderer(new DetalleCompraTableCell(compraConstantesFunciones.resaltarDetalleCompraCompra,this,this.compraConstantesFunciones.activarDetalleCompraCompra));
				tableColumn.setCellEditor(new DetalleCompraTableCell(compraConstantesFunciones.resaltarDetalleCompraCompra,this,this.compraConstantesFunciones.activarDetalleCompraCompra));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCompra.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.compraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.compraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosCompra.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				//tableColumn= new TableColumn();
				//tableColumn.setIdentifier(sLabelColumnAccion);
				//tableColumn.setHeaderValue(sLabelColumnAccion);
				//tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.compraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				//tableColumn.setCellEditor(new IdTableCell(this,false,false,this.compraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				//tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				//tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				//this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				//this.jTableDatosCompra.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarCompra && this.isPermisoGuardarCambiosCompra) {
					//tableColumn= new TableColumn();
					//tableColumn.setIdentifier(Constantes2.S_ELI);
					//tableColumn.setHeaderValue(sLabelColumnAccionEli);
					//tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.compraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					//tableColumn.setCellEditor(new IdTableCell(this,false,true,this.compraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					//tableColumn.setPreferredWidth(65); 	 
					//tableColumn.setWidth(65); 	 
					//tableColumn.setMinWidth(65); 
					//tableColumn.setMaxWidth(65);
					
					//this.iWidthTableDefinicion+=65;
						
					//this.jTableDatosCompra.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.compraSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosCompra.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosCompra.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarCompra && this.isPermisoGuardarCambiosCompra) {
				//iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		//iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.compraSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarCompra && this.isPermisoGuardarCambiosCompra) {
				////REUBICA ELIMINAR SIMPLE
				//jTableDatosCompra.moveColumn(this.jTableDatosCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				//iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		//jTableDatosCompra.moveColumn(this.jTableDatosCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.compraSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosCompra.moveColumn(this.jTableDatosCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosCompra.moveColumn(this.jTableDatosCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosCompra.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosCompra.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosCompra,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!CompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosCompra.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosCompra.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!CompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!CompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosCompra.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosCompra.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosCompra.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=compraLogic.getCompras().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=compras.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosCompra.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosCompra();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoCompra=false;
					
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			
				if(this.compraSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormCompra==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosCompra.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.compra.getsType().equals("DUPLICADO")
				   || this.compra.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoCompra=true;
				
				} else {
					this.isEsNuevoCompra=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.compraSessionBean.getEsGuardarRelacionado()) {
					if(this.compra.getId()>=0 && !this.compra.getIsNew()) {						
						this.isEsNuevoCompra=false;
						
					} else {
						this.isEsNuevoCompra=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoCompra(esRelaciones);						
				
				this.seleccionarCompra(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.compra.getId()<0) {
					this.isEsNuevoCompra=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarCompra(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarCompra(evt,rowIndex);
				}	
				
				if(this.compraSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion Compra: " + this.dDif); 
					}
				}								
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarCompra(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.compra)) {
					if(this.compra.getId()>0) {
						this.compra.setIsDeleted(true);
						
						this.comprasEliminados.add(this.compra);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.compraLogic.getCompras().remove(this.compra);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.compras.remove(this.compra);				
					}
					
					
					((CompraModel) this.jTableDatosCompra.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaCompra(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarCompra(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoCompra) {
			
			if(this.jInternalFrameDetalleFormCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosCompra.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(CompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioCompra(this.compra);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.compraConstantesFunciones.cargarid_empresaCompra || this.compraConstantesFunciones.event_dependid_empresaCompra) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.compra.getid_empresa());
									//this.inicializarActualizarBindingCompra(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(compra.getEmpresa()!=null) {
							this.empresasForeignKey.add(compra.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.compra.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.compraConstantesFunciones.cargarid_sucursalCompra || this.compraConstantesFunciones.event_dependid_sucursalCompra) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.compra.getid_sucursal());
									//this.inicializarActualizarBindingCompra(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(compra.getSucursal()!=null) {
							this.sucursalsForeignKey.add(compra.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.compra.getid_sucursal(),false,"Formulario");

					//Modulo
					if(!this.compraConstantesFunciones.cargarid_moduloCompra || this.compraConstantesFunciones.event_dependid_moduloCompra) {
						//this.cargarCombosModulosForeignKeyLista(" where id="+this.compra.getid_modulo());
									//this.inicializarActualizarBindingCompra(false,false);
						this.modulosForeignKey=new ArrayList<Modulo>();

						if(compra.getModulo()!=null) {
							this.modulosForeignKey.add(compra.getModulo());
						}

						this.addItemDefectoCombosForeignKeyModulo();
						this.cargarCombosFrameModulosForeignKey("Todos");
					}
					this.setActualModuloForeignKey(this.compra.getid_modulo(),false,"Formulario");

					//Ejercicio
					if(!this.compraConstantesFunciones.cargarid_ejercicioCompra || this.compraConstantesFunciones.event_dependid_ejercicioCompra) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.compra.getid_ejercicio());
									//this.inicializarActualizarBindingCompra(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(compra.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(compra.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.compra.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.compraConstantesFunciones.cargarid_periodoCompra || this.compraConstantesFunciones.event_dependid_periodoCompra) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.compra.getid_periodo());
									//this.inicializarActualizarBindingCompra(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(compra.getPeriodo()!=null) {
							this.periodosForeignKey.add(compra.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.compra.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.compraConstantesFunciones.cargarid_anioCompra || this.compraConstantesFunciones.event_dependid_anioCompra) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.compra.getid_anio());
									//this.inicializarActualizarBindingCompra(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(compra.getAnio()!=null) {
							this.aniosForeignKey.add(compra.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.compra.getid_anio(),false,"Formulario");

					//Mes
					if(!this.compraConstantesFunciones.cargarid_mesCompra || this.compraConstantesFunciones.event_dependid_mesCompra) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.compra.getid_mes());
									//this.inicializarActualizarBindingCompra(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(compra.getMes()!=null) {
							this.messForeignKey.add(compra.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.compra.getid_mes(),false,"Formulario");

					//Usuario
					if(!this.compraConstantesFunciones.cargarid_usuarioCompra || this.compraConstantesFunciones.event_dependid_usuarioCompra) {
						//this.cargarCombosUsuariosForeignKeyLista(" where id="+this.compra.getid_usuario());
									//this.inicializarActualizarBindingCompra(false,false);
						this.usuariosForeignKey=new ArrayList<Usuario>();

						if(compra.getUsuario()!=null) {
							this.usuariosForeignKey.add(compra.getUsuario());
						}

						this.addItemDefectoCombosForeignKeyUsuario();
						this.cargarCombosFrameUsuariosForeignKey("Todos");
					}
					this.setActualUsuarioForeignKey(this.compra.getid_usuario(),false,"Formulario");

					//Moneda
					if(!this.compraConstantesFunciones.cargarid_monedaCompra || this.compraConstantesFunciones.event_dependid_monedaCompra) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.compra.getid_moneda());
									//this.inicializarActualizarBindingCompra(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(compra.getMoneda()!=null) {
							this.monedasForeignKey.add(compra.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.compra.getid_moneda(),false,"Formulario");

					//TipoCambio
					if(!this.compraConstantesFunciones.cargarid_tipo_cambioCompra || this.compraConstantesFunciones.event_dependid_tipo_cambioCompra) {
						//this.cargarCombosTipoCambiosForeignKeyLista(" where id="+this.compra.getid_tipo_cambio());
									//this.inicializarActualizarBindingCompra(false,false);
						this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

						if(compra.getTipoCambio()!=null) {
							this.tipocambiosForeignKey.add(compra.getTipoCambio());
						}

						this.addItemDefectoCombosForeignKeyTipoCambio();
						this.cargarCombosFrameTipoCambiosForeignKey("Todos");
					}
					this.setActualTipoCambioForeignKey(this.compra.getid_tipo_cambio(),false,"Formulario");

					//EstadoInventario
					if(!this.compraConstantesFunciones.cargarid_estado_inventarioCompra || this.compraConstantesFunciones.event_dependid_estado_inventarioCompra) {
						//this.cargarCombosEstadoInventariosForeignKeyLista(" where id="+this.compra.getid_estado_inventario());
									//this.inicializarActualizarBindingCompra(false,false);
						this.estadoinventariosForeignKey=new ArrayList<EstadoInventario>();

						if(compra.getEstadoInventario()!=null) {
							this.estadoinventariosForeignKey.add(compra.getEstadoInventario());
						}

						this.addItemDefectoCombosForeignKeyEstadoInventario();
						this.cargarCombosFrameEstadoInventariosForeignKey("Todos");
					}
					this.setActualEstadoInventarioForeignKey(this.compra.getid_estado_inventario(),false,"Formulario");

					//Cliente
					if(!this.compraConstantesFunciones.cargarid_clienteCompra || this.compraConstantesFunciones.event_dependid_clienteCompra) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.compra.getid_cliente());
									//this.inicializarActualizarBindingCompra(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(compra.getCliente()!=null) {
							this.clientesForeignKey.add(compra.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.compra.getid_cliente(),false,"Formulario");

					//Formato
					if(!this.compraConstantesFunciones.cargarid_formatoCompra || this.compraConstantesFunciones.event_dependid_formatoCompra) {
						//this.cargarCombosFormatosForeignKeyLista(" where id="+this.compra.getid_formato());
									//this.inicializarActualizarBindingCompra(false,false);
						this.formatosForeignKey=new ArrayList<Formato>();

						if(compra.getFormato()!=null) {
							this.formatosForeignKey.add(compra.getFormato());
						}

						this.addItemDefectoCombosForeignKeyFormato();
						this.cargarCombosFrameFormatosForeignKey("Todos");
					}
					this.setActualFormatoForeignKey(this.compra.getid_formato(),false,"Formulario");

					//Empleado
					if(!this.compraConstantesFunciones.cargarid_empleadoCompra || this.compraConstantesFunciones.event_dependid_empleadoCompra) {
						//this.cargarCombosEmpleadosForeignKeyLista(" where id="+this.compra.getid_empleado());
									//this.inicializarActualizarBindingCompra(false,false);
						this.empleadosForeignKey=new ArrayList<Empleado>();

						if(compra.getEmpleado()!=null) {
							this.empleadosForeignKey.add(compra.getEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEmpleado();
						this.cargarCombosFrameEmpleadosForeignKey("Todos");
					}
					this.setActualEmpleadoForeignKey(this.compra.getid_empleado(),false,"Formulario");

					//Transportista
					if(!this.compraConstantesFunciones.cargarid_transportistaCompra || this.compraConstantesFunciones.event_dependid_transportistaCompra) {
						//this.cargarCombosTransportistasForeignKeyLista(" where id="+this.compra.getid_transportista());
									//this.inicializarActualizarBindingCompra(false,false);
						this.transportistasForeignKey=new ArrayList<Transportista>();

						if(compra.getTransportista()!=null) {
							this.transportistasForeignKey.add(compra.getTransportista());
						}

						this.addItemDefectoCombosForeignKeyTransportista();
						this.cargarCombosFrameTransportistasForeignKey("Todos");
					}
					this.setActualTransportistaForeignKey(this.compra.getid_transportista(),false,"Formulario");

					//OrdenCompra
					if(!this.compraConstantesFunciones.cargarid_orden_compraCompra || this.compraConstantesFunciones.event_dependid_orden_compraCompra) {
						//this.cargarCombosOrdenComprasForeignKeyLista(" where id="+this.compra.getid_orden_compra());
									//this.inicializarActualizarBindingCompra(false,false);
						this.ordencomprasForeignKey=new ArrayList<OrdenCompra>();

						if(compra.getOrdenCompra()!=null) {
							this.ordencomprasForeignKey.add(compra.getOrdenCompra());
						}

						this.addItemDefectoCombosForeignKeyOrdenCompra();
						this.cargarCombosFrameOrdenComprasForeignKey("Todos");
					}
					this.setActualOrdenCompraForeignKey(this.compra.getid_orden_compra(),false,"Formulario");

					//PedidoCompra
					if(!this.compraConstantesFunciones.cargarid_pedido_compraCompra || this.compraConstantesFunciones.event_dependid_pedido_compraCompra) {
						//this.cargarCombosPedidoComprasForeignKeyLista(" where id="+this.compra.getid_pedido_compra());
									//this.inicializarActualizarBindingCompra(false,false);
						this.pedidocomprasForeignKey=new ArrayList<PedidoCompra>();

						if(compra.getPedidoCompra()!=null) {
							this.pedidocomprasForeignKey.add(compra.getPedidoCompra());
						}

						this.addItemDefectoCombosForeignKeyPedidoCompra();
						this.cargarCombosFramePedidoComprasForeignKey("Todos");
					}
					this.setActualPedidoCompraForeignKey(this.compra.getid_pedido_compra(),false,"Formulario");

					//TipoTransaccionModulo
					if(!this.compraConstantesFunciones.cargarid_tipo_transaccion_moduloCompra || this.compraConstantesFunciones.event_dependid_tipo_transaccion_moduloCompra) {
						//this.cargarCombosTipoTransaccionModulosForeignKeyLista(" where id="+this.compra.getid_tipo_transaccion_modulo());
									//this.inicializarActualizarBindingCompra(false,false);
						this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>();

						if(compra.getTipoTransaccionModulo()!=null) {
							this.tipotransaccionmodulosForeignKey.add(compra.getTipoTransaccionModulo());
						}

						this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
						this.cargarCombosFrameTipoTransaccionModulosForeignKey("Todos");
					}
					this.setActualTipoTransaccionModuloForeignKey(this.compra.getid_tipo_transaccion_modulo(),false,"Formulario");

					//AsientoContable
					if(!this.compraConstantesFunciones.cargarid_asiento_contableCompra || this.compraConstantesFunciones.event_dependid_asiento_contableCompra) {
						//this.cargarCombosAsientoContablesForeignKeyLista(" where id="+this.compra.getid_asiento_contable());
									//this.inicializarActualizarBindingCompra(false,false);
						this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

						if(compra.getAsientoContable()!=null) {
							this.asientocontablesForeignKey.add(compra.getAsientoContable());
						}

						this.addItemDefectoCombosForeignKeyAsientoContable();
						this.cargarCombosFrameAsientoContablesForeignKey("Todos");
					}
					this.setActualAsientoContableForeignKey(this.compra.getid_asiento_contable(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesCompra("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesCompra(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualCompra() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoCompra(Compra compra) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoCompra(compra,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoCompra(Compra compra,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioCompra(compra);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyCompra(compra,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyCompra(compra);
	}
	
	public void setVariablesObjetoActualToFormularioCompra(Compra compra) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormCompra.jLabelidCompra.setText(compra.getId().toString());
			this.jInternalFrameDetalleFormCompra.jDateChooserfecha_emisionCompra.setDate(compra.getfecha_emision());
			this.jInternalFrameDetalleFormCompra.jDateChooserfecha_entregaCompra.setDate(compra.getfecha_entrega());
			this.jInternalFrameDetalleFormCompra.jTextFieldnumero_secuencialCompra.setText(compra.getnumero_secuencial());
			this.jInternalFrameDetalleFormCompra.jTextFieldnumero_facturaCompra.setText(compra.getnumero_factura());
			this.jInternalFrameDetalleFormCompra.jTextAreadescripcionCompra.setText(compra.getdescripcion());
			this.jInternalFrameDetalleFormCompra.jTextFieldautori_usuarioCompra.setText(compra.getautori_usuario());
			this.jInternalFrameDetalleFormCompra.jTextFieldfactura_inicialCompra.setText(compra.getfactura_inicial());
			this.jInternalFrameDetalleFormCompra.jTextFieldfactura_finalCompra.setText(compra.getfactura_final());
			this.jInternalFrameDetalleFormCompra.jTextFieldservicio_documentoCompra.setText(compra.getservicio_documento());
			this.jInternalFrameDetalleFormCompra.jDateChooserfecha_valorCompra.setDate(compra.getfecha_valor());
			this.jInternalFrameDetalleFormCompra.jTextFieldporcentaje_descuentoCompra.setText(compra.getporcentaje_descuento().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldsumanCompra.setText(compra.getsuman().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldiceCompra.setText(compra.getice().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldvalor_descuentoCompra.setText(compra.getvalor_descuento().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldtotal_descuentoCompra.setText(compra.gettotal_descuento().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldivaCompra.setText(compra.getiva().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldstockCompra.setText(compra.getstock().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldsub_totalCompra.setText(compra.getsub_total().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldtotal_otroCompra.setText(compra.gettotal_otro().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldultimo_costoCompra.setText(compra.getultimo_costo().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldnumero_itemsCompra.setText(compra.getnumero_items().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldretencionCompra.setText(compra.getretencion().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldtotalCompra.setText(compra.gettotal().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,Compra compraLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,compraLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,Compra compraLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				compraLocal=this.compra;
			} else {
				compraLocal=this.compraAnterior;
			}
		}
		
		if(this.permiteMantenimiento(compraLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoCompra(compraLocal,true);
					
					if(compraSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(compraLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.compraSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(compraLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoCompra(Compra compra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualCompra(compra,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysCompra(compra);
	}
	
	public void setVariablesFormularioToObjetoActualCompra(Compra compra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualCompra(compra,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualCompra(Compra compra,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormCompra.jLabelidCompra.getText()==null || this.jInternalFrameDetalleFormCompra.jLabelidCompra.getText()=="" || this.jInternalFrameDetalleFormCompra.jLabelidCompra.getText()=="Id") {
				this.jInternalFrameDetalleFormCompra.jLabelidCompra.setText("0");
			}

			if(conColumnasBase) {compra.setId(Long.parseLong(this.jInternalFrameDetalleFormCompra.jLabelidCompra.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelIdCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setfecha_emision(this.jInternalFrameDetalleFormCompra.jDateChooserfecha_emisionCompra.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelfecha_emisionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setfecha_entrega(this.jInternalFrameDetalleFormCompra.jDateChooserfecha_entregaCompra.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_FECHAENTREGA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelfecha_entregaCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setnumero_secuencial(this.jInternalFrameDetalleFormCompra.jTextFieldnumero_secuencialCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelnumero_secuencialCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setnumero_factura(this.jInternalFrameDetalleFormCompra.jTextFieldnumero_facturaCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_NUMEROFACTURA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelnumero_facturaCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setdescripcion(this.jInternalFrameDetalleFormCompra.jTextAreadescripcionCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabeldescripcionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setautori_usuario(this.jInternalFrameDetalleFormCompra.jTextFieldautori_usuarioCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_AUTORIUSUARIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelautori_usuarioCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setfactura_inicial(this.jInternalFrameDetalleFormCompra.jTextFieldfactura_inicialCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_FACTURAINICIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelfactura_inicialCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setfactura_final(this.jInternalFrameDetalleFormCompra.jTextFieldfactura_finalCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_FACTURAFINAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelfactura_finalCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setservicio_documento(this.jInternalFrameDetalleFormCompra.jTextFieldservicio_documentoCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelservicio_documentoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setfecha_valor(this.jInternalFrameDetalleFormCompra.jDateChooserfecha_valorCompra.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_FECHAVALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelfecha_valorCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setporcentaje_descuento(Double.parseDouble(this.jInternalFrameDetalleFormCompra.jTextFieldporcentaje_descuentoCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelporcentaje_descuentoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setsuman(Double.parseDouble(this.jInternalFrameDetalleFormCompra.jTextFieldsumanCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_SUMAN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelsumanCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setice(Double.parseDouble(this.jInternalFrameDetalleFormCompra.jTextFieldiceCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_ICE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabeliceCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setvalor_descuento(Double.parseDouble(this.jInternalFrameDetalleFormCompra.jTextFieldvalor_descuentoCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_VALORDESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelvalor_descuentoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.settotal_descuento(Double.parseDouble(this.jInternalFrameDetalleFormCompra.jTextFieldtotal_descuentoCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_TOTALDESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabeltotal_descuentoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setiva(Double.parseDouble(this.jInternalFrameDetalleFormCompra.jTextFieldivaCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_IVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelivaCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setstock(Double.parseDouble(this.jInternalFrameDetalleFormCompra.jTextFieldstockCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_STOCK+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelstockCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setsub_total(Double.parseDouble(this.jInternalFrameDetalleFormCompra.jTextFieldsub_totalCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_SUBTOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelsub_totalCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.settotal_otro(Double.parseDouble(this.jInternalFrameDetalleFormCompra.jTextFieldtotal_otroCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_TOTALOTRO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabeltotal_otroCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setultimo_costo(Double.parseDouble(this.jInternalFrameDetalleFormCompra.jTextFieldultimo_costoCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_ULTIMOCOSTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelultimo_costoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setnumero_items(Integer.parseInt(this.jInternalFrameDetalleFormCompra.jTextFieldnumero_itemsCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_NUMEROITEMS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelnumero_itemsCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.setretencion(Double.parseDouble(this.jInternalFrameDetalleFormCompra.jTextFieldretencionCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_RETENCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabelretencionCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			compra.settotal(Double.parseDouble(this.jInternalFrameDetalleFormCompra.jTextFieldtotalCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+CompraConstantesFunciones.LABEL_TOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCompra.jLabeltotalCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualCompra(Compra compraBean,Compra compra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosCompra(Compra compraOrigen,Compra compra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && compraOrigen.getId()!=null && !compraOrigen.getId().equals(0L))) {compra.setId(compraOrigen.getId());}}
			if(conDefault || (!conDefault && compraOrigen.getfecha_emision()!=null && !compraOrigen.getfecha_emision().equals(new Date()))) {compra.setfecha_emision(compraOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && compraOrigen.getfecha_entrega()!=null && !compraOrigen.getfecha_entrega().equals(new Date()))) {compra.setfecha_entrega(compraOrigen.getfecha_entrega());}
			if(conDefault || (!conDefault && compraOrigen.getnumero_secuencial()!=null && !compraOrigen.getnumero_secuencial().equals(""))) {compra.setnumero_secuencial(compraOrigen.getnumero_secuencial());}
			if(conDefault || (!conDefault && compraOrigen.getnumero_factura()!=null && !compraOrigen.getnumero_factura().equals(""))) {compra.setnumero_factura(compraOrigen.getnumero_factura());}
			if(conDefault || (!conDefault && compraOrigen.getdescripcion()!=null && !compraOrigen.getdescripcion().equals(""))) {compra.setdescripcion(compraOrigen.getdescripcion());}
			if(conDefault || (!conDefault && compraOrigen.getautori_usuario()!=null && !compraOrigen.getautori_usuario().equals(""))) {compra.setautori_usuario(compraOrigen.getautori_usuario());}
			if(conDefault || (!conDefault && compraOrigen.getfactura_inicial()!=null && !compraOrigen.getfactura_inicial().equals(""))) {compra.setfactura_inicial(compraOrigen.getfactura_inicial());}
			if(conDefault || (!conDefault && compraOrigen.getfactura_final()!=null && !compraOrigen.getfactura_final().equals(""))) {compra.setfactura_final(compraOrigen.getfactura_final());}
			if(conDefault || (!conDefault && compraOrigen.getservicio_documento()!=null && !compraOrigen.getservicio_documento().equals(""))) {compra.setservicio_documento(compraOrigen.getservicio_documento());}
			if(conDefault || (!conDefault && compraOrigen.getfecha_valor()!=null && !compraOrigen.getfecha_valor().equals(new Date()))) {compra.setfecha_valor(compraOrigen.getfecha_valor());}
			if(conDefault || (!conDefault && compraOrigen.getporcentaje_descuento()!=null && !compraOrigen.getporcentaje_descuento().equals(0.0))) {compra.setporcentaje_descuento(compraOrigen.getporcentaje_descuento());}
			if(conDefault || (!conDefault && compraOrigen.getsuman()!=null && !compraOrigen.getsuman().equals(0.0))) {compra.setsuman(compraOrigen.getsuman());}
			if(conDefault || (!conDefault && compraOrigen.getice()!=null && !compraOrigen.getice().equals(0.0))) {compra.setice(compraOrigen.getice());}
			if(conDefault || (!conDefault && compraOrigen.getvalor_descuento()!=null && !compraOrigen.getvalor_descuento().equals(0.0))) {compra.setvalor_descuento(compraOrigen.getvalor_descuento());}
			if(conDefault || (!conDefault && compraOrigen.gettotal_descuento()!=null && !compraOrigen.gettotal_descuento().equals(0.0))) {compra.settotal_descuento(compraOrigen.gettotal_descuento());}
			if(conDefault || (!conDefault && compraOrigen.getiva()!=null && !compraOrigen.getiva().equals(0.0))) {compra.setiva(compraOrigen.getiva());}
			if(conDefault || (!conDefault && compraOrigen.getstock()!=null && !compraOrigen.getstock().equals(0.0))) {compra.setstock(compraOrigen.getstock());}
			if(conDefault || (!conDefault && compraOrigen.getsub_total()!=null && !compraOrigen.getsub_total().equals(0.0))) {compra.setsub_total(compraOrigen.getsub_total());}
			if(conDefault || (!conDefault && compraOrigen.gettotal_otro()!=null && !compraOrigen.gettotal_otro().equals(0.0))) {compra.settotal_otro(compraOrigen.gettotal_otro());}
			if(conDefault || (!conDefault && compraOrigen.getultimo_costo()!=null && !compraOrigen.getultimo_costo().equals(0.0))) {compra.setultimo_costo(compraOrigen.getultimo_costo());}
			if(conDefault || (!conDefault && compraOrigen.getnumero_items()!=null && !compraOrigen.getnumero_items().equals(0))) {compra.setnumero_items(compraOrigen.getnumero_items());}
			if(conDefault || (!conDefault && compraOrigen.getretencion()!=null && !compraOrigen.getretencion().equals(0.0))) {compra.setretencion(compraOrigen.getretencion());}
			if(conDefault || (!conDefault && compraOrigen.gettotal()!=null && !compraOrigen.gettotal().equals(0.0))) {compra.settotal(compraOrigen.gettotal());}
			if(conDefault || (!conDefault && compraOrigen.getflete()!=null && !compraOrigen.getflete().equals(0.0))) {compra.setflete(compraOrigen.getflete());}
			if(conDefault || (!conDefault && compraOrigen.getimpuesto()!=null && !compraOrigen.getimpuesto().equals(0.0))) {compra.setimpuesto(compraOrigen.getimpuesto());}
			if(conDefault || (!conDefault && compraOrigen.getnumero_comprobante()!=null && !compraOrigen.getnumero_comprobante().equals(""))) {compra.setnumero_comprobante(compraOrigen.getnumero_comprobante());}
			if(conDefault || (!conDefault && compraOrigen.getfecha()!=null && !compraOrigen.getfecha().equals(new Date()))) {compra.setfecha(compraOrigen.getfecha());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioCompra(Compra compra) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormCompra.jLabelidCompra.setText(compra.getId().toString());
			this.jInternalFrameDetalleFormCompra.jDateChooserfecha_emisionCompra.setDate(compra.getfecha_emision());
			this.jInternalFrameDetalleFormCompra.jDateChooserfecha_entregaCompra.setDate(compra.getfecha_entrega());
			this.jInternalFrameDetalleFormCompra.jTextFieldnumero_secuencialCompra.setText(compra.getnumero_secuencial());
			this.jInternalFrameDetalleFormCompra.jTextFieldnumero_facturaCompra.setText(compra.getnumero_factura());
			this.jInternalFrameDetalleFormCompra.jTextAreadescripcionCompra.setText(compra.getdescripcion());
			this.jInternalFrameDetalleFormCompra.jTextFieldautori_usuarioCompra.setText(compra.getautori_usuario());
			this.jInternalFrameDetalleFormCompra.jTextFieldfactura_inicialCompra.setText(compra.getfactura_inicial());
			this.jInternalFrameDetalleFormCompra.jTextFieldfactura_finalCompra.setText(compra.getfactura_final());
			this.jInternalFrameDetalleFormCompra.jTextFieldservicio_documentoCompra.setText(compra.getservicio_documento());
			this.jInternalFrameDetalleFormCompra.jDateChooserfecha_valorCompra.setDate(compra.getfecha_valor());
			this.jInternalFrameDetalleFormCompra.jTextFieldporcentaje_descuentoCompra.setText(compra.getporcentaje_descuento().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldsumanCompra.setText(compra.getsuman().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldiceCompra.setText(compra.getice().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldvalor_descuentoCompra.setText(compra.getvalor_descuento().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldtotal_descuentoCompra.setText(compra.gettotal_descuento().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldivaCompra.setText(compra.getiva().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldstockCompra.setText(compra.getstock().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldsub_totalCompra.setText(compra.getsub_total().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldtotal_otroCompra.setText(compra.gettotal_otro().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldultimo_costoCompra.setText(compra.getultimo_costo().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldnumero_itemsCompra.setText(compra.getnumero_items().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldretencionCompra.setText(compra.getretencion().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldtotalCompra.setText(compra.gettotal().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioCompra(CompraBean compraBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormCompra.jLabelidCompra.setText(compraBean.getId().toString());
			this.jInternalFrameDetalleFormCompra.jDateChooserfecha_emisionCompra.setDate(compraBean.getfecha_emision());
			this.jInternalFrameDetalleFormCompra.jDateChooserfecha_entregaCompra.setDate(compraBean.getfecha_entrega());
			this.jInternalFrameDetalleFormCompra.jTextFieldnumero_secuencialCompra.setText(compraBean.getnumero_secuencial());
			this.jInternalFrameDetalleFormCompra.jTextFieldnumero_facturaCompra.setText(compraBean.getnumero_factura());
			this.jInternalFrameDetalleFormCompra.jTextAreadescripcionCompra.setText(compraBean.getdescripcion());
			this.jInternalFrameDetalleFormCompra.jTextFieldautori_usuarioCompra.setText(compraBean.getautori_usuario());
			this.jInternalFrameDetalleFormCompra.jTextFieldfactura_inicialCompra.setText(compraBean.getfactura_inicial());
			this.jInternalFrameDetalleFormCompra.jTextFieldfactura_finalCompra.setText(compraBean.getfactura_final());
			this.jInternalFrameDetalleFormCompra.jTextFieldservicio_documentoCompra.setText(compraBean.getservicio_documento());
			this.jInternalFrameDetalleFormCompra.jDateChooserfecha_valorCompra.setDate(compraBean.getfecha_valor());
			this.jInternalFrameDetalleFormCompra.jTextFieldporcentaje_descuentoCompra.setText(compraBean.getporcentaje_descuento().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldsumanCompra.setText(compraBean.getsuman().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldiceCompra.setText(compraBean.getice().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldvalor_descuentoCompra.setText(compraBean.getvalor_descuento().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldtotal_descuentoCompra.setText(compraBean.gettotal_descuento().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldivaCompra.setText(compraBean.getiva().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldstockCompra.setText(compraBean.getstock().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldsub_totalCompra.setText(compraBean.getsub_total().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldtotal_otroCompra.setText(compraBean.gettotal_otro().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldultimo_costoCompra.setText(compraBean.getultimo_costo().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldnumero_itemsCompra.setText(compraBean.getnumero_items().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldretencionCompra.setText(compraBean.getretencion().toString());
			this.jInternalFrameDetalleFormCompra.jTextFieldtotalCompra.setText(compraBean.gettotal().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanCompra(CompraParameterReturnGeneral compraReturnGeneral,CompraBean compraBean,Boolean conDefault) throws Exception { 
		try {
			Compra compraLocal=new Compra();
			
			compraLocal=compraReturnGeneral.getCompra();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && compraLocal.getId()!=null && !compraLocal.getId().equals(0L))) {compraBean.setId(compraLocal.getId());}}
			if(conDefault || (!conDefault && compraLocal.getfecha_emision()!=null && !compraLocal.getfecha_emision().equals(new Date()))) {compraBean.setfecha_emision(compraLocal.getfecha_emision());}
			if(conDefault || (!conDefault && compraLocal.getfecha_entrega()!=null && !compraLocal.getfecha_entrega().equals(new Date()))) {compraBean.setfecha_entrega(compraLocal.getfecha_entrega());}
			if(conDefault || (!conDefault && compraLocal.getnumero_secuencial()!=null && !compraLocal.getnumero_secuencial().equals(""))) {compraBean.setnumero_secuencial(compraLocal.getnumero_secuencial());}
			if(conDefault || (!conDefault && compraLocal.getnumero_factura()!=null && !compraLocal.getnumero_factura().equals(""))) {compraBean.setnumero_factura(compraLocal.getnumero_factura());}
			if(conDefault || (!conDefault && compraLocal.getdescripcion()!=null && !compraLocal.getdescripcion().equals(""))) {compraBean.setdescripcion(compraLocal.getdescripcion());}
			if(conDefault || (!conDefault && compraLocal.getautori_usuario()!=null && !compraLocal.getautori_usuario().equals(""))) {compraBean.setautori_usuario(compraLocal.getautori_usuario());}
			if(conDefault || (!conDefault && compraLocal.getfactura_inicial()!=null && !compraLocal.getfactura_inicial().equals(""))) {compraBean.setfactura_inicial(compraLocal.getfactura_inicial());}
			if(conDefault || (!conDefault && compraLocal.getfactura_final()!=null && !compraLocal.getfactura_final().equals(""))) {compraBean.setfactura_final(compraLocal.getfactura_final());}
			if(conDefault || (!conDefault && compraLocal.getservicio_documento()!=null && !compraLocal.getservicio_documento().equals(""))) {compraBean.setservicio_documento(compraLocal.getservicio_documento());}
			if(conDefault || (!conDefault && compraLocal.getfecha_valor()!=null && !compraLocal.getfecha_valor().equals(new Date()))) {compraBean.setfecha_valor(compraLocal.getfecha_valor());}
			if(conDefault || (!conDefault && compraLocal.getporcentaje_descuento()!=null && !compraLocal.getporcentaje_descuento().equals(0.0))) {compraBean.setporcentaje_descuento(compraLocal.getporcentaje_descuento());}
			if(conDefault || (!conDefault && compraLocal.getsuman()!=null && !compraLocal.getsuman().equals(0.0))) {compraBean.setsuman(compraLocal.getsuman());}
			if(conDefault || (!conDefault && compraLocal.getice()!=null && !compraLocal.getice().equals(0.0))) {compraBean.setice(compraLocal.getice());}
			if(conDefault || (!conDefault && compraLocal.getvalor_descuento()!=null && !compraLocal.getvalor_descuento().equals(0.0))) {compraBean.setvalor_descuento(compraLocal.getvalor_descuento());}
			if(conDefault || (!conDefault && compraLocal.gettotal_descuento()!=null && !compraLocal.gettotal_descuento().equals(0.0))) {compraBean.settotal_descuento(compraLocal.gettotal_descuento());}
			if(conDefault || (!conDefault && compraLocal.getiva()!=null && !compraLocal.getiva().equals(0.0))) {compraBean.setiva(compraLocal.getiva());}
			if(conDefault || (!conDefault && compraLocal.getstock()!=null && !compraLocal.getstock().equals(0.0))) {compraBean.setstock(compraLocal.getstock());}
			if(conDefault || (!conDefault && compraLocal.getsub_total()!=null && !compraLocal.getsub_total().equals(0.0))) {compraBean.setsub_total(compraLocal.getsub_total());}
			if(conDefault || (!conDefault && compraLocal.gettotal_otro()!=null && !compraLocal.gettotal_otro().equals(0.0))) {compraBean.settotal_otro(compraLocal.gettotal_otro());}
			if(conDefault || (!conDefault && compraLocal.getultimo_costo()!=null && !compraLocal.getultimo_costo().equals(0.0))) {compraBean.setultimo_costo(compraLocal.getultimo_costo());}
			if(conDefault || (!conDefault && compraLocal.getnumero_items()!=null && !compraLocal.getnumero_items().equals(0))) {compraBean.setnumero_items(compraLocal.getnumero_items());}
			if(conDefault || (!conDefault && compraLocal.getretencion()!=null && !compraLocal.getretencion().equals(0.0))) {compraBean.setretencion(compraLocal.getretencion());}
			if(conDefault || (!conDefault && compraLocal.gettotal()!=null && !compraLocal.gettotal().equals(0.0))) {compraBean.settotal(compraLocal.gettotal());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxCompraGenerico(Long idCompraSeleccionado,JComboBox jComboBoxCompra,List<Compra> comprasLocal)throws Exception {
		try {
			Compra  compraTemp=null;

			for(Compra compraAux:comprasLocal) {
				if(compraAux.getId()!=null && compraAux.getId().equals(idCompraSeleccionado)) {
					compraTemp=compraAux;
					break;
				}
			}

			jComboBoxCompra.setSelectedItem(compraTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxCompraGenerico(JComboBox jComboBoxCompra,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxCompra.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxCompra.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("RetencionInven")) {
			jButtonRetencionInvenActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("TransaccionLocal")) {
			jButtonTransaccionLocalActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("FormaPagoInven")) {
			jButtonFormaPagoInvenActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("DetalleCompra")) {
			jButtonDetalleCompraActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			compra=(Compra) compraLogic.getCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			compra =(Compra) compras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Modulo")) {
			//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getmodulo_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getmes_descripcion();
			}
		}

		if(sTipo.equals("Usuario")) {
			//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getusuario_descripcion();
			} else {
				//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getusuario_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("TipoCambio")) {
			//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.gettipocambio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
				sDescripcion=compra.gettipocambio_descripcion();
			}
		}

		if(sTipo.equals("EstadoInventario")) {
			//sDescripcion=this.getActualEstadoInventarioForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getestadoinventario_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoInventarioForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getestadoinventario_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getcliente_descripcion();
			}
		}

		if(sTipo.equals("Formato")) {
			//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getformato_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getformato_descripcion();
			}
		}

		if(sTipo.equals("Empleado")) {
			//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getempleado_descripcion();
			}
		}

		if(sTipo.equals("Transportista")) {
			//sDescripcion=this.getActualTransportistaForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.gettransportista_descripcion();
			} else {
				//sDescripcion=this.getActualTransportistaForeignKeyDescripcion((Long)value);
				sDescripcion=compra.gettransportista_descripcion();
			}
		}

		if(sTipo.equals("OrdenCompra")) {
			//sDescripcion=this.getActualOrdenCompraForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getordencompra_descripcion();
			} else {
				//sDescripcion=this.getActualOrdenCompraForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getordencompra_descripcion();
			}
		}

		if(sTipo.equals("PedidoCompra")) {
			//sDescripcion=this.getActualPedidoCompraForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getpedidocompra_descripcion();
			} else {
				//sDescripcion=this.getActualPedidoCompraForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getpedidocompra_descripcion();
			}
		}

		if(sTipo.equals("TipoTransaccionModulo")) {
			//sDescripcion=this.getActualTipoTransaccionModuloForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.gettipotransaccionmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoTransaccionModuloForeignKeyDescripcion((Long)value);
				sDescripcion=compra.gettipotransaccionmodulo_descripcion();
			}
		}

		if(sTipo.equals("AsientoContable")) {
			//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
			if(!compra.getIsNew() && !compra.getIsChanged() && !compra.getIsDeleted()) {
				sDescripcion=compra.getasientocontable_descripcion();
			} else {
				//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
				sDescripcion=compra.getasientocontable_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		Compra compraRow=new Compra();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			compraRow=(Compra) compraLogic.getCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			compraRow=(Compra) compras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonRetencionInvenActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Compra compra) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCompra==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra = (Compra)this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.compra = (Compra)this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(compra!=null) {
						this.compra = compra;
					} else {
						this.compra = new Compra();
					}
				}

				if(this.isTienePermisosRetencionInven && this.permiteMantenimiento(this.compra)) {
					RetencionInvenBeanSwingJInternalFrame retencioninvenBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFramePopup=new RetencionInvenBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						retencioninvenBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFramePopup;
					} else {
						retencioninvenBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame;
					}

					List<Compra> compras=new ArrayList<Compra>();
					compras.add(this.compra);
					if(!esRelacionado) {
						//retencioninvenBeanSwingJInternalFrame.retencioninvenSessionBean.setConGuardarRelaciones(false);
						//retencioninvenBeanSwingJInternalFrame.retencioninvenSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					retencioninvenBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCompra.cargarRetencionInvenBeanSwingJInternalFrame(compras,this.compra,retencioninvenBeanSwingJInternalFrame,/*conInicializar,*/retencioninvenBeanSwingJInternalFrame.retencioninvenSessionBean.getConGuardarRelaciones(),retencioninvenBeanSwingJInternalFrame.retencioninvenSessionBean.getEsGuardarRelacionado());
					retencioninvenBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						retencioninvenBeanSwingJInternalFrame.actualizarEstadoPanelsRetencionInven("no_relacionado");

						retencioninvenBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(RetencionInvenConstantesFunciones.ITAMANIOFILATABLA + (RetencionInvenConstantesFunciones.ITAMANIOFILATABLA/2));

						retencioninvenBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
						TitledBorder titledBorderRetencionInven=(TitledBorder)retencioninvenBeanSwingJInternalFrame.jScrollPanelDatosRetencionInven.getBorder();

						titledBorderRetencionInven.setTitle(titledBorderCompra.getTitle() + " -> Retencion");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,retencioninvenBeanSwingJInternalFrame);
						}

						retencioninvenBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(retencioninvenBeanSwingJInternalFrame);

						retencioninvenBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.compraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Retencion",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonTransaccionLocalActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Compra compra) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCompra==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra = (Compra)this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.compra = (Compra)this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(compra!=null) {
						this.compra = compra;
					} else {
						this.compra = new Compra();
					}
				}

				if(this.isTienePermisosTransaccionLocal && this.permiteMantenimiento(this.compra)) {
					TransaccionLocalBeanSwingJInternalFrame transaccionlocalBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFramePopup=new TransaccionLocalBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						transaccionlocalBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFramePopup;
					} else {
						transaccionlocalBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame;
					}

					List<Compra> compras=new ArrayList<Compra>();
					compras.add(this.compra);
					if(!esRelacionado) {
						//transaccionlocalBeanSwingJInternalFrame.transaccionlocalSessionBean.setConGuardarRelaciones(false);
						//transaccionlocalBeanSwingJInternalFrame.transaccionlocalSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					transaccionlocalBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCompra.cargarTransaccionLocalBeanSwingJInternalFrame(compras,this.compra,transaccionlocalBeanSwingJInternalFrame,/*conInicializar,*/transaccionlocalBeanSwingJInternalFrame.transaccionlocalSessionBean.getConGuardarRelaciones(),transaccionlocalBeanSwingJInternalFrame.transaccionlocalSessionBean.getEsGuardarRelacionado());
					transaccionlocalBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						transaccionlocalBeanSwingJInternalFrame.actualizarEstadoPanelsTransaccionLocal("no_relacionado");

						transaccionlocalBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(TransaccionLocalConstantesFunciones.ITAMANIOFILATABLA + (TransaccionLocalConstantesFunciones.ITAMANIOFILATABLA/2));

						transaccionlocalBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
						TitledBorder titledBorderTransaccionLocal=(TitledBorder)transaccionlocalBeanSwingJInternalFrame.jScrollPanelDatosTransaccionLocal.getBorder();

						titledBorderTransaccionLocal.setTitle(titledBorderCompra.getTitle() + " -> Transaccion Local");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,transaccionlocalBeanSwingJInternalFrame);
						}

						transaccionlocalBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(transaccionlocalBeanSwingJInternalFrame);

						transaccionlocalBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.compraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Transaccion Local",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonFormaPagoInvenActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Compra compra) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCompra==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra = (Compra)this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.compra = (Compra)this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(compra!=null) {
						this.compra = compra;
					} else {
						this.compra = new Compra();
					}
				}

				if(this.isTienePermisosFormaPagoInven && this.permiteMantenimiento(this.compra)) {
					FormaPagoInvenBeanSwingJInternalFrame formapagoinvenBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFramePopup=new FormaPagoInvenBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						formapagoinvenBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFramePopup;
					} else {
						formapagoinvenBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame;
					}

					List<Compra> compras=new ArrayList<Compra>();
					compras.add(this.compra);
					if(!esRelacionado) {
						//formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.setConGuardarRelaciones(false);
						//formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					formapagoinvenBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCompra.cargarFormaPagoInvenBeanSwingJInternalFrame(compras,this.compra,formapagoinvenBeanSwingJInternalFrame,/*conInicializar,*/formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.getConGuardarRelaciones(),formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.getEsGuardarRelacionado());
					formapagoinvenBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						formapagoinvenBeanSwingJInternalFrame.actualizarEstadoPanelsFormaPagoInven("no_relacionado");

						formapagoinvenBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(FormaPagoInvenConstantesFunciones.ITAMANIOFILATABLA + (FormaPagoInvenConstantesFunciones.ITAMANIOFILATABLA/2));

						formapagoinvenBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
						TitledBorder titledBorderFormaPagoInven=(TitledBorder)formapagoinvenBeanSwingJInternalFrame.jScrollPanelDatosFormaPagoInven.getBorder();

						titledBorderFormaPagoInven.setTitle(titledBorderCompra.getTitle() + " -> Forma Pago");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,formapagoinvenBeanSwingJInternalFrame);
						}

						formapagoinvenBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(formapagoinvenBeanSwingJInternalFrame);

						formapagoinvenBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.compraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Forma Pago",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonDetalleCompraActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Compra compra) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCompra==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra = (Compra)this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.compra = (Compra)this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(compra!=null) {
						this.compra = compra;
					} else {
						this.compra = new Compra();
					}
				}

				if(this.isTienePermisosDetalleCompra && this.permiteMantenimiento(this.compra)) {
					DetalleCompraBeanSwingJInternalFrame detallecompraBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFramePopup=new DetalleCompraBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						detallecompraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFramePopup;
					} else {
						detallecompraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame;
					}

					List<Compra> compras=new ArrayList<Compra>();
					compras.add(this.compra);
					if(!esRelacionado) {
						//detallecompraBeanSwingJInternalFrame.detallecompraSessionBean.setConGuardarRelaciones(false);
						//detallecompraBeanSwingJInternalFrame.detallecompraSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					detallecompraBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCompra.cargarDetalleCompraBeanSwingJInternalFrame(compras,this.compra,detallecompraBeanSwingJInternalFrame,/*conInicializar,*/detallecompraBeanSwingJInternalFrame.detallecompraSessionBean.getConGuardarRelaciones(),detallecompraBeanSwingJInternalFrame.detallecompraSessionBean.getEsGuardarRelacionado());
					detallecompraBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						detallecompraBeanSwingJInternalFrame.actualizarEstadoPanelsDetalleCompra("no_relacionado");

						detallecompraBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DetalleCompraConstantesFunciones.ITAMANIOFILATABLA + (DetalleCompraConstantesFunciones.ITAMANIOFILATABLA/2));

						detallecompraBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
						TitledBorder titledBorderDetalleCompra=(TitledBorder)detallecompraBeanSwingJInternalFrame.jScrollPanelDatosDetalleCompra.getBorder();

						titledBorderDetalleCompra.setTitle(titledBorderCompra.getTitle() + " -> Detalle Compra");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,detallecompraBeanSwingJInternalFrame);
						}

						detallecompraBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(detallecompraBeanSwingJInternalFrame);

						detallecompraBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.compraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Detalle Compra",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualCompra(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoCompra.setVisible((this.isVisibilidadCeldaNuevoCompra && this.isPermisoNuevoCompra));			
			this.jButtonDuplicarCompra.setVisible((this.isVisibilidadCeldaDuplicarCompra && this.isPermisoDuplicarCompra));			
			this.jButtonCopiarCompra.setVisible((this.isVisibilidadCeldaCopiarCompra && this.isPermisoCopiarCompra));
			this.jButtonVerFormCompra.setVisible((this.isVisibilidadCeldaVerFormCompra && this.isPermisoVerFormCompra));
			
			this.jButtonAbrirOrderByCompra.setVisible((this.isVisibilidadCeldaOrdenCompra && this.isPermisoOrdenCompra));			
			
			this.jButtonNuevoRelacionesCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesCompra && this.isPermisoNuevoCompra));			
			this.jButtonNuevoGuardarCambiosCompra.setVisible((this.isVisibilidadCeldaNuevoCompra && this.isPermisoNuevoCompra && this.isPermisoGuardarCambiosCompra));
			
			if(this.jInternalFrameDetalleFormCompra!=null) {
			this.jInternalFrameDetalleFormCompra.jButtonModificarCompra.setVisible((this.isVisibilidadCeldaModificarCompra && this.isPermisoActualizarCompra));	
			this.jInternalFrameDetalleFormCompra.jButtonActualizarCompra.setVisible((this.isVisibilidadCeldaActualizarCompra && this.isPermisoActualizarCompra));	
			this.jInternalFrameDetalleFormCompra.jButtonEliminarCompra.setVisible((this.isVisibilidadCeldaEliminarCompra && this.isPermisoEliminarCompra));
			this.jInternalFrameDetalleFormCompra.jButtonCancelarCompra.setVisible(this.isVisibilidadCeldaCancelarCompra);							
			this.jInternalFrameDetalleFormCompra.jButtonGuardarCambiosCompra.setVisible((this.isVisibilidadCeldaGuardarCompra && this.isPermisoGuardarCambiosCompra));			
			
			}
						
			this.jButtonGuardarCambiosTablaCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosCompra && this.isPermisoGuardarCambiosCompra));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarCompra.setVisible((this.isVisibilidadCeldaNuevoCompra && this.isPermisoNuevoCompra));						
			this.jButtonDuplicarToolBarCompra.setVisible((this.isVisibilidadCeldaDuplicarCompra && this.isPermisoDuplicarCompra));						
			this.jButtonCopiarToolBarCompra.setVisible((this.isVisibilidadCeldaCopiarCompra && this.isPermisoCopiarCompra));			
			this.jButtonVerFormToolBarCompra.setVisible((this.isVisibilidadCeldaVerFormCompra && this.isPermisoVerFormCompra));			
			this.jButtonAbrirOrderByToolBarCompra.setVisible((this.isVisibilidadCeldaOrdenCompra && this.isPermisoOrdenCompra));
			this.jButtonNuevoRelacionesToolBarCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesCompra && this.isPermisoNuevoCompra));			
			this.jButtonNuevoGuardarCambiosToolBarCompra.setVisible((this.isVisibilidadCeldaNuevoCompra && this.isPermisoNuevoCompra && this.isPermisoGuardarCambiosCompra));			
			
			if(this.jInternalFrameDetalleFormCompra!=null) {
			this.jInternalFrameDetalleFormCompra.jButtonModificarToolBarCompra.setVisible((this.isVisibilidadCeldaModificarCompra && this.isPermisoActualizarCompra));	
			this.jInternalFrameDetalleFormCompra.jButtonActualizarToolBarCompra.setVisible((this.isVisibilidadCeldaActualizarCompra  && this.isPermisoActualizarCompra));	
			this.jInternalFrameDetalleFormCompra.jButtonEliminarToolBarCompra.setVisible((this.isVisibilidadCeldaEliminarCompra && this.isPermisoEliminarCompra));
			this.jInternalFrameDetalleFormCompra.jButtonCancelarToolBarCompra.setVisible(this.isVisibilidadCeldaCancelarCompra);				
			this.jInternalFrameDetalleFormCompra.jButtonGuardarCambiosToolBarCompra.setVisible((this.isVisibilidadCeldaGuardarCompra && this.isPermisoGuardarCambiosCompra));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosCompra && this.isPermisoGuardarCambiosCompra));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoCompra.setVisible((this.isVisibilidadCeldaNuevoCompra && this.isPermisoNuevoCompra));			
			this.jMenuItemDuplicarCompra.setVisible((this.isVisibilidadCeldaDuplicarCompra && this.isPermisoDuplicarCompra));			
			this.jMenuItemCopiarCompra.setVisible((this.isVisibilidadCeldaCopiarCompra && this.isPermisoCopiarCompra));			
			this.jMenuItemVerFormCompra.setVisible((this.isVisibilidadCeldaVerFormCompra && this.isPermisoVerFormCompra));			
			this.jMenuItemAbrirOrderByCompra.setVisible((this.isVisibilidadCeldaOrdenCompra && this.isPermisoOrdenCompra));			
			//this.jMenuItemMostrarOcultarCompra.setVisible((this.isVisibilidadCeldaOrdenCompra && this.isPermisoOrdenCompra));
			this.jMenuItemDetalleAbrirOrderByCompra.setVisible((this.isVisibilidadCeldaOrdenCompra && this.isPermisoOrdenCompra));			
			//this.jMenuItemDetalleMostrarOcultarCompra.setVisible((this.isVisibilidadCeldaOrdenCompra && this.isPermisoOrdenCompra));			
			this.jMenuItemNuevoRelacionesCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesCompra && this.isPermisoNuevoCompra));			
			this.jMenuItemNuevoGuardarCambiosCompra.setVisible((this.isVisibilidadCeldaNuevoCompra && this.isPermisoNuevoCompra && this.isPermisoGuardarCambiosCompra));									
			
			if(this.jInternalFrameDetalleFormCompra!=null) {
			this.jInternalFrameDetalleFormCompra.jMenuItemModificarCompra.setVisible((this.isVisibilidadCeldaModificarCompra && this.isPermisoActualizarCompra));	
			this.jInternalFrameDetalleFormCompra.jMenuItemActualizarCompra.setVisible((this.isVisibilidadCeldaActualizarCompra && this.isPermisoActualizarCompra));	
			this.jInternalFrameDetalleFormCompra.jMenuItemEliminarCompra.setVisible((this.isVisibilidadCeldaEliminarCompra && this.isPermisoEliminarCompra));
			this.jInternalFrameDetalleFormCompra.jMenuItemCancelarCompra.setVisible(this.isVisibilidadCeldaCancelarCompra);				
			}
			
			this.jMenuItemGuardarCambiosCompra.setVisible((this.isVisibilidadCeldaGuardarCompra && this.isPermisoGuardarCambiosCompra));						
			this.jMenuItemGuardarCambiosTablaCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosCompra && this.isPermisoGuardarCambiosCompra));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoCompra=this.jButtonNuevoCompra.isVisible();
			this.isVisibilidadCeldaDuplicarCompra=this.jButtonDuplicarCompra.isVisible();
			this.isVisibilidadCeldaCopiarCompra=this.jButtonCopiarCompra.isVisible();
			this.isVisibilidadCeldaVerFormCompra=this.jButtonVerFormCompra.isVisible();
			
			this.isVisibilidadCeldaOrdenCompra=this.jButtonAbrirOrderByCompra.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesCompra=this.jButtonNuevoRelacionesCompra.isVisible();
			this.isVisibilidadCeldaModificarCompra=this.jButtonModificarCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormCompra!=null) {
			this.isVisibilidadCeldaActualizarCompra=this.jInternalFrameDetalleFormCompra.jButtonActualizarCompra.isVisible();
			this.isVisibilidadCeldaEliminarCompra=this.jInternalFrameDetalleFormCompra.jButtonEliminarCompra.isVisible();
			this.isVisibilidadCeldaCancelarCompra=this.jInternalFrameDetalleFormCompra.jButtonCancelarCompra.isVisible();
			this.isVisibilidadCeldaGuardarCompra=this.jInternalFrameDetalleFormCompra.jButtonGuardarCambiosCompra.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosCompra=this.jButtonGuardarCambiosTablaCompra.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoCompra=this.jButtonNuevoToolBarCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesCompra=this.jButtonNuevoRelacionesToolBarCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormCompra!=null) {
			this.isVisibilidadCeldaModificarCompra=this.jInternalFrameDetalleFormCompra.jButtonModificarToolBarCompra.isVisible();
			this.isVisibilidadCeldaActualizarCompra=this.jInternalFrameDetalleFormCompra.jButtonActualizarToolBarCompra.isVisible();
			this.isVisibilidadCeldaEliminarCompra=this.jInternalFrameDetalleFormCompra.jButtonEliminarToolBarCompra.isVisible();
			this.isVisibilidadCeldaCancelarCompra=this.jInternalFrameDetalleFormCompra.jButtonCancelarToolBarCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarCompra=this.jButtonGuardarCambiosToolBarCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosCompra=this.jButtonGuardarCambiosTablaToolBarCompra.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoCompra=this.jMenuItemNuevoCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesCompra=this.jMenuItemNuevoRelacionesCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormCompra!=null) {
			this.isVisibilidadCeldaModificarCompra=this.jInternalFrameDetalleFormCompra.jMenuItemModificarCompra.isVisible();
			this.isVisibilidadCeldaActualizarCompra=this.jInternalFrameDetalleFormCompra.jMenuItemActualizarCompra.isVisible();
			this.isVisibilidadCeldaEliminarCompra=this.jInternalFrameDetalleFormCompra.jMenuItemEliminarCompra.isVisible();
			this.isVisibilidadCeldaCancelarCompra=this.jInternalFrameDetalleFormCompra.jMenuItemCancelarCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarCompra=this.jMenuItemGuardarCambiosCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosCompra=this.jMenuItemGuardarCambiosTablaCompra.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesCompra(Boolean esInicializar) {
		if(CompraJInternalFrame.ISBINDING_MANUAL) {			
			if(this.compraSessionBean.getConGuardarRelaciones()) {
				//if(this.compraSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesCompra();
			}
			
			this.inicializarActualizarBindingBotonesManualCompra(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualCompra() {
		this.jButtonNuevoCompra.setVisible(this.isPermisoNuevoCompra);			
		this.jButtonDuplicarCompra.setVisible(this.isPermisoDuplicarCompra);			
		this.jButtonCopiarCompra.setVisible(this.isPermisoCopiarCompra);			
		this.jButtonVerFormCompra.setVisible(this.isPermisoVerFormCompra);			
		
		this.jButtonAbrirOrderByCompra.setVisible(this.isPermisoOrdenCompra);					
		
		this.jButtonNuevoRelacionesCompra.setVisible(this.isPermisoNuevoCompra);			
		
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCompra.jButtonModificarCompra.setVisible(this.isPermisoActualizarCompra);	
			this.jInternalFrameDetalleFormCompra.jButtonActualizarCompra.setVisible(this.isPermisoActualizarCompra);	
			this.jInternalFrameDetalleFormCompra.jButtonEliminarCompra.setVisible(this.isPermisoEliminarCompra);
			this.jInternalFrameDetalleFormCompra.jButtonCancelarCompra.setVisible(this.isVisibilidadCeldaCancelarCompra);						
			this.jInternalFrameDetalleFormCompra.jButtonGuardarCambiosCompra.setVisible(this.isPermisoGuardarCambiosCompra);							
		}
		
		this.jButtonGuardarCambiosTablaCompra.setVisible(this.isPermisoActualizarCompra);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleCompra() {
		this.jInternalFrameDetalleFormCompra.jButtonModificarCompra.setVisible(this.isPermisoActualizarCompra);	
		this.jInternalFrameDetalleFormCompra.jButtonActualizarCompra.setVisible(this.isPermisoActualizarCompra);	
		this.jInternalFrameDetalleFormCompra.jButtonEliminarCompra.setVisible(this.isPermisoEliminarCompra);
		this.jInternalFrameDetalleFormCompra.jButtonCancelarCompra.setVisible(this.isVisibilidadCeldaCancelarCompra);							
		this.jInternalFrameDetalleFormCompra.jButtonGuardarCambiosCompra.setVisible((this.isVisibilidadCeldaGuardarCompra && this.isPermisoGuardarCambiosCompra));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosCompra() {
		if(CompraJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualCompra();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesCompra() {
	}
	
	public void jTableDatosCompraListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarCompra(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.compra.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebCompra(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.compra.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderCompra.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.compra.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebCompra(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.compra.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderCompra.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.compra.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_moduloCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomodulo=true;

			idTienePermisomodulo=this.tienePermisosUsuarioEnPaginaWebCompra(ModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisomodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.moduloBeanSwingJInternalFrame=new ModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.moduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.moduloBeanSwingJInternalFrame.getModuloLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_modulo()!=null) {
					this.moduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.moduloBeanSwingJInternalFrame.setIdActual(this.compra.getid_modulo());
					this.moduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaModulo();
				}

				JInternalFrameBase jinternalFrame =this.moduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBordermodulo=(TitledBorder)this.moduloBeanSwingJInternalFrame.jScrollPanelDatosModulo.getBorder();

				titledBordermodulo.setTitle(titledBorderCompra.getTitle() + " -> Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_moduloCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_modulo = "+this.compra.getid_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebCompra(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.compra.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderCompra.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.compra.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebCompra(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.compra.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderCompra.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.compra.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebCompra(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.compra.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderCompra.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.compra.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebCompra(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.compra.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderCompra.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.compra.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_usuarioCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisousuario=true;

			idTienePermisousuario=this.tienePermisosUsuarioEnPaginaWebCompra(UsuarioConstantesFunciones.CLASSNAME);

			if(idTienePermisousuario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.usuarioBeanSwingJInternalFrame=new UsuarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.usuarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.usuarioBeanSwingJInternalFrame.getUsuarioLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_usuario()!=null) {
					this.usuarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.usuarioBeanSwingJInternalFrame.setIdActual(this.compra.getid_usuario());
					this.usuarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUsuario();
				}

				JInternalFrameBase jinternalFrame =this.usuarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBorderusuario=(TitledBorder)this.usuarioBeanSwingJInternalFrame.jScrollPanelDatosUsuario.getBorder();

				titledBorderusuario.setTitle(titledBorderCompra.getTitle() + " -> Usuario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_usuarioCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_usuario = "+this.compra.getid_usuario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.compra.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_entregaCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getfecha_entrega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_entrega = '"+Funciones2.getStringPostgresDate(this.compra.getfecha_entrega())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_secuencialCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getnumero_secuencial()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_secuencial like '%"+this.compra.getnumero_secuencial()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebCompra(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.compra.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderCompra.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.compra.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_cambioCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="TipoCambio";

			if(!this.sFinalQueryGeneral_tipocambio.equals("")) {
				this.tipocambioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_tipocambio);
				this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.tipocambioBeanSwingJInternalFrame.procesarBusqueda(this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda);
				this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTipoCambio(false);
			}

			if(!this.sFinalQueryComboTipoCambio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderCompra=null;
			TitledBorder titledBordertipocambio=null;

			if(!this.jScrollPanelDatosCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderCompra.getTitle() + " -> Tipo Cambio");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_tipo_cambioCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocambio=true;

			idTienePermisotipocambio=this.tienePermisosUsuarioEnPaginaWebCompra(TipoCambioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocambio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocambioBeanSwingJInternalFrame.getTipoCambioLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_tipo_cambio()!=null) {
					this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocambioBeanSwingJInternalFrame.setIdActual(this.compra.getid_tipo_cambio());
					this.tipocambioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCambio();
				}

				JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderCompra.getTitle() + " -> Tipo Cambio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_cambioCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_tipo_cambio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_cambio = "+this.compra.getid_tipo_cambio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_inventarioCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadoinventario=true;

			idTienePermisoestadoinventario=this.tienePermisosUsuarioEnPaginaWebCompra(EstadoInventarioConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadoinventario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.estadoinventarioBeanSwingJInternalFrame=new EstadoInventarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadoinventarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadoinventarioBeanSwingJInternalFrame.getEstadoInventarioLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_estado_inventario()!=null) {
					this.estadoinventarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadoinventarioBeanSwingJInternalFrame.setIdActual(this.compra.getid_estado_inventario());
					this.estadoinventarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadoinventarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadoinventarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoInventario();
				}

				JInternalFrameBase jinternalFrame =this.estadoinventarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBorderestadoinventario=(TitledBorder)this.estadoinventarioBeanSwingJInternalFrame.jScrollPanelDatosEstadoInventario.getBorder();

				titledBorderestadoinventario.setTitle(titledBorderCompra.getTitle() + " -> Estado Inventario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_inventarioCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_estado_inventario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_inventario = "+this.compra.getid_estado_inventario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderCompra=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderCompra.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebCompra(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.compra.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderCompra.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.compra.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formatoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformato=true;

			idTienePermisoformato=this.tienePermisosUsuarioEnPaginaWebCompra(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformato) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.formatoBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatoBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_formato()!=null) {
					this.formatoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatoBeanSwingJInternalFrame.setIdActual(this.compra.getid_formato());
					this.formatoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBorderformato=(TitledBorder)this.formatoBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformato.setTitle(titledBorderCompra.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formatoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_formato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato = "+this.compra.getid_formato().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleadoCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="Empleado";

			if(!this.sFinalQueryGeneral_empleado.equals("")) {
				this.empleadoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_empleado);
				this.empleadoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.empleadoBeanSwingJInternalFrame.procesarBusqueda(this.empleadoBeanSwingJInternalFrame.sAccionBusqueda);
				this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingEmpleado(false);
			}

			if(!this.sFinalQueryComboEmpleado.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderCompra=null;
			TitledBorder titledBorderempleado=null;

			if(!this.jScrollPanelDatosCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderCompra.getTitle() + " -> Empleado");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_empleadoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleado=true;

			idTienePermisoempleado=this.tienePermisosUsuarioEnPaginaWebCompra(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_empleado()!=null) {
					this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoBeanSwingJInternalFrame.setIdActual(this.compra.getid_empleado());
					this.empleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderCompra.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleadoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado = "+this.compra.getid_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_facturaCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getnumero_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_factura like '%"+this.compra.getnumero_factura()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transportistaCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransportista=true;

			idTienePermisotransportista=this.tienePermisosUsuarioEnPaginaWebCompra(TransportistaConstantesFunciones.CLASSNAME);

			if(idTienePermisotransportista) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.transportistaBeanSwingJInternalFrame=new TransportistaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transportistaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transportistaBeanSwingJInternalFrame.getTransportistaLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_transportista()!=null) {
					this.transportistaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transportistaBeanSwingJInternalFrame.setIdActual(this.compra.getid_transportista());
					this.transportistaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transportistaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transportistaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransportista();
				}

				JInternalFrameBase jinternalFrame =this.transportistaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBordertransportista=(TitledBorder)this.transportistaBeanSwingJInternalFrame.jScrollPanelDatosTransportista.getBorder();

				titledBordertransportista.setTitle(titledBorderCompra.getTitle() + " -> Transportista");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transportistaCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_transportista()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transportista = "+this.compra.getid_transportista().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.compra.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_orden_compraCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.ordencompraBeanSwingJInternalFrame=new OrdenCompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.ordencompraBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.ordencompraBeanSwingJInternalFrame.sTipoBusqueda="OrdenCompra";

			if(!this.sFinalQueryGeneral_ordencompra.equals("")) {
				this.ordencompraBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_ordencompra);
				this.ordencompraBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.ordencompraBeanSwingJInternalFrame.procesarBusqueda(this.ordencompraBeanSwingJInternalFrame.sAccionBusqueda);
				this.ordencompraBeanSwingJInternalFrame.inicializarActualizarBindingOrdenCompra(false);
			}

			if(!this.sFinalQueryComboOrdenCompra.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.ordencompraBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderCompra=null;
			TitledBorder titledBorderordencompra=null;

			if(!this.jScrollPanelDatosCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				titledBorderordencompra=(TitledBorder)this.ordencompraBeanSwingJInternalFrame.jScrollPanelDatosOrdenCompra.getBorder();

				titledBorderordencompra.setTitle(titledBorderCompra.getTitle() + " -> OrdenCompra");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_orden_compraCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoordencompra=true;

			idTienePermisoordencompra=this.tienePermisosUsuarioEnPaginaWebCompra(OrdenCompraConstantesFunciones.CLASSNAME);

			if(idTienePermisoordencompra) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.ordencompraBeanSwingJInternalFrame=new OrdenCompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ordencompraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ordencompraBeanSwingJInternalFrame.getOrdenCompraLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_orden_compra()!=null) {
					this.ordencompraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ordencompraBeanSwingJInternalFrame.setIdActual(this.compra.getid_orden_compra());
					this.ordencompraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ordencompraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ordencompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaOrdenCompra();
				}

				JInternalFrameBase jinternalFrame =this.ordencompraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBorderordencompra=(TitledBorder)this.ordencompraBeanSwingJInternalFrame.jScrollPanelDatosOrdenCompra.getBorder();

				titledBorderordencompra.setTitle(titledBorderCompra.getTitle() + " -> OrdenCompra");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_orden_compraCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_orden_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_orden_compra = "+this.compra.getid_orden_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_pedido_compraCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.pedidocompraBeanSwingJInternalFrame=new PedidoCompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.pedidocompraBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.pedidocompraBeanSwingJInternalFrame.sTipoBusqueda="PedidoCompra";

			if(!this.sFinalQueryGeneral_pedidocompra.equals("")) {
				this.pedidocompraBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_pedidocompra);
				this.pedidocompraBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.pedidocompraBeanSwingJInternalFrame.procesarBusqueda(this.pedidocompraBeanSwingJInternalFrame.sAccionBusqueda);
				this.pedidocompraBeanSwingJInternalFrame.inicializarActualizarBindingPedidoCompra(false);
			}

			if(!this.sFinalQueryComboPedidoCompra.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.pedidocompraBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderCompra=null;
			TitledBorder titledBorderpedidocompra=null;

			if(!this.jScrollPanelDatosCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				titledBorderpedidocompra=(TitledBorder)this.pedidocompraBeanSwingJInternalFrame.jScrollPanelDatosPedidoCompra.getBorder();

				titledBorderpedidocompra.setTitle(titledBorderCompra.getTitle() + " -> Pedido Compra");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_pedido_compraCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopedidocompra=true;

			idTienePermisopedidocompra=this.tienePermisosUsuarioEnPaginaWebCompra(PedidoCompraConstantesFunciones.CLASSNAME);

			if(idTienePermisopedidocompra) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.pedidocompraBeanSwingJInternalFrame=new PedidoCompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.pedidocompraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.pedidocompraBeanSwingJInternalFrame.getPedidoCompraLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_pedido_compra()!=null) {
					this.pedidocompraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.pedidocompraBeanSwingJInternalFrame.setIdActual(this.compra.getid_pedido_compra());
					this.pedidocompraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.pedidocompraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.pedidocompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaPedidoCompra();
				}

				JInternalFrameBase jinternalFrame =this.pedidocompraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBorderpedidocompra=(TitledBorder)this.pedidocompraBeanSwingJInternalFrame.jScrollPanelDatosPedidoCompra.getBorder();

				titledBorderpedidocompra.setTitle(titledBorderCompra.getTitle() + " -> Pedido Compra");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_pedido_compraCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_pedido_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_pedido_compra = "+this.compra.getid_pedido_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonautori_usuarioCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getautori_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where autori_usuario like '%"+this.compra.getautori_usuario()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfactura_inicialCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getfactura_inicial()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where factura_inicial like '%"+this.compra.getfactura_inicial()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfactura_finalCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getfactura_final()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where factura_final like '%"+this.compra.getfactura_final()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonservicio_documentoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getservicio_documento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where servicio_documento like '%"+this.compra.getservicio_documento()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_valorCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getfecha_valor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_valor = '"+Funciones2.getStringPostgresDate(this.compra.getfecha_valor())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentaje_descuentoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getporcentaje_descuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje_descuento = "+this.compra.getporcentaje_descuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsumanCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getsuman()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where suman = "+this.compra.getsuman().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoniceCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ice = "+this.compra.getice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_descuentoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getvalor_descuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_descuento = "+this.compra.getvalor_descuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_descuentoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.gettotal_descuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_descuento = "+this.compra.gettotal_descuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonivaCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getiva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where iva = "+this.compra.getiva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonstockCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getstock()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where stock = "+this.compra.getstock().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsub_totalCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getsub_total()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where sub_total = "+this.compra.getsub_total().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_otroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.gettotal_otro()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_otro = "+this.compra.gettotal_otro().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonultimo_costoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getultimo_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ultimo_costo = "+this.compra.getultimo_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_itemsCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getnumero_items()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_items = "+this.compra.getnumero_items().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonretencionCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getretencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where retencion = "+this.compra.getretencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.compra.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfleteCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getflete()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where flete = "+this.compra.getflete().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonimpuestoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getimpuesto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where impuesto = "+this.compra.getimpuesto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_transaccion_moduloCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipotransaccionmodulo=true;

			idTienePermisotipotransaccionmodulo=this.tienePermisosUsuarioEnPaginaWebCompra(TipoTransaccionModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisotipotransaccionmodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.tipotransaccionmoduloBeanSwingJInternalFrame=new TipoTransaccionModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipotransaccionmoduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipotransaccionmoduloBeanSwingJInternalFrame.getTipoTransaccionModuloLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_tipo_transaccion_modulo()!=null) {
					this.tipotransaccionmoduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipotransaccionmoduloBeanSwingJInternalFrame.setIdActual(this.compra.getid_tipo_transaccion_modulo());
					this.tipotransaccionmoduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipotransaccionmoduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipotransaccionmoduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoTransaccionModulo();
				}

				JInternalFrameBase jinternalFrame =this.tipotransaccionmoduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBordertipotransaccionmodulo=(TitledBorder)this.tipotransaccionmoduloBeanSwingJInternalFrame.jScrollPanelDatosTipoTransaccionModulo.getBorder();

				titledBordertipotransaccionmodulo.setTitle(titledBorderCompra.getTitle() + " -> Tipo Transaccion Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_transaccion_moduloCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_tipo_transaccion_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_transaccion_modulo = "+this.compra.getid_tipo_transaccion_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_asiento_contableCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="AsientoContable";

			if(!this.sFinalQueryGeneral_asientocontable.equals("")) {
				this.asientocontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_asientocontable);
				this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.asientocontableBeanSwingJInternalFrame.procesarBusqueda(this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingAsientoContable(false);
			}

			if(!this.sFinalQueryComboAsientoContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderCompra=null;
			TitledBorder titledBorderasientocontable=null;

			if(!this.jScrollPanelDatosCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderCompra.getTitle() + " -> Asiento Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_asiento_contableCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoasientocontable=true;

			idTienePermisoasientocontable=this.tienePermisosUsuarioEnPaginaWebCompra(AsientoContableConstantesFunciones.CLASSNAME);

			if(idTienePermisoasientocontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);

				this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.asientocontableBeanSwingJInternalFrame.getAsientoContableLogic().setConnexion(this.compraLogic.getConnexion());

				if(this.compra.getid_asiento_contable()!=null) {
					this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.asientocontableBeanSwingJInternalFrame.setIdActual(this.compra.getid_asiento_contable());
					this.asientocontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsientoContable();
				}

				JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCompra=(TitledBorder)this.jScrollPanelDatosCompra.getBorder();
				TitledBorder titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderCompra.getTitle() + " -> Asiento Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_asiento_contableCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getid_asiento_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_asiento_contable = "+this.compra.getid_asiento_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_comprobanteCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getnumero_comprobante()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_comprobante like '%"+this.compra.getnumero_comprobante()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCompra(this.getcompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.compra==null) {
						this.compra = new Compra();
					}

					this.setVariablesFormularioToObjetoActualCompra(this.compra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);
				}

				if(this.compra.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.compra.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdAnio();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdAsientoContableCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdAsientoContable();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdCliente();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdEjercicio();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdEmpleado();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdEmpresa();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoInventarioCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdEstadoInventario();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdFormato();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdMes();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdModuloCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdModulo();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdMoneda();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdOrdenCompraCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdOrdenCompra();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPedidoCompraCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdPedidoCompra();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdPeriodo();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdSucursal();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCambioCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdTipoCambio();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoTransaccionModuloCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdTipoTransaccionModulo();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransportistaCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdTransportista();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUsuarioCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCompra(false,false);

			this.getComprasFK_IdUsuario();

			this.inicializarActualizarBindingCompra(false);

			//if(CompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.compraLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameCompra() {
		if(this.jInternalFrameDetalleFormCompra!=null) {
		

		if(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormCompra!=null) {
			this.jInternalFrameDetalleFormCompra.setVisible(false);	    			
			this.jInternalFrameDetalleFormCompra.dispose();
			this.jInternalFrameDetalleFormCompra=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoCompra!=null) {
			this.jInternalFrameReporteDinamicoCompra.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoCompra.dispose();
			this.jInternalFrameReporteDinamicoCompra=null;
		}
		
		if(this.jInternalFrameImportacionCompra!=null) {
			this.jInternalFrameImportacionCompra.setVisible(false);	    			
			this.jInternalFrameImportacionCompra.dispose();
			this.jInternalFrameImportacionCompra=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessCompra();
			
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			
			
			if(sTipo.equals("NuevoCompra")) {
				jButtonNuevoCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarCompra")) {
				jButtonDuplicarCompraActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarCompra")) {
				jButtonCopiarCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormCompra")) {
				jButtonVerFormCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarCompra")) {
				jButtonNuevoCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarCompra")) {
				jButtonDuplicarCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoCompra")) {
				jButtonNuevoCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarCompra")) {
				jButtonDuplicarCompraActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesCompra")) {
				jButtonNuevoCompraActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarCompra")) {
				jButtonNuevoCompraActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesCompra")) {
				jButtonNuevoCompraActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarCompra")) {
				jButtonModificarCompraActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarCompra")) {
				jButtonModificarCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarCompra")) {
				jButtonModificarCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarCompra")) {
				jButtonActualizarCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarCompra")) {
				jButtonActualizarCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarCompra")) {
				jButtonActualizarCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarCompra")) {
				jButtonEliminarCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarCompra")) {
				jButtonEliminarCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarCompra")) {
				jButtonEliminarCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarCompra")) {
				jButtonCancelarCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarCompra")) {
				jButtonCancelarCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarCompra")) {
				jButtonCancelarCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarCompra")) {
				jButtonCerrarCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarCompra")) {
				jButtonCerrarCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarCompra")) {
				jButtonCerrarCompraActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarCompra")) {
				jButtonMostrarOcultarCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarCompra")) {
				jButtonCancelarCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosCompra")) {
				jButtonGuardarCambiosCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarCompra")) {
				jButtonGuardarCambiosCompraActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarCompra")) {
				jButtonCopiarCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarCompra")) {
				jButtonVerFormCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosCompra")) {
				jButtonGuardarCambiosCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarCompra")) {
				jButtonCopiarCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormCompra")) {
				jButtonVerFormCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaCompra")) {
				jButtonGuardarCambiosCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarCompra")) {
				jButtonGuardarCambiosCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaCompra")) {
				jButtonGuardarCambiosCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionCompra")) {
				jButtonRecargarInformacionCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarCompra")) {
				jButtonRecargarInformacionCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionCompra")) {
				jButtonRecargarInformacionCompraActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresCompra")) {
				jButtonAnterioresCompraActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarCompra")) {
				jButtonAnterioresCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreCompra")) {
				jButtonAnterioresCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesCompra")) {
				jButtonSiguientesCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarCompra")) {
				jButtonSiguientesCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesCompra")) {
				jButtonSiguientesCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByCompra") || sTipo.equals("MenuItemDetalleAbrirOrderByCompra")) {
				jButtonAbrirOrderByCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarCompra") || sTipo.equals("MenuItemDetalleMostrarOcultarCompra")) {
				jButtonMostrarOcultarCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosCompra")) {
				jButtonNuevoGuardarCambiosCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarCompra")) {
				jButtonNuevoGuardarCambiosCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosCompra")) {
				jButtonNuevoGuardarCambiosCompraActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoCompra")) {
				jButtonCerrarReporteDinamicoCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoCompra")) {
				jButtonGenerarReporteDinamicoCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoCompra")) {
				
				jButtonGenerarExcelReporteDinamicoCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionCompra")) {
				jButtonCerrarImportacionCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionCompra")) {
				
				jButtonGenerarImportacionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionCompra")) {
				
				jButtonAbrirImportacionCompraActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesCompra")) {
				jComboBoxTiposAccionesCompraActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesCompra")) {
				jComboBoxTiposRelacionesCompraActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioCompra")) {
				jComboBoxTiposAccionesCompraActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarCompra")) {
				
				jComboBoxTiposSeleccionarCompraActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralCompra")) {
				jTextFieldValorCampoGeneralCompraActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByCompra")) {
				jButtonAbrirOrderByCompraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarCompra")) {
				jButtonAbrirOrderByCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByCompra")) {
				jButtonCerrarOrderByCompraActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idCompraBusqueda")) {
				this.jButtonidCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaCompraUpdate")) {
				this.jButtonid_empresaCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaCompraBusqueda")) {
				this.jButtonid_empresaCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalCompraUpdate")) {
				this.jButtonid_sucursalCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalCompraBusqueda")) {
				this.jButtonid_sucursalCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloCompraUpdate")) {
				this.jButtonid_moduloCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloCompraBusqueda")) {
				this.jButtonid_moduloCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioCompraUpdate")) {
				this.jButtonid_ejercicioCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioCompraBusqueda")) {
				this.jButtonid_ejercicioCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoCompraUpdate")) {
				this.jButtonid_periodoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoCompraBusqueda")) {
				this.jButtonid_periodoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioCompraUpdate")) {
				this.jButtonid_anioCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioCompraBusqueda")) {
				this.jButtonid_anioCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesCompraUpdate")) {
				this.jButtonid_mesCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesCompraBusqueda")) {
				this.jButtonid_mesCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioCompraUpdate")) {
				this.jButtonid_usuarioCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioCompraBusqueda")) {
				this.jButtonid_usuarioCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionCompraBusqueda")) {
				this.jButtonfecha_emisionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_entregaCompraBusqueda")) {
				this.jButtonfecha_entregaCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_secuencialCompraBusqueda")) {
				this.jButtonnumero_secuencialCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaCompraUpdate")) {
				this.jButtonid_monedaCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaCompraBusqueda")) {
				this.jButtonid_monedaCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioCompra")) {
				this.jButtonid_tipo_cambioCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioCompraUpdate")) {
				this.jButtonid_tipo_cambioCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioCompraBusqueda")) {
				this.jButtonid_tipo_cambioCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_inventarioCompraUpdate")) {
				this.jButtonid_estado_inventarioCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_inventarioCompraBusqueda")) {
				this.jButtonid_estado_inventarioCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteCompra")) {
				this.jButtonid_clienteCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteCompraUpdate")) {
				this.jButtonid_clienteCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteCompraBusqueda")) {
				this.jButtonid_clienteCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoCompraUpdate")) {
				this.jButtonid_formatoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoCompraBusqueda")) {
				this.jButtonid_formatoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoCompra")) {
				this.jButtonid_empleadoCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoCompraUpdate")) {
				this.jButtonid_empleadoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoCompraBusqueda")) {
				this.jButtonid_empleadoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_facturaCompraBusqueda")) {
				this.jButtonnumero_facturaCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportistaCompraUpdate")) {
				this.jButtonid_transportistaCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportistaCompraBusqueda")) {
				this.jButtonid_transportistaCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionCompraBusqueda")) {
				this.jButtondescripcionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_orden_compraCompra")) {
				this.jButtonid_orden_compraCompraActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_orden_compraCompraArbol")) {
				this.abrirFrameTreeOrdenCompra("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_orden_compraCompraUpdate")) {
				this.jButtonid_orden_compraCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_orden_compraCompraBusqueda")) {
				this.jButtonid_orden_compraCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_pedido_compraCompra")) {
				this.jButtonid_pedido_compraCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_pedido_compraCompraUpdate")) {
				this.jButtonid_pedido_compraCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_pedido_compraCompraBusqueda")) {
				this.jButtonid_pedido_compraCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("autori_usuarioCompraBusqueda")) {
				this.jButtonautori_usuarioCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("factura_inicialCompraBusqueda")) {
				this.jButtonfactura_inicialCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("factura_finalCompraBusqueda")) {
				this.jButtonfactura_finalCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("servicio_documentoCompraBusqueda")) {
				this.jButtonservicio_documentoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_valorCompraBusqueda")) {
				this.jButtonfecha_valorCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_descuentoCompraBusqueda")) {
				this.jButtonporcentaje_descuentoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sumanCompraBusqueda")) {
				this.jButtonsumanCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iceCompraBusqueda")) {
				this.jButtoniceCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_descuentoCompraBusqueda")) {
				this.jButtonvalor_descuentoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_descuentoCompraBusqueda")) {
				this.jButtontotal_descuentoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaCompraBusqueda")) {
				this.jButtonivaCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("stockCompraBusqueda")) {
				this.jButtonstockCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sub_totalCompraBusqueda")) {
				this.jButtonsub_totalCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_otroCompraBusqueda")) {
				this.jButtontotal_otroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ultimo_costoCompraBusqueda")) {
				this.jButtonultimo_costoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_itemsCompraBusqueda")) {
				this.jButtonnumero_itemsCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("retencionCompraBusqueda")) {
				this.jButtonretencionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalCompraBusqueda")) {
				this.jButtontotalCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fleteCompraBusqueda")) {
				this.jButtonfleteCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("impuestoCompraBusqueda")) {
				this.jButtonimpuestoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloCompraUpdate")) {
				this.jButtonid_tipo_transaccion_moduloCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloCompraBusqueda")) {
				this.jButtonid_tipo_transaccion_moduloCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableCompra")) {
				this.jButtonid_asiento_contableCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableCompraUpdate")) {
				this.jButtonid_asiento_contableCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableCompraBusqueda")) {
				this.jButtonid_asiento_contableCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_comprobanteCompraBusqueda")) {
				this.jButtonnumero_comprobanteCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaCompraBusqueda")) {
				this.jButtonfechaCompraBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_asiento_contableCompra")) {
				this.jButtonid_asiento_contableCompraActionPerformed(evt);
			}
			else if(sTipo.equals("id_clienteCompra")) {
				this.jButtonid_clienteCompraActionPerformed(evt);
			}
			else if(sTipo.equals("id_empleadoCompra")) {
				this.jButtonid_empleadoCompraActionPerformed(evt);
			}
			else if(sTipo.equals("id_orden_compraCompra")) {
				this.jButtonid_orden_compraCompraActionPerformed(evt);
			}
			else if(sTipo.equals("id_pedido_compraCompra")) {
				this.jButtonid_pedido_compraCompraActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdAsientoContableCompra")) {
				this.jButtonFK_IdAsientoContableCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClienteCompra")) {
				this.jButtonFK_IdClienteCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpleadoCompra")) {
				this.jButtonFK_IdEmpleadoCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoInventarioCompra")) {
				this.jButtonFK_IdEstadoInventarioCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdOrdenCompraCompra")) {
				this.jButtonFK_IdOrdenCompraCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdPedidoCompraCompra")) {
				this.jButtonFK_IdPedidoCompraCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoTransaccionModuloCompra")) {
				this.jButtonFK_IdTipoTransaccionModuloCompraActionPerformed(evt);
			}
			
			;
			
			
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessCompra();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaCompraActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.compra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.compra);
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				
				


			if(sTipo.equals("porcentaje_descuentoCompra")) {
				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("valor_descuentoCompra")) {
				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Compra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Compra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			Compra compraLocal=null;
			
			if(!this.getEsControlTabla()) {
				compraLocal=this.compra;
			} else {
				compraLocal=this.compraAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


				if(sTipo.equals("porcentaje_descuentoCompra")) {
					if(compraLocal.getporcentaje_descuento()==Double.parseDouble(this.jInternalFrameDetalleFormCompra.jTextFieldporcentaje_descuentoCompra.getText())){existeCambio=false;};
				}
				 else if(sTipo.equals("valor_descuentoCompra")) {
					if(compraLocal.getvalor_descuento()==Double.parseDouble(this.jInternalFrameDetalleFormCompra.jTextFieldvalor_descuentoCompra.getText())){existeCambio=false;};
				}
			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.compra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.compra);
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
							
				
				


			if(sTipo.equals("porcentaje_descuentoCompra")) {
				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("valor_descuentoCompra")) {
				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Compra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Compra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraAnterior =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.compraAnterior =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			if(sTipo.equals("porcentaje_descuentoCompra")) {
				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("valor_descuentoCompra")) {
				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.compra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.compra);
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
								
						
				


				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Compra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Compra.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.compra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.compra);
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
								
				
				


				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Compra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Compra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraAnterior =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.compraAnterior =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.compra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.compra);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraAnterior =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.compraAnterior =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.compra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.compra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.compra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.compra);
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
							
				
				


				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Compra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Compra.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compraAnterior =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.compraAnterior =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaCompraActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.compra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.compra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.compra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.compra);
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
								
				
				


			if(sTipo.equals("porcentaje_descuentoCompra")) {
				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("valor_descuentoCompra")) {
				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Compra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Compra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraAnterior =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.compraAnterior =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.compra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.compra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.compra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.compra);
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosCompra")) {
					jCheckBoxSeleccionarTodosCompraItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosCompra")) {
					jCheckBoxSeleccionadosCompraItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarCompra")) {
					
				}
				
				


				
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Compra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Compra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.compra);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.compra);
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
												
				
				


				
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Compra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Compra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.compraAnterior =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.compraAnterior =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaCompraActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.compra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.compra);
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_clienteCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra;
				}

				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.procesarActionsCombosForeignKeyCliente(jComboBoxGenerico,"Formulario");

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_clienteFK_IdClienteCompra")) {
				this.procesarActionsCombosForeignKeyCliente(jComboBoxid_clienteFK_IdClienteCompra,"FK_IdCliente");
				//recargarFormCompraCliente(jComboBoxid_clienteFK_IdClienteCompra,"FK_IdCliente");
			}
			 else if(sTipo.equals("id_orden_compraCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra;
				}

				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.procesarActionsCombosForeignKeyOrdenCompra(jComboBoxGenerico,"Formulario");

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_orden_compraFK_IdOrdenCompraCompra")) {
				this.procesarActionsCombosForeignKeyOrdenCompra(jComboBoxid_orden_compraFK_IdOrdenCompraCompra,"FK_IdOrdenCompra");
				//recargarFormCompraOrdenCompra(jComboBoxid_orden_compraFK_IdOrdenCompraCompra,"FK_IdOrdenCompra");
			}
			 else if(sTipo.equals("id_pedido_compraCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra;
				}

				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.procesarActionsCombosForeignKeyPedidoCompra(jComboBoxGenerico,"Formulario");

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_pedido_compraFK_IdPedidoCompraCompra")) {
				this.procesarActionsCombosForeignKeyPedidoCompra(jComboBoxid_pedido_compraFK_IdPedidoCompraCompra,"FK_IdPedidoCompra");
				//recargarFormCompraPedidoCompra(jComboBoxid_pedido_compraFK_IdPedidoCompraCompra,"FK_IdPedidoCompra");
			}
			
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaCompraActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.compra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.compra);
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_clienteCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra;
				}

				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.procesarActionsCombosForeignKeyCliente(jComboBoxGenerico,"Formulario");

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_clienteFK_IdClienteCompra")) {
				this.procesarActionsCombosForeignKeyCliente(jComboBoxid_clienteFK_IdClienteCompra,"FK_IdCliente");
				//recargarFormCompraCliente(jComboBoxid_clienteFK_IdClienteCompra,"FK_IdCliente");
			}
			 else if(sTipo.equals("id_orden_compraCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra;
				}

				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.procesarActionsCombosForeignKeyOrdenCompra(jComboBoxGenerico,"Formulario");

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_orden_compraFK_IdOrdenCompraCompra")) {
				this.procesarActionsCombosForeignKeyOrdenCompra(jComboBoxid_orden_compraFK_IdOrdenCompraCompra,"FK_IdOrdenCompra");
				//recargarFormCompraOrdenCompra(jComboBoxid_orden_compraFK_IdOrdenCompraCompra,"FK_IdOrdenCompra");
			}
			 else if(sTipo.equals("id_pedido_compraCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra;
				}

				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.procesarActionsCombosForeignKeyPedidoCompra(jComboBoxGenerico,"Formulario");

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_pedido_compraFK_IdPedidoCompraCompra")) {
				this.procesarActionsCombosForeignKeyPedidoCompra(jComboBoxid_pedido_compraFK_IdPedidoCompraCompra,"FK_IdPedidoCompra");
				//recargarFormCompraPedidoCompra(jComboBoxid_pedido_compraFK_IdPedidoCompraCompra,"FK_IdPedidoCompra");
			}
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Compra.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Compra.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.compra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.compra);
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_clienteCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra;
				}

				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.procesarActionsCombosForeignKeyCliente(jComboBoxGenerico,"Formulario");

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_clienteFK_IdClienteCompra")) {
				this.procesarActionsCombosForeignKeyCliente(jComboBoxid_clienteFK_IdClienteCompra,"FK_IdCliente");
				//recargarFormCompraCliente(jComboBoxid_clienteFK_IdClienteCompra,"FK_IdCliente");
			}
			 else if(sTipo.equals("id_orden_compraCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra;
				}

				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.procesarActionsCombosForeignKeyOrdenCompra(jComboBoxGenerico,"Formulario");

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_orden_compraFK_IdOrdenCompraCompra")) {
				this.procesarActionsCombosForeignKeyOrdenCompra(jComboBoxid_orden_compraFK_IdOrdenCompraCompra,"FK_IdOrdenCompra");
				//recargarFormCompraOrdenCompra(jComboBoxid_orden_compraFK_IdOrdenCompraCompra,"FK_IdOrdenCompra");
			}
			 else if(sTipo.equals("id_pedido_compraCompra")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra;
				}

				if(this.compraSessionBean.getConGuardarRelaciones()) {
					//classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.procesarActionsCombosForeignKeyPedidoCompra(jComboBoxGenerico,"Formulario");

				this.recargarFormCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_pedido_compraFK_IdPedidoCompraCompra")) {
				this.procesarActionsCombosForeignKeyPedidoCompra(jComboBoxid_pedido_compraFK_IdPedidoCompraCompra,"FK_IdPedidoCompra");
				//recargarFormCompraPedidoCompra(jComboBoxid_pedido_compraFK_IdPedidoCompraCompra,"FK_IdPedidoCompra");
			}
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Compra.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Compra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.compraAnterior =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.compraAnterior =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarCompra")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosCompra.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.compra =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.compra =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.compra);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarCompra")) {
				
				}
				
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarCompra")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosCompra.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarCompra")) {
			
			}
			
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessCompra();
			
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			
			if(sTipo.equals("NuevoCompra")) {
				jButtonNuevoCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarCompra")) {
				jButtonDuplicarCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarCompra")) {
				jButtonCopiarCompraActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormCompra")) {
				jButtonVerFormCompraActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesCompra")) {
				jButtonNuevoCompraActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarCompra")) {
				jButtonModificarCompraActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarCompra")) {
				jButtonActualizarCompraActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarCompra")) {
				jButtonEliminarCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaCompra")) {
				jButtonGuardarCambiosCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarCompra")) {
				jButtonCancelarCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarCompra")) {
				jButtonCerrarCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosCompra")) {
				jButtonGuardarCambiosCompraActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosCompra")) {
				jButtonNuevoGuardarCambiosCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByCompra")) {
				jButtonAbrirOrderByCompraActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionCompra")) {
				jButtonRecargarInformacionCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresCompra")) {
				jButtonAnterioresCompraActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesCompra")) {
				jButtonSiguientesCompraActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idCompraBusqueda")) {
				this.jButtonidCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaCompraUpdate")) {
				this.jButtonid_empresaCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaCompraBusqueda")) {
				this.jButtonid_empresaCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalCompraUpdate")) {
				this.jButtonid_sucursalCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalCompraBusqueda")) {
				this.jButtonid_sucursalCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloCompraUpdate")) {
				this.jButtonid_moduloCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloCompraBusqueda")) {
				this.jButtonid_moduloCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioCompraUpdate")) {
				this.jButtonid_ejercicioCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioCompraBusqueda")) {
				this.jButtonid_ejercicioCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoCompraUpdate")) {
				this.jButtonid_periodoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoCompraBusqueda")) {
				this.jButtonid_periodoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioCompraUpdate")) {
				this.jButtonid_anioCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioCompraBusqueda")) {
				this.jButtonid_anioCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesCompraUpdate")) {
				this.jButtonid_mesCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesCompraBusqueda")) {
				this.jButtonid_mesCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioCompraUpdate")) {
				this.jButtonid_usuarioCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioCompraBusqueda")) {
				this.jButtonid_usuarioCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionCompraBusqueda")) {
				this.jButtonfecha_emisionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_entregaCompraBusqueda")) {
				this.jButtonfecha_entregaCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_secuencialCompraBusqueda")) {
				this.jButtonnumero_secuencialCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaCompraUpdate")) {
				this.jButtonid_monedaCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaCompraBusqueda")) {
				this.jButtonid_monedaCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioCompra")) {
				this.jButtonid_tipo_cambioCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioCompraUpdate")) {
				this.jButtonid_tipo_cambioCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioCompraBusqueda")) {
				this.jButtonid_tipo_cambioCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_inventarioCompraUpdate")) {
				this.jButtonid_estado_inventarioCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_inventarioCompraBusqueda")) {
				this.jButtonid_estado_inventarioCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteCompra")) {
				this.jButtonid_clienteCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteCompraUpdate")) {
				this.jButtonid_clienteCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteCompraBusqueda")) {
				this.jButtonid_clienteCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoCompraUpdate")) {
				this.jButtonid_formatoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoCompraBusqueda")) {
				this.jButtonid_formatoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoCompra")) {
				this.jButtonid_empleadoCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoCompraUpdate")) {
				this.jButtonid_empleadoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoCompraBusqueda")) {
				this.jButtonid_empleadoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_facturaCompraBusqueda")) {
				this.jButtonnumero_facturaCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportistaCompraUpdate")) {
				this.jButtonid_transportistaCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportistaCompraBusqueda")) {
				this.jButtonid_transportistaCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionCompraBusqueda")) {
				this.jButtondescripcionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_orden_compraCompra")) {
				this.jButtonid_orden_compraCompraActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_orden_compraCompraArbol")) {
				this.abrirFrameTreeOrdenCompra("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_orden_compraCompraUpdate")) {
				this.jButtonid_orden_compraCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_orden_compraCompraBusqueda")) {
				this.jButtonid_orden_compraCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_pedido_compraCompra")) {
				this.jButtonid_pedido_compraCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_pedido_compraCompraUpdate")) {
				this.jButtonid_pedido_compraCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_pedido_compraCompraBusqueda")) {
				this.jButtonid_pedido_compraCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("autori_usuarioCompraBusqueda")) {
				this.jButtonautori_usuarioCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("factura_inicialCompraBusqueda")) {
				this.jButtonfactura_inicialCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("factura_finalCompraBusqueda")) {
				this.jButtonfactura_finalCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("servicio_documentoCompraBusqueda")) {
				this.jButtonservicio_documentoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_valorCompraBusqueda")) {
				this.jButtonfecha_valorCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_descuentoCompraBusqueda")) {
				this.jButtonporcentaje_descuentoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sumanCompraBusqueda")) {
				this.jButtonsumanCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iceCompraBusqueda")) {
				this.jButtoniceCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_descuentoCompraBusqueda")) {
				this.jButtonvalor_descuentoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_descuentoCompraBusqueda")) {
				this.jButtontotal_descuentoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaCompraBusqueda")) {
				this.jButtonivaCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("stockCompraBusqueda")) {
				this.jButtonstockCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sub_totalCompraBusqueda")) {
				this.jButtonsub_totalCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_otroCompraBusqueda")) {
				this.jButtontotal_otroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ultimo_costoCompraBusqueda")) {
				this.jButtonultimo_costoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_itemsCompraBusqueda")) {
				this.jButtonnumero_itemsCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("retencionCompraBusqueda")) {
				this.jButtonretencionCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalCompraBusqueda")) {
				this.jButtontotalCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fleteCompraBusqueda")) {
				this.jButtonfleteCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("impuestoCompraBusqueda")) {
				this.jButtonimpuestoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloCompraUpdate")) {
				this.jButtonid_tipo_transaccion_moduloCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloCompraBusqueda")) {
				this.jButtonid_tipo_transaccion_moduloCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableCompra")) {
				this.jButtonid_asiento_contableCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableCompraUpdate")) {
				this.jButtonid_asiento_contableCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableCompraBusqueda")) {
				this.jButtonid_asiento_contableCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_comprobanteCompraBusqueda")) {
				this.jButtonnumero_comprobanteCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaCompraBusqueda")) {
				this.jButtonfechaCompraBusquedaActionPerformed(evt);
			}
			
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessCompra();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameCompra")) {
				closingInternalFrameCompra();
				
			} else if(sTipo.equals("jButtonCancelarCompra")) {
				JInternalFrameBase jInternalFrameDetalleFormCompra = (JInternalFrameBase)evt.getSource();
	            	
	            CompraBeanSwingJInternalFrame jInternalFrameParent=(CompraBeanSwingJInternalFrame)jInternalFrameDetalleFormCompra.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarCompraActionPerformed(null);
			}
			
			CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.compra,new Object(),this.compraParameterGeneral,this.compraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.compra)) {
			if(!esControlTabla) {
				if(CompraJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualCompra(this.compra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);			
				}
				
				if(this.compraSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualCompra(this.compra,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.compraReturnGeneral=compraLogic.procesarEventosComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.compraLogic.getCompras(),this.compra,this.compraParameterGeneral,this.isEsNuevoCompra,classes);//this.compraLogic.getCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanCompra(this.compraReturnGeneral,this.compraBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.compraSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanCompra(classes,this.compraReturnGeneral,this.compraBean,false);
					}
						
					if(this.compraReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyCompra(this.compraReturnGeneral.getCompra());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioCompra(this.compraReturnGeneral.getCompra());	
					}
						
					if(this.compraReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioCompra(this.compraReturnGeneral.getCompra(),classes);//this.compraBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioCompra(this.compra,classes);//this.compraBean);									
				}
			
				if(CompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualCompra(this.compra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysCompra(this.compra);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.compraAnterior!=null) {
						this.compra=this.compraAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.compraReturnGeneral=compraLogic.procesarEventosComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.compraLogic.getCompras(),this.compra,this.compraParameterGeneral,this.isEsNuevoCompra,classes);//this.compraLogic.getCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.compraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.compraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.compraReturnGeneral.getCompra(),compraLogic.getCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.compraReturnGeneral.getCompra(),this.compras);
				}
				//ARCHITECTURE
				
				//this.jTableDatosCompra.repaint();
				
				//((AbstractTableModel) this.jTableDatosCompra.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosCompra();
			}
		}
	}
	
	public void actualizarVisualTableDatosCompra() throws Exception {
		
		CompraModel compraModel=(CompraModel)this.jTableDatosCompra.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			compraModel.compras=this.compraLogic.getCompras();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			compraModel.compras=this.compras;
		}
		
		
		((CompraModel) this.jTableDatosCompra.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaCompra() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getcompraAnterior(),this.compraLogic.getCompras());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getcompraAnterior(),this.compras);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosCompra();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioCompra(Compra compra,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(RetencionInven.class)) {
					this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.setRetencionInvens(compra.getRetencionInvens());
					this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.inicializarActualizarBindingTablaRetencionInven(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(TransaccionLocal.class)) {
					this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.setTransaccionLocals(compra.getTransaccionLocals());
					this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccionLocal(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FormaPagoInven.class)) {
					this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.setFormaPagoInvens(compra.getFormaPagoInvens());
					this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormaPagoInven(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleCompra.class)) {
					this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.setDetalleCompras(compra.getDetalleCompras());
					this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleCompra(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.compra,new Object(),generalEntityParameterGeneral,this.compraReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.compraSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=CompraConstantesFunciones.getClassesRelationshipsOfCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=CompraConstantesFunciones.getClassesRelationshipsFromStringsOfCompra(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				CompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.compra,new Object(),generalEntityParameterGeneral,this.compraReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,CompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioCompra(CompraBean compraBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(RetencionInven.class)) {
					this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.setRetencionInvens(compra.getRetencionInvens());
					this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.inicializarActualizarBindingTablaRetencionInven(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(TransaccionLocal.class)) {
					this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.setTransaccionLocals(compra.getTransaccionLocals());
					this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccionLocal(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FormaPagoInven.class)) {
					this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.setFormaPagoInvens(compra.getFormaPagoInvens());
					this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormaPagoInven(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleCompra.class)) {
					this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.setDetalleCompras(compra.getDetalleCompras());
					this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleCompra(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanCompra(ArrayList<Classe> classes,CompraReturnGeneral compraReturnGeneral,CompraBean compraBean,Boolean conDefault) throws Exception {
		
			this.compraBean.setRetencionInvens(compraReturnGeneral.getCompra().getRetencionInvens());
			this.compraBean.setTransaccionLocals(compraReturnGeneral.getCompra().getTransaccionLocals());
			this.compraBean.setFormaPagoInvens(compraReturnGeneral.getCompra().getFormaPagoInvens());
			this.compraBean.setDetalleCompras(compraReturnGeneral.getCompra().getDetalleCompras());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualCompra(Compra compra,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(RetencionInven.class)) {
					compra.setRetencionInvens(this.jInternalFrameDetalleFormCompra.retencioninvenBeanSwingJInternalFrame.retencioninvenLogic.getRetencionInvens());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(TransaccionLocal.class)) {
					compra.setTransaccionLocals(this.jInternalFrameDetalleFormCompra.transaccionlocalBeanSwingJInternalFrame.transaccionlocalLogic.getTransaccionLocals());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FormaPagoInven.class)) {
					compra.setFormaPagoInvens(this.jInternalFrameDetalleFormCompra.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleCompra.class)) {
					compra.setDetalleCompras(this.jInternalFrameDetalleFormCompra.detallecompraBeanSwingJInternalFrame.detallecompraLogic.getDetalleCompras());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.compra)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormCompra = new CompraDetalleFormJInternalFrame(jDesktopPane,this.compraSessionBean.getConGuardarRelaciones(),this.compraSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormCompra);
		this.jInternalFrameDetalleFormCompra.setVisible(false);
		this.jInternalFrameDetalleFormCompra.setSelected(false);						
		
		this.jInternalFrameDetalleFormCompra.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormCompra.compraLogic=this.compraLogic;
		
		this.cargarCombosFrameForeignKeyCompra("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleCompra();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleCompra();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyCompra("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyCompra();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarCompra"));
		
		this.jInternalFrameDetalleFormCompra.jButtonModificarCompra.addActionListener(new ButtonActionListener(this,"ModificarCompra"));

		
		this.jInternalFrameDetalleFormCompra.jButtonModificarToolBarCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarCompra"));
					
		this.jInternalFrameDetalleFormCompra.jMenuItemModificarCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarCompra"));		
		
		
		
		this.jInternalFrameDetalleFormCompra.jButtonActualizarCompra.addActionListener (new ButtonActionListener(this,"ActualizarCompra"));
		
		
		this.jInternalFrameDetalleFormCompra.jButtonActualizarToolBarCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarCompra"));
						
		this.jInternalFrameDetalleFormCompra.jMenuItemActualizarCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarCompra"));		
		
		
		
		this.jInternalFrameDetalleFormCompra.jButtonEliminarCompra.addActionListener (new ButtonActionListener(this,"EliminarCompra"));
		
		
		this.jInternalFrameDetalleFormCompra.jButtonEliminarToolBarCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarCompra"));
								
		this.jInternalFrameDetalleFormCompra.jMenuItemEliminarCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarCompra"));		
		
		
		
		this.jInternalFrameDetalleFormCompra.jButtonCancelarCompra.addActionListener (new ButtonActionListener(this,"CancelarCompra"));
		
		
		this.jInternalFrameDetalleFormCompra.jButtonCancelarToolBarCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarCompra"));
					
		this.jInternalFrameDetalleFormCompra.jMenuItemCancelarCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarCompra"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormCompra.jMenuItemDetalleCerrarCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarCompra"));		
		
		
		
		this.jInternalFrameDetalleFormCompra.jButtonGuardarCambiosToolBarCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarCompra"));
		
		
		
		this.jInternalFrameDetalleFormCompra.jButtonGuardarCambiosToolBarCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarCompra"));
		
		
		
		this.jInternalFrameDetalleFormCompra.jComboBoxTiposAccionesFormularioCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioCompra"));
		
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormCompra.jTextFieldporcentaje_descuentoCompra.addFocusListener(new TextFieldFocusListener(this,"porcentaje_descuentoCompra"));
		this.jInternalFrameDetalleFormCompra.jTextFieldporcentaje_descuentoCompra.addActionListener(new TextFieldActionListener(this,"porcentaje_descuentoCompra"));
		//this.jInternalFrameDetalleFormCompra.jTextFieldporcentaje_descuentoCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldporcentaje_descuentoCompra,"porcentaje_descuentoCompra"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormCompra.jTextFieldvalor_descuentoCompra.addFocusListener(new TextFieldFocusListener(this,"valor_descuentoCompra"));
		this.jInternalFrameDetalleFormCompra.jTextFieldvalor_descuentoCompra.addActionListener(new TextFieldActionListener(this,"valor_descuentoCompra"));
		//this.jInternalFrameDetalleFormCompra.jTextFieldvalor_descuentoCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldvalor_descuentoCompra,"valor_descuentoCompra"));


				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonidCompraBusqueda.addActionListener(new ButtonActionListener(this,"idCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_empresaCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_empresaCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_sucursalCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_sucursalCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_moduloCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_moduloCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_ejercicioCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_ejercicioCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_periodoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_periodoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_anioCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_anioCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_mesCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_mesCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_usuarioCompraUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_usuarioCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfecha_emisionCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfecha_entregaCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonnumero_secuencialCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_monedaCompraUpdate.addActionListener(new ButtonActionListener(this,"id_monedaCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_monedaCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaCompraBusqueda"));
		//jButtonid_tipo_cambioCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_tipo_cambioCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_tipo_cambioCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_tipo_cambioCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_estado_inventarioCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_inventarioCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_estado_inventarioCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_inventarioCompraBusqueda"));
		//jButtonid_clienteCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_clienteCompra.addActionListener(new ButtonActionListener(this,"id_clienteCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_clienteCompraUpdate.addActionListener(new ButtonActionListener(this,"id_clienteCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_clienteCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_formatoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formatoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_formatoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoCompraBusqueda"));
		//jButtonid_empleadoCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_empleadoCompra.addActionListener(new ButtonActionListener(this,"id_empleadoCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_empleadoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_empleadoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonnumero_facturaCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_facturaCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_transportistaCompraUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_transportistaCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtondescripcionCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionCompraBusqueda"));
		//jButtonid_orden_compraCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_orden_compraCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_orden_compraCompra.addActionListener(new ButtonActionListener(this,"id_orden_compraCompra"));
		//jButtonid_orden_compraCompraArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeOrdenCompra("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_orden_compraCompraArbol.addActionListener(new ButtonActionListener(this,"id_orden_compraCompraArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_orden_compraCompraUpdate.addActionListener(new ButtonActionListener(this,"id_orden_compraCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_orden_compraCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_orden_compraCompraBusqueda"));
		//jButtonid_pedido_compraCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_pedido_compraCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_pedido_compraCompra.addActionListener(new ButtonActionListener(this,"id_pedido_compraCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_pedido_compraCompraUpdate.addActionListener(new ButtonActionListener(this,"id_pedido_compraCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_pedido_compraCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_pedido_compraCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonautori_usuarioCompraBusqueda.addActionListener(new ButtonActionListener(this,"autori_usuarioCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfactura_inicialCompraBusqueda.addActionListener(new ButtonActionListener(this,"factura_inicialCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfactura_finalCompraBusqueda.addActionListener(new ButtonActionListener(this,"factura_finalCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonservicio_documentoCompraBusqueda.addActionListener(new ButtonActionListener(this,"servicio_documentoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfecha_valorCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_valorCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonporcentaje_descuentoCompraBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_descuentoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonsumanCompraBusqueda.addActionListener(new ButtonActionListener(this,"sumanCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtoniceCompraBusqueda.addActionListener(new ButtonActionListener(this,"iceCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonvalor_descuentoCompraBusqueda.addActionListener(new ButtonActionListener(this,"valor_descuentoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtontotal_descuentoCompraBusqueda.addActionListener(new ButtonActionListener(this,"total_descuentoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonivaCompraBusqueda.addActionListener(new ButtonActionListener(this,"ivaCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonstockCompraBusqueda.addActionListener(new ButtonActionListener(this,"stockCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonsub_totalCompraBusqueda.addActionListener(new ButtonActionListener(this,"sub_totalCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtontotal_otroCompraBusqueda.addActionListener(new ButtonActionListener(this,"total_otroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonultimo_costoCompraBusqueda.addActionListener(new ButtonActionListener(this,"ultimo_costoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonnumero_itemsCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_itemsCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonretencionCompraBusqueda.addActionListener(new ButtonActionListener(this,"retencionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtontotalCompraBusqueda.addActionListener(new ButtonActionListener(this,"totalCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfleteCompraBusqueda.addActionListener(new ButtonActionListener(this,"fleteCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonimpuestoCompraBusqueda.addActionListener(new ButtonActionListener(this,"impuestoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_tipo_transaccion_moduloCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_tipo_transaccion_moduloCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloCompraBusqueda"));
		//jButtonid_asiento_contableCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_asiento_contableCompra.addActionListener(new ButtonActionListener(this,"id_asiento_contableCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_asiento_contableCompraUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_asiento_contableCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonnumero_comprobanteCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfechaCompraBusqueda.addActionListener(new ButtonActionListener(this,"fechaCompraBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormCompra.jTabbedPaneRelacionesCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesCompra"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameCompra"));
		
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarCompra"));
		}
		
		this.jTableDatosCompra.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarCompra"));
		
		this.jTableDatosCompra.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarCompra"));
		
		this.jButtonNuevoCompra.addActionListener(new ButtonActionListener(this,"NuevoCompra"));
		
		this.jButtonDuplicarCompra.addActionListener(new ButtonActionListener(this,"DuplicarCompra"));
		
		this.jButtonCopiarCompra.addActionListener(new ButtonActionListener(this,"CopiarCompra"));
		
		this.jButtonVerFormCompra.addActionListener(new ButtonActionListener(this,"VerFormCompra"));
		
		
		this.jButtonNuevoToolBarCompra.addActionListener(new ButtonActionListener(this,"NuevoToolBarCompra"));
			
		this.jButtonDuplicarToolBarCompra.addActionListener(new ButtonActionListener(this,"DuplicarToolBarCompra"));
			
		this.jMenuItemNuevoCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoCompra"));
			
		this.jMenuItemDuplicarCompra.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarCompra"));		
		
		
		this.jButtonNuevoRelacionesCompra.addActionListener (new ButtonActionListener(this,"NuevoRelacionesCompra"));
		
		
		this.jButtonNuevoRelacionesToolBarCompra.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarCompra"));
			
		this.jMenuItemNuevoRelacionesCompra.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesCompra"));		
		
		
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCompra.jButtonModificarCompra.addActionListener(new ButtonActionListener(this,"ModificarCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCompra.jButtonModificarToolBarCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarCompra"));
			
			this.jInternalFrameDetalleFormCompra.jMenuItemModificarCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormCompra.jButtonActualizarCompra.addActionListener (new ButtonActionListener(this,"ActualizarCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCompra.jButtonActualizarToolBarCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarCompra"));
				
			this.jInternalFrameDetalleFormCompra.jMenuItemActualizarCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCompra.jButtonEliminarCompra.addActionListener (new ButtonActionListener(this,"EliminarCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCompra.jButtonEliminarToolBarCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarCompra"));
						
			this.jInternalFrameDetalleFormCompra.jMenuItemEliminarCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCompra.jButtonCancelarCompra.addActionListener (new ButtonActionListener(this,"CancelarCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCompra.jButtonCancelarToolBarCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarCompra"));
			
			this.jInternalFrameDetalleFormCompra.jMenuItemCancelarCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarCompra"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarCompra.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarCompra"));		
		
		
		this.jButtonCerrarCompra.addActionListener (new ButtonActionListener(this,"CerrarCompra"));
		
		
		this.jButtonCerrarToolBarCompra.addActionListener (new ButtonActionListener(this,"CerrarToolBarCompra"));
			
		this.jMenuItemCerrarCompra.addActionListener (new ButtonActionListener(this,"MenuItemCerrarCompra"));
			
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCompra.jMenuItemDetalleCerrarCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCompra.jButtonGuardarCambiosCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCompra.jButtonGuardarCambiosToolBarCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarCompra"));
		}
		
		this.jButtonCopiarToolBarCompra.addActionListener (new ButtonActionListener(this,"CopiarToolBarCompra"));
			
		this.jButtonVerFormToolBarCompra.addActionListener (new ButtonActionListener(this,"VerFormToolBarCompra"));
		
		this.jMenuItemGuardarCambiosCompra.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosCompra"));
			
		this.jMenuItemCopiarCompra.addActionListener (new ButtonActionListener(this,"MenuItemCopiarCompra"));		
		
		this.jMenuItemVerFormCompra.addActionListener (new ButtonActionListener(this,"MenuItemVerFormCompra"));		
		
		
		this.jButtonGuardarCambiosTablaCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaCompra"));
		
		
		this.jButtonGuardarCambiosTablaToolBarCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarCompra"));
			
		this.jMenuItemGuardarCambiosTablaCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaCompra"));		
		
		
		
		this.jButtonRecargarInformacionCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionCompra"));
					
		this.jButtonRecargarInformacionToolBarCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarCompra"));
		
		this.jMenuItemRecargarInformacionCompra.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionCompra"));		
		
		
		
		this.jButtonAnterioresCompra.addActionListener (new ButtonActionListener(this,"AnterioresCompra"));
		
		
		this.jButtonAnterioresToolBarCompra.addActionListener (new ButtonActionListener(this,"AnterioresToolBarCompra"));
		
		this.jMenuItemAnterioresCompra.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresCompra"));		
		
		
		this.jButtonSiguientesCompra.addActionListener (new ButtonActionListener(this,"SiguientesCompra"));
		
		
		this.jButtonSiguientesToolBarCompra.addActionListener (new ButtonActionListener(this,"SiguientesToolBarCompra"));
			
		this.jMenuItemSiguientesCompra.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesCompra"));
			
		this.jMenuItemAbrirOrderByCompra.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByCompra"));
			
		this.jMenuItemMostrarOcultarCompra.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarCompra"));
			
		this.jMenuItemDetalleAbrirOrderByCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByCompra"));
			
		this.jMenuItemDetalleMostarOcultarCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarCompra"));		
		
		
		this.jButtonNuevoGuardarCambiosCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosCompra"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarCompra"));
			
		this.jMenuItemNuevoGuardarCambiosCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosCompra"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosCompra"));

		this.jCheckBoxSeleccionadosCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionadosCompra"));
		
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCompra.jComboBoxTiposAccionesFormularioCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioCompra"));
		}
		
		
		this.jComboBoxTiposRelacionesCompra.addActionListener (new ButtonActionListener(this,"TiposRelacionesCompra"));
			
		this.jComboBoxTiposAccionesCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesCompra"));
					
		this.jComboBoxTiposSeleccionarCompra.addActionListener (new ButtonActionListener(this,"TiposSeleccionarCompra"));
			
		this.jTextFieldValorCampoGeneralCompra.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralCompra"));		
		
		
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormCompra.jTextFieldporcentaje_descuentoCompra.addFocusListener(new TextFieldFocusListener(this,"porcentaje_descuentoCompra"));
		this.jInternalFrameDetalleFormCompra.jTextFieldporcentaje_descuentoCompra.addActionListener(new TextFieldActionListener(this,"porcentaje_descuentoCompra"));
		//this.jInternalFrameDetalleFormCompra.jTextFieldporcentaje_descuentoCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldporcentaje_descuentoCompra,"porcentaje_descuentoCompra"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormCompra.jTextFieldvalor_descuentoCompra.addFocusListener(new TextFieldFocusListener(this,"valor_descuentoCompra"));
		this.jInternalFrameDetalleFormCompra.jTextFieldvalor_descuentoCompra.addActionListener(new TextFieldActionListener(this,"valor_descuentoCompra"));
		//this.jInternalFrameDetalleFormCompra.jTextFieldvalor_descuentoCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldvalor_descuentoCompra,"valor_descuentoCompra"));


		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonidCompraBusqueda.addActionListener(new ButtonActionListener(this,"idCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_empresaCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_empresaCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_sucursalCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_sucursalCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_moduloCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_moduloCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_ejercicioCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_ejercicioCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_periodoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_periodoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_anioCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_anioCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_mesCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_mesCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_usuarioCompraUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_usuarioCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfecha_emisionCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfecha_entregaCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonnumero_secuencialCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_monedaCompraUpdate.addActionListener(new ButtonActionListener(this,"id_monedaCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_monedaCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaCompraBusqueda"));
		//jButtonid_tipo_cambioCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_tipo_cambioCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_tipo_cambioCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_tipo_cambioCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_estado_inventarioCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_inventarioCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_estado_inventarioCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_inventarioCompraBusqueda"));
		//jButtonid_clienteCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_clienteCompra.addActionListener(new ButtonActionListener(this,"id_clienteCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_clienteCompraUpdate.addActionListener(new ButtonActionListener(this,"id_clienteCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_clienteCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_formatoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formatoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_formatoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoCompraBusqueda"));
		//jButtonid_empleadoCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_empleadoCompra.addActionListener(new ButtonActionListener(this,"id_empleadoCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_empleadoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_empleadoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonnumero_facturaCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_facturaCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_transportistaCompraUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_transportistaCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtondescripcionCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionCompraBusqueda"));
		//jButtonid_orden_compraCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_orden_compraCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_orden_compraCompra.addActionListener(new ButtonActionListener(this,"id_orden_compraCompra"));
		//jButtonid_orden_compraCompraArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeOrdenCompra("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_orden_compraCompraArbol.addActionListener(new ButtonActionListener(this,"id_orden_compraCompraArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_orden_compraCompraUpdate.addActionListener(new ButtonActionListener(this,"id_orden_compraCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_orden_compraCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_orden_compraCompraBusqueda"));
		//jButtonid_pedido_compraCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_pedido_compraCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_pedido_compraCompra.addActionListener(new ButtonActionListener(this,"id_pedido_compraCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_pedido_compraCompraUpdate.addActionListener(new ButtonActionListener(this,"id_pedido_compraCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_pedido_compraCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_pedido_compraCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonautori_usuarioCompraBusqueda.addActionListener(new ButtonActionListener(this,"autori_usuarioCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfactura_inicialCompraBusqueda.addActionListener(new ButtonActionListener(this,"factura_inicialCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfactura_finalCompraBusqueda.addActionListener(new ButtonActionListener(this,"factura_finalCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonservicio_documentoCompraBusqueda.addActionListener(new ButtonActionListener(this,"servicio_documentoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfecha_valorCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_valorCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonporcentaje_descuentoCompraBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_descuentoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonsumanCompraBusqueda.addActionListener(new ButtonActionListener(this,"sumanCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtoniceCompraBusqueda.addActionListener(new ButtonActionListener(this,"iceCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonvalor_descuentoCompraBusqueda.addActionListener(new ButtonActionListener(this,"valor_descuentoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtontotal_descuentoCompraBusqueda.addActionListener(new ButtonActionListener(this,"total_descuentoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonivaCompraBusqueda.addActionListener(new ButtonActionListener(this,"ivaCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonstockCompraBusqueda.addActionListener(new ButtonActionListener(this,"stockCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonsub_totalCompraBusqueda.addActionListener(new ButtonActionListener(this,"sub_totalCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtontotal_otroCompraBusqueda.addActionListener(new ButtonActionListener(this,"total_otroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonultimo_costoCompraBusqueda.addActionListener(new ButtonActionListener(this,"ultimo_costoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonnumero_itemsCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_itemsCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonretencionCompraBusqueda.addActionListener(new ButtonActionListener(this,"retencionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtontotalCompraBusqueda.addActionListener(new ButtonActionListener(this,"totalCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfleteCompraBusqueda.addActionListener(new ButtonActionListener(this,"fleteCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonimpuestoCompraBusqueda.addActionListener(new ButtonActionListener(this,"impuestoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_tipo_transaccion_moduloCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_tipo_transaccion_moduloCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloCompraBusqueda"));
		//jButtonid_asiento_contableCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_asiento_contableCompra.addActionListener(new ButtonActionListener(this,"id_asiento_contableCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_asiento_contableCompraUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_asiento_contableCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonnumero_comprobanteCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfechaCompraBusqueda.addActionListener(new ButtonActionListener(this,"fechaCompraBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdAsientoContableCompra.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableCompra"));

			this.jButtonBuscarFK_IdAsientoContableid_asiento_contableCompra.addActionListener(new ButtonActionListener(this,"id_asiento_contableCompra"));

			this.jButtonFK_IdClienteCompra.addActionListener(new ButtonActionListener(this,"FK_IdClienteCompra"));

			this.jButtonBuscarFK_IdClienteid_clienteCompra.addActionListener(new ButtonActionListener(this,"id_clienteCompra"));

			this.jButtonFK_IdEmpleadoCompra.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoCompra"));

			this.jButtonBuscarFK_IdEmpleadoid_empleadoCompra.addActionListener(new ButtonActionListener(this,"id_empleadoCompra"));

			this.jButtonFK_IdEstadoInventarioCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoInventarioCompra"));

			this.jButtonFK_IdOrdenCompraCompra.addActionListener(new ButtonActionListener(this,"FK_IdOrdenCompraCompra"));

			this.jButtonBuscarFK_IdOrdenCompraid_orden_compraCompra.addActionListener(new ButtonActionListener(this,"id_orden_compraCompra"));

			this.jButtonFK_IdPedidoCompraCompra.addActionListener(new ButtonActionListener(this,"FK_IdPedidoCompraCompra"));

			this.jButtonBuscarFK_IdPedidoCompraid_pedido_compraCompra.addActionListener(new ButtonActionListener(this,"id_pedido_compraCompra"));

			this.jButtonFK_IdTipoTransaccionModuloCompra.addActionListener(new ButtonActionListener(this,"FK_IdTipoTransaccionModuloCompra"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoCompra!=null) {
				this.jInternalFrameReporteDinamicoCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoCompra"));
				this.jInternalFrameReporteDinamicoCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoCompra"));
				this.jInternalFrameReporteDinamicoCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoCompra"));
			}
			
			//this.jButtonCerrarReporteDinamicoCompra.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoCompra"));				
			//this.jButtonGenerarReporteDinamicoCompra.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoCompra"));
			//this.jButtonGenerarExcelReporteDinamicoCompra.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoCompra"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionCompra!=null) {
				this.jInternalFrameImportacionCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionCompra"));
				this.jInternalFrameImportacionCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionCompra"));
				this.jInternalFrameImportacionCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionCompra"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByCompra"));
			
			this.jButtonAbrirOrderByToolBarCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarCompra"));			
			
			if(this.jInternalFrameOrderByCompra!=null) {
				this.jInternalFrameOrderByCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByCompra"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCompra.jTabbedPaneRelacionesCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesCompra"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameCompra();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormCompra.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormCompra = (JInternalFrameBase)event.getSource();
	            	
	            CompraBeanSwingJInternalFrame jInternalFrameParent=(CompraBeanSwingJInternalFrame)jInternalFrameDetalleFormCompra.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarCompraActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosCompra.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosCompra.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosCompra.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoCompra";
		inputMap = this.jButtonNuevoCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoCompraActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesCompra";
		inputMap = this.jButtonNuevoRelacionesCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoCompraActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarCompra";
		inputMap = this.jButtonModificarCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarCompra";
		inputMap = this.jButtonActualizarCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarCompra";
		inputMap = this.jButtonEliminarCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarCompra";
		inputMap = this.jButtonCancelarCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarCompra";
		inputMap = this.jButtonCerrarCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormCompra.jButtonGuardarCambiosCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosCompra";
		inputMap = this.jInternalFrameDetalleFormCompra.jButtonGuardarCambiosCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormCompra.jButtonGuardarCambiosCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosCompra.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosCompraItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonidCompraBusqueda.addActionListener(new ButtonActionListener(this,"idCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_empresaCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_empresaCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_sucursalCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_sucursalCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_moduloCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_moduloCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_ejercicioCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_ejercicioCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_periodoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_periodoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_anioCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_anioCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_mesCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_mesCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_usuarioCompraUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_usuarioCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfecha_emisionCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfecha_entregaCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonnumero_secuencialCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_monedaCompraUpdate.addActionListener(new ButtonActionListener(this,"id_monedaCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_monedaCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaCompraBusqueda"));
		//jButtonid_tipo_cambioCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_tipo_cambioCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_tipo_cambioCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_tipo_cambioCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_estado_inventarioCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_inventarioCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_estado_inventarioCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_inventarioCompraBusqueda"));
		//jButtonid_clienteCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_clienteCompra.addActionListener(new ButtonActionListener(this,"id_clienteCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_clienteCompraUpdate.addActionListener(new ButtonActionListener(this,"id_clienteCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_clienteCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_formatoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formatoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_formatoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoCompraBusqueda"));
		//jButtonid_empleadoCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_empleadoCompra.addActionListener(new ButtonActionListener(this,"id_empleadoCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_empleadoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_empleadoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonnumero_facturaCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_facturaCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_transportistaCompraUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_transportistaCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtondescripcionCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionCompraBusqueda"));
		//jButtonid_orden_compraCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_orden_compraCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_orden_compraCompra.addActionListener(new ButtonActionListener(this,"id_orden_compraCompra"));
		//jButtonid_orden_compraCompraArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeOrdenCompra("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_orden_compraCompraArbol.addActionListener(new ButtonActionListener(this,"id_orden_compraCompraArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_orden_compraCompraUpdate.addActionListener(new ButtonActionListener(this,"id_orden_compraCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_orden_compraCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_orden_compraCompraBusqueda"));
		//jButtonid_pedido_compraCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_pedido_compraCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_pedido_compraCompra.addActionListener(new ButtonActionListener(this,"id_pedido_compraCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_pedido_compraCompraUpdate.addActionListener(new ButtonActionListener(this,"id_pedido_compraCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_pedido_compraCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_pedido_compraCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonautori_usuarioCompraBusqueda.addActionListener(new ButtonActionListener(this,"autori_usuarioCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfactura_inicialCompraBusqueda.addActionListener(new ButtonActionListener(this,"factura_inicialCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfactura_finalCompraBusqueda.addActionListener(new ButtonActionListener(this,"factura_finalCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonservicio_documentoCompraBusqueda.addActionListener(new ButtonActionListener(this,"servicio_documentoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfecha_valorCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_valorCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonporcentaje_descuentoCompraBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_descuentoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonsumanCompraBusqueda.addActionListener(new ButtonActionListener(this,"sumanCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtoniceCompraBusqueda.addActionListener(new ButtonActionListener(this,"iceCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonvalor_descuentoCompraBusqueda.addActionListener(new ButtonActionListener(this,"valor_descuentoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtontotal_descuentoCompraBusqueda.addActionListener(new ButtonActionListener(this,"total_descuentoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonivaCompraBusqueda.addActionListener(new ButtonActionListener(this,"ivaCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonstockCompraBusqueda.addActionListener(new ButtonActionListener(this,"stockCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonsub_totalCompraBusqueda.addActionListener(new ButtonActionListener(this,"sub_totalCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtontotal_otroCompraBusqueda.addActionListener(new ButtonActionListener(this,"total_otroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonultimo_costoCompraBusqueda.addActionListener(new ButtonActionListener(this,"ultimo_costoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonnumero_itemsCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_itemsCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonretencionCompraBusqueda.addActionListener(new ButtonActionListener(this,"retencionCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtontotalCompraBusqueda.addActionListener(new ButtonActionListener(this,"totalCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfleteCompraBusqueda.addActionListener(new ButtonActionListener(this,"fleteCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonimpuestoCompraBusqueda.addActionListener(new ButtonActionListener(this,"impuestoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_tipo_transaccion_moduloCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_tipo_transaccion_moduloCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloCompraBusqueda"));
		//jButtonid_asiento_contableCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCompra.jButtonid_asiento_contableCompra.addActionListener(new ButtonActionListener(this,"id_asiento_contableCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCompra.jButtonid_asiento_contableCompraUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonid_asiento_contableCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonnumero_comprobanteCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCompra.jButtonfechaCompraBusqueda.addActionListener(new ButtonActionListener(this,"fechaCompraBusqueda"));
		
		
		this.jButtonFK_IdAsientoContableCompra.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableCompra"));

		this.jButtonBuscarFK_IdAsientoContableid_asiento_contableCompra.addActionListener(new ButtonActionListener(this,"id_asiento_contableCompra"));

		this.jButtonFK_IdClienteCompra.addActionListener(new ButtonActionListener(this,"FK_IdClienteCompra"));

		this.jButtonBuscarFK_IdClienteid_clienteCompra.addActionListener(new ButtonActionListener(this,"id_clienteCompra"));

		this.jButtonFK_IdEmpleadoCompra.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoCompra"));

		this.jButtonBuscarFK_IdEmpleadoid_empleadoCompra.addActionListener(new ButtonActionListener(this,"id_empleadoCompra"));

		this.jButtonFK_IdEstadoInventarioCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoInventarioCompra"));

		this.jButtonFK_IdOrdenCompraCompra.addActionListener(new ButtonActionListener(this,"FK_IdOrdenCompraCompra"));

		this.jButtonBuscarFK_IdOrdenCompraid_orden_compraCompra.addActionListener(new ButtonActionListener(this,"id_orden_compraCompra"));

		this.jButtonFK_IdPedidoCompraCompra.addActionListener(new ButtonActionListener(this,"FK_IdPedidoCompraCompra"));

		this.jButtonBuscarFK_IdPedidoCompraid_pedido_compraCompra.addActionListener(new ButtonActionListener(this,"id_pedido_compraCompra"));

		this.jButtonFK_IdTipoTransaccionModuloCompra.addActionListener(new ButtonActionListener(this,"FK_IdTipoTransaccionModuloCompra"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarCompraActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarCompra.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosCompra(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(Compra compraAux:this.compraLogic.getCompras()) {
					compraAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Compra compraAux:compras) {
					compraAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Compra compraAux:this.compraLogic.getCompras()) {
						compraAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Compra compraAux:compras) {
						compraAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(Compra compraAux:this.compraLogic.getCompras()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Compra compraAux:compras) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosCompra.getSelectedRows();
			
			Compra compraLocal=new Compra();
			
			//this.seleccionarTodosCompra(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					compraLocal =(Compra) this.compraLogic.getCompras().toArray()[this.jTableDatosCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					compraLocal =(Compra) this.compras.toArray()[this.jTableDatosCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				compraLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Compra compraAux:this.compraLogic.getCompras()) {
						compraAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Compra compraAux:compras) {
						compraAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaCompra(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualCompraItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarCompraParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralCompraActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingCompra(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralCompra.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Compra compraAux:this.compraLogic.getCompras()) {
				
						if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							compraAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FECHAENTREGA)) {
							existe=true;
							compraAux.setfecha_entrega(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
							existe=true;
							compraAux.setnumero_secuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_NUMEROFACTURA)) {
							existe=true;
							compraAux.setnumero_factura(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							compraAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_AUTORIUSUARIO)) {
							existe=true;
							compraAux.setautori_usuario(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FACTURAINICIAL)) {
							existe=true;
							compraAux.setfactura_inicial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FACTURAFINAL)) {
							existe=true;
							compraAux.setfactura_final(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO)) {
							existe=true;
							compraAux.setservicio_documento(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FECHAVALOR)) {
							existe=true;
							compraAux.setfecha_valor(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO)) {
							existe=true;
							compraAux.setporcentaje_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_SUMAN)) {
							existe=true;
							compraAux.setsuman(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_ICE)) {
							existe=true;
							compraAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_VALORDESCUENTO)) {
							existe=true;
							compraAux.setvalor_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_TOTALDESCUENTO)) {
							existe=true;
							compraAux.settotal_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IVA)) {
							existe=true;
							compraAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_STOCK)) {
							existe=true;
							compraAux.setstock(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							compraAux.setsub_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_TOTALOTRO)) {
							existe=true;
							compraAux.settotal_otro(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_ULTIMOCOSTO)) {
							existe=true;
							compraAux.setultimo_costo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_NUMEROITEMS)) {
							existe=true;
							compraAux.setnumero_items(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_RETENCION)) {
							existe=true;
							compraAux.setretencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							compraAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							compraAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IMPUESTO)) {
							existe=true;
							compraAux.setimpuesto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
							existe=true;
							compraAux.setnumero_comprobante(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							compraAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Compra compraAux:compras) {
					
						if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							compraAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FECHAENTREGA)) {
							existe=true;
							compraAux.setfecha_entrega(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
							existe=true;
							compraAux.setnumero_secuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_NUMEROFACTURA)) {
							existe=true;
							compraAux.setnumero_factura(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							compraAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_AUTORIUSUARIO)) {
							existe=true;
							compraAux.setautori_usuario(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FACTURAINICIAL)) {
							existe=true;
							compraAux.setfactura_inicial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FACTURAFINAL)) {
							existe=true;
							compraAux.setfactura_final(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO)) {
							existe=true;
							compraAux.setservicio_documento(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FECHAVALOR)) {
							existe=true;
							compraAux.setfecha_valor(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO)) {
							existe=true;
							compraAux.setporcentaje_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_SUMAN)) {
							existe=true;
							compraAux.setsuman(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_ICE)) {
							existe=true;
							compraAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_VALORDESCUENTO)) {
							existe=true;
							compraAux.setvalor_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_TOTALDESCUENTO)) {
							existe=true;
							compraAux.settotal_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IVA)) {
							existe=true;
							compraAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_STOCK)) {
							existe=true;
							compraAux.setstock(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							compraAux.setsub_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_TOTALOTRO)) {
							existe=true;
							compraAux.settotal_otro(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_ULTIMOCOSTO)) {
							existe=true;
							compraAux.setultimo_costo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_NUMEROITEMS)) {
							existe=true;
							compraAux.setnumero_items(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_RETENCION)) {
							existe=true;
							compraAux.setretencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							compraAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							compraAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IMPUESTO)) {
							existe=true;
							compraAux.setimpuesto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
							existe=true;
							compraAux.setnumero_comprobante(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							compraAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesCompraActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioCompra=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesCompra.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormCompra.jComboBoxTiposAccionesFormularioCompra.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteCompra) {				
					conSplash=true;//false;										
					
					//this.startProcessCompra(conSplash);
				
					this.generarReporteComprasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormCompra.jComboBoxTiposAccionesFormularioCompra.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoComprasSeleccionados();
				//this.jComboBoxTiposAccionesCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoComprasSeleccionados(false);
				//this.jComboBoxTiposAccionesCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoComprasSeleccionados(true);
				//this.jComboBoxTiposAccionesCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessCompra();
				
				this.exportarComprasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormCompra.jComboBoxTiposAccionesFormularioCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionCompras();
				//this.importarCompras();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormCompra.jComboBoxTiposAccionesFormularioCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessCompra();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelComprasSeleccionados();
				//this.jComboBoxTiposAccionesCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessCompra();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoCompra)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyCompra(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Compra",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormCompra.jComboBoxTiposAccionesFormularioCompra.setSelectedIndex(0);					
				}	
			} 			
			else if(CompraBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteCompra) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessCompra(conSplash);
					
						//this.actualizarParametrosGeneralCompra();
						
						this.generarReporteProcesoAccionComprasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesCompra.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormCompra.jComboBoxTiposAccionesFormularioCompra.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(CompraBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO CompraS SELECCIONADOS?", "MANTENIMIENTO DE Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessCompra();
				
						this.actualizarParametrosGeneralCompra();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.compraReturnGeneral=compraLogic.procesarAccionComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.compraLogic.getCompras(),this.compraParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesCompra.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormCompra.jComboBoxTiposAccionesFormularioCompra.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralCompra();
					
					CompraBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesCompra.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormCompra.jComboBoxTiposAccionesFormularioCompra.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessCompra(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesCompraActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessCompra();
			
			if(this.jInternalFrameDetalleFormCompra==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<Compra> comprasSeleccionados=new ArrayList<Compra>();		
			Compra compra=new Compra();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesCompra.getSelectedItem();
			
			
			
			
			comprasSeleccionados=this.getComprasSeleccionados(true);
			//this.sTipoAccion;
			
			if(comprasSeleccionados.size()==1) {
				for(Compra compraAux:comprasSeleccionados) {
					compra=compraAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Retencion")) {
					jButtonRetencionInvenActionPerformed(null,rowIndex,true,false,compra);
				}
				else if(this.sTipoRelacion.equals("Transaccion Local")) {
					jButtonTransaccionLocalActionPerformed(null,rowIndex,true,false,compra);
				}
				else if(this.sTipoRelacion.equals("Forma Pago")) {
					jButtonFormaPagoInvenActionPerformed(null,rowIndex,true,false,compra);
				}
				else if(this.sTipoRelacion.equals("Detalle Compra")) {
					jButtonDetalleCompraActionPerformed(null,rowIndex,true,false,compra);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessCompra();
			
      		//this.finishProcessCompra(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarCompraReturnGeneral() throws Exception {
		if(this.compraReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.compraReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.compraReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.compraReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.compraReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.compraReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingCompra(false);
		}
		
		if(this.compraReturnGeneral.getConRetornoLista() || this.compraReturnGeneral.getConRetornoObjeto()) {
			if(this.compraReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.compraLogic.setCompras(this.compraReturnGeneral.getCompras());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.compraReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.compraLogic.setCompra(this.compraReturnGeneral.getCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingCompra(false);
		}
	}
	
	public void actualizarParametrosGeneralCompra() throws Exception {
		
		
	}
	
	public ArrayList<Compra> getComprasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<Compra> comprasSeleccionados=new ArrayList<Compra>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioCompra) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(Compra compraAux:compraLogic.getCompras()) {
					if(compraAux.getIsSelected()) {
						comprasSeleccionados.add(compraAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Compra compraAux:this.compras) {
					if(compraAux.getIsSelected()) {
						comprasSeleccionados.add(compraAux);				
					}
				}
			}
			
			if(comprasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						comprasSeleccionados.addAll(this.compraLogic.getCompras());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						comprasSeleccionados.addAll(this.compras);				
					}
				}
			}
		} else {
			comprasSeleccionados.add(this.compra);
		}
		
		return comprasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoComprasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoComprasSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesComprasSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesComprasSeleccionados() throws Exception {
		ArrayList<Compra> comprasSeleccionados=new ArrayList<Compra>();		
		
		comprasSeleccionados=this.getComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteCompras("Todos",comprasSeleccionados);
		
	}	
	
	public void generarReporteNormalComprasSeleccionados() throws Exception {
		ArrayList<Compra> comprasSeleccionados=new ArrayList<Compra>();		
		
		comprasSeleccionados=this.getComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteCompras("Todos",comprasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionComprasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<Compra> comprasSeleccionados=new ArrayList<Compra>();
		
		comprasSeleccionados=this.getComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteCompras("Todos",comprasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoComprasSeleccionados() throws Exception {
		ArrayList<Compra> comprasSeleccionados=new ArrayList<Compra>();		
		
		
		this.abrirInicializarFrameReporteDinamicoCompra();
		
		
		comprasSeleccionados=this.getComprasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoCompra();
		
		
		//this.generarReporteCompras("Todos",comprasSeleccionados ,compraImplementable,compraImplementableHome);
	}
	
	public void mostrarImportacionCompras() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionCompra();
		
		this.abrirFrameImportacionCompra();		
		
			
		//this.generarReporteCompras("Todos",comprasSeleccionados ,compraImplementable,compraImplementableHome);
	}
	
	public void importarCompras() throws Exception {		
	
	}
	
	public void exportarComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelComprasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoComprasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlComprasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoComprasSeleccionados() throws Exception {
		ArrayList<Compra> comprasSeleccionados=new ArrayList<Compra>();		
		
		comprasSeleccionados=this.getComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"compra."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarCompra(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(Compra compraAux:comprasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarCompra(compraAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//compraAux.setsDetalleGeneralEntityReporte(compraAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.compraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarCompra(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=CompraConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_FECHAENTREGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDTIPOCAMBIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDESTADOINVENTARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDFORMATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_NUMEROFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDTRANSPORTISTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDORDENCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDPEDIDOCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_AUTORIUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_FACTURAINICIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_FACTURAFINAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_FECHAVALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_SUMAN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_ICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_VALORDESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_TOTALDESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_STOCK;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_SUBTOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_TOTALOTRO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_ULTIMOCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_NUMEROITEMS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_RETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_FLETE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IMPUESTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_IDASIENTOCONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=CompraConstantesFunciones.LABEL_FECHA;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarCompra(Compra compra,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=compra.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getusuario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getfecha_entrega().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getnumero_secuencial();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.gettipocambio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getestadoinventario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getformato_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getnumero_factura();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.gettransportista_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getordencompra_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getpedidocompra_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getautori_usuario();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getfactura_inicial();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getfactura_final();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getservicio_documento();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getfecha_valor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getporcentaje_descuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getsuman().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getice().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getvalor_descuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.gettotal_descuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getiva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getstock().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getsub_total().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.gettotal_otro().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getultimo_costo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getnumero_items().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getretencion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getflete().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getimpuesto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.gettipotransaccionmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getasientocontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getnumero_comprobante();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=compra.getfecha().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelComprasSeleccionados() throws Exception {
		ArrayList<Compra> comprasSeleccionados=new ArrayList<Compra>();		
		
		comprasSeleccionados=this.getComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"compra.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("Compras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelCompra(row);				
				iRow++;
			}				
			
			for(Compra compraAux:comprasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelCompra(compraAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.compraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlComprasSeleccionados() throws Exception {
		ArrayList<Compra> comprasSeleccionados=new ArrayList<Compra>();		
		
		comprasSeleccionados=this.getComprasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"compra.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("compras");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("compra");
			//elementRoot.appendChild(element);
		
			for(Compra compraAux:comprasSeleccionados) {
				element = document.createElement("compra");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlCompra(compraAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.compraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelCompra(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_FECHAENTREGA);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDTIPOCAMBIO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDESTADOINVENTARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDFORMATO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_NUMEROFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDTRANSPORTISTA);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDORDENCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDPEDIDOCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_AUTORIUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_FACTURAINICIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_FACTURAFINAL);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_FECHAVALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_SUMAN);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_ICE);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_VALORDESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_TOTALDESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IVA);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_STOCK);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_SUBTOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_TOTALOTRO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_ULTIMOCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_NUMEROITEMS);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_RETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_FLETE);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IMPUESTO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_IDASIENTOCONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
		cell = row.createCell(iColumn++);cell.setCellValue(CompraConstantesFunciones.LABEL_FECHA);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelCompra(Compra compra,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getusuario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getfecha_entrega());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getnumero_secuencial());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.gettipocambio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getestadoinventario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getformato_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getnumero_factura());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.gettransportista_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getordencompra_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getpedidocompra_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getautori_usuario());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getfactura_inicial());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getfactura_final());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getservicio_documento());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getfecha_valor());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getporcentaje_descuento());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getsuman());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getice());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getvalor_descuento());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.gettotal_descuento());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getiva());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getstock());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getsub_total());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.gettotal_otro());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getultimo_costo());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getnumero_items());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getretencion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getflete());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getimpuesto());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.gettipotransaccionmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getasientocontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getnumero_comprobante());
		cell = row.createCell(iColumn++);cell.setCellValue(compra.getfecha());				
	}
	
	public void setFilaDatosExportarXmlCompra(Compra compra,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(CompraConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(compra.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(CompraConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(compra.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(CompraConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(compra.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(CompraConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(compra.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementmodulo_descripcion = document.createElement(CompraConstantesFunciones.IDMODULO);
		elementmodulo_descripcion.appendChild(document.createTextNode(compra.getmodulo_descripcion()));
		element.appendChild(elementmodulo_descripcion);

		Element elementejercicio_descripcion = document.createElement(CompraConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(compra.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(CompraConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(compra.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(CompraConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(compra.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(CompraConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(compra.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementusuario_descripcion = document.createElement(CompraConstantesFunciones.IDUSUARIO);
		elementusuario_descripcion.appendChild(document.createTextNode(compra.getusuario_descripcion()));
		element.appendChild(elementusuario_descripcion);

		Element elementfecha_emision = document.createElement(CompraConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(compra.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementfecha_entrega = document.createElement(CompraConstantesFunciones.FECHAENTREGA);
		elementfecha_entrega.appendChild(document.createTextNode(compra.getfecha_entrega().toString().trim()));
		element.appendChild(elementfecha_entrega);

		Element elementnumero_secuencial = document.createElement(CompraConstantesFunciones.NUMEROSECUENCIAL);
		elementnumero_secuencial.appendChild(document.createTextNode(compra.getnumero_secuencial().trim()));
		element.appendChild(elementnumero_secuencial);

		Element elementmoneda_descripcion = document.createElement(CompraConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(compra.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementtipocambio_descripcion = document.createElement(CompraConstantesFunciones.IDTIPOCAMBIO);
		elementtipocambio_descripcion.appendChild(document.createTextNode(compra.gettipocambio_descripcion()));
		element.appendChild(elementtipocambio_descripcion);

		Element elementestadoinventario_descripcion = document.createElement(CompraConstantesFunciones.IDESTADOINVENTARIO);
		elementestadoinventario_descripcion.appendChild(document.createTextNode(compra.getestadoinventario_descripcion()));
		element.appendChild(elementestadoinventario_descripcion);

		Element elementcliente_descripcion = document.createElement(CompraConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(compra.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementformato_descripcion = document.createElement(CompraConstantesFunciones.IDFORMATO);
		elementformato_descripcion.appendChild(document.createTextNode(compra.getformato_descripcion()));
		element.appendChild(elementformato_descripcion);

		Element elementempleado_descripcion = document.createElement(CompraConstantesFunciones.IDEMPLEADO);
		elementempleado_descripcion.appendChild(document.createTextNode(compra.getempleado_descripcion()));
		element.appendChild(elementempleado_descripcion);

		Element elementnumero_factura = document.createElement(CompraConstantesFunciones.NUMEROFACTURA);
		elementnumero_factura.appendChild(document.createTextNode(compra.getnumero_factura().trim()));
		element.appendChild(elementnumero_factura);

		Element elementtransportista_descripcion = document.createElement(CompraConstantesFunciones.IDTRANSPORTISTA);
		elementtransportista_descripcion.appendChild(document.createTextNode(compra.gettransportista_descripcion()));
		element.appendChild(elementtransportista_descripcion);

		Element elementdescripcion = document.createElement(CompraConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(compra.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementordencompra_descripcion = document.createElement(CompraConstantesFunciones.IDORDENCOMPRA);
		elementordencompra_descripcion.appendChild(document.createTextNode(compra.getordencompra_descripcion()));
		element.appendChild(elementordencompra_descripcion);

		Element elementpedidocompra_descripcion = document.createElement(CompraConstantesFunciones.IDPEDIDOCOMPRA);
		elementpedidocompra_descripcion.appendChild(document.createTextNode(compra.getpedidocompra_descripcion()));
		element.appendChild(elementpedidocompra_descripcion);

		Element elementautori_usuario = document.createElement(CompraConstantesFunciones.AUTORIUSUARIO);
		elementautori_usuario.appendChild(document.createTextNode(compra.getautori_usuario().trim()));
		element.appendChild(elementautori_usuario);

		Element elementfactura_inicial = document.createElement(CompraConstantesFunciones.FACTURAINICIAL);
		elementfactura_inicial.appendChild(document.createTextNode(compra.getfactura_inicial().trim()));
		element.appendChild(elementfactura_inicial);

		Element elementfactura_final = document.createElement(CompraConstantesFunciones.FACTURAFINAL);
		elementfactura_final.appendChild(document.createTextNode(compra.getfactura_final().trim()));
		element.appendChild(elementfactura_final);

		Element elementservicio_documento = document.createElement(CompraConstantesFunciones.SERVICIODOCUMENTO);
		elementservicio_documento.appendChild(document.createTextNode(compra.getservicio_documento().trim()));
		element.appendChild(elementservicio_documento);

		Element elementfecha_valor = document.createElement(CompraConstantesFunciones.FECHAVALOR);
		elementfecha_valor.appendChild(document.createTextNode(compra.getfecha_valor().toString().trim()));
		element.appendChild(elementfecha_valor);

		Element elementporcentaje_descuento = document.createElement(CompraConstantesFunciones.PORCENTAJEDESCUENTO);
		elementporcentaje_descuento.appendChild(document.createTextNode(compra.getporcentaje_descuento().toString().trim()));
		element.appendChild(elementporcentaje_descuento);

		Element elementsuman = document.createElement(CompraConstantesFunciones.SUMAN);
		elementsuman.appendChild(document.createTextNode(compra.getsuman().toString().trim()));
		element.appendChild(elementsuman);

		Element elementice = document.createElement(CompraConstantesFunciones.ICE);
		elementice.appendChild(document.createTextNode(compra.getice().toString().trim()));
		element.appendChild(elementice);

		Element elementvalor_descuento = document.createElement(CompraConstantesFunciones.VALORDESCUENTO);
		elementvalor_descuento.appendChild(document.createTextNode(compra.getvalor_descuento().toString().trim()));
		element.appendChild(elementvalor_descuento);

		Element elementtotal_descuento = document.createElement(CompraConstantesFunciones.TOTALDESCUENTO);
		elementtotal_descuento.appendChild(document.createTextNode(compra.gettotal_descuento().toString().trim()));
		element.appendChild(elementtotal_descuento);

		Element elementiva = document.createElement(CompraConstantesFunciones.IVA);
		elementiva.appendChild(document.createTextNode(compra.getiva().toString().trim()));
		element.appendChild(elementiva);

		Element elementstock = document.createElement(CompraConstantesFunciones.STOCK);
		elementstock.appendChild(document.createTextNode(compra.getstock().toString().trim()));
		element.appendChild(elementstock);

		Element elementsub_total = document.createElement(CompraConstantesFunciones.SUBTOTAL);
		elementsub_total.appendChild(document.createTextNode(compra.getsub_total().toString().trim()));
		element.appendChild(elementsub_total);

		Element elementtotal_otro = document.createElement(CompraConstantesFunciones.TOTALOTRO);
		elementtotal_otro.appendChild(document.createTextNode(compra.gettotal_otro().toString().trim()));
		element.appendChild(elementtotal_otro);

		Element elementultimo_costo = document.createElement(CompraConstantesFunciones.ULTIMOCOSTO);
		elementultimo_costo.appendChild(document.createTextNode(compra.getultimo_costo().toString().trim()));
		element.appendChild(elementultimo_costo);

		Element elementnumero_items = document.createElement(CompraConstantesFunciones.NUMEROITEMS);
		elementnumero_items.appendChild(document.createTextNode(compra.getnumero_items().toString().trim()));
		element.appendChild(elementnumero_items);

		Element elementretencion = document.createElement(CompraConstantesFunciones.RETENCION);
		elementretencion.appendChild(document.createTextNode(compra.getretencion().toString().trim()));
		element.appendChild(elementretencion);

		Element elementtotal = document.createElement(CompraConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(compra.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementflete = document.createElement(CompraConstantesFunciones.FLETE);
		elementflete.appendChild(document.createTextNode(compra.getflete().toString().trim()));
		element.appendChild(elementflete);

		Element elementimpuesto = document.createElement(CompraConstantesFunciones.IMPUESTO);
		elementimpuesto.appendChild(document.createTextNode(compra.getimpuesto().toString().trim()));
		element.appendChild(elementimpuesto);

		Element elementtipotransaccionmodulo_descripcion = document.createElement(CompraConstantesFunciones.IDTIPOTRANSACCIONMODULO);
		elementtipotransaccionmodulo_descripcion.appendChild(document.createTextNode(compra.gettipotransaccionmodulo_descripcion()));
		element.appendChild(elementtipotransaccionmodulo_descripcion);

		Element elementasientocontable_descripcion = document.createElement(CompraConstantesFunciones.IDASIENTOCONTABLE);
		elementasientocontable_descripcion.appendChild(document.createTextNode(compra.getasientocontable_descripcion()));
		element.appendChild(elementasientocontable_descripcion);

		Element elementnumero_comprobante = document.createElement(CompraConstantesFunciones.NUMEROCOMPROBANTE);
		elementnumero_comprobante.appendChild(document.createTextNode(compra.getnumero_comprobante().trim()));
		element.appendChild(elementnumero_comprobante);

		Element elementfecha = document.createElement(CompraConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(compra.getfecha().toString().trim()));
		element.appendChild(elementfecha);
	}
	
	public void generarReporteGroupGenericoComprasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<Compra> comprasSeleccionados=new ArrayList<Compra>();
		
		comprasSeleccionados=this.getComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoCompra(comprasSeleccionados);
		
		this.generarReporteCompras("Todos",comprasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoCompra(ArrayList<Compra> comprasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(Compra compraAux:comprasSeleccionados) {
				compraAux.setsDetalleGeneralEntityReporte(compraAux.toString());
			
				if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDMODULO)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDUSUARIO)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getusuario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(compraAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FECHAENTREGA)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(compraAux.getfecha_entrega()));
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getnumero_secuencial());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDTIPOCAMBIO)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.gettipocambio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDESTADOINVENTARIO)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getestadoinventario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDFORMATO)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getformato_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDEMPLEADO)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_NUMEROFACTURA)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getnumero_factura());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDTRANSPORTISTA)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.gettransportista_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDORDENCOMPRA)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getordencompra_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDPEDIDOCOMPRA)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getpedidocompra_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_AUTORIUSUARIO)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getautori_usuario());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FACTURAINICIAL)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getfactura_inicial());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FACTURAFINAL)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getfactura_final());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_SERVICIODOCUMENTO)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getservicio_documento());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FECHAVALOR)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(compraAux.getfecha_valor()));
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_NUMEROITEMS)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getnumero_items().toString());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.gettipotransaccionmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_IDASIENTOCONTABLE)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getasientocontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(compraAux.getnumero_comprobante());
				}
				 else if(sTipoSeleccionar.equals(CompraConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					compraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(compraAux.getfecha()));
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,CompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesCompra(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoCompra=true;
				this.isVisibilidadCeldaNuevoRelacionesCompra=true;
				this.isVisibilidadCeldaGuardarCambiosCompra=true;
			}
			
			this.isVisibilidadCeldaModificarCompra=false;
			this.isVisibilidadCeldaActualizarCompra=false;
			this.isVisibilidadCeldaEliminarCompra=false;
			this.isVisibilidadCeldaCancelarCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarCompra=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesCompra=false;
			this.isVisibilidadCeldaGuardarCambiosCompra=false;
			this.isVisibilidadCeldaModificarCompra=false;
			this.isVisibilidadCeldaActualizarCompra=true;
			this.isVisibilidadCeldaEliminarCompra=false;
			this.isVisibilidadCeldaCancelarCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarCompra=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesCompra=false;
			this.isVisibilidadCeldaGuardarCambiosCompra=false;
			this.isVisibilidadCeldaModificarCompra=false;
			this.isVisibilidadCeldaActualizarCompra=true;
			this.isVisibilidadCeldaEliminarCompra=true;
			this.isVisibilidadCeldaCancelarCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarCompra=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesCompra=false;
			this.isVisibilidadCeldaGuardarCambiosCompra=false;
			this.isVisibilidadCeldaModificarCompra=false;
			this.isVisibilidadCeldaActualizarCompra=true;
			this.isVisibilidadCeldaEliminarCompra=false;
			this.isVisibilidadCeldaCancelarCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarCompra=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesCompra=true;
			this.isVisibilidadCeldaGuardarCambiosCompra=true;
			this.isVisibilidadCeldaModificarCompra=false;
			this.isVisibilidadCeldaActualizarCompra=false;
			this.isVisibilidadCeldaEliminarCompra=false;
			this.isVisibilidadCeldaCancelarCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarCompra=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesCompra=false;
			this.isVisibilidadCeldaGuardarCambiosCompra=false;
			this.isVisibilidadCeldaActualizarCompra=false;
			this.isVisibilidadCeldaEliminarCompra=false;
			this.isVisibilidadCeldaCancelarCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarCompra=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesCompra=false;
			this.isVisibilidadCeldaGuardarCambiosCompra=false;
			this.isVisibilidadCeldaModificarCompra=true;
			this.isVisibilidadCeldaActualizarCompra=false;
			this.isVisibilidadCeldaEliminarCompra=false;
			this.isVisibilidadCeldaCancelarCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarCompra=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(CompraJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesCompra=true;
			this.isVisibilidadCeldaGuardarCambiosCompra=true;
		} else {
			this.actualizarEstadoPanelsCompra(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarCompra=false;
			//this.isVisibilidadCeldaVerFormCompra=false;
			this.isVisibilidadCeldaDuplicarCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!compraSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesCompra=false;
		} else {
			this.isVisibilidadCeldaNuevoCompra=false;
			this.isVisibilidadCeldaGuardarCambiosCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(compraSessionBean.getEsGuardarRelacionado()) {
			if(!compraSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesCompra=false;												
			}
			
			this.jButtonCerrarCompra.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesCompra=false;
		}
		
		if(!this.permiteMantenimiento(this.compra)) {
			this.isVisibilidadCeldaActualizarCompra=false;
			this.isVisibilidadCeldaEliminarCompra=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesCompra() {
		this.isVisibilidadCeldaNuevoCompra=false;
		this.isVisibilidadCeldaGuardarCambiosCompra=false;
	}
	
	public void actualizarEstadoPanelsCompra(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionCompra!=null) {
				this.jScrollPanelDatosEdicionCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCompra!=null) {
				this.jTabbedPaneBusquedasCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosCompra!=null) {
				this.jScrollPanelDatosCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionCompra!=null) {
				this.jPanelPaginacionCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesCompra!=null) {
				this.jPanelParametrosReportesCompra.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionCompra!=null) {
				this.jScrollPanelDatosEdicionCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCompra!=null) {
				this.jTabbedPaneBusquedasCompra.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosCompra!=null) {
				this.jScrollPanelDatosCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionCompra!=null) {
				this.jPanelPaginacionCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesCompra!=null) {
				this.jPanelParametrosReportesCompra.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionCompra!=null) {
				this.jScrollPanelDatosEdicionCompra.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCompra!=null) {
				this.jTabbedPaneBusquedasCompra.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosCompra!=null) {
				this.jScrollPanelDatosCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionCompra!=null) {
				this.jPanelPaginacionCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesCompra!=null) {
				this.jPanelParametrosReportesCompra.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionCompra!=null) {
				this.jScrollPanelDatosEdicionCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCompra!=null) {
				this.jTabbedPaneBusquedasCompra.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosCompra!=null) {
				this.jScrollPanelDatosCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionCompra!=null) {
				this.jPanelPaginacionCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesCompra!=null) {
				this.jPanelParametrosReportesCompra.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionCompra!=null) {
				this.jScrollPanelDatosEdicionCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCompra!=null) {
				this.jTabbedPaneBusquedasCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosCompra!=null) {
				this.jScrollPanelDatosCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionCompra!=null) {
				this.jPanelPaginacionCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesCompra!=null) {
				this.jPanelParametrosReportesCompra.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionCompra!=null) {
				this.jScrollPanelDatosEdicionCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCompra!=null) {
				this.jTabbedPaneBusquedasCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosCompra!=null) {
				this.jScrollPanelDatosCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionCompra!=null) {
				this.jPanelPaginacionCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesCompra!=null) {
				this.jPanelParametrosReportesCompra.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionCompra!=null) {
				this.jScrollPanelDatosEdicionCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCompra!=null) {
				this.jTabbedPaneBusquedasCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosCompra!=null) {
				this.jScrollPanelDatosCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionCompra!=null) {
				this.jPanelPaginacionCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesCompra!=null) {
				this.jPanelParametrosReportesCompra.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.compraSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasCompra!=null) {
					this.jTabbedPaneBusquedasCompra.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesCompra!=null) {
				this.jPanelParametrosReportesCompra.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.compraSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCompra!=null) {
				this.jTabbedPaneBusquedasCompra.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesCompra!=null) {
				this.jPanelParametrosReportesCompra.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdAsientoContable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdAsientoContable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaModulo(Boolean isParaModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaModuloNegation=!isParaModulo;

			this.isVisibilidadFK_IdAsientoContable=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdAsientoContable=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdAsientoContable=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdAsientoContable=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdAsientoContable=isParaMesNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaMesNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaMesNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaUsuario(Boolean isParaUsuario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUsuarioNegation=!isParaUsuario;

			this.isVisibilidadFK_IdAsientoContable=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdAsientoContable=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoCambio(Boolean isParaTipoCambio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCambioNegation=!isParaTipoCambio;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoInventario(Boolean isParaEstadoInventario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoInventarioNegation=!isParaEstadoInventario;

			this.isVisibilidadFK_IdAsientoContable=isParaEstadoInventarioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaEstadoInventarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoInventarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaEstadoInventario;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaEstadoInventarioNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaEstadoInventarioNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEstadoInventarioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdAsientoContable=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormato(Boolean isParaFormato){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoNegation=!isParaFormato;

			this.isVisibilidadFK_IdAsientoContable=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleado(Boolean isParaEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoNegation=!isParaEmpleado;

			this.isVisibilidadFK_IdAsientoContable=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpleado;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransportista(Boolean isParaTransportista){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransportistaNegation=!isParaTransportista;

			this.isVisibilidadFK_IdAsientoContable=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaOrdenCompra(Boolean isParaOrdenCompra){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaOrdenCompraNegation=!isParaOrdenCompra;

			this.isVisibilidadFK_IdAsientoContable=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaOrdenCompra;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaPedidoCompra(Boolean isParaPedidoCompra){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPedidoCompraNegation=!isParaPedidoCompra;

			this.isVisibilidadFK_IdAsientoContable=isParaPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaPedidoCompra;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoTransaccionModulo(Boolean isParaTipoTransaccionModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoTransaccionModuloNegation=!isParaTipoTransaccionModulo;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoTransaccionModulo;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaAsientoContable(Boolean isParaAsientoContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAsientoContableNegation=!isParaAsientoContable;

			this.isVisibilidadFK_IdAsientoContable=isParaAsientoContable;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdAsientoContableCompra);}

			this.isVisibilidadFK_IdCliente=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdClienteCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEmpleadoCompra);}

			this.isVisibilidadFK_IdEstadoInventario=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdEstadoInventario) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdEstadoInventarioCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdOrdenCompraCompra);}

			this.isVisibilidadFK_IdPedidoCompra=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdPedidoCompra) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdPedidoCompraCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasCompra.remove(jPanelFK_IdTipoTransaccionModuloCompra);}
		}
		
	}
	
	

	public String registrarSesionCompraParaRetencionInvenes() throws Exception {
		Boolean isPaginaPopupRetencionInven=false;

		try {

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(this.jInternalFrameDetalleFormCompra.retencioninvenSessionBean==null) {
				this.jInternalFrameDetalleFormCompra.retencioninvenSessionBean=new RetencionInvenSessionBean();
			}

			this.jInternalFrameDetalleFormCompra.retencioninvenSessionBean.setsPathNavegacionActual(compraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+RetencionInvenConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCompra.retencioninvenSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupRetencionInven=this.jInternalFrameDetalleFormCompra.retencioninvenSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCompra.retencioninvenSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeRetencionInven(true);
			this.jInternalFrameDetalleFormCompra.retencioninvenSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeRetencionInven(CompraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCompra.retencioninvenSessionBean.setisBusquedaDesdeForeignKeySesionCompra(true);
			this.jInternalFrameDetalleFormCompra.retencioninvenSessionBean.setlidCompraActual(this.idCompraActual);
			this.jInternalFrameDetalleFormCompra.retencioninvenSessionBean.setNoMantenimiento(true);

			compraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCompra(true);
			compraSessionBean.setlIdCompraActualForeignKey(this.idCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionCompraParaTransaccionLocales() throws Exception {
		Boolean isPaginaPopupTransaccionLocal=false;

		try {

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(this.jInternalFrameDetalleFormCompra.transaccionlocalSessionBean==null) {
				this.jInternalFrameDetalleFormCompra.transaccionlocalSessionBean=new TransaccionLocalSessionBean();
			}

			this.jInternalFrameDetalleFormCompra.transaccionlocalSessionBean.setsPathNavegacionActual(compraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TransaccionLocalConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCompra.transaccionlocalSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupTransaccionLocal=this.jInternalFrameDetalleFormCompra.transaccionlocalSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCompra.transaccionlocalSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTransaccionLocal(true);
			this.jInternalFrameDetalleFormCompra.transaccionlocalSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTransaccionLocal(CompraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCompra.transaccionlocalSessionBean.setisBusquedaDesdeForeignKeySesionCompra(true);
			this.jInternalFrameDetalleFormCompra.transaccionlocalSessionBean.setlidCompraActual(this.idCompraActual);
			this.jInternalFrameDetalleFormCompra.transaccionlocalSessionBean.setNoMantenimiento(true);

			compraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCompra(true);
			compraSessionBean.setlIdCompraActualForeignKey(this.idCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionCompraParaFormaPagoInvenes() throws Exception {
		Boolean isPaginaPopupFormaPagoInven=false;

		try {

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(this.jInternalFrameDetalleFormCompra.formapagoinvenSessionBean==null) {
				this.jInternalFrameDetalleFormCompra.formapagoinvenSessionBean=new FormaPagoInvenSessionBean();
			}

			this.jInternalFrameDetalleFormCompra.formapagoinvenSessionBean.setsPathNavegacionActual(compraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FormaPagoInvenConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCompra.formapagoinvenSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupFormaPagoInven=this.jInternalFrameDetalleFormCompra.formapagoinvenSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCompra.formapagoinvenSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFormaPagoInven(true);
			this.jInternalFrameDetalleFormCompra.formapagoinvenSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFormaPagoInven(CompraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCompra.formapagoinvenSessionBean.setisBusquedaDesdeForeignKeySesionCompra(true);
			this.jInternalFrameDetalleFormCompra.formapagoinvenSessionBean.setlidCompraActual(this.idCompraActual);
			this.jInternalFrameDetalleFormCompra.formapagoinvenSessionBean.setNoMantenimiento(true);

			compraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCompra(true);
			compraSessionBean.setlIdCompraActualForeignKey(this.idCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionCompraParaDetalleCompras() throws Exception {
		Boolean isPaginaPopupDetalleCompra=false;

		try {

			if(this.compraSessionBean==null) {
				this.compraSessionBean=new CompraSessionBean();
			}

			if(this.jInternalFrameDetalleFormCompra.detallecompraSessionBean==null) {
				this.jInternalFrameDetalleFormCompra.detallecompraSessionBean=new DetalleCompraSessionBean();
			}

			this.jInternalFrameDetalleFormCompra.detallecompraSessionBean.setsPathNavegacionActual(compraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DetalleCompraConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCompra.detallecompraSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDetalleCompra=this.jInternalFrameDetalleFormCompra.detallecompraSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCompra.detallecompraSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDetalleCompra(true);
			this.jInternalFrameDetalleFormCompra.detallecompraSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDetalleCompra(CompraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCompra.detallecompraSessionBean.setisBusquedaDesdeForeignKeySesionCompra(true);
			this.jInternalFrameDetalleFormCompra.detallecompraSessionBean.setlidCompraActual(this.idCompraActual);
			this.jInternalFrameDetalleFormCompra.detallecompraSessionBean.setNoMantenimiento(true);

			compraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCompra(true);
			compraSessionBean.setlIdCompraActualForeignKey(this.idCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionCompraParaBusquedaTipoCambios() throws Exception {
		Boolean isPaginaPopupTipoCambio=false;

		try {

			if(compraSessionBean==null) {
				compraSessionBean=new CompraSessionBean();
			}

			if(tipocambioSessionBean==null) {
				tipocambioSessionBean=new TipoCambioSessionBean();
			}

			tipocambioSessionBean.setsPathNavegacionActual(compraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TipoCambioConstantesFunciones.SCLASSWEBTITULO);
			tipocambioSessionBean.setisPermiteRecargarInformacion(false);
			tipocambioSessionBean.setisPaginaPopup(true);
			isPaginaPopupTipoCambio=tipocambioSessionBean.getisPaginaPopup();
			tipocambioSessionBean.setisPaginaPopup(false);
			tipocambioSessionBean.setEstaModoBusqueda(true);
			tipocambioSessionBean.setsFuncionBusquedaRapida("window.opener.compraFuncionGeneral.setCombosCodigoDesdeBusquedaid_tipo_cambio(TO_REPLACE);");
			tipocambioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTipoCambio(true);
			tipocambioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTipoCambio(CompraConstantesFunciones.SNOMBREOPCION);
			//tipocambioSessionBean.setisBusquedaDesdeForeignKeySesionCompra(true);
			//tipocambioSessionBean.setlidCompraActual(this.idCompraActual);

			compraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCompra(true);
			compraSessionBean.setlIdCompraActualForeignKey(this.idCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionCompraParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(compraSessionBean==null) {
				compraSessionBean=new CompraSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(compraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.compraFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(CompraConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionCompra(true);
			//clienteSessionBean.setlidCompraActual(this.idCompraActual);

			compraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCompra(true);
			compraSessionBean.setlIdCompraActualForeignKey(this.idCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionCompraParaBusquedaEmpleados() throws Exception {
		Boolean isPaginaPopupEmpleado=false;

		try {

			if(compraSessionBean==null) {
				compraSessionBean=new CompraSessionBean();
			}

			if(empleadoSessionBean==null) {
				empleadoSessionBean=new EmpleadoSessionBean();
			}

			empleadoSessionBean.setsPathNavegacionActual(compraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoConstantesFunciones.SCLASSWEBTITULO);
			empleadoSessionBean.setisPermiteRecargarInformacion(false);
			empleadoSessionBean.setisPaginaPopup(true);
			isPaginaPopupEmpleado=empleadoSessionBean.getisPaginaPopup();
			empleadoSessionBean.setisPaginaPopup(false);
			empleadoSessionBean.setEstaModoBusqueda(true);
			empleadoSessionBean.setsFuncionBusquedaRapida("window.opener.compraFuncionGeneral.setCombosCodigoDesdeBusquedaid_empleado(TO_REPLACE);");
			empleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleado(true);
			empleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleado(CompraConstantesFunciones.SNOMBREOPCION);
			//empleadoSessionBean.setisBusquedaDesdeForeignKeySesionCompra(true);
			//empleadoSessionBean.setlidCompraActual(this.idCompraActual);

			compraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCompra(true);
			compraSessionBean.setlIdCompraActualForeignKey(this.idCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionCompraParaBusquedaOrdenCompras() throws Exception {
		Boolean isPaginaPopupOrdenCompra=false;

		try {

			if(compraSessionBean==null) {
				compraSessionBean=new CompraSessionBean();
			}

			if(ordencompraSessionBean==null) {
				ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			ordencompraSessionBean.setsPathNavegacionActual(compraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+OrdenCompraConstantesFunciones.SCLASSWEBTITULO);
			ordencompraSessionBean.setisPermiteRecargarInformacion(false);
			ordencompraSessionBean.setisPaginaPopup(true);
			isPaginaPopupOrdenCompra=ordencompraSessionBean.getisPaginaPopup();
			ordencompraSessionBean.setisPaginaPopup(false);
			ordencompraSessionBean.setEstaModoBusqueda(true);
			ordencompraSessionBean.setsFuncionBusquedaRapida("window.opener.compraFuncionGeneral.setCombosCodigoDesdeBusquedaid_orden_compra(TO_REPLACE);");
			ordencompraSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeOrdenCompra(true);
			ordencompraSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeOrdenCompra(CompraConstantesFunciones.SNOMBREOPCION);
			//ordencompraSessionBean.setisBusquedaDesdeForeignKeySesionCompra(true);
			//ordencompraSessionBean.setlidCompraActual(this.idCompraActual);

			compraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCompra(true);
			compraSessionBean.setlIdCompraActualForeignKey(this.idCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionCompraParaBusquedaPedidoCompras() throws Exception {
		Boolean isPaginaPopupPedidoCompra=false;

		try {

			if(compraSessionBean==null) {
				compraSessionBean=new CompraSessionBean();
			}

			if(pedidocompraSessionBean==null) {
				pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			pedidocompraSessionBean.setsPathNavegacionActual(compraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PedidoCompraConstantesFunciones.SCLASSWEBTITULO);
			pedidocompraSessionBean.setisPermiteRecargarInformacion(false);
			pedidocompraSessionBean.setisPaginaPopup(true);
			isPaginaPopupPedidoCompra=pedidocompraSessionBean.getisPaginaPopup();
			pedidocompraSessionBean.setisPaginaPopup(false);
			pedidocompraSessionBean.setEstaModoBusqueda(true);
			pedidocompraSessionBean.setsFuncionBusquedaRapida("window.opener.compraFuncionGeneral.setCombosCodigoDesdeBusquedaid_pedido_compra(TO_REPLACE);");
			pedidocompraSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePedidoCompra(true);
			pedidocompraSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePedidoCompra(CompraConstantesFunciones.SNOMBREOPCION);
			//pedidocompraSessionBean.setisBusquedaDesdeForeignKeySesionCompra(true);
			//pedidocompraSessionBean.setlidCompraActual(this.idCompraActual);

			compraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCompra(true);
			compraSessionBean.setlIdCompraActualForeignKey(this.idCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionCompraParaBusquedaAsientoContables() throws Exception {
		Boolean isPaginaPopupAsientoContable=false;

		try {

			if(compraSessionBean==null) {
				compraSessionBean=new CompraSessionBean();
			}

			if(asientocontableSessionBean==null) {
				asientocontableSessionBean=new AsientoContableSessionBean();
			}

			asientocontableSessionBean.setsPathNavegacionActual(compraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+AsientoContableConstantesFunciones.SCLASSWEBTITULO);
			asientocontableSessionBean.setisPermiteRecargarInformacion(false);
			asientocontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupAsientoContable=asientocontableSessionBean.getisPaginaPopup();
			asientocontableSessionBean.setisPaginaPopup(false);
			asientocontableSessionBean.setEstaModoBusqueda(true);
			asientocontableSessionBean.setsFuncionBusquedaRapida("window.opener.compraFuncionGeneral.setCombosCodigoDesdeBusquedaid_asiento_contable(TO_REPLACE);");
			asientocontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeAsientoContable(true);
			asientocontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeAsientoContable(CompraConstantesFunciones.SNOMBREOPCION);
			//asientocontableSessionBean.setisBusquedaDesdeForeignKeySesionCompra(true);
			//asientocontableSessionBean.setlidCompraActual(this.idCompraActual);

			compraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCompra(true);
			compraSessionBean.setlIdCompraActualForeignKey(this.idCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//CompraSessionBean compraSessionBean=new CompraSessionBean();
		
		if(this.compraSessionBean==null) {
			this.compraSessionBean=new CompraSessionBean();
		}
		
		this.compraSessionBean.setsUltimaBusquedaCompra(this.getsAccionBusqueda());
		this.compraSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.compraSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
			compraSessionBean.setid_asiento_contable(this.getid_asiento_contableFK_IdAsientoContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			compraSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			compraSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
			compraSessionBean.setid_empleado(this.getid_empleadoFK_IdEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			compraSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoInventario")) {
			compraSessionBean.setid_estado_inventario(this.getid_estado_inventarioFK_IdEstadoInventario());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
			compraSessionBean.setid_modulo(this.getid_moduloFK_IdModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdOrdenCompra")) {
			compraSessionBean.setid_orden_compra(this.getid_orden_compraFK_IdOrdenCompra());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPedidoCompra")) {
			compraSessionBean.setid_pedido_compra(this.getid_pedido_compraFK_IdPedidoCompra());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			compraSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			compraSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoTransaccionModulo")) {
			compraSessionBean.setid_tipo_transaccion_modulo(this.getid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
			compraSessionBean.setid_usuario(this.getid_usuarioFK_IdUsuario());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//CompraSessionBean compraSessionBean=new CompraSessionBean();
		
		if(this.compraSessionBean==null) {
			this.compraSessionBean=new CompraSessionBean();
		}
		
		if(this.compraSessionBean.getsUltimaBusquedaCompra()!=null&&!this.compraSessionBean.getsUltimaBusquedaCompra().equals("")) {
			this.setsAccionBusqueda(compraSessionBean.getsUltimaBusquedaCompra());
			this.setiNumeroPaginacion(compraSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(compraSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
				this.setid_asiento_contableFK_IdAsientoContable(compraSessionBean.getid_asiento_contable());
				compraSessionBean.setid_asiento_contable(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(compraSessionBean.getid_cliente());
				compraSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(compraSessionBean.getid_ejercicio());
				compraSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
				this.setid_empleadoFK_IdEmpleado(compraSessionBean.getid_empleado());
				compraSessionBean.setid_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(compraSessionBean.getid_empresa());
				compraSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoInventario")) {
				this.setid_estado_inventarioFK_IdEstadoInventario(compraSessionBean.getid_estado_inventario());
				compraSessionBean.setid_estado_inventario(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
				this.setid_moduloFK_IdModulo(compraSessionBean.getid_modulo());
				compraSessionBean.setid_modulo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdOrdenCompra")) {
				this.setid_orden_compraFK_IdOrdenCompra(compraSessionBean.getid_orden_compra());
				compraSessionBean.setid_orden_compra(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPedidoCompra")) {
				this.setid_pedido_compraFK_IdPedidoCompra(compraSessionBean.getid_pedido_compra());
				compraSessionBean.setid_pedido_compra(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(compraSessionBean.getid_periodo());
				compraSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(compraSessionBean.getid_sucursal());
				compraSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoTransaccionModulo")) {
				this.setid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo(compraSessionBean.getid_tipo_transaccion_modulo());
				compraSessionBean.setid_tipo_transaccion_modulo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
				this.setid_usuarioFK_IdUsuario(compraSessionBean.getid_usuario());
				compraSessionBean.setid_usuario(-1L);
			}
		}
		
		this.compraSessionBean.setsUltimaBusquedaCompra("");
		this.compraSessionBean.setiNumeroPaginacion(CompraConstantesFunciones.INUMEROPAGINACION);
		this.compraSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaCompra(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioCompra() {
		this.updateBorderResaltarBusquedasFormularioCompra();
		this.updateVisibilidadBusquedasFormularioCompra();
		this.updateHabilitarBusquedasFormularioCompra();
	}
	
	public void updateBorderResaltarBusquedasFormularioCompra() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasCompra.getComponents().length>0) {
	

		if(this.compraConstantesFunciones.resaltarFK_IdAsientoContableCompra!=null) {
			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdAsientoContableCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
				jPanel.setBorder(this.compraConstantesFunciones.resaltarFK_IdAsientoContableCompra);
			}
		}

		if(this.compraConstantesFunciones.resaltarFK_IdClienteCompra!=null) {
			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdClienteCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
				jPanel.setBorder(this.compraConstantesFunciones.resaltarFK_IdClienteCompra);
			}
		}

		if(this.compraConstantesFunciones.resaltarFK_IdEmpleadoCompra!=null) {
			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdEmpleadoCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
				jPanel.setBorder(this.compraConstantesFunciones.resaltarFK_IdEmpleadoCompra);
			}
		}

		if(this.compraConstantesFunciones.resaltarFK_IdEstadoInventarioCompra!=null) {
			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdEstadoInventarioCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
				jPanel.setBorder(this.compraConstantesFunciones.resaltarFK_IdEstadoInventarioCompra);
			}
		}

		if(this.compraConstantesFunciones.resaltarFK_IdOrdenCompraCompra!=null) {
			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
				jPanel.setBorder(this.compraConstantesFunciones.resaltarFK_IdOrdenCompraCompra);
			}
		}

		if(this.compraConstantesFunciones.resaltarFK_IdPedidoCompraCompra!=null) {
			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdPedidoCompraCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
				jPanel.setBorder(this.compraConstantesFunciones.resaltarFK_IdPedidoCompraCompra);
			}
		}

		if(this.compraConstantesFunciones.resaltarFK_IdTipoTransaccionModuloCompra!=null) {
			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
				jPanel.setBorder(this.compraConstantesFunciones.resaltarFK_IdTipoTransaccionModuloCompra);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioCompra() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdAsientoContableCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.compraConstantesFunciones.mostrarFK_IdAsientoContableCompra);
			if(!this.compraConstantesFunciones.mostrarFK_IdAsientoContableCompra && index>-1) {
				this.jTabbedPaneBusquedasCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdClienteCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.compraConstantesFunciones.mostrarFK_IdClienteCompra);
			if(!this.compraConstantesFunciones.mostrarFK_IdClienteCompra && index>-1) {
				this.jTabbedPaneBusquedasCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdEmpleadoCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.compraConstantesFunciones.mostrarFK_IdEmpleadoCompra);
			if(!this.compraConstantesFunciones.mostrarFK_IdEmpleadoCompra && index>-1) {
				this.jTabbedPaneBusquedasCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdEstadoInventarioCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.compraConstantesFunciones.mostrarFK_IdEstadoInventarioCompra);
			if(!this.compraConstantesFunciones.mostrarFK_IdEstadoInventarioCompra && index>-1) {
				this.jTabbedPaneBusquedasCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.compraConstantesFunciones.mostrarFK_IdOrdenCompraCompra);
			if(!this.compraConstantesFunciones.mostrarFK_IdOrdenCompraCompra && index>-1) {
				this.jTabbedPaneBusquedasCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdPedidoCompraCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.compraConstantesFunciones.mostrarFK_IdPedidoCompraCompra);
			if(!this.compraConstantesFunciones.mostrarFK_IdPedidoCompraCompra && index>-1) {
				this.jTabbedPaneBusquedasCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.compraConstantesFunciones.mostrarFK_IdTipoTransaccionModuloCompra);
			if(!this.compraConstantesFunciones.mostrarFK_IdTipoTransaccionModuloCompra && index>-1) {
				this.jTabbedPaneBusquedasCompra.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioCompra() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdAsientoContableCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.compraConstantesFunciones.activarFK_IdAsientoContableCompra);
				this.jTabbedPaneBusquedasCompra.setEnabledAt(index,this.compraConstantesFunciones.activarFK_IdAsientoContableCompra);
			}

			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdClienteCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.compraConstantesFunciones.activarFK_IdClienteCompra);
				this.jTabbedPaneBusquedasCompra.setEnabledAt(index,this.compraConstantesFunciones.activarFK_IdClienteCompra);
			}

			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdEmpleadoCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.compraConstantesFunciones.activarFK_IdEmpleadoCompra);
				this.jTabbedPaneBusquedasCompra.setEnabledAt(index,this.compraConstantesFunciones.activarFK_IdEmpleadoCompra);
			}

			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdEstadoInventarioCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.compraConstantesFunciones.activarFK_IdEstadoInventarioCompra);
				this.jTabbedPaneBusquedasCompra.setEnabledAt(index,this.compraConstantesFunciones.activarFK_IdEstadoInventarioCompra);
			}

			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.compraConstantesFunciones.activarFK_IdOrdenCompraCompra);
				this.jTabbedPaneBusquedasCompra.setEnabledAt(index,this.compraConstantesFunciones.activarFK_IdOrdenCompraCompra);
			}

			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdPedidoCompraCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.compraConstantesFunciones.activarFK_IdPedidoCompraCompra);
				this.jTabbedPaneBusquedasCompra.setEnabledAt(index,this.compraConstantesFunciones.activarFK_IdPedidoCompraCompra);
			}

			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.compraConstantesFunciones.activarFK_IdTipoTransaccionModuloCompra);
				this.jTabbedPaneBusquedasCompra.setEnabledAt(index,this.compraConstantesFunciones.activarFK_IdTipoTransaccionModuloCompra);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaCompra(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdAsientoContable")) {
			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdAsientoContableCompra);

			this.jTabbedPaneBusquedasCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);

			this.compraConstantesFunciones.setResaltarFK_IdAsientoContableCompra(resaltar);

			jPanel.setBorder(this.compraConstantesFunciones.resaltarFK_IdAsientoContableCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdClienteCompra);

			this.jTabbedPaneBusquedasCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);

			this.compraConstantesFunciones.setResaltarFK_IdClienteCompra(resaltar);

			jPanel.setBorder(this.compraConstantesFunciones.resaltarFK_IdClienteCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpleado")) {
			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdEmpleadoCompra);

			this.jTabbedPaneBusquedasCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);

			this.compraConstantesFunciones.setResaltarFK_IdEmpleadoCompra(resaltar);

			jPanel.setBorder(this.compraConstantesFunciones.resaltarFK_IdEmpleadoCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoInventario")) {
			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdEstadoInventarioCompra);

			this.jTabbedPaneBusquedasCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);

			this.compraConstantesFunciones.setResaltarFK_IdEstadoInventarioCompra(resaltar);

			jPanel.setBorder(this.compraConstantesFunciones.resaltarFK_IdEstadoInventarioCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdOrdenCompra")) {
			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraCompra);

			this.jTabbedPaneBusquedasCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);

			this.compraConstantesFunciones.setResaltarFK_IdOrdenCompraCompra(resaltar);

			jPanel.setBorder(this.compraConstantesFunciones.resaltarFK_IdOrdenCompraCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdPedidoCompra")) {
			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdPedidoCompraCompra);

			this.jTabbedPaneBusquedasCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);

			this.compraConstantesFunciones.setResaltarFK_IdPedidoCompraCompra(resaltar);

			jPanel.setBorder(this.compraConstantesFunciones.resaltarFK_IdPedidoCompraCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoTransaccionModulo")) {
			index= this.jTabbedPaneBusquedasCompra.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloCompra);

			this.jTabbedPaneBusquedasCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCompra.getComponent(index);

			this.compraConstantesFunciones.setResaltarFK_IdTipoTransaccionModuloCompra(resaltar);

			jPanel.setBorder(this.compraConstantesFunciones.resaltarFK_IdTipoTransaccionModuloCompra);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarCompra.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioCompra() throws Exception {

		if(this.jInternalFrameDetalleFormCompra==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioCompra();
		this.updateVisibilidadResaltarControlesFormularioCompra();
		this.updateHabilitarResaltarControlesFormularioCompra();
		
	}
	
	public void updateBorderResaltarControlesFormularioCompra() throws Exception {
		if(this.jInternalFrameDetalleFormCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.compraConstantesFunciones.resaltaridCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jLabelidCompra.setBorder(this.compraConstantesFunciones.resaltaridCompra);}
		if(this.compraConstantesFunciones.resaltarid_empresaCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_empresaCompra.setBorder(this.compraConstantesFunciones.resaltarid_empresaCompra);}
		if(this.compraConstantesFunciones.resaltarid_sucursalCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_sucursalCompra.setBorder(this.compraConstantesFunciones.resaltarid_sucursalCompra);}
		if(this.compraConstantesFunciones.resaltarid_moduloCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_moduloCompra.setBorder(this.compraConstantesFunciones.resaltarid_moduloCompra);}
		if(this.compraConstantesFunciones.resaltarid_ejercicioCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra.setBorder(this.compraConstantesFunciones.resaltarid_ejercicioCompra);}
		if(this.compraConstantesFunciones.resaltarid_periodoCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra.setBorder(this.compraConstantesFunciones.resaltarid_periodoCompra);}
		if(this.compraConstantesFunciones.resaltarid_anioCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_anioCompra.setBorder(this.compraConstantesFunciones.resaltarid_anioCompra);}
		if(this.compraConstantesFunciones.resaltarid_mesCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_mesCompra.setBorder(this.compraConstantesFunciones.resaltarid_mesCompra);}
		if(this.compraConstantesFunciones.resaltarid_usuarioCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_usuarioCompra.setBorder(this.compraConstantesFunciones.resaltarid_usuarioCompra);}
		if(this.compraConstantesFunciones.resaltarfecha_emisionCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jDateChooserfecha_emisionCompra.setBorder(this.compraConstantesFunciones.resaltarfecha_emisionCompra);}
		if(this.compraConstantesFunciones.resaltarfecha_entregaCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jDateChooserfecha_entregaCompra.setBorder(this.compraConstantesFunciones.resaltarfecha_entregaCompra);}
		if(this.compraConstantesFunciones.resaltarnumero_secuencialCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldnumero_secuencialCompra.setBorder(this.compraConstantesFunciones.resaltarnumero_secuencialCompra);}
		if(this.compraConstantesFunciones.resaltarid_monedaCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_monedaCompra.setBorder(this.compraConstantesFunciones.resaltarid_monedaCompra);}
		if(this.compraConstantesFunciones.resaltarid_tipo_cambioCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_cambioCompra.setBorder(this.compraConstantesFunciones.resaltarid_tipo_cambioCompra);}
		if(this.compraConstantesFunciones.resaltarid_estado_inventarioCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_estado_inventarioCompra.setBorder(this.compraConstantesFunciones.resaltarid_estado_inventarioCompra);}
		if(this.compraConstantesFunciones.resaltarid_clienteCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.setBorder(this.compraConstantesFunciones.resaltarid_clienteCompra);}
		if(this.compraConstantesFunciones.resaltarid_formatoCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_formatoCompra.setBorder(this.compraConstantesFunciones.resaltarid_formatoCompra);}
		if(this.compraConstantesFunciones.resaltarid_empleadoCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_empleadoCompra.setBorder(this.compraConstantesFunciones.resaltarid_empleadoCompra);}
		if(this.compraConstantesFunciones.resaltarnumero_facturaCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldnumero_facturaCompra.setBorder(this.compraConstantesFunciones.resaltarnumero_facturaCompra);}
		if(this.compraConstantesFunciones.resaltarid_transportistaCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_transportistaCompra.setBorder(this.compraConstantesFunciones.resaltarid_transportistaCompra);}
		if(this.compraConstantesFunciones.resaltardescripcionCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextAreadescripcionCompra.setBorder(this.compraConstantesFunciones.resaltardescripcionCompra);}
		if(this.compraConstantesFunciones.resaltarid_orden_compraCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.setBorder(this.compraConstantesFunciones.resaltarid_orden_compraCompra);}
		if(this.compraConstantesFunciones.resaltarid_pedido_compraCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.setBorder(this.compraConstantesFunciones.resaltarid_pedido_compraCompra);}
		if(this.compraConstantesFunciones.resaltarautori_usuarioCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldautori_usuarioCompra.setBorder(this.compraConstantesFunciones.resaltarautori_usuarioCompra);}
		if(this.compraConstantesFunciones.resaltarfactura_inicialCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldfactura_inicialCompra.setBorder(this.compraConstantesFunciones.resaltarfactura_inicialCompra);}
		if(this.compraConstantesFunciones.resaltarfactura_finalCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldfactura_finalCompra.setBorder(this.compraConstantesFunciones.resaltarfactura_finalCompra);}
		if(this.compraConstantesFunciones.resaltarservicio_documentoCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldservicio_documentoCompra.setBorder(this.compraConstantesFunciones.resaltarservicio_documentoCompra);}
		if(this.compraConstantesFunciones.resaltarfecha_valorCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jDateChooserfecha_valorCompra.setBorder(this.compraConstantesFunciones.resaltarfecha_valorCompra);}
		if(this.compraConstantesFunciones.resaltarporcentaje_descuentoCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldporcentaje_descuentoCompra.setBorder(this.compraConstantesFunciones.resaltarporcentaje_descuentoCompra);}
		if(this.compraConstantesFunciones.resaltarsumanCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldsumanCompra.setBorder(this.compraConstantesFunciones.resaltarsumanCompra);}
		if(this.compraConstantesFunciones.resaltariceCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldiceCompra.setBorder(this.compraConstantesFunciones.resaltariceCompra);}
		if(this.compraConstantesFunciones.resaltarvalor_descuentoCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldvalor_descuentoCompra.setBorder(this.compraConstantesFunciones.resaltarvalor_descuentoCompra);}
		if(this.compraConstantesFunciones.resaltartotal_descuentoCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldtotal_descuentoCompra.setBorder(this.compraConstantesFunciones.resaltartotal_descuentoCompra);}
		if(this.compraConstantesFunciones.resaltarivaCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldivaCompra.setBorder(this.compraConstantesFunciones.resaltarivaCompra);}
		if(this.compraConstantesFunciones.resaltarstockCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldstockCompra.setBorder(this.compraConstantesFunciones.resaltarstockCompra);}
		if(this.compraConstantesFunciones.resaltarsub_totalCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldsub_totalCompra.setBorder(this.compraConstantesFunciones.resaltarsub_totalCompra);}
		if(this.compraConstantesFunciones.resaltartotal_otroCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldtotal_otroCompra.setBorder(this.compraConstantesFunciones.resaltartotal_otroCompra);}
		if(this.compraConstantesFunciones.resaltarultimo_costoCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldultimo_costoCompra.setBorder(this.compraConstantesFunciones.resaltarultimo_costoCompra);}
		if(this.compraConstantesFunciones.resaltarnumero_itemsCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldnumero_itemsCompra.setBorder(this.compraConstantesFunciones.resaltarnumero_itemsCompra);}
		if(this.compraConstantesFunciones.resaltarretencionCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldretencionCompra.setBorder(this.compraConstantesFunciones.resaltarretencionCompra);}
		if(this.compraConstantesFunciones.resaltartotalCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldtotalCompra.setBorder(this.compraConstantesFunciones.resaltartotalCompra);}
		if(this.compraConstantesFunciones.resaltarfleteCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldfleteCompra.setBorder(this.compraConstantesFunciones.resaltarfleteCompra);}
		if(this.compraConstantesFunciones.resaltarimpuestoCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldimpuestoCompra.setBorder(this.compraConstantesFunciones.resaltarimpuestoCompra);}
		if(this.compraConstantesFunciones.resaltarid_tipo_transaccion_moduloCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_transaccion_moduloCompra.setBorder(this.compraConstantesFunciones.resaltarid_tipo_transaccion_moduloCompra);}
		if(this.compraConstantesFunciones.resaltarid_asiento_contableCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jComboBoxid_asiento_contableCompra.setBorder(this.compraConstantesFunciones.resaltarid_asiento_contableCompra);}
		if(this.compraConstantesFunciones.resaltarnumero_comprobanteCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jTextFieldnumero_comprobanteCompra.setBorder(this.compraConstantesFunciones.resaltarnumero_comprobanteCompra);}
		if(this.compraConstantesFunciones.resaltarfechaCompra!=null && this.jInternalFrameDetalleFormCompra!=null) {this.jInternalFrameDetalleFormCompra.jDateChooserfechaCompra.setBorder(this.compraConstantesFunciones.resaltarfechaCompra);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioCompra() throws Exception {		
		if(this.jInternalFrameDetalleFormCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormCompra!=null) {
	
		//this.jInternalFrameDetalleFormCompra.jLabelidCompra.setVisible(this.compraConstantesFunciones.mostraridCompra);
		this.jInternalFrameDetalleFormCompra.jPanelidCompra.setVisible(this.compraConstantesFunciones.mostraridCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_empresaCompra.setVisible(this.compraConstantesFunciones.mostrarid_empresaCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_empresaCompra.setVisible(this.compraConstantesFunciones.mostrarid_empresaCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_sucursalCompra.setVisible(this.compraConstantesFunciones.mostrarid_sucursalCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_sucursalCompra.setVisible(this.compraConstantesFunciones.mostrarid_sucursalCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_moduloCompra.setVisible(this.compraConstantesFunciones.mostrarid_moduloCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_moduloCompra.setVisible(this.compraConstantesFunciones.mostrarid_moduloCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra.setVisible(this.compraConstantesFunciones.mostrarid_ejercicioCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_ejercicioCompra.setVisible(this.compraConstantesFunciones.mostrarid_ejercicioCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra.setVisible(this.compraConstantesFunciones.mostrarid_periodoCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_periodoCompra.setVisible(this.compraConstantesFunciones.mostrarid_periodoCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_anioCompra.setVisible(this.compraConstantesFunciones.mostrarid_anioCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_anioCompra.setVisible(this.compraConstantesFunciones.mostrarid_anioCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_mesCompra.setVisible(this.compraConstantesFunciones.mostrarid_mesCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_mesCompra.setVisible(this.compraConstantesFunciones.mostrarid_mesCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_usuarioCompra.setVisible(this.compraConstantesFunciones.mostrarid_usuarioCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_usuarioCompra.setVisible(this.compraConstantesFunciones.mostrarid_usuarioCompra);
		//this.jInternalFrameDetalleFormCompra.jDateChooserfecha_emisionCompra.setVisible(this.compraConstantesFunciones.mostrarfecha_emisionCompra);
		this.jInternalFrameDetalleFormCompra.jPanelfecha_emisionCompra.setVisible(this.compraConstantesFunciones.mostrarfecha_emisionCompra);
		//this.jInternalFrameDetalleFormCompra.jDateChooserfecha_entregaCompra.setVisible(this.compraConstantesFunciones.mostrarfecha_entregaCompra);
		this.jInternalFrameDetalleFormCompra.jPanelfecha_entregaCompra.setVisible(this.compraConstantesFunciones.mostrarfecha_entregaCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldnumero_secuencialCompra.setVisible(this.compraConstantesFunciones.mostrarnumero_secuencialCompra);
		this.jInternalFrameDetalleFormCompra.jPanelnumero_secuencialCompra.setVisible(this.compraConstantesFunciones.mostrarnumero_secuencialCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_monedaCompra.setVisible(this.compraConstantesFunciones.mostrarid_monedaCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_monedaCompra.setVisible(this.compraConstantesFunciones.mostrarid_monedaCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_cambioCompra.setVisible(this.compraConstantesFunciones.mostrarid_tipo_cambioCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_tipo_cambioCompra.setVisible(this.compraConstantesFunciones.mostrarid_tipo_cambioCompra);
			this.jInternalFrameDetalleFormCompra.jButtonid_tipo_cambioCompra.setVisible(this.compraConstantesFunciones.mostrarid_tipo_cambioCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_estado_inventarioCompra.setVisible(this.compraConstantesFunciones.mostrarid_estado_inventarioCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_estado_inventarioCompra.setVisible(this.compraConstantesFunciones.mostrarid_estado_inventarioCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.setVisible(this.compraConstantesFunciones.mostrarid_clienteCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_clienteCompra.setVisible(this.compraConstantesFunciones.mostrarid_clienteCompra);
			this.jInternalFrameDetalleFormCompra.jButtonid_clienteCompra.setVisible(this.compraConstantesFunciones.mostrarid_clienteCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_formatoCompra.setVisible(this.compraConstantesFunciones.mostrarid_formatoCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_formatoCompra.setVisible(this.compraConstantesFunciones.mostrarid_formatoCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_empleadoCompra.setVisible(this.compraConstantesFunciones.mostrarid_empleadoCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_empleadoCompra.setVisible(this.compraConstantesFunciones.mostrarid_empleadoCompra);
			this.jInternalFrameDetalleFormCompra.jButtonid_empleadoCompra.setVisible(this.compraConstantesFunciones.mostrarid_empleadoCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldnumero_facturaCompra.setVisible(this.compraConstantesFunciones.mostrarnumero_facturaCompra);
		this.jInternalFrameDetalleFormCompra.jPanelnumero_facturaCompra.setVisible(this.compraConstantesFunciones.mostrarnumero_facturaCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_transportistaCompra.setVisible(this.compraConstantesFunciones.mostrarid_transportistaCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_transportistaCompra.setVisible(this.compraConstantesFunciones.mostrarid_transportistaCompra);
		//this.jInternalFrameDetalleFormCompra.jTextAreadescripcionCompra.setVisible(this.compraConstantesFunciones.mostrardescripcionCompra);
		this.jInternalFrameDetalleFormCompra.jPaneldescripcionCompra.setVisible(this.compraConstantesFunciones.mostrardescripcionCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.setVisible(this.compraConstantesFunciones.mostrarid_orden_compraCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_orden_compraCompra.setVisible(this.compraConstantesFunciones.mostrarid_orden_compraCompra);
			this.jInternalFrameDetalleFormCompra.jButtonid_orden_compraCompra.setVisible(this.compraConstantesFunciones.mostrarid_orden_compraCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.setVisible(this.compraConstantesFunciones.mostrarid_pedido_compraCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_pedido_compraCompra.setVisible(this.compraConstantesFunciones.mostrarid_pedido_compraCompra);
			this.jInternalFrameDetalleFormCompra.jButtonid_pedido_compraCompra.setVisible(this.compraConstantesFunciones.mostrarid_pedido_compraCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldautori_usuarioCompra.setVisible(this.compraConstantesFunciones.mostrarautori_usuarioCompra);
		this.jInternalFrameDetalleFormCompra.jPanelautori_usuarioCompra.setVisible(this.compraConstantesFunciones.mostrarautori_usuarioCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldfactura_inicialCompra.setVisible(this.compraConstantesFunciones.mostrarfactura_inicialCompra);
		this.jInternalFrameDetalleFormCompra.jPanelfactura_inicialCompra.setVisible(this.compraConstantesFunciones.mostrarfactura_inicialCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldfactura_finalCompra.setVisible(this.compraConstantesFunciones.mostrarfactura_finalCompra);
		this.jInternalFrameDetalleFormCompra.jPanelfactura_finalCompra.setVisible(this.compraConstantesFunciones.mostrarfactura_finalCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldservicio_documentoCompra.setVisible(this.compraConstantesFunciones.mostrarservicio_documentoCompra);
		this.jInternalFrameDetalleFormCompra.jPanelservicio_documentoCompra.setVisible(this.compraConstantesFunciones.mostrarservicio_documentoCompra);
		//this.jInternalFrameDetalleFormCompra.jDateChooserfecha_valorCompra.setVisible(this.compraConstantesFunciones.mostrarfecha_valorCompra);
		this.jInternalFrameDetalleFormCompra.jPanelfecha_valorCompra.setVisible(this.compraConstantesFunciones.mostrarfecha_valorCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldporcentaje_descuentoCompra.setVisible(this.compraConstantesFunciones.mostrarporcentaje_descuentoCompra);
		this.jInternalFrameDetalleFormCompra.jPanelporcentaje_descuentoCompra.setVisible(this.compraConstantesFunciones.mostrarporcentaje_descuentoCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldsumanCompra.setVisible(this.compraConstantesFunciones.mostrarsumanCompra);
		this.jInternalFrameDetalleFormCompra.jPanelsumanCompra.setVisible(this.compraConstantesFunciones.mostrarsumanCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldiceCompra.setVisible(this.compraConstantesFunciones.mostrariceCompra);
		this.jInternalFrameDetalleFormCompra.jPaneliceCompra.setVisible(this.compraConstantesFunciones.mostrariceCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldvalor_descuentoCompra.setVisible(this.compraConstantesFunciones.mostrarvalor_descuentoCompra);
		this.jInternalFrameDetalleFormCompra.jPanelvalor_descuentoCompra.setVisible(this.compraConstantesFunciones.mostrarvalor_descuentoCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldtotal_descuentoCompra.setVisible(this.compraConstantesFunciones.mostrartotal_descuentoCompra);
		this.jInternalFrameDetalleFormCompra.jPaneltotal_descuentoCompra.setVisible(this.compraConstantesFunciones.mostrartotal_descuentoCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldivaCompra.setVisible(this.compraConstantesFunciones.mostrarivaCompra);
		this.jInternalFrameDetalleFormCompra.jPanelivaCompra.setVisible(this.compraConstantesFunciones.mostrarivaCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldstockCompra.setVisible(this.compraConstantesFunciones.mostrarstockCompra);
		this.jInternalFrameDetalleFormCompra.jPanelstockCompra.setVisible(this.compraConstantesFunciones.mostrarstockCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldsub_totalCompra.setVisible(this.compraConstantesFunciones.mostrarsub_totalCompra);
		this.jInternalFrameDetalleFormCompra.jPanelsub_totalCompra.setVisible(this.compraConstantesFunciones.mostrarsub_totalCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldtotal_otroCompra.setVisible(this.compraConstantesFunciones.mostrartotal_otroCompra);
		this.jInternalFrameDetalleFormCompra.jPaneltotal_otroCompra.setVisible(this.compraConstantesFunciones.mostrartotal_otroCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldultimo_costoCompra.setVisible(this.compraConstantesFunciones.mostrarultimo_costoCompra);
		this.jInternalFrameDetalleFormCompra.jPanelultimo_costoCompra.setVisible(this.compraConstantesFunciones.mostrarultimo_costoCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldnumero_itemsCompra.setVisible(this.compraConstantesFunciones.mostrarnumero_itemsCompra);
		this.jInternalFrameDetalleFormCompra.jPanelnumero_itemsCompra.setVisible(this.compraConstantesFunciones.mostrarnumero_itemsCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldretencionCompra.setVisible(this.compraConstantesFunciones.mostrarretencionCompra);
		this.jInternalFrameDetalleFormCompra.jPanelretencionCompra.setVisible(this.compraConstantesFunciones.mostrarretencionCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldtotalCompra.setVisible(this.compraConstantesFunciones.mostrartotalCompra);
		this.jInternalFrameDetalleFormCompra.jPaneltotalCompra.setVisible(this.compraConstantesFunciones.mostrartotalCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldfleteCompra.setVisible(this.compraConstantesFunciones.mostrarfleteCompra);
		this.jInternalFrameDetalleFormCompra.jPanelfleteCompra.setVisible(this.compraConstantesFunciones.mostrarfleteCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldimpuestoCompra.setVisible(this.compraConstantesFunciones.mostrarimpuestoCompra);
		this.jInternalFrameDetalleFormCompra.jPanelimpuestoCompra.setVisible(this.compraConstantesFunciones.mostrarimpuestoCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_transaccion_moduloCompra.setVisible(this.compraConstantesFunciones.mostrarid_tipo_transaccion_moduloCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_tipo_transaccion_moduloCompra.setVisible(this.compraConstantesFunciones.mostrarid_tipo_transaccion_moduloCompra);
		//this.jInternalFrameDetalleFormCompra.jComboBoxid_asiento_contableCompra.setVisible(this.compraConstantesFunciones.mostrarid_asiento_contableCompra);
		this.jInternalFrameDetalleFormCompra.jPanelid_asiento_contableCompra.setVisible(this.compraConstantesFunciones.mostrarid_asiento_contableCompra);
			this.jInternalFrameDetalleFormCompra.jButtonid_asiento_contableCompra.setVisible(this.compraConstantesFunciones.mostrarid_asiento_contableCompra);
		//this.jInternalFrameDetalleFormCompra.jTextFieldnumero_comprobanteCompra.setVisible(this.compraConstantesFunciones.mostrarnumero_comprobanteCompra);
		this.jInternalFrameDetalleFormCompra.jPanelnumero_comprobanteCompra.setVisible(this.compraConstantesFunciones.mostrarnumero_comprobanteCompra);
		//this.jInternalFrameDetalleFormCompra.jDateChooserfechaCompra.setVisible(this.compraConstantesFunciones.mostrarfechaCompra);
		this.jInternalFrameDetalleFormCompra.jPanelfechaCompra.setVisible(this.compraConstantesFunciones.mostrarfechaCompra);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioCompra() throws Exception {
		if(this.jInternalFrameDetalleFormCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormCompra!=null) {
	
		this.jInternalFrameDetalleFormCompra.jLabelidCompra.setEnabled(this.compraConstantesFunciones.activaridCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_empresaCompra.setEnabled(this.compraConstantesFunciones.activarid_empresaCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_sucursalCompra.setEnabled(this.compraConstantesFunciones.activarid_sucursalCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_moduloCompra.setEnabled(this.compraConstantesFunciones.activarid_moduloCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_ejercicioCompra.setEnabled(this.compraConstantesFunciones.activarid_ejercicioCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_periodoCompra.setEnabled(this.compraConstantesFunciones.activarid_periodoCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_anioCompra.setEnabled(this.compraConstantesFunciones.activarid_anioCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_mesCompra.setEnabled(this.compraConstantesFunciones.activarid_mesCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_usuarioCompra.setEnabled(this.compraConstantesFunciones.activarid_usuarioCompra);
		this.jInternalFrameDetalleFormCompra.jDateChooserfecha_emisionCompra.setEnabled(this.compraConstantesFunciones.activarfecha_emisionCompra);
		this.jInternalFrameDetalleFormCompra.jDateChooserfecha_entregaCompra.setEnabled(this.compraConstantesFunciones.activarfecha_entregaCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldnumero_secuencialCompra.setEnabled(this.compraConstantesFunciones.activarnumero_secuencialCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_monedaCompra.setEnabled(this.compraConstantesFunciones.activarid_monedaCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_cambioCompra.setEnabled(this.compraConstantesFunciones.activarid_tipo_cambioCompra);
			this.jInternalFrameDetalleFormCompra.jButtonid_tipo_cambioCompra.setEnabled(this.compraConstantesFunciones.activarid_tipo_cambioCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_estado_inventarioCompra.setEnabled(this.compraConstantesFunciones.activarid_estado_inventarioCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_clienteCompra.setEnabled(this.compraConstantesFunciones.activarid_clienteCompra);
			this.jInternalFrameDetalleFormCompra.jButtonid_clienteCompra.setEnabled(this.compraConstantesFunciones.activarid_clienteCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_formatoCompra.setEnabled(this.compraConstantesFunciones.activarid_formatoCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_empleadoCompra.setEnabled(this.compraConstantesFunciones.activarid_empleadoCompra);
			this.jInternalFrameDetalleFormCompra.jButtonid_empleadoCompra.setEnabled(this.compraConstantesFunciones.activarid_empleadoCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldnumero_facturaCompra.setEnabled(this.compraConstantesFunciones.activarnumero_facturaCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_transportistaCompra.setEnabled(this.compraConstantesFunciones.activarid_transportistaCompra);
		this.jInternalFrameDetalleFormCompra.jTextAreadescripcionCompra.setEnabled(this.compraConstantesFunciones.activardescripcionCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_orden_compraCompra.setEnabled(this.compraConstantesFunciones.activarid_orden_compraCompra);
			this.jInternalFrameDetalleFormCompra.jButtonid_orden_compraCompra.setEnabled(this.compraConstantesFunciones.activarid_orden_compraCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_pedido_compraCompra.setEnabled(this.compraConstantesFunciones.activarid_pedido_compraCompra);
			this.jInternalFrameDetalleFormCompra.jButtonid_pedido_compraCompra.setEnabled(this.compraConstantesFunciones.activarid_pedido_compraCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldautori_usuarioCompra.setEnabled(this.compraConstantesFunciones.activarautori_usuarioCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldfactura_inicialCompra.setEnabled(this.compraConstantesFunciones.activarfactura_inicialCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldfactura_finalCompra.setEnabled(this.compraConstantesFunciones.activarfactura_finalCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldservicio_documentoCompra.setEnabled(this.compraConstantesFunciones.activarservicio_documentoCompra);
		this.jInternalFrameDetalleFormCompra.jDateChooserfecha_valorCompra.setEnabled(this.compraConstantesFunciones.activarfecha_valorCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldporcentaje_descuentoCompra.setEnabled(this.compraConstantesFunciones.activarporcentaje_descuentoCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldsumanCompra.setEnabled(this.compraConstantesFunciones.activarsumanCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldiceCompra.setEnabled(this.compraConstantesFunciones.activariceCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldvalor_descuentoCompra.setEnabled(this.compraConstantesFunciones.activarvalor_descuentoCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldtotal_descuentoCompra.setEnabled(this.compraConstantesFunciones.activartotal_descuentoCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldivaCompra.setEnabled(this.compraConstantesFunciones.activarivaCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldstockCompra.setEnabled(this.compraConstantesFunciones.activarstockCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldsub_totalCompra.setEnabled(this.compraConstantesFunciones.activarsub_totalCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldtotal_otroCompra.setEnabled(this.compraConstantesFunciones.activartotal_otroCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldultimo_costoCompra.setEnabled(this.compraConstantesFunciones.activarultimo_costoCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldnumero_itemsCompra.setEnabled(this.compraConstantesFunciones.activarnumero_itemsCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldretencionCompra.setEnabled(this.compraConstantesFunciones.activarretencionCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldtotalCompra.setEnabled(this.compraConstantesFunciones.activartotalCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldfleteCompra.setEnabled(this.compraConstantesFunciones.activarfleteCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldimpuestoCompra.setEnabled(this.compraConstantesFunciones.activarimpuestoCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_tipo_transaccion_moduloCompra.setEnabled(this.compraConstantesFunciones.activarid_tipo_transaccion_moduloCompra);
		this.jInternalFrameDetalleFormCompra.jComboBoxid_asiento_contableCompra.setEnabled(this.compraConstantesFunciones.activarid_asiento_contableCompra);
			this.jInternalFrameDetalleFormCompra.jButtonid_asiento_contableCompra.setEnabled(this.compraConstantesFunciones.activarid_asiento_contableCompra);
		this.jInternalFrameDetalleFormCompra.jTextFieldnumero_comprobanteCompra.setEnabled(this.compraConstantesFunciones.activarnumero_comprobanteCompra);
		this.jInternalFrameDetalleFormCompra.jDateChooserfechaCompra.setEnabled(this.compraConstantesFunciones.activarfechaCompra);
		}
	}
	
		
}