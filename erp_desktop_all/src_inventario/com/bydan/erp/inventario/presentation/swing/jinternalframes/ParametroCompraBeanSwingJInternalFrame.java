/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.inventario.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.inventario.util.ParametroCompraConstantesFunciones;
import com.bydan.erp.inventario.util.ParametroCompraParameterReturnGeneral;
//import com.bydan.erp.inventario.util.ParametroCompraParameterGeneral;
//import com.bydan.erp.inventario.presentation.report.source.ParametroCompraBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.inventario.resources.reportes.AuxiliarReportes;


import com.bydan.erp.inventario.util.*;
import com.bydan.erp.inventario.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.inventario.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class ParametroCompraBeanSwingJInternalFrame extends ParametroCompraJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(ParametroCompraBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<ParametroCompra> parametrocompraValidator = new ClassValidator<ParametroCompra>(ParametroCompra.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public ParametroCompra parametrocompra;	
	public ParametroCompra parametrocompraAux;
	public ParametroCompra parametrocompraAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public ParametroCompra parametrocompraTotales;
	public Long idParametroCompraActual;
	public Long iIdNuevoParametroCompra=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboTipoDocumento="";

	public List<TipoDocumento> tipodocumentosForeignKey;

	public List<TipoDocumento> gettipodocumentosForeignKey() {
		return tipodocumentosForeignKey;
	}

	public void settipodocumentosForeignKey(List<TipoDocumento> tipodocumentosForeignKey) {
		this.tipodocumentosForeignKey = tipodocumentosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDocumento tipodocumentoForeignKey;

	public TipoDocumento gettipodocumentoForeignKey() {
		return tipodocumentoForeignKey;
	}

	public void settipodocumentoForeignKey(TipoDocumento tipodocumentoForeignKey) {
		this.tipodocumentoForeignKey = tipodocumentoForeignKey;
	}

	public String sFinalQueryComboTipoMovimiento="";

	public List<TipoMovimiento> tipomovimientosForeignKey;

	public List<TipoMovimiento> gettipomovimientosForeignKey() {
		return tipomovimientosForeignKey;
	}

	public void settipomovimientosForeignKey(List<TipoMovimiento> tipomovimientosForeignKey) {
		this.tipomovimientosForeignKey = tipomovimientosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoMovimiento tipomovimientoForeignKey;

	public TipoMovimiento gettipomovimientoForeignKey() {
		return tipomovimientoForeignKey;
	}

	public void settipomovimientoForeignKey(TipoMovimiento tipomovimientoForeignKey) {
		this.tipomovimientoForeignKey = tipomovimientoForeignKey;
	}

	public String sFinalQueryComboBodega="";

	public List<Bodega> bodegasForeignKey;

	public List<Bodega> getbodegasForeignKey() {
		return bodegasForeignKey;
	}

	public void setbodegasForeignKey(List<Bodega> bodegasForeignKey) {
		this.bodegasForeignKey = bodegasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegaForeignKey;

	public Bodega getbodegaForeignKey() {
		return bodegaForeignKey;
	}

	public void setbodegaForeignKey(Bodega bodegaForeignKey) {
		this.bodegaForeignKey = bodegaForeignKey;
	}

	public String sFinalQueryComboBodegaReserva="";

	public List<Bodega> bodegareservasForeignKey;

	public List<Bodega> getbodegareservasForeignKey() {
		return bodegareservasForeignKey;
	}

	public void setbodegareservasForeignKey(List<Bodega> bodegareservasForeignKey) {
		this.bodegareservasForeignKey = bodegareservasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegareservaForeignKey;

	public Bodega getbodegareservaForeignKey() {
		return bodegareservaForeignKey;
	}

	public void setbodegareservaForeignKey(Bodega bodegareservaForeignKey) {
		this.bodegareservaForeignKey = bodegareservaForeignKey;
	}

	public String sFinalQueryComboEmpleado="";

	public List<Empleado> empleadosForeignKey;

	public List<Empleado> getempleadosForeignKey() {
		return empleadosForeignKey;
	}

	public void setempleadosForeignKey(List<Empleado> empleadosForeignKey) {
		this.empleadosForeignKey = empleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoForeignKey;

	public Empleado getempleadoForeignKey() {
		return empleadoForeignKey;
	}

	public void setempleadoForeignKey(Empleado empleadoForeignKey) {
		this.empleadoForeignKey = empleadoForeignKey;
	}

	public String sFinalQueryComboEmbarcador="";

	public List<Embarcador> embarcadorsForeignKey;

	public List<Embarcador> getembarcadorsForeignKey() {
		return embarcadorsForeignKey;
	}

	public void setembarcadorsForeignKey(List<Embarcador> embarcadorsForeignKey) {
		this.embarcadorsForeignKey = embarcadorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Embarcador embarcadorForeignKey;

	public Embarcador getembarcadorForeignKey() {
		return embarcadorForeignKey;
	}

	public void setembarcadorForeignKey(Embarcador embarcadorForeignKey) {
		this.embarcadorForeignKey = embarcadorForeignKey;
	}

	public String sFinalQueryComboModulo="";

	public List<Modulo> modulosForeignKey;

	public List<Modulo> getmodulosForeignKey() {
		return modulosForeignKey;
	}

	public void setmodulosForeignKey(List<Modulo> modulosForeignKey) {
		this.modulosForeignKey = modulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Modulo moduloForeignKey;

	public Modulo getmoduloForeignKey() {
		return moduloForeignKey;
	}

	public void setmoduloForeignKey(Modulo moduloForeignKey) {
		this.moduloForeignKey = moduloForeignKey;
	}

	public String sFinalQueryComboTipoMovimientoModulo="";

	public List<TipoMovimientoModulo> tipomovimientomodulosForeignKey;

	public List<TipoMovimientoModulo> gettipomovimientomodulosForeignKey() {
		return tipomovimientomodulosForeignKey;
	}

	public void settipomovimientomodulosForeignKey(List<TipoMovimientoModulo> tipomovimientomodulosForeignKey) {
		this.tipomovimientomodulosForeignKey = tipomovimientomodulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoMovimientoModulo tipomovimientomoduloForeignKey;

	public TipoMovimientoModulo gettipomovimientomoduloForeignKey() {
		return tipomovimientomoduloForeignKey;
	}

	public void settipomovimientomoduloForeignKey(TipoMovimientoModulo tipomovimientomoduloForeignKey) {
		this.tipomovimientomoduloForeignKey = tipomovimientomoduloForeignKey;
	}

	public String sFinalQueryComboFormatoPedido="";

	public List<Formato> formatopedidosForeignKey;

	public List<Formato> getformatopedidosForeignKey() {
		return formatopedidosForeignKey;
	}

	public void setformatopedidosForeignKey(List<Formato> formatopedidosForeignKey) {
		this.formatopedidosForeignKey = formatopedidosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatopedidoForeignKey;

	public Formato getformatopedidoForeignKey() {
		return formatopedidoForeignKey;
	}

	public void setformatopedidoForeignKey(Formato formatopedidoForeignKey) {
		this.formatopedidoForeignKey = formatopedidoForeignKey;
	}

	public String sFinalQueryComboEstadoPedidoPendiente="";

	public List<EstadoPedido> estadopedidopendientesForeignKey;

	public List<EstadoPedido> getestadopedidopendientesForeignKey() {
		return estadopedidopendientesForeignKey;
	}

	public void setestadopedidopendientesForeignKey(List<EstadoPedido> estadopedidopendientesForeignKey) {
		this.estadopedidopendientesForeignKey = estadopedidopendientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoPedido estadopedidopendienteForeignKey;

	public EstadoPedido getestadopedidopendienteForeignKey() {
		return estadopedidopendienteForeignKey;
	}

	public void setestadopedidopendienteForeignKey(EstadoPedido estadopedidopendienteForeignKey) {
		this.estadopedidopendienteForeignKey = estadopedidopendienteForeignKey;
	}

	public String sFinalQueryComboFormatoCotizacion="";

	public List<Formato> formatocotizacionsForeignKey;

	public List<Formato> getformatocotizacionsForeignKey() {
		return formatocotizacionsForeignKey;
	}

	public void setformatocotizacionsForeignKey(List<Formato> formatocotizacionsForeignKey) {
		this.formatocotizacionsForeignKey = formatocotizacionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatocotizacionForeignKey;

	public Formato getformatocotizacionForeignKey() {
		return formatocotizacionForeignKey;
	}

	public void setformatocotizacionForeignKey(Formato formatocotizacionForeignKey) {
		this.formatocotizacionForeignKey = formatocotizacionForeignKey;
	}

	public String sFinalQueryComboEstadoPedidoCotizado="";

	public List<EstadoPedido> estadopedidocotizadosForeignKey;

	public List<EstadoPedido> getestadopedidocotizadosForeignKey() {
		return estadopedidocotizadosForeignKey;
	}

	public void setestadopedidocotizadosForeignKey(List<EstadoPedido> estadopedidocotizadosForeignKey) {
		this.estadopedidocotizadosForeignKey = estadopedidocotizadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoPedido estadopedidocotizadoForeignKey;

	public EstadoPedido getestadopedidocotizadoForeignKey() {
		return estadopedidocotizadoForeignKey;
	}

	public void setestadopedidocotizadoForeignKey(EstadoPedido estadopedidocotizadoForeignKey) {
		this.estadopedidocotizadoForeignKey = estadopedidocotizadoForeignKey;
	}

	public String sFinalQueryComboFormatoAutorizacion="";

	public List<Formato> formatoautorizacionsForeignKey;

	public List<Formato> getformatoautorizacionsForeignKey() {
		return formatoautorizacionsForeignKey;
	}

	public void setformatoautorizacionsForeignKey(List<Formato> formatoautorizacionsForeignKey) {
		this.formatoautorizacionsForeignKey = formatoautorizacionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatoautorizacionForeignKey;

	public Formato getformatoautorizacionForeignKey() {
		return formatoautorizacionForeignKey;
	}

	public void setformatoautorizacionForeignKey(Formato formatoautorizacionForeignKey) {
		this.formatoautorizacionForeignKey = formatoautorizacionForeignKey;
	}

	public String sFinalQueryComboEstadoPedidoAutorizado="";

	public List<EstadoPedido> estadopedidoautorizadosForeignKey;

	public List<EstadoPedido> getestadopedidoautorizadosForeignKey() {
		return estadopedidoautorizadosForeignKey;
	}

	public void setestadopedidoautorizadosForeignKey(List<EstadoPedido> estadopedidoautorizadosForeignKey) {
		this.estadopedidoautorizadosForeignKey = estadopedidoautorizadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoPedido estadopedidoautorizadoForeignKey;

	public EstadoPedido getestadopedidoautorizadoForeignKey() {
		return estadopedidoautorizadoForeignKey;
	}

	public void setestadopedidoautorizadoForeignKey(EstadoPedido estadopedidoautorizadoForeignKey) {
		this.estadopedidoautorizadoForeignKey = estadopedidoautorizadoForeignKey;
	}

	public String sFinalQueryComboFormatoItem="";

	public List<Formato> formatoitemsForeignKey;

	public List<Formato> getformatoitemsForeignKey() {
		return formatoitemsForeignKey;
	}

	public void setformatoitemsForeignKey(List<Formato> formatoitemsForeignKey) {
		this.formatoitemsForeignKey = formatoitemsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatoitemForeignKey;

	public Formato getformatoitemForeignKey() {
		return formatoitemForeignKey;
	}

	public void setformatoitemForeignKey(Formato formatoitemForeignKey) {
		this.formatoitemForeignKey = formatoitemForeignKey;
	}

	public String sFinalQueryComboEstadoPedidoAnulado="";

	public List<EstadoPedido> estadopedidoanuladosForeignKey;

	public List<EstadoPedido> getestadopedidoanuladosForeignKey() {
		return estadopedidoanuladosForeignKey;
	}

	public void setestadopedidoanuladosForeignKey(List<EstadoPedido> estadopedidoanuladosForeignKey) {
		this.estadopedidoanuladosForeignKey = estadopedidoanuladosForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoPedido estadopedidoanuladoForeignKey;

	public EstadoPedido getestadopedidoanuladoForeignKey() {
		return estadopedidoanuladoForeignKey;
	}

	public void setestadopedidoanuladoForeignKey(EstadoPedido estadopedidoanuladoForeignKey) {
		this.estadopedidoanuladoForeignKey = estadopedidoanuladoForeignKey;
	}

	public String sFinalQueryComboPrioridadPedido="";

	public List<PrioridadPedido> prioridadpedidosForeignKey;

	public List<PrioridadPedido> getprioridadpedidosForeignKey() {
		return prioridadpedidosForeignKey;
	}

	public void setprioridadpedidosForeignKey(List<PrioridadPedido> prioridadpedidosForeignKey) {
		this.prioridadpedidosForeignKey = prioridadpedidosForeignKey;
	}

	//OBJETO FK ACTUAL
	public PrioridadPedido prioridadpedidoForeignKey;

	public PrioridadPedido getprioridadpedidoForeignKey() {
		return prioridadpedidoForeignKey;
	}

	public void setprioridadpedidoForeignKey(PrioridadPedido prioridadpedidoForeignKey) {
		this.prioridadpedidoForeignKey = prioridadpedidoForeignKey;
	}

	public String sFinalQueryComboEstadoPedidoSuspendido="";

	public List<EstadoPedido> estadopedidosuspendidosForeignKey;

	public List<EstadoPedido> getestadopedidosuspendidosForeignKey() {
		return estadopedidosuspendidosForeignKey;
	}

	public void setestadopedidosuspendidosForeignKey(List<EstadoPedido> estadopedidosuspendidosForeignKey) {
		this.estadopedidosuspendidosForeignKey = estadopedidosuspendidosForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoPedido estadopedidosuspendidoForeignKey;

	public EstadoPedido getestadopedidosuspendidoForeignKey() {
		return estadopedidosuspendidoForeignKey;
	}

	public void setestadopedidosuspendidoForeignKey(EstadoPedido estadopedidosuspendidoForeignKey) {
		this.estadopedidosuspendidoForeignKey = estadopedidosuspendidoForeignKey;
	}

	public String sFinalQueryComboEstadoPedidoRegularizado="";

	public List<EstadoPedido> estadopedidoregularizadosForeignKey;

	public List<EstadoPedido> getestadopedidoregularizadosForeignKey() {
		return estadopedidoregularizadosForeignKey;
	}

	public void setestadopedidoregularizadosForeignKey(List<EstadoPedido> estadopedidoregularizadosForeignKey) {
		this.estadopedidoregularizadosForeignKey = estadopedidoregularizadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoPedido estadopedidoregularizadoForeignKey;

	public EstadoPedido getestadopedidoregularizadoForeignKey() {
		return estadopedidoregularizadoForeignKey;
	}

	public void setestadopedidoregularizadoForeignKey(EstadoPedido estadopedidoregularizadoForeignKey) {
		this.estadopedidoregularizadoForeignKey = estadopedidoregularizadoForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idEmpleadoActual=0L;

	public Long getidEmpleadoActual() {
		return idEmpleadoActual;
	}

	public void setidEmpleadoActual(Long idEmpleadoActual) {
		this.idEmpleadoActual= idEmpleadoActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoParametroCompra;
	public Boolean isPermisoNuevoParametroCompra;
	public Boolean isPermisoActualizarParametroCompra;
	public Boolean isPermisoActualizarOriginalParametroCompra;
	public Boolean isPermisoEliminarParametroCompra;
	public Boolean isPermisoGuardarCambiosParametroCompra;
	public Boolean isPermisoConsultaParametroCompra;
	public Boolean isPermisoBusquedaParametroCompra;
	public Boolean isPermisoReporteParametroCompra;
	public Boolean isPermisoPaginacionMedioParametroCompra;
	public Boolean isPermisoPaginacionAltoParametroCompra;
	public Boolean isPermisoPaginacionTodoParametroCompra;
	public Boolean isPermisoCopiarParametroCompra;
	public Boolean isPermisoVerFormParametroCompra;
	public Boolean isPermisoDuplicarParametroCompra;
	public Boolean isPermisoOrdenParametroCompra;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public ParametroCompraParameterReturnGeneral parametrocompraReturnGeneral;
	public ParametroCompraParameterReturnGeneral parametrocompraParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoParametroCompra=false;
	public Boolean esParaAccionDesdeFormularioParametroCompra=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected ParametroCompraSessionBeanAdditional parametrocompraSessionBeanAdditional=null;
	
	public ParametroCompraSessionBeanAdditional getParametroCompraSessionBeanAdditional() {
		return this.parametrocompraSessionBeanAdditional;
	}
	
	public void setParametroCompraSessionBeanAdditional(ParametroCompraSessionBeanAdditional parametrocompraSessionBeanAdditional) {
		try {
			this.parametrocompraSessionBeanAdditional=parametrocompraSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected ParametroCompraBeanSwingJInternalFrameAdditional parametrocompraBeanSwingJInternalFrameAdditional=null;
	//public class ParametroCompraBeanSwingJInternalFrame
	
	public ParametroCompraBeanSwingJInternalFrameAdditional getParametroCompraBeanSwingJInternalFrameAdditional() {
		return this.parametrocompraBeanSwingJInternalFrameAdditional;
	}
	
	public void setParametroCompraBeanSwingJInternalFrameAdditional(ParametroCompraBeanSwingJInternalFrameAdditional parametrocompraBeanSwingJInternalFrameAdditional) {
		try {
			this.parametrocompraBeanSwingJInternalFrameAdditional=parametrocompraBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public ParametroCompraLogic parametrocompraLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public ParametroCompra parametrocompraBean;
	public ParametroCompraConstantesFunciones parametrocompraConstantesFunciones;
	//public ParametroCompraParameterReturnGeneral parametrocompraReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public TipoDocumentoLogic tipodocumentoLogic;
	public TipoMovimientoLogic tipomovimientoLogic;
	public BodegaLogic bodegaLogic;
	public BodegaLogic bodegareservaLogic;
	public EmpleadoLogic empleadoLogic;
	public EmbarcadorLogic embarcadorLogic;
	public ModuloLogic moduloLogic;
	public TipoMovimientoModuloLogic tipomovimientomoduloLogic;
	public FormatoLogic formatopedidoLogic;
	public EstadoPedidoLogic estadopedidopendienteLogic;
	public FormatoLogic formatocotizacionLogic;
	public EstadoPedidoLogic estadopedidocotizadoLogic;
	public FormatoLogic formatoautorizacionLogic;
	public EstadoPedidoLogic estadopedidoautorizadoLogic;
	public FormatoLogic formatoitemLogic;
	public EstadoPedidoLogic estadopedidoanuladoLogic;
	public PrioridadPedidoLogic prioridadpedidoLogic;
	public EstadoPedidoLogic estadopedidosuspendidoLogic;
	public EstadoPedidoLogic estadopedidoregularizadoLogic;
	
	//PARAMETROS
	
	
	//public List<ParametroCompra> parametrocompras;	
	//public List<ParametroCompra> parametrocomprasEliminados;
	//public List<ParametroCompra> parametrocomprasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoParametroCompra=false;
	public Boolean isVisibilidadCeldaDuplicarParametroCompra=true;
	public Boolean isVisibilidadCeldaCopiarParametroCompra=true;
	public Boolean isVisibilidadCeldaVerFormParametroCompra=true;
	public Boolean isVisibilidadCeldaOrdenParametroCompra=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesParametroCompra=false;
	public Boolean isVisibilidadCeldaModificarParametroCompra=false;
	public Boolean isVisibilidadCeldaActualizarParametroCompra=false;
	public Boolean isVisibilidadCeldaEliminarParametroCompra=false;
	public Boolean isVisibilidadCeldaCancelarParametroCompra=false;
	public Boolean isVisibilidadCeldaGuardarParametroCompra=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosParametroCompra=false;	
	
	
	public Boolean isVisibilidadFK_IdBodega=false;
	public Boolean isVisibilidadFK_IdBodegaReserva=false;
	public Boolean isVisibilidadFK_IdEmbarcador=false;
	public Boolean isVisibilidadFK_IdEmpleado=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoPedidoAnulado=false;
	public Boolean isVisibilidadFK_IdEstadoPedidoAutorizado=false;
	public Boolean isVisibilidadFK_IdEstadoPedidoCotizado=false;
	public Boolean isVisibilidadFK_IdEstadoPedidoPendiente=false;
	public Boolean isVisibilidadFK_IdEstadoPedidoRegularizado=false;
	public Boolean isVisibilidadFK_IdEstadoPedidoSuspendo=false;
	public Boolean isVisibilidadFK_IdFormatoAutorizacion=false;
	public Boolean isVisibilidadFK_IdFormatoCotizacion=false;
	public Boolean isVisibilidadFK_IdFormatoItem=false;
	public Boolean isVisibilidadFK_IdFormatoPedido=false;
	public Boolean isVisibilidadFK_IdModulo=false;
	public Boolean isVisibilidadFK_IdPrioridadPedido=false;
	public Boolean isVisibilidadFK_IdTipoDocumento=false;
	public Boolean isVisibilidadFK_IdTipoMovimiento=false;
	public Boolean isVisibilidadFK_IdTipoMovimientoModulo=false;
	
	public Long getiIdNuevoParametroCompra() {
		return this.iIdNuevoParametroCompra;
	}

	public void setiIdNuevoParametroCompra(Long iIdNuevoParametroCompra) {
		this.iIdNuevoParametroCompra = iIdNuevoParametroCompra;
	}
	
	public Long getidParametroCompraActual() {
		return this.idParametroCompraActual;
	}

	public void setidParametroCompraActual(Long idParametroCompraActual) {
		this.idParametroCompraActual = idParametroCompraActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public ParametroCompra getparametrocompra() {
		return this.parametrocompra;
	}

	public void setparametrocompra(ParametroCompra parametrocompra) {
		this.parametrocompra = parametrocompra;
	}
	
	public ParametroCompra getparametrocompraAux() {
		return this.parametrocompraAux;
	}

	public void setparametrocompraAux(ParametroCompra parametrocompraAux) {
		this.parametrocompraAux = parametrocompraAux;
	}				
	
	public ParametroCompra getparametrocompraAnterior() {
		return this.parametrocompraAnterior;
	}

	public void setparametrocompraAnterior(ParametroCompra parametrocompraAnterior) {
		this.parametrocompraAnterior = parametrocompraAnterior;
	}	
	
	public ParametroCompra getparametrocompraTotales() {
		return this.parametrocompraTotales;
	}

	public void setparametrocompraTotales(ParametroCompra parametrocompraTotales) {
		this.parametrocompraTotales = parametrocompraTotales;
	}	
	
	public ParametroCompra getparametrocompraBean() {
		return this.parametrocompraBean;
	}

	public void setparametrocompraBean(ParametroCompra parametrocompraBean) {
		this.parametrocompraBean = parametrocompraBean;
	}	
	
	public ParametroCompraParameterReturnGeneral getparametrocompraReturnGeneral() {
		return this.parametrocompraReturnGeneral;
	}

	public void setparametrocompraReturnGeneral(ParametroCompraParameterReturnGeneral parametrocompraReturnGeneral) {
		this.parametrocompraReturnGeneral = parametrocompraReturnGeneral;
	}	
	
	
	public Long id_bodegaFK_IdBodega=-1L;

	public Long getid_bodegaFK_IdBodega() {
		return this.id_bodegaFK_IdBodega;
	}

	public void setid_bodegaFK_IdBodega(Long id_bodegaFK_IdBodega) {
		this.id_bodegaFK_IdBodega = id_bodegaFK_IdBodega;
	}

	public Long id_bodega_reservaFK_IdBodegaReserva=-1L;

	public Long getid_bodega_reservaFK_IdBodegaReserva() {
		return this.id_bodega_reservaFK_IdBodegaReserva;
	}

	public void setid_bodega_reservaFK_IdBodegaReserva(Long id_bodega_reservaFK_IdBodegaReserva) {
		this.id_bodega_reservaFK_IdBodegaReserva = id_bodega_reservaFK_IdBodegaReserva;
	}

	public Long id_embarcadorFK_IdEmbarcador=-1L;

	public Long getid_embarcadorFK_IdEmbarcador() {
		return this.id_embarcadorFK_IdEmbarcador;
	}

	public void setid_embarcadorFK_IdEmbarcador(Long id_embarcadorFK_IdEmbarcador) {
		this.id_embarcadorFK_IdEmbarcador = id_embarcadorFK_IdEmbarcador;
	}

	public Long id_empleadoFK_IdEmpleado=-1L;

	public Long getid_empleadoFK_IdEmpleado() {
		return this.id_empleadoFK_IdEmpleado;
	}

	public void setid_empleadoFK_IdEmpleado(Long id_empleadoFK_IdEmpleado) {
		this.id_empleadoFK_IdEmpleado = id_empleadoFK_IdEmpleado;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_pedido_anuladoFK_IdEstadoPedidoAnulado=-1L;

	public Long getid_estado_pedido_anuladoFK_IdEstadoPedidoAnulado() {
		return this.id_estado_pedido_anuladoFK_IdEstadoPedidoAnulado;
	}

	public void setid_estado_pedido_anuladoFK_IdEstadoPedidoAnulado(Long id_estado_pedido_anuladoFK_IdEstadoPedidoAnulado) {
		this.id_estado_pedido_anuladoFK_IdEstadoPedidoAnulado = id_estado_pedido_anuladoFK_IdEstadoPedidoAnulado;
	}

	public Long id_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado=-1L;

	public Long getid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado() {
		return this.id_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado;
	}

	public void setid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado(Long id_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado) {
		this.id_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado = id_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado;
	}

	public Long id_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado=-1L;

	public Long getid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado() {
		return this.id_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado;
	}

	public void setid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado(Long id_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado) {
		this.id_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado = id_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado;
	}

	public Long id_estado_pedido_pendienteFK_IdEstadoPedidoPendiente=-1L;

	public Long getid_estado_pedido_pendienteFK_IdEstadoPedidoPendiente() {
		return this.id_estado_pedido_pendienteFK_IdEstadoPedidoPendiente;
	}

	public void setid_estado_pedido_pendienteFK_IdEstadoPedidoPendiente(Long id_estado_pedido_pendienteFK_IdEstadoPedidoPendiente) {
		this.id_estado_pedido_pendienteFK_IdEstadoPedidoPendiente = id_estado_pedido_pendienteFK_IdEstadoPedidoPendiente;
	}

	public Long id_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado=-1L;

	public Long getid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado() {
		return this.id_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado;
	}

	public void setid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado(Long id_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado) {
		this.id_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado = id_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado;
	}

	public Long id_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo=-1L;

	public Long getid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo() {
		return this.id_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo;
	}

	public void setid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo(Long id_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo) {
		this.id_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo = id_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo;
	}

	public Long id_formato_autorizacionFK_IdFormatoAutorizacion=-1L;

	public Long getid_formato_autorizacionFK_IdFormatoAutorizacion() {
		return this.id_formato_autorizacionFK_IdFormatoAutorizacion;
	}

	public void setid_formato_autorizacionFK_IdFormatoAutorizacion(Long id_formato_autorizacionFK_IdFormatoAutorizacion) {
		this.id_formato_autorizacionFK_IdFormatoAutorizacion = id_formato_autorizacionFK_IdFormatoAutorizacion;
	}

	public Long id_formato_cotizacionFK_IdFormatoCotizacion=-1L;

	public Long getid_formato_cotizacionFK_IdFormatoCotizacion() {
		return this.id_formato_cotizacionFK_IdFormatoCotizacion;
	}

	public void setid_formato_cotizacionFK_IdFormatoCotizacion(Long id_formato_cotizacionFK_IdFormatoCotizacion) {
		this.id_formato_cotizacionFK_IdFormatoCotizacion = id_formato_cotizacionFK_IdFormatoCotizacion;
	}

	public Long id_formato_itemFK_IdFormatoItem=-1L;

	public Long getid_formato_itemFK_IdFormatoItem() {
		return this.id_formato_itemFK_IdFormatoItem;
	}

	public void setid_formato_itemFK_IdFormatoItem(Long id_formato_itemFK_IdFormatoItem) {
		this.id_formato_itemFK_IdFormatoItem = id_formato_itemFK_IdFormatoItem;
	}

	public Long id_formato_pedidoFK_IdFormatoPedido=-1L;

	public Long getid_formato_pedidoFK_IdFormatoPedido() {
		return this.id_formato_pedidoFK_IdFormatoPedido;
	}

	public void setid_formato_pedidoFK_IdFormatoPedido(Long id_formato_pedidoFK_IdFormatoPedido) {
		this.id_formato_pedidoFK_IdFormatoPedido = id_formato_pedidoFK_IdFormatoPedido;
	}

	public Long id_moduloFK_IdModulo=-1L;

	public Long getid_moduloFK_IdModulo() {
		return this.id_moduloFK_IdModulo;
	}

	public void setid_moduloFK_IdModulo(Long id_moduloFK_IdModulo) {
		this.id_moduloFK_IdModulo = id_moduloFK_IdModulo;
	}

	public Long id_prioridad_pedidoFK_IdPrioridadPedido=-1L;

	public Long getid_prioridad_pedidoFK_IdPrioridadPedido() {
		return this.id_prioridad_pedidoFK_IdPrioridadPedido;
	}

	public void setid_prioridad_pedidoFK_IdPrioridadPedido(Long id_prioridad_pedidoFK_IdPrioridadPedido) {
		this.id_prioridad_pedidoFK_IdPrioridadPedido = id_prioridad_pedidoFK_IdPrioridadPedido;
	}

	public Long id_tipo_documentoFK_IdTipoDocumento=-1L;

	public Long getid_tipo_documentoFK_IdTipoDocumento() {
		return this.id_tipo_documentoFK_IdTipoDocumento;
	}

	public void setid_tipo_documentoFK_IdTipoDocumento(Long id_tipo_documentoFK_IdTipoDocumento) {
		this.id_tipo_documentoFK_IdTipoDocumento = id_tipo_documentoFK_IdTipoDocumento;
	}

	public Long id_tipo_movimientoFK_IdTipoMovimiento=-1L;

	public Long getid_tipo_movimientoFK_IdTipoMovimiento() {
		return this.id_tipo_movimientoFK_IdTipoMovimiento;
	}

	public void setid_tipo_movimientoFK_IdTipoMovimiento(Long id_tipo_movimientoFK_IdTipoMovimiento) {
		this.id_tipo_movimientoFK_IdTipoMovimiento = id_tipo_movimientoFK_IdTipoMovimiento;
	}

	public Long id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo=-1L;

	public Long getid_tipo_movimiento_moduloFK_IdTipoMovimientoModulo() {
		return this.id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo;
	}

	public void setid_tipo_movimiento_moduloFK_IdTipoMovimientoModulo(Long id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo) {
		this.id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo = id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public ParametroCompraLogic getParametroCompraLogic()	{		
		return parametrocompraLogic;
	}

	public void setParametroCompraLogic(ParametroCompraLogic parametrocompraLogic) {
		this.parametrocompraLogic = parametrocompraLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoParametroCompra() {
		return isEsNuevoParametroCompra;
	}

	public void setIsEsNuevoParametroCompra(Boolean isEsNuevoParametroCompra) {
		this.isEsNuevoParametroCompra = isEsNuevoParametroCompra;
	}

	public Boolean getEsParaAccionDesdeFormularioParametroCompra() {
		return esParaAccionDesdeFormularioParametroCompra;
	}
	
	public void setEsParaAccionDesdeFormularioParametroCompra(Boolean esParaAccionDesdeFormularioParametroCompra) {
		this.esParaAccionDesdeFormularioParametroCompra = esParaAccionDesdeFormularioParametroCompra;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(parametrocompraSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDocumentosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodocumentosForeignKey=new ArrayList<TipoDocumento>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDocumentoLogic tipodocumentoLogic=new TipoDocumentoLogic();

			//tipodocumentoLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumento()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipodocumentoLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

					tipodocumentoLogic.getTodosTipoDocumentosWithConnection(sFinalQuery,new Pagination());

					this.tipodocumentosForeignKey=tipodocumentoLogic.getTipoDocumentos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDocumento(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodocumentoLogic.getEntityWithConnection(parametrocompraSessionBean.getlidTipoDocumentoActual());
					this.tipodocumentosForeignKey.add(tipodocumentoLogic.getTipoDocumento());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoMovimientosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipomovimientosForeignKey=new ArrayList<TipoMovimiento>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoMovimientoLogic tipomovimientoLogic=new TipoMovimientoLogic();

			//tipomovimientoLogic.getTipoMovimientoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimiento()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipomovimientoLogic.getTipoMovimientoDataAccess().setIsForForeingKeyData(true);

					tipomovimientoLogic.getTodosTipoMovimientosWithConnection(sFinalQuery,new Pagination());

					this.tipomovimientosForeignKey=tipomovimientoLogic.getTipoMovimientos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoMovimiento(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipomovimientoLogic.getEntityWithConnection(parametrocompraSessionBean.getlidTipoMovimientoActual());
					this.tipomovimientosForeignKey.add(tipomovimientoLogic.getTipoMovimiento());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegasForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegasForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodega(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(parametrocompraSessionBean.getlidBodegaActual());
					this.bodegasForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegaReservasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegareservasForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionBodegaReserva()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegareservaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegareservasForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodegaReserva(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(parametrocompraSessionBean.getlidBodegaReservaActual());
					this.bodegareservasForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadosForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadosForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(parametrocompraSessionBean.getlidEmpleadoActual());
					this.empleadosForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmbarcadorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.embarcadorsForeignKey=new ArrayList<Embarcador>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmbarcadorLogic embarcadorLogic=new EmbarcadorLogic();

			//embarcadorLogic.getEmbarcadorDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEmbarcador()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//embarcadorLogic.getEmbarcadorDataAccess().setIsForForeingKeyData(true);

					embarcadorLogic.getTodosEmbarcadorsWithConnection(sFinalQuery,new Pagination());

					this.embarcadorsForeignKey=embarcadorLogic.getEmbarcadors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmbarcador(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					embarcadorLogic.getEntityWithConnection(parametrocompraSessionBean.getlidEmbarcadorActual());
					this.embarcadorsForeignKey.add(embarcadorLogic.getEmbarcador());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.modulosForeignKey=new ArrayList<Modulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ModuloLogic moduloLogic=new ModuloLogic();

			//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

					moduloLogic.getTodosModulosWithConnection(sFinalQuery,new Pagination());

					this.modulosForeignKey=moduloLogic.getModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					moduloLogic.getEntityWithConnection(parametrocompraSessionBean.getlidModuloActual());
					this.modulosForeignKey.add(moduloLogic.getModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoMovimientoModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipomovimientomodulosForeignKey=new ArrayList<TipoMovimientoModulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoMovimientoModuloLogic tipomovimientomoduloLogic=new TipoMovimientoModuloLogic();

			//tipomovimientomoduloLogic.getTipoMovimientoModuloDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimientoModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipomovimientomoduloLogic.getTipoMovimientoModuloDataAccess().setIsForForeingKeyData(true);

					tipomovimientomoduloLogic.getTodosTipoMovimientoModulosWithConnection(sFinalQuery,new Pagination());

					this.tipomovimientomodulosForeignKey=tipomovimientomoduloLogic.getTipoMovimientoModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoMovimientoModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipomovimientomoduloLogic.getEntityWithConnection(parametrocompraSessionBean.getlidTipoMovimientoModuloActual());
					this.tipomovimientomodulosForeignKey.add(tipomovimientomoduloLogic.getTipoMovimientoModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatoPedidosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatopedidosForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionFormatoPedido()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatopedidoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatopedidosForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormatoPedido(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(parametrocompraSessionBean.getlidFormatoPedidoActual());
					this.formatopedidosForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoPedidoPendientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadopedidopendientesForeignKey=new ArrayList<EstadoPedido>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoPedidoLogic estadopedidoLogic=new EstadoPedidoLogic();

			//estadopedidoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoPendiente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadopedidopendienteLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

					estadopedidoLogic.getTodosEstadoPedidosWithConnection(sFinalQuery,new Pagination());

					this.estadopedidopendientesForeignKey=estadopedidoLogic.getEstadoPedidos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoPedidoPendiente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadopedidoLogic.getEntityWithConnection(parametrocompraSessionBean.getlidEstadoPedidoPendienteActual());
					this.estadopedidopendientesForeignKey.add(estadopedidoLogic.getEstadoPedido());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatoCotizacionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatocotizacionsForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionFormatoCotizacion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatocotizacionLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatocotizacionsForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormatoCotizacion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(parametrocompraSessionBean.getlidFormatoCotizacionActual());
					this.formatocotizacionsForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoPedidoCotizadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadopedidocotizadosForeignKey=new ArrayList<EstadoPedido>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoPedidoLogic estadopedidoLogic=new EstadoPedidoLogic();

			//estadopedidoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoCotizado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadopedidocotizadoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

					estadopedidoLogic.getTodosEstadoPedidosWithConnection(sFinalQuery,new Pagination());

					this.estadopedidocotizadosForeignKey=estadopedidoLogic.getEstadoPedidos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoPedidoCotizado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadopedidoLogic.getEntityWithConnection(parametrocompraSessionBean.getlidEstadoPedidoCotizadoActual());
					this.estadopedidocotizadosForeignKey.add(estadopedidoLogic.getEstadoPedido());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatoAutorizacionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatoautorizacionsForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionFormatoAutorizacion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatoautorizacionLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatoautorizacionsForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormatoAutorizacion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(parametrocompraSessionBean.getlidFormatoAutorizacionActual());
					this.formatoautorizacionsForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoPedidoAutorizadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadopedidoautorizadosForeignKey=new ArrayList<EstadoPedido>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoPedidoLogic estadopedidoLogic=new EstadoPedidoLogic();

			//estadopedidoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoAutorizado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadopedidoautorizadoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

					estadopedidoLogic.getTodosEstadoPedidosWithConnection(sFinalQuery,new Pagination());

					this.estadopedidoautorizadosForeignKey=estadopedidoLogic.getEstadoPedidos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoPedidoAutorizado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadopedidoLogic.getEntityWithConnection(parametrocompraSessionBean.getlidEstadoPedidoAutorizadoActual());
					this.estadopedidoautorizadosForeignKey.add(estadopedidoLogic.getEstadoPedido());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatoItemsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatoitemsForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionFormatoItem()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatoitemLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatoitemsForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormatoItem(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(parametrocompraSessionBean.getlidFormatoItemActual());
					this.formatoitemsForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoPedidoAnuladosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadopedidoanuladosForeignKey=new ArrayList<EstadoPedido>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoPedidoLogic estadopedidoLogic=new EstadoPedidoLogic();

			//estadopedidoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoAnulado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadopedidoanuladoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

					estadopedidoLogic.getTodosEstadoPedidosWithConnection(sFinalQuery,new Pagination());

					this.estadopedidoanuladosForeignKey=estadopedidoLogic.getEstadoPedidos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoPedidoAnulado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadopedidoLogic.getEntityWithConnection(parametrocompraSessionBean.getlidEstadoPedidoAnuladoActual());
					this.estadopedidoanuladosForeignKey.add(estadopedidoLogic.getEstadoPedido());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPrioridadPedidosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.prioridadpedidosForeignKey=new ArrayList<PrioridadPedido>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PrioridadPedidoLogic prioridadpedidoLogic=new PrioridadPedidoLogic();

			//prioridadpedidoLogic.getPrioridadPedidoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionPrioridadPedido()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//prioridadpedidoLogic.getPrioridadPedidoDataAccess().setIsForForeingKeyData(true);

					prioridadpedidoLogic.getTodosPrioridadPedidosWithConnection(sFinalQuery,new Pagination());

					this.prioridadpedidosForeignKey=prioridadpedidoLogic.getPrioridadPedidos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPrioridadPedido(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					prioridadpedidoLogic.getEntityWithConnection(parametrocompraSessionBean.getlidPrioridadPedidoActual());
					this.prioridadpedidosForeignKey.add(prioridadpedidoLogic.getPrioridadPedido());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoPedidoSuspendidosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadopedidosuspendidosForeignKey=new ArrayList<EstadoPedido>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoPedidoLogic estadopedidoLogic=new EstadoPedidoLogic();

			//estadopedidoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoSuspendido()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadopedidosuspendidoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

					estadopedidoLogic.getTodosEstadoPedidosWithConnection(sFinalQuery,new Pagination());

					this.estadopedidosuspendidosForeignKey=estadopedidoLogic.getEstadoPedidos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoPedidoSuspendido(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadopedidoLogic.getEntityWithConnection(parametrocompraSessionBean.getlidEstadoPedidoSuspendidoActual());
					this.estadopedidosuspendidosForeignKey.add(estadopedidoLogic.getEstadoPedido());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoPedidoRegularizadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadopedidoregularizadosForeignKey=new ArrayList<EstadoPedido>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoPedidoLogic estadopedidoLogic=new EstadoPedidoLogic();

			//estadopedidoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoRegularizado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadopedidoregularizadoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

					estadopedidoLogic.getTodosEstadoPedidosWithConnection(sFinalQuery,new Pagination());

					this.estadopedidoregularizadosForeignKey=estadopedidoLogic.getEstadoPedidos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoPedidoRegularizado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadopedidoLogic.getEntityWithConnection(parametrocompraSessionBean.getlidEstadoPedidoRegularizadoActual());
					this.estadopedidoregularizadosForeignKey.add(estadopedidoLogic.getEstadoPedido());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empresaParametroCompra.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaParametroCompra.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empresaParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empresaParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaParametroCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaParametroCompraGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaParametroCompraGenerico!=null && jComboBoxid_empresaParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_empresaParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDocumentoForeignKey(Long idTipoDocumentoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentoTemp=null;

			for(TipoDocumento tipodocumentoAux:tipodocumentosForeignKey) {
				if(tipodocumentoAux.getId()!=null && tipodocumentoAux.getId().equals(idTipoDocumentoSeleccionado)) {
					tipodocumentoTemp=tipodocumentoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodocumentoTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setTipoDocumento(tipodocumentoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_documentoParametroCompra.setSelectedItem(tipodocumentoTemp);
					}
				} else {
					//jComboBoxid_tipo_documentoParametroCompra.setSelectedItem(tipodocumentoTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_documentoParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_documentoParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumento") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodocumentoTemp!=null && jComboBoxid_tipo_documentoFK_IdTipoDocumentoParametroCompra!=null) {
						jComboBoxid_tipo_documentoFK_IdTipoDocumentoParametroCompra.setSelectedItem(tipodocumentoTemp);
					} else {
						if(jComboBoxid_tipo_documentoFK_IdTipoDocumentoParametroCompra!=null) {
							//jComboBoxid_tipo_documentoFK_IdTipoDocumentoParametroCompra.setSelectedItem(tipodocumentoTemp);
							if(jComboBoxid_tipo_documentoFK_IdTipoDocumentoParametroCompra.getItemCount()>0) {
								jComboBoxid_tipo_documentoFK_IdTipoDocumentoParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDocumentoForeignKeyDescripcion(Long idTipoDocumentoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDocumento  tipodocumentoTemp=null;

			for(TipoDocumento tipodocumentoAux:tipodocumentosForeignKey) {
				if(tipodocumentoAux.getId()!=null && tipodocumentoAux.getId().equals(idTipoDocumentoSeleccionado)) {
					tipodocumentoTemp=tipodocumentoAux;
					break;
				}
			}


			sDescripcion=TipoDocumentoConstantesFunciones.getTipoDocumentoDescripcion(tipodocumentoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDocumentoForeignKeyGenerico(Long idTipoDocumentoSeleccionado,JComboBox jComboBoxid_tipo_documentoParametroCompraGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentoTemp=null;

			for(TipoDocumento tipodocumentoAux:tipodocumentosForeignKey) {
				if(tipodocumentoAux.getId()!=null && tipodocumentoAux.getId().equals(idTipoDocumentoSeleccionado)) {
					tipodocumentoTemp=tipodocumentoAux;
					break;
				}
			}

			if(tipodocumentoTemp!=null) {
				jComboBoxid_tipo_documentoParametroCompraGenerico.setSelectedItem(tipodocumentoTemp);
			} else {
				if(jComboBoxid_tipo_documentoParametroCompraGenerico!=null && jComboBoxid_tipo_documentoParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_tipo_documentoParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoMovimientoForeignKey(Long idTipoMovimientoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoMovimiento  tipomovimientoTemp=null;

			for(TipoMovimiento tipomovimientoAux:tipomovimientosForeignKey) {
				if(tipomovimientoAux.getId()!=null && tipomovimientoAux.getId().equals(idTipoMovimientoSeleccionado)) {
					tipomovimientoTemp=tipomovimientoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipomovimientoTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setTipoMovimiento(tipomovimientoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimientoParametroCompra.setSelectedItem(tipomovimientoTemp);
					}
				} else {
					//jComboBoxid_tipo_movimientoParametroCompra.setSelectedItem(tipomovimientoTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimientoParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimientoParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoMovimiento") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipomovimientoTemp!=null && jComboBoxid_tipo_movimientoFK_IdTipoMovimientoParametroCompra!=null) {
						jComboBoxid_tipo_movimientoFK_IdTipoMovimientoParametroCompra.setSelectedItem(tipomovimientoTemp);
					} else {
						if(jComboBoxid_tipo_movimientoFK_IdTipoMovimientoParametroCompra!=null) {
							//jComboBoxid_tipo_movimientoFK_IdTipoMovimientoParametroCompra.setSelectedItem(tipomovimientoTemp);
							if(jComboBoxid_tipo_movimientoFK_IdTipoMovimientoParametroCompra.getItemCount()>0) {
								jComboBoxid_tipo_movimientoFK_IdTipoMovimientoParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoMovimientoForeignKeyDescripcion(Long idTipoMovimientoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoMovimiento  tipomovimientoTemp=null;

			for(TipoMovimiento tipomovimientoAux:tipomovimientosForeignKey) {
				if(tipomovimientoAux.getId()!=null && tipomovimientoAux.getId().equals(idTipoMovimientoSeleccionado)) {
					tipomovimientoTemp=tipomovimientoAux;
					break;
				}
			}


			sDescripcion=TipoMovimientoConstantesFunciones.getTipoMovimientoDescripcion(tipomovimientoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoMovimientoForeignKeyGenerico(Long idTipoMovimientoSeleccionado,JComboBox jComboBoxid_tipo_movimientoParametroCompraGenerico)throws Exception
	{
		try
		{
			TipoMovimiento  tipomovimientoTemp=null;

			for(TipoMovimiento tipomovimientoAux:tipomovimientosForeignKey) {
				if(tipomovimientoAux.getId()!=null && tipomovimientoAux.getId().equals(idTipoMovimientoSeleccionado)) {
					tipomovimientoTemp=tipomovimientoAux;
					break;
				}
			}

			if(tipomovimientoTemp!=null) {
				jComboBoxid_tipo_movimientoParametroCompraGenerico.setSelectedItem(tipomovimientoTemp);
			} else {
				if(jComboBoxid_tipo_movimientoParametroCompraGenerico!=null && jComboBoxid_tipo_movimientoParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_tipo_movimientoParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaForeignKey(Long idBodegaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegaTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setBodega(bodegaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodegaParametroCompra.setSelectedItem(bodegaTemp);
					}
				} else {
					//jComboBoxid_bodegaParametroCompra.setSelectedItem(bodegaTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodegaParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodegaParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegaTemp!=null && jComboBoxid_bodegaFK_IdBodegaParametroCompra!=null) {
						jComboBoxid_bodegaFK_IdBodegaParametroCompra.setSelectedItem(bodegaTemp);
					} else {
						if(jComboBoxid_bodegaFK_IdBodegaParametroCompra!=null) {
							//jComboBoxid_bodegaFK_IdBodegaParametroCompra.setSelectedItem(bodegaTemp);
							if(jComboBoxid_bodegaFK_IdBodegaParametroCompra.getItemCount()>0) {
								jComboBoxid_bodegaFK_IdBodegaParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaForeignKeyDescripcion(Long idBodegaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaForeignKeyGenerico(Long idBodegaSeleccionado,JComboBox jComboBoxid_bodegaParametroCompraGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(bodegaTemp!=null) {
				jComboBoxid_bodegaParametroCompraGenerico.setSelectedItem(bodegaTemp);
			} else {
				if(jComboBoxid_bodegaParametroCompraGenerico!=null && jComboBoxid_bodegaParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_bodegaParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaReservaForeignKey(Long idBodegaReservaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegareservaTemp=null;

			for(Bodega bodegareservaAux:bodegareservasForeignKey) {
				if(bodegareservaAux.getId()!=null && bodegareservaAux.getId().equals(idBodegaReservaSeleccionado)) {
					bodegareservaTemp=bodegareservaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegareservaTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setBodegaReserva(bodegareservaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodega_reservaParametroCompra.setSelectedItem(bodegareservaTemp);
					}
				} else {
					//jComboBoxid_bodega_reservaParametroCompra.setSelectedItem(bodegareservaTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodega_reservaParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodega_reservaParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodegaReserva") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegareservaTemp!=null && jComboBoxid_bodega_reservaFK_IdBodegaReservaParametroCompra!=null) {
						jComboBoxid_bodega_reservaFK_IdBodegaReservaParametroCompra.setSelectedItem(bodegareservaTemp);
					} else {
						if(jComboBoxid_bodega_reservaFK_IdBodegaReservaParametroCompra!=null) {
							//jComboBoxid_bodega_reservaFK_IdBodegaReservaParametroCompra.setSelectedItem(bodegareservaTemp);
							if(jComboBoxid_bodega_reservaFK_IdBodegaReservaParametroCompra.getItemCount()>0) {
								jComboBoxid_bodega_reservaFK_IdBodegaReservaParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaReservaForeignKeyDescripcion(Long idBodegaReservaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegareservaTemp=null;

			for(Bodega bodegareservaAux:bodegareservasForeignKey) {
				if(bodegareservaAux.getId()!=null && bodegareservaAux.getId().equals(idBodegaReservaSeleccionado)) {
					bodegareservaTemp=bodegareservaAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegareservaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaReservaForeignKeyGenerico(Long idBodegaReservaSeleccionado,JComboBox jComboBoxid_bodega_reservaParametroCompraGenerico)throws Exception
	{
		try
		{
			Bodega  bodegareservaTemp=null;

			for(Bodega bodegareservaAux:bodegareservasForeignKey) {
				if(bodegareservaAux.getId()!=null && bodegareservaAux.getId().equals(idBodegaReservaSeleccionado)) {
					bodegareservaTemp=bodegareservaAux;
					break;
				}
			}

			if(bodegareservaTemp!=null) {
				jComboBoxid_bodega_reservaParametroCompraGenerico.setSelectedItem(bodegareservaTemp);
			} else {
				if(jComboBoxid_bodega_reservaParametroCompraGenerico!=null && jComboBoxid_bodega_reservaParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_bodega_reservaParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoForeignKey(Long idEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setEmpleado(empleadoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empleadoParametroCompra.setSelectedItem(empleadoTemp);
					}
				} else {
					//jComboBoxid_empleadoParametroCompra.setSelectedItem(empleadoTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empleadoParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empleadoParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(empleadoTemp!=null && jComboBoxid_empleadoFK_IdEmpleadoParametroCompra!=null) {
						jComboBoxid_empleadoFK_IdEmpleadoParametroCompra.setSelectedItem(empleadoTemp);
					} else {
						if(jComboBoxid_empleadoFK_IdEmpleadoParametroCompra!=null) {
							//jComboBoxid_empleadoFK_IdEmpleadoParametroCompra.setSelectedItem(empleadoTemp);
							if(jComboBoxid_empleadoFK_IdEmpleadoParametroCompra.getItemCount()>0) {
								jComboBoxid_empleadoFK_IdEmpleadoParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoForeignKeyDescripcion(Long idEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoForeignKeyGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxid_empleadoParametroCompraGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(empleadoTemp!=null) {
				jComboBoxid_empleadoParametroCompraGenerico.setSelectedItem(empleadoTemp);
			} else {
				if(jComboBoxid_empleadoParametroCompraGenerico!=null && jComboBoxid_empleadoParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_empleadoParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmbarcadorForeignKey(Long idEmbarcadorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Embarcador  embarcadorTemp=null;

			for(Embarcador embarcadorAux:embarcadorsForeignKey) {
				if(embarcadorAux.getId()!=null && embarcadorAux.getId().equals(idEmbarcadorSeleccionado)) {
					embarcadorTemp=embarcadorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(embarcadorTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setEmbarcador(embarcadorTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_embarcadorParametroCompra.setSelectedItem(embarcadorTemp);
					}
				} else {
					//jComboBoxid_embarcadorParametroCompra.setSelectedItem(embarcadorTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_embarcadorParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_embarcadorParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmbarcador") || sFormularioTipoBusqueda.equals("Todos")){
					if(embarcadorTemp!=null && jComboBoxid_embarcadorFK_IdEmbarcadorParametroCompra!=null) {
						jComboBoxid_embarcadorFK_IdEmbarcadorParametroCompra.setSelectedItem(embarcadorTemp);
					} else {
						if(jComboBoxid_embarcadorFK_IdEmbarcadorParametroCompra!=null) {
							//jComboBoxid_embarcadorFK_IdEmbarcadorParametroCompra.setSelectedItem(embarcadorTemp);
							if(jComboBoxid_embarcadorFK_IdEmbarcadorParametroCompra.getItemCount()>0) {
								jComboBoxid_embarcadorFK_IdEmbarcadorParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmbarcadorForeignKeyDescripcion(Long idEmbarcadorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Embarcador  embarcadorTemp=null;

			for(Embarcador embarcadorAux:embarcadorsForeignKey) {
				if(embarcadorAux.getId()!=null && embarcadorAux.getId().equals(idEmbarcadorSeleccionado)) {
					embarcadorTemp=embarcadorAux;
					break;
				}
			}


			sDescripcion=EmbarcadorConstantesFunciones.getEmbarcadorDescripcion(embarcadorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmbarcadorForeignKeyGenerico(Long idEmbarcadorSeleccionado,JComboBox jComboBoxid_embarcadorParametroCompraGenerico)throws Exception
	{
		try
		{
			Embarcador  embarcadorTemp=null;

			for(Embarcador embarcadorAux:embarcadorsForeignKey) {
				if(embarcadorAux.getId()!=null && embarcadorAux.getId().equals(idEmbarcadorSeleccionado)) {
					embarcadorTemp=embarcadorAux;
					break;
				}
			}

			if(embarcadorTemp!=null) {
				jComboBoxid_embarcadorParametroCompraGenerico.setSelectedItem(embarcadorTemp);
			} else {
				if(jComboBoxid_embarcadorParametroCompraGenerico!=null && jComboBoxid_embarcadorParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_embarcadorParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualModuloForeignKey(Long idModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(moduloTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setModulo(moduloTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_moduloParametroCompra.setSelectedItem(moduloTemp);
					}
				} else {
					//jComboBoxid_moduloParametroCompra.setSelectedItem(moduloTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_moduloParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_moduloParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualModuloForeignKeyDescripcion(Long idModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}


			sDescripcion=ModuloConstantesFunciones.getModuloDescripcion(moduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualModuloForeignKeyGenerico(Long idModuloSeleccionado,JComboBox jComboBoxid_moduloParametroCompraGenerico)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(moduloTemp!=null) {
				jComboBoxid_moduloParametroCompraGenerico.setSelectedItem(moduloTemp);
			} else {
				if(jComboBoxid_moduloParametroCompraGenerico!=null && jComboBoxid_moduloParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_moduloParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoMovimientoModuloForeignKey(Long idTipoMovimientoModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoMovimientoModulo  tipomovimientomoduloTemp=null;

			for(TipoMovimientoModulo tipomovimientomoduloAux:tipomovimientomodulosForeignKey) {
				if(tipomovimientomoduloAux.getId()!=null && tipomovimientomoduloAux.getId().equals(idTipoMovimientoModuloSeleccionado)) {
					tipomovimientomoduloTemp=tipomovimientomoduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipomovimientomoduloTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setTipoMovimientoModulo(tipomovimientomoduloTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimiento_moduloParametroCompra.setSelectedItem(tipomovimientomoduloTemp);
					}
				} else {
					//jComboBoxid_tipo_movimiento_moduloParametroCompra.setSelectedItem(tipomovimientomoduloTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimiento_moduloParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimiento_moduloParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoMovimientoModulo") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipomovimientomoduloTemp!=null && jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloParametroCompra!=null) {
						jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloParametroCompra.setSelectedItem(tipomovimientomoduloTemp);
					} else {
						if(jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloParametroCompra!=null) {
							//jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloParametroCompra.setSelectedItem(tipomovimientomoduloTemp);
							if(jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloParametroCompra.getItemCount()>0) {
								jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoMovimientoModuloForeignKeyDescripcion(Long idTipoMovimientoModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoMovimientoModulo  tipomovimientomoduloTemp=null;

			for(TipoMovimientoModulo tipomovimientomoduloAux:tipomovimientomodulosForeignKey) {
				if(tipomovimientomoduloAux.getId()!=null && tipomovimientomoduloAux.getId().equals(idTipoMovimientoModuloSeleccionado)) {
					tipomovimientomoduloTemp=tipomovimientomoduloAux;
					break;
				}
			}


			sDescripcion=TipoMovimientoModuloConstantesFunciones.getTipoMovimientoModuloDescripcion(tipomovimientomoduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoMovimientoModuloForeignKeyGenerico(Long idTipoMovimientoModuloSeleccionado,JComboBox jComboBoxid_tipo_movimiento_moduloParametroCompraGenerico)throws Exception
	{
		try
		{
			TipoMovimientoModulo  tipomovimientomoduloTemp=null;

			for(TipoMovimientoModulo tipomovimientomoduloAux:tipomovimientomodulosForeignKey) {
				if(tipomovimientomoduloAux.getId()!=null && tipomovimientomoduloAux.getId().equals(idTipoMovimientoModuloSeleccionado)) {
					tipomovimientomoduloTemp=tipomovimientomoduloAux;
					break;
				}
			}

			if(tipomovimientomoduloTemp!=null) {
				jComboBoxid_tipo_movimiento_moduloParametroCompraGenerico.setSelectedItem(tipomovimientomoduloTemp);
			} else {
				if(jComboBoxid_tipo_movimiento_moduloParametroCompraGenerico!=null && jComboBoxid_tipo_movimiento_moduloParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_tipo_movimiento_moduloParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoPedidoForeignKey(Long idFormatoPedidoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatopedidoTemp=null;

			for(Formato formatopedidoAux:formatopedidosForeignKey) {
				if(formatopedidoAux.getId()!=null && formatopedidoAux.getId().equals(idFormatoPedidoSeleccionado)) {
					formatopedidoTemp=formatopedidoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatopedidoTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setFormatoPedido(formatopedidoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_pedidoParametroCompra.setSelectedItem(formatopedidoTemp);
					}
				} else {
					//jComboBoxid_formato_pedidoParametroCompra.setSelectedItem(formatopedidoTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_pedidoParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_pedidoParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFormatoPedido") || sFormularioTipoBusqueda.equals("Todos")){
					if(formatopedidoTemp!=null && jComboBoxid_formato_pedidoFK_IdFormatoPedidoParametroCompra!=null) {
						jComboBoxid_formato_pedidoFK_IdFormatoPedidoParametroCompra.setSelectedItem(formatopedidoTemp);
					} else {
						if(jComboBoxid_formato_pedidoFK_IdFormatoPedidoParametroCompra!=null) {
							//jComboBoxid_formato_pedidoFK_IdFormatoPedidoParametroCompra.setSelectedItem(formatopedidoTemp);
							if(jComboBoxid_formato_pedidoFK_IdFormatoPedidoParametroCompra.getItemCount()>0) {
								jComboBoxid_formato_pedidoFK_IdFormatoPedidoParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoPedidoForeignKeyDescripcion(Long idFormatoPedidoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatopedidoTemp=null;

			for(Formato formatopedidoAux:formatopedidosForeignKey) {
				if(formatopedidoAux.getId()!=null && formatopedidoAux.getId().equals(idFormatoPedidoSeleccionado)) {
					formatopedidoTemp=formatopedidoAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatopedidoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoPedidoForeignKeyGenerico(Long idFormatoPedidoSeleccionado,JComboBox jComboBoxid_formato_pedidoParametroCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatopedidoTemp=null;

			for(Formato formatopedidoAux:formatopedidosForeignKey) {
				if(formatopedidoAux.getId()!=null && formatopedidoAux.getId().equals(idFormatoPedidoSeleccionado)) {
					formatopedidoTemp=formatopedidoAux;
					break;
				}
			}

			if(formatopedidoTemp!=null) {
				jComboBoxid_formato_pedidoParametroCompraGenerico.setSelectedItem(formatopedidoTemp);
			} else {
				if(jComboBoxid_formato_pedidoParametroCompraGenerico!=null && jComboBoxid_formato_pedidoParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_formato_pedidoParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoPedidoPendienteForeignKey(Long idEstadoPedidoPendienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidopendienteTemp=null;

			for(EstadoPedido estadopedidopendienteAux:estadopedidopendientesForeignKey) {
				if(estadopedidopendienteAux.getId()!=null && estadopedidopendienteAux.getId().equals(idEstadoPedidoPendienteSeleccionado)) {
					estadopedidopendienteTemp=estadopedidopendienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadopedidopendienteTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setEstadoPedidoPendiente(estadopedidopendienteTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_pendienteParametroCompra.setSelectedItem(estadopedidopendienteTemp);
					}
				} else {
					//jComboBoxid_estado_pedido_pendienteParametroCompra.setSelectedItem(estadopedidopendienteTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_pendienteParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_pendienteParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoPendiente") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadopedidopendienteTemp!=null && jComboBoxid_estado_pedido_pendienteFK_IdEstadoPedidoPendienteParametroCompra!=null) {
						jComboBoxid_estado_pedido_pendienteFK_IdEstadoPedidoPendienteParametroCompra.setSelectedItem(estadopedidopendienteTemp);
					} else {
						if(jComboBoxid_estado_pedido_pendienteFK_IdEstadoPedidoPendienteParametroCompra!=null) {
							//jComboBoxid_estado_pedido_pendienteFK_IdEstadoPedidoPendienteParametroCompra.setSelectedItem(estadopedidopendienteTemp);
							if(jComboBoxid_estado_pedido_pendienteFK_IdEstadoPedidoPendienteParametroCompra.getItemCount()>0) {
								jComboBoxid_estado_pedido_pendienteFK_IdEstadoPedidoPendienteParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoPedidoPendienteForeignKeyDescripcion(Long idEstadoPedidoPendienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoPedido  estadopedidopendienteTemp=null;

			for(EstadoPedido estadopedidopendienteAux:estadopedidopendientesForeignKey) {
				if(estadopedidopendienteAux.getId()!=null && estadopedidopendienteAux.getId().equals(idEstadoPedidoPendienteSeleccionado)) {
					estadopedidopendienteTemp=estadopedidopendienteAux;
					break;
				}
			}


			sDescripcion=EstadoPedidoConstantesFunciones.getEstadoPedidoDescripcion(estadopedidopendienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoPedidoPendienteForeignKeyGenerico(Long idEstadoPedidoPendienteSeleccionado,JComboBox jComboBoxid_estado_pedido_pendienteParametroCompraGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidopendienteTemp=null;

			for(EstadoPedido estadopedidopendienteAux:estadopedidopendientesForeignKey) {
				if(estadopedidopendienteAux.getId()!=null && estadopedidopendienteAux.getId().equals(idEstadoPedidoPendienteSeleccionado)) {
					estadopedidopendienteTemp=estadopedidopendienteAux;
					break;
				}
			}

			if(estadopedidopendienteTemp!=null) {
				jComboBoxid_estado_pedido_pendienteParametroCompraGenerico.setSelectedItem(estadopedidopendienteTemp);
			} else {
				if(jComboBoxid_estado_pedido_pendienteParametroCompraGenerico!=null && jComboBoxid_estado_pedido_pendienteParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_estado_pedido_pendienteParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoCotizacionForeignKey(Long idFormatoCotizacionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatocotizacionTemp=null;

			for(Formato formatocotizacionAux:formatocotizacionsForeignKey) {
				if(formatocotizacionAux.getId()!=null && formatocotizacionAux.getId().equals(idFormatoCotizacionSeleccionado)) {
					formatocotizacionTemp=formatocotizacionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatocotizacionTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setFormatoCotizacion(formatocotizacionTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_cotizacionParametroCompra.setSelectedItem(formatocotizacionTemp);
					}
				} else {
					//jComboBoxid_formato_cotizacionParametroCompra.setSelectedItem(formatocotizacionTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_cotizacionParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_cotizacionParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFormatoCotizacion") || sFormularioTipoBusqueda.equals("Todos")){
					if(formatocotizacionTemp!=null && jComboBoxid_formato_cotizacionFK_IdFormatoCotizacionParametroCompra!=null) {
						jComboBoxid_formato_cotizacionFK_IdFormatoCotizacionParametroCompra.setSelectedItem(formatocotizacionTemp);
					} else {
						if(jComboBoxid_formato_cotizacionFK_IdFormatoCotizacionParametroCompra!=null) {
							//jComboBoxid_formato_cotizacionFK_IdFormatoCotizacionParametroCompra.setSelectedItem(formatocotizacionTemp);
							if(jComboBoxid_formato_cotizacionFK_IdFormatoCotizacionParametroCompra.getItemCount()>0) {
								jComboBoxid_formato_cotizacionFK_IdFormatoCotizacionParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoCotizacionForeignKeyDescripcion(Long idFormatoCotizacionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatocotizacionTemp=null;

			for(Formato formatocotizacionAux:formatocotizacionsForeignKey) {
				if(formatocotizacionAux.getId()!=null && formatocotizacionAux.getId().equals(idFormatoCotizacionSeleccionado)) {
					formatocotizacionTemp=formatocotizacionAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatocotizacionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoCotizacionForeignKeyGenerico(Long idFormatoCotizacionSeleccionado,JComboBox jComboBoxid_formato_cotizacionParametroCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatocotizacionTemp=null;

			for(Formato formatocotizacionAux:formatocotizacionsForeignKey) {
				if(formatocotizacionAux.getId()!=null && formatocotizacionAux.getId().equals(idFormatoCotizacionSeleccionado)) {
					formatocotizacionTemp=formatocotizacionAux;
					break;
				}
			}

			if(formatocotizacionTemp!=null) {
				jComboBoxid_formato_cotizacionParametroCompraGenerico.setSelectedItem(formatocotizacionTemp);
			} else {
				if(jComboBoxid_formato_cotizacionParametroCompraGenerico!=null && jComboBoxid_formato_cotizacionParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_formato_cotizacionParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoPedidoCotizadoForeignKey(Long idEstadoPedidoCotizadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidocotizadoTemp=null;

			for(EstadoPedido estadopedidocotizadoAux:estadopedidocotizadosForeignKey) {
				if(estadopedidocotizadoAux.getId()!=null && estadopedidocotizadoAux.getId().equals(idEstadoPedidoCotizadoSeleccionado)) {
					estadopedidocotizadoTemp=estadopedidocotizadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadopedidocotizadoTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setEstadoPedidoCotizado(estadopedidocotizadoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_cotizadoParametroCompra.setSelectedItem(estadopedidocotizadoTemp);
					}
				} else {
					//jComboBoxid_estado_pedido_cotizadoParametroCompra.setSelectedItem(estadopedidocotizadoTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_cotizadoParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_cotizadoParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoCotizado") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadopedidocotizadoTemp!=null && jComboBoxid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizadoParametroCompra!=null) {
						jComboBoxid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizadoParametroCompra.setSelectedItem(estadopedidocotizadoTemp);
					} else {
						if(jComboBoxid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizadoParametroCompra!=null) {
							//jComboBoxid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizadoParametroCompra.setSelectedItem(estadopedidocotizadoTemp);
							if(jComboBoxid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizadoParametroCompra.getItemCount()>0) {
								jComboBoxid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizadoParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoPedidoCotizadoForeignKeyDescripcion(Long idEstadoPedidoCotizadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoPedido  estadopedidocotizadoTemp=null;

			for(EstadoPedido estadopedidocotizadoAux:estadopedidocotizadosForeignKey) {
				if(estadopedidocotizadoAux.getId()!=null && estadopedidocotizadoAux.getId().equals(idEstadoPedidoCotizadoSeleccionado)) {
					estadopedidocotizadoTemp=estadopedidocotizadoAux;
					break;
				}
			}


			sDescripcion=EstadoPedidoConstantesFunciones.getEstadoPedidoDescripcion(estadopedidocotizadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoPedidoCotizadoForeignKeyGenerico(Long idEstadoPedidoCotizadoSeleccionado,JComboBox jComboBoxid_estado_pedido_cotizadoParametroCompraGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidocotizadoTemp=null;

			for(EstadoPedido estadopedidocotizadoAux:estadopedidocotizadosForeignKey) {
				if(estadopedidocotizadoAux.getId()!=null && estadopedidocotizadoAux.getId().equals(idEstadoPedidoCotizadoSeleccionado)) {
					estadopedidocotizadoTemp=estadopedidocotizadoAux;
					break;
				}
			}

			if(estadopedidocotizadoTemp!=null) {
				jComboBoxid_estado_pedido_cotizadoParametroCompraGenerico.setSelectedItem(estadopedidocotizadoTemp);
			} else {
				if(jComboBoxid_estado_pedido_cotizadoParametroCompraGenerico!=null && jComboBoxid_estado_pedido_cotizadoParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_estado_pedido_cotizadoParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoAutorizacionForeignKey(Long idFormatoAutorizacionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatoautorizacionTemp=null;

			for(Formato formatoautorizacionAux:formatoautorizacionsForeignKey) {
				if(formatoautorizacionAux.getId()!=null && formatoautorizacionAux.getId().equals(idFormatoAutorizacionSeleccionado)) {
					formatoautorizacionTemp=formatoautorizacionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatoautorizacionTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setFormatoAutorizacion(formatoautorizacionTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_autorizacionParametroCompra.setSelectedItem(formatoautorizacionTemp);
					}
				} else {
					//jComboBoxid_formato_autorizacionParametroCompra.setSelectedItem(formatoautorizacionTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_autorizacionParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_autorizacionParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFormatoAutorizacion") || sFormularioTipoBusqueda.equals("Todos")){
					if(formatoautorizacionTemp!=null && jComboBoxid_formato_autorizacionFK_IdFormatoAutorizacionParametroCompra!=null) {
						jComboBoxid_formato_autorizacionFK_IdFormatoAutorizacionParametroCompra.setSelectedItem(formatoautorizacionTemp);
					} else {
						if(jComboBoxid_formato_autorizacionFK_IdFormatoAutorizacionParametroCompra!=null) {
							//jComboBoxid_formato_autorizacionFK_IdFormatoAutorizacionParametroCompra.setSelectedItem(formatoautorizacionTemp);
							if(jComboBoxid_formato_autorizacionFK_IdFormatoAutorizacionParametroCompra.getItemCount()>0) {
								jComboBoxid_formato_autorizacionFK_IdFormatoAutorizacionParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoAutorizacionForeignKeyDescripcion(Long idFormatoAutorizacionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatoautorizacionTemp=null;

			for(Formato formatoautorizacionAux:formatoautorizacionsForeignKey) {
				if(formatoautorizacionAux.getId()!=null && formatoautorizacionAux.getId().equals(idFormatoAutorizacionSeleccionado)) {
					formatoautorizacionTemp=formatoautorizacionAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatoautorizacionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoAutorizacionForeignKeyGenerico(Long idFormatoAutorizacionSeleccionado,JComboBox jComboBoxid_formato_autorizacionParametroCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatoautorizacionTemp=null;

			for(Formato formatoautorizacionAux:formatoautorizacionsForeignKey) {
				if(formatoautorizacionAux.getId()!=null && formatoautorizacionAux.getId().equals(idFormatoAutorizacionSeleccionado)) {
					formatoautorizacionTemp=formatoautorizacionAux;
					break;
				}
			}

			if(formatoautorizacionTemp!=null) {
				jComboBoxid_formato_autorizacionParametroCompraGenerico.setSelectedItem(formatoautorizacionTemp);
			} else {
				if(jComboBoxid_formato_autorizacionParametroCompraGenerico!=null && jComboBoxid_formato_autorizacionParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_formato_autorizacionParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoPedidoAutorizadoForeignKey(Long idEstadoPedidoAutorizadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoautorizadoTemp=null;

			for(EstadoPedido estadopedidoautorizadoAux:estadopedidoautorizadosForeignKey) {
				if(estadopedidoautorizadoAux.getId()!=null && estadopedidoautorizadoAux.getId().equals(idEstadoPedidoAutorizadoSeleccionado)) {
					estadopedidoautorizadoTemp=estadopedidoautorizadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadopedidoautorizadoTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setEstadoPedidoAutorizado(estadopedidoautorizadoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_autorizadoParametroCompra.setSelectedItem(estadopedidoautorizadoTemp);
					}
				} else {
					//jComboBoxid_estado_pedido_autorizadoParametroCompra.setSelectedItem(estadopedidoautorizadoTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_autorizadoParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_autorizadoParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoAutorizado") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadopedidoautorizadoTemp!=null && jComboBoxid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizadoParametroCompra!=null) {
						jComboBoxid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizadoParametroCompra.setSelectedItem(estadopedidoautorizadoTemp);
					} else {
						if(jComboBoxid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizadoParametroCompra!=null) {
							//jComboBoxid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizadoParametroCompra.setSelectedItem(estadopedidoautorizadoTemp);
							if(jComboBoxid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizadoParametroCompra.getItemCount()>0) {
								jComboBoxid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizadoParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoPedidoAutorizadoForeignKeyDescripcion(Long idEstadoPedidoAutorizadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoPedido  estadopedidoautorizadoTemp=null;

			for(EstadoPedido estadopedidoautorizadoAux:estadopedidoautorizadosForeignKey) {
				if(estadopedidoautorizadoAux.getId()!=null && estadopedidoautorizadoAux.getId().equals(idEstadoPedidoAutorizadoSeleccionado)) {
					estadopedidoautorizadoTemp=estadopedidoautorizadoAux;
					break;
				}
			}


			sDescripcion=EstadoPedidoConstantesFunciones.getEstadoPedidoDescripcion(estadopedidoautorizadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoPedidoAutorizadoForeignKeyGenerico(Long idEstadoPedidoAutorizadoSeleccionado,JComboBox jComboBoxid_estado_pedido_autorizadoParametroCompraGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoautorizadoTemp=null;

			for(EstadoPedido estadopedidoautorizadoAux:estadopedidoautorizadosForeignKey) {
				if(estadopedidoautorizadoAux.getId()!=null && estadopedidoautorizadoAux.getId().equals(idEstadoPedidoAutorizadoSeleccionado)) {
					estadopedidoautorizadoTemp=estadopedidoautorizadoAux;
					break;
				}
			}

			if(estadopedidoautorizadoTemp!=null) {
				jComboBoxid_estado_pedido_autorizadoParametroCompraGenerico.setSelectedItem(estadopedidoautorizadoTemp);
			} else {
				if(jComboBoxid_estado_pedido_autorizadoParametroCompraGenerico!=null && jComboBoxid_estado_pedido_autorizadoParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_estado_pedido_autorizadoParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoItemForeignKey(Long idFormatoItemSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatoitemTemp=null;

			for(Formato formatoitemAux:formatoitemsForeignKey) {
				if(formatoitemAux.getId()!=null && formatoitemAux.getId().equals(idFormatoItemSeleccionado)) {
					formatoitemTemp=formatoitemAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatoitemTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setFormatoItem(formatoitemTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_itemParametroCompra.setSelectedItem(formatoitemTemp);
					}
				} else {
					//jComboBoxid_formato_itemParametroCompra.setSelectedItem(formatoitemTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_itemParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_itemParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFormatoItem") || sFormularioTipoBusqueda.equals("Todos")){
					if(formatoitemTemp!=null && jComboBoxid_formato_itemFK_IdFormatoItemParametroCompra!=null) {
						jComboBoxid_formato_itemFK_IdFormatoItemParametroCompra.setSelectedItem(formatoitemTemp);
					} else {
						if(jComboBoxid_formato_itemFK_IdFormatoItemParametroCompra!=null) {
							//jComboBoxid_formato_itemFK_IdFormatoItemParametroCompra.setSelectedItem(formatoitemTemp);
							if(jComboBoxid_formato_itemFK_IdFormatoItemParametroCompra.getItemCount()>0) {
								jComboBoxid_formato_itemFK_IdFormatoItemParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoItemForeignKeyDescripcion(Long idFormatoItemSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatoitemTemp=null;

			for(Formato formatoitemAux:formatoitemsForeignKey) {
				if(formatoitemAux.getId()!=null && formatoitemAux.getId().equals(idFormatoItemSeleccionado)) {
					formatoitemTemp=formatoitemAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatoitemTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoItemForeignKeyGenerico(Long idFormatoItemSeleccionado,JComboBox jComboBoxid_formato_itemParametroCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatoitemTemp=null;

			for(Formato formatoitemAux:formatoitemsForeignKey) {
				if(formatoitemAux.getId()!=null && formatoitemAux.getId().equals(idFormatoItemSeleccionado)) {
					formatoitemTemp=formatoitemAux;
					break;
				}
			}

			if(formatoitemTemp!=null) {
				jComboBoxid_formato_itemParametroCompraGenerico.setSelectedItem(formatoitemTemp);
			} else {
				if(jComboBoxid_formato_itemParametroCompraGenerico!=null && jComboBoxid_formato_itemParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_formato_itemParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoPedidoAnuladoForeignKey(Long idEstadoPedidoAnuladoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoanuladoTemp=null;

			for(EstadoPedido estadopedidoanuladoAux:estadopedidoanuladosForeignKey) {
				if(estadopedidoanuladoAux.getId()!=null && estadopedidoanuladoAux.getId().equals(idEstadoPedidoAnuladoSeleccionado)) {
					estadopedidoanuladoTemp=estadopedidoanuladoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadopedidoanuladoTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setEstadoPedidoAnulado(estadopedidoanuladoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_anuladoParametroCompra.setSelectedItem(estadopedidoanuladoTemp);
					}
				} else {
					//jComboBoxid_estado_pedido_anuladoParametroCompra.setSelectedItem(estadopedidoanuladoTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_anuladoParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_anuladoParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoAnulado") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadopedidoanuladoTemp!=null && jComboBoxid_estado_pedido_anuladoFK_IdEstadoPedidoAnuladoParametroCompra!=null) {
						jComboBoxid_estado_pedido_anuladoFK_IdEstadoPedidoAnuladoParametroCompra.setSelectedItem(estadopedidoanuladoTemp);
					} else {
						if(jComboBoxid_estado_pedido_anuladoFK_IdEstadoPedidoAnuladoParametroCompra!=null) {
							//jComboBoxid_estado_pedido_anuladoFK_IdEstadoPedidoAnuladoParametroCompra.setSelectedItem(estadopedidoanuladoTemp);
							if(jComboBoxid_estado_pedido_anuladoFK_IdEstadoPedidoAnuladoParametroCompra.getItemCount()>0) {
								jComboBoxid_estado_pedido_anuladoFK_IdEstadoPedidoAnuladoParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoPedidoAnuladoForeignKeyDescripcion(Long idEstadoPedidoAnuladoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoPedido  estadopedidoanuladoTemp=null;

			for(EstadoPedido estadopedidoanuladoAux:estadopedidoanuladosForeignKey) {
				if(estadopedidoanuladoAux.getId()!=null && estadopedidoanuladoAux.getId().equals(idEstadoPedidoAnuladoSeleccionado)) {
					estadopedidoanuladoTemp=estadopedidoanuladoAux;
					break;
				}
			}


			sDescripcion=EstadoPedidoConstantesFunciones.getEstadoPedidoDescripcion(estadopedidoanuladoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoPedidoAnuladoForeignKeyGenerico(Long idEstadoPedidoAnuladoSeleccionado,JComboBox jComboBoxid_estado_pedido_anuladoParametroCompraGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoanuladoTemp=null;

			for(EstadoPedido estadopedidoanuladoAux:estadopedidoanuladosForeignKey) {
				if(estadopedidoanuladoAux.getId()!=null && estadopedidoanuladoAux.getId().equals(idEstadoPedidoAnuladoSeleccionado)) {
					estadopedidoanuladoTemp=estadopedidoanuladoAux;
					break;
				}
			}

			if(estadopedidoanuladoTemp!=null) {
				jComboBoxid_estado_pedido_anuladoParametroCompraGenerico.setSelectedItem(estadopedidoanuladoTemp);
			} else {
				if(jComboBoxid_estado_pedido_anuladoParametroCompraGenerico!=null && jComboBoxid_estado_pedido_anuladoParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_estado_pedido_anuladoParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPrioridadPedidoForeignKey(Long idPrioridadPedidoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			PrioridadPedido  prioridadpedidoTemp=null;

			for(PrioridadPedido prioridadpedidoAux:prioridadpedidosForeignKey) {
				if(prioridadpedidoAux.getId()!=null && prioridadpedidoAux.getId().equals(idPrioridadPedidoSeleccionado)) {
					prioridadpedidoTemp=prioridadpedidoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(prioridadpedidoTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setPrioridadPedido(prioridadpedidoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_prioridad_pedidoParametroCompra.setSelectedItem(prioridadpedidoTemp);
					}
				} else {
					//jComboBoxid_prioridad_pedidoParametroCompra.setSelectedItem(prioridadpedidoTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_prioridad_pedidoParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_prioridad_pedidoParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdPrioridadPedido") || sFormularioTipoBusqueda.equals("Todos")){
					if(prioridadpedidoTemp!=null && jComboBoxid_prioridad_pedidoFK_IdPrioridadPedidoParametroCompra!=null) {
						jComboBoxid_prioridad_pedidoFK_IdPrioridadPedidoParametroCompra.setSelectedItem(prioridadpedidoTemp);
					} else {
						if(jComboBoxid_prioridad_pedidoFK_IdPrioridadPedidoParametroCompra!=null) {
							//jComboBoxid_prioridad_pedidoFK_IdPrioridadPedidoParametroCompra.setSelectedItem(prioridadpedidoTemp);
							if(jComboBoxid_prioridad_pedidoFK_IdPrioridadPedidoParametroCompra.getItemCount()>0) {
								jComboBoxid_prioridad_pedidoFK_IdPrioridadPedidoParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPrioridadPedidoForeignKeyDescripcion(Long idPrioridadPedidoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			PrioridadPedido  prioridadpedidoTemp=null;

			for(PrioridadPedido prioridadpedidoAux:prioridadpedidosForeignKey) {
				if(prioridadpedidoAux.getId()!=null && prioridadpedidoAux.getId().equals(idPrioridadPedidoSeleccionado)) {
					prioridadpedidoTemp=prioridadpedidoAux;
					break;
				}
			}


			sDescripcion=PrioridadPedidoConstantesFunciones.getPrioridadPedidoDescripcion(prioridadpedidoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPrioridadPedidoForeignKeyGenerico(Long idPrioridadPedidoSeleccionado,JComboBox jComboBoxid_prioridad_pedidoParametroCompraGenerico)throws Exception
	{
		try
		{
			PrioridadPedido  prioridadpedidoTemp=null;

			for(PrioridadPedido prioridadpedidoAux:prioridadpedidosForeignKey) {
				if(prioridadpedidoAux.getId()!=null && prioridadpedidoAux.getId().equals(idPrioridadPedidoSeleccionado)) {
					prioridadpedidoTemp=prioridadpedidoAux;
					break;
				}
			}

			if(prioridadpedidoTemp!=null) {
				jComboBoxid_prioridad_pedidoParametroCompraGenerico.setSelectedItem(prioridadpedidoTemp);
			} else {
				if(jComboBoxid_prioridad_pedidoParametroCompraGenerico!=null && jComboBoxid_prioridad_pedidoParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_prioridad_pedidoParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoPedidoSuspendidoForeignKey(Long idEstadoPedidoSuspendidoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidosuspendidoTemp=null;

			for(EstadoPedido estadopedidosuspendidoAux:estadopedidosuspendidosForeignKey) {
				if(estadopedidosuspendidoAux.getId()!=null && estadopedidosuspendidoAux.getId().equals(idEstadoPedidoSuspendidoSeleccionado)) {
					estadopedidosuspendidoTemp=estadopedidosuspendidoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadopedidosuspendidoTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setEstadoPedidoSuspendido(estadopedidosuspendidoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_suspendidoParametroCompra.setSelectedItem(estadopedidosuspendidoTemp);
					}
				} else {
					//jComboBoxid_estado_pedido_suspendidoParametroCompra.setSelectedItem(estadopedidosuspendidoTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_suspendidoParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_suspendidoParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoSuspendo") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadopedidosuspendidoTemp!=null && jComboBoxid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendoParametroCompra!=null) {
						jComboBoxid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendoParametroCompra.setSelectedItem(estadopedidosuspendidoTemp);
					} else {
						if(jComboBoxid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendoParametroCompra!=null) {
							//jComboBoxid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendoParametroCompra.setSelectedItem(estadopedidosuspendidoTemp);
							if(jComboBoxid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendoParametroCompra.getItemCount()>0) {
								jComboBoxid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendoParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoPedidoSuspendidoForeignKeyDescripcion(Long idEstadoPedidoSuspendidoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoPedido  estadopedidosuspendidoTemp=null;

			for(EstadoPedido estadopedidosuspendidoAux:estadopedidosuspendidosForeignKey) {
				if(estadopedidosuspendidoAux.getId()!=null && estadopedidosuspendidoAux.getId().equals(idEstadoPedidoSuspendidoSeleccionado)) {
					estadopedidosuspendidoTemp=estadopedidosuspendidoAux;
					break;
				}
			}


			sDescripcion=EstadoPedidoConstantesFunciones.getEstadoPedidoDescripcion(estadopedidosuspendidoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoPedidoSuspendidoForeignKeyGenerico(Long idEstadoPedidoSuspendidoSeleccionado,JComboBox jComboBoxid_estado_pedido_suspendidoParametroCompraGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidosuspendidoTemp=null;

			for(EstadoPedido estadopedidosuspendidoAux:estadopedidosuspendidosForeignKey) {
				if(estadopedidosuspendidoAux.getId()!=null && estadopedidosuspendidoAux.getId().equals(idEstadoPedidoSuspendidoSeleccionado)) {
					estadopedidosuspendidoTemp=estadopedidosuspendidoAux;
					break;
				}
			}

			if(estadopedidosuspendidoTemp!=null) {
				jComboBoxid_estado_pedido_suspendidoParametroCompraGenerico.setSelectedItem(estadopedidosuspendidoTemp);
			} else {
				if(jComboBoxid_estado_pedido_suspendidoParametroCompraGenerico!=null && jComboBoxid_estado_pedido_suspendidoParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_estado_pedido_suspendidoParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoPedidoRegularizadoForeignKey(Long idEstadoPedidoRegularizadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoregularizadoTemp=null;

			for(EstadoPedido estadopedidoregularizadoAux:estadopedidoregularizadosForeignKey) {
				if(estadopedidoregularizadoAux.getId()!=null && estadopedidoregularizadoAux.getId().equals(idEstadoPedidoRegularizadoSeleccionado)) {
					estadopedidoregularizadoTemp=estadopedidoregularizadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadopedidoregularizadoTemp!=null) {

					if(this.parametrocompra!=null) {
						this.parametrocompra.setEstadoPedidoRegularizado(estadopedidoregularizadoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_regularizadoParametroCompra.setSelectedItem(estadopedidoregularizadoTemp);
					}
				} else {
					//jComboBoxid_estado_pedido_regularizadoParametroCompra.setSelectedItem(estadopedidoregularizadoTemp);
					if(this.jInternalFrameDetalleFormParametroCompra!=null) {
						if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_regularizadoParametroCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_regularizadoParametroCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoRegularizado") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadopedidoregularizadoTemp!=null && jComboBoxid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizadoParametroCompra!=null) {
						jComboBoxid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizadoParametroCompra.setSelectedItem(estadopedidoregularizadoTemp);
					} else {
						if(jComboBoxid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizadoParametroCompra!=null) {
							//jComboBoxid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizadoParametroCompra.setSelectedItem(estadopedidoregularizadoTemp);
							if(jComboBoxid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizadoParametroCompra.getItemCount()>0) {
								jComboBoxid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizadoParametroCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoPedidoRegularizadoForeignKeyDescripcion(Long idEstadoPedidoRegularizadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoPedido  estadopedidoregularizadoTemp=null;

			for(EstadoPedido estadopedidoregularizadoAux:estadopedidoregularizadosForeignKey) {
				if(estadopedidoregularizadoAux.getId()!=null && estadopedidoregularizadoAux.getId().equals(idEstadoPedidoRegularizadoSeleccionado)) {
					estadopedidoregularizadoTemp=estadopedidoregularizadoAux;
					break;
				}
			}


			sDescripcion=EstadoPedidoConstantesFunciones.getEstadoPedidoDescripcion(estadopedidoregularizadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoPedidoRegularizadoForeignKeyGenerico(Long idEstadoPedidoRegularizadoSeleccionado,JComboBox jComboBoxid_estado_pedido_regularizadoParametroCompraGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoregularizadoTemp=null;

			for(EstadoPedido estadopedidoregularizadoAux:estadopedidoregularizadosForeignKey) {
				if(estadopedidoregularizadoAux.getId()!=null && estadopedidoregularizadoAux.getId().equals(idEstadoPedidoRegularizadoSeleccionado)) {
					estadopedidoregularizadoTemp=estadopedidoregularizadoAux;
					break;
				}
			}

			if(estadopedidoregularizadoTemp!=null) {
				jComboBoxid_estado_pedido_regularizadoParametroCompraGenerico.setSelectedItem(estadopedidoregularizadoTemp);
			} else {
				if(jComboBoxid_estado_pedido_regularizadoParametroCompraGenerico!=null && jComboBoxid_estado_pedido_regularizadoParametroCompraGenerico.getItemCount()>0) {
					jComboBoxid_estado_pedido_regularizadoParametroCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_empresaParametroCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaParametroCompraGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empresaParametroCompra.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaParametroCompraGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				parametrocompra.setid_empresa(empresaAux.getId());
				parametrocompra.setempresa_descripcion(ParametroCompraConstantesFunciones.getEmpresaDescripcion(empresaAux));
				parametrocompra.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDocumentoForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_tipo_documentoParametroCompraGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentoAux=new TipoDocumento();

			if(jComboBoxid_tipo_documentoParametroCompraGenerico==null) {
				tipodocumentoAux=(TipoDocumento)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_documentoParametroCompra.getSelectedItem();
			} else {
				tipodocumentoAux=(TipoDocumento)jComboBoxid_tipo_documentoParametroCompraGenerico.getSelectedItem();
			}

			if(tipodocumentoAux!=null && tipodocumentoAux.getId()!=null) {
				parametrocompra.setid_tipo_documento(tipodocumentoAux.getId());
				parametrocompra.settipodocumento_descripcion(ParametroCompraConstantesFunciones.getTipoDocumentoDescripcion(tipodocumentoAux));
				parametrocompra.setTipoDocumento(tipodocumentoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoMovimientoForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_tipo_movimientoParametroCompraGenerico)throws Exception
	{
		try
		{
			TipoMovimiento  tipomovimientoAux=new TipoMovimiento();

			if(jComboBoxid_tipo_movimientoParametroCompraGenerico==null) {
				tipomovimientoAux=(TipoMovimiento)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimientoParametroCompra.getSelectedItem();
			} else {
				tipomovimientoAux=(TipoMovimiento)jComboBoxid_tipo_movimientoParametroCompraGenerico.getSelectedItem();
			}

			if(tipomovimientoAux!=null && tipomovimientoAux.getId()!=null) {
				parametrocompra.setid_tipo_movimiento(tipomovimientoAux.getId());
				parametrocompra.settipomovimiento_descripcion(ParametroCompraConstantesFunciones.getTipoMovimientoDescripcion(tipomovimientoAux));
				parametrocompra.setTipoMovimiento(tipomovimientoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_bodegaParametroCompraGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodegaParametroCompraGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodegaParametroCompra.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodegaParametroCompraGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				parametrocompra.setid_bodega(bodegaAux.getId());
				parametrocompra.setbodega_descripcion(ParametroCompraConstantesFunciones.getBodegaDescripcion(bodegaAux));
				parametrocompra.setBodega(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaReservaForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_bodega_reservaParametroCompraGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodega_reservaParametroCompraGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodega_reservaParametroCompra.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodega_reservaParametroCompraGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				parametrocompra.setid_bodega_reserva(bodegaAux.getId());
				parametrocompra.setbodegareserva_descripcion(ParametroCompraConstantesFunciones.getBodegaReservaDescripcion(bodegaAux));
				parametrocompra.setBodegaReserva(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_empleadoParametroCompraGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleadoParametroCompraGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empleadoParametroCompra.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleadoParametroCompraGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				parametrocompra.setid_empleado(empleadoAux.getId());
				parametrocompra.setempleado_descripcion(ParametroCompraConstantesFunciones.getEmpleadoDescripcion(empleadoAux));
				parametrocompra.setEmpleado(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmbarcadorForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_embarcadorParametroCompraGenerico)throws Exception
	{
		try
		{
			Embarcador  embarcadorAux=new Embarcador();

			if(jComboBoxid_embarcadorParametroCompraGenerico==null) {
				embarcadorAux=(Embarcador)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_embarcadorParametroCompra.getSelectedItem();
			} else {
				embarcadorAux=(Embarcador)jComboBoxid_embarcadorParametroCompraGenerico.getSelectedItem();
			}

			if(embarcadorAux!=null && embarcadorAux.getId()!=null) {
				parametrocompra.setid_embarcador(embarcadorAux.getId());
				parametrocompra.setembarcador_descripcion(ParametroCompraConstantesFunciones.getEmbarcadorDescripcion(embarcadorAux));
				parametrocompra.setEmbarcador(embarcadorAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarModuloForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_moduloParametroCompraGenerico)throws Exception
	{
		try
		{
			Modulo  moduloAux=new Modulo();

			if(jComboBoxid_moduloParametroCompraGenerico==null) {
				moduloAux=(Modulo)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_moduloParametroCompra.getSelectedItem();
			} else {
				moduloAux=(Modulo)jComboBoxid_moduloParametroCompraGenerico.getSelectedItem();
			}

			if(moduloAux!=null && moduloAux.getId()!=null) {
				parametrocompra.setid_modulo(moduloAux.getId());
				parametrocompra.setmodulo_descripcion(ParametroCompraConstantesFunciones.getModuloDescripcion(moduloAux));
				parametrocompra.setModulo(moduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoMovimientoModuloForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_tipo_movimiento_moduloParametroCompraGenerico)throws Exception
	{
		try
		{
			TipoMovimientoModulo  tipomovimientomoduloAux=new TipoMovimientoModulo();

			if(jComboBoxid_tipo_movimiento_moduloParametroCompraGenerico==null) {
				tipomovimientomoduloAux=(TipoMovimientoModulo)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimiento_moduloParametroCompra.getSelectedItem();
			} else {
				tipomovimientomoduloAux=(TipoMovimientoModulo)jComboBoxid_tipo_movimiento_moduloParametroCompraGenerico.getSelectedItem();
			}

			if(tipomovimientomoduloAux!=null && tipomovimientomoduloAux.getId()!=null) {
				parametrocompra.setid_tipo_movimiento_modulo(tipomovimientomoduloAux.getId());
				parametrocompra.settipomovimientomodulo_descripcion(ParametroCompraConstantesFunciones.getTipoMovimientoModuloDescripcion(tipomovimientomoduloAux));
				parametrocompra.setTipoMovimientoModulo(tipomovimientomoduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoPedidoForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_formato_pedidoParametroCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formato_pedidoParametroCompraGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_pedidoParametroCompra.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formato_pedidoParametroCompraGenerico.getSelectedItem();
			}

			if(formatoAux!=null && formatoAux.getId()!=null) {
				parametrocompra.setid_formato_pedido(formatoAux.getId());
				parametrocompra.setformatopedido_descripcion(ParametroCompraConstantesFunciones.getFormatoPedidoDescripcion(formatoAux));
				parametrocompra.setFormatoPedido(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoPedidoPendienteForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_estado_pedido_pendienteParametroCompraGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoAux=new EstadoPedido();

			if(jComboBoxid_estado_pedido_pendienteParametroCompraGenerico==null) {
				estadopedidoAux=(EstadoPedido)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_pendienteParametroCompra.getSelectedItem();
			} else {
				estadopedidoAux=(EstadoPedido)jComboBoxid_estado_pedido_pendienteParametroCompraGenerico.getSelectedItem();
			}

			if(estadopedidoAux!=null && estadopedidoAux.getId()!=null) {
				parametrocompra.setid_estado_pedido_pendiente(estadopedidoAux.getId());
				parametrocompra.setestadopedidopendiente_descripcion(ParametroCompraConstantesFunciones.getEstadoPedidoPendienteDescripcion(estadopedidoAux));
				parametrocompra.setEstadoPedidoPendiente(estadopedidoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoCotizacionForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_formato_cotizacionParametroCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formato_cotizacionParametroCompraGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_cotizacionParametroCompra.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formato_cotizacionParametroCompraGenerico.getSelectedItem();
			}

			if(formatoAux!=null && formatoAux.getId()!=null) {
				parametrocompra.setid_formato_cotizacion(formatoAux.getId());
				parametrocompra.setformatocotizacion_descripcion(ParametroCompraConstantesFunciones.getFormatoCotizacionDescripcion(formatoAux));
				parametrocompra.setFormatoCotizacion(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoPedidoCotizadoForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_estado_pedido_cotizadoParametroCompraGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoAux=new EstadoPedido();

			if(jComboBoxid_estado_pedido_cotizadoParametroCompraGenerico==null) {
				estadopedidoAux=(EstadoPedido)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_cotizadoParametroCompra.getSelectedItem();
			} else {
				estadopedidoAux=(EstadoPedido)jComboBoxid_estado_pedido_cotizadoParametroCompraGenerico.getSelectedItem();
			}

			if(estadopedidoAux!=null && estadopedidoAux.getId()!=null) {
				parametrocompra.setid_estado_pedido_cotizado(estadopedidoAux.getId());
				parametrocompra.setestadopedidocotizado_descripcion(ParametroCompraConstantesFunciones.getEstadoPedidoCotizadoDescripcion(estadopedidoAux));
				parametrocompra.setEstadoPedidoCotizado(estadopedidoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoAutorizacionForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_formato_autorizacionParametroCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formato_autorizacionParametroCompraGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_autorizacionParametroCompra.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formato_autorizacionParametroCompraGenerico.getSelectedItem();
			}

			if(formatoAux!=null && formatoAux.getId()!=null) {
				parametrocompra.setid_formato_autorizacion(formatoAux.getId());
				parametrocompra.setformatoautorizacion_descripcion(ParametroCompraConstantesFunciones.getFormatoAutorizacionDescripcion(formatoAux));
				parametrocompra.setFormatoAutorizacion(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoPedidoAutorizadoForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_estado_pedido_autorizadoParametroCompraGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoAux=new EstadoPedido();

			if(jComboBoxid_estado_pedido_autorizadoParametroCompraGenerico==null) {
				estadopedidoAux=(EstadoPedido)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_autorizadoParametroCompra.getSelectedItem();
			} else {
				estadopedidoAux=(EstadoPedido)jComboBoxid_estado_pedido_autorizadoParametroCompraGenerico.getSelectedItem();
			}

			if(estadopedidoAux!=null && estadopedidoAux.getId()!=null) {
				parametrocompra.setid_estado_pedido_autorizado(estadopedidoAux.getId());
				parametrocompra.setestadopedidoautorizado_descripcion(ParametroCompraConstantesFunciones.getEstadoPedidoAutorizadoDescripcion(estadopedidoAux));
				parametrocompra.setEstadoPedidoAutorizado(estadopedidoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoItemForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_formato_itemParametroCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formato_itemParametroCompraGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_itemParametroCompra.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formato_itemParametroCompraGenerico.getSelectedItem();
			}

			if(formatoAux!=null && formatoAux.getId()!=null) {
				parametrocompra.setid_formato_item(formatoAux.getId());
				parametrocompra.setformatoitem_descripcion(ParametroCompraConstantesFunciones.getFormatoItemDescripcion(formatoAux));
				parametrocompra.setFormatoItem(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoPedidoAnuladoForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_estado_pedido_anuladoParametroCompraGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoAux=new EstadoPedido();

			if(jComboBoxid_estado_pedido_anuladoParametroCompraGenerico==null) {
				estadopedidoAux=(EstadoPedido)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_anuladoParametroCompra.getSelectedItem();
			} else {
				estadopedidoAux=(EstadoPedido)jComboBoxid_estado_pedido_anuladoParametroCompraGenerico.getSelectedItem();
			}

			if(estadopedidoAux!=null && estadopedidoAux.getId()!=null) {
				parametrocompra.setid_estado_pedido_anulado(estadopedidoAux.getId());
				parametrocompra.setestadopedidoanulado_descripcion(ParametroCompraConstantesFunciones.getEstadoPedidoAnuladoDescripcion(estadopedidoAux));
				parametrocompra.setEstadoPedidoAnulado(estadopedidoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPrioridadPedidoForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_prioridad_pedidoParametroCompraGenerico)throws Exception
	{
		try
		{
			PrioridadPedido  prioridadpedidoAux=new PrioridadPedido();

			if(jComboBoxid_prioridad_pedidoParametroCompraGenerico==null) {
				prioridadpedidoAux=(PrioridadPedido)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_prioridad_pedidoParametroCompra.getSelectedItem();
			} else {
				prioridadpedidoAux=(PrioridadPedido)jComboBoxid_prioridad_pedidoParametroCompraGenerico.getSelectedItem();
			}

			if(prioridadpedidoAux!=null && prioridadpedidoAux.getId()!=null) {
				parametrocompra.setid_prioridad_pedido(prioridadpedidoAux.getId());
				parametrocompra.setprioridadpedido_descripcion(ParametroCompraConstantesFunciones.getPrioridadPedidoDescripcion(prioridadpedidoAux));
				parametrocompra.setPrioridadPedido(prioridadpedidoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoPedidoSuspendidoForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_estado_pedido_suspendidoParametroCompraGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoAux=new EstadoPedido();

			if(jComboBoxid_estado_pedido_suspendidoParametroCompraGenerico==null) {
				estadopedidoAux=(EstadoPedido)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_suspendidoParametroCompra.getSelectedItem();
			} else {
				estadopedidoAux=(EstadoPedido)jComboBoxid_estado_pedido_suspendidoParametroCompraGenerico.getSelectedItem();
			}

			if(estadopedidoAux!=null && estadopedidoAux.getId()!=null) {
				parametrocompra.setid_estado_pedido_suspendido(estadopedidoAux.getId());
				parametrocompra.setestadopedidosuspendido_descripcion(ParametroCompraConstantesFunciones.getEstadoPedidoSuspendidoDescripcion(estadopedidoAux));
				parametrocompra.setEstadoPedidoSuspendido(estadopedidoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoPedidoRegularizadoForeignKey(ParametroCompra parametrocompra,JComboBox jComboBoxid_estado_pedido_regularizadoParametroCompraGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoAux=new EstadoPedido();

			if(jComboBoxid_estado_pedido_regularizadoParametroCompraGenerico==null) {
				estadopedidoAux=(EstadoPedido)this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_regularizadoParametroCompra.getSelectedItem();
			} else {
				estadopedidoAux=(EstadoPedido)jComboBoxid_estado_pedido_regularizadoParametroCompraGenerico.getSelectedItem();
			}

			if(estadopedidoAux!=null && estadopedidoAux.getId()!=null) {
				parametrocompra.setid_estado_pedido_regularizado(estadopedidoAux.getId());
				parametrocompra.setestadopedidoregularizado_descripcion(ParametroCompraConstantesFunciones.getEstadoPedidoRegularizadoDescripcion(estadopedidoAux));
				parametrocompra.setEstadoPedidoRegularizado(estadopedidoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empresaParametroCompra.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empresaParametroCompra.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDocumentosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDocumento=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_documentoParametroCompra.removeAllItems();

							for(TipoDocumento tipodocumento:this.tipodocumentosForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_documentoParametroCompra.addItem(tipodocumento);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumento") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_documentoFK_IdTipoDocumentoParametroCompra.removeAllItems();

							for(TipoDocumento tipodocumento:this.tipodocumentosForeignKey) {
								this.jComboBoxid_tipo_documentoFK_IdTipoDocumentoParametroCompra.addItem(tipodocumento);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoMovimientosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoMovimiento=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimientoParametroCompra.removeAllItems();

							for(TipoMovimiento tipomovimiento:this.tipomovimientosForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimientoParametroCompra.addItem(tipomovimiento);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoMovimiento") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoParametroCompra.removeAllItems();

							for(TipoMovimiento tipomovimiento:this.tipomovimientosForeignKey) {
								this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoParametroCompra.addItem(tipomovimiento);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodegaParametroCompra.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodegaParametroCompra.addItem(bodega);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaParametroCompra.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jComboBoxid_bodegaFK_IdBodegaParametroCompra.addItem(bodega);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegaReservasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodega_reservaParametroCompra.removeAllItems();

							for(Bodega bodegareserva:this.bodegareservasForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodega_reservaParametroCompra.addItem(bodegareserva);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodegaReserva") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodega_reservaFK_IdBodegaReservaParametroCompra.removeAllItems();

							for(Bodega bodegareserva:this.bodegareservasForeignKey) {
								this.jComboBoxid_bodega_reservaFK_IdBodegaReservaParametroCompra.addItem(bodegareserva);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empleadoParametroCompra.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empleadoParametroCompra.addItem(empleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoParametroCompra.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jComboBoxid_empleadoFK_IdEmpleadoParametroCompra.addItem(empleado);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmbarcadorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmbarcador=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_embarcadorParametroCompra.removeAllItems();

							for(Embarcador embarcador:this.embarcadorsForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_embarcadorParametroCompra.addItem(embarcador);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmbarcador") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_embarcadorFK_IdEmbarcadorParametroCompra.removeAllItems();

							for(Embarcador embarcador:this.embarcadorsForeignKey) {
								this.jComboBoxid_embarcadorFK_IdEmbarcadorParametroCompra.addItem(embarcador);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_moduloParametroCompra.removeAllItems();

							for(Modulo modulo:this.modulosForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_moduloParametroCompra.addItem(modulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoMovimientoModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoMovimientoModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimiento_moduloParametroCompra.removeAllItems();

							for(TipoMovimientoModulo tipomovimientomodulo:this.tipomovimientomodulosForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimiento_moduloParametroCompra.addItem(tipomovimientomodulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoMovimientoModulo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloParametroCompra.removeAllItems();

							for(TipoMovimientoModulo tipomovimientomodulo:this.tipomovimientomodulosForeignKey) {
								this.jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloParametroCompra.addItem(tipomovimientomodulo);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatoPedidosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_pedidoParametroCompra.removeAllItems();

							for(Formato formatopedido:this.formatopedidosForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_pedidoParametroCompra.addItem(formatopedido);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFormatoPedido") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_formato_pedidoFK_IdFormatoPedidoParametroCompra.removeAllItems();

							for(Formato formatopedido:this.formatopedidosForeignKey) {
								this.jComboBoxid_formato_pedidoFK_IdFormatoPedidoParametroCompra.addItem(formatopedido);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoPedidoPendientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoPedido=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_pendienteParametroCompra.removeAllItems();

							for(EstadoPedido estadopedidopendiente:this.estadopedidopendientesForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_pendienteParametroCompra.addItem(estadopedidopendiente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoPendiente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_pedido_pendienteFK_IdEstadoPedidoPendienteParametroCompra.removeAllItems();

							for(EstadoPedido estadopedidopendiente:this.estadopedidopendientesForeignKey) {
								this.jComboBoxid_estado_pedido_pendienteFK_IdEstadoPedidoPendienteParametroCompra.addItem(estadopedidopendiente);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatoCotizacionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_cotizacionParametroCompra.removeAllItems();

							for(Formato formatocotizacion:this.formatocotizacionsForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_cotizacionParametroCompra.addItem(formatocotizacion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFormatoCotizacion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_formato_cotizacionFK_IdFormatoCotizacionParametroCompra.removeAllItems();

							for(Formato formatocotizacion:this.formatocotizacionsForeignKey) {
								this.jComboBoxid_formato_cotizacionFK_IdFormatoCotizacionParametroCompra.addItem(formatocotizacion);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoPedidoCotizadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoPedido=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_cotizadoParametroCompra.removeAllItems();

							for(EstadoPedido estadopedidocotizado:this.estadopedidocotizadosForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_cotizadoParametroCompra.addItem(estadopedidocotizado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoCotizado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizadoParametroCompra.removeAllItems();

							for(EstadoPedido estadopedidocotizado:this.estadopedidocotizadosForeignKey) {
								this.jComboBoxid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizadoParametroCompra.addItem(estadopedidocotizado);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatoAutorizacionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_autorizacionParametroCompra.removeAllItems();

							for(Formato formatoautorizacion:this.formatoautorizacionsForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_autorizacionParametroCompra.addItem(formatoautorizacion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFormatoAutorizacion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_formato_autorizacionFK_IdFormatoAutorizacionParametroCompra.removeAllItems();

							for(Formato formatoautorizacion:this.formatoautorizacionsForeignKey) {
								this.jComboBoxid_formato_autorizacionFK_IdFormatoAutorizacionParametroCompra.addItem(formatoautorizacion);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoPedidoAutorizadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoPedido=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_autorizadoParametroCompra.removeAllItems();

							for(EstadoPedido estadopedidoautorizado:this.estadopedidoautorizadosForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_autorizadoParametroCompra.addItem(estadopedidoautorizado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoAutorizado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizadoParametroCompra.removeAllItems();

							for(EstadoPedido estadopedidoautorizado:this.estadopedidoautorizadosForeignKey) {
								this.jComboBoxid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizadoParametroCompra.addItem(estadopedidoautorizado);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatoItemsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_itemParametroCompra.removeAllItems();

							for(Formato formatoitem:this.formatoitemsForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_itemParametroCompra.addItem(formatoitem);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFormatoItem") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_formato_itemFK_IdFormatoItemParametroCompra.removeAllItems();

							for(Formato formatoitem:this.formatoitemsForeignKey) {
								this.jComboBoxid_formato_itemFK_IdFormatoItemParametroCompra.addItem(formatoitem);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoPedidoAnuladosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoPedido=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_anuladoParametroCompra.removeAllItems();

							for(EstadoPedido estadopedidoanulado:this.estadopedidoanuladosForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_anuladoParametroCompra.addItem(estadopedidoanulado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoAnulado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_pedido_anuladoFK_IdEstadoPedidoAnuladoParametroCompra.removeAllItems();

							for(EstadoPedido estadopedidoanulado:this.estadopedidoanuladosForeignKey) {
								this.jComboBoxid_estado_pedido_anuladoFK_IdEstadoPedidoAnuladoParametroCompra.addItem(estadopedidoanulado);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePrioridadPedidosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPrioridadPedido=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_prioridad_pedidoParametroCompra.removeAllItems();

							for(PrioridadPedido prioridadpedido:this.prioridadpedidosForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_prioridad_pedidoParametroCompra.addItem(prioridadpedido);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdPrioridadPedido") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_prioridad_pedidoFK_IdPrioridadPedidoParametroCompra.removeAllItems();

							for(PrioridadPedido prioridadpedido:this.prioridadpedidosForeignKey) {
								this.jComboBoxid_prioridad_pedidoFK_IdPrioridadPedidoParametroCompra.addItem(prioridadpedido);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoPedidoSuspendidosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoPedido=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_suspendidoParametroCompra.removeAllItems();

							for(EstadoPedido estadopedidosuspendido:this.estadopedidosuspendidosForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_suspendidoParametroCompra.addItem(estadopedidosuspendido);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoSuspendo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendoParametroCompra.removeAllItems();

							for(EstadoPedido estadopedidosuspendido:this.estadopedidosuspendidosForeignKey) {
								this.jComboBoxid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendoParametroCompra.addItem(estadopedidosuspendido);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoPedidoRegularizadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoPedido=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_regularizadoParametroCompra.removeAllItems();

							for(EstadoPedido estadopedidoregularizado:this.estadopedidoregularizadosForeignKey) {
								this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_regularizadoParametroCompra.addItem(estadopedidoregularizado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCompra!=null) { 
					}

					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoRegularizado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizadoParametroCompra.removeAllItems();

							for(EstadoPedido estadopedidoregularizado:this.estadopedidoregularizadosForeignKey) {
								this.jComboBoxid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizadoParametroCompra.addItem(estadopedidoregularizado);
							}
						}

						if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empresaParametroCompra.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empresaParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDocumentoForeignKey(TipoDocumento tipodocumento,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_documentoParametroCompra.setSelectedItem(tipodocumento);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_documentoParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_documentoFK_IdTipoDocumentoParametroCompra.setSelectedItem(tipodocumento);
						} else {
							this.jComboBoxid_tipo_documentoFK_IdTipoDocumentoParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoMovimientoForeignKey(TipoMovimiento tipomovimiento,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimientoParametroCompra.setSelectedItem(tipomovimiento);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimientoParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoParametroCompra.setSelectedItem(tipomovimiento);
						} else {
							this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaForeignKey(Bodega bodega,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodegaParametroCompra.setSelectedItem(bodega);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodegaParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodegaFK_IdBodegaParametroCompra.setSelectedItem(bodega);
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaReservaForeignKey(Bodega bodegareserva,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodega_reservaParametroCompra.setSelectedItem(bodegareserva);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodega_reservaParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodega_reservaFK_IdBodegaReservaParametroCompra.setSelectedItem(bodegareserva);
						} else {
							this.jComboBoxid_bodega_reservaFK_IdBodegaReservaParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoForeignKey(Empleado empleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empleadoParametroCompra.setSelectedItem(empleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empleadoParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empleadoFK_IdEmpleadoParametroCompra.setSelectedItem(empleado);
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmbarcadorForeignKey(Embarcador embarcador,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_embarcadorParametroCompra.setSelectedItem(embarcador);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_embarcadorParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_embarcadorFK_IdEmbarcadorParametroCompra.setSelectedItem(embarcador);
						} else {
							this.jComboBoxid_embarcadorFK_IdEmbarcadorParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameModuloForeignKey(Modulo modulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_moduloParametroCompra.setSelectedItem(modulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_moduloParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoMovimientoModuloForeignKey(TipoMovimientoModulo tipomovimientomodulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimiento_moduloParametroCompra.setSelectedItem(tipomovimientomodulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimiento_moduloParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloParametroCompra.setSelectedItem(tipomovimientomodulo);
						} else {
							this.jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoPedidoForeignKey(Formato formatopedido,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_pedidoParametroCompra.setSelectedItem(formatopedido);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_pedidoParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_formato_pedidoFK_IdFormatoPedidoParametroCompra.setSelectedItem(formatopedido);
						} else {
							this.jComboBoxid_formato_pedidoFK_IdFormatoPedidoParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoPedidoPendienteForeignKey(EstadoPedido estadopedidopendiente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_pendienteParametroCompra.setSelectedItem(estadopedidopendiente);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_pendienteParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_pedido_pendienteFK_IdEstadoPedidoPendienteParametroCompra.setSelectedItem(estadopedidopendiente);
						} else {
							this.jComboBoxid_estado_pedido_pendienteFK_IdEstadoPedidoPendienteParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoCotizacionForeignKey(Formato formatocotizacion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_cotizacionParametroCompra.setSelectedItem(formatocotizacion);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_cotizacionParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_formato_cotizacionFK_IdFormatoCotizacionParametroCompra.setSelectedItem(formatocotizacion);
						} else {
							this.jComboBoxid_formato_cotizacionFK_IdFormatoCotizacionParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoPedidoCotizadoForeignKey(EstadoPedido estadopedidocotizado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_cotizadoParametroCompra.setSelectedItem(estadopedidocotizado);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_cotizadoParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizadoParametroCompra.setSelectedItem(estadopedidocotizado);
						} else {
							this.jComboBoxid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizadoParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoAutorizacionForeignKey(Formato formatoautorizacion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_autorizacionParametroCompra.setSelectedItem(formatoautorizacion);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_autorizacionParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_formato_autorizacionFK_IdFormatoAutorizacionParametroCompra.setSelectedItem(formatoautorizacion);
						} else {
							this.jComboBoxid_formato_autorizacionFK_IdFormatoAutorizacionParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoPedidoAutorizadoForeignKey(EstadoPedido estadopedidoautorizado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_autorizadoParametroCompra.setSelectedItem(estadopedidoautorizado);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_autorizadoParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizadoParametroCompra.setSelectedItem(estadopedidoautorizado);
						} else {
							this.jComboBoxid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizadoParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoItemForeignKey(Formato formatoitem,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_itemParametroCompra.setSelectedItem(formatoitem);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_itemParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_formato_itemFK_IdFormatoItemParametroCompra.setSelectedItem(formatoitem);
						} else {
							this.jComboBoxid_formato_itemFK_IdFormatoItemParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoPedidoAnuladoForeignKey(EstadoPedido estadopedidoanulado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_anuladoParametroCompra.setSelectedItem(estadopedidoanulado);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_anuladoParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_pedido_anuladoFK_IdEstadoPedidoAnuladoParametroCompra.setSelectedItem(estadopedidoanulado);
						} else {
							this.jComboBoxid_estado_pedido_anuladoFK_IdEstadoPedidoAnuladoParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePrioridadPedidoForeignKey(PrioridadPedido prioridadpedido,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_prioridad_pedidoParametroCompra.setSelectedItem(prioridadpedido);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_prioridad_pedidoParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_prioridad_pedidoFK_IdPrioridadPedidoParametroCompra.setSelectedItem(prioridadpedido);
						} else {
							this.jComboBoxid_prioridad_pedidoFK_IdPrioridadPedidoParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoPedidoSuspendidoForeignKey(EstadoPedido estadopedidosuspendido,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_suspendidoParametroCompra.setSelectedItem(estadopedidosuspendido);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_suspendidoParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendoParametroCompra.setSelectedItem(estadopedidosuspendido);
						} else {
							this.jComboBoxid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendoParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoPedidoRegularizadoForeignKey(EstadoPedido estadopedidoregularizado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_regularizadoParametroCompra.setSelectedItem(estadopedidoregularizado);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCompra!=null) {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_regularizadoParametroCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizadoParametroCompra.setSelectedItem(estadopedidoregularizado);
						} else {
							this.jComboBoxid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizadoParametroCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesParametroCompra() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ParametroCompraConstantesFunciones.refrescarForeignKeysDescripcionesParametroCompra(this.parametrocompraLogic.getParametroCompras());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			ParametroCompraConstantesFunciones.refrescarForeignKeysDescripcionesParametroCompra(this.parametrocompras);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(TipoDocumento.class));
		classes.add(new Classe(TipoMovimiento.class));
		classes.add(new Classe(Bodega.class));
		classes.add(new Classe(Empleado.class));
		classes.add(new Classe(Embarcador.class));
		classes.add(new Classe(Modulo.class));
		classes.add(new Classe(TipoMovimientoModulo.class));
		classes.add(new Classe(Formato.class));
		classes.add(new Classe(EstadoPedido.class));
		classes.add(new Classe(PrioridadPedido.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//parametrocompraLogic.setParametroCompras(this.parametrocompras);
			parametrocompraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public ParametroCompraParameterReturnGeneral getParametroCompraParameterGeneral() {
		return this.parametrocompraParameterGeneral;
	}
	
	public void setParametroCompraParameterGeneral(ParametroCompraParameterReturnGeneral parametrocompraParameterGeneral) {
		this.parametrocompraParameterGeneral = parametrocompraParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoParametroCompra() {
		return isPermisoTodoParametroCompra;
	}

	public void setIsPermisoTodoParametroCompra(Boolean isPermisoTodoParametroCompra) {
		this.isPermisoTodoParametroCompra = isPermisoTodoParametroCompra;
	}

	public Boolean getIsPermisoNuevoParametroCompra() {
		return isPermisoNuevoParametroCompra;
	}

	public void setIsPermisoNuevoParametroCompra(Boolean isPermisoNuevoParametroCompra) {
		this.isPermisoNuevoParametroCompra = isPermisoNuevoParametroCompra;
	}

	public Boolean getIsPermisoActualizarParametroCompra() {
		return isPermisoActualizarParametroCompra;
	}

	public void setIsPermisoActualizarParametroCompra(Boolean isPermisoActualizarParametroCompra) {
		this.isPermisoActualizarParametroCompra = isPermisoActualizarParametroCompra;
	}

	public Boolean getIsPermisoEliminarParametroCompra() {
		return isPermisoEliminarParametroCompra;
	}

	public void setIsPermisoEliminarParametroCompra(Boolean isPermisoEliminarParametroCompra) {
		this.isPermisoEliminarParametroCompra = isPermisoEliminarParametroCompra;
	}

	public Boolean getIsPermisoGuardarCambiosParametroCompra() {
		return isPermisoGuardarCambiosParametroCompra;
	}

	public void setIsPermisoGuardarCambiosParametroCompra(Boolean isPermisoGuardarCambiosParametroCompra) {
		this.isPermisoGuardarCambiosParametroCompra = isPermisoGuardarCambiosParametroCompra;
	}
	
	public Boolean getIsPermisoConsultaParametroCompra() {
		return isPermisoConsultaParametroCompra;
	}

	public void setIsPermisoConsultaParametroCompra(Boolean isPermisoConsultaParametroCompra) {
		this.isPermisoConsultaParametroCompra = isPermisoConsultaParametroCompra;
	}

	public Boolean getIsPermisoBusquedaParametroCompra() {
		return isPermisoBusquedaParametroCompra;
	}

	public void setIsPermisoBusquedaParametroCompra(Boolean isPermisoBusquedaParametroCompra) {
		this.isPermisoBusquedaParametroCompra = isPermisoBusquedaParametroCompra;
	}

	public Boolean getIsPermisoReporteParametroCompra() {
		return isPermisoReporteParametroCompra;
	}

	public void setIsPermisoReporteParametroCompra(Boolean isPermisoReporteParametroCompra) {
		this.isPermisoReporteParametroCompra = isPermisoReporteParametroCompra;
	}
	
	public Boolean getIsPermisoPaginacionMedioParametroCompra() {
		return isPermisoPaginacionMedioParametroCompra;
	}

	public void setIsPermisoPaginacionMedioParametroCompra(Boolean isPermisoPaginacionMedioParametroCompra) {
		this.isPermisoPaginacionMedioParametroCompra = isPermisoPaginacionMedioParametroCompra;
	}
	
	public Boolean getIsPermisoPaginacionTodoParametroCompra() {
		return isPermisoPaginacionTodoParametroCompra;
	}

	public void setIsPermisoPaginacionTodoParametroCompra(Boolean isPermisoPaginacionTodoParametroCompra) {
		this.isPermisoPaginacionTodoParametroCompra = isPermisoPaginacionTodoParametroCompra;
	}
	
	public Boolean getIsPermisoPaginacionAltoParametroCompra() {
		return isPermisoPaginacionAltoParametroCompra;
	}

	public void setIsPermisoPaginacionAltoParametroCompra(Boolean isPermisoPaginacionAltoParametroCompra) {
		this.isPermisoPaginacionAltoParametroCompra = isPermisoPaginacionAltoParametroCompra;
	}
	
	public Boolean getIsPermisoCopiarParametroCompra() {
		return isPermisoCopiarParametroCompra;
	}

	public void setIsPermisoCopiarParametroCompra(Boolean isPermisoCopiarParametroCompra) {
		this.isPermisoCopiarParametroCompra = isPermisoCopiarParametroCompra;
	}
	
	public Boolean getIsPermisoVerFormParametroCompra() {
		return isPermisoVerFormParametroCompra;
	}

	public void setIsPermisoVerFormParametroCompra(Boolean isPermisoVerFormParametroCompra) {
		this.isPermisoVerFormParametroCompra = isPermisoVerFormParametroCompra;
	}
	
	public Boolean getIsPermisoDuplicarParametroCompra() {
		return isPermisoDuplicarParametroCompra;
	}

	public void setIsPermisoDuplicarParametroCompra(Boolean isPermisoDuplicarParametroCompra) {
		this.isPermisoDuplicarParametroCompra = isPermisoDuplicarParametroCompra;
	}
	
	public Boolean getIsPermisoOrdenParametroCompra() {
		return isPermisoOrdenParametroCompra;
	}

	public void setIsPermisoOrdenParametroCompra(Boolean isPermisoOrdenParametroCompra) {
		this.isPermisoOrdenParametroCompra = isPermisoOrdenParametroCompra;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoParametroCompra() {
		return isVisibilidadCeldaNuevoParametroCompra;
	}

	public void setIsVisibilidadCeldaNuevoParametroCompra(Boolean isVisibilidadCeldaNuevoParametroCompra) {
		this.isVisibilidadCeldaNuevoParametroCompra = isVisibilidadCeldaNuevoParametroCompra;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarParametroCompra() {
		return isVisibilidadCeldaDuplicarParametroCompra;
	}

	public void setIsVisibilidadCeldaDuplicarParametroCompra(Boolean isVisibilidadCeldaDuplicarParametroCompra) {
		this.isVisibilidadCeldaDuplicarParametroCompra = isVisibilidadCeldaDuplicarParametroCompra;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarParametroCompra() {
		return isVisibilidadCeldaCopiarParametroCompra;
	}

	public void setIsVisibilidadCeldaCopiarParametroCompra(Boolean isVisibilidadCeldaCopiarParametroCompra) {
		this.isVisibilidadCeldaCopiarParametroCompra = isVisibilidadCeldaCopiarParametroCompra;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormParametroCompra() {
		return isVisibilidadCeldaVerFormParametroCompra;
	}

	public void setIsVisibilidadCeldaVerFormParametroCompra(Boolean isVisibilidadCeldaVerFormParametroCompra) {
		this.isVisibilidadCeldaVerFormParametroCompra = isVisibilidadCeldaVerFormParametroCompra;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenParametroCompra() {
		return isVisibilidadCeldaOrdenParametroCompra;
	}

	public void setIsVisibilidadCeldaOrdenParametroCompra(Boolean isVisibilidadCeldaOrdenParametroCompra) {
		this.isVisibilidadCeldaOrdenParametroCompra = isVisibilidadCeldaOrdenParametroCompra;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesParametroCompra() {
		return isVisibilidadCeldaNuevoRelacionesParametroCompra;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesParametroCompra(Boolean isVisibilidadCeldaNuevoRelacionesParametroCompra) {
		this.isVisibilidadCeldaNuevoRelacionesParametroCompra = isVisibilidadCeldaNuevoRelacionesParametroCompra;
	}
	
	public Boolean getIsVisibilidadCeldaModificarParametroCompra() {
		return isVisibilidadCeldaModificarParametroCompra;
	}

	public void setIsVisibilidadCeldaModificarParametroCompra(Boolean isVisibilidadCeldaModificarParametroCompra) {
		this.isVisibilidadCeldaModificarParametroCompra = isVisibilidadCeldaModificarParametroCompra;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarParametroCompra() {
		return isVisibilidadCeldaActualizarParametroCompra;
	}

	public void setIsVisibilidadCeldaActualizarParametroCompra(Boolean isVisibilidadCeldaActualizarParametroCompra) {
		this.isVisibilidadCeldaActualizarParametroCompra = isVisibilidadCeldaActualizarParametroCompra;
	}

	public Boolean getIsVisibilidadCeldaEliminarParametroCompra() {
		return isVisibilidadCeldaEliminarParametroCompra;
	}

	public void setIsVisibilidadCeldaEliminarParametroCompra(Boolean isVisibilidadCeldaEliminarParametroCompra) {
		this.isVisibilidadCeldaEliminarParametroCompra = isVisibilidadCeldaEliminarParametroCompra;
	}

	public Boolean getIsVisibilidadCeldaCancelarParametroCompra() {
		return isVisibilidadCeldaCancelarParametroCompra;
	}

	public void setIsVisibilidadCeldaCancelarParametroCompra(Boolean isVisibilidadCeldaCancelarParametroCompra) {
		this.isVisibilidadCeldaCancelarParametroCompra = isVisibilidadCeldaCancelarParametroCompra;
	}

	public Boolean getIsVisibilidadCeldaGuardarParametroCompra() {
		return isVisibilidadCeldaGuardarParametroCompra;
	}

	public void setIsVisibilidadCeldaGuardarParametroCompra(Boolean isVisibilidadCeldaGuardarParametroCompra) {
		this.isVisibilidadCeldaGuardarParametroCompra = isVisibilidadCeldaGuardarParametroCompra;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosParametroCompra() {
		return isVisibilidadCeldaGuardarCambiosParametroCompra;
	}

	public void setIsVisibilidadCeldaGuardarCambiosParametroCompra(Boolean isVisibilidadCeldaGuardarCambiosParametroCompra) {
		this.isVisibilidadCeldaGuardarCambiosParametroCompra = isVisibilidadCeldaGuardarCambiosParametroCompra;
	}
		
	public ParametroCompraSessionBean getparametrocompraSessionBean() {
		return this.parametrocompraSessionBean;
	}
	
	public void setparametrocompraSessionBean(ParametroCompraSessionBean parametrocompraSessionBean) {
		this.parametrocompraSessionBean=parametrocompraSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdBodega() {
		return this.isVisibilidadFK_IdBodega;
	}

	public void setisVisibilidadFK_IdBodega(Boolean isVisibilidadFK_IdBodega) {
		this.isVisibilidadFK_IdBodega=isVisibilidadFK_IdBodega;
	}

	public Boolean getisVisibilidadFK_IdBodegaReserva() {
		return this.isVisibilidadFK_IdBodegaReserva;
	}

	public void setisVisibilidadFK_IdBodegaReserva(Boolean isVisibilidadFK_IdBodegaReserva) {
		this.isVisibilidadFK_IdBodegaReserva=isVisibilidadFK_IdBodegaReserva;
	}

	public Boolean getisVisibilidadFK_IdEmbarcador() {
		return this.isVisibilidadFK_IdEmbarcador;
	}

	public void setisVisibilidadFK_IdEmbarcador(Boolean isVisibilidadFK_IdEmbarcador) {
		this.isVisibilidadFK_IdEmbarcador=isVisibilidadFK_IdEmbarcador;
	}

	public Boolean getisVisibilidadFK_IdEmpleado() {
		return this.isVisibilidadFK_IdEmpleado;
	}

	public void setisVisibilidadFK_IdEmpleado(Boolean isVisibilidadFK_IdEmpleado) {
		this.isVisibilidadFK_IdEmpleado=isVisibilidadFK_IdEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoPedidoAnulado() {
		return this.isVisibilidadFK_IdEstadoPedidoAnulado;
	}

	public void setisVisibilidadFK_IdEstadoPedidoAnulado(Boolean isVisibilidadFK_IdEstadoPedidoAnulado) {
		this.isVisibilidadFK_IdEstadoPedidoAnulado=isVisibilidadFK_IdEstadoPedidoAnulado;
	}

	public Boolean getisVisibilidadFK_IdEstadoPedidoAutorizado() {
		return this.isVisibilidadFK_IdEstadoPedidoAutorizado;
	}

	public void setisVisibilidadFK_IdEstadoPedidoAutorizado(Boolean isVisibilidadFK_IdEstadoPedidoAutorizado) {
		this.isVisibilidadFK_IdEstadoPedidoAutorizado=isVisibilidadFK_IdEstadoPedidoAutorizado;
	}

	public Boolean getisVisibilidadFK_IdEstadoPedidoCotizado() {
		return this.isVisibilidadFK_IdEstadoPedidoCotizado;
	}

	public void setisVisibilidadFK_IdEstadoPedidoCotizado(Boolean isVisibilidadFK_IdEstadoPedidoCotizado) {
		this.isVisibilidadFK_IdEstadoPedidoCotizado=isVisibilidadFK_IdEstadoPedidoCotizado;
	}

	public Boolean getisVisibilidadFK_IdEstadoPedidoPendiente() {
		return this.isVisibilidadFK_IdEstadoPedidoPendiente;
	}

	public void setisVisibilidadFK_IdEstadoPedidoPendiente(Boolean isVisibilidadFK_IdEstadoPedidoPendiente) {
		this.isVisibilidadFK_IdEstadoPedidoPendiente=isVisibilidadFK_IdEstadoPedidoPendiente;
	}

	public Boolean getisVisibilidadFK_IdEstadoPedidoRegularizado() {
		return this.isVisibilidadFK_IdEstadoPedidoRegularizado;
	}

	public void setisVisibilidadFK_IdEstadoPedidoRegularizado(Boolean isVisibilidadFK_IdEstadoPedidoRegularizado) {
		this.isVisibilidadFK_IdEstadoPedidoRegularizado=isVisibilidadFK_IdEstadoPedidoRegularizado;
	}

	public Boolean getisVisibilidadFK_IdEstadoPedidoSuspendo() {
		return this.isVisibilidadFK_IdEstadoPedidoSuspendo;
	}

	public void setisVisibilidadFK_IdEstadoPedidoSuspendo(Boolean isVisibilidadFK_IdEstadoPedidoSuspendo) {
		this.isVisibilidadFK_IdEstadoPedidoSuspendo=isVisibilidadFK_IdEstadoPedidoSuspendo;
	}

	public Boolean getisVisibilidadFK_IdFormatoAutorizacion() {
		return this.isVisibilidadFK_IdFormatoAutorizacion;
	}

	public void setisVisibilidadFK_IdFormatoAutorizacion(Boolean isVisibilidadFK_IdFormatoAutorizacion) {
		this.isVisibilidadFK_IdFormatoAutorizacion=isVisibilidadFK_IdFormatoAutorizacion;
	}

	public Boolean getisVisibilidadFK_IdFormatoCotizacion() {
		return this.isVisibilidadFK_IdFormatoCotizacion;
	}

	public void setisVisibilidadFK_IdFormatoCotizacion(Boolean isVisibilidadFK_IdFormatoCotizacion) {
		this.isVisibilidadFK_IdFormatoCotizacion=isVisibilidadFK_IdFormatoCotizacion;
	}

	public Boolean getisVisibilidadFK_IdFormatoItem() {
		return this.isVisibilidadFK_IdFormatoItem;
	}

	public void setisVisibilidadFK_IdFormatoItem(Boolean isVisibilidadFK_IdFormatoItem) {
		this.isVisibilidadFK_IdFormatoItem=isVisibilidadFK_IdFormatoItem;
	}

	public Boolean getisVisibilidadFK_IdFormatoPedido() {
		return this.isVisibilidadFK_IdFormatoPedido;
	}

	public void setisVisibilidadFK_IdFormatoPedido(Boolean isVisibilidadFK_IdFormatoPedido) {
		this.isVisibilidadFK_IdFormatoPedido=isVisibilidadFK_IdFormatoPedido;
	}

	public Boolean getisVisibilidadFK_IdModulo() {
		return this.isVisibilidadFK_IdModulo;
	}

	public void setisVisibilidadFK_IdModulo(Boolean isVisibilidadFK_IdModulo) {
		this.isVisibilidadFK_IdModulo=isVisibilidadFK_IdModulo;
	}

	public Boolean getisVisibilidadFK_IdPrioridadPedido() {
		return this.isVisibilidadFK_IdPrioridadPedido;
	}

	public void setisVisibilidadFK_IdPrioridadPedido(Boolean isVisibilidadFK_IdPrioridadPedido) {
		this.isVisibilidadFK_IdPrioridadPedido=isVisibilidadFK_IdPrioridadPedido;
	}

	public Boolean getisVisibilidadFK_IdTipoDocumento() {
		return this.isVisibilidadFK_IdTipoDocumento;
	}

	public void setisVisibilidadFK_IdTipoDocumento(Boolean isVisibilidadFK_IdTipoDocumento) {
		this.isVisibilidadFK_IdTipoDocumento=isVisibilidadFK_IdTipoDocumento;
	}

	public Boolean getisVisibilidadFK_IdTipoMovimiento() {
		return this.isVisibilidadFK_IdTipoMovimiento;
	}

	public void setisVisibilidadFK_IdTipoMovimiento(Boolean isVisibilidadFK_IdTipoMovimiento) {
		this.isVisibilidadFK_IdTipoMovimiento=isVisibilidadFK_IdTipoMovimiento;
	}

	public Boolean getisVisibilidadFK_IdTipoMovimientoModulo() {
		return this.isVisibilidadFK_IdTipoMovimientoModulo;
	}

	public void setisVisibilidadFK_IdTipoMovimientoModulo(Boolean isVisibilidadFK_IdTipoMovimientoModulo) {
		this.isVisibilidadFK_IdTipoMovimientoModulo=isVisibilidadFK_IdTipoMovimientoModulo;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysParametroCompra(ParametroCompra parametrocompra)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(parametrocompra,null);
				this.setActualParaGuardarTipoDocumentoForeignKey(parametrocompra,null);
				this.setActualParaGuardarTipoMovimientoForeignKey(parametrocompra,null);
				this.setActualParaGuardarBodegaForeignKey(parametrocompra,null);
				this.setActualParaGuardarBodegaReservaForeignKey(parametrocompra,null);
				this.setActualParaGuardarEmpleadoForeignKey(parametrocompra,null);
				this.setActualParaGuardarEmbarcadorForeignKey(parametrocompra,null);
				this.setActualParaGuardarModuloForeignKey(parametrocompra,null);
				this.setActualParaGuardarTipoMovimientoModuloForeignKey(parametrocompra,null);
				this.setActualParaGuardarFormatoPedidoForeignKey(parametrocompra,null);
				this.setActualParaGuardarEstadoPedidoPendienteForeignKey(parametrocompra,null);
				this.setActualParaGuardarFormatoCotizacionForeignKey(parametrocompra,null);
				this.setActualParaGuardarEstadoPedidoCotizadoForeignKey(parametrocompra,null);
				this.setActualParaGuardarFormatoAutorizacionForeignKey(parametrocompra,null);
				this.setActualParaGuardarEstadoPedidoAutorizadoForeignKey(parametrocompra,null);
				this.setActualParaGuardarFormatoItemForeignKey(parametrocompra,null);
				this.setActualParaGuardarEstadoPedidoAnuladoForeignKey(parametrocompra,null);
				this.setActualParaGuardarPrioridadPedidoForeignKey(parametrocompra,null);
				this.setActualParaGuardarEstadoPedidoSuspendidoForeignKey(parametrocompra,null);
				this.setActualParaGuardarEstadoPedidoRegularizadoForeignKey(parametrocompra,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(ParametroCompra parametrocompra,ParametroCompra parametrocompraAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalParametroCompra(parametrocompra);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		parametrocompraAux.setId(parametrocompra.getId());
		parametrocompraAux.setVersionRow(parametrocompra.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessParametroCompra();
		
			int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(ParametroCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = parametrocompraValidator.getInvalidValues(this.parametrocompra);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			parametrocompraLogic.setDatosCliente(datosCliente);
			parametrocompraLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				parametrocompraAux=new  ParametroCompra();
				
				parametrocompraAux.setIsNew(true);
				parametrocompraAux.setIsChanged(true);
				
				parametrocompraAux.setParametroCompraOriginal(this.parametrocompra);
				
				parametrocompraAux.setId(this.parametrocompra.getId());	
				parametrocompraAux.setVersionRow(this.parametrocompra.getVersionRow());	
				parametrocompraAux.setid_empresa(this.parametrocompra.getid_empresa());	
				parametrocompraAux.setsecuencial_pedido(this.parametrocompra.getsecuencial_pedido());	
				parametrocompraAux.setsecuencial_cotizacion(this.parametrocompra.getsecuencial_cotizacion());	
				parametrocompraAux.setsecuencial_produccion(this.parametrocompra.getsecuencial_produccion());	
				parametrocompraAux.setid_tipo_documento(this.parametrocompra.getid_tipo_documento());	
				parametrocompraAux.setid_tipo_movimiento(this.parametrocompra.getid_tipo_movimiento());	
				parametrocompraAux.setid_bodega(this.parametrocompra.getid_bodega());	
				parametrocompraAux.setid_bodega_reserva(this.parametrocompra.getid_bodega_reserva());	
				parametrocompraAux.setid_empleado(this.parametrocompra.getid_empleado());	
				parametrocompraAux.setid_embarcador(this.parametrocompra.getid_embarcador());	
				parametrocompraAux.setcon_centro_costo(this.parametrocompra.getcon_centro_costo());	
				parametrocompraAux.settexto_mail(this.parametrocompra.gettexto_mail());	
				parametrocompraAux.setid_modulo(this.parametrocompra.getid_modulo());	
				parametrocompraAux.setid_tipo_movimiento_modulo(this.parametrocompra.getid_tipo_movimiento_modulo());	
				parametrocompraAux.setdescripcion(this.parametrocompra.getdescripcion());	
				parametrocompraAux.setid_formato_pedido(this.parametrocompra.getid_formato_pedido());	
				parametrocompraAux.setid_estado_pedido_pendiente(this.parametrocompra.getid_estado_pedido_pendiente());	
				parametrocompraAux.setid_formato_cotizacion(this.parametrocompra.getid_formato_cotizacion());	
				parametrocompraAux.setid_estado_pedido_cotizado(this.parametrocompra.getid_estado_pedido_cotizado());	
				parametrocompraAux.setid_formato_autorizacion(this.parametrocompra.getid_formato_autorizacion());	
				parametrocompraAux.setid_estado_pedido_autorizado(this.parametrocompra.getid_estado_pedido_autorizado());	
				parametrocompraAux.setid_formato_item(this.parametrocompra.getid_formato_item());	
				parametrocompraAux.setid_estado_pedido_anulado(this.parametrocompra.getid_estado_pedido_anulado());	
				parametrocompraAux.setid_prioridad_pedido(this.parametrocompra.getid_prioridad_pedido());	
				parametrocompraAux.setid_estado_pedido_suspendido(this.parametrocompra.getid_estado_pedido_suspendido());	
				parametrocompraAux.setid_estado_pedido_regularizado(this.parametrocompra.getid_estado_pedido_regularizado());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrocompraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrocompraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(parametrocompraAux,parametrocompraLogic.getParametroCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrocompraAux,parametrocompras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.parametrocompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrocompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.saveParametroCompras();//WithConnection
						//parametrocompraLogic.getSetVersionRowParametroCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametrocompra,parametrocompraAux);
					
					this.refrescarForeignKeysDescripcionesParametroCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrocompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrocompraLogic.saveParametroCompraRelaciones(parametrocompraAux);//WithConnection
								//parametrocompraLogic.getSetVersionRowParametroCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.parametrocompra,parametrocompraAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.parametrocompraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.parametrocompraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(parametrocompraAux,parametrocompraLogic.getParametroCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(parametrocompraAux,parametrocompras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.parametrocompra,parametrocompraAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				parametrocompraAux=new  ParametroCompra();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.parametrocompraSessionBean.getEsGuardarRelacionado() 
					|| (this.parametrocompraSessionBean.getEsGuardarRelacionado() && this.parametrocompra.getId()>=0)) {
						
					parametrocompraAux.setIsNew(false);
				}
				
				parametrocompraAux.setIsDeleted(false);
			
				parametrocompraAux.setId(this.parametrocompra.getId());	
				parametrocompraAux.setVersionRow(this.parametrocompra.getVersionRow());	
				parametrocompraAux.setid_empresa(this.parametrocompra.getid_empresa());	
				parametrocompraAux.setsecuencial_pedido(this.parametrocompra.getsecuencial_pedido());	
				parametrocompraAux.setsecuencial_cotizacion(this.parametrocompra.getsecuencial_cotizacion());	
				parametrocompraAux.setsecuencial_produccion(this.parametrocompra.getsecuencial_produccion());	
				parametrocompraAux.setid_tipo_documento(this.parametrocompra.getid_tipo_documento());	
				parametrocompraAux.setid_tipo_movimiento(this.parametrocompra.getid_tipo_movimiento());	
				parametrocompraAux.setid_bodega(this.parametrocompra.getid_bodega());	
				parametrocompraAux.setid_bodega_reserva(this.parametrocompra.getid_bodega_reserva());	
				parametrocompraAux.setid_empleado(this.parametrocompra.getid_empleado());	
				parametrocompraAux.setid_embarcador(this.parametrocompra.getid_embarcador());	
				parametrocompraAux.setcon_centro_costo(this.parametrocompra.getcon_centro_costo());	
				parametrocompraAux.settexto_mail(this.parametrocompra.gettexto_mail());	
				parametrocompraAux.setid_modulo(this.parametrocompra.getid_modulo());	
				parametrocompraAux.setid_tipo_movimiento_modulo(this.parametrocompra.getid_tipo_movimiento_modulo());	
				parametrocompraAux.setdescripcion(this.parametrocompra.getdescripcion());	
				parametrocompraAux.setid_formato_pedido(this.parametrocompra.getid_formato_pedido());	
				parametrocompraAux.setid_estado_pedido_pendiente(this.parametrocompra.getid_estado_pedido_pendiente());	
				parametrocompraAux.setid_formato_cotizacion(this.parametrocompra.getid_formato_cotizacion());	
				parametrocompraAux.setid_estado_pedido_cotizado(this.parametrocompra.getid_estado_pedido_cotizado());	
				parametrocompraAux.setid_formato_autorizacion(this.parametrocompra.getid_formato_autorizacion());	
				parametrocompraAux.setid_estado_pedido_autorizado(this.parametrocompra.getid_estado_pedido_autorizado());	
				parametrocompraAux.setid_formato_item(this.parametrocompra.getid_formato_item());	
				parametrocompraAux.setid_estado_pedido_anulado(this.parametrocompra.getid_estado_pedido_anulado());	
				parametrocompraAux.setid_prioridad_pedido(this.parametrocompra.getid_prioridad_pedido());	
				parametrocompraAux.setid_estado_pedido_suspendido(this.parametrocompra.getid_estado_pedido_suspendido());	
				parametrocompraAux.setid_estado_pedido_regularizado(this.parametrocompra.getid_estado_pedido_regularizado());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrocompraAux,parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrocompraAux,parametrocompras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.parametrocompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrocompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.saveParametroCompras();//WithConnection
						//parametrocompraLogic.getSetVersionRowParametroCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametrocompra,parametrocompraAux);
					
					this.refrescarForeignKeysDescripcionesParametroCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrocompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrocompraLogic.saveParametroCompraRelaciones(parametrocompraAux);//WithConnection
								//parametrocompraLogic.getSetVersionRowParametroCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.parametrocompra,parametrocompraAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.parametrocompraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.parametrocompraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(parametrocompraAux,parametrocompraLogic.getParametroCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(parametrocompraAux,parametrocompras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.parametrocompra,parametrocompraAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				parametrocompraAux=new  ParametroCompra();
				
				parametrocompraAux.setIsNew(false);
				parametrocompraAux.setIsChanged(false);
				
				parametrocompraAux.setIsDeleted(true);
				
				parametrocompraAux.setId(this.parametrocompra.getId());	
				parametrocompraAux.setVersionRow(this.parametrocompra.getVersionRow());	
				parametrocompraAux.setid_empresa(this.parametrocompra.getid_empresa());	
				parametrocompraAux.setsecuencial_pedido(this.parametrocompra.getsecuencial_pedido());	
				parametrocompraAux.setsecuencial_cotizacion(this.parametrocompra.getsecuencial_cotizacion());	
				parametrocompraAux.setsecuencial_produccion(this.parametrocompra.getsecuencial_produccion());	
				parametrocompraAux.setid_tipo_documento(this.parametrocompra.getid_tipo_documento());	
				parametrocompraAux.setid_tipo_movimiento(this.parametrocompra.getid_tipo_movimiento());	
				parametrocompraAux.setid_bodega(this.parametrocompra.getid_bodega());	
				parametrocompraAux.setid_bodega_reserva(this.parametrocompra.getid_bodega_reserva());	
				parametrocompraAux.setid_empleado(this.parametrocompra.getid_empleado());	
				parametrocompraAux.setid_embarcador(this.parametrocompra.getid_embarcador());	
				parametrocompraAux.setcon_centro_costo(this.parametrocompra.getcon_centro_costo());	
				parametrocompraAux.settexto_mail(this.parametrocompra.gettexto_mail());	
				parametrocompraAux.setid_modulo(this.parametrocompra.getid_modulo());	
				parametrocompraAux.setid_tipo_movimiento_modulo(this.parametrocompra.getid_tipo_movimiento_modulo());	
				parametrocompraAux.setdescripcion(this.parametrocompra.getdescripcion());	
				parametrocompraAux.setid_formato_pedido(this.parametrocompra.getid_formato_pedido());	
				parametrocompraAux.setid_estado_pedido_pendiente(this.parametrocompra.getid_estado_pedido_pendiente());	
				parametrocompraAux.setid_formato_cotizacion(this.parametrocompra.getid_formato_cotizacion());	
				parametrocompraAux.setid_estado_pedido_cotizado(this.parametrocompra.getid_estado_pedido_cotizado());	
				parametrocompraAux.setid_formato_autorizacion(this.parametrocompra.getid_formato_autorizacion());	
				parametrocompraAux.setid_estado_pedido_autorizado(this.parametrocompra.getid_estado_pedido_autorizado());	
				parametrocompraAux.setid_formato_item(this.parametrocompra.getid_formato_item());	
				parametrocompraAux.setid_estado_pedido_anulado(this.parametrocompra.getid_estado_pedido_anulado());	
				parametrocompraAux.setid_prioridad_pedido(this.parametrocompra.getid_prioridad_pedido());	
				parametrocompraAux.setid_estado_pedido_suspendido(this.parametrocompra.getid_estado_pedido_suspendido());	
				parametrocompraAux.setid_estado_pedido_regularizado(this.parametrocompra.getid_estado_pedido_regularizado());	
				
				if(this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.parametrocompraAux.getId()>=0) {	
						this.parametrocomprasEliminados.add(parametrocompraAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(parametrocompraAux,parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrocompraAux,parametrocompras);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.parametrocompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrocompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.saveParametroCompras();//WithConnection
						//parametrocompraLogic.getSetVersionRowParametroCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrocompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrocompraLogic.saveParametroCompraRelaciones(parametrocompraAux);//WithConnection
								//parametrocompraLogic.getSetVersionRowParametroCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.parametrocompraSessionBean.getEstaModoGuardarRelaciones() 
								|| this.parametrocompraSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(parametrocompraAux,parametrocompraLogic.getParametroCompras());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(parametrocompraAux,parametrocompras);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getParametroCompras().addAll(this.parametrocomprasEliminados);
					
					parametrocompraLogic.saveParametroCompras();//WithConnection
					//parametrocompraLogic.getSetVersionRowParametroCompras();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesParametroCompra();
				
				this.parametrocomprasEliminados= new ArrayList<ParametroCompra>();		
			}
			
			if(this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Parametro Compra GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Parametro Compra",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.parametrocompra=parametrocompraAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessParametroCompra();
      	}
		
	}	
	
	public void actualizarRelaciones(ParametroCompra parametrocompraLocal) throws Exception {
		
		if(this.parametrocompraSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(ParametroCompra parametrocompraLocal) throws Exception {	
		if(this.parametrocompraSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				parametrocompraLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDocumentoDetalleFormJInternalFrame.class)) {
				TipoDocumentoBeanSwingJInternalFrame tipodocumentoBeanSwingJInternalFrameLocal=(TipoDocumentoBeanSwingJInternalFrame) ((TipoDocumentoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodocumentoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDocumento(tipodocumentoBeanSwingJInternalFrameLocal.gettipodocumento(),true);
				tipodocumentoBeanSwingJInternalFrameLocal.actualizarLista(tipodocumentoBeanSwingJInternalFrameLocal.tipodocumento,this.tipodocumentosForeignKey);

				tipodocumentoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodocumentoBeanSwingJInternalFrameLocal.tipodocumento);

				parametrocompraLocal.setTipoDocumento(tipodocumentoBeanSwingJInternalFrameLocal.tipodocumento);

				this.addItemDefectoCombosForeignKeyTipoDocumento();
				this.cargarCombosFrameTipoDocumentosForeignKey("Formulario");
				this.setActualTipoDocumentoForeignKey(tipodocumentoBeanSwingJInternalFrameLocal.tipodocumento.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoMovimientoDetalleFormJInternalFrame.class)) {
				TipoMovimientoBeanSwingJInternalFrame tipomovimientoBeanSwingJInternalFrameLocal=(TipoMovimientoBeanSwingJInternalFrame) ((TipoMovimientoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipomovimientoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoMovimiento(tipomovimientoBeanSwingJInternalFrameLocal.gettipomovimiento(),true);
				tipomovimientoBeanSwingJInternalFrameLocal.actualizarLista(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento,this.tipomovimientosForeignKey);

				tipomovimientoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento);

				parametrocompraLocal.setTipoMovimiento(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento);

				this.addItemDefectoCombosForeignKeyTipoMovimiento();
				this.cargarCombosFrameTipoMovimientosForeignKey("Formulario");
				this.setActualTipoMovimientoForeignKey(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegaBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegaBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegaBeanSwingJInternalFrameLocal.actualizarLista(bodegaBeanSwingJInternalFrameLocal.bodega,this.bodegasForeignKey);

				bodegaBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegaBeanSwingJInternalFrameLocal.bodega);

				parametrocompraLocal.setBodega(bodegaBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey("Formulario");
				this.setActualBodegaForeignKey(bodegaBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegareservaBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegareservaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegareservaBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegareservaBeanSwingJInternalFrameLocal.actualizarLista(bodegareservaBeanSwingJInternalFrameLocal.bodega,this.bodegareservasForeignKey);

				bodegareservaBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegareservaBeanSwingJInternalFrameLocal.bodega);

				parametrocompraLocal.setBodegaReserva(bodegareservaBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodegaReserva();
				this.cargarCombosFrameBodegaReservasForeignKey("Formulario");
				this.setActualBodegaReservaForeignKey(bodegareservaBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoBeanSwingJInternalFrameLocal.actualizarLista(empleadoBeanSwingJInternalFrameLocal.empleado,this.empleadosForeignKey);

				empleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoBeanSwingJInternalFrameLocal.empleado);

				parametrocompraLocal.setEmpleado(empleadoBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey("Formulario");
				this.setActualEmpleadoForeignKey(empleadoBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmbarcadorDetalleFormJInternalFrame.class)) {
				EmbarcadorBeanSwingJInternalFrame embarcadorBeanSwingJInternalFrameLocal=(EmbarcadorBeanSwingJInternalFrame) ((EmbarcadorDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				embarcadorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmbarcador(embarcadorBeanSwingJInternalFrameLocal.getembarcador(),true);
				embarcadorBeanSwingJInternalFrameLocal.actualizarLista(embarcadorBeanSwingJInternalFrameLocal.embarcador,this.embarcadorsForeignKey);

				embarcadorBeanSwingJInternalFrameLocal.actualizarRelaciones(embarcadorBeanSwingJInternalFrameLocal.embarcador);

				parametrocompraLocal.setEmbarcador(embarcadorBeanSwingJInternalFrameLocal.embarcador);

				this.addItemDefectoCombosForeignKeyEmbarcador();
				this.cargarCombosFrameEmbarcadorsForeignKey("Formulario");
				this.setActualEmbarcadorForeignKey(embarcadorBeanSwingJInternalFrameLocal.embarcador.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ModuloDetalleFormJInternalFrame.class)) {
				ModuloBeanSwingJInternalFrame moduloBeanSwingJInternalFrameLocal=(ModuloBeanSwingJInternalFrame) ((ModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				moduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoModulo(moduloBeanSwingJInternalFrameLocal.getmodulo(),true);
				moduloBeanSwingJInternalFrameLocal.actualizarLista(moduloBeanSwingJInternalFrameLocal.modulo,this.modulosForeignKey);

				moduloBeanSwingJInternalFrameLocal.actualizarRelaciones(moduloBeanSwingJInternalFrameLocal.modulo);

				parametrocompraLocal.setModulo(moduloBeanSwingJInternalFrameLocal.modulo);

				this.addItemDefectoCombosForeignKeyModulo();
				this.cargarCombosFrameModulosForeignKey("Formulario");
				this.setActualModuloForeignKey(moduloBeanSwingJInternalFrameLocal.modulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoMovimientoModuloDetalleFormJInternalFrame.class)) {
				TipoMovimientoModuloBeanSwingJInternalFrame tipomovimientomoduloBeanSwingJInternalFrameLocal=(TipoMovimientoModuloBeanSwingJInternalFrame) ((TipoMovimientoModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipomovimientomoduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoMovimientoModulo(tipomovimientomoduloBeanSwingJInternalFrameLocal.gettipomovimientomodulo(),true);
				tipomovimientomoduloBeanSwingJInternalFrameLocal.actualizarLista(tipomovimientomoduloBeanSwingJInternalFrameLocal.tipomovimientomodulo,this.tipomovimientomodulosForeignKey);

				tipomovimientomoduloBeanSwingJInternalFrameLocal.actualizarRelaciones(tipomovimientomoduloBeanSwingJInternalFrameLocal.tipomovimientomodulo);

				parametrocompraLocal.setTipoMovimientoModulo(tipomovimientomoduloBeanSwingJInternalFrameLocal.tipomovimientomodulo);

				this.addItemDefectoCombosForeignKeyTipoMovimientoModulo();
				this.cargarCombosFrameTipoMovimientoModulosForeignKey("Formulario");
				this.setActualTipoMovimientoModuloForeignKey(tipomovimientomoduloBeanSwingJInternalFrameLocal.tipomovimientomodulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatopedidoBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatopedidoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatopedidoBeanSwingJInternalFrameLocal.getformato(),true);
				formatopedidoBeanSwingJInternalFrameLocal.actualizarLista(formatopedidoBeanSwingJInternalFrameLocal.formato,this.formatopedidosForeignKey);

				formatopedidoBeanSwingJInternalFrameLocal.actualizarRelaciones(formatopedidoBeanSwingJInternalFrameLocal.formato);

				parametrocompraLocal.setFormatoPedido(formatopedidoBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormatoPedido();
				this.cargarCombosFrameFormatoPedidosForeignKey("Formulario");
				this.setActualFormatoPedidoForeignKey(formatopedidoBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoPedidoDetalleFormJInternalFrame.class)) {
				EstadoPedidoBeanSwingJInternalFrame estadopedidopendienteBeanSwingJInternalFrameLocal=(EstadoPedidoBeanSwingJInternalFrame) ((EstadoPedidoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadopedidopendienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoPedido(estadopedidopendienteBeanSwingJInternalFrameLocal.getestadopedido(),true);
				estadopedidopendienteBeanSwingJInternalFrameLocal.actualizarLista(estadopedidopendienteBeanSwingJInternalFrameLocal.estadopedido,this.estadopedidopendientesForeignKey);

				estadopedidopendienteBeanSwingJInternalFrameLocal.actualizarRelaciones(estadopedidopendienteBeanSwingJInternalFrameLocal.estadopedido);

				parametrocompraLocal.setEstadoPedidoPendiente(estadopedidopendienteBeanSwingJInternalFrameLocal.estadopedido);

				this.addItemDefectoCombosForeignKeyEstadoPedidoPendiente();
				this.cargarCombosFrameEstadoPedidoPendientesForeignKey("Formulario");
				this.setActualEstadoPedidoPendienteForeignKey(estadopedidopendienteBeanSwingJInternalFrameLocal.estadopedido.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatocotizacionBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatocotizacionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatocotizacionBeanSwingJInternalFrameLocal.getformato(),true);
				formatocotizacionBeanSwingJInternalFrameLocal.actualizarLista(formatocotizacionBeanSwingJInternalFrameLocal.formato,this.formatocotizacionsForeignKey);

				formatocotizacionBeanSwingJInternalFrameLocal.actualizarRelaciones(formatocotizacionBeanSwingJInternalFrameLocal.formato);

				parametrocompraLocal.setFormatoCotizacion(formatocotizacionBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormatoCotizacion();
				this.cargarCombosFrameFormatoCotizacionsForeignKey("Formulario");
				this.setActualFormatoCotizacionForeignKey(formatocotizacionBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoPedidoDetalleFormJInternalFrame.class)) {
				EstadoPedidoBeanSwingJInternalFrame estadopedidocotizadoBeanSwingJInternalFrameLocal=(EstadoPedidoBeanSwingJInternalFrame) ((EstadoPedidoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadopedidocotizadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoPedido(estadopedidocotizadoBeanSwingJInternalFrameLocal.getestadopedido(),true);
				estadopedidocotizadoBeanSwingJInternalFrameLocal.actualizarLista(estadopedidocotizadoBeanSwingJInternalFrameLocal.estadopedido,this.estadopedidocotizadosForeignKey);

				estadopedidocotizadoBeanSwingJInternalFrameLocal.actualizarRelaciones(estadopedidocotizadoBeanSwingJInternalFrameLocal.estadopedido);

				parametrocompraLocal.setEstadoPedidoCotizado(estadopedidocotizadoBeanSwingJInternalFrameLocal.estadopedido);

				this.addItemDefectoCombosForeignKeyEstadoPedidoCotizado();
				this.cargarCombosFrameEstadoPedidoCotizadosForeignKey("Formulario");
				this.setActualEstadoPedidoCotizadoForeignKey(estadopedidocotizadoBeanSwingJInternalFrameLocal.estadopedido.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatoautorizacionBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatoautorizacionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatoautorizacionBeanSwingJInternalFrameLocal.getformato(),true);
				formatoautorizacionBeanSwingJInternalFrameLocal.actualizarLista(formatoautorizacionBeanSwingJInternalFrameLocal.formato,this.formatoautorizacionsForeignKey);

				formatoautorizacionBeanSwingJInternalFrameLocal.actualizarRelaciones(formatoautorizacionBeanSwingJInternalFrameLocal.formato);

				parametrocompraLocal.setFormatoAutorizacion(formatoautorizacionBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormatoAutorizacion();
				this.cargarCombosFrameFormatoAutorizacionsForeignKey("Formulario");
				this.setActualFormatoAutorizacionForeignKey(formatoautorizacionBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoPedidoDetalleFormJInternalFrame.class)) {
				EstadoPedidoBeanSwingJInternalFrame estadopedidoautorizadoBeanSwingJInternalFrameLocal=(EstadoPedidoBeanSwingJInternalFrame) ((EstadoPedidoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadopedidoautorizadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoPedido(estadopedidoautorizadoBeanSwingJInternalFrameLocal.getestadopedido(),true);
				estadopedidoautorizadoBeanSwingJInternalFrameLocal.actualizarLista(estadopedidoautorizadoBeanSwingJInternalFrameLocal.estadopedido,this.estadopedidoautorizadosForeignKey);

				estadopedidoautorizadoBeanSwingJInternalFrameLocal.actualizarRelaciones(estadopedidoautorizadoBeanSwingJInternalFrameLocal.estadopedido);

				parametrocompraLocal.setEstadoPedidoAutorizado(estadopedidoautorizadoBeanSwingJInternalFrameLocal.estadopedido);

				this.addItemDefectoCombosForeignKeyEstadoPedidoAutorizado();
				this.cargarCombosFrameEstadoPedidoAutorizadosForeignKey("Formulario");
				this.setActualEstadoPedidoAutorizadoForeignKey(estadopedidoautorizadoBeanSwingJInternalFrameLocal.estadopedido.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatoitemBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatoitemBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatoitemBeanSwingJInternalFrameLocal.getformato(),true);
				formatoitemBeanSwingJInternalFrameLocal.actualizarLista(formatoitemBeanSwingJInternalFrameLocal.formato,this.formatoitemsForeignKey);

				formatoitemBeanSwingJInternalFrameLocal.actualizarRelaciones(formatoitemBeanSwingJInternalFrameLocal.formato);

				parametrocompraLocal.setFormatoItem(formatoitemBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormatoItem();
				this.cargarCombosFrameFormatoItemsForeignKey("Formulario");
				this.setActualFormatoItemForeignKey(formatoitemBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoPedidoDetalleFormJInternalFrame.class)) {
				EstadoPedidoBeanSwingJInternalFrame estadopedidoanuladoBeanSwingJInternalFrameLocal=(EstadoPedidoBeanSwingJInternalFrame) ((EstadoPedidoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadopedidoanuladoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoPedido(estadopedidoanuladoBeanSwingJInternalFrameLocal.getestadopedido(),true);
				estadopedidoanuladoBeanSwingJInternalFrameLocal.actualizarLista(estadopedidoanuladoBeanSwingJInternalFrameLocal.estadopedido,this.estadopedidoanuladosForeignKey);

				estadopedidoanuladoBeanSwingJInternalFrameLocal.actualizarRelaciones(estadopedidoanuladoBeanSwingJInternalFrameLocal.estadopedido);

				parametrocompraLocal.setEstadoPedidoAnulado(estadopedidoanuladoBeanSwingJInternalFrameLocal.estadopedido);

				this.addItemDefectoCombosForeignKeyEstadoPedidoAnulado();
				this.cargarCombosFrameEstadoPedidoAnuladosForeignKey("Formulario");
				this.setActualEstadoPedidoAnuladoForeignKey(estadopedidoanuladoBeanSwingJInternalFrameLocal.estadopedido.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PrioridadPedidoDetalleFormJInternalFrame.class)) {
				PrioridadPedidoBeanSwingJInternalFrame prioridadpedidoBeanSwingJInternalFrameLocal=(PrioridadPedidoBeanSwingJInternalFrame) ((PrioridadPedidoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				prioridadpedidoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPrioridadPedido(prioridadpedidoBeanSwingJInternalFrameLocal.getprioridadpedido(),true);
				prioridadpedidoBeanSwingJInternalFrameLocal.actualizarLista(prioridadpedidoBeanSwingJInternalFrameLocal.prioridadpedido,this.prioridadpedidosForeignKey);

				prioridadpedidoBeanSwingJInternalFrameLocal.actualizarRelaciones(prioridadpedidoBeanSwingJInternalFrameLocal.prioridadpedido);

				parametrocompraLocal.setPrioridadPedido(prioridadpedidoBeanSwingJInternalFrameLocal.prioridadpedido);

				this.addItemDefectoCombosForeignKeyPrioridadPedido();
				this.cargarCombosFramePrioridadPedidosForeignKey("Formulario");
				this.setActualPrioridadPedidoForeignKey(prioridadpedidoBeanSwingJInternalFrameLocal.prioridadpedido.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoPedidoDetalleFormJInternalFrame.class)) {
				EstadoPedidoBeanSwingJInternalFrame estadopedidosuspendidoBeanSwingJInternalFrameLocal=(EstadoPedidoBeanSwingJInternalFrame) ((EstadoPedidoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadopedidosuspendidoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoPedido(estadopedidosuspendidoBeanSwingJInternalFrameLocal.getestadopedido(),true);
				estadopedidosuspendidoBeanSwingJInternalFrameLocal.actualizarLista(estadopedidosuspendidoBeanSwingJInternalFrameLocal.estadopedido,this.estadopedidosuspendidosForeignKey);

				estadopedidosuspendidoBeanSwingJInternalFrameLocal.actualizarRelaciones(estadopedidosuspendidoBeanSwingJInternalFrameLocal.estadopedido);

				parametrocompraLocal.setEstadoPedidoSuspendido(estadopedidosuspendidoBeanSwingJInternalFrameLocal.estadopedido);

				this.addItemDefectoCombosForeignKeyEstadoPedidoSuspendido();
				this.cargarCombosFrameEstadoPedidoSuspendidosForeignKey("Formulario");
				this.setActualEstadoPedidoSuspendidoForeignKey(estadopedidosuspendidoBeanSwingJInternalFrameLocal.estadopedido.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoPedidoDetalleFormJInternalFrame.class)) {
				EstadoPedidoBeanSwingJInternalFrame estadopedidoregularizadoBeanSwingJInternalFrameLocal=(EstadoPedidoBeanSwingJInternalFrame) ((EstadoPedidoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadopedidoregularizadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoPedido(estadopedidoregularizadoBeanSwingJInternalFrameLocal.getestadopedido(),true);
				estadopedidoregularizadoBeanSwingJInternalFrameLocal.actualizarLista(estadopedidoregularizadoBeanSwingJInternalFrameLocal.estadopedido,this.estadopedidoregularizadosForeignKey);

				estadopedidoregularizadoBeanSwingJInternalFrameLocal.actualizarRelaciones(estadopedidoregularizadoBeanSwingJInternalFrameLocal.estadopedido);

				parametrocompraLocal.setEstadoPedidoRegularizado(estadopedidoregularizadoBeanSwingJInternalFrameLocal.estadopedido);

				this.addItemDefectoCombosForeignKeyEstadoPedidoRegularizado();
				this.cargarCombosFrameEstadoPedidoRegularizadosForeignKey("Formulario");
				this.setActualEstadoPedidoRegularizadoForeignKey(estadopedidoregularizadoBeanSwingJInternalFrameLocal.estadopedido.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarParametroCompraActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = parametrocompraValidator.getInvalidValues(this.parametrocompra);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(ParametroCompra parametrocompra,List<ParametroCompra> parametrocompras) throws Exception {
		try	{		
			ParametroCompraConstantesFunciones.actualizarLista(parametrocompra,parametrocompras,this.parametrocompraSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(ParametroCompra parametrocompra,List<ParametroCompra> parametrocompras) throws Exception {
		try	{			
			ParametroCompraConstantesFunciones.actualizarSelectedLista(parametrocompra,parametrocompras);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<ParametroCompra> parametrocomprasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				parametrocomprasLocal=this.parametrocompraLogic.getParametroCompras();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				parametrocomprasLocal=this.parametrocompras;
			}
			//ARCHITECTURE
		
			for(ParametroCompra parametrocompraLocal:parametrocomprasLocal) {
				if(this.permiteMantenimiento(parametrocompraLocal) && parametrocompraLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+ParametroCompraConstantesFunciones.getParametroCompraLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_empresaParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.SECUENCIALPEDIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelsecuencial_pedidoParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.SECUENCIALCOTIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelsecuencial_cotizacionParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.SECUENCIALPRODUCCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelsecuencial_produccionParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDTIPODOCUMENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_tipo_documentoParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDTIPOMOVIMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_tipo_movimientoParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDBODEGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_bodegaParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDBODEGARESERVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_bodega_reservaParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_empleadoParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDEMBARCADOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_embarcadorParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.CONCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelcon_centro_costoParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.TEXTOMAIL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabeltexto_mailParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_moduloParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDTIPOMOVIMIENTOMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_tipo_movimiento_moduloParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabeldescripcionParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDFORMATOPEDIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_formato_pedidoParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDESTADOPEDIDOPENDIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_estado_pedido_pendienteParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDFORMATOCOTIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_formato_cotizacionParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDESTADOPEDIDOCOTIZADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_estado_pedido_cotizadoParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDFORMATOAUTORIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_formato_autorizacionParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDESTADOPEDIDOAUTORIZADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_estado_pedido_autorizadoParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDFORMATOITEM)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_formato_itemParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDESTADOPEDIDOANULADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_estado_pedido_anuladoParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDPRIORIDADPEDIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_prioridad_pedidoParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDESTADOPEDIDOSUSPENDIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_estado_pedido_suspendidoParametroCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCompraConstantesFunciones.IDESTADOPEDIDOREGULARIZADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelid_estado_pedido_regularizadoParametroCompra,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_empresaParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelsecuencial_pedidoParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelsecuencial_cotizacionParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelsecuencial_produccionParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_tipo_documentoParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_tipo_movimientoParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_bodegaParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_bodega_reservaParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_empleadoParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_embarcadorParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelcon_centro_costoParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabeltexto_mailParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_moduloParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_tipo_movimiento_moduloParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabeldescripcionParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_formato_pedidoParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_estado_pedido_pendienteParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_formato_cotizacionParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_estado_pedido_cotizadoParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_formato_autorizacionParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_estado_pedido_autorizadoParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_formato_itemParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_estado_pedido_anuladoParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_prioridad_pedidoParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_estado_pedido_suspendidoParametroCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCompra.jLabelid_estado_pedido_regularizadoParametroCompra,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoParametroCompra--;	
		
		
		this.parametrocompraAux=new ParametroCompra();
		
		this.parametrocompraAux.setId(this.iIdNuevoParametroCompra);
		this.parametrocompraAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametrocompraLogic.getParametroCompras().add(this.parametrocompraAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.parametrocompras.add(this.parametrocompraAux);
		}
		//ARCHITECTURE
		
		this.parametrocompra=this.parametrocompraAux;
		
		if(ParametroCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioParametroCompra(this.parametrocompra);
			this.setVariablesObjetoActualToFormularioForeignKeyParametroCompra(this.parametrocompra);
		}
				
		//this.setDefaultControlesParametroCompra();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyParametroCompra();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyParametroCompra();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroCompra();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroCompra(this.parametrocompraBean,this.parametrocompra,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(ParametroCompraConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.parametrocompraSessionBean.getConGuardarRelaciones()) {
			classes=ParametroCompraConstantesFunciones.getClassesRelationshipsOfParametroCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.parametrocompraReturnGeneral=parametrocompraLogic.procesarEventosParametroComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrocompraLogic.getParametroCompras(),this.parametrocompra,this.parametrocompraParameterGeneral,this.isEsNuevoParametroCompra,classes);//this.parametrocompraLogic.getParametroCompra()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanParametroCompra(this.parametrocompraReturnGeneral,this.parametrocompraBean,false);
		
		if(this.parametrocompraReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyParametroCompra(this.parametrocompraReturnGeneral.getParametroCompra());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioParametroCompra(this.parametrocompraReturnGeneral.getParametroCompra());
		}
		
		if(this.parametrocompraReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioParametroCompra(this.parametrocompraReturnGeneral.getParametroCompra(),classes);//this.parametrocompraBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyParametroCompra();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyParametroCompra();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroCompraBeanSwingJInternalFrameAdditional.RecargarFormParametroCompra(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingParametroCompra(false);
						
			if(parametrocompraSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroCompra();
			}
			
			this.actualizarVisualTableDatosParametroCompra();
			
			this.jTableDatosParametroCompra.setRowSelectionInterval(this.getIndiceNuevoParametroCompra(), this.getIndiceNuevoParametroCompra());
			
			this.seleccionarFilaTablaParametroCompraActual();
						
			this.actualizarEstadoCeldasBotonesParametroCompra("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesParametroCompra(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_pedidoParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarsecuencial_pedidoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_cotizacionParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarsecuencial_cotizacionParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_produccionParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarsecuencial_produccionParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jCheckBoxcon_centro_costoParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarcon_centro_costoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jTextAreatexto_mailParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activartexto_mailParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jTextAreadescripcionParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activardescripcionParametroCompra);	
		//
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empresaParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_empresaParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_documentoParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_tipo_documentoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimientoParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_tipo_movimientoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodegaParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_bodegaParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodega_reservaParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_bodega_reservaParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empleadoParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_empleadoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_embarcadorParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_embarcadorParametroCompra);//
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_moduloParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_moduloParametroCompra);//
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimiento_moduloParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_tipo_movimiento_moduloParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_pedidoParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_formato_pedidoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_pendienteParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_estado_pedido_pendienteParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_cotizacionParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_formato_cotizacionParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_cotizadoParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_estado_pedido_cotizadoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_autorizacionParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_formato_autorizacionParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_autorizadoParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_estado_pedido_autorizadoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_itemParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_formato_itemParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_anuladoParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_estado_pedido_anuladoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_prioridad_pedidoParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_prioridad_pedidoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_suspendidoParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_estado_pedido_suspendidoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_regularizadoParametroCompra.setEnabled(isHabilitar && this.parametrocompraConstantesFunciones.activarid_estado_pedido_regularizadoParametroCompra);
	};
	
	public void setDefaultControlesParametroCompra() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoParametroCompra(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.parametrocompraSessionBean.setConGuardarRelaciones(true);			
			this.parametrocompraSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormParametroCompra.jTabbedPaneRelacionesParametroCompra.setVisible(true);
			
					
		} else {
			//this.parametrocompraSessionBean.setConGuardarRelaciones(false);			
			this.parametrocompraSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormParametroCompra.jTabbedPaneRelacionesParametroCompra.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoParametroCompra() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroCompra parametrocompraAux:this.parametrocompraLogic.getParametroCompras()) {
				if(parametrocompraAux.getId().equals(this.iIdNuevoParametroCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroCompra parametrocompraAux:this.parametrocompras) {
				if(parametrocompraAux.getId().equals(this.iIdNuevoParametroCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualParametroCompra(ParametroCompra parametrocompra,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroCompra parametrocompraAux:this.parametrocompraLogic.getParametroCompras()) {
				if(parametrocompraAux.getId().equals(parametrocompra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroCompra parametrocompraAux:this.parametrocompras) {
				if(parametrocompraAux.getId().equals(parametrocompra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalParametroCompra(ParametroCompra parametrocompraOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroCompra parametrocompraAux:this.parametrocompraLogic.getParametroCompras()) {
				if(parametrocompraAux.getParametroCompraOriginal().getId().equals(parametrocompraOriginal.getId())) {
					existe=true;
					parametrocompraOriginal.setId(parametrocompraAux.getId());
					parametrocompraOriginal.setVersionRow(parametrocompraAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroCompra parametrocompraAux:this.parametrocompras) {
				if(parametrocompraAux.getParametroCompraOriginal().getId().equals(parametrocompraOriginal.getId())) {
					existe=true;
					parametrocompraOriginal.setId(parametrocompraAux.getId());
					parametrocompraOriginal.setVersionRow(parametrocompraAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosParametroCompra(Boolean esParaCancelar) throws Exception {
		parametrocomprasAux=new ArrayList<ParametroCompra>();
		parametrocompraAux=new ParametroCompra();
		
		if(!this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroCompra parametrocompraAux:this.parametrocompraLogic.getParametroCompras()) {
					if(parametrocompraAux.getId()<0) {
						parametrocomprasAux.add(parametrocompraAux);
					}		
				}
				this.iIdNuevoParametroCompra=0L;
				this.parametrocompraLogic.getParametroCompras().removeAll(parametrocomprasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroCompra parametrocompraAux:this.parametrocompras) {
					if(parametrocompraAux.getId()<0) {
						parametrocomprasAux.add(parametrocompraAux);
					}		
				}
				this.iIdNuevoParametroCompra=0L;
				this.parametrocompras.removeAll(parametrocomprasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoParametroCompra 
					&& this.parametrocompraLogic.getParametroCompras().size()>0
					) {
					parametrocompraAux=this.parametrocompraLogic.getParametroCompras().get(this.parametrocompraLogic.getParametroCompras().size() - 1);
				
					if(parametrocompraAux.getId()<0) {
						this.parametrocompraLogic.getParametroCompras().remove(parametrocompraAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoParametroCompra && this.parametrocompras.size()>0) {
					parametrocompraAux=this.parametrocompras.get(this.parametrocompras.size() - 1);
				
					if(parametrocompraAux.getId()<0) {
						this.parametrocompras.remove(parametrocompraAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoParametroCompra(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(parametrocompra.getId()<0) {
				this.parametrocompraLogic.getParametroCompras().remove(this.parametrocompra);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(parametrocompra.getId()<0) {
				this.parametrocompras.remove(this.parametrocompra);
			}
		}			
	}
	
	public void setEstadosInicialesParametroCompra(List<ParametroCompra> parametrocomprasAux) throws Exception {
		ParametroCompraConstantesFunciones.setEstadosInicialesParametroCompra(parametrocomprasAux);
	}
	
	public void setEstadosInicialesParametroCompra(ParametroCompra parametrocompraAux) throws Exception {
		ParametroCompraConstantesFunciones.setEstadosInicialesParametroCompra(parametrocompraAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarParametroCompraActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesParametroCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarParametroCompraActual()) {
				if(!this.isEsNuevoParametroCompra) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesParametroCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoParametroCompra=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarParametroCompraActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Parametro Compra ?", "MANTENIMIENTO DE Parametro Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesParametroCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(ParametroCompra parametrocompra) throws Exception {
		ParametroCompraConstantesFunciones.seleccionarAsignar(this.parametrocompra,parametrocompra);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarParametroCompra=this.isPermisoActualizarOriginalParametroCompra;
			
			
			this.seleccionarAsignar(parametrocompra);
			
			

			idEmpleadoActual=parametrocompra.getid_empleado();
			this.seleccionarEmpleadoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroCompraConstantesFunciones.quitarEspaciosParametroCompra(this.parametrocompra,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesParametroCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.parametrocompraSessionBean.setsFuncionBusquedaRapida(this.parametrocompraSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarEmpleadoActual() throws Exception {
		try	{
			Empleado empleadoAux=new Empleado();

			if(this.idEmpleadoActual != null && this.idEmpleadoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(this.idEmpleadoActual);
					empleadoAux= empleadoLogic.getEmpleado();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				empleadosForeignKey=new ArrayList<Empleado>();
				empleadosForeignKey.add(empleadoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoParametroCompra) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosParametroCompra(esParaCancelar);				
				this.cancelarNuevoParametroCompra(esParaCancelar);								
			}
			
			this.parametrocompra=new ParametroCompra();
			
			this.inicializarParametroCompra();
			
			this.actualizarEstadoCeldasBotonesParametroCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarParametroCompra() throws Exception {
		try {
			ParametroCompraConstantesFunciones.inicializarParametroCompra(this.parametrocompra);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.parametrocompraLogic.getParametroCompras().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteParametroCompras(String sAccionBusqueda,List<ParametroCompra> parametrocomprasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="ParametroCompra"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="ParametroCompraMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("ParametroCompraMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="ParametroCompra"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Parametro Compraes");		
		parameters.put("busquedapor", ParametroCompraConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceParametroCompra=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			ParametroCompraConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			ParametroCompraConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceParametroCompra=new JRBeanArrayDataSource(ParametroCompraJInternalFrame.TraerParametroCompraBeans(parametrocomprasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceParametroCompra);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+ParametroCompraConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+ParametroCompraConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(ParametroCompraBean.TraerParametroCompraBeans(parametrocomprasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteParametroCompras(sAccionBusqueda,sTipoArchivoReporte,parametrocomprasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalParametroCompras(sAccionBusqueda,sTipoArchivoReporte,parametrocomprasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoParametroCompraActionPerformed(null);
					//this.generarExcelReporteParametroCompras(sAccionBusqueda,sTipoArchivoReporte,parametrocomprasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalParametroCompras(sAccionBusqueda,sTipoArchivoReporte,parametrocomprasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesParametroCompras(sAccionBusqueda,sTipoArchivoReporte,parametrocomprasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesParametroCompras(sAccionBusqueda,sTipoArchivoReporte,parametrocomprasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteParametroCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroCompra> parametrocomprasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrocompra";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroCompras");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroCompra("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(ParametroCompra parametrocompra : parametrocomprasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			ParametroCompraConstantesFunciones.generarExcelReporteDataParametroCompra("NORMAL",row,workbook,parametrocompra,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderParametroCompra(String sTipo,Row row,Workbook workbook) {
		
		ParametroCompraConstantesFunciones.generarExcelReporteHeaderParametroCompra(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalParametroCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroCompra> parametrocomprasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrocompra_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroCompras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(ParametroCompra parametrocompra : parametrocomprasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(ParametroCompraConstantesFunciones.getParametroCompraDescripcion(parametrocompra));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getsecuencial_pedido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getsecuencial_cotizacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getsecuencial_produccion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDTIPODOCUMENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDTIPODOCUMENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.gettipodocumento_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.gettipomovimiento_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDBODEGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDBODEGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getbodega_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDBODEGARESERVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDBODEGARESERVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getbodegareserva_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDEMBARCADOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDEMBARCADOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getembarcador_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrocompra.getcon_centro_costo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.gettexto_mail());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.gettipomovimientomodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDFORMATOPEDIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDFORMATOPEDIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getformatopedido_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOPENDIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOPENDIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getestadopedidopendiente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDFORMATOCOTIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDFORMATOCOTIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getformatocotizacion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOTIZADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOTIZADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getestadopedidocotizado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDFORMATOAUTORIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDFORMATOAUTORIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getformatoautorizacion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOAUTORIZADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOAUTORIZADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getestadopedidoautorizado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDFORMATOITEM))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDFORMATOITEM);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getformatoitem_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOANULADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOANULADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getestadopedidoanulado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDPRIORIDADPEDIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDPRIORIDADPEDIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getprioridadpedido_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOSUSPENDIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOSUSPENDIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getestadopedidosuspendido_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOREGULARIZADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOREGULARIZADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocompra.getestadopedidoregularizado_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesParametroCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroCompra> parametrocomprasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<ParametroCompra> parametrocomprasRespaldo=null;
		
		classes=ParametroCompraConstantesFunciones.getClassesRelationshipsOfParametroCompra(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.parametrocompraLogic.setDatosCliente(this.datosCliente);
		this.parametrocompraLogic.setDatosDeep(this.datosDeep);
		this.parametrocompraLogic.setIsConDeep(true);
		
		parametrocomprasRespaldo=this.parametrocompraLogic.getParametroCompras();
		
		this.parametrocompraLogic.setParametroCompras(parametrocomprasParaReportes);	
		this.parametrocompraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		parametrocomprasParaReportes=this.parametrocompraLogic.getParametroCompras();
		this.parametrocompraLogic.setParametroCompras(parametrocomprasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrocompra_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroCompras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroCompra("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(ParametroCompra parametrocompra : parametrocomprasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderParametroCompra("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			ParametroCompraConstantesFunciones.generarExcelReporteDataParametroCompra("NORMAL",row,workbook,parametrocompra,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(ParametroCompraConstantesFunciones.getParametroCompraDescripcion(parametrocompra));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroCompra.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroCompra.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessParametroCompra() throws Exception {		
		this.startProcessParametroCompra(true);
	}
	
	public void startProcessParametroCompra(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasParametroCompra ,this.jPanelParametrosReportesParametroCompra, this.jScrollPanelDatosParametroCompra,this.jPanelPaginacionParametroCompra, this.jScrollPanelDatosEdicionParametroCompra, this.jPanelAccionesParametroCompra,this.jPanelAccionesFormularioParametroCompra,this.jmenuBarParametroCompra,this.jmenuBarDetalleParametroCompra,this.jTtoolBarParametroCompra,this.jTtoolBarDetalleParametroCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroCompra=this.jTabbedPaneBusquedasParametroCompra; 
		
		final JPanel jPanelParametrosReportesParametroCompra=this.jPanelParametrosReportesParametroCompra;
		//final JScrollPane jScrollPanelDatosParametroCompra=this.jScrollPanelDatosParametroCompra;
		final JTable jTableDatosParametroCompra=this.jTableDatosParametroCompra;		
		final JPanel jPanelPaginacionParametroCompra=this.jPanelPaginacionParametroCompra;
		//final JScrollPane jScrollPanelDatosEdicionParametroCompra=this.jScrollPanelDatosEdicionParametroCompra;
		final JPanel jPanelAccionesParametroCompra=this.jPanelAccionesParametroCompra;
		
		JPanel jPanelCamposAuxiliarParametroCompra=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarParametroCompra=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) {
			jPanelCamposAuxiliarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jPanelCamposParametroCompra;
			jPanelAccionesFormularioAuxiliarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jPanelAccionesFormularioParametroCompra;
		}
		
		final JPanel jPanelCamposParametroCompra=jPanelCamposAuxiliarParametroCompra;
		final JPanel jPanelAccionesFormularioParametroCompra=jPanelAccionesFormularioAuxiliarParametroCompra;
		
		
		final JMenuBar jmenuBarParametroCompra=this.jmenuBarParametroCompra;
		final JToolBar jTtoolBarParametroCompra=this.jTtoolBarParametroCompra;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarParametroCompra=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroCompra=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) {
			jmenuBarDetalleAuxiliarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jmenuBarDetalleParametroCompra;
			jTtoolBarDetalleAuxiliarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jTtoolBarDetalleParametroCompra;
		}
		
		final JMenuBar jmenuBarDetalleParametroCompra=jmenuBarDetalleAuxiliarParametroCompra;
		final JToolBar jTtoolBarDetalleParametroCompra=jTtoolBarDetalleAuxiliarParametroCompra;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroCompra;
			processRunnable.jTableDatos=jTableDatosParametroCompra;
			processRunnable.jPanelCampos=jPanelCamposParametroCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroCompra;
			processRunnable.jPanelAcciones=jPanelAccionesParametroCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroCompra;
			
			
			processRunnable.jmenuBar=jmenuBarParametroCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroCompra;
			processRunnable.jTtoolBar=jTtoolBarParametroCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroCompra ,jPanelParametrosReportesParametroCompra,jTableDatosParametroCompra, /*jScrollPanelDatosParametroCompra,*/jPanelCamposParametroCompra,jPanelPaginacionParametroCompra, /*jScrollPanelDatosEdicionParametroCompra,*/ jPanelAccionesParametroCompra,jPanelAccionesFormularioParametroCompra,jmenuBarParametroCompra,jmenuBarDetalleParametroCompra,jTtoolBarParametroCompra,jTtoolBarDetalleParametroCompra);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroCompra ,jPanelParametrosReportesParametroCompra, jScrollPanelDatosParametroCompra,jPanelPaginacionParametroCompra, jScrollPanelDatosEdicionParametroCompra, jPanelAccionesParametroCompra,jPanelAccionesFormularioParametroCompra,jmenuBarParametroCompra,jmenuBarDetalleParametroCompra,jTtoolBarParametroCompra,jTtoolBarDetalleParametroCompra);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessParametroCompra() {// throws Exception 
		this.finishProcessParametroCompra(true);
	}
	
	public void finishProcessParametroCompra(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasParametroCompra ,this.jPanelParametrosReportesParametroCompra, this.jScrollPanelDatosParametroCompra,this.jPanelPaginacionParametroCompra, this.jScrollPanelDatosEdicionParametroCompra, this.jPanelAccionesParametroCompra,this.jPanelAccionesFormularioParametroCompra,this.jmenuBarParametroCompra,this.jmenuBarDetalleParametroCompra,this.jTtoolBarParametroCompra,this.jTtoolBarDetalleParametroCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroCompra=this.jTabbedPaneBusquedasParametroCompra; 
		
		final JPanel jPanelParametrosReportesParametroCompra=this.jPanelParametrosReportesParametroCompra;
		//final JScrollPane jScrollPanelDatosParametroCompra=this.jScrollPanelDatosParametroCompra;
		final JTable jTableDatosParametroCompra=this.jTableDatosParametroCompra;		
		final JPanel jPanelPaginacionParametroCompra=this.jPanelPaginacionParametroCompra;
		//final JScrollPane jScrollPanelDatosEdicionParametroCompra=this.jScrollPanelDatosEdicionParametroCompra;
		final JPanel jPanelAccionesParametroCompra=this.jPanelAccionesParametroCompra;
		
		JPanel jPanelCamposAuxiliarParametroCompra=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarParametroCompra=new JPanel();
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) {
			jPanelCamposAuxiliarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jPanelCamposParametroCompra;
			jPanelAccionesFormularioAuxiliarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jPanelAccionesFormularioParametroCompra;
		}
		
		final JPanel jPanelCamposParametroCompra=jPanelCamposAuxiliarParametroCompra;
		final JPanel jPanelAccionesFormularioParametroCompra=jPanelAccionesFormularioAuxiliarParametroCompra;
		
		
		final JMenuBar jmenuBarParametroCompra=this.jmenuBarParametroCompra;		
		final JToolBar jTtoolBarParametroCompra=this.jTtoolBarParametroCompra;
				
		JMenuBar jmenuBarDetalleAuxiliarParametroCompra=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroCompra=new JToolBar();
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) {
			jmenuBarDetalleAuxiliarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jmenuBarDetalleParametroCompra;
			jTtoolBarDetalleAuxiliarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jTtoolBarDetalleParametroCompra;		
		}
		
		final JMenuBar jmenuBarDetalleParametroCompra=jmenuBarDetalleAuxiliarParametroCompra;
		final JToolBar jTtoolBarDetalleParametroCompra=jTtoolBarDetalleAuxiliarParametroCompra;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroCompra;
			processRunnable.jTableDatos=jTableDatosParametroCompra;
			processRunnable.jPanelCampos=jPanelCamposParametroCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroCompra;
			processRunnable.jPanelAcciones=jPanelAccionesParametroCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroCompra;
			
			
			processRunnable.jmenuBar=jmenuBarParametroCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroCompra;
			processRunnable.jTtoolBar=jTtoolBarParametroCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasParametroCompra ,jPanelParametrosReportesParametroCompra, jTableDatosParametroCompra,/*jScrollPanelDatosParametroCompra,*/jPanelCamposParametroCompra,jPanelPaginacionParametroCompra, /*jScrollPanelDatosEdicionParametroCompra,*/ jPanelAccionesParametroCompra,jPanelAccionesFormularioParametroCompra,jmenuBarParametroCompra,jmenuBarDetalleParametroCompra,jTtoolBarParametroCompra,jTtoolBarDetalleParametroCompra));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesParametroCompra(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarParametroCompra(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuParametroCompra(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarParametroCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarParametroCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleParametroCompra,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuParametroCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarParametroCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleParametroCompra,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.parametrocompraConstantesFunciones.getsFinalQueryParametroCompra();
		String  finalQueryPaginacionTodos=this.parametrocompraConstantesFunciones.getsFinalQueryParametroCompra();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=ParametroCompraConstantesFunciones.getArrayColumnasGlobalesNoParametroCompra(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=ParametroCompraConstantesFunciones.getArrayColumnasGlobalesParametroCompra(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,ParametroCompraConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.parametrocomprasEliminados= new ArrayList<ParametroCompra>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessParametroCompra();
		
				///*ParametroCompraSessionBean*/this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			
			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=ParametroCompraConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=ParametroCompraConstantesFunciones.getClassesForeignKeysOfParametroCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/parametrocompra."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			parametrocomprasAux= new ArrayList<ParametroCompra>();
			
				
			parametrocompraLogic.setDatosCliente(this.datosCliente);
			parametrocompraLogic.setDatosDeep(this.datosDeep);
			parametrocompraLogic.setIsConDeep(true);
			
			
			parametrocompraLogic.getParametroCompraDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					parametrocompraLogic.getTodosParametroCompras(finalQueryGlobal,pagination);
					
					//parametrocompraLogic.getTodosParametroComprasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(parametrocompraLogic.getParametroCompras()==null|| parametrocompraLogic.getParametroCompras().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrocomprasAux= new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux= new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrocompraLogic.getTodosParametroCompras(finalQueryGlobal+"",this.pagination);												
							
							//parametrocompraLogic.getTodosParametroComprasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteParametroCompras("Todos",parametrocompraLogic.getParametroCompras() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());					
							parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idParametroCompra=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idParametroCompra=this.idActual;
				
				} else if(this.idParametroCompraActual!=null && this.idParametroCompraActual!=0L) {
					idParametroCompra=idParametroCompraActual;
				}
				
					
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndicePorId(idParametroCompra);
				
				this.parametrocompras=new ArrayList<ParametroCompra>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					parametrocompraLogic.getEntity(idParametroCompra);
					
					//parametrocompraLogic.getEntityWithConnection(idParametroCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
					parametrocompraLogic.getParametroCompras().add(parametrocompraLogic.getParametroCompra());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompras=new ArrayList<ParametroCompra>();
					this.parametrocompras.add(parametrocompra);
				}
				
				if(parametrocompraLogic.getParametroCompra()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdBodega")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdBodega",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdBodega",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdBodegaReserva")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdBodegaReserva(id_bodega_reservaFK_IdBodegaReserva);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdBodegaReserva(finalQueryGlobal,pagination,id_bodega_reservaFK_IdBodegaReserva);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdBodegaReserva(id_bodega_reservaFK_IdBodegaReserva);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdBodegaReserva(id_bodega_reservaFK_IdBodegaReserva);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdBodegaReserva(finalQueryGlobal,pagination,id_bodega_reservaFK_IdBodegaReserva);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdBodegaReserva(id_bodega_reservaFK_IdBodegaReserva);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdBodegaReserva(id_bodega_reservaFK_IdBodegaReserva);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdBodegaReserva",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdBodegaReserva",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmbarcador")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEmbarcador(id_embarcadorFK_IdEmbarcador);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdEmbarcador(finalQueryGlobal,pagination,id_embarcadorFK_IdEmbarcador);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEmbarcador(id_embarcadorFK_IdEmbarcador);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEmbarcador(id_embarcadorFK_IdEmbarcador);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdEmbarcador(finalQueryGlobal,pagination,id_embarcadorFK_IdEmbarcador);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEmbarcador(id_embarcadorFK_IdEmbarcador);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEmbarcador(id_embarcadorFK_IdEmbarcador);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdEmbarcador",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdEmbarcador",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpleado")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdEmpleado",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdEmpleado",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdEmpresa",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdEmpresa",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoPedidoAnulado")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoAnulado(id_estado_pedido_anuladoFK_IdEstadoPedidoAnulado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoAnulado(finalQueryGlobal,pagination,id_estado_pedido_anuladoFK_IdEstadoPedidoAnulado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoAnulado(id_estado_pedido_anuladoFK_IdEstadoPedidoAnulado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoAnulado(id_estado_pedido_anuladoFK_IdEstadoPedidoAnulado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoAnulado(finalQueryGlobal,pagination,id_estado_pedido_anuladoFK_IdEstadoPedidoAnulado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoAnulado(id_estado_pedido_anuladoFK_IdEstadoPedidoAnulado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoAnulado(id_estado_pedido_anuladoFK_IdEstadoPedidoAnulado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdEstadoPedidoAnulado",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdEstadoPedidoAnulado",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoPedidoAutorizado")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoAutorizado(id_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoAutorizado(finalQueryGlobal,pagination,id_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoAutorizado(id_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoAutorizado(id_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoAutorizado(finalQueryGlobal,pagination,id_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoAutorizado(id_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoAutorizado(id_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdEstadoPedidoAutorizado",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdEstadoPedidoAutorizado",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoPedidoCotizado")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoCotizado(id_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoCotizado(finalQueryGlobal,pagination,id_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoCotizado(id_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoCotizado(id_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoCotizado(finalQueryGlobal,pagination,id_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoCotizado(id_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoCotizado(id_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdEstadoPedidoCotizado",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdEstadoPedidoCotizado",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoPedidoPendiente")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoPendiente(id_estado_pedido_pendienteFK_IdEstadoPedidoPendiente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoPendiente(finalQueryGlobal,pagination,id_estado_pedido_pendienteFK_IdEstadoPedidoPendiente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoPendiente(id_estado_pedido_pendienteFK_IdEstadoPedidoPendiente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoPendiente(id_estado_pedido_pendienteFK_IdEstadoPedidoPendiente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoPendiente(finalQueryGlobal,pagination,id_estado_pedido_pendienteFK_IdEstadoPedidoPendiente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoPendiente(id_estado_pedido_pendienteFK_IdEstadoPedidoPendiente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoPendiente(id_estado_pedido_pendienteFK_IdEstadoPedidoPendiente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdEstadoPedidoPendiente",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdEstadoPedidoPendiente",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoPedidoRegularizado")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoRegularizado(id_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoRegularizado(finalQueryGlobal,pagination,id_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoRegularizado(id_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoRegularizado(id_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoRegularizado(finalQueryGlobal,pagination,id_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoRegularizado(id_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoRegularizado(id_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdEstadoPedidoRegularizado",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdEstadoPedidoRegularizado",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoPedidoSuspendo")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoSuspendo(id_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoSuspendo(finalQueryGlobal,pagination,id_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoSuspendo(id_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoSuspendo(id_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoSuspendo(finalQueryGlobal,pagination,id_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoSuspendo(id_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoSuspendo(id_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdEstadoPedidoSuspendo",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdEstadoPedidoSuspendo",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFormatoAutorizacion")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoAutorizacion(id_formato_autorizacionFK_IdFormatoAutorizacion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdFormatoAutorizacion(finalQueryGlobal,pagination,id_formato_autorizacionFK_IdFormatoAutorizacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoAutorizacion(id_formato_autorizacionFK_IdFormatoAutorizacion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoAutorizacion(id_formato_autorizacionFK_IdFormatoAutorizacion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdFormatoAutorizacion(finalQueryGlobal,pagination,id_formato_autorizacionFK_IdFormatoAutorizacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoAutorizacion(id_formato_autorizacionFK_IdFormatoAutorizacion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoAutorizacion(id_formato_autorizacionFK_IdFormatoAutorizacion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdFormatoAutorizacion",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdFormatoAutorizacion",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFormatoCotizacion")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoCotizacion(id_formato_cotizacionFK_IdFormatoCotizacion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdFormatoCotizacion(finalQueryGlobal,pagination,id_formato_cotizacionFK_IdFormatoCotizacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoCotizacion(id_formato_cotizacionFK_IdFormatoCotizacion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoCotizacion(id_formato_cotizacionFK_IdFormatoCotizacion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdFormatoCotizacion(finalQueryGlobal,pagination,id_formato_cotizacionFK_IdFormatoCotizacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoCotizacion(id_formato_cotizacionFK_IdFormatoCotizacion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoCotizacion(id_formato_cotizacionFK_IdFormatoCotizacion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdFormatoCotizacion",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdFormatoCotizacion",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFormatoItem")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoItem(id_formato_itemFK_IdFormatoItem);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdFormatoItem(finalQueryGlobal,pagination,id_formato_itemFK_IdFormatoItem);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoItem(id_formato_itemFK_IdFormatoItem);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoItem(id_formato_itemFK_IdFormatoItem);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdFormatoItem(finalQueryGlobal,pagination,id_formato_itemFK_IdFormatoItem);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoItem(id_formato_itemFK_IdFormatoItem);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoItem(id_formato_itemFK_IdFormatoItem);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdFormatoItem",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdFormatoItem",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFormatoPedido")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoPedido(id_formato_pedidoFK_IdFormatoPedido);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdFormatoPedido(finalQueryGlobal,pagination,id_formato_pedidoFK_IdFormatoPedido);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoPedido(id_formato_pedidoFK_IdFormatoPedido);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoPedido(id_formato_pedidoFK_IdFormatoPedido);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdFormatoPedido(finalQueryGlobal,pagination,id_formato_pedidoFK_IdFormatoPedido);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoPedido(id_formato_pedidoFK_IdFormatoPedido);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdFormatoPedido(id_formato_pedidoFK_IdFormatoPedido);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdFormatoPedido",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdFormatoPedido",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdModulo")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdModulo",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdModulo",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPrioridadPedido")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdPrioridadPedido(id_prioridad_pedidoFK_IdPrioridadPedido);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdPrioridadPedido(finalQueryGlobal,pagination,id_prioridad_pedidoFK_IdPrioridadPedido);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdPrioridadPedido(id_prioridad_pedidoFK_IdPrioridadPedido);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdPrioridadPedido(id_prioridad_pedidoFK_IdPrioridadPedido);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdPrioridadPedido(finalQueryGlobal,pagination,id_prioridad_pedidoFK_IdPrioridadPedido);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdPrioridadPedido(id_prioridad_pedidoFK_IdPrioridadPedido);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdPrioridadPedido(id_prioridad_pedidoFK_IdPrioridadPedido);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdPrioridadPedido",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdPrioridadPedido",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDocumento")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdTipoDocumento(id_tipo_documentoFK_IdTipoDocumento);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdTipoDocumento(finalQueryGlobal,pagination,id_tipo_documentoFK_IdTipoDocumento);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdTipoDocumento(id_tipo_documentoFK_IdTipoDocumento);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdTipoDocumento(id_tipo_documentoFK_IdTipoDocumento);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdTipoDocumento(finalQueryGlobal,pagination,id_tipo_documentoFK_IdTipoDocumento);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdTipoDocumento(id_tipo_documentoFK_IdTipoDocumento);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdTipoDocumento(id_tipo_documentoFK_IdTipoDocumento);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdTipoDocumento",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdTipoDocumento",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoMovimiento")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdTipoMovimiento(id_tipo_movimientoFK_IdTipoMovimiento);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdTipoMovimiento(finalQueryGlobal,pagination,id_tipo_movimientoFK_IdTipoMovimiento);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdTipoMovimiento(id_tipo_movimientoFK_IdTipoMovimiento);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdTipoMovimiento(id_tipo_movimientoFK_IdTipoMovimiento);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdTipoMovimiento(finalQueryGlobal,pagination,id_tipo_movimientoFK_IdTipoMovimiento);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdTipoMovimiento(id_tipo_movimientoFK_IdTipoMovimiento);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdTipoMovimiento(id_tipo_movimientoFK_IdTipoMovimiento);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdTipoMovimiento",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdTipoMovimiento",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoMovimientoModulo")) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdTipoMovimientoModulo(id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocompraLogic.getParametroComprasFK_IdTipoMovimientoModulo(finalQueryGlobal,pagination,id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdTipoMovimientoModulo(id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdTipoMovimientoModulo(id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocompraLogic.getParametroCompras()==null||parametrocompraLogic.getParametroCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocompras==null|| parametrocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocomprasAux=new ArrayList<ParametroCompra>();
						parametrocomprasAux.addAll(parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocomprasAux=new ArrayList<ParametroCompra>();
							parametrocomprasAux.addAll(parametrocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocompraLogic.getParametroComprasFK_IdTipoMovimientoModulo(finalQueryGlobal,pagination,id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdTipoMovimientoModulo(id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCompraConstantesFunciones.getDetalleIndiceFK_IdTipoMovimientoModulo(id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCompras("FK_IdTipoMovimientoModulo",parametrocompraLogic.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCompras("FK_IdTipoMovimientoModulo",parametrocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraLogic.setParametroCompras(new ArrayList<ParametroCompra>());
						parametrocompraLogic.getParametroCompras().addAll(parametrocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompras=new ArrayList<ParametroCompra>();
							parametrocompras.addAll(parametrocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesParametroCompra();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessParametroCompra();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrocompraLogic.getParametroCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrocompras.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrocompraLogic.getParametroCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrocompras.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(ParametroCompra parametrocompra) {
		Boolean permite=true;
		
		if(this.parametrocompra.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=ParametroCompraConstantesFunciones.getOrderByListaParametroCompra();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=ParametroCompraConstantesFunciones.getOrderByListaParametroCompra();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroCompra parametrocompra:parametrocompraLogic.getParametroCompras()) {
				if(parametrocompra.getsType().equals(Constantes2.S_TOTALES)) {
					parametrocompraTotales=parametrocompra;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroCompra parametrocompra:this.parametrocompras) {
				if(parametrocompra.getsType().equals(Constantes2.S_TOTALES)) {
					parametrocompraTotales=parametrocompra;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.parametrocompraAux=new ParametroCompra();
			this.parametrocompraAux.setsType(Constantes2.S_TOTALES);
			this.parametrocompraAux.setIsNew(false);
			this.parametrocompraAux.setIsChanged(false);
			this.parametrocompraAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				ParametroCompraConstantesFunciones.TotalizarValoresFilaParametroCompra(this.parametrocompraLogic.getParametroCompras(),this.parametrocompraAux);
				
				this.parametrocompraLogic.getParametroCompras().add(this.parametrocompraAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				ParametroCompraConstantesFunciones.TotalizarValoresFilaParametroCompra(this.parametrocompras,this.parametrocompraAux);
				
				this.parametrocompras.add(this.parametrocompraAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		parametrocompraTotales=new ParametroCompra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrocompraLogic.getParametroCompras().remove(parametrocompraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrocompras.remove(parametrocompraTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		parametrocompraTotales=new ParametroCompra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroCompra parametrocompra:parametrocompraLogic.getParametroCompras()) {
				if(parametrocompra.getsType().equals(Constantes2.S_TOTALES)) {
					parametrocompraTotales=parametrocompra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroCompraConstantesFunciones.TotalizarValoresFilaParametroCompra(this.parametrocompraLogic.getParametroCompras(),parametrocompraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroCompra parametrocompra:this.parametrocompras) {
				if(parametrocompra.getsType().equals(Constantes2.S_TOTALES)) {
					parametrocompraTotales=parametrocompra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroCompraConstantesFunciones.TotalizarValoresFilaParametroCompra(this.parametrocompras,parametrocompraTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getParametroComprasFK_IdBodega()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodega";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdBodegaReserva()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodegaReserva";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdEmbarcador()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmbarcador";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdEstadoPedidoAnulado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoPedidoAnulado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdEstadoPedidoAutorizado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoPedidoAutorizado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdEstadoPedidoCotizado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoPedidoCotizado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdEstadoPedidoPendiente()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoPedidoPendiente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdEstadoPedidoRegularizado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoPedidoRegularizado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdEstadoPedidoSuspendo()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoPedidoSuspendo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdFormatoAutorizacion()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormatoAutorizacion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdFormatoCotizacion()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormatoCotizacion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdFormatoItem()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormatoItem";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdFormatoPedido()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormatoPedido";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdPrioridadPedido()throws Exception {
		try {
			sAccionBusqueda="FK_IdPrioridadPedido";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdTipoDocumento()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDocumento";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdTipoMovimiento()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoMovimiento";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroComprasFK_IdTipoMovimientoModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoMovimientoModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getParametroComprasFK_IdBodega(String sFinalQuery,Long id_bodega)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdBodega(sFinalQuery,this.pagination,id_bodega);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdBodegaReserva(String sFinalQuery,Long id_bodega_reserva)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdBodegaReserva(sFinalQuery,this.pagination,id_bodega_reserva);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdEmbarcador(String sFinalQuery,Long id_embarcador)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdEmbarcador(sFinalQuery,this.pagination,id_embarcador);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdEmpleado(String sFinalQuery,Long id_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdEmpleado(sFinalQuery,this.pagination,id_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdEstadoPedidoAnulado(String sFinalQuery,Long id_estado_pedido_anulado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoAnulado(sFinalQuery,this.pagination,id_estado_pedido_anulado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdEstadoPedidoAutorizado(String sFinalQuery,Long id_estado_pedido_autorizado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoAutorizado(sFinalQuery,this.pagination,id_estado_pedido_autorizado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdEstadoPedidoCotizado(String sFinalQuery,Long id_estado_pedido_cotizado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoCotizado(sFinalQuery,this.pagination,id_estado_pedido_cotizado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdEstadoPedidoPendiente(String sFinalQuery,Long id_estado_pedido_pendiente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoPendiente(sFinalQuery,this.pagination,id_estado_pedido_pendiente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdEstadoPedidoRegularizado(String sFinalQuery,Long id_estado_pedido_regularizado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoRegularizado(sFinalQuery,this.pagination,id_estado_pedido_regularizado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdEstadoPedidoSuspendo(String sFinalQuery,Long id_estado_pedido_suspendido)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdEstadoPedidoSuspendo(sFinalQuery,this.pagination,id_estado_pedido_suspendido);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdFormatoAutorizacion(String sFinalQuery,Long id_formato_autorizacion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdFormatoAutorizacion(sFinalQuery,this.pagination,id_formato_autorizacion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdFormatoCotizacion(String sFinalQuery,Long id_formato_cotizacion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdFormatoCotizacion(sFinalQuery,this.pagination,id_formato_cotizacion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdFormatoItem(String sFinalQuery,Long id_formato_item)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdFormatoItem(sFinalQuery,this.pagination,id_formato_item);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdFormatoPedido(String sFinalQuery,Long id_formato_pedido)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdFormatoPedido(sFinalQuery,this.pagination,id_formato_pedido);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdModulo(String sFinalQuery,Long id_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdModulo(sFinalQuery,this.pagination,id_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdPrioridadPedido(String sFinalQuery,Long id_prioridad_pedido)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdPrioridadPedido(sFinalQuery,this.pagination,id_prioridad_pedido);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdTipoDocumento(String sFinalQuery,Long id_tipo_documento)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdTipoDocumento(sFinalQuery,this.pagination,id_tipo_documento);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdTipoMovimiento(String sFinalQuery,Long id_tipo_movimiento)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdTipoMovimiento(sFinalQuery,this.pagination,id_tipo_movimiento);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroComprasFK_IdTipoMovimientoModulo(String sFinalQuery,Long id_tipo_movimiento_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLogic.getParametroComprasFK_IdTipoMovimientoModulo(sFinalQuery,this.pagination,id_tipo_movimiento_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosParametroCompra() {
		this.isPermisoTodoParametroCompra=false;
		this.isPermisoNuevoParametroCompra=false;
		this.isPermisoActualizarParametroCompra=false;
		this.isPermisoActualizarOriginalParametroCompra=false;
		this.isPermisoEliminarParametroCompra=false;
		this.isPermisoGuardarCambiosParametroCompra=false;
		this.isPermisoConsultaParametroCompra=false;
		this.isPermisoBusquedaParametroCompra=false;
		this.isPermisoReporteParametroCompra=false;		
		this.isPermisoOrdenParametroCompra=false;		
		this.isPermisoPaginacionMedioParametroCompra=false;		
		this.isPermisoPaginacionAltoParametroCompra=false;
		this.isPermisoPaginacionTodoParametroCompra=false;
		this.isPermisoCopiarParametroCompra=false;		
		this.isPermisoVerFormParametroCompra=false;		
		this.isPermisoDuplicarParametroCompra=false;		
		this.isPermisoOrdenParametroCompra=false;		
	}
	
	public void setPermisosUsuarioParametroCompra(Boolean isPermiso) {
		this.isPermisoTodoParametroCompra=isPermiso;
		this.isPermisoNuevoParametroCompra=isPermiso;
		this.isPermisoActualizarParametroCompra=isPermiso;
		this.isPermisoActualizarOriginalParametroCompra=isPermiso;
		this.isPermisoEliminarParametroCompra=isPermiso;
		this.isPermisoGuardarCambiosParametroCompra=isPermiso;
		this.isPermisoConsultaParametroCompra=isPermiso;
		this.isPermisoBusquedaParametroCompra=isPermiso;
		this.isPermisoReporteParametroCompra=isPermiso;
		this.isPermisoOrdenParametroCompra=isPermiso;		
		this.isPermisoPaginacionMedioParametroCompra=isPermiso;		
		this.isPermisoPaginacionAltoParametroCompra=isPermiso;		
		this.isPermisoPaginacionTodoParametroCompra=isPermiso;		
		this.isPermisoCopiarParametroCompra=isPermiso;		
		this.isPermisoVerFormParametroCompra=isPermiso;		
		this.isPermisoDuplicarParametroCompra=isPermiso;
		this.isPermisoOrdenParametroCompra=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioParametroCompra(Boolean isPermiso) {
		//this.isPermisoTodoParametroCompra=isPermiso;
		this.isPermisoNuevoParametroCompra=isPermiso;
		this.isPermisoActualizarParametroCompra=isPermiso;
		this.isPermisoActualizarOriginalParametroCompra=isPermiso;
		this.isPermisoEliminarParametroCompra=isPermiso;
		this.isPermisoGuardarCambiosParametroCompra=isPermiso;
		//this.isPermisoConsultaParametroCompra=isPermiso;
		//this.isPermisoBusquedaParametroCompra=isPermiso;
		//this.isPermisoReporteParametroCompra=isPermiso;
		//this.isPermisoOrdenParametroCompra=isPermiso;		
		//this.isPermisoPaginacionMedioParametroCompra=isPermiso;		
		//this.isPermisoPaginacionAltoParametroCompra=isPermiso;		
		//this.isPermisoPaginacionTodoParametroCompra=isPermiso;		
		//this.isPermisoCopiarParametroCompra=isPermiso;		
		//this.isPermisoDuplicarParametroCompra=isPermiso;
		//this.isPermisoOrdenParametroCompra=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioParametroCompraClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(ParametroCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebParametroCompra(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioParametroCompraClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioParametroCompraClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionParametroCompraClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioParametroCompraClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioParametroCompra() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(ParametroCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, ParametroCompraConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoParametroCompra=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarParametroCompra=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalParametroCompra=this.isPermisoActualizarParametroCompra;
			this.isPermisoEliminarParametroCompra=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosParametroCompra=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaParametroCompra=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaParametroCompra=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoParametroCompra=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteParametroCompra=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioParametroCompra=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoParametroCompra=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoParametroCompra=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarParametroCompra=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormParametroCompra=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarParametroCompra=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosParametroCompra.setToolTipText(this.jTableDatosParametroCompra.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioParametroCompra(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioParametroCompra(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(ParametroCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(ParametroCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioParametroCompra() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyParametroCompraListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.tipodocumentosForeignKey=new ArrayList();
				this.tipomovimientosForeignKey=new ArrayList();
				this.bodegasForeignKey=new ArrayList();
				this.bodegareservasForeignKey=new ArrayList();
				this.empleadosForeignKey=new ArrayList();
				this.embarcadorsForeignKey=new ArrayList();
				this.modulosForeignKey=new ArrayList();
				this.tipomovimientomodulosForeignKey=new ArrayList();
				this.formatopedidosForeignKey=new ArrayList();
				this.estadopedidopendientesForeignKey=new ArrayList();
				this.formatocotizacionsForeignKey=new ArrayList();
				this.estadopedidocotizadosForeignKey=new ArrayList();
				this.formatoautorizacionsForeignKey=new ArrayList();
				this.estadopedidoautorizadosForeignKey=new ArrayList();
				this.formatoitemsForeignKey=new ArrayList();
				this.estadopedidoanuladosForeignKey=new ArrayList();
				this.prioridadpedidosForeignKey=new ArrayList();
				this.estadopedidosuspendidosForeignKey=new ArrayList();
				this.estadopedidoregularizadosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyParametroCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(ParametroCompraJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyParametroCompraListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDocumentoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoMovimientoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaReservaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmbarcadorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoMovimientoModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoPedidoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoPedidoPendienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoCotizacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoPedidoCotizadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoAutorizacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoPedidoAutorizadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoItemListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoPedidoAnuladoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPrioridadPedidoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoPedidoSuspendidoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoPedidoRegularizadoListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodocumentosForeignKey==null||this.tipodocumentosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDocumentoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDocumentosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoMovimientoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipomovimientosForeignKey==null||this.tipomovimientosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoMovimientoConstantesFunciones.getArrayColumnasGlobalesTipoMovimiento(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoMovimientoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoMovimientoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoMovimientosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaReservaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegareservasForeignKey==null||this.bodegareservasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegaReservasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmbarcadorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.embarcadorsForeignKey==null||this.embarcadorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmbarcadorConstantesFunciones.getArrayColumnasGlobalesEmbarcador(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmbarcadorConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmbarcadorConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmbarcadorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoMovimientoModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipomovimientomodulosForeignKey==null||this.tipomovimientomodulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoMovimientoModuloConstantesFunciones.getArrayColumnasGlobalesTipoMovimientoModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoMovimientoModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoMovimientoModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoMovimientoModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoPedidoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatopedidosForeignKey==null||this.formatopedidosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatoPedidosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoPendienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadopedidopendientesForeignKey==null||this.estadopedidopendientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoPedidoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoPedidoPendientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoCotizacionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatocotizacionsForeignKey==null||this.formatocotizacionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatoCotizacionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoCotizadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadopedidocotizadosForeignKey==null||this.estadopedidocotizadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoPedidoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoPedidoCotizadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoAutorizacionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatoautorizacionsForeignKey==null||this.formatoautorizacionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatoAutorizacionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoAutorizadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadopedidoautorizadosForeignKey==null||this.estadopedidoautorizadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoPedidoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoPedidoAutorizadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoItemListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatoitemsForeignKey==null||this.formatoitemsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatoItemsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoAnuladoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadopedidoanuladosForeignKey==null||this.estadopedidoanuladosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoPedidoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoPedidoAnuladosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPrioridadPedidoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.prioridadpedidosForeignKey==null||this.prioridadpedidosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PrioridadPedidoConstantesFunciones.getArrayColumnasGlobalesPrioridadPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PrioridadPedidoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PrioridadPedidoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPrioridadPedidosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoSuspendidoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadopedidosuspendidosForeignKey==null||this.estadopedidosuspendidosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoPedidoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoPedidoSuspendidosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoRegularizadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadopedidoregularizadosForeignKey==null||this.estadopedidoregularizadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoPedidoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoPedidoRegularizadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyParametroCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			ParametroCompraParameterReturnGeneral parametrocompraReturnGeneral=new ParametroCompraParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_empresaParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_empresaParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalTipoDocumento="";

				if(((this.tipodocumentosForeignKey==null||this.tipodocumentosForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_tipo_documentoParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_tipo_documentoParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumento()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoDocumento=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDocumento=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDocumento, "");
						finalQueryGlobalTipoDocumento+=TipoDocumentoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDocumentosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDocumento=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidTipoDocumentoActual();
					}
				} else {
					finalQueryGlobalTipoDocumento="NONE";
				}


				String finalQueryGlobalTipoMovimiento="";

				if(((this.tipomovimientosForeignKey==null||this.tipomovimientosForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_tipo_movimientoParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_tipo_movimientoParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimiento()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoMovimientoConstantesFunciones.getArrayColumnasGlobalesTipoMovimiento(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoMovimiento=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoMovimientoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoMovimiento=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoMovimiento, "");
						finalQueryGlobalTipoMovimiento+=TipoMovimientoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoMovimientosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoMovimiento=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidTipoMovimientoActual();
					}
				} else {
					finalQueryGlobalTipoMovimiento="NONE";
				}


				String finalQueryGlobalBodega="";

				if(((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_bodegaParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_bodegaParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodega=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodega=Funciones.GetFinalQueryAppend(finalQueryGlobalBodega, "");
						finalQueryGlobalBodega+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodega=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidBodegaActual();
					}
				} else {
					finalQueryGlobalBodega="NONE";
				}


				String finalQueryGlobalBodegaReserva="";

				if(((this.bodegareservasForeignKey==null||this.bodegareservasForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_bodega_reservaParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_bodega_reservaParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionBodegaReserva()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodegaReserva=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodegaReserva=Funciones.GetFinalQueryAppend(finalQueryGlobalBodegaReserva, "");
						finalQueryGlobalBodegaReserva+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegaReservasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodegaReserva=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidBodegaReservaActual();
					}
				} else {
					finalQueryGlobalBodegaReserva="NONE";
				}


				String finalQueryGlobalEmpleado="";

				if(((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_empleadoParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_empleadoParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleado, "");
						finalQueryGlobalEmpleado+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleado=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidEmpleadoActual();
					}
				} else {
					finalQueryGlobalEmpleado="NONE";
				}


				String finalQueryGlobalEmbarcador="";

				if(((this.embarcadorsForeignKey==null||this.embarcadorsForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_embarcadorParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_embarcadorParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEmbarcador()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmbarcadorConstantesFunciones.getArrayColumnasGlobalesEmbarcador(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmbarcador=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmbarcadorConstantesFunciones.TABLENAME);

						finalQueryGlobalEmbarcador=Funciones.GetFinalQueryAppend(finalQueryGlobalEmbarcador, "");
						finalQueryGlobalEmbarcador+=EmbarcadorConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmbarcadorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmbarcador=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidEmbarcadorActual();
					}
				} else {
					finalQueryGlobalEmbarcador="NONE";
				}


				String finalQueryGlobalModulo="";

				if(((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_moduloParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_moduloParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalModulo, "");
						finalQueryGlobalModulo+=ModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalModulo=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidModuloActual();
					}
				} else {
					finalQueryGlobalModulo="NONE";
				}


				String finalQueryGlobalTipoMovimientoModulo="";

				if(((this.tipomovimientomodulosForeignKey==null||this.tipomovimientomodulosForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_tipo_movimiento_moduloParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_tipo_movimiento_moduloParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimientoModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoMovimientoModuloConstantesFunciones.getArrayColumnasGlobalesTipoMovimientoModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoMovimientoModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoMovimientoModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoMovimientoModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoMovimientoModulo, "");
						finalQueryGlobalTipoMovimientoModulo+=TipoMovimientoModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoMovimientoModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoMovimientoModulo=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidTipoMovimientoModuloActual();
					}
				} else {
					finalQueryGlobalTipoMovimientoModulo="NONE";
				}


				String finalQueryGlobalFormatoPedido="";

				if(((this.formatopedidosForeignKey==null||this.formatopedidosForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_formato_pedidoParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_formato_pedidoParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionFormatoPedido()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormatoPedido=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormatoPedido=Funciones.GetFinalQueryAppend(finalQueryGlobalFormatoPedido, "");
						finalQueryGlobalFormatoPedido+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatoPedidosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormatoPedido=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidFormatoPedidoActual();
					}
				} else {
					finalQueryGlobalFormatoPedido="NONE";
				}


				String finalQueryGlobalEstadoPedidoPendiente="";

				if(((this.estadopedidopendientesForeignKey==null||this.estadopedidopendientesForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_estado_pedido_pendienteParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_estado_pedido_pendienteParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoPendiente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoPedidoPendiente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoPedidoPendiente=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoPedidoPendiente, "");
						finalQueryGlobalEstadoPedidoPendiente+=EstadoPedidoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoPedidoPendientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoPedidoPendiente=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidEstadoPedidoPendienteActual();
					}
				} else {
					finalQueryGlobalEstadoPedidoPendiente="NONE";
				}


				String finalQueryGlobalFormatoCotizacion="";

				if(((this.formatocotizacionsForeignKey==null||this.formatocotizacionsForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_formato_cotizacionParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_formato_cotizacionParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionFormatoCotizacion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormatoCotizacion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormatoCotizacion=Funciones.GetFinalQueryAppend(finalQueryGlobalFormatoCotizacion, "");
						finalQueryGlobalFormatoCotizacion+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatoCotizacionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormatoCotizacion=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidFormatoCotizacionActual();
					}
				} else {
					finalQueryGlobalFormatoCotizacion="NONE";
				}


				String finalQueryGlobalEstadoPedidoCotizado="";

				if(((this.estadopedidocotizadosForeignKey==null||this.estadopedidocotizadosForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_estado_pedido_cotizadoParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_estado_pedido_cotizadoParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoCotizado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoPedidoCotizado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoPedidoCotizado=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoPedidoCotizado, "");
						finalQueryGlobalEstadoPedidoCotizado+=EstadoPedidoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoPedidoCotizadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoPedidoCotizado=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidEstadoPedidoCotizadoActual();
					}
				} else {
					finalQueryGlobalEstadoPedidoCotizado="NONE";
				}


				String finalQueryGlobalFormatoAutorizacion="";

				if(((this.formatoautorizacionsForeignKey==null||this.formatoautorizacionsForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_formato_autorizacionParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_formato_autorizacionParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionFormatoAutorizacion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormatoAutorizacion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormatoAutorizacion=Funciones.GetFinalQueryAppend(finalQueryGlobalFormatoAutorizacion, "");
						finalQueryGlobalFormatoAutorizacion+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatoAutorizacionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormatoAutorizacion=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidFormatoAutorizacionActual();
					}
				} else {
					finalQueryGlobalFormatoAutorizacion="NONE";
				}


				String finalQueryGlobalEstadoPedidoAutorizado="";

				if(((this.estadopedidoautorizadosForeignKey==null||this.estadopedidoautorizadosForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_estado_pedido_autorizadoParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_estado_pedido_autorizadoParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoAutorizado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoPedidoAutorizado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoPedidoAutorizado=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoPedidoAutorizado, "");
						finalQueryGlobalEstadoPedidoAutorizado+=EstadoPedidoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoPedidoAutorizadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoPedidoAutorizado=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidEstadoPedidoAutorizadoActual();
					}
				} else {
					finalQueryGlobalEstadoPedidoAutorizado="NONE";
				}


				String finalQueryGlobalFormatoItem="";

				if(((this.formatoitemsForeignKey==null||this.formatoitemsForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_formato_itemParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_formato_itemParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionFormatoItem()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormatoItem=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormatoItem=Funciones.GetFinalQueryAppend(finalQueryGlobalFormatoItem, "");
						finalQueryGlobalFormatoItem+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatoItemsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormatoItem=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidFormatoItemActual();
					}
				} else {
					finalQueryGlobalFormatoItem="NONE";
				}


				String finalQueryGlobalEstadoPedidoAnulado="";

				if(((this.estadopedidoanuladosForeignKey==null||this.estadopedidoanuladosForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_estado_pedido_anuladoParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_estado_pedido_anuladoParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoAnulado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoPedidoAnulado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoPedidoAnulado=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoPedidoAnulado, "");
						finalQueryGlobalEstadoPedidoAnulado+=EstadoPedidoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoPedidoAnuladosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoPedidoAnulado=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidEstadoPedidoAnuladoActual();
					}
				} else {
					finalQueryGlobalEstadoPedidoAnulado="NONE";
				}


				String finalQueryGlobalPrioridadPedido="";

				if(((this.prioridadpedidosForeignKey==null||this.prioridadpedidosForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_prioridad_pedidoParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_prioridad_pedidoParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionPrioridadPedido()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PrioridadPedidoConstantesFunciones.getArrayColumnasGlobalesPrioridadPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPrioridadPedido=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PrioridadPedidoConstantesFunciones.TABLENAME);

						finalQueryGlobalPrioridadPedido=Funciones.GetFinalQueryAppend(finalQueryGlobalPrioridadPedido, "");
						finalQueryGlobalPrioridadPedido+=PrioridadPedidoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPrioridadPedidosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPrioridadPedido=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidPrioridadPedidoActual();
					}
				} else {
					finalQueryGlobalPrioridadPedido="NONE";
				}


				String finalQueryGlobalEstadoPedidoSuspendido="";

				if(((this.estadopedidosuspendidosForeignKey==null||this.estadopedidosuspendidosForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_estado_pedido_suspendidoParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_estado_pedido_suspendidoParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoSuspendido()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoPedidoSuspendido=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoPedidoSuspendido=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoPedidoSuspendido, "");
						finalQueryGlobalEstadoPedidoSuspendido+=EstadoPedidoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoPedidoSuspendidosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoPedidoSuspendido=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidEstadoPedidoSuspendidoActual();
					}
				} else {
					finalQueryGlobalEstadoPedidoSuspendido="NONE";
				}


				String finalQueryGlobalEstadoPedidoRegularizado="";

				if(((this.estadopedidoregularizadosForeignKey==null||this.estadopedidoregularizadosForeignKey.size()<=0) && this.parametrocompraConstantesFunciones.cargarid_estado_pedido_regularizadoParametroCompra)
					 || (this.esRecargarFks && this.parametrocompraConstantesFunciones.cargarid_estado_pedido_regularizadoParametroCompra)) {

					if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoRegularizado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoPedidoRegularizado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoPedidoRegularizado=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoPedidoRegularizado, "");
						finalQueryGlobalEstadoPedidoRegularizado+=EstadoPedidoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoPedidoRegularizadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoPedidoRegularizado=" WHERE " + ConstantesSql.ID + "="+parametrocompraSessionBean.getlidEstadoPedidoRegularizadoActual();
					}
				} else {
					finalQueryGlobalEstadoPedidoRegularizado="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				parametrocompraReturnGeneral=parametrocompraLogic.cargarCombosLoteForeignKeyParametroCompra(finalQueryGlobalEmpresa,finalQueryGlobalTipoDocumento,finalQueryGlobalTipoMovimiento,finalQueryGlobalBodega,finalQueryGlobalBodegaReserva,finalQueryGlobalEmpleado,finalQueryGlobalEmbarcador,finalQueryGlobalModulo,finalQueryGlobalTipoMovimientoModulo,finalQueryGlobalFormatoPedido,finalQueryGlobalEstadoPedidoPendiente,finalQueryGlobalFormatoCotizacion,finalQueryGlobalEstadoPedidoCotizado,finalQueryGlobalFormatoAutorizacion,finalQueryGlobalEstadoPedidoAutorizado,finalQueryGlobalFormatoItem,finalQueryGlobalEstadoPedidoAnulado,finalQueryGlobalPrioridadPedido,finalQueryGlobalEstadoPedidoSuspendido,finalQueryGlobalEstadoPedidoRegularizado);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=parametrocompraReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalTipoDocumento.equals("NONE")) {
				this.tipodocumentosForeignKey=parametrocompraReturnGeneral.gettipodocumentosForeignKey();
			}

			if(!finalQueryGlobalTipoMovimiento.equals("NONE")) {
				this.tipomovimientosForeignKey=parametrocompraReturnGeneral.gettipomovimientosForeignKey();
			}

			if(!finalQueryGlobalBodega.equals("NONE")) {
				this.bodegasForeignKey=parametrocompraReturnGeneral.getbodegasForeignKey();
			}

			if(!finalQueryGlobalBodegaReserva.equals("NONE")) {
				this.bodegareservasForeignKey=parametrocompraReturnGeneral.getbodegareservasForeignKey();
			}

			if(!finalQueryGlobalEmpleado.equals("NONE")) {
				this.empleadosForeignKey=parametrocompraReturnGeneral.getempleadosForeignKey();
			}

			if(!finalQueryGlobalEmbarcador.equals("NONE")) {
				this.embarcadorsForeignKey=parametrocompraReturnGeneral.getembarcadorsForeignKey();
			}

			if(!finalQueryGlobalModulo.equals("NONE")) {
				this.modulosForeignKey=parametrocompraReturnGeneral.getmodulosForeignKey();
			}

			if(!finalQueryGlobalTipoMovimientoModulo.equals("NONE")) {
				this.tipomovimientomodulosForeignKey=parametrocompraReturnGeneral.gettipomovimientomodulosForeignKey();
			}

			if(!finalQueryGlobalFormatoPedido.equals("NONE")) {
				this.formatopedidosForeignKey=parametrocompraReturnGeneral.getformatopedidosForeignKey();
			}

			if(!finalQueryGlobalEstadoPedidoPendiente.equals("NONE")) {
				this.estadopedidopendientesForeignKey=parametrocompraReturnGeneral.getestadopedidopendientesForeignKey();
			}

			if(!finalQueryGlobalFormatoCotizacion.equals("NONE")) {
				this.formatocotizacionsForeignKey=parametrocompraReturnGeneral.getformatocotizacionsForeignKey();
			}

			if(!finalQueryGlobalEstadoPedidoCotizado.equals("NONE")) {
				this.estadopedidocotizadosForeignKey=parametrocompraReturnGeneral.getestadopedidocotizadosForeignKey();
			}

			if(!finalQueryGlobalFormatoAutorizacion.equals("NONE")) {
				this.formatoautorizacionsForeignKey=parametrocompraReturnGeneral.getformatoautorizacionsForeignKey();
			}

			if(!finalQueryGlobalEstadoPedidoAutorizado.equals("NONE")) {
				this.estadopedidoautorizadosForeignKey=parametrocompraReturnGeneral.getestadopedidoautorizadosForeignKey();
			}

			if(!finalQueryGlobalFormatoItem.equals("NONE")) {
				this.formatoitemsForeignKey=parametrocompraReturnGeneral.getformatoitemsForeignKey();
			}

			if(!finalQueryGlobalEstadoPedidoAnulado.equals("NONE")) {
				this.estadopedidoanuladosForeignKey=parametrocompraReturnGeneral.getestadopedidoanuladosForeignKey();
			}

			if(!finalQueryGlobalPrioridadPedido.equals("NONE")) {
				this.prioridadpedidosForeignKey=parametrocompraReturnGeneral.getprioridadpedidosForeignKey();
			}

			if(!finalQueryGlobalEstadoPedidoSuspendido.equals("NONE")) {
				this.estadopedidosuspendidosForeignKey=parametrocompraReturnGeneral.getestadopedidosuspendidosForeignKey();
			}

			if(!finalQueryGlobalEstadoPedidoRegularizado.equals("NONE")) {
				this.estadopedidoregularizadosForeignKey=parametrocompraReturnGeneral.getestadopedidoregularizadosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyParametroCompra()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeyTipoDocumento();
			this.addItemDefectoCombosForeignKeyTipoMovimiento();
			this.addItemDefectoCombosForeignKeyBodega();
			this.addItemDefectoCombosForeignKeyBodegaReserva();
			this.addItemDefectoCombosForeignKeyEmpleado();
			this.addItemDefectoCombosForeignKeyEmbarcador();
			this.addItemDefectoCombosForeignKeyModulo();
			this.addItemDefectoCombosForeignKeyTipoMovimientoModulo();
			this.addItemDefectoCombosForeignKeyFormatoPedido();
			this.addItemDefectoCombosForeignKeyEstadoPedidoPendiente();
			this.addItemDefectoCombosForeignKeyFormatoCotizacion();
			this.addItemDefectoCombosForeignKeyEstadoPedidoCotizado();
			this.addItemDefectoCombosForeignKeyFormatoAutorizacion();
			this.addItemDefectoCombosForeignKeyEstadoPedidoAutorizado();
			this.addItemDefectoCombosForeignKeyFormatoItem();
			this.addItemDefectoCombosForeignKeyEstadoPedidoAnulado();
			this.addItemDefectoCombosForeignKeyPrioridadPedido();
			this.addItemDefectoCombosForeignKeyEstadoPedidoSuspendido();
			this.addItemDefectoCombosForeignKeyEstadoPedidoRegularizado();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.parametrocompraSessionBean==null) {
				this.parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDocumento()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumento()) {
				TipoDocumento tipodocumento=new TipoDocumento();
				TipoDocumentoConstantesFunciones.setTipoDocumentoDescripcion(tipodocumento,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodocumento.setId(null);

				if(!TipoDocumentoConstantesFunciones.ExisteEnLista(this.tipodocumentosForeignKey,tipodocumento,true)) {

					this.tipodocumentosForeignKey.add(0,tipodocumento);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoMovimiento()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimiento()) {
				TipoMovimiento tipomovimiento=new TipoMovimiento();
				TipoMovimientoConstantesFunciones.setTipoMovimientoDescripcion(tipomovimiento,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipomovimiento.setId(null);

				if(!TipoMovimientoConstantesFunciones.ExisteEnLista(this.tipomovimientosForeignKey,tipomovimiento,true)) {

					this.tipomovimientosForeignKey.add(0,tipomovimiento);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodega()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				Bodega bodega=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodega,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodega.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegasForeignKey,bodega,true)) {

					this.bodegasForeignKey.add(0,bodega);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodegaReserva()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionBodegaReserva()) {
				Bodega bodegareserva=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodegareserva,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodegareserva.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegareservasForeignKey,bodegareserva,true)) {

					this.bodegareservasForeignKey.add(0,bodegareserva);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				Empleado empleado=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleado.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadosForeignKey,empleado,true)) {

					this.empleadosForeignKey.add(0,empleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmbarcador()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEmbarcador()) {
				Embarcador embarcador=new Embarcador();
				EmbarcadorConstantesFunciones.setEmbarcadorDescripcion(embarcador,Constantes.SMENSAJE_ESCOJA_OPCION);
				embarcador.setId(null);

				if(!EmbarcadorConstantesFunciones.ExisteEnLista(this.embarcadorsForeignKey,embarcador,true)) {

					this.embarcadorsForeignKey.add(0,embarcador);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyModulo()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				Modulo modulo=new Modulo();
				ModuloConstantesFunciones.setModuloDescripcion(modulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				modulo.setId(null);

				if(!ModuloConstantesFunciones.ExisteEnLista(this.modulosForeignKey,modulo,true)) {

					this.modulosForeignKey.add(0,modulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoMovimientoModulo()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimientoModulo()) {
				TipoMovimientoModulo tipomovimientomodulo=new TipoMovimientoModulo();
				TipoMovimientoModuloConstantesFunciones.setTipoMovimientoModuloDescripcion(tipomovimientomodulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipomovimientomodulo.setId(null);

				if(!TipoMovimientoModuloConstantesFunciones.ExisteEnLista(this.tipomovimientomodulosForeignKey,tipomovimientomodulo,true)) {

					this.tipomovimientomodulosForeignKey.add(0,tipomovimientomodulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormatoPedido()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionFormatoPedido()) {
				Formato formatopedido=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formatopedido,Constantes.SMENSAJE_ESCOJA_OPCION);
				formatopedido.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatopedidosForeignKey,formatopedido,true)) {

					this.formatopedidosForeignKey.add(0,formatopedido);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoPedidoPendiente()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoPendiente()) {
				EstadoPedido estadopedidopendiente=new EstadoPedido();
				EstadoPedidoConstantesFunciones.setEstadoPedidoDescripcion(estadopedidopendiente,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadopedidopendiente.setId(null);

				if(!EstadoPedidoConstantesFunciones.ExisteEnLista(this.estadopedidopendientesForeignKey,estadopedidopendiente,true)) {

					this.estadopedidopendientesForeignKey.add(0,estadopedidopendiente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormatoCotizacion()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionFormatoCotizacion()) {
				Formato formatocotizacion=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formatocotizacion,Constantes.SMENSAJE_ESCOJA_OPCION);
				formatocotizacion.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatocotizacionsForeignKey,formatocotizacion,true)) {

					this.formatocotizacionsForeignKey.add(0,formatocotizacion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoPedidoCotizado()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoCotizado()) {
				EstadoPedido estadopedidocotizado=new EstadoPedido();
				EstadoPedidoConstantesFunciones.setEstadoPedidoDescripcion(estadopedidocotizado,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadopedidocotizado.setId(null);

				if(!EstadoPedidoConstantesFunciones.ExisteEnLista(this.estadopedidocotizadosForeignKey,estadopedidocotizado,true)) {

					this.estadopedidocotizadosForeignKey.add(0,estadopedidocotizado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormatoAutorizacion()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionFormatoAutorizacion()) {
				Formato formatoautorizacion=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formatoautorizacion,Constantes.SMENSAJE_ESCOJA_OPCION);
				formatoautorizacion.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatoautorizacionsForeignKey,formatoautorizacion,true)) {

					this.formatoautorizacionsForeignKey.add(0,formatoautorizacion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoPedidoAutorizado()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoAutorizado()) {
				EstadoPedido estadopedidoautorizado=new EstadoPedido();
				EstadoPedidoConstantesFunciones.setEstadoPedidoDescripcion(estadopedidoautorizado,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadopedidoautorizado.setId(null);

				if(!EstadoPedidoConstantesFunciones.ExisteEnLista(this.estadopedidoautorizadosForeignKey,estadopedidoautorizado,true)) {

					this.estadopedidoautorizadosForeignKey.add(0,estadopedidoautorizado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormatoItem()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionFormatoItem()) {
				Formato formatoitem=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formatoitem,Constantes.SMENSAJE_ESCOJA_OPCION);
				formatoitem.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatoitemsForeignKey,formatoitem,true)) {

					this.formatoitemsForeignKey.add(0,formatoitem);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoPedidoAnulado()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoAnulado()) {
				EstadoPedido estadopedidoanulado=new EstadoPedido();
				EstadoPedidoConstantesFunciones.setEstadoPedidoDescripcion(estadopedidoanulado,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadopedidoanulado.setId(null);

				if(!EstadoPedidoConstantesFunciones.ExisteEnLista(this.estadopedidoanuladosForeignKey,estadopedidoanulado,true)) {

					this.estadopedidoanuladosForeignKey.add(0,estadopedidoanulado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPrioridadPedido()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionPrioridadPedido()) {
				PrioridadPedido prioridadpedido=new PrioridadPedido();
				PrioridadPedidoConstantesFunciones.setPrioridadPedidoDescripcion(prioridadpedido,Constantes.SMENSAJE_ESCOJA_OPCION);
				prioridadpedido.setId(null);

				if(!PrioridadPedidoConstantesFunciones.ExisteEnLista(this.prioridadpedidosForeignKey,prioridadpedido,true)) {

					this.prioridadpedidosForeignKey.add(0,prioridadpedido);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoPedidoSuspendido()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoSuspendido()) {
				EstadoPedido estadopedidosuspendido=new EstadoPedido();
				EstadoPedidoConstantesFunciones.setEstadoPedidoDescripcion(estadopedidosuspendido,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadopedidosuspendido.setId(null);

				if(!EstadoPedidoConstantesFunciones.ExisteEnLista(this.estadopedidosuspendidosForeignKey,estadopedidosuspendido,true)) {

					this.estadopedidosuspendidosForeignKey.add(0,estadopedidosuspendido);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoPedidoRegularizado()throws Exception {
		try {

			if(!this.parametrocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoRegularizado()) {
				EstadoPedido estadopedidoregularizado=new EstadoPedido();
				EstadoPedidoConstantesFunciones.setEstadoPedidoDescripcion(estadopedidoregularizado,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadopedidoregularizado.setId(null);

				if(!EstadoPedidoConstantesFunciones.ExisteEnLista(this.estadopedidoregularizadosForeignKey,estadopedidoregularizado,true)) {

					this.estadopedidoregularizadosForeignKey.add(0,estadopedidoregularizado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyParametroCompra()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyParametroCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyParametroCompra()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualModuloForeignKey(this.moduloActual.getId(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroCompra();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyParametroCompra(ParametroCompra parametrocompra)throws Exception {	
		try {
			
			this.setActualTipoDocumentoForeignKey(parametrocompra.getid_tipo_documento(),false,"Formulario");
			this.setActualTipoMovimientoForeignKey(parametrocompra.getid_tipo_movimiento(),false,"Formulario");
			this.setActualBodegaForeignKey(parametrocompra.getid_bodega(),false,"Formulario");
			this.setActualBodegaReservaForeignKey(parametrocompra.getid_bodega_reserva(),false,"Formulario");
			this.setActualEmpleadoForeignKey(parametrocompra.getid_empleado(),false,"Formulario");
			this.setActualEmbarcadorForeignKey(parametrocompra.getid_embarcador(),false,"Formulario");
			this.setActualTipoMovimientoModuloForeignKey(parametrocompra.getid_tipo_movimiento_modulo(),false,"Formulario");
			this.setActualFormatoPedidoForeignKey(parametrocompra.getid_formato_pedido(),false,"Formulario");
			this.setActualEstadoPedidoPendienteForeignKey(parametrocompra.getid_estado_pedido_pendiente(),false,"Formulario");
			this.setActualFormatoCotizacionForeignKey(parametrocompra.getid_formato_cotizacion(),false,"Formulario");
			this.setActualEstadoPedidoCotizadoForeignKey(parametrocompra.getid_estado_pedido_cotizado(),false,"Formulario");
			this.setActualFormatoAutorizacionForeignKey(parametrocompra.getid_formato_autorizacion(),false,"Formulario");
			this.setActualEstadoPedidoAutorizadoForeignKey(parametrocompra.getid_estado_pedido_autorizado(),false,"Formulario");
			this.setActualFormatoItemForeignKey(parametrocompra.getid_formato_item(),false,"Formulario");
			this.setActualEstadoPedidoAnuladoForeignKey(parametrocompra.getid_estado_pedido_anulado(),false,"Formulario");
			this.setActualPrioridadPedidoForeignKey(parametrocompra.getid_prioridad_pedido(),false,"Formulario");
			this.setActualEstadoPedidoSuspendidoForeignKey(parametrocompra.getid_estado_pedido_suspendido(),false,"Formulario");
			this.setActualEstadoPedidoRegularizadoForeignKey(parametrocompra.getid_estado_pedido_regularizado(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyParametroCompra(ParametroCompra parametrocompra,String sTipoEvento)throws Exception {	
		try {
			
			

				if(parametrocompra.getEmpleado()!=null && !sTipoEvento.equals("id_empleadoParametroCompra")) { //sTipoEvento Evita Bucle Infinito

					this.empleadosForeignKey=new ArrayList<Empleado>();
					this.empleadosForeignKey.add(parametrocompra.getEmpleado());

					this.addItemDefectoCombosForeignKeyEmpleado();
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyParametroCompra()throws Exception {	
		try {
			
			this.setActualTipoDocumentoForeignKey(this.parametrocompraConstantesFunciones.getid_tipo_documento(),false,"Formulario");
			this.setActualTipoMovimientoForeignKey(this.parametrocompraConstantesFunciones.getid_tipo_movimiento(),false,"Formulario");
			this.setActualBodegaForeignKey(this.parametrocompraConstantesFunciones.getid_bodega(),false,"Formulario");
			this.setActualBodegaReservaForeignKey(this.parametrocompraConstantesFunciones.getid_bodega_reserva(),false,"Formulario");
			this.setActualEmpleadoForeignKey(this.parametrocompraConstantesFunciones.getid_empleado(),false,"Formulario");
			this.setActualEmbarcadorForeignKey(this.parametrocompraConstantesFunciones.getid_embarcador(),false,"Formulario");
			this.setActualTipoMovimientoModuloForeignKey(this.parametrocompraConstantesFunciones.getid_tipo_movimiento_modulo(),false,"Formulario");
			this.setActualFormatoPedidoForeignKey(this.parametrocompraConstantesFunciones.getid_formato_pedido(),false,"Formulario");
			this.setActualEstadoPedidoPendienteForeignKey(this.parametrocompraConstantesFunciones.getid_estado_pedido_pendiente(),false,"Formulario");
			this.setActualFormatoCotizacionForeignKey(this.parametrocompraConstantesFunciones.getid_formato_cotizacion(),false,"Formulario");
			this.setActualEstadoPedidoCotizadoForeignKey(this.parametrocompraConstantesFunciones.getid_estado_pedido_cotizado(),false,"Formulario");
			this.setActualFormatoAutorizacionForeignKey(this.parametrocompraConstantesFunciones.getid_formato_autorizacion(),false,"Formulario");
			this.setActualEstadoPedidoAutorizadoForeignKey(this.parametrocompraConstantesFunciones.getid_estado_pedido_autorizado(),false,"Formulario");
			this.setActualFormatoItemForeignKey(this.parametrocompraConstantesFunciones.getid_formato_item(),false,"Formulario");
			this.setActualEstadoPedidoAnuladoForeignKey(this.parametrocompraConstantesFunciones.getid_estado_pedido_anulado(),false,"Formulario");
			this.setActualPrioridadPedidoForeignKey(this.parametrocompraConstantesFunciones.getid_prioridad_pedido(),false,"Formulario");
			this.setActualEstadoPedidoSuspendidoForeignKey(this.parametrocompraConstantesFunciones.getid_estado_pedido_suspendido(),false,"Formulario");
			this.setActualEstadoPedidoRegularizadoForeignKey(this.parametrocompraConstantesFunciones.getid_estado_pedido_regularizado(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyParametroCompra()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyParametroCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyParametroCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroParametroCompra()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyParametroCompra()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameTipoDocumentosForeignKey("Todos");
			this.cargarCombosFrameTipoMovimientosForeignKey("Todos");
			this.cargarCombosFrameBodegasForeignKey("Todos");
			this.cargarCombosFrameBodegaReservasForeignKey("Todos");
			this.cargarCombosFrameEmpleadosForeignKey("Todos");
			this.cargarCombosFrameEmbarcadorsForeignKey("Todos");
			this.cargarCombosFrameModulosForeignKey("Todos");
			this.cargarCombosFrameTipoMovimientoModulosForeignKey("Todos");
			this.cargarCombosFrameFormatoPedidosForeignKey("Todos");
			this.cargarCombosFrameEstadoPedidoPendientesForeignKey("Todos");
			this.cargarCombosFrameFormatoCotizacionsForeignKey("Todos");
			this.cargarCombosFrameEstadoPedidoCotizadosForeignKey("Todos");
			this.cargarCombosFrameFormatoAutorizacionsForeignKey("Todos");
			this.cargarCombosFrameEstadoPedidoAutorizadosForeignKey("Todos");
			this.cargarCombosFrameFormatoItemsForeignKey("Todos");
			this.cargarCombosFrameEstadoPedidoAnuladosForeignKey("Todos");
			this.cargarCombosFramePrioridadPedidosForeignKey("Todos");
			this.cargarCombosFrameEstadoPedidoSuspendidosForeignKey("Todos");
			this.cargarCombosFrameEstadoPedidoRegularizadosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyParametroCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDocumentosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoMovimientosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegaReservasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmbarcadorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoMovimientoModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatoPedidosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoPedidoPendientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatoCotizacionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoPedidoCotizadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatoAutorizacionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoPedidoAutorizadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatoItemsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoPedidoAnuladosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePrioridadPedidosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoPedidoSuspendidosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoPedidoRegularizadosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyParametroCompra()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empresaParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empresaParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empresaParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_documentoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_documentoParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_documentoParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimientoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimientoParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimientoParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodegaParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodegaParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodegaParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodega_reservaParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodega_reservaParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodega_reservaParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empleadoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empleadoParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empleadoParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_embarcadorParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_embarcadorParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_embarcadorParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_moduloParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_moduloParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_moduloParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimiento_moduloParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimiento_moduloParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimiento_moduloParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_pedidoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_pedidoParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_pedidoParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_pendienteParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_pendienteParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_pendienteParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_cotizacionParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_cotizacionParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_cotizacionParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_cotizadoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_cotizadoParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_cotizadoParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_autorizacionParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_autorizacionParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_autorizacionParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_autorizadoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_autorizadoParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_autorizadoParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_itemParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_itemParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_itemParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_anuladoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_anuladoParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_anuladoParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_prioridad_pedidoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_prioridad_pedidoParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_prioridad_pedidoParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_suspendidoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_suspendidoParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_suspendidoParametroCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_regularizadoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_regularizadoParametroCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_regularizadoParametroCompra.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	








































	
	

	public ParametroCompraBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public ParametroCompraBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public ParametroCompraBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.parametrocompraSessionBean=new ParametroCompraSessionBean(); 
		this.parametrocompraConstantesFunciones=new ParametroCompraConstantesFunciones(); 
		this.parametrocompraBean=new ParametroCompra();//(this.parametrocompraConstantesFunciones); 		
		this.parametrocompraReturnGeneral=new ParametroCompraParameterReturnGeneral(); 
		
		this.parametrocompraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.parametrocompraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public ParametroCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public ParametroCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public ParametroCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessParametroCompra(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.parametrocompraConstantesFunciones=new ParametroCompraConstantesFunciones(); 
			this.parametrocompraBean=new ParametroCompra();//this.parametrocompraConstantesFunciones); 			
			this.parametrocompraReturnGeneral=new ParametroCompraParameterReturnGeneral(); 
		
			ParametroCompraBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Parametro Compra Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			
			
			this.parametrocompra=new ParametroCompra();
			this.parametrocompras = new ArrayList<ParametroCompra>();
			this.parametrocomprasAux = new ArrayList<ParametroCompra>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic=new ParametroCompraLogic();
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}
			
			//this.parametrocompraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.parametrocompraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormParametroCompra);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoParametroCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroCompra);	
					}
					
					if(this.jInternalFrameImportacionParametroCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroCompra);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByParametroCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByParametroCompra);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormParametroCompra!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroCompra);
				this.jInternalFrameDetalleFormParametroCompra.setVisible(false);
				this.jInternalFrameDetalleFormParametroCompra.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoParametroCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroCompra);
					this.jInternalFrameReporteDinamicoParametroCompra.setVisible(false);
					this.jInternalFrameReporteDinamicoParametroCompra.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionParametroCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionParametroCompra);
					this.jInternalFrameImportacionParametroCompra.setVisible(false);
					this.jInternalFrameImportacionParametroCompra.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByParametroCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByParametroCompra);
					this.jInternalFrameOrderByParametroCompra.setVisible(false);
					this.jInternalFrameOrderByParametroCompra.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idParametroCompraActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=ParametroCompraConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.parametrocompraReturnGeneral=new ParametroCompraParameterReturnGeneral();
			
			this.parametrocompraParameterGeneral=new ParametroCompraParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.parametrocompraLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(ParametroCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroCompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrocompraSessionBean.getEsGuardarRelacionado(),this.parametrocompraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroCompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrocompraSessionBean.getEsGuardarRelacionado(),this.parametrocompraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoParametroCompra=false;
			this.isVisibilidadCeldaDuplicarParametroCompra=true;
			this.isVisibilidadCeldaCopiarParametroCompra=true;
			this.isVisibilidadCeldaVerFormParametroCompra=true;
			this.isVisibilidadCeldaOrdenParametroCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroCompra=false;
			this.isVisibilidadCeldaModificarParametroCompra=false;
			this.isVisibilidadCeldaActualizarParametroCompra=false;
			this.isVisibilidadCeldaEliminarParametroCompra=false;
			this.isVisibilidadCeldaCancelarParametroCompra=false;
			this.isVisibilidadCeldaGuardarParametroCompra=false;
			this.isVisibilidadCeldaGuardarCambiosParametroCompra=false;
			
			
			this.isVisibilidadFK_IdBodega=true;
			this.isVisibilidadFK_IdBodegaReserva=true;
			this.isVisibilidadFK_IdEmbarcador=true;
			this.isVisibilidadFK_IdEmpleado=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoPedidoAnulado=true;
			this.isVisibilidadFK_IdEstadoPedidoAutorizado=true;
			this.isVisibilidadFK_IdEstadoPedidoCotizado=true;
			this.isVisibilidadFK_IdEstadoPedidoPendiente=true;
			this.isVisibilidadFK_IdEstadoPedidoRegularizado=true;
			this.isVisibilidadFK_IdEstadoPedidoSuspendo=true;
			this.isVisibilidadFK_IdFormatoAutorizacion=true;
			this.isVisibilidadFK_IdFormatoCotizacion=true;
			this.isVisibilidadFK_IdFormatoItem=true;
			this.isVisibilidadFK_IdFormatoPedido=true;
			this.isVisibilidadFK_IdModulo=true;
			this.isVisibilidadFK_IdPrioridadPedido=true;
			this.isVisibilidadFK_IdTipoDocumento=true;
			this.isVisibilidadFK_IdTipoMovimiento=true;
			this.isVisibilidadFK_IdTipoMovimientoModulo=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesParametroCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosParametroCompra();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioParametroCompra(false);
			
			this.setPermisosUsuarioParametroCompra();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrocompraSessionBean.getEsGuardarRelacionado() 
				|| (this.parametrocompraSessionBean.getEsGuardarRelacionado() && this.parametrocompraSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioParametroCompraClasesRelacionadas();
			}
			
			if(this.parametrocompraSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioParametroCompraClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosParametroCompra();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualParametroCompra();
			}
			
			if(!this.isPermisoBusquedaParametroCompra) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasParametroCompra.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrocompraSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(false);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(false);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioParametroCompra,this.isPermisoPaginacionMedioParametroCompra,this.isPermisoPaginacionTodoParametroCompra);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(ParametroCompraConstantesFunciones.getTiposSeleccionarParametroCompra());
				
				this.tiposColumnasSelect=ParametroCompraConstantesFunciones.getTiposSeleccionarParametroCompra(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioParametroCompra();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(false,false,true);
				this.setAccionesUsuarioParametroCompra(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(false,false,true);							
				this.setAccionesUsuarioParametroCompra(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroCompra() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.tipodocumentoLogic=new TipoDocumentoLogic();
			this.tipomovimientoLogic=new TipoMovimientoLogic();
			this.bodegaLogic=new BodegaLogic();
			this.bodegareservaLogic=new BodegaLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.embarcadorLogic=new EmbarcadorLogic();
			this.moduloLogic=new ModuloLogic();
			this.tipomovimientomoduloLogic=new TipoMovimientoModuloLogic();
			this.formatopedidoLogic=new FormatoLogic();
			this.estadopedidopendienteLogic=new EstadoPedidoLogic();
			this.formatocotizacionLogic=new FormatoLogic();
			this.estadopedidocotizadoLogic=new EstadoPedidoLogic();
			this.formatoautorizacionLogic=new FormatoLogic();
			this.estadopedidoautorizadoLogic=new EstadoPedidoLogic();
			this.formatoitemLogic=new FormatoLogic();
			this.estadopedidoanuladoLogic=new EstadoPedidoLogic();
			this.prioridadpedidoLogic=new PrioridadPedidoLogic();
			this.estadopedidosuspendidoLogic=new EstadoPedidoLogic();
			this.estadopedidoregularizadoLogic=new EstadoPedidoLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				parametrocompraImplementable= (ParametroCompraImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroCompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				parametrocompraImplementableHome= (ParametroCompraImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroCompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.parametrocompras= new ArrayList<ParametroCompra>();
			this.parametrocomprasEliminados= new ArrayList<ParametroCompra>();
						
			this.isEsNuevoParametroCompra=false;
			this.esParaAccionDesdeFormularioParametroCompra=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idEmpleadoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.tipodocumentosForeignKey=new ArrayList<TipoDocumento>() ;
			this.tipomovimientosForeignKey=new ArrayList<TipoMovimiento>() ;
			this.bodegasForeignKey=new ArrayList<Bodega>() ;
			this.bodegareservasForeignKey=new ArrayList<Bodega>() ;
			this.empleadosForeignKey=new ArrayList<Empleado>() ;
			this.embarcadorsForeignKey=new ArrayList<Embarcador>() ;
			this.modulosForeignKey=new ArrayList<Modulo>() ;
			this.tipomovimientomodulosForeignKey=new ArrayList<TipoMovimientoModulo>() ;
			this.formatopedidosForeignKey=new ArrayList<Formato>() ;
			this.estadopedidopendientesForeignKey=new ArrayList<EstadoPedido>() ;
			this.formatocotizacionsForeignKey=new ArrayList<Formato>() ;
			this.estadopedidocotizadosForeignKey=new ArrayList<EstadoPedido>() ;
			this.formatoautorizacionsForeignKey=new ArrayList<Formato>() ;
			this.estadopedidoautorizadosForeignKey=new ArrayList<EstadoPedido>() ;
			this.formatoitemsForeignKey=new ArrayList<Formato>() ;
			this.estadopedidoanuladosForeignKey=new ArrayList<EstadoPedido>() ;
			this.prioridadpedidosForeignKey=new ArrayList<PrioridadPedido>() ;
			this.estadopedidosuspendidosForeignKey=new ArrayList<EstadoPedido>() ;
			this.estadopedidoregularizadosForeignKey=new ArrayList<EstadoPedido>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyParametroCompra(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroParametroCompra();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			ParametroCompraBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=ParametroCompraConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesParametroCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingParametroCompra(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormParametroCompra!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioParametroCompra();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioParametroCompra();
			}
			
			ParametroCompraBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasParametroCompra.getTabCount(); i++) {
					this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessParametroCompra(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga ParametroCompra: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectParametroCompra() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesParametroCompra")) {
				iIndex=this.jInternalFrameDetalleFormParametroCompra.jTabbedPaneRelacionesParametroCompra.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormParametroCompra.jTabbedPaneRelacionesParametroCompra.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessParametroCompra();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyParametroCompra(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyParametroCompra(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyParametroCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyParametroCompraListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyParametroCompra();
		
		this.cargarCombosFrameForeignKeyParametroCompra();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyParametroCompra();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyParametroCompra();
		}
	}
	
	

	public void cargarCombosForeignKeyTipoDocumento(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDocumentoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDocumento();
				this.cargarCombosFrameTipoDocumentosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoDocumento(this.tipodocumentosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoMovimiento(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoMovimientoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoMovimiento();
				this.cargarCombosFrameTipoMovimientosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoMovimiento(this.tipomovimientosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodega(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaBodega(this.bodegasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaReserva(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaReservaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodegaReserva();
				this.cargarCombosFrameBodegaReservasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaBodegaReserva(this.bodegareservasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpleado(this.empleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmbarcador(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmbarcadorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmbarcador();
				this.cargarCombosFrameEmbarcadorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmbarcador(this.embarcadorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoMovimientoModulo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoMovimientoModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoMovimientoModulo();
				this.cargarCombosFrameTipoMovimientoModulosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoMovimientoModulo(this.tipomovimientomodulosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoPedido(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoPedidoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormatoPedido();
				this.cargarCombosFrameFormatoPedidosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormatoPedido(this.formatopedidosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoPendiente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoPedidoPendienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoPedidoPendiente();
				this.cargarCombosFrameEstadoPedidoPendientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoPedidoPendiente(this.estadopedidopendientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoCotizacion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoCotizacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormatoCotizacion();
				this.cargarCombosFrameFormatoCotizacionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormatoCotizacion(this.formatocotizacionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoCotizado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoPedidoCotizadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoPedidoCotizado();
				this.cargarCombosFrameEstadoPedidoCotizadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoPedidoCotizado(this.estadopedidocotizadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoAutorizacion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoAutorizacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormatoAutorizacion();
				this.cargarCombosFrameFormatoAutorizacionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormatoAutorizacion(this.formatoautorizacionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoAutorizado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoPedidoAutorizadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoPedidoAutorizado();
				this.cargarCombosFrameEstadoPedidoAutorizadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoPedidoAutorizado(this.estadopedidoautorizadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoItem(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoItemListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormatoItem();
				this.cargarCombosFrameFormatoItemsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormatoItem(this.formatoitemsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoAnulado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoPedidoAnuladoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoPedidoAnulado();
				this.cargarCombosFrameEstadoPedidoAnuladosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoPedidoAnulado(this.estadopedidoanuladosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPrioridadPedido(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPrioridadPedidoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPrioridadPedido();
				this.cargarCombosFramePrioridadPedidosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaPrioridadPedido(this.prioridadpedidosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoSuspendido(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoPedidoSuspendidoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoPedidoSuspendido();
				this.cargarCombosFrameEstadoPedidoSuspendidosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoPedidoSuspendido(this.estadopedidosuspendidosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoRegularizado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoPedidoRegularizadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoPedidoRegularizado();
				this.cargarCombosFrameEstadoPedidoRegularizadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoPedidoRegularizado(this.estadopedidoregularizadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoParametroCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.parametrocompraSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormParametroCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			
			
			if(jTableDatosParametroCompra.getRowCount()>=1) {
				jTableDatosParametroCompra.removeRowSelectionInterval(0, jTableDatosParametroCompra.getRowCount()-1);						
			}
			
			this.isEsNuevoParametroCompra=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoParametroCompra(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesParametroCompra(true);			
			//this.parametrocompra=new ParametroCompra();
			//this.parametrocompra.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroCompra(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroCompra() ;
			
			if(ParametroCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroCompra(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.parametrocompra);	
			this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);				
			
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			
			if(this.parametrocompraSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar ParametroCompra: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarParametroCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<ParametroCompra> parametrocomprasSeleccionados=new ArrayList<ParametroCompra>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosParametroCompra.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosParametroCompra.getSelectedRows().length;			
			}
			
			parametrocomprasSeleccionados=this.getParametroComprasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoParametroCompra--;			
				//ParametroCompra parametrocompraAux= new ParametroCompra();			
				//parametrocompraAux.setId(this.iIdNuevoParametroCompra);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//ParametroCompra parametrocompraOrigen=new ParametroCompra();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(ParametroCompra parametrocompraOrigen : parametrocomprasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							parametrocompraOrigen =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocompraOrigen =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaParametroCompra();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.parametrocompra.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosParametroCompra(parametrocompraOrigen,this.parametrocompra,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrocompraLogic.getParametroCompras().add(this.parametrocompraAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrocompras.add(this.parametrocompraAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaParametroCompra(false);
				
				this.jTableDatosParametroCompra.setRowSelectionInterval(this.getIndiceNuevoParametroCompra(), this.getIndiceNuevoParametroCompra());
				
				int iLastRow =  this.jTableDatosParametroCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroCompra(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarParametroCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<ParametroCompra> parametrocomprasSeleccionados=new ArrayList<ParametroCompra>();									
		
			ParametroCompra parametrocompraOrigen=new ParametroCompra();
			ParametroCompra parametrocompraDestino=new ParametroCompra();
				
			parametrocomprasSeleccionados=this.getParametroComprasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosParametroCompra.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || parametrocomprasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosParametroCompra.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraOrigen =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrocompraOrigen =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocompraDestino =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrocompraDestino =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				parametrocompraOrigen =parametrocomprasSeleccionados.get(0);
				parametrocompraDestino =parametrocomprasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosParametroCompra(parametrocompraOrigen,parametrocompraDestino,true,false);
				
				parametrocompraDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrocompraDestino,parametrocompraLogic.getParametroCompras());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrocompraDestino,parametrocompras);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaParametroCompra(false);
				
				//this.jTableDatosParametroCompra.setRowSelectionInterval(this.getIndiceNuevoParametroCompra(), this.getIndiceNuevoParametroCompra());
				
				int iLastRow =  this.jTableDatosParametroCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroCompra(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormParametroCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormParametroCompra.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarParametroCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesParametroCompra.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasParametroCompra.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesParametroCompra.setVisible(!isVisible);
			this.jPanelPaginacionParametroCompra.setVisible(!isVisible);
			this.jPanelAccionesParametroCompra.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarParametroCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameParametroCompra();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoParametroCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoParametroCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionParametroCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionParametroCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByParametroCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByParametroCompra();
			
			this.abrirFrameOrderByParametroCompra();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByParametroCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByParametroCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleParametroCompra(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroCompra);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormParametroCompra.isMaximum()) {
					this.jInternalFrameDetalleFormParametroCompra.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormParametroCompra.setSize(this.jInternalFrameDetalleFormParametroCompra.iWidthFormulario,this.jInternalFrameDetalleFormParametroCompra.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormParametroCompra.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormParametroCompra.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormParametroCompra.isMaximum()) {
						this.jInternalFrameDetalleFormParametroCompra.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormParametroCompra.jContentPaneDetalleParametroCompra.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormParametroCompra.jTabbedPaneRelacionesParametroCompra.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormParametroCompra.jContentPaneDetalleParametroCompra.getWidth(),ParametroCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroCompra.jTabbedPaneRelacionesParametroCompra.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormParametroCompra.jContentPaneDetalleParametroCompra.getWidth(),ParametroCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroCompra.jTabbedPaneRelacionesParametroCompra.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormParametroCompra.jContentPaneDetalleParametroCompra.getWidth(),ParametroCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormParametroCompra.setVisible(true);
	        this.jInternalFrameDetalleFormParametroCompra.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByParametroCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByParametroCompra==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByParametroCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroCompra,false,this);
				} else {
					this.jInternalFrameOrderByParametroCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroCompra,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByParametroCompra);
				this.jInternalFrameOrderByParametroCompra.setVisible(false);
				this.jInternalFrameOrderByParametroCompra.setSelected(false);
				
				this.jInternalFrameOrderByParametroCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroCompra"));
				
				this.inicializarActualizarBindingTablaOrderByParametroCompra();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionParametroCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionParametroCompra==null) {
				
				this.jInternalFrameImportacionParametroCompra=new ImportacionJInternalFrame(ParametroCompraConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroCompra);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionParametroCompra);
				this.jInternalFrameImportacionParametroCompra.setVisible(false);
				this.jInternalFrameImportacionParametroCompra.setSelected(false);


				this.jInternalFrameImportacionParametroCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroCompra"));
				this.jInternalFrameImportacionParametroCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroCompra"));
				this.jInternalFrameImportacionParametroCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroCompra"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoParametroCompra() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoParametroCompra==null) {
				this.jInternalFrameReporteDinamicoParametroCompra=new ReporteDinamicoJInternalFrame(ParametroCompraConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroCompra);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroCompra);
				this.jInternalFrameReporteDinamicoParametroCompra.setVisible(false);
				this.jInternalFrameReporteDinamicoParametroCompra.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoParametroCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroCompra"));
				this.jInternalFrameReporteDinamicoParametroCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroCompra"));
				this.jInternalFrameReporteDinamicoParametroCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroCompra"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroCompra();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleParametroCompra() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroCompra);
			
	       	this.jInternalFrameDetalleFormParametroCompra.setVisible(false);
	        this.jInternalFrameDetalleFormParametroCompra.setSelected(false);
			
			//this.jInternalFrameDetalleFormParametroCompra.dispose();
			//this.jInternalFrameDetalleFormParametroCompra=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoParametroCompra() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoParametroCompra.setVisible(true);
	        this.jInternalFrameReporteDinamicoParametroCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionParametroCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionParametroCompra.setVisible(true);
	        this.jInternalFrameImportacionParametroCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByParametroCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByParametroCompra.setVisible(true);
	        this.jInternalFrameOrderByParametroCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByParametroCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByParametroCompra.setVisible(false);
	        this.jInternalFrameOrderByParametroCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoParametroCompra() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoParametroCompra.setVisible(false);
	        this.jInternalFrameReporteDinamicoParametroCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionParametroCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionParametroCompra.setVisible(false);
	        this.jInternalFrameImportacionParametroCompra.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarParametroCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarParametroCompra(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarParametroCompra(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesParametroCompra(true);
			//this.isEsNuevoParametroCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesParametroCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroCompra(false) ;
			
			if(parametrocompraSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(ParametroCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroCompra(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaParametroCompraActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarParametroCompra(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesParametroCompra(true);
			//this.isEsNuevoParametroCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.parametrocompra.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesParametroCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesParametroCompra(false) ;
			
			if(ParametroCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroCompra(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Empleado")) {
				if(!this.parametrocompraConstantesFunciones.cargarid_empleadoParametroCompra) {
					this.cargarCombosEmpleadosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroCompra(false,false);
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_empleado (id);

				this.recargarComboTablaEmpleado(this.empleadosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
		
	
	public void recargarComboTablaTipoDocumento(List<TipoDocumento> tipodocumentosForeignKey)throws Exception{
		TableColumn tableColumnTipoDocumento=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDTIPODOCUMENTO));
		TableCellEditor tableCellEditorTipoDocumento =tableColumnTipoDocumento.getCellEditor();

		TipoDocumentoTableCell tipodocumentoTableCellFk=(TipoDocumentoTableCell)tableCellEditorTipoDocumento;

		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.settipodocumentosForeignKey(tipodocumentosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodocumentoTableCellFk.setRowActual(intSelectedRow);
			//tipodocumentoTableCellFk.settipodocumentosForeignKeyActual(tipodocumentosForeignKey);
		//}


		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.RecargarTipoDocumentosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoMovimiento(List<TipoMovimiento> tipomovimientosForeignKey)throws Exception{
		TableColumn tableColumnTipoMovimiento=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTO));
		TableCellEditor tableCellEditorTipoMovimiento =tableColumnTipoMovimiento.getCellEditor();

		TipoMovimientoTableCell tipomovimientoTableCellFk=(TipoMovimientoTableCell)tableCellEditorTipoMovimiento;

		if(tipomovimientoTableCellFk!=null) {
			tipomovimientoTableCellFk.settipomovimientosForeignKey(tipomovimientosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipomovimientoTableCellFk.setRowActual(intSelectedRow);
			//tipomovimientoTableCellFk.settipomovimientosForeignKeyActual(tipomovimientosForeignKey);
		//}


		if(tipomovimientoTableCellFk!=null) {
			tipomovimientoTableCellFk.RecargarTipoMovimientosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBodega(List<Bodega> bodegasForeignKey)throws Exception{
		TableColumn tableColumnBodega=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDBODEGA));
		TableCellEditor tableCellEditorBodega =tableColumnBodega.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodega;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegasForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBodegaReserva(List<Bodega> bodegareservasForeignKey)throws Exception{
		TableColumn tableColumnBodegaReserva=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDBODEGARESERVA));
		TableCellEditor tableCellEditorBodegaReserva =tableColumnBodegaReserva.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodegaReserva;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegareservasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegareservasForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpleado(List<Empleado> empleadosForeignKey)throws Exception{
		TableColumn tableColumnEmpleado=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDEMPLEADO));
		TableCellEditor tableCellEditorEmpleado =tableColumnEmpleado.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleado;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadosForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmbarcador(List<Embarcador> embarcadorsForeignKey)throws Exception{
		TableColumn tableColumnEmbarcador=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDEMBARCADOR));
		TableCellEditor tableCellEditorEmbarcador =tableColumnEmbarcador.getCellEditor();

		EmbarcadorTableCell embarcadorTableCellFk=(EmbarcadorTableCell)tableCellEditorEmbarcador;

		if(embarcadorTableCellFk!=null) {
			embarcadorTableCellFk.setembarcadorsForeignKey(embarcadorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//embarcadorTableCellFk.setRowActual(intSelectedRow);
			//embarcadorTableCellFk.setembarcadorsForeignKeyActual(embarcadorsForeignKey);
		//}


		if(embarcadorTableCellFk!=null) {
			embarcadorTableCellFk.RecargarEmbarcadorsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
		
	
	public void recargarComboTablaTipoMovimientoModulo(List<TipoMovimientoModulo> tipomovimientomodulosForeignKey)throws Exception{
		TableColumn tableColumnTipoMovimientoModulo=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO));
		TableCellEditor tableCellEditorTipoMovimientoModulo =tableColumnTipoMovimientoModulo.getCellEditor();

		TipoMovimientoModuloTableCell tipomovimientomoduloTableCellFk=(TipoMovimientoModuloTableCell)tableCellEditorTipoMovimientoModulo;

		if(tipomovimientomoduloTableCellFk!=null) {
			tipomovimientomoduloTableCellFk.settipomovimientomodulosForeignKey(tipomovimientomodulosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipomovimientomoduloTableCellFk.setRowActual(intSelectedRow);
			//tipomovimientomoduloTableCellFk.settipomovimientomodulosForeignKeyActual(tipomovimientomodulosForeignKey);
		//}


		if(tipomovimientomoduloTableCellFk!=null) {
			tipomovimientomoduloTableCellFk.RecargarTipoMovimientoModulosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormatoPedido(List<Formato> formatopedidosForeignKey)throws Exception{
		TableColumn tableColumnFormatoPedido=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDFORMATOPEDIDO));
		TableCellEditor tableCellEditorFormatoPedido =tableColumnFormatoPedido.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormatoPedido;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatopedidosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatopedidosForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoPedidoPendiente(List<EstadoPedido> estadopedidopendientesForeignKey)throws Exception{
		TableColumn tableColumnEstadoPedidoPendiente=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOPENDIENTE));
		TableCellEditor tableCellEditorEstadoPedidoPendiente =tableColumnEstadoPedidoPendiente.getCellEditor();

		EstadoPedidoTableCell estadopedidoTableCellFk=(EstadoPedidoTableCell)tableCellEditorEstadoPedidoPendiente;

		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.setestadopedidosForeignKey(estadopedidopendientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadopedidoTableCellFk.setRowActual(intSelectedRow);
			//estadopedidoTableCellFk.setestadopedidosForeignKeyActual(estadopedidopendientesForeignKey);
		//}


		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.RecargarEstadoPedidosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormatoCotizacion(List<Formato> formatocotizacionsForeignKey)throws Exception{
		TableColumn tableColumnFormatoCotizacion=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDFORMATOCOTIZACION));
		TableCellEditor tableCellEditorFormatoCotizacion =tableColumnFormatoCotizacion.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormatoCotizacion;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatocotizacionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatocotizacionsForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoPedidoCotizado(List<EstadoPedido> estadopedidocotizadosForeignKey)throws Exception{
		TableColumn tableColumnEstadoPedidoCotizado=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOTIZADO));
		TableCellEditor tableCellEditorEstadoPedidoCotizado =tableColumnEstadoPedidoCotizado.getCellEditor();

		EstadoPedidoTableCell estadopedidoTableCellFk=(EstadoPedidoTableCell)tableCellEditorEstadoPedidoCotizado;

		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.setestadopedidosForeignKey(estadopedidocotizadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadopedidoTableCellFk.setRowActual(intSelectedRow);
			//estadopedidoTableCellFk.setestadopedidosForeignKeyActual(estadopedidocotizadosForeignKey);
		//}


		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.RecargarEstadoPedidosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormatoAutorizacion(List<Formato> formatoautorizacionsForeignKey)throws Exception{
		TableColumn tableColumnFormatoAutorizacion=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDFORMATOAUTORIZACION));
		TableCellEditor tableCellEditorFormatoAutorizacion =tableColumnFormatoAutorizacion.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormatoAutorizacion;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatoautorizacionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatoautorizacionsForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoPedidoAutorizado(List<EstadoPedido> estadopedidoautorizadosForeignKey)throws Exception{
		TableColumn tableColumnEstadoPedidoAutorizado=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOAUTORIZADO));
		TableCellEditor tableCellEditorEstadoPedidoAutorizado =tableColumnEstadoPedidoAutorizado.getCellEditor();

		EstadoPedidoTableCell estadopedidoTableCellFk=(EstadoPedidoTableCell)tableCellEditorEstadoPedidoAutorizado;

		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.setestadopedidosForeignKey(estadopedidoautorizadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadopedidoTableCellFk.setRowActual(intSelectedRow);
			//estadopedidoTableCellFk.setestadopedidosForeignKeyActual(estadopedidoautorizadosForeignKey);
		//}


		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.RecargarEstadoPedidosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormatoItem(List<Formato> formatoitemsForeignKey)throws Exception{
		TableColumn tableColumnFormatoItem=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDFORMATOITEM));
		TableCellEditor tableCellEditorFormatoItem =tableColumnFormatoItem.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormatoItem;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatoitemsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatoitemsForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoPedidoAnulado(List<EstadoPedido> estadopedidoanuladosForeignKey)throws Exception{
		TableColumn tableColumnEstadoPedidoAnulado=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOANULADO));
		TableCellEditor tableCellEditorEstadoPedidoAnulado =tableColumnEstadoPedidoAnulado.getCellEditor();

		EstadoPedidoTableCell estadopedidoTableCellFk=(EstadoPedidoTableCell)tableCellEditorEstadoPedidoAnulado;

		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.setestadopedidosForeignKey(estadopedidoanuladosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadopedidoTableCellFk.setRowActual(intSelectedRow);
			//estadopedidoTableCellFk.setestadopedidosForeignKeyActual(estadopedidoanuladosForeignKey);
		//}


		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.RecargarEstadoPedidosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaPrioridadPedido(List<PrioridadPedido> prioridadpedidosForeignKey)throws Exception{
		TableColumn tableColumnPrioridadPedido=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDPRIORIDADPEDIDO));
		TableCellEditor tableCellEditorPrioridadPedido =tableColumnPrioridadPedido.getCellEditor();

		PrioridadPedidoTableCell prioridadpedidoTableCellFk=(PrioridadPedidoTableCell)tableCellEditorPrioridadPedido;

		if(prioridadpedidoTableCellFk!=null) {
			prioridadpedidoTableCellFk.setprioridadpedidosForeignKey(prioridadpedidosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//prioridadpedidoTableCellFk.setRowActual(intSelectedRow);
			//prioridadpedidoTableCellFk.setprioridadpedidosForeignKeyActual(prioridadpedidosForeignKey);
		//}


		if(prioridadpedidoTableCellFk!=null) {
			prioridadpedidoTableCellFk.RecargarPrioridadPedidosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoPedidoSuspendido(List<EstadoPedido> estadopedidosuspendidosForeignKey)throws Exception{
		TableColumn tableColumnEstadoPedidoSuspendido=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOSUSPENDIDO));
		TableCellEditor tableCellEditorEstadoPedidoSuspendido =tableColumnEstadoPedidoSuspendido.getCellEditor();

		EstadoPedidoTableCell estadopedidoTableCellFk=(EstadoPedidoTableCell)tableCellEditorEstadoPedidoSuspendido;

		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.setestadopedidosForeignKey(estadopedidosuspendidosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadopedidoTableCellFk.setRowActual(intSelectedRow);
			//estadopedidoTableCellFk.setestadopedidosForeignKeyActual(estadopedidosuspendidosForeignKey);
		//}


		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.RecargarEstadoPedidosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoPedidoRegularizado(List<EstadoPedido> estadopedidoregularizadosForeignKey)throws Exception{
		TableColumn tableColumnEstadoPedidoRegularizado=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOREGULARIZADO));
		TableCellEditor tableCellEditorEstadoPedidoRegularizado =tableColumnEstadoPedidoRegularizado.getCellEditor();

		EstadoPedidoTableCell estadopedidoTableCellFk=(EstadoPedidoTableCell)tableCellEditorEstadoPedidoRegularizado;

		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.setestadopedidosForeignKey(estadopedidoregularizadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadopedidoTableCellFk.setRowActual(intSelectedRow);
			//estadopedidoTableCellFk.setestadopedidosForeignKeyActual(estadopedidoregularizadosForeignKey);
		//}


		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.RecargarEstadoPedidosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_empleado (Long id) throws Exception {
		this.setActualEmpleadoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarParametroCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesParametroCompra(false);
			
			//if(!this.isEsNuevoParametroCompra) {								
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(ParametroCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				
			}
			
			if(this.permiteMantenimiento(this.parametrocompra)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoParametroCompra=true;
					this.inicializarActualizarBindingTablaParametroCompra(false);
					this.isEsNuevoParametroCompra=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoParametroCompra=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoParametroCompra=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroCompra(false);
				
				this.habilitarDeshabilitarControlesParametroCompra(false);
			
												
				
				if(ParametroCompraJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleParametroCompra();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoParametroCompraActionPerformed(evt,parametrocompraSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualParametroCompra(this.parametrocompra,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,parametrocompraSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.parametrocompra.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(ParametroCompra.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCompra.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarParametroCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				this.parametrocompra.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				this.parametrocompra.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.parametrocompra)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((ParametroCompraModel) this.jTableDatosParametroCompra.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoParametroCompra=true;
				this.inicializarActualizarBindingTablaParametroCompra(false);
				this.isEsNuevoParametroCompra=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroCompra(false);
				
				this.habilitarDeshabilitarControlesParametroCompra(false);
				
				
				
				if(ParametroCompraJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleParametroCompra();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarParametroCompraActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosParametroCompra.getRowCount()>=1) {
				jTableDatosParametroCompra.removeRowSelectionInterval(0, jTableDatosParametroCompra.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesParametroCompra(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaParametroCompra(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroCompra(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroCompra(false) ;
			
			this.isEsNuevoParametroCompra=false;
			
			if(ParametroCompraJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleParametroCompra();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosParametroCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingParametroCompra(false);
				
				//SI ES MANUAL
				if(ParametroCompraJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualParametroCompra();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosParametroCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoParametroCompra--;			
			//ParametroCompra parametrocompraAux= new ParametroCompra();			
			//parametrocompraAux.setId(this.iIdNuevoParametroCompra);
			
			if(this.jInternalFrameDetalleFormParametroCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaParametroCompra();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
			
			this.parametrocompra.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.parametrocompraLogic.getParametroCompras().add(this.parametrocompraAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.parametrocompras.add(this.parametrocompraAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaParametroCompra(false);
			
			this.jTableDatosParametroCompra.setRowSelectionInterval(this.getIndiceNuevoParametroCompra(), this.getIndiceNuevoParametroCompra());
			
			int iLastRow =  this.jTableDatosParametroCompra.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosParametroCompra.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosParametroCompra.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaParametroCompra(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionParametroCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametroCompra(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroCompra(false);
			
			//SI ES MANUAL
			if(ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroCompra();
			}
			
			//this.abrirFrameTreeParametroCompra();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionParametroCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Parametro CompraES ?", "MANTENIMIENTO DE Parametro Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionParametroCompra.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralParametroCompra();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.parametrocompraReturnGeneral=parametrocompraLogic.procesarImportacionParametroComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.parametrocompraParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarParametroCompraReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionParametroCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionParametroCompra.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionParametroCompra.setFileImportacion(this.jInternalFrameImportacionParametroCompra.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionParametroCompra.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionParametroCompra.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionParametroCompra.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionParametroCompra.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoParametroCompraActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<ParametroCompra> parametrocomprasSeleccionados=new ArrayList<ParametroCompra>();		

		parametrocomprasSeleccionados=this.getParametroComprasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("ParametroCompraBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"ParametroCompraBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteParametroCompras("Todos",parametrocomprasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Compra",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoParametroCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroCompraConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cuencialPedido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cuencialPedido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cuencialPedido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cuencialPedido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cuencialCotizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cuencialCotizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cuencialCotizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cuencialCotizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cuencialProduccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cuencialProduccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cuencialProduccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cuencialProduccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDTIPODOCUMENTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDocumento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDocumento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDocumento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDocumento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoMovimiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoMovimiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoMovimiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoMovimiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDBODEGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Bodega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Bodega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Bodega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Bodega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDBODEGARESERVA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_BodegaReserva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_BodegaReserva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_BodegaReserva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_BodegaReserva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDEMBARCADOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Embarcador_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Embarcador_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Embarcador_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Embarcador_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nCentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nCentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nCentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nCentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_xtoMail_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_xtoMail_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_xtoMail_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_xtoMail_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Modulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Modulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Modulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Modulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoMovimientoModulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoMovimientoModulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoMovimientoModulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoMovimientoModulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOPEDIDO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_FormatoPedido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_FormatoPedido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_FormatoPedido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_FormatoPedido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOPENDIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoPedidoPendiente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoPedidoPendiente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoPedidoPendiente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoPedidoPendiente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOCOTIZACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_FormatoCotizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_FormatoCotizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_FormatoCotizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_FormatoCotizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOTIZADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoPedidoCotizado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoPedidoCotizado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoPedidoCotizado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoPedidoCotizado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOAUTORIZACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_FormatoAutorizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_FormatoAutorizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_FormatoAutorizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_FormatoAutorizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOAUTORIZADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoPedidoAutorizado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoPedidoAutorizado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoPedidoAutorizado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoPedidoAutorizado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOITEM:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_FormatoItem_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_FormatoItem_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_FormatoItem_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_FormatoItem_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOANULADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoPedidoAnulado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoPedidoAnulado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoPedidoAnulado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoPedidoAnulado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDPRIORIDADPEDIDO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_PrioridadPedido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_PrioridadPedido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_PrioridadPedido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_PrioridadPedido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOSUSPENDIDO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoPedidoSuspendido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoPedidoSuspendido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoPedidoSuspendido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoPedidoSuspendido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOREGULARIZADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoPedidoRegularizado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoPedidoRegularizado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoPedidoRegularizado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoPedidoRegularizado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoParametroCompra.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoParametroCompra.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoParametroCompra.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case ParametroCompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO:
					sNombreCampoCategoria="secuencial_pedido";
					break;

				case ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION:
					sNombreCampoCategoria="secuencial_cotizacion";
					break;

				case ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION:
					sNombreCampoCategoria="secuencial_produccion";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDTIPODOCUMENTO:
					sNombreCampoCategoria="id_tipo_documento";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					sNombreCampoCategoria="id_tipo_movimiento";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoria="id_bodega";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDBODEGARESERVA:
					sNombreCampoCategoria="id_bodega_reserva";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoria="id_empleado";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDEMBARCADOR:
					sNombreCampoCategoria="id_embarcador";
					break;

				case ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO:
					sNombreCampoCategoria="con_centro_costo";
					break;

				case ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL:
					sNombreCampoCategoria="texto_mail";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoria="id_modulo";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO:
					sNombreCampoCategoria="id_tipo_movimiento_modulo";
					break;

				case ParametroCompraConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOPEDIDO:
					sNombreCampoCategoria="id_formato_pedido";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOPENDIENTE:
					sNombreCampoCategoria="id_estado_pedido_pendiente";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOCOTIZACION:
					sNombreCampoCategoria="id_formato_cotizacion";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOTIZADO:
					sNombreCampoCategoria="id_estado_pedido_cotizado";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOAUTORIZACION:
					sNombreCampoCategoria="id_formato_autorizacion";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOAUTORIZADO:
					sNombreCampoCategoria="id_estado_pedido_autorizado";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOITEM:
					sNombreCampoCategoria="id_formato_item";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOANULADO:
					sNombreCampoCategoria="id_estado_pedido_anulado";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDPRIORIDADPEDIDO:
					sNombreCampoCategoria="id_prioridad_pedido";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOSUSPENDIDO:
					sNombreCampoCategoria="id_estado_pedido_suspendido";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOREGULARIZADO:
					sNombreCampoCategoria="id_estado_pedido_regularizado";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoParametroCompra.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case ParametroCompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO:
					sNombreCampoCategoriaValor="secuencial_pedido";
					break;

				case ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION:
					sNombreCampoCategoriaValor="secuencial_cotizacion";
					break;

				case ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION:
					sNombreCampoCategoriaValor="secuencial_produccion";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDTIPODOCUMENTO:
					sNombreCampoCategoriaValor="id_tipo_documento";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					sNombreCampoCategoriaValor="id_tipo_movimiento";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoriaValor="id_bodega";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDBODEGARESERVA:
					sNombreCampoCategoriaValor="id_bodega_reserva";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoriaValor="id_empleado";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDEMBARCADOR:
					sNombreCampoCategoriaValor="id_embarcador";
					break;

				case ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO:
					sNombreCampoCategoriaValor="con_centro_costo";
					break;

				case ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL:
					sNombreCampoCategoriaValor="texto_mail";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoriaValor="id_modulo";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO:
					sNombreCampoCategoriaValor="id_tipo_movimiento_modulo";
					break;

				case ParametroCompraConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOPEDIDO:
					sNombreCampoCategoriaValor="id_formato_pedido";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOPENDIENTE:
					sNombreCampoCategoriaValor="id_estado_pedido_pendiente";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOCOTIZACION:
					sNombreCampoCategoriaValor="id_formato_cotizacion";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOTIZADO:
					sNombreCampoCategoriaValor="id_estado_pedido_cotizado";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOAUTORIZACION:
					sNombreCampoCategoriaValor="id_formato_autorizacion";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOAUTORIZADO:
					sNombreCampoCategoriaValor="id_estado_pedido_autorizado";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOITEM:
					sNombreCampoCategoriaValor="id_formato_item";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOANULADO:
					sNombreCampoCategoriaValor="id_estado_pedido_anulado";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDPRIORIDADPEDIDO:
					sNombreCampoCategoriaValor="id_prioridad_pedido";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOSUSPENDIDO:
					sNombreCampoCategoriaValor="id_estado_pedido_suspendido";
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOREGULARIZADO:
					sNombreCampoCategoriaValor="id_estado_pedido_regularizado";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoParametroCompra.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroCompra.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroCompraConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Secuencial Pedido",sNombreCampoCategoria,sNombreCampoCategoriaValor,"secuencial_pedido");
					break;

				case ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Secuencial Cotizacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"secuencial_cotizacion");
					break;

				case ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Secuencial Produccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"secuencial_produccion");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDTIPODOCUMENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Documento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_documento");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Movimiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_movimiento");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDBODEGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDBODEGARESERVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega Reserva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega_reserva");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDEMBARCADOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Embarcador",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_embarcador");
					break;

				case ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_centro_costo");
					break;

				case ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Texto Mail",sNombreCampoCategoria,sNombreCampoCategoriaValor,"texto_mail");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_modulo");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Movimiento Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_movimiento_modulo");
					break;

				case ParametroCompraConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOPEDIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato Pedido",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato_pedido");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOPENDIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Pedido Pendiente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_pedido_pendiente");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOCOTIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato Cotizacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato_cotizacion");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOTIZADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Pedido Cotizado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_pedido_cotizado");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOAUTORIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato Autorizacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato_autorizacion");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOAUTORIZADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Pedido Autorizado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_pedido_autorizado");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOITEM:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato Item",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato_item");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOANULADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Pedido Anulado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_pedido_anulado");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDPRIORIDADPEDIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Prioridad Pedido",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_prioridad_pedido");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOSUSPENDIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Pedido Suspendo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_pedido_suspendido");
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOREGULARIZADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Pedido Regularizado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_pedido_regularizado");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoParametroCompraActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<ParametroCompra> parametrocomprasSeleccionados=new ArrayList<ParametroCompra>();		
		
		parametrocomprasSeleccionados=this.getParametroComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrocompra";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("ParametroCompras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoParametroCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case ParametroCompraConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getsecuencial_pedido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getsecuencial_cotizacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getsecuencial_produccion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDTIPODOCUMENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDTIPODOCUMENTO);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.gettipodocumento_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTO);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.gettipomovimiento_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDBODEGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDBODEGA);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getbodega_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDBODEGARESERVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDBODEGARESERVA);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getbodegareserva_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDEMPLEADO);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDEMBARCADOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDEMBARCADOR);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getembarcador_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getcon_centro_costo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.gettexto_mail());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDMODULO);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.gettipomovimientomodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOPEDIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDFORMATOPEDIDO);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getformatopedido_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOPENDIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOPENDIENTE);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getestadopedidopendiente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOCOTIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDFORMATOCOTIZACION);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getformatocotizacion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOTIZADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOTIZADO);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getestadopedidocotizado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOAUTORIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDFORMATOAUTORIZACION);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getformatoautorizacion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOAUTORIZADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOAUTORIZADO);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getestadopedidoautorizado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDFORMATOITEM:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDFORMATOITEM);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getformatoitem_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOANULADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOANULADO);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getestadopedidoanulado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDPRIORIDADPEDIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDPRIORIDADPEDIDO);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getprioridadpedido_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOSUSPENDIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOSUSPENDIDO);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getestadopedidosuspendido_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOREGULARIZADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOREGULARIZADO);
					iRow++;

					for(ParametroCompra parametrocompra:parametrocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocompra.getestadopedidoregularizado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelParametroCompra(row);				
			//	iRow++;
			//}				
			
			//for(ParametroCompra parametrocompraAux:parametrocomprasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelParametroCompra(parametrocompraAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroCompra(false);
			
			//SI ES MANUAL
			if(ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroCompra();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresParametroCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroCompra(false);
			
			//SI ES MANUAL
			if(ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroCompra();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesParametroCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroCompra(false);
			
			//SI ES MANUAL
			if(ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroCompra();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaParametroCompra() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosParametroCompra.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosParametroCompra.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosParametroCompra.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosParametroCompra.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosParametroCompra.setMinimumSize(dimensionMinimum);
		this.jTableDatosParametroCompra.setMaximumSize(dimensionMaximum);
		this.jTableDatosParametroCompra.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingParametroCompra(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingParametroCompra(esInicializar,true);
	}
	
	public void inicializarActualizarBindingParametroCompra(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaParametroCompra(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesParametroCompra(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasParametroCompra(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroCompra(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesParametroCompra(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !ParametroCompraJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualParametroCompra() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaParametroCompra();
		
		this.inicializarActualizarBindingBotonesManualParametroCompra(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualParametroCompra();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroCompra() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualParametroCompra(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualParametroCompra(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosParametroCompra.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosParametroCompra.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteParametroCompra.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormParametroCompra!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormParametroCompra.jCheckBoxPostAccionNuevoParametroCompra.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormParametroCompra.jCheckBoxPostAccionSinCerrarParametroCompra.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormParametroCompra.jCheckBoxPostAccionSinMensajeParametroCompra.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosParametroCompra.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosParametroCompra.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteParametroCompra.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormParametroCompra!=null) {
				this.jInternalFrameDetalleFormParametroCompra.jCheckBoxPostAccionNuevoParametroCompra.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormParametroCompra.jCheckBoxPostAccionSinCerrarParametroCompra.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormParametroCompra.jCheckBoxPostAccionSinMensajeParametroCompra.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionParametroCompra.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionParametroCompra.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormParametroCompra!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormParametroCompra.jComboBoxTiposAccionesFormularioParametroCompra.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesParametroCompra.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoParametroCompra!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesParametroCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesParametroCompra.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarParametroCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesParametroCompra.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoParametroCompra!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesParametroCompra.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralParametroCompra.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesParametroCompra(Boolean esInicializar) throws Exception {
		try	{	
			if(ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualParametroCompra(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesParametroCompra() throws Exception {
		try	{
			if(ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroCompra();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroCompra() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxTiposAccionesFormularioParametroCompra.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormParametroCompra.jComboBoxTiposAccionesFormularioParametroCompra.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroCompra() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesParametroCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesParametroCompra.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesParametroCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesParametroCompra.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesParametroCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesParametroCompra.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionParametroCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionParametroCompra.addItem(reporte);
			}
			
			
			if(!this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionParametroCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionParametroCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesParametroCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesParametroCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesParametroCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesParametroCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormParametroCompra.jComboBoxTiposAccionesFormularioParametroCompra.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormParametroCompra.jComboBoxTiposAccionesFormularioParametroCompra.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarParametroCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarParametroCompra.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarParametroCompra.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroCompra();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroCompra() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroCompra!=null) {
				this.jInternalFrameReporteDinamicoParametroCompra.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroCompra.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroCompra!=null) {
				this.jInternalFrameReporteDinamicoParametroCompra.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroCompra.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoParametroCompra!=null) {
				
				if(this.jInternalFrameReporteDinamicoParametroCompra.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroCompra.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroCompra.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoParametroCompra.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroCompra.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroCompra.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualParametroCompra()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_bodegaFK_IdBodegaParametroCompra.getSelectedItem()!=null){this.id_bodegaFK_IdBodega=((Bodega)this.jComboBoxid_bodegaFK_IdBodegaParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_bodega_reservaFK_IdBodegaReservaParametroCompra.getSelectedItem()!=null){this.id_bodega_reservaFK_IdBodegaReserva=((Bodega)this.jComboBoxid_bodega_reservaFK_IdBodegaReservaParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_embarcadorFK_IdEmbarcadorParametroCompra.getSelectedItem()!=null){this.id_embarcadorFK_IdEmbarcador=((Embarcador)this.jComboBoxid_embarcadorFK_IdEmbarcadorParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_empleadoFK_IdEmpleadoParametroCompra.getSelectedItem()!=null){this.id_empleadoFK_IdEmpleado=((Empleado)this.jComboBoxid_empleadoFK_IdEmpleadoParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_pedido_anuladoFK_IdEstadoPedidoAnuladoParametroCompra.getSelectedItem()!=null){this.id_estado_pedido_anuladoFK_IdEstadoPedidoAnulado=((EstadoPedido)this.jComboBoxid_estado_pedido_anuladoFK_IdEstadoPedidoAnuladoParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizadoParametroCompra.getSelectedItem()!=null){this.id_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado=((EstadoPedido)this.jComboBoxid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizadoParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizadoParametroCompra.getSelectedItem()!=null){this.id_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado=((EstadoPedido)this.jComboBoxid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizadoParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_pedido_pendienteFK_IdEstadoPedidoPendienteParametroCompra.getSelectedItem()!=null){this.id_estado_pedido_pendienteFK_IdEstadoPedidoPendiente=((EstadoPedido)this.jComboBoxid_estado_pedido_pendienteFK_IdEstadoPedidoPendienteParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizadoParametroCompra.getSelectedItem()!=null){this.id_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado=((EstadoPedido)this.jComboBoxid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizadoParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendoParametroCompra.getSelectedItem()!=null){this.id_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo=((EstadoPedido)this.jComboBoxid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendoParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_formato_autorizacionFK_IdFormatoAutorizacionParametroCompra.getSelectedItem()!=null){this.id_formato_autorizacionFK_IdFormatoAutorizacion=((Formato)this.jComboBoxid_formato_autorizacionFK_IdFormatoAutorizacionParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_formato_cotizacionFK_IdFormatoCotizacionParametroCompra.getSelectedItem()!=null){this.id_formato_cotizacionFK_IdFormatoCotizacion=((Formato)this.jComboBoxid_formato_cotizacionFK_IdFormatoCotizacionParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_formato_itemFK_IdFormatoItemParametroCompra.getSelectedItem()!=null){this.id_formato_itemFK_IdFormatoItem=((Formato)this.jComboBoxid_formato_itemFK_IdFormatoItemParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_formato_pedidoFK_IdFormatoPedidoParametroCompra.getSelectedItem()!=null){this.id_formato_pedidoFK_IdFormatoPedido=((Formato)this.jComboBoxid_formato_pedidoFK_IdFormatoPedidoParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_prioridad_pedidoFK_IdPrioridadPedidoParametroCompra.getSelectedItem()!=null){this.id_prioridad_pedidoFK_IdPrioridadPedido=((PrioridadPedido)this.jComboBoxid_prioridad_pedidoFK_IdPrioridadPedidoParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_documentoFK_IdTipoDocumentoParametroCompra.getSelectedItem()!=null){this.id_tipo_documentoFK_IdTipoDocumento=((TipoDocumento)this.jComboBoxid_tipo_documentoFK_IdTipoDocumentoParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoParametroCompra.getSelectedItem()!=null){this.id_tipo_movimientoFK_IdTipoMovimiento=((TipoMovimiento)this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoParametroCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloParametroCompra.getSelectedItem()!=null){this.id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo=((TipoMovimientoModulo)this.jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloParametroCompra.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasParametroCompra(Boolean esInicializar) throws Exception {				
		if(ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualParametroCompra();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaParametroCompra() throws Exception {
		this.inicializarActualizarBindingTablaParametroCompra(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByParametroCompra() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByParametroCompra.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByParametroCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroCompra.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByParametroCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroCompra.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosParametroCompraOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompraOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByParametroCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroCompra.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByParametroCompra.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaParametroCompra(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=parametrocompraLogic.getParametroCompras().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=parametrocompras.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(ParametroCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosParametroCompra.setModel(new ParametroCompraModel(this.parametrocompraLogic.getParametroCompras(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosParametroCompra.setModel(new ParametroCompraModel(this.parametrocompras,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByParametroCompra!=null && this.jInternalFrameOrderByParametroCompra.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByParametroCompra();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+ParametroCompraConstantesFunciones.SCLASSWEBTITULO,parametrocompraConstantesFunciones.resaltarSeleccionarParametroCompra,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+ParametroCompraConstantesFunciones.SCLASSWEBTITULO,parametrocompraConstantesFunciones.resaltarSeleccionarParametroCompra,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_ID));

		if(this.parametrocompraConstantesFunciones.mostraridParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrocompraConstantesFunciones.resaltaridParametroCompra,this.parametrocompraConstantesFunciones.activaridParametroCompra,this,true,"idParametroCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrocompraConstantesFunciones.resaltaridParametroCompra,this.parametrocompraConstantesFunciones.activaridParametroCompra,this,true,"idParametroCompra","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDEMPRESA));

		if(this.parametrocompraConstantesFunciones.mostrarid_empresaParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.parametrocompraConstantesFunciones.resaltarid_empresaParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_empresaParametroCompra));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.parametrocompraConstantesFunciones.resaltarid_empresaParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_empresaParametroCompra,false,"id_empresaParametroCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO));

		if(this.parametrocompraConstantesFunciones.mostrarsecuencial_pedidoParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.parametrocompraConstantesFunciones.resaltarsecuencial_pedidoParametroCompra,this.parametrocompraConstantesFunciones.activarsecuencial_pedidoParametroCompra,this,true,"secuencial_pedidoParametroCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrocompraConstantesFunciones.resaltarsecuencial_pedidoParametroCompra,this.parametrocompraConstantesFunciones.activarsecuencial_pedidoParametroCompra,this,true,"secuencial_pedidoParametroCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION));

		if(this.parametrocompraConstantesFunciones.mostrarsecuencial_cotizacionParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.parametrocompraConstantesFunciones.resaltarsecuencial_cotizacionParametroCompra,this.parametrocompraConstantesFunciones.activarsecuencial_cotizacionParametroCompra,this,true,"secuencial_cotizacionParametroCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrocompraConstantesFunciones.resaltarsecuencial_cotizacionParametroCompra,this.parametrocompraConstantesFunciones.activarsecuencial_cotizacionParametroCompra,this,true,"secuencial_cotizacionParametroCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION));

		if(this.parametrocompraConstantesFunciones.mostrarsecuencial_produccionParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.parametrocompraConstantesFunciones.resaltarsecuencial_produccionParametroCompra,this.parametrocompraConstantesFunciones.activarsecuencial_produccionParametroCompra,this,true,"secuencial_produccionParametroCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrocompraConstantesFunciones.resaltarsecuencial_produccionParametroCompra,this.parametrocompraConstantesFunciones.activarsecuencial_produccionParametroCompra,this,true,"secuencial_produccionParametroCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDTIPODOCUMENTO));

		if(this.parametrocompraConstantesFunciones.mostrarid_tipo_documentoParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDTIPODOCUMENTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDocumentoTableCell(this.tipodocumentosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_tipo_documentoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_tipo_documentoParametroCompra));
			tableColumn.setCellEditor(new TipoDocumentoTableCell(this.tipodocumentosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_tipo_documentoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_tipo_documentoParametroCompra,true,"id_tipo_documentoParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTO));

		if(this.parametrocompraConstantesFunciones.mostrarid_tipo_movimientoParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoMovimientoTableCell(this.tipomovimientosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_tipo_movimientoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_tipo_movimientoParametroCompra));
			tableColumn.setCellEditor(new TipoMovimientoTableCell(this.tipomovimientosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_tipo_movimientoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_tipo_movimientoParametroCompra,true,"id_tipo_movimientoParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDBODEGA));

		if(this.parametrocompraConstantesFunciones.mostrarid_bodegaParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDBODEGA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegasForeignKey,this.parametrocompraConstantesFunciones.resaltarid_bodegaParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_bodegaParametroCompra));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegasForeignKey,this.parametrocompraConstantesFunciones.resaltarid_bodegaParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_bodegaParametroCompra,true,"id_bodegaParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDBODEGARESERVA));

		if(this.parametrocompraConstantesFunciones.mostrarid_bodega_reservaParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDBODEGARESERVA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegareservasForeignKey,this.parametrocompraConstantesFunciones.resaltarid_bodega_reservaParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_bodega_reservaParametroCompra));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegareservasForeignKey,this.parametrocompraConstantesFunciones.resaltarid_bodega_reservaParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_bodega_reservaParametroCompra,true,"id_bodega_reservaParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDEMPLEADO));

		if(this.parametrocompraConstantesFunciones.mostrarid_empleadoParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_empleadoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_empleadoParametroCompra));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_empleadoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_empleadoParametroCompra,true,"id_empleadoParametroCompra","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDEMBARCADOR));

		if(this.parametrocompraConstantesFunciones.mostrarid_embarcadorParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDEMBARCADOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmbarcadorTableCell(this.embarcadorsForeignKey,this.parametrocompraConstantesFunciones.resaltarid_embarcadorParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_embarcadorParametroCompra));
			tableColumn.setCellEditor(new EmbarcadorTableCell(this.embarcadorsForeignKey,this.parametrocompraConstantesFunciones.resaltarid_embarcadorParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_embarcadorParametroCompra,true,"id_embarcadorParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO));

		if(this.parametrocompraConstantesFunciones.mostrarcon_centro_costoParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrocompraConstantesFunciones.resaltarcon_centro_costoParametroCompra,this.parametrocompraConstantesFunciones.activarcon_centro_costoParametroCompra));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrocompraConstantesFunciones.resaltarcon_centro_costoParametroCompra,this.parametrocompraConstantesFunciones.activarcon_centro_costoParametroCompra,this,true,"con_centro_costoParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL));

		if(this.parametrocompraConstantesFunciones.mostrartexto_mailParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.parametrocompraConstantesFunciones.resaltartexto_mailParametroCompra,this.parametrocompraConstantesFunciones.activartexto_mailParametroCompra,this,true,"texto_mailParametroCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrocompraConstantesFunciones.resaltartexto_mailParametroCompra,this.parametrocompraConstantesFunciones.activartexto_mailParametroCompra,this,true,"texto_mailParametroCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDMODULO));

		if(this.parametrocompraConstantesFunciones.mostrarid_moduloParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDMODULO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ModuloTableCell(this.modulosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_moduloParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_moduloParametroCompra));
			tableColumn.setCellEditor(new ModuloTableCell(this.modulosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_moduloParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_moduloParametroCompra,false,"id_moduloParametroCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_DESCRIPCION));

		if(this.parametrocompraConstantesFunciones.mostrardescripcionParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.parametrocompraConstantesFunciones.resaltardescripcionParametroCompra,this.parametrocompraConstantesFunciones.activardescripcionParametroCompra,this,true,"descripcionParametroCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrocompraConstantesFunciones.resaltardescripcionParametroCompra,this.parametrocompraConstantesFunciones.activardescripcionParametroCompra,this,true,"descripcionParametroCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDFORMATOPEDIDO));

		if(this.parametrocompraConstantesFunciones.mostrarid_formato_pedidoParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDFORMATOPEDIDO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatopedidosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_formato_pedidoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_formato_pedidoParametroCompra));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatopedidosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_formato_pedidoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_formato_pedidoParametroCompra,true,"id_formato_pedidoParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOPENDIENTE));

		if(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_pendienteParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOPENDIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoPedidoTableCell(this.estadopedidopendientesForeignKey,this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_pendienteParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_estado_pedido_pendienteParametroCompra));
			tableColumn.setCellEditor(new EstadoPedidoTableCell(this.estadopedidopendientesForeignKey,this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_pendienteParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_estado_pedido_pendienteParametroCompra,true,"id_estado_pedido_pendienteParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDFORMATOCOTIZACION));

		if(this.parametrocompraConstantesFunciones.mostrarid_formato_cotizacionParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDFORMATOCOTIZACION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatocotizacionsForeignKey,this.parametrocompraConstantesFunciones.resaltarid_formato_cotizacionParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_formato_cotizacionParametroCompra));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatocotizacionsForeignKey,this.parametrocompraConstantesFunciones.resaltarid_formato_cotizacionParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_formato_cotizacionParametroCompra,true,"id_formato_cotizacionParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOTIZADO));

		if(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_cotizadoParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOTIZADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoPedidoTableCell(this.estadopedidocotizadosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_cotizadoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_estado_pedido_cotizadoParametroCompra));
			tableColumn.setCellEditor(new EstadoPedidoTableCell(this.estadopedidocotizadosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_cotizadoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_estado_pedido_cotizadoParametroCompra,true,"id_estado_pedido_cotizadoParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDFORMATOAUTORIZACION));

		if(this.parametrocompraConstantesFunciones.mostrarid_formato_autorizacionParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDFORMATOAUTORIZACION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatoautorizacionsForeignKey,this.parametrocompraConstantesFunciones.resaltarid_formato_autorizacionParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_formato_autorizacionParametroCompra));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatoautorizacionsForeignKey,this.parametrocompraConstantesFunciones.resaltarid_formato_autorizacionParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_formato_autorizacionParametroCompra,true,"id_formato_autorizacionParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOAUTORIZADO));

		if(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_autorizadoParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOAUTORIZADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoPedidoTableCell(this.estadopedidoautorizadosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_autorizadoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_estado_pedido_autorizadoParametroCompra));
			tableColumn.setCellEditor(new EstadoPedidoTableCell(this.estadopedidoautorizadosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_autorizadoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_estado_pedido_autorizadoParametroCompra,true,"id_estado_pedido_autorizadoParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDFORMATOITEM));

		if(this.parametrocompraConstantesFunciones.mostrarid_formato_itemParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDFORMATOITEM,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatoitemsForeignKey,this.parametrocompraConstantesFunciones.resaltarid_formato_itemParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_formato_itemParametroCompra));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatoitemsForeignKey,this.parametrocompraConstantesFunciones.resaltarid_formato_itemParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_formato_itemParametroCompra,true,"id_formato_itemParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOANULADO));

		if(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_anuladoParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOANULADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoPedidoTableCell(this.estadopedidoanuladosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_anuladoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_estado_pedido_anuladoParametroCompra));
			tableColumn.setCellEditor(new EstadoPedidoTableCell(this.estadopedidoanuladosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_anuladoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_estado_pedido_anuladoParametroCompra,true,"id_estado_pedido_anuladoParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDPRIORIDADPEDIDO));

		if(this.parametrocompraConstantesFunciones.mostrarid_prioridad_pedidoParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDPRIORIDADPEDIDO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PrioridadPedidoTableCell(this.prioridadpedidosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_prioridad_pedidoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_prioridad_pedidoParametroCompra));
			tableColumn.setCellEditor(new PrioridadPedidoTableCell(this.prioridadpedidosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_prioridad_pedidoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_prioridad_pedidoParametroCompra,true,"id_prioridad_pedidoParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOSUSPENDIDO));

		if(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_suspendidoParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOSUSPENDIDO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoPedidoTableCell(this.estadopedidosuspendidosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_suspendidoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_estado_pedido_suspendidoParametroCompra));
			tableColumn.setCellEditor(new EstadoPedidoTableCell(this.estadopedidosuspendidosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_suspendidoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_estado_pedido_suspendidoParametroCompra,true,"id_estado_pedido_suspendidoParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOREGULARIZADO));

		if(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_regularizadoParametroCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOREGULARIZADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoPedidoTableCell(this.estadopedidoregularizadosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_regularizadoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_estado_pedido_regularizadoParametroCompra));
			tableColumn.setCellEditor(new EstadoPedidoTableCell(this.estadopedidoregularizadosForeignKey,this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_regularizadoParametroCompra,this,this.parametrocompraConstantesFunciones.activarid_estado_pedido_regularizadoParametroCompra,true,"id_estado_pedido_regularizadoParametroCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.parametrocompraSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrocompraSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrocompraSessionBean.getEsGuardarRelacionado()));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroCompra.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrocompraSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrocompraSessionBean.getEsGuardarRelacionado()));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroCompra.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarParametroCompra && this.isPermisoGuardarCambiosParametroCompra) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.parametrocompraSessionBean.getEsGuardarRelacionado()));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.parametrocompraSessionBean.getEsGuardarRelacionado()));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosParametroCompra.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosParametroCompra.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroCompra && this.isPermisoGuardarCambiosParametroCompra) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroCompra && this.isPermisoGuardarCambiosParametroCompra) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosParametroCompra.moveColumn(this.jTableDatosParametroCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosParametroCompra.moveColumn(this.jTableDatosParametroCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosParametroCompra.moveColumn(this.jTableDatosParametroCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosParametroCompra.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosParametroCompra.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosParametroCompra,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosParametroCompra.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosParametroCompra.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!ParametroCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosParametroCompra.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosParametroCompra.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosParametroCompra.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=parametrocompraLogic.getParametroCompras().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=parametrocompras.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosParametroCompra.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosParametroCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosParametroCompra();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoParametroCompra=false;
					
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			
				if(this.parametrocompraSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormParametroCompra==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.parametrocompra.getsType().equals("DUPLICADO")
				   || this.parametrocompra.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoParametroCompra=true;
				
				} else {
					this.isEsNuevoParametroCompra=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
					if(this.parametrocompra.getId()>=0 && !this.parametrocompra.getIsNew()) {						
						this.isEsNuevoParametroCompra=false;
						
					} else {
						this.isEsNuevoParametroCompra=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoParametroCompra(esRelaciones);						
				
				this.seleccionarParametroCompra(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.parametrocompra.getId()<0) {
					this.isEsNuevoParametroCompra=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarParametroCompra(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarParametroCompra(evt,rowIndex);
				}	
				
				if(this.parametrocompraSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion ParametroCompra: " + this.dDif); 
					}
				}								
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarParametroCompra(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.parametrocompra)) {
					if(this.parametrocompra.getId()>0) {
						this.parametrocompra.setIsDeleted(true);
						
						this.parametrocomprasEliminados.add(this.parametrocompra);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrocompraLogic.getParametroCompras().remove(this.parametrocompra);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrocompras.remove(this.parametrocompra);				
					}
					
					
					((ParametroCompraModel) this.jTableDatosParametroCompra.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroCompra(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarParametroCompra(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoParametroCompra) {
			
			if(this.jInternalFrameDetalleFormParametroCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroCompra.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(ParametroCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioParametroCompra(this.parametrocompra);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.parametrocompraConstantesFunciones.cargarid_empresaParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_empresaParametroCompra) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.parametrocompra.getid_empresa());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(parametrocompra.getEmpresa()!=null) {
							this.empresasForeignKey.add(parametrocompra.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.parametrocompra.getid_empresa(),false,"Formulario");

					//TipoDocumento
					if(!this.parametrocompraConstantesFunciones.cargarid_tipo_documentoParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_tipo_documentoParametroCompra) {
						//this.cargarCombosTipoDocumentosForeignKeyLista(" where id="+this.parametrocompra.getid_tipo_documento());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.tipodocumentosForeignKey=new ArrayList<TipoDocumento>();

						if(parametrocompra.getTipoDocumento()!=null) {
							this.tipodocumentosForeignKey.add(parametrocompra.getTipoDocumento());
						}

						this.addItemDefectoCombosForeignKeyTipoDocumento();
						this.cargarCombosFrameTipoDocumentosForeignKey("Todos");
					}
					this.setActualTipoDocumentoForeignKey(this.parametrocompra.getid_tipo_documento(),false,"Formulario");

					//TipoMovimiento
					if(!this.parametrocompraConstantesFunciones.cargarid_tipo_movimientoParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_tipo_movimientoParametroCompra) {
						//this.cargarCombosTipoMovimientosForeignKeyLista(" where id="+this.parametrocompra.getid_tipo_movimiento());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.tipomovimientosForeignKey=new ArrayList<TipoMovimiento>();

						if(parametrocompra.getTipoMovimiento()!=null) {
							this.tipomovimientosForeignKey.add(parametrocompra.getTipoMovimiento());
						}

						this.addItemDefectoCombosForeignKeyTipoMovimiento();
						this.cargarCombosFrameTipoMovimientosForeignKey("Todos");
					}
					this.setActualTipoMovimientoForeignKey(this.parametrocompra.getid_tipo_movimiento(),false,"Formulario");

					//Bodega
					if(!this.parametrocompraConstantesFunciones.cargarid_bodegaParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_bodegaParametroCompra) {
						//this.cargarCombosBodegasForeignKeyLista(" where id="+this.parametrocompra.getid_bodega());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.bodegasForeignKey=new ArrayList<Bodega>();

						if(parametrocompra.getBodega()!=null) {
							this.bodegasForeignKey.add(parametrocompra.getBodega());
						}

						this.addItemDefectoCombosForeignKeyBodega();
						this.cargarCombosFrameBodegasForeignKey("Todos");
					}
					this.setActualBodegaForeignKey(this.parametrocompra.getid_bodega(),false,"Formulario");

					//BodegaReserva
					if(!this.parametrocompraConstantesFunciones.cargarid_bodega_reservaParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_bodega_reservaParametroCompra) {
						//this.cargarCombosBodegaReservasForeignKeyLista(" where id="+this.parametrocompra.getid_bodega_reserva());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.bodegareservasForeignKey=new ArrayList<Bodega>();

						if(parametrocompra.getBodegaReserva()!=null) {
							this.bodegareservasForeignKey.add(parametrocompra.getBodegaReserva());
						}

						this.addItemDefectoCombosForeignKeyBodegaReserva();
						this.cargarCombosFrameBodegaReservasForeignKey("Todos");
					}
					this.setActualBodegaReservaForeignKey(this.parametrocompra.getid_bodega_reserva(),false,"Formulario");

					//Empleado
					if(!this.parametrocompraConstantesFunciones.cargarid_empleadoParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_empleadoParametroCompra) {
						//this.cargarCombosEmpleadosForeignKeyLista(" where id="+this.parametrocompra.getid_empleado());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.empleadosForeignKey=new ArrayList<Empleado>();

						if(parametrocompra.getEmpleado()!=null) {
							this.empleadosForeignKey.add(parametrocompra.getEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEmpleado();
						this.cargarCombosFrameEmpleadosForeignKey("Todos");
					}
					this.setActualEmpleadoForeignKey(this.parametrocompra.getid_empleado(),false,"Formulario");

					//Embarcador
					if(!this.parametrocompraConstantesFunciones.cargarid_embarcadorParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_embarcadorParametroCompra) {
						//this.cargarCombosEmbarcadorsForeignKeyLista(" where id="+this.parametrocompra.getid_embarcador());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.embarcadorsForeignKey=new ArrayList<Embarcador>();

						if(parametrocompra.getEmbarcador()!=null) {
							this.embarcadorsForeignKey.add(parametrocompra.getEmbarcador());
						}

						this.addItemDefectoCombosForeignKeyEmbarcador();
						this.cargarCombosFrameEmbarcadorsForeignKey("Todos");
					}
					this.setActualEmbarcadorForeignKey(this.parametrocompra.getid_embarcador(),false,"Formulario");

					//Modulo
					if(!this.parametrocompraConstantesFunciones.cargarid_moduloParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_moduloParametroCompra) {
						//this.cargarCombosModulosForeignKeyLista(" where id="+this.parametrocompra.getid_modulo());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.modulosForeignKey=new ArrayList<Modulo>();

						if(parametrocompra.getModulo()!=null) {
							this.modulosForeignKey.add(parametrocompra.getModulo());
						}

						this.addItemDefectoCombosForeignKeyModulo();
						this.cargarCombosFrameModulosForeignKey("Todos");
					}
					this.setActualModuloForeignKey(this.parametrocompra.getid_modulo(),false,"Formulario");

					//TipoMovimientoModulo
					if(!this.parametrocompraConstantesFunciones.cargarid_tipo_movimiento_moduloParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_tipo_movimiento_moduloParametroCompra) {
						//this.cargarCombosTipoMovimientoModulosForeignKeyLista(" where id="+this.parametrocompra.getid_tipo_movimiento_modulo());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.tipomovimientomodulosForeignKey=new ArrayList<TipoMovimientoModulo>();

						if(parametrocompra.getTipoMovimientoModulo()!=null) {
							this.tipomovimientomodulosForeignKey.add(parametrocompra.getTipoMovimientoModulo());
						}

						this.addItemDefectoCombosForeignKeyTipoMovimientoModulo();
						this.cargarCombosFrameTipoMovimientoModulosForeignKey("Todos");
					}
					this.setActualTipoMovimientoModuloForeignKey(this.parametrocompra.getid_tipo_movimiento_modulo(),false,"Formulario");

					//FormatoPedido
					if(!this.parametrocompraConstantesFunciones.cargarid_formato_pedidoParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_formato_pedidoParametroCompra) {
						//this.cargarCombosFormatoPedidosForeignKeyLista(" where id="+this.parametrocompra.getid_formato_pedido());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.formatopedidosForeignKey=new ArrayList<Formato>();

						if(parametrocompra.getFormatoPedido()!=null) {
							this.formatopedidosForeignKey.add(parametrocompra.getFormatoPedido());
						}

						this.addItemDefectoCombosForeignKeyFormatoPedido();
						this.cargarCombosFrameFormatoPedidosForeignKey("Todos");
					}
					this.setActualFormatoPedidoForeignKey(this.parametrocompra.getid_formato_pedido(),false,"Formulario");

					//EstadoPedidoPendiente
					if(!this.parametrocompraConstantesFunciones.cargarid_estado_pedido_pendienteParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_estado_pedido_pendienteParametroCompra) {
						//this.cargarCombosEstadoPedidoPendientesForeignKeyLista(" where id="+this.parametrocompra.getid_estado_pedido_pendiente());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.estadopedidopendientesForeignKey=new ArrayList<EstadoPedido>();

						if(parametrocompra.getEstadoPedidoPendiente()!=null) {
							this.estadopedidopendientesForeignKey.add(parametrocompra.getEstadoPedidoPendiente());
						}

						this.addItemDefectoCombosForeignKeyEstadoPedidoPendiente();
						this.cargarCombosFrameEstadoPedidoPendientesForeignKey("Todos");
					}
					this.setActualEstadoPedidoPendienteForeignKey(this.parametrocompra.getid_estado_pedido_pendiente(),false,"Formulario");

					//FormatoCotizacion
					if(!this.parametrocompraConstantesFunciones.cargarid_formato_cotizacionParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_formato_cotizacionParametroCompra) {
						//this.cargarCombosFormatoCotizacionsForeignKeyLista(" where id="+this.parametrocompra.getid_formato_cotizacion());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.formatocotizacionsForeignKey=new ArrayList<Formato>();

						if(parametrocompra.getFormatoCotizacion()!=null) {
							this.formatocotizacionsForeignKey.add(parametrocompra.getFormatoCotizacion());
						}

						this.addItemDefectoCombosForeignKeyFormatoCotizacion();
						this.cargarCombosFrameFormatoCotizacionsForeignKey("Todos");
					}
					this.setActualFormatoCotizacionForeignKey(this.parametrocompra.getid_formato_cotizacion(),false,"Formulario");

					//EstadoPedidoCotizado
					if(!this.parametrocompraConstantesFunciones.cargarid_estado_pedido_cotizadoParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_estado_pedido_cotizadoParametroCompra) {
						//this.cargarCombosEstadoPedidoCotizadosForeignKeyLista(" where id="+this.parametrocompra.getid_estado_pedido_cotizado());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.estadopedidocotizadosForeignKey=new ArrayList<EstadoPedido>();

						if(parametrocompra.getEstadoPedidoCotizado()!=null) {
							this.estadopedidocotizadosForeignKey.add(parametrocompra.getEstadoPedidoCotizado());
						}

						this.addItemDefectoCombosForeignKeyEstadoPedidoCotizado();
						this.cargarCombosFrameEstadoPedidoCotizadosForeignKey("Todos");
					}
					this.setActualEstadoPedidoCotizadoForeignKey(this.parametrocompra.getid_estado_pedido_cotizado(),false,"Formulario");

					//FormatoAutorizacion
					if(!this.parametrocompraConstantesFunciones.cargarid_formato_autorizacionParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_formato_autorizacionParametroCompra) {
						//this.cargarCombosFormatoAutorizacionsForeignKeyLista(" where id="+this.parametrocompra.getid_formato_autorizacion());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.formatoautorizacionsForeignKey=new ArrayList<Formato>();

						if(parametrocompra.getFormatoAutorizacion()!=null) {
							this.formatoautorizacionsForeignKey.add(parametrocompra.getFormatoAutorizacion());
						}

						this.addItemDefectoCombosForeignKeyFormatoAutorizacion();
						this.cargarCombosFrameFormatoAutorizacionsForeignKey("Todos");
					}
					this.setActualFormatoAutorizacionForeignKey(this.parametrocompra.getid_formato_autorizacion(),false,"Formulario");

					//EstadoPedidoAutorizado
					if(!this.parametrocompraConstantesFunciones.cargarid_estado_pedido_autorizadoParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_estado_pedido_autorizadoParametroCompra) {
						//this.cargarCombosEstadoPedidoAutorizadosForeignKeyLista(" where id="+this.parametrocompra.getid_estado_pedido_autorizado());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.estadopedidoautorizadosForeignKey=new ArrayList<EstadoPedido>();

						if(parametrocompra.getEstadoPedidoAutorizado()!=null) {
							this.estadopedidoautorizadosForeignKey.add(parametrocompra.getEstadoPedidoAutorizado());
						}

						this.addItemDefectoCombosForeignKeyEstadoPedidoAutorizado();
						this.cargarCombosFrameEstadoPedidoAutorizadosForeignKey("Todos");
					}
					this.setActualEstadoPedidoAutorizadoForeignKey(this.parametrocompra.getid_estado_pedido_autorizado(),false,"Formulario");

					//FormatoItem
					if(!this.parametrocompraConstantesFunciones.cargarid_formato_itemParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_formato_itemParametroCompra) {
						//this.cargarCombosFormatoItemsForeignKeyLista(" where id="+this.parametrocompra.getid_formato_item());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.formatoitemsForeignKey=new ArrayList<Formato>();

						if(parametrocompra.getFormatoItem()!=null) {
							this.formatoitemsForeignKey.add(parametrocompra.getFormatoItem());
						}

						this.addItemDefectoCombosForeignKeyFormatoItem();
						this.cargarCombosFrameFormatoItemsForeignKey("Todos");
					}
					this.setActualFormatoItemForeignKey(this.parametrocompra.getid_formato_item(),false,"Formulario");

					//EstadoPedidoAnulado
					if(!this.parametrocompraConstantesFunciones.cargarid_estado_pedido_anuladoParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_estado_pedido_anuladoParametroCompra) {
						//this.cargarCombosEstadoPedidoAnuladosForeignKeyLista(" where id="+this.parametrocompra.getid_estado_pedido_anulado());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.estadopedidoanuladosForeignKey=new ArrayList<EstadoPedido>();

						if(parametrocompra.getEstadoPedidoAnulado()!=null) {
							this.estadopedidoanuladosForeignKey.add(parametrocompra.getEstadoPedidoAnulado());
						}

						this.addItemDefectoCombosForeignKeyEstadoPedidoAnulado();
						this.cargarCombosFrameEstadoPedidoAnuladosForeignKey("Todos");
					}
					this.setActualEstadoPedidoAnuladoForeignKey(this.parametrocompra.getid_estado_pedido_anulado(),false,"Formulario");

					//PrioridadPedido
					if(!this.parametrocompraConstantesFunciones.cargarid_prioridad_pedidoParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_prioridad_pedidoParametroCompra) {
						//this.cargarCombosPrioridadPedidosForeignKeyLista(" where id="+this.parametrocompra.getid_prioridad_pedido());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.prioridadpedidosForeignKey=new ArrayList<PrioridadPedido>();

						if(parametrocompra.getPrioridadPedido()!=null) {
							this.prioridadpedidosForeignKey.add(parametrocompra.getPrioridadPedido());
						}

						this.addItemDefectoCombosForeignKeyPrioridadPedido();
						this.cargarCombosFramePrioridadPedidosForeignKey("Todos");
					}
					this.setActualPrioridadPedidoForeignKey(this.parametrocompra.getid_prioridad_pedido(),false,"Formulario");

					//EstadoPedidoSuspendido
					if(!this.parametrocompraConstantesFunciones.cargarid_estado_pedido_suspendidoParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_estado_pedido_suspendidoParametroCompra) {
						//this.cargarCombosEstadoPedidoSuspendidosForeignKeyLista(" where id="+this.parametrocompra.getid_estado_pedido_suspendido());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.estadopedidosuspendidosForeignKey=new ArrayList<EstadoPedido>();

						if(parametrocompra.getEstadoPedidoSuspendido()!=null) {
							this.estadopedidosuspendidosForeignKey.add(parametrocompra.getEstadoPedidoSuspendido());
						}

						this.addItemDefectoCombosForeignKeyEstadoPedidoSuspendido();
						this.cargarCombosFrameEstadoPedidoSuspendidosForeignKey("Todos");
					}
					this.setActualEstadoPedidoSuspendidoForeignKey(this.parametrocompra.getid_estado_pedido_suspendido(),false,"Formulario");

					//EstadoPedidoRegularizado
					if(!this.parametrocompraConstantesFunciones.cargarid_estado_pedido_regularizadoParametroCompra || this.parametrocompraConstantesFunciones.event_dependid_estado_pedido_regularizadoParametroCompra) {
						//this.cargarCombosEstadoPedidoRegularizadosForeignKeyLista(" where id="+this.parametrocompra.getid_estado_pedido_regularizado());
									//this.inicializarActualizarBindingParametroCompra(false,false);
						this.estadopedidoregularizadosForeignKey=new ArrayList<EstadoPedido>();

						if(parametrocompra.getEstadoPedidoRegularizado()!=null) {
							this.estadopedidoregularizadosForeignKey.add(parametrocompra.getEstadoPedidoRegularizado());
						}

						this.addItemDefectoCombosForeignKeyEstadoPedidoRegularizado();
						this.cargarCombosFrameEstadoPedidoRegularizadosForeignKey("Todos");
					}
					this.setActualEstadoPedidoRegularizadoForeignKey(this.parametrocompra.getid_estado_pedido_regularizado(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesParametroCompra("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesParametroCompra(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroCompra() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroCompra(ParametroCompra parametrocompra) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoParametroCompra(parametrocompra,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroCompra(ParametroCompra parametrocompra,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioParametroCompra(parametrocompra);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyParametroCompra(parametrocompra,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyParametroCompra(parametrocompra);
	}
	
	public void setVariablesObjetoActualToFormularioParametroCompra(ParametroCompra parametrocompra) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormParametroCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormParametroCompra.jLabelidParametroCompra.setText(parametrocompra.getId().toString());
			this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_pedidoParametroCompra.setText(parametrocompra.getsecuencial_pedido());
			this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_cotizacionParametroCompra.setText(parametrocompra.getsecuencial_cotizacion());
			this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_produccionParametroCompra.setText(parametrocompra.getsecuencial_produccion());
			this.jInternalFrameDetalleFormParametroCompra.jCheckBoxcon_centro_costoParametroCompra.setSelected(parametrocompra.getcon_centro_costo());
			this.jInternalFrameDetalleFormParametroCompra.jTextAreatexto_mailParametroCompra.setText(parametrocompra.gettexto_mail());
			this.jInternalFrameDetalleFormParametroCompra.jTextAreadescripcionParametroCompra.setText(parametrocompra.getdescripcion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,ParametroCompra parametrocompraLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,parametrocompraLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,ParametroCompra parametrocompraLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				parametrocompraLocal=this.parametrocompra;
			} else {
				parametrocompraLocal=this.parametrocompraAnterior;
			}
		}
		
		if(this.permiteMantenimiento(parametrocompraLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoParametroCompra(parametrocompraLocal,true);
					
					if(parametrocompraSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(parametrocompraLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(parametrocompraLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoParametroCompra(ParametroCompra parametrocompra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroCompra(parametrocompra,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(parametrocompra);
	}
	
	public void setVariablesFormularioToObjetoActualParametroCompra(ParametroCompra parametrocompra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroCompra(parametrocompra,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualParametroCompra(ParametroCompra parametrocompra,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormParametroCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormParametroCompra.jLabelidParametroCompra.getText()==null || this.jInternalFrameDetalleFormParametroCompra.jLabelidParametroCompra.getText()=="" || this.jInternalFrameDetalleFormParametroCompra.jLabelidParametroCompra.getText()=="Id") {
				this.jInternalFrameDetalleFormParametroCompra.jLabelidParametroCompra.setText("0");
			}

			if(conColumnasBase) {parametrocompra.setId(Long.parseLong(this.jInternalFrameDetalleFormParametroCompra.jLabelidParametroCompra.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroCompraConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelIdParametroCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrocompra.setsecuencial_pedido(this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_pedidoParametroCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelsecuencial_pedidoParametroCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrocompra.setsecuencial_cotizacion(this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_cotizacionParametroCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelsecuencial_cotizacionParametroCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrocompra.setsecuencial_produccion(this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_produccionParametroCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelsecuencial_produccionParametroCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrocompra.setcon_centro_costo(this.jInternalFrameDetalleFormParametroCompra.jCheckBoxcon_centro_costoParametroCompra.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabelcon_centro_costoParametroCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrocompra.settexto_mail(this.jInternalFrameDetalleFormParametroCompra.jTextAreatexto_mailParametroCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabeltexto_mailParametroCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrocompra.setdescripcion(this.jInternalFrameDetalleFormParametroCompra.jTextAreadescripcionParametroCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroCompraConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCompra.jLabeldescripcionParametroCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroCompra(ParametroCompra parametrocompraBean,ParametroCompra parametrocompra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && parametrocompraBean.getid_tipo_documento()!=null && !parametrocompraBean.getid_tipo_documento().equals(-1L))) {parametrocompra.setid_tipo_documento(parametrocompraBean.getid_tipo_documento());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_tipo_movimiento()!=null && !parametrocompraBean.getid_tipo_movimiento().equals(-1L))) {parametrocompra.setid_tipo_movimiento(parametrocompraBean.getid_tipo_movimiento());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_bodega()!=null && !parametrocompraBean.getid_bodega().equals(-1L))) {parametrocompra.setid_bodega(parametrocompraBean.getid_bodega());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_bodega_reserva()!=null && !parametrocompraBean.getid_bodega_reserva().equals(-1L))) {parametrocompra.setid_bodega_reserva(parametrocompraBean.getid_bodega_reserva());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_empleado()!=null && !parametrocompraBean.getid_empleado().equals(-1L))) {parametrocompra.setid_empleado(parametrocompraBean.getid_empleado());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_embarcador()!=null && !parametrocompraBean.getid_embarcador().equals(-1L))) {parametrocompra.setid_embarcador(parametrocompraBean.getid_embarcador());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_formato_pedido()!=null && !parametrocompraBean.getid_formato_pedido().equals(-1L))) {parametrocompra.setid_formato_pedido(parametrocompraBean.getid_formato_pedido());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_estado_pedido_pendiente()!=null && !parametrocompraBean.getid_estado_pedido_pendiente().equals(-1L))) {parametrocompra.setid_estado_pedido_pendiente(parametrocompraBean.getid_estado_pedido_pendiente());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_formato_cotizacion()!=null && !parametrocompraBean.getid_formato_cotizacion().equals(-1L))) {parametrocompra.setid_formato_cotizacion(parametrocompraBean.getid_formato_cotizacion());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_estado_pedido_cotizado()!=null && !parametrocompraBean.getid_estado_pedido_cotizado().equals(-1L))) {parametrocompra.setid_estado_pedido_cotizado(parametrocompraBean.getid_estado_pedido_cotizado());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_formato_autorizacion()!=null && !parametrocompraBean.getid_formato_autorizacion().equals(-1L))) {parametrocompra.setid_formato_autorizacion(parametrocompraBean.getid_formato_autorizacion());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_estado_pedido_autorizado()!=null && !parametrocompraBean.getid_estado_pedido_autorizado().equals(-1L))) {parametrocompra.setid_estado_pedido_autorizado(parametrocompraBean.getid_estado_pedido_autorizado());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_formato_item()!=null && !parametrocompraBean.getid_formato_item().equals(-1L))) {parametrocompra.setid_formato_item(parametrocompraBean.getid_formato_item());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_estado_pedido_anulado()!=null && !parametrocompraBean.getid_estado_pedido_anulado().equals(-1L))) {parametrocompra.setid_estado_pedido_anulado(parametrocompraBean.getid_estado_pedido_anulado());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_prioridad_pedido()!=null && !parametrocompraBean.getid_prioridad_pedido().equals(-1L))) {parametrocompra.setid_prioridad_pedido(parametrocompraBean.getid_prioridad_pedido());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_estado_pedido_suspendido()!=null && !parametrocompraBean.getid_estado_pedido_suspendido().equals(-1L))) {parametrocompra.setid_estado_pedido_suspendido(parametrocompraBean.getid_estado_pedido_suspendido());}
			if(conDefault || (!conDefault && parametrocompraBean.getid_estado_pedido_regularizado()!=null && !parametrocompraBean.getid_estado_pedido_regularizado().equals(-1L))) {parametrocompra.setid_estado_pedido_regularizado(parametrocompraBean.getid_estado_pedido_regularizado());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosParametroCompra(ParametroCompra parametrocompraOrigen,ParametroCompra parametrocompra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrocompraOrigen.getId()!=null && !parametrocompraOrigen.getId().equals(0L))) {parametrocompra.setId(parametrocompraOrigen.getId());}}
			if(conDefault || (!conDefault && parametrocompraOrigen.getsecuencial_pedido()!=null && !parametrocompraOrigen.getsecuencial_pedido().equals(""))) {parametrocompra.setsecuencial_pedido(parametrocompraOrigen.getsecuencial_pedido());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getsecuencial_cotizacion()!=null && !parametrocompraOrigen.getsecuencial_cotizacion().equals(""))) {parametrocompra.setsecuencial_cotizacion(parametrocompraOrigen.getsecuencial_cotizacion());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getsecuencial_produccion()!=null && !parametrocompraOrigen.getsecuencial_produccion().equals(""))) {parametrocompra.setsecuencial_produccion(parametrocompraOrigen.getsecuencial_produccion());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_tipo_documento()!=null && !parametrocompraOrigen.getid_tipo_documento().equals(-1L))) {parametrocompra.setid_tipo_documento(parametrocompraOrigen.getid_tipo_documento());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_tipo_movimiento()!=null && !parametrocompraOrigen.getid_tipo_movimiento().equals(-1L))) {parametrocompra.setid_tipo_movimiento(parametrocompraOrigen.getid_tipo_movimiento());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_bodega()!=null && !parametrocompraOrigen.getid_bodega().equals(-1L))) {parametrocompra.setid_bodega(parametrocompraOrigen.getid_bodega());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_bodega_reserva()!=null && !parametrocompraOrigen.getid_bodega_reserva().equals(-1L))) {parametrocompra.setid_bodega_reserva(parametrocompraOrigen.getid_bodega_reserva());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_empleado()!=null && !parametrocompraOrigen.getid_empleado().equals(-1L))) {parametrocompra.setid_empleado(parametrocompraOrigen.getid_empleado());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_embarcador()!=null && !parametrocompraOrigen.getid_embarcador().equals(-1L))) {parametrocompra.setid_embarcador(parametrocompraOrigen.getid_embarcador());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getcon_centro_costo()!=null && !parametrocompraOrigen.getcon_centro_costo().equals(false))) {parametrocompra.setcon_centro_costo(parametrocompraOrigen.getcon_centro_costo());}
			if(conDefault || (!conDefault && parametrocompraOrigen.gettexto_mail()!=null && !parametrocompraOrigen.gettexto_mail().equals(""))) {parametrocompra.settexto_mail(parametrocompraOrigen.gettexto_mail());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_tipo_movimiento_modulo()!=null && !parametrocompraOrigen.getid_tipo_movimiento_modulo().equals(-1L))) {parametrocompra.setid_tipo_movimiento_modulo(parametrocompraOrigen.getid_tipo_movimiento_modulo());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getdescripcion()!=null && !parametrocompraOrigen.getdescripcion().equals(""))) {parametrocompra.setdescripcion(parametrocompraOrigen.getdescripcion());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_formato_pedido()!=null && !parametrocompraOrigen.getid_formato_pedido().equals(-1L))) {parametrocompra.setid_formato_pedido(parametrocompraOrigen.getid_formato_pedido());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_estado_pedido_pendiente()!=null && !parametrocompraOrigen.getid_estado_pedido_pendiente().equals(-1L))) {parametrocompra.setid_estado_pedido_pendiente(parametrocompraOrigen.getid_estado_pedido_pendiente());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_formato_cotizacion()!=null && !parametrocompraOrigen.getid_formato_cotizacion().equals(-1L))) {parametrocompra.setid_formato_cotizacion(parametrocompraOrigen.getid_formato_cotizacion());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_estado_pedido_cotizado()!=null && !parametrocompraOrigen.getid_estado_pedido_cotizado().equals(-1L))) {parametrocompra.setid_estado_pedido_cotizado(parametrocompraOrigen.getid_estado_pedido_cotizado());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_formato_autorizacion()!=null && !parametrocompraOrigen.getid_formato_autorizacion().equals(-1L))) {parametrocompra.setid_formato_autorizacion(parametrocompraOrigen.getid_formato_autorizacion());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_estado_pedido_autorizado()!=null && !parametrocompraOrigen.getid_estado_pedido_autorizado().equals(-1L))) {parametrocompra.setid_estado_pedido_autorizado(parametrocompraOrigen.getid_estado_pedido_autorizado());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_formato_item()!=null && !parametrocompraOrigen.getid_formato_item().equals(-1L))) {parametrocompra.setid_formato_item(parametrocompraOrigen.getid_formato_item());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_estado_pedido_anulado()!=null && !parametrocompraOrigen.getid_estado_pedido_anulado().equals(-1L))) {parametrocompra.setid_estado_pedido_anulado(parametrocompraOrigen.getid_estado_pedido_anulado());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_prioridad_pedido()!=null && !parametrocompraOrigen.getid_prioridad_pedido().equals(-1L))) {parametrocompra.setid_prioridad_pedido(parametrocompraOrigen.getid_prioridad_pedido());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_estado_pedido_suspendido()!=null && !parametrocompraOrigen.getid_estado_pedido_suspendido().equals(-1L))) {parametrocompra.setid_estado_pedido_suspendido(parametrocompraOrigen.getid_estado_pedido_suspendido());}
			if(conDefault || (!conDefault && parametrocompraOrigen.getid_estado_pedido_regularizado()!=null && !parametrocompraOrigen.getid_estado_pedido_regularizado().equals(-1L))) {parametrocompra.setid_estado_pedido_regularizado(parametrocompraOrigen.getid_estado_pedido_regularizado());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroCompra(ParametroCompra parametrocompra) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroCompra.jLabelidParametroCompra.setText(parametrocompra.getId().toString());
			this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_pedidoParametroCompra.setText(parametrocompra.getsecuencial_pedido());
			this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_cotizacionParametroCompra.setText(parametrocompra.getsecuencial_cotizacion());
			this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_produccionParametroCompra.setText(parametrocompra.getsecuencial_produccion());
			this.jInternalFrameDetalleFormParametroCompra.jCheckBoxcon_centro_costoParametroCompra.setSelected(parametrocompra.getcon_centro_costo());
			this.jInternalFrameDetalleFormParametroCompra.jTextAreatexto_mailParametroCompra.setText(parametrocompra.gettexto_mail());
			this.jInternalFrameDetalleFormParametroCompra.jTextAreadescripcionParametroCompra.setText(parametrocompra.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroCompra(ParametroCompraBean parametrocompraBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroCompra.jLabelidParametroCompra.setText(parametrocompraBean.getId().toString());
			this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_pedidoParametroCompra.setText(parametrocompraBean.getsecuencial_pedido());
			this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_cotizacionParametroCompra.setText(parametrocompraBean.getsecuencial_cotizacion());
			this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_produccionParametroCompra.setText(parametrocompraBean.getsecuencial_produccion());
			this.jInternalFrameDetalleFormParametroCompra.jCheckBoxcon_centro_costoParametroCompra.setSelected(parametrocompraBean.getcon_centro_costo());
			this.jInternalFrameDetalleFormParametroCompra.jTextAreatexto_mailParametroCompra.setText(parametrocompraBean.gettexto_mail());
			this.jInternalFrameDetalleFormParametroCompra.jTextAreadescripcionParametroCompra.setText(parametrocompraBean.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanParametroCompra(ParametroCompraParameterReturnGeneral parametrocompraReturnGeneral,ParametroCompraBean parametrocompraBean,Boolean conDefault) throws Exception { 
		try {
			ParametroCompra parametrocompraLocal=new ParametroCompra();
			
			parametrocompraLocal=parametrocompraReturnGeneral.getParametroCompra();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrocompraLocal.getId()!=null && !parametrocompraLocal.getId().equals(0L))) {parametrocompraBean.setId(parametrocompraLocal.getId());}}
			if(conDefault || (!conDefault && parametrocompraLocal.getsecuencial_pedido()!=null && !parametrocompraLocal.getsecuencial_pedido().equals(""))) {parametrocompraBean.setsecuencial_pedido(parametrocompraLocal.getsecuencial_pedido());}
			if(conDefault || (!conDefault && parametrocompraLocal.getsecuencial_cotizacion()!=null && !parametrocompraLocal.getsecuencial_cotizacion().equals(""))) {parametrocompraBean.setsecuencial_cotizacion(parametrocompraLocal.getsecuencial_cotizacion());}
			if(conDefault || (!conDefault && parametrocompraLocal.getsecuencial_produccion()!=null && !parametrocompraLocal.getsecuencial_produccion().equals(""))) {parametrocompraBean.setsecuencial_produccion(parametrocompraLocal.getsecuencial_produccion());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_tipo_documento()!=null && !parametrocompraLocal.getid_tipo_documento().equals(-1L))) {parametrocompraBean.setid_tipo_documento(parametrocompraLocal.getid_tipo_documento());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_tipo_movimiento()!=null && !parametrocompraLocal.getid_tipo_movimiento().equals(-1L))) {parametrocompraBean.setid_tipo_movimiento(parametrocompraLocal.getid_tipo_movimiento());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_bodega()!=null && !parametrocompraLocal.getid_bodega().equals(-1L))) {parametrocompraBean.setid_bodega(parametrocompraLocal.getid_bodega());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_bodega_reserva()!=null && !parametrocompraLocal.getid_bodega_reserva().equals(-1L))) {parametrocompraBean.setid_bodega_reserva(parametrocompraLocal.getid_bodega_reserva());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_empleado()!=null && !parametrocompraLocal.getid_empleado().equals(-1L))) {parametrocompraBean.setid_empleado(parametrocompraLocal.getid_empleado());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_embarcador()!=null && !parametrocompraLocal.getid_embarcador().equals(-1L))) {parametrocompraBean.setid_embarcador(parametrocompraLocal.getid_embarcador());}
			if(conDefault || (!conDefault && parametrocompraLocal.getcon_centro_costo()!=null && !parametrocompraLocal.getcon_centro_costo().equals(false))) {parametrocompraBean.setcon_centro_costo(parametrocompraLocal.getcon_centro_costo());}
			if(conDefault || (!conDefault && parametrocompraLocal.gettexto_mail()!=null && !parametrocompraLocal.gettexto_mail().equals(""))) {parametrocompraBean.settexto_mail(parametrocompraLocal.gettexto_mail());}
			if(conDefault || (!conDefault && parametrocompraLocal.getdescripcion()!=null && !parametrocompraLocal.getdescripcion().equals(""))) {parametrocompraBean.setdescripcion(parametrocompraLocal.getdescripcion());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_formato_pedido()!=null && !parametrocompraLocal.getid_formato_pedido().equals(-1L))) {parametrocompraBean.setid_formato_pedido(parametrocompraLocal.getid_formato_pedido());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_estado_pedido_pendiente()!=null && !parametrocompraLocal.getid_estado_pedido_pendiente().equals(-1L))) {parametrocompraBean.setid_estado_pedido_pendiente(parametrocompraLocal.getid_estado_pedido_pendiente());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_formato_cotizacion()!=null && !parametrocompraLocal.getid_formato_cotizacion().equals(-1L))) {parametrocompraBean.setid_formato_cotizacion(parametrocompraLocal.getid_formato_cotizacion());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_estado_pedido_cotizado()!=null && !parametrocompraLocal.getid_estado_pedido_cotizado().equals(-1L))) {parametrocompraBean.setid_estado_pedido_cotizado(parametrocompraLocal.getid_estado_pedido_cotizado());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_formato_autorizacion()!=null && !parametrocompraLocal.getid_formato_autorizacion().equals(-1L))) {parametrocompraBean.setid_formato_autorizacion(parametrocompraLocal.getid_formato_autorizacion());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_estado_pedido_autorizado()!=null && !parametrocompraLocal.getid_estado_pedido_autorizado().equals(-1L))) {parametrocompraBean.setid_estado_pedido_autorizado(parametrocompraLocal.getid_estado_pedido_autorizado());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_formato_item()!=null && !parametrocompraLocal.getid_formato_item().equals(-1L))) {parametrocompraBean.setid_formato_item(parametrocompraLocal.getid_formato_item());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_estado_pedido_anulado()!=null && !parametrocompraLocal.getid_estado_pedido_anulado().equals(-1L))) {parametrocompraBean.setid_estado_pedido_anulado(parametrocompraLocal.getid_estado_pedido_anulado());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_prioridad_pedido()!=null && !parametrocompraLocal.getid_prioridad_pedido().equals(-1L))) {parametrocompraBean.setid_prioridad_pedido(parametrocompraLocal.getid_prioridad_pedido());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_estado_pedido_suspendido()!=null && !parametrocompraLocal.getid_estado_pedido_suspendido().equals(-1L))) {parametrocompraBean.setid_estado_pedido_suspendido(parametrocompraLocal.getid_estado_pedido_suspendido());}
			if(conDefault || (!conDefault && parametrocompraLocal.getid_estado_pedido_regularizado()!=null && !parametrocompraLocal.getid_estado_pedido_regularizado().equals(-1L))) {parametrocompraBean.setid_estado_pedido_regularizado(parametrocompraLocal.getid_estado_pedido_regularizado());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxParametroCompraGenerico(Long idParametroCompraSeleccionado,JComboBox jComboBoxParametroCompra,List<ParametroCompra> parametrocomprasLocal)throws Exception {
		try {
			ParametroCompra  parametrocompraTemp=null;

			for(ParametroCompra parametrocompraAux:parametrocomprasLocal) {
				if(parametrocompraAux.getId()!=null && parametrocompraAux.getId().equals(idParametroCompraSeleccionado)) {
					parametrocompraTemp=parametrocompraAux;
					break;
				}
			}

			jComboBoxParametroCompra.setSelectedItem(parametrocompraTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxParametroCompraGenerico(JComboBox jComboBoxParametroCompra,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxParametroCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxParametroCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroCompra.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxParametroCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroCompra.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxParametroCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxParametroCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxParametroCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrocompra=(ParametroCompra) parametrocompraLogic.getParametroCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametrocompra =(ParametroCompra) parametrocompras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getempresa_descripcion();
			}
		}

		if(sTipo.equals("TipoDocumento")) {
			//sDescripcion=this.getActualTipoDocumentoForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.gettipodocumento_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDocumentoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.gettipodocumento_descripcion();
			}
		}

		if(sTipo.equals("TipoMovimiento")) {
			//sDescripcion=this.getActualTipoMovimientoForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.gettipomovimiento_descripcion();
			} else {
				//sDescripcion=this.getActualTipoMovimientoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.gettipomovimiento_descripcion();
			}
		}

		if(sTipo.equals("Bodega")) {
			//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getbodega_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getbodega_descripcion();
			}
		}

		if(sTipo.equals("BodegaReserva")) {
			//sDescripcion=this.getActualBodegaReservaForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getbodegareserva_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaReservaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getbodegareserva_descripcion();
			}
		}

		if(sTipo.equals("Empleado")) {
			//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getempleado_descripcion();
			}
		}

		if(sTipo.equals("Embarcador")) {
			//sDescripcion=this.getActualEmbarcadorForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getembarcador_descripcion();
			} else {
				//sDescripcion=this.getActualEmbarcadorForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getembarcador_descripcion();
			}
		}

		if(sTipo.equals("Modulo")) {
			//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getmodulo_descripcion();
			}
		}

		if(sTipo.equals("TipoMovimientoModulo")) {
			//sDescripcion=this.getActualTipoMovimientoModuloForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.gettipomovimientomodulo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoMovimientoModuloForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.gettipomovimientomodulo_descripcion();
			}
		}

		if(sTipo.equals("FormatoPedido")) {
			//sDescripcion=this.getActualFormatoPedidoForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getformatopedido_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoPedidoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getformatopedido_descripcion();
			}
		}

		if(sTipo.equals("EstadoPedidoPendiente")) {
			//sDescripcion=this.getActualEstadoPedidoPendienteForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getestadopedidopendiente_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoPedidoPendienteForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getestadopedidopendiente_descripcion();
			}
		}

		if(sTipo.equals("FormatoCotizacion")) {
			//sDescripcion=this.getActualFormatoCotizacionForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getformatocotizacion_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoCotizacionForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getformatocotizacion_descripcion();
			}
		}

		if(sTipo.equals("EstadoPedidoCotizado")) {
			//sDescripcion=this.getActualEstadoPedidoCotizadoForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getestadopedidocotizado_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoPedidoCotizadoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getestadopedidocotizado_descripcion();
			}
		}

		if(sTipo.equals("FormatoAutorizacion")) {
			//sDescripcion=this.getActualFormatoAutorizacionForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getformatoautorizacion_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoAutorizacionForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getformatoautorizacion_descripcion();
			}
		}

		if(sTipo.equals("EstadoPedidoAutorizado")) {
			//sDescripcion=this.getActualEstadoPedidoAutorizadoForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getestadopedidoautorizado_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoPedidoAutorizadoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getestadopedidoautorizado_descripcion();
			}
		}

		if(sTipo.equals("FormatoItem")) {
			//sDescripcion=this.getActualFormatoItemForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getformatoitem_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoItemForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getformatoitem_descripcion();
			}
		}

		if(sTipo.equals("EstadoPedidoAnulado")) {
			//sDescripcion=this.getActualEstadoPedidoAnuladoForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getestadopedidoanulado_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoPedidoAnuladoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getestadopedidoanulado_descripcion();
			}
		}

		if(sTipo.equals("PrioridadPedido")) {
			//sDescripcion=this.getActualPrioridadPedidoForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getprioridadpedido_descripcion();
			} else {
				//sDescripcion=this.getActualPrioridadPedidoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getprioridadpedido_descripcion();
			}
		}

		if(sTipo.equals("EstadoPedidoSuspendido")) {
			//sDescripcion=this.getActualEstadoPedidoSuspendidoForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getestadopedidosuspendido_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoPedidoSuspendidoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getestadopedidosuspendido_descripcion();
			}
		}

		if(sTipo.equals("EstadoPedidoRegularizado")) {
			//sDescripcion=this.getActualEstadoPedidoRegularizadoForeignKeyDescripcion((Long)value);
			if(!parametrocompra.getIsNew() && !parametrocompra.getIsChanged() && !parametrocompra.getIsDeleted()) {
				sDescripcion=parametrocompra.getestadopedidoregularizado_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoPedidoRegularizadoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocompra.getestadopedidoregularizado_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		ParametroCompra parametrocompraRow=new ParametroCompra();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrocompraRow=(ParametroCompra) parametrocompraLogic.getParametroCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametrocompraRow=(ParametroCompra) parametrocompras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("EstadoPedidoPendiente")) {
			color=FuncionesSwing.getColorGeneral(parametrocompraRow.getEstadoPedidoPendiente().getid_color_general());
		}

		if(sTipo.equals("EstadoPedidoCotizado")) {
			color=FuncionesSwing.getColorGeneral(parametrocompraRow.getEstadoPedidoCotizado().getid_color_general());
		}

		if(sTipo.equals("EstadoPedidoAutorizado")) {
			color=FuncionesSwing.getColorGeneral(parametrocompraRow.getEstadoPedidoAutorizado().getid_color_general());
		}

		if(sTipo.equals("EstadoPedidoAnulado")) {
			color=FuncionesSwing.getColorGeneral(parametrocompraRow.getEstadoPedidoAnulado().getid_color_general());
		}

		if(sTipo.equals("EstadoPedidoSuspendido")) {
			color=FuncionesSwing.getColorGeneral(parametrocompraRow.getEstadoPedidoSuspendido().getid_color_general());
		}

		if(sTipo.equals("EstadoPedidoRegularizado")) {
			color=FuncionesSwing.getColorGeneral(parametrocompraRow.getEstadoPedidoRegularizado().getid_color_general());
		}

		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualParametroCompra(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoParametroCompra.setVisible((this.isVisibilidadCeldaNuevoParametroCompra && this.isPermisoNuevoParametroCompra));			
			this.jButtonDuplicarParametroCompra.setVisible((this.isVisibilidadCeldaDuplicarParametroCompra && this.isPermisoDuplicarParametroCompra));			
			this.jButtonCopiarParametroCompra.setVisible((this.isVisibilidadCeldaCopiarParametroCompra && this.isPermisoCopiarParametroCompra));
			this.jButtonVerFormParametroCompra.setVisible((this.isVisibilidadCeldaVerFormParametroCompra && this.isPermisoVerFormParametroCompra));
			
			this.jButtonAbrirOrderByParametroCompra.setVisible((this.isVisibilidadCeldaOrdenParametroCompra && this.isPermisoOrdenParametroCompra));			
			
			this.jButtonNuevoRelacionesParametroCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroCompra && this.isPermisoNuevoParametroCompra));			
			this.jButtonNuevoGuardarCambiosParametroCompra.setVisible((this.isVisibilidadCeldaNuevoParametroCompra && this.isPermisoNuevoParametroCompra && this.isPermisoGuardarCambiosParametroCompra));
			
			if(this.jInternalFrameDetalleFormParametroCompra!=null) {
			this.jInternalFrameDetalleFormParametroCompra.jButtonModificarParametroCompra.setVisible((this.isVisibilidadCeldaModificarParametroCompra && this.isPermisoActualizarParametroCompra));	
			this.jInternalFrameDetalleFormParametroCompra.jButtonActualizarParametroCompra.setVisible((this.isVisibilidadCeldaActualizarParametroCompra && this.isPermisoActualizarParametroCompra));	
			this.jInternalFrameDetalleFormParametroCompra.jButtonEliminarParametroCompra.setVisible((this.isVisibilidadCeldaEliminarParametroCompra && this.isPermisoEliminarParametroCompra));
			this.jInternalFrameDetalleFormParametroCompra.jButtonCancelarParametroCompra.setVisible(this.isVisibilidadCeldaCancelarParametroCompra);							
			this.jInternalFrameDetalleFormParametroCompra.jButtonGuardarCambiosParametroCompra.setVisible((this.isVisibilidadCeldaGuardarParametroCompra && this.isPermisoGuardarCambiosParametroCompra));			
			
			}
						
			this.jButtonGuardarCambiosTablaParametroCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroCompra && this.isPermisoGuardarCambiosParametroCompra));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarParametroCompra.setVisible((this.isVisibilidadCeldaNuevoParametroCompra && this.isPermisoNuevoParametroCompra));						
			this.jButtonDuplicarToolBarParametroCompra.setVisible((this.isVisibilidadCeldaDuplicarParametroCompra && this.isPermisoDuplicarParametroCompra));						
			this.jButtonCopiarToolBarParametroCompra.setVisible((this.isVisibilidadCeldaCopiarParametroCompra && this.isPermisoCopiarParametroCompra));			
			this.jButtonVerFormToolBarParametroCompra.setVisible((this.isVisibilidadCeldaVerFormParametroCompra && this.isPermisoVerFormParametroCompra));			
			this.jButtonAbrirOrderByToolBarParametroCompra.setVisible((this.isVisibilidadCeldaOrdenParametroCompra && this.isPermisoOrdenParametroCompra));
			this.jButtonNuevoRelacionesToolBarParametroCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroCompra && this.isPermisoNuevoParametroCompra));			
			this.jButtonNuevoGuardarCambiosToolBarParametroCompra.setVisible((this.isVisibilidadCeldaNuevoParametroCompra && this.isPermisoNuevoParametroCompra && this.isPermisoGuardarCambiosParametroCompra));			
			
			if(this.jInternalFrameDetalleFormParametroCompra!=null) {
			this.jInternalFrameDetalleFormParametroCompra.jButtonModificarToolBarParametroCompra.setVisible((this.isVisibilidadCeldaModificarParametroCompra && this.isPermisoActualizarParametroCompra));	
			this.jInternalFrameDetalleFormParametroCompra.jButtonActualizarToolBarParametroCompra.setVisible((this.isVisibilidadCeldaActualizarParametroCompra  && this.isPermisoActualizarParametroCompra));	
			this.jInternalFrameDetalleFormParametroCompra.jButtonEliminarToolBarParametroCompra.setVisible((this.isVisibilidadCeldaEliminarParametroCompra && this.isPermisoEliminarParametroCompra));
			this.jInternalFrameDetalleFormParametroCompra.jButtonCancelarToolBarParametroCompra.setVisible(this.isVisibilidadCeldaCancelarParametroCompra);				
			this.jInternalFrameDetalleFormParametroCompra.jButtonGuardarCambiosToolBarParametroCompra.setVisible((this.isVisibilidadCeldaGuardarParametroCompra && this.isPermisoGuardarCambiosParametroCompra));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarParametroCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroCompra && this.isPermisoGuardarCambiosParametroCompra));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoParametroCompra.setVisible((this.isVisibilidadCeldaNuevoParametroCompra && this.isPermisoNuevoParametroCompra));			
			this.jMenuItemDuplicarParametroCompra.setVisible((this.isVisibilidadCeldaDuplicarParametroCompra && this.isPermisoDuplicarParametroCompra));			
			this.jMenuItemCopiarParametroCompra.setVisible((this.isVisibilidadCeldaCopiarParametroCompra && this.isPermisoCopiarParametroCompra));			
			this.jMenuItemVerFormParametroCompra.setVisible((this.isVisibilidadCeldaVerFormParametroCompra && this.isPermisoVerFormParametroCompra));			
			this.jMenuItemAbrirOrderByParametroCompra.setVisible((this.isVisibilidadCeldaOrdenParametroCompra && this.isPermisoOrdenParametroCompra));			
			//this.jMenuItemMostrarOcultarParametroCompra.setVisible((this.isVisibilidadCeldaOrdenParametroCompra && this.isPermisoOrdenParametroCompra));
			this.jMenuItemDetalleAbrirOrderByParametroCompra.setVisible((this.isVisibilidadCeldaOrdenParametroCompra && this.isPermisoOrdenParametroCompra));			
			//this.jMenuItemDetalleMostrarOcultarParametroCompra.setVisible((this.isVisibilidadCeldaOrdenParametroCompra && this.isPermisoOrdenParametroCompra));			
			this.jMenuItemNuevoRelacionesParametroCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroCompra && this.isPermisoNuevoParametroCompra));			
			this.jMenuItemNuevoGuardarCambiosParametroCompra.setVisible((this.isVisibilidadCeldaNuevoParametroCompra && this.isPermisoNuevoParametroCompra && this.isPermisoGuardarCambiosParametroCompra));									
			
			if(this.jInternalFrameDetalleFormParametroCompra!=null) {
			this.jInternalFrameDetalleFormParametroCompra.jMenuItemModificarParametroCompra.setVisible((this.isVisibilidadCeldaModificarParametroCompra && this.isPermisoActualizarParametroCompra));	
			this.jInternalFrameDetalleFormParametroCompra.jMenuItemActualizarParametroCompra.setVisible((this.isVisibilidadCeldaActualizarParametroCompra && this.isPermisoActualizarParametroCompra));	
			this.jInternalFrameDetalleFormParametroCompra.jMenuItemEliminarParametroCompra.setVisible((this.isVisibilidadCeldaEliminarParametroCompra && this.isPermisoEliminarParametroCompra));
			this.jInternalFrameDetalleFormParametroCompra.jMenuItemCancelarParametroCompra.setVisible(this.isVisibilidadCeldaCancelarParametroCompra);				
			}
			
			this.jMenuItemGuardarCambiosParametroCompra.setVisible((this.isVisibilidadCeldaGuardarParametroCompra && this.isPermisoGuardarCambiosParametroCompra));						
			this.jMenuItemGuardarCambiosTablaParametroCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroCompra && this.isPermisoGuardarCambiosParametroCompra));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoParametroCompra=this.jButtonNuevoParametroCompra.isVisible();
			this.isVisibilidadCeldaDuplicarParametroCompra=this.jButtonDuplicarParametroCompra.isVisible();
			this.isVisibilidadCeldaCopiarParametroCompra=this.jButtonCopiarParametroCompra.isVisible();
			this.isVisibilidadCeldaVerFormParametroCompra=this.jButtonVerFormParametroCompra.isVisible();
			
			this.isVisibilidadCeldaOrdenParametroCompra=this.jButtonAbrirOrderByParametroCompra.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesParametroCompra=this.jButtonNuevoRelacionesParametroCompra.isVisible();
			this.isVisibilidadCeldaModificarParametroCompra=this.jButtonModificarParametroCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroCompra!=null) {
			this.isVisibilidadCeldaActualizarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jButtonActualizarParametroCompra.isVisible();
			this.isVisibilidadCeldaEliminarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jButtonEliminarParametroCompra.isVisible();
			this.isVisibilidadCeldaCancelarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jButtonCancelarParametroCompra.isVisible();
			this.isVisibilidadCeldaGuardarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jButtonGuardarCambiosParametroCompra.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosParametroCompra=this.jButtonGuardarCambiosTablaParametroCompra.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoParametroCompra=this.jButtonNuevoToolBarParametroCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroCompra=this.jButtonNuevoRelacionesToolBarParametroCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroCompra!=null) {
			this.isVisibilidadCeldaModificarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jButtonModificarToolBarParametroCompra.isVisible();
			this.isVisibilidadCeldaActualizarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jButtonActualizarToolBarParametroCompra.isVisible();
			this.isVisibilidadCeldaEliminarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jButtonEliminarToolBarParametroCompra.isVisible();
			this.isVisibilidadCeldaCancelarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jButtonCancelarToolBarParametroCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroCompra=this.jButtonGuardarCambiosToolBarParametroCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroCompra=this.jButtonGuardarCambiosTablaToolBarParametroCompra.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoParametroCompra=this.jMenuItemNuevoParametroCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroCompra=this.jMenuItemNuevoRelacionesParametroCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroCompra!=null) {
			this.isVisibilidadCeldaModificarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jMenuItemModificarParametroCompra.isVisible();
			this.isVisibilidadCeldaActualizarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jMenuItemActualizarParametroCompra.isVisible();
			this.isVisibilidadCeldaEliminarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jMenuItemEliminarParametroCompra.isVisible();
			this.isVisibilidadCeldaCancelarParametroCompra=this.jInternalFrameDetalleFormParametroCompra.jMenuItemCancelarParametroCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroCompra=this.jMenuItemGuardarCambiosParametroCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroCompra=this.jMenuItemGuardarCambiosTablaParametroCompra.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesParametroCompra(Boolean esInicializar) {
		if(ParametroCompraJInternalFrame.ISBINDING_MANUAL) {			
			if(this.parametrocompraSessionBean.getConGuardarRelaciones()) {
				//if(this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesParametroCompra();
			}
			
			this.inicializarActualizarBindingBotonesManualParametroCompra(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualParametroCompra() {
		this.jButtonNuevoParametroCompra.setVisible(this.isPermisoNuevoParametroCompra);			
		this.jButtonDuplicarParametroCompra.setVisible(this.isPermisoDuplicarParametroCompra);			
		this.jButtonCopiarParametroCompra.setVisible(this.isPermisoCopiarParametroCompra);			
		this.jButtonVerFormParametroCompra.setVisible(this.isPermisoVerFormParametroCompra);			
		
		this.jButtonAbrirOrderByParametroCompra.setVisible(this.isPermisoOrdenParametroCompra);					
		
		this.jButtonNuevoRelacionesParametroCompra.setVisible(this.isPermisoNuevoParametroCompra);			
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCompra.jButtonModificarParametroCompra.setVisible(this.isPermisoActualizarParametroCompra);	
			this.jInternalFrameDetalleFormParametroCompra.jButtonActualizarParametroCompra.setVisible(this.isPermisoActualizarParametroCompra);	
			this.jInternalFrameDetalleFormParametroCompra.jButtonEliminarParametroCompra.setVisible(this.isPermisoEliminarParametroCompra);
			this.jInternalFrameDetalleFormParametroCompra.jButtonCancelarParametroCompra.setVisible(this.isVisibilidadCeldaCancelarParametroCompra);						
			this.jInternalFrameDetalleFormParametroCompra.jButtonGuardarCambiosParametroCompra.setVisible(this.isPermisoGuardarCambiosParametroCompra);							
		}
		
		this.jButtonGuardarCambiosTablaParametroCompra.setVisible(this.isPermisoActualizarParametroCompra);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroCompra() {
		this.jInternalFrameDetalleFormParametroCompra.jButtonModificarParametroCompra.setVisible(this.isPermisoActualizarParametroCompra);	
		this.jInternalFrameDetalleFormParametroCompra.jButtonActualizarParametroCompra.setVisible(this.isPermisoActualizarParametroCompra);	
		this.jInternalFrameDetalleFormParametroCompra.jButtonEliminarParametroCompra.setVisible(this.isPermisoEliminarParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jButtonCancelarParametroCompra.setVisible(this.isVisibilidadCeldaCancelarParametroCompra);							
		this.jInternalFrameDetalleFormParametroCompra.jButtonGuardarCambiosParametroCompra.setVisible((this.isVisibilidadCeldaGuardarParametroCompra && this.isPermisoGuardarCambiosParametroCompra));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosParametroCompra() {
		if(ParametroCompraJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualParametroCompra();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesParametroCompra() {
	}
	
	public void jTableDatosParametroCompraListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarParametroCompra(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.parametrocompra.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebParametroCompra(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderParametroCompra.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.parametrocompra.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsecuencial_pedidoParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getsecuencial_pedido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where secuencial_pedido like '%"+this.parametrocompra.getsecuencial_pedido()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsecuencial_cotizacionParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getsecuencial_cotizacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where secuencial_cotizacion like '%"+this.parametrocompra.getsecuencial_cotizacion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsecuencial_produccionParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getsecuencial_produccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where secuencial_produccion like '%"+this.parametrocompra.getsecuencial_produccion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_documentoParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodocumento=true;

			idTienePermisotipodocumento=this.tienePermisosUsuarioEnPaginaWebParametroCompra(TipoDocumentoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodocumento) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.tipodocumentoBeanSwingJInternalFrame=new TipoDocumentoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodocumentoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodocumentoBeanSwingJInternalFrame.getTipoDocumentoLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_tipo_documento()!=null) {
					this.tipodocumentoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodocumentoBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_tipo_documento());
					this.tipodocumentoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodocumentoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodocumentoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDocumento();
				}

				JInternalFrameBase jinternalFrame =this.tipodocumentoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBordertipodocumento=(TitledBorder)this.tipodocumentoBeanSwingJInternalFrame.jScrollPanelDatosTipoDocumento.getBorder();

				titledBordertipodocumento.setTitle(titledBorderParametroCompra.getTitle() + " -> Tipo Documento");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_documentoParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_tipo_documento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_documento = "+this.parametrocompra.getid_tipo_documento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_movimientoParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipomovimiento=true;

			idTienePermisotipomovimiento=this.tienePermisosUsuarioEnPaginaWebParametroCompra(TipoMovimientoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipomovimiento) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.tipomovimientoBeanSwingJInternalFrame=new TipoMovimientoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipomovimientoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipomovimientoBeanSwingJInternalFrame.getTipoMovimientoLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_tipo_movimiento()!=null) {
					this.tipomovimientoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipomovimientoBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_tipo_movimiento());
					this.tipomovimientoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipomovimientoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipomovimientoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoMovimiento();
				}

				JInternalFrameBase jinternalFrame =this.tipomovimientoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBordertipomovimiento=(TitledBorder)this.tipomovimientoBeanSwingJInternalFrame.jScrollPanelDatosTipoMovimiento.getBorder();

				titledBordertipomovimiento.setTitle(titledBorderParametroCompra.getTitle() + " -> Tipo Movimiento");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_movimientoParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_tipo_movimiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_movimiento = "+this.parametrocompra.getid_tipo_movimiento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodegaParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodega=true;

			idTienePermisobodega=this.tienePermisosUsuarioEnPaginaWebParametroCompra(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodega) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.bodegaBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegaBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_bodega()!=null) {
					this.bodegaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegaBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_bodega());
					this.bodegaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderbodega=(TitledBorder)this.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodega.setTitle(titledBorderParametroCompra.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodegaParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_bodega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega = "+this.parametrocompra.getid_bodega().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodega_reservaParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodegareserva=true;

			idTienePermisobodegareserva=this.tienePermisosUsuarioEnPaginaWebParametroCompra(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodegareserva) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.bodegareservaBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegareservaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegareservaBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_bodega_reserva()!=null) {
					this.bodegareservaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegareservaBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_bodega_reserva());
					this.bodegareservaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegareservaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegareservaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegareservaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderbodegareserva=(TitledBorder)this.bodegareservaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodegareserva.setTitle(titledBorderParametroCompra.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodega_reservaParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_bodega_reserva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega_reserva = "+this.parametrocompra.getid_bodega_reserva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleadoParametroCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="Empleado";

			if(!this.sFinalQueryGeneral_empleado.equals("")) {
				this.empleadoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_empleado);
				this.empleadoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.empleadoBeanSwingJInternalFrame.procesarBusqueda(this.empleadoBeanSwingJInternalFrame.sAccionBusqueda);
				this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingEmpleado(false);
			}

			if(!this.sFinalQueryComboEmpleado.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroCompra=null;
			TitledBorder titledBorderempleado=null;

			if(!this.jScrollPanelDatosParametroCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderParametroCompra.getTitle() + " -> Empleado");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_empleadoParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleado=true;

			idTienePermisoempleado=this.tienePermisosUsuarioEnPaginaWebParametroCompra(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_empleado()!=null) {
					this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_empleado());
					this.empleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderParametroCompra.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleadoParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado = "+this.parametrocompra.getid_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_embarcadorParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoembarcador=true;

			idTienePermisoembarcador=this.tienePermisosUsuarioEnPaginaWebParametroCompra(EmbarcadorConstantesFunciones.CLASSNAME);

			if(idTienePermisoembarcador) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.embarcadorBeanSwingJInternalFrame=new EmbarcadorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.embarcadorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.embarcadorBeanSwingJInternalFrame.getEmbarcadorLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_embarcador()!=null) {
					this.embarcadorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.embarcadorBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_embarcador());
					this.embarcadorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.embarcadorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.embarcadorBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmbarcador();
				}

				JInternalFrameBase jinternalFrame =this.embarcadorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderembarcador=(TitledBorder)this.embarcadorBeanSwingJInternalFrame.jScrollPanelDatosEmbarcador.getBorder();

				titledBorderembarcador.setTitle(titledBorderParametroCompra.getTitle() + " -> Embarcador");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_embarcadorParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_embarcador()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_embarcador = "+this.parametrocompra.getid_embarcador().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_centro_costoParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getcon_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_centro_costo = "+this.parametrocompra.getcon_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontexto_mailParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.gettexto_mail()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where texto_mail like '%"+this.parametrocompra.gettexto_mail()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_moduloParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomodulo=true;

			idTienePermisomodulo=this.tienePermisosUsuarioEnPaginaWebParametroCompra(ModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisomodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.moduloBeanSwingJInternalFrame=new ModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.moduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.moduloBeanSwingJInternalFrame.getModuloLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_modulo()!=null) {
					this.moduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.moduloBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_modulo());
					this.moduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaModulo();
				}

				JInternalFrameBase jinternalFrame =this.moduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBordermodulo=(TitledBorder)this.moduloBeanSwingJInternalFrame.jScrollPanelDatosModulo.getBorder();

				titledBordermodulo.setTitle(titledBorderParametroCompra.getTitle() + " -> Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_moduloParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_modulo = "+this.parametrocompra.getid_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_movimiento_moduloParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipomovimientomodulo=true;

			idTienePermisotipomovimientomodulo=this.tienePermisosUsuarioEnPaginaWebParametroCompra(TipoMovimientoModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisotipomovimientomodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.tipomovimientomoduloBeanSwingJInternalFrame=new TipoMovimientoModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipomovimientomoduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipomovimientomoduloBeanSwingJInternalFrame.getTipoMovimientoModuloLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_tipo_movimiento_modulo()!=null) {
					this.tipomovimientomoduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipomovimientomoduloBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_tipo_movimiento_modulo());
					this.tipomovimientomoduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipomovimientomoduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipomovimientomoduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoMovimientoModulo();
				}

				JInternalFrameBase jinternalFrame =this.tipomovimientomoduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBordertipomovimientomodulo=(TitledBorder)this.tipomovimientomoduloBeanSwingJInternalFrame.jScrollPanelDatosTipoMovimientoModulo.getBorder();

				titledBordertipomovimientomodulo.setTitle(titledBorderParametroCompra.getTitle() + " -> Tipo Movimiento Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_movimiento_moduloParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_tipo_movimiento_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_movimiento_modulo = "+this.parametrocompra.getid_tipo_movimiento_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.parametrocompra.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formato_pedidoParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformatopedido=true;

			idTienePermisoformatopedido=this.tienePermisosUsuarioEnPaginaWebParametroCompra(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformatopedido) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.formatopedidoBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatopedidoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatopedidoBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_formato_pedido()!=null) {
					this.formatopedidoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatopedidoBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_formato_pedido());
					this.formatopedidoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatopedidoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatopedidoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatopedidoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderformatopedido=(TitledBorder)this.formatopedidoBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformatopedido.setTitle(titledBorderParametroCompra.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formato_pedidoParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_formato_pedido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato_pedido = "+this.parametrocompra.getid_formato_pedido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_pedido_pendienteParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadopedidopendiente=true;

			idTienePermisoestadopedidopendiente=this.tienePermisosUsuarioEnPaginaWebParametroCompra(EstadoPedidoConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadopedidopendiente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.estadopedidopendienteBeanSwingJInternalFrame=new EstadoPedidoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadopedidopendienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadopedidopendienteBeanSwingJInternalFrame.getEstadoPedidoLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_estado_pedido_pendiente()!=null) {
					this.estadopedidopendienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadopedidopendienteBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_estado_pedido_pendiente());
					this.estadopedidopendienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadopedidopendienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadopedidopendienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoPedido();
				}

				JInternalFrameBase jinternalFrame =this.estadopedidopendienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderestadopedidopendiente=(TitledBorder)this.estadopedidopendienteBeanSwingJInternalFrame.jScrollPanelDatosEstadoPedido.getBorder();

				titledBorderestadopedidopendiente.setTitle(titledBorderParametroCompra.getTitle() + " -> Estado Pedido");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_pedido_pendienteParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_estado_pedido_pendiente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_pedido_pendiente = "+this.parametrocompra.getid_estado_pedido_pendiente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formato_cotizacionParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformatocotizacion=true;

			idTienePermisoformatocotizacion=this.tienePermisosUsuarioEnPaginaWebParametroCompra(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformatocotizacion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.formatocotizacionBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatocotizacionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatocotizacionBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_formato_cotizacion()!=null) {
					this.formatocotizacionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatocotizacionBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_formato_cotizacion());
					this.formatocotizacionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatocotizacionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatocotizacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatocotizacionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderformatocotizacion=(TitledBorder)this.formatocotizacionBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformatocotizacion.setTitle(titledBorderParametroCompra.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formato_cotizacionParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_formato_cotizacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato_cotizacion = "+this.parametrocompra.getid_formato_cotizacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_pedido_cotizadoParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadopedidocotizado=true;

			idTienePermisoestadopedidocotizado=this.tienePermisosUsuarioEnPaginaWebParametroCompra(EstadoPedidoConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadopedidocotizado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.estadopedidocotizadoBeanSwingJInternalFrame=new EstadoPedidoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadopedidocotizadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadopedidocotizadoBeanSwingJInternalFrame.getEstadoPedidoLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_estado_pedido_cotizado()!=null) {
					this.estadopedidocotizadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadopedidocotizadoBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_estado_pedido_cotizado());
					this.estadopedidocotizadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadopedidocotizadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadopedidocotizadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoPedido();
				}

				JInternalFrameBase jinternalFrame =this.estadopedidocotizadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderestadopedidocotizado=(TitledBorder)this.estadopedidocotizadoBeanSwingJInternalFrame.jScrollPanelDatosEstadoPedido.getBorder();

				titledBorderestadopedidocotizado.setTitle(titledBorderParametroCompra.getTitle() + " -> Estado Pedido");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_pedido_cotizadoParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_estado_pedido_cotizado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_pedido_cotizado = "+this.parametrocompra.getid_estado_pedido_cotizado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formato_autorizacionParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformatoautorizacion=true;

			idTienePermisoformatoautorizacion=this.tienePermisosUsuarioEnPaginaWebParametroCompra(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformatoautorizacion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.formatoautorizacionBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatoautorizacionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatoautorizacionBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_formato_autorizacion()!=null) {
					this.formatoautorizacionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatoautorizacionBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_formato_autorizacion());
					this.formatoautorizacionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatoautorizacionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatoautorizacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatoautorizacionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderformatoautorizacion=(TitledBorder)this.formatoautorizacionBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformatoautorizacion.setTitle(titledBorderParametroCompra.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formato_autorizacionParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_formato_autorizacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato_autorizacion = "+this.parametrocompra.getid_formato_autorizacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_pedido_autorizadoParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadopedidoautorizado=true;

			idTienePermisoestadopedidoautorizado=this.tienePermisosUsuarioEnPaginaWebParametroCompra(EstadoPedidoConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadopedidoautorizado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.estadopedidoautorizadoBeanSwingJInternalFrame=new EstadoPedidoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadopedidoautorizadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadopedidoautorizadoBeanSwingJInternalFrame.getEstadoPedidoLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_estado_pedido_autorizado()!=null) {
					this.estadopedidoautorizadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadopedidoautorizadoBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_estado_pedido_autorizado());
					this.estadopedidoautorizadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadopedidoautorizadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadopedidoautorizadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoPedido();
				}

				JInternalFrameBase jinternalFrame =this.estadopedidoautorizadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderestadopedidoautorizado=(TitledBorder)this.estadopedidoautorizadoBeanSwingJInternalFrame.jScrollPanelDatosEstadoPedido.getBorder();

				titledBorderestadopedidoautorizado.setTitle(titledBorderParametroCompra.getTitle() + " -> Estado Pedido");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_pedido_autorizadoParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_estado_pedido_autorizado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_pedido_autorizado = "+this.parametrocompra.getid_estado_pedido_autorizado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formato_itemParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformatoitem=true;

			idTienePermisoformatoitem=this.tienePermisosUsuarioEnPaginaWebParametroCompra(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformatoitem) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.formatoitemBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatoitemBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatoitemBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_formato_item()!=null) {
					this.formatoitemBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatoitemBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_formato_item());
					this.formatoitemBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatoitemBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatoitemBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatoitemBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderformatoitem=(TitledBorder)this.formatoitemBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformatoitem.setTitle(titledBorderParametroCompra.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formato_itemParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_formato_item()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato_item = "+this.parametrocompra.getid_formato_item().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_pedido_anuladoParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadopedidoanulado=true;

			idTienePermisoestadopedidoanulado=this.tienePermisosUsuarioEnPaginaWebParametroCompra(EstadoPedidoConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadopedidoanulado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.estadopedidoanuladoBeanSwingJInternalFrame=new EstadoPedidoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadopedidoanuladoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadopedidoanuladoBeanSwingJInternalFrame.getEstadoPedidoLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_estado_pedido_anulado()!=null) {
					this.estadopedidoanuladoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadopedidoanuladoBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_estado_pedido_anulado());
					this.estadopedidoanuladoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadopedidoanuladoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadopedidoanuladoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoPedido();
				}

				JInternalFrameBase jinternalFrame =this.estadopedidoanuladoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderestadopedidoanulado=(TitledBorder)this.estadopedidoanuladoBeanSwingJInternalFrame.jScrollPanelDatosEstadoPedido.getBorder();

				titledBorderestadopedidoanulado.setTitle(titledBorderParametroCompra.getTitle() + " -> Estado Pedido");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_pedido_anuladoParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_estado_pedido_anulado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_pedido_anulado = "+this.parametrocompra.getid_estado_pedido_anulado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_prioridad_pedidoParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoprioridadpedido=true;

			idTienePermisoprioridadpedido=this.tienePermisosUsuarioEnPaginaWebParametroCompra(PrioridadPedidoConstantesFunciones.CLASSNAME);

			if(idTienePermisoprioridadpedido) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.prioridadpedidoBeanSwingJInternalFrame=new PrioridadPedidoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.prioridadpedidoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.prioridadpedidoBeanSwingJInternalFrame.getPrioridadPedidoLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_prioridad_pedido()!=null) {
					this.prioridadpedidoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.prioridadpedidoBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_prioridad_pedido());
					this.prioridadpedidoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.prioridadpedidoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.prioridadpedidoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPrioridadPedido();
				}

				JInternalFrameBase jinternalFrame =this.prioridadpedidoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderprioridadpedido=(TitledBorder)this.prioridadpedidoBeanSwingJInternalFrame.jScrollPanelDatosPrioridadPedido.getBorder();

				titledBorderprioridadpedido.setTitle(titledBorderParametroCompra.getTitle() + " -> Prioridad Pedido");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_prioridad_pedidoParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_prioridad_pedido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_prioridad_pedido = "+this.parametrocompra.getid_prioridad_pedido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_pedido_suspendidoParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadopedidosuspendido=true;

			idTienePermisoestadopedidosuspendido=this.tienePermisosUsuarioEnPaginaWebParametroCompra(EstadoPedidoConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadopedidosuspendido) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.estadopedidosuspendidoBeanSwingJInternalFrame=new EstadoPedidoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadopedidosuspendidoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadopedidosuspendidoBeanSwingJInternalFrame.getEstadoPedidoLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_estado_pedido_suspendido()!=null) {
					this.estadopedidosuspendidoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadopedidosuspendidoBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_estado_pedido_suspendido());
					this.estadopedidosuspendidoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadopedidosuspendidoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadopedidosuspendidoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoPedido();
				}

				JInternalFrameBase jinternalFrame =this.estadopedidosuspendidoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderestadopedidosuspendido=(TitledBorder)this.estadopedidosuspendidoBeanSwingJInternalFrame.jScrollPanelDatosEstadoPedido.getBorder();

				titledBorderestadopedidosuspendido.setTitle(titledBorderParametroCompra.getTitle() + " -> Estado Pedido");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_pedido_suspendidoParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_estado_pedido_suspendido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_pedido_suspendido = "+this.parametrocompra.getid_estado_pedido_suspendido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_pedido_regularizadoParametroCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadopedidoregularizado=true;

			idTienePermisoestadopedidoregularizado=this.tienePermisosUsuarioEnPaginaWebParametroCompra(EstadoPedidoConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadopedidoregularizado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);

				this.estadopedidoregularizadoBeanSwingJInternalFrame=new EstadoPedidoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadopedidoregularizadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadopedidoregularizadoBeanSwingJInternalFrame.getEstadoPedidoLogic().setConnexion(this.parametrocompraLogic.getConnexion());

				if(this.parametrocompra.getid_estado_pedido_regularizado()!=null) {
					this.estadopedidoregularizadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadopedidoregularizadoBeanSwingJInternalFrame.setIdActual(this.parametrocompra.getid_estado_pedido_regularizado());
					this.estadopedidoregularizadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadopedidoregularizadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadopedidoregularizadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoPedido();
				}

				JInternalFrameBase jinternalFrame =this.estadopedidoregularizadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCompra=(TitledBorder)this.jScrollPanelDatosParametroCompra.getBorder();
				TitledBorder titledBorderestadopedidoregularizado=(TitledBorder)this.estadopedidoregularizadoBeanSwingJInternalFrame.jScrollPanelDatosEstadoPedido.getBorder();

				titledBorderestadopedidoregularizado.setTitle(titledBorderParametroCompra.getTitle() + " -> Estado Pedido");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_pedido_regularizadoParametroCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.getparametrocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocompra==null) {
						this.parametrocompra = new ParametroCompra();
					}

					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);
				}

				if(this.parametrocompra.getid_estado_pedido_regularizado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_pedido_regularizado = "+this.parametrocompra.getid_estado_pedido_regularizado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdBodegaParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdBodega();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdBodegaReservaParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdBodegaReserva();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmbarcadorParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdEmbarcador();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdEmpleado();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdEmpresa();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoPedidoAnuladoParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdEstadoPedidoAnulado();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoPedidoAutorizadoParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdEstadoPedidoAutorizado();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoPedidoCotizadoParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdEstadoPedidoCotizado();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoPedidoPendienteParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdEstadoPedidoPendiente();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoPedidoRegularizadoParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdEstadoPedidoRegularizado();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoPedidoSuspendoParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdEstadoPedidoSuspendo();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoAutorizacionParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdFormatoAutorizacion();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoCotizacionParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdFormatoCotizacion();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoItemParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdFormatoItem();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoPedidoParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdFormatoPedido();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdModuloParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdModulo();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPrioridadPedidoParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdPrioridadPedido();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDocumentoParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdTipoDocumento();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoMovimientoParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdTipoMovimiento();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoMovimientoModuloParametroCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCompra(false,false);

			this.getParametroComprasFK_IdTipoMovimientoModulo();

			this.inicializarActualizarBindingParametroCompra(false);

			//if(ParametroCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameParametroCompra() {
		if(this.jInternalFrameDetalleFormParametroCompra!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) {
			this.jInternalFrameDetalleFormParametroCompra.setVisible(false);	    			
			this.jInternalFrameDetalleFormParametroCompra.dispose();
			this.jInternalFrameDetalleFormParametroCompra=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoParametroCompra!=null) {
			this.jInternalFrameReporteDinamicoParametroCompra.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoParametroCompra.dispose();
			this.jInternalFrameReporteDinamicoParametroCompra=null;
		}
		
		if(this.jInternalFrameImportacionParametroCompra!=null) {
			this.jInternalFrameImportacionParametroCompra.setVisible(false);	    			
			this.jInternalFrameImportacionParametroCompra.dispose();
			this.jInternalFrameImportacionParametroCompra=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessParametroCompra();
			
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			
			
			if(sTipo.equals("NuevoParametroCompra")) {
				jButtonNuevoParametroCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarParametroCompra")) {
				jButtonDuplicarParametroCompraActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarParametroCompra")) {
				jButtonCopiarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormParametroCompra")) {
				jButtonVerFormParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarParametroCompra")) {
				jButtonNuevoParametroCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarParametroCompra")) {
				jButtonDuplicarParametroCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoParametroCompra")) {
				jButtonNuevoParametroCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarParametroCompra")) {
				jButtonDuplicarParametroCompraActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesParametroCompra")) {
				jButtonNuevoParametroCompraActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarParametroCompra")) {
				jButtonNuevoParametroCompraActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesParametroCompra")) {
				jButtonNuevoParametroCompraActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarParametroCompra")) {
				jButtonModificarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarParametroCompra")) {
				jButtonModificarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarParametroCompra")) {
				jButtonModificarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarParametroCompra")) {
				jButtonActualizarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarParametroCompra")) {
				jButtonActualizarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarParametroCompra")) {
				jButtonActualizarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarParametroCompra")) {
				jButtonEliminarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarParametroCompra")) {
				jButtonEliminarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarParametroCompra")) {
				jButtonEliminarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarParametroCompra")) {
				jButtonCancelarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarParametroCompra")) {
				jButtonCancelarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarParametroCompra")) {
				jButtonCancelarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarParametroCompra")) {
				jButtonCerrarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarParametroCompra")) {
				jButtonCerrarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarParametroCompra")) {
				jButtonCerrarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarParametroCompra")) {
				jButtonMostrarOcultarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarParametroCompra")) {
				jButtonCancelarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosParametroCompra")) {
				jButtonGuardarCambiosParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarParametroCompra")) {
				jButtonGuardarCambiosParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarParametroCompra")) {
				jButtonCopiarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarParametroCompra")) {
				jButtonVerFormParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosParametroCompra")) {
				jButtonGuardarCambiosParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarParametroCompra")) {
				jButtonCopiarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormParametroCompra")) {
				jButtonVerFormParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaParametroCompra")) {
				jButtonGuardarCambiosParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarParametroCompra")) {
				jButtonGuardarCambiosParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaParametroCompra")) {
				jButtonGuardarCambiosParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionParametroCompra")) {
				jButtonRecargarInformacionParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarParametroCompra")) {
				jButtonRecargarInformacionParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionParametroCompra")) {
				jButtonRecargarInformacionParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresParametroCompra")) {
				jButtonAnterioresParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarParametroCompra")) {
				jButtonAnterioresParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreParametroCompra")) {
				jButtonAnterioresParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesParametroCompra")) {
				jButtonSiguientesParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarParametroCompra")) {
				jButtonSiguientesParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesParametroCompra")) {
				jButtonSiguientesParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByParametroCompra") || sTipo.equals("MenuItemDetalleAbrirOrderByParametroCompra")) {
				jButtonAbrirOrderByParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarParametroCompra") || sTipo.equals("MenuItemDetalleMostrarOcultarParametroCompra")) {
				jButtonMostrarOcultarParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosParametroCompra")) {
				jButtonNuevoGuardarCambiosParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarParametroCompra")) {
				jButtonNuevoGuardarCambiosParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosParametroCompra")) {
				jButtonNuevoGuardarCambiosParametroCompraActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoParametroCompra")) {
				jButtonCerrarReporteDinamicoParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoParametroCompra")) {
				jButtonGenerarReporteDinamicoParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoParametroCompra")) {
				
				jButtonGenerarExcelReporteDinamicoParametroCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionParametroCompra")) {
				jButtonCerrarImportacionParametroCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionParametroCompra")) {
				
				jButtonGenerarImportacionParametroCompraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionParametroCompra")) {
				
				jButtonAbrirImportacionParametroCompraActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesParametroCompra")) {
				jComboBoxTiposAccionesParametroCompraActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesParametroCompra")) {
				jComboBoxTiposRelacionesParametroCompraActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioParametroCompra")) {
				jComboBoxTiposAccionesParametroCompraActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarParametroCompra")) {
				
				jComboBoxTiposSeleccionarParametroCompraActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralParametroCompra")) {
				jTextFieldValorCampoGeneralParametroCompraActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByParametroCompra")) {
				jButtonAbrirOrderByParametroCompraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarParametroCompra")) {
				jButtonAbrirOrderByParametroCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByParametroCompra")) {
				jButtonCerrarOrderByParametroCompraActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idParametroCompraBusqueda")) {
				this.jButtonidParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroCompraUpdate")) {
				this.jButtonid_empresaParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroCompraBusqueda")) {
				this.jButtonid_empresaParametroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencial_pedidoParametroCompraBusqueda")) {
				this.jButtonsecuencial_pedidoParametroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencial_cotizacionParametroCompraBusqueda")) {
				this.jButtonsecuencial_cotizacionParametroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencial_produccionParametroCompraBusqueda")) {
				this.jButtonsecuencial_produccionParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documentoParametroCompraUpdate")) {
				this.jButtonid_tipo_documentoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documentoParametroCompraBusqueda")) {
				this.jButtonid_tipo_documentoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_movimientoParametroCompraUpdate")) {
				this.jButtonid_tipo_movimientoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_movimientoParametroCompraBusqueda")) {
				this.jButtonid_tipo_movimientoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaParametroCompraUpdate")) {
				this.jButtonid_bodegaParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaParametroCompraBusqueda")) {
				this.jButtonid_bodegaParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodega_reservaParametroCompraUpdate")) {
				this.jButtonid_bodega_reservaParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodega_reservaParametroCompraBusqueda")) {
				this.jButtonid_bodega_reservaParametroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoParametroCompra")) {
				this.jButtonid_empleadoParametroCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoParametroCompraUpdate")) {
				this.jButtonid_empleadoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoParametroCompraBusqueda")) {
				this.jButtonid_empleadoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_embarcadorParametroCompraUpdate")) {
				this.jButtonid_embarcadorParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_embarcadorParametroCompraBusqueda")) {
				this.jButtonid_embarcadorParametroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_centro_costoParametroCompraBusqueda")) {
				this.jButtoncon_centro_costoParametroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("texto_mailParametroCompraBusqueda")) {
				this.jButtontexto_mailParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloParametroCompraUpdate")) {
				this.jButtonid_moduloParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloParametroCompraBusqueda")) {
				this.jButtonid_moduloParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_movimiento_moduloParametroCompraUpdate")) {
				this.jButtonid_tipo_movimiento_moduloParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_movimiento_moduloParametroCompraBusqueda")) {
				this.jButtonid_tipo_movimiento_moduloParametroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionParametroCompraBusqueda")) {
				this.jButtondescripcionParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formato_pedidoParametroCompraUpdate")) {
				this.jButtonid_formato_pedidoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formato_pedidoParametroCompraBusqueda")) {
				this.jButtonid_formato_pedidoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_pendienteParametroCompraUpdate")) {
				this.jButtonid_estado_pedido_pendienteParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_pendienteParametroCompraBusqueda")) {
				this.jButtonid_estado_pedido_pendienteParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formato_cotizacionParametroCompraUpdate")) {
				this.jButtonid_formato_cotizacionParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formato_cotizacionParametroCompraBusqueda")) {
				this.jButtonid_formato_cotizacionParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_cotizadoParametroCompraUpdate")) {
				this.jButtonid_estado_pedido_cotizadoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_cotizadoParametroCompraBusqueda")) {
				this.jButtonid_estado_pedido_cotizadoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formato_autorizacionParametroCompraUpdate")) {
				this.jButtonid_formato_autorizacionParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formato_autorizacionParametroCompraBusqueda")) {
				this.jButtonid_formato_autorizacionParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_autorizadoParametroCompraUpdate")) {
				this.jButtonid_estado_pedido_autorizadoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_autorizadoParametroCompraBusqueda")) {
				this.jButtonid_estado_pedido_autorizadoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formato_itemParametroCompraUpdate")) {
				this.jButtonid_formato_itemParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formato_itemParametroCompraBusqueda")) {
				this.jButtonid_formato_itemParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_anuladoParametroCompraUpdate")) {
				this.jButtonid_estado_pedido_anuladoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_anuladoParametroCompraBusqueda")) {
				this.jButtonid_estado_pedido_anuladoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_prioridad_pedidoParametroCompraUpdate")) {
				this.jButtonid_prioridad_pedidoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_prioridad_pedidoParametroCompraBusqueda")) {
				this.jButtonid_prioridad_pedidoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_suspendidoParametroCompraUpdate")) {
				this.jButtonid_estado_pedido_suspendidoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_suspendidoParametroCompraBusqueda")) {
				this.jButtonid_estado_pedido_suspendidoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_regularizadoParametroCompraUpdate")) {
				this.jButtonid_estado_pedido_regularizadoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_regularizadoParametroCompraBusqueda")) {
				this.jButtonid_estado_pedido_regularizadoParametroCompraBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_empleadoParametroCompra")) {
				this.jButtonid_empleadoParametroCompraActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdBodegaParametroCompra")) {
				this.jButtonFK_IdBodegaParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdBodegaReservaParametroCompra")) {
				this.jButtonFK_IdBodegaReservaParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmbarcadorParametroCompra")) {
				this.jButtonFK_IdEmbarcadorParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpleadoParametroCompra")) {
				this.jButtonFK_IdEmpleadoParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoPedidoAnuladoParametroCompra")) {
				this.jButtonFK_IdEstadoPedidoAnuladoParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoPedidoAutorizadoParametroCompra")) {
				this.jButtonFK_IdEstadoPedidoAutorizadoParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoPedidoCotizadoParametroCompra")) {
				this.jButtonFK_IdEstadoPedidoCotizadoParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoPedidoPendienteParametroCompra")) {
				this.jButtonFK_IdEstadoPedidoPendienteParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoPedidoRegularizadoParametroCompra")) {
				this.jButtonFK_IdEstadoPedidoRegularizadoParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoPedidoSuspendoParametroCompra")) {
				this.jButtonFK_IdEstadoPedidoSuspendoParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFormatoAutorizacionParametroCompra")) {
				this.jButtonFK_IdFormatoAutorizacionParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFormatoCotizacionParametroCompra")) {
				this.jButtonFK_IdFormatoCotizacionParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFormatoItemParametroCompra")) {
				this.jButtonFK_IdFormatoItemParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFormatoPedidoParametroCompra")) {
				this.jButtonFK_IdFormatoPedidoParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdPrioridadPedidoParametroCompra")) {
				this.jButtonFK_IdPrioridadPedidoParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDocumentoParametroCompra")) {
				this.jButtonFK_IdTipoDocumentoParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoMovimientoParametroCompra")) {
				this.jButtonFK_IdTipoMovimientoParametroCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoMovimientoModuloParametroCompra")) {
				this.jButtonFK_IdTipoMovimientoModuloParametroCompraActionPerformed(evt);
			}
			
			;
			
			
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessParametroCompra();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroCompraActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				
				


				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			ParametroCompra parametrocompraLocal=null;
			
			if(!this.getEsControlTabla()) {
				parametrocompraLocal=this.parametrocompra;
			} else {
				parametrocompraLocal=this.parametrocompraAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
							
				
				


				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraAnterior =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocompraAnterior =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
								
						
				


				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCompra.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
								
				
				


				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraAnterior =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocompraAnterior =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraAnterior =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocompraAnterior =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
							
				
				


				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCompra.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompraAnterior =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrocompraAnterior =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCompraActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
								
				
				


				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraAnterior =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocompraAnterior =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosParametroCompra")) {
					jCheckBoxSeleccionarTodosParametroCompraItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosParametroCompra")) {
					jCheckBoxSeleccionadosParametroCompraItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarParametroCompra")) {
					
				}
				
				


				
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocompra);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
												
				
				


				
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocompraAnterior =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrocompraAnterior =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroCompraActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroCompraActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCompra.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCompra.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocompra);
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCompra.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocompraAnterior =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocompraAnterior =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarParametroCompra")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosParametroCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosParametroCompra.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.parametrocompra =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.parametrocompra =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.parametrocompra);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarParametroCompra")) {
				
				}
				
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarParametroCompra")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosParametroCompra.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarParametroCompra")) {
			
			}
			
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessParametroCompra();
			
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			
			if(sTipo.equals("NuevoParametroCompra")) {
				jButtonNuevoParametroCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarParametroCompra")) {
				jButtonDuplicarParametroCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarParametroCompra")) {
				jButtonCopiarParametroCompraActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormParametroCompra")) {
				jButtonVerFormParametroCompraActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesParametroCompra")) {
				jButtonNuevoParametroCompraActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarParametroCompra")) {
				jButtonModificarParametroCompraActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarParametroCompra")) {
				jButtonActualizarParametroCompraActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarParametroCompra")) {
				jButtonEliminarParametroCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaParametroCompra")) {
				jButtonGuardarCambiosParametroCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarParametroCompra")) {
				jButtonCancelarParametroCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarParametroCompra")) {
				jButtonCerrarParametroCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosParametroCompra")) {
				jButtonGuardarCambiosParametroCompraActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosParametroCompra")) {
				jButtonNuevoGuardarCambiosParametroCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByParametroCompra")) {
				jButtonAbrirOrderByParametroCompraActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionParametroCompra")) {
				jButtonRecargarInformacionParametroCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresParametroCompra")) {
				jButtonAnterioresParametroCompraActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesParametroCompra")) {
				jButtonSiguientesParametroCompraActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idParametroCompraBusqueda")) {
				this.jButtonidParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroCompraUpdate")) {
				this.jButtonid_empresaParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroCompraBusqueda")) {
				this.jButtonid_empresaParametroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencial_pedidoParametroCompraBusqueda")) {
				this.jButtonsecuencial_pedidoParametroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencial_cotizacionParametroCompraBusqueda")) {
				this.jButtonsecuencial_cotizacionParametroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencial_produccionParametroCompraBusqueda")) {
				this.jButtonsecuencial_produccionParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documentoParametroCompraUpdate")) {
				this.jButtonid_tipo_documentoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documentoParametroCompraBusqueda")) {
				this.jButtonid_tipo_documentoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_movimientoParametroCompraUpdate")) {
				this.jButtonid_tipo_movimientoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_movimientoParametroCompraBusqueda")) {
				this.jButtonid_tipo_movimientoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaParametroCompraUpdate")) {
				this.jButtonid_bodegaParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaParametroCompraBusqueda")) {
				this.jButtonid_bodegaParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodega_reservaParametroCompraUpdate")) {
				this.jButtonid_bodega_reservaParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodega_reservaParametroCompraBusqueda")) {
				this.jButtonid_bodega_reservaParametroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoParametroCompra")) {
				this.jButtonid_empleadoParametroCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoParametroCompraUpdate")) {
				this.jButtonid_empleadoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoParametroCompraBusqueda")) {
				this.jButtonid_empleadoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_embarcadorParametroCompraUpdate")) {
				this.jButtonid_embarcadorParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_embarcadorParametroCompraBusqueda")) {
				this.jButtonid_embarcadorParametroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_centro_costoParametroCompraBusqueda")) {
				this.jButtoncon_centro_costoParametroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("texto_mailParametroCompraBusqueda")) {
				this.jButtontexto_mailParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloParametroCompraUpdate")) {
				this.jButtonid_moduloParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloParametroCompraBusqueda")) {
				this.jButtonid_moduloParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_movimiento_moduloParametroCompraUpdate")) {
				this.jButtonid_tipo_movimiento_moduloParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_movimiento_moduloParametroCompraBusqueda")) {
				this.jButtonid_tipo_movimiento_moduloParametroCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionParametroCompraBusqueda")) {
				this.jButtondescripcionParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formato_pedidoParametroCompraUpdate")) {
				this.jButtonid_formato_pedidoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formato_pedidoParametroCompraBusqueda")) {
				this.jButtonid_formato_pedidoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_pendienteParametroCompraUpdate")) {
				this.jButtonid_estado_pedido_pendienteParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_pendienteParametroCompraBusqueda")) {
				this.jButtonid_estado_pedido_pendienteParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formato_cotizacionParametroCompraUpdate")) {
				this.jButtonid_formato_cotizacionParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formato_cotizacionParametroCompraBusqueda")) {
				this.jButtonid_formato_cotizacionParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_cotizadoParametroCompraUpdate")) {
				this.jButtonid_estado_pedido_cotizadoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_cotizadoParametroCompraBusqueda")) {
				this.jButtonid_estado_pedido_cotizadoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formato_autorizacionParametroCompraUpdate")) {
				this.jButtonid_formato_autorizacionParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formato_autorizacionParametroCompraBusqueda")) {
				this.jButtonid_formato_autorizacionParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_autorizadoParametroCompraUpdate")) {
				this.jButtonid_estado_pedido_autorizadoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_autorizadoParametroCompraBusqueda")) {
				this.jButtonid_estado_pedido_autorizadoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formato_itemParametroCompraUpdate")) {
				this.jButtonid_formato_itemParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formato_itemParametroCompraBusqueda")) {
				this.jButtonid_formato_itemParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_anuladoParametroCompraUpdate")) {
				this.jButtonid_estado_pedido_anuladoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_anuladoParametroCompraBusqueda")) {
				this.jButtonid_estado_pedido_anuladoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_prioridad_pedidoParametroCompraUpdate")) {
				this.jButtonid_prioridad_pedidoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_prioridad_pedidoParametroCompraBusqueda")) {
				this.jButtonid_prioridad_pedidoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_suspendidoParametroCompraUpdate")) {
				this.jButtonid_estado_pedido_suspendidoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_suspendidoParametroCompraBusqueda")) {
				this.jButtonid_estado_pedido_suspendidoParametroCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_regularizadoParametroCompraUpdate")) {
				this.jButtonid_estado_pedido_regularizadoParametroCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_regularizadoParametroCompraBusqueda")) {
				this.jButtonid_estado_pedido_regularizadoParametroCompraBusquedaActionPerformed(evt);
			}
			
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessParametroCompra();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameParametroCompra")) {
				closingInternalFrameParametroCompra();
				
			} else if(sTipo.equals("jButtonCancelarParametroCompra")) {
				JInternalFrameBase jInternalFrameDetalleFormParametroCompra = (JInternalFrameBase)evt.getSource();
	            	
	            ParametroCompraBeanSwingJInternalFrame jInternalFrameParent=(ParametroCompraBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroCompra.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarParametroCompraActionPerformed(null);
			}
			
			ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametrocompra,new Object(),this.parametrocompraParameterGeneral,this.parametrocompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormParametroCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormParametroCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormParametroCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.parametrocompra)) {
			if(!esControlTabla) {
				if(ParametroCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);			
				}
				
				if(this.parametrocompraSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualParametroCompra(this.parametrocompra,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrocompraReturnGeneral=parametrocompraLogic.procesarEventosParametroComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrocompraLogic.getParametroCompras(),this.parametrocompra,this.parametrocompraParameterGeneral,this.isEsNuevoParametroCompra,classes);//this.parametrocompraLogic.getParametroCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanParametroCompra(this.parametrocompraReturnGeneral,this.parametrocompraBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.parametrocompraSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanParametroCompra(classes,this.parametrocompraReturnGeneral,this.parametrocompraBean,false);
					}
						
					if(this.parametrocompraReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyParametroCompra(this.parametrocompraReturnGeneral.getParametroCompra());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioParametroCompra(this.parametrocompraReturnGeneral.getParametroCompra());	
					}
						
					if(this.parametrocompraReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioParametroCompra(this.parametrocompraReturnGeneral.getParametroCompra(),classes);//this.parametrocompraBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioParametroCompra(this.parametrocompra,classes);//this.parametrocompraBean);									
				}
			
				if(ParametroCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualParametroCompra(this.parametrocompra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCompra(this.parametrocompra);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.parametrocompraAnterior!=null) {
						this.parametrocompra=this.parametrocompraAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrocompraReturnGeneral=parametrocompraLogic.procesarEventosParametroComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrocompraLogic.getParametroCompras(),this.parametrocompra,this.parametrocompraParameterGeneral,this.isEsNuevoParametroCompra,classes);//this.parametrocompraLogic.getParametroCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrocompraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrocompraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.parametrocompraReturnGeneral.getParametroCompra(),parametrocompraLogic.getParametroCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.parametrocompraReturnGeneral.getParametroCompra(),this.parametrocompras);
				}
				//ARCHITECTURE
				
				//this.jTableDatosParametroCompra.repaint();
				
				//((AbstractTableModel) this.jTableDatosParametroCompra.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosParametroCompra();
			}
		}
	}
	
	public void actualizarVisualTableDatosParametroCompra() throws Exception {
		
		ParametroCompraModel parametrocompraModel=(ParametroCompraModel)this.jTableDatosParametroCompra.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrocompraModel.parametrocompras=this.parametrocompraLogic.getParametroCompras();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			parametrocompraModel.parametrocompras=this.parametrocompras;
		}
		
		
		((ParametroCompraModel) this.jTableDatosParametroCompra.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaParametroCompra() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getparametrocompraAnterior(),this.parametrocompraLogic.getParametroCompras());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getparametrocompraAnterior(),this.parametrocompras);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosParametroCompra();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioParametroCompra(ParametroCompra parametrocompra,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrocompra,new Object(),generalEntityParameterGeneral,this.parametrocompraReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.parametrocompraSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=ParametroCompraConstantesFunciones.getClassesRelationshipsOfParametroCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=ParametroCompraConstantesFunciones.getClassesRelationshipsFromStringsOfParametroCompra(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormParametroCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				ParametroCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrocompra,new Object(),generalEntityParameterGeneral,this.parametrocompraReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioParametroCompra(ParametroCompraBean parametrocompraBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanParametroCompra(ArrayList<Classe> classes,ParametroCompraReturnGeneral parametrocompraReturnGeneral,ParametroCompraBean parametrocompraBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualParametroCompra(ParametroCompra parametrocompra,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.parametrocompra)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormParametroCompra = new ParametroCompraDetalleFormJInternalFrame(jDesktopPane,this.parametrocompraSessionBean.getConGuardarRelaciones(),this.parametrocompraSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.setVisible(false);
		this.jInternalFrameDetalleFormParametroCompra.setSelected(false);						
		
		this.jInternalFrameDetalleFormParametroCompra.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormParametroCompra.parametrocompraLogic=this.parametrocompraLogic;
		
		this.cargarCombosFrameForeignKeyParametroCompra("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroCompra();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroCompra();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyParametroCompra("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyParametroCompra();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormParametroCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroCompra"));
		
		this.jInternalFrameDetalleFormParametroCompra.jButtonModificarParametroCompra.addActionListener(new ButtonActionListener(this,"ModificarParametroCompra"));

		
		this.jInternalFrameDetalleFormParametroCompra.jButtonModificarToolBarParametroCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroCompra"));
					
		this.jInternalFrameDetalleFormParametroCompra.jMenuItemModificarParametroCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroCompra"));		
		
		
		
		this.jInternalFrameDetalleFormParametroCompra.jButtonActualizarParametroCompra.addActionListener (new ButtonActionListener(this,"ActualizarParametroCompra"));
		
		
		this.jInternalFrameDetalleFormParametroCompra.jButtonActualizarToolBarParametroCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroCompra"));
						
		this.jInternalFrameDetalleFormParametroCompra.jMenuItemActualizarParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroCompra"));		
		
		
		
		this.jInternalFrameDetalleFormParametroCompra.jButtonEliminarParametroCompra.addActionListener (new ButtonActionListener(this,"EliminarParametroCompra"));
		
		
		this.jInternalFrameDetalleFormParametroCompra.jButtonEliminarToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroCompra"));
								
		this.jInternalFrameDetalleFormParametroCompra.jMenuItemEliminarParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroCompra"));		
		
		
		
		this.jInternalFrameDetalleFormParametroCompra.jButtonCancelarParametroCompra.addActionListener (new ButtonActionListener(this,"CancelarParametroCompra"));
		
		
		this.jInternalFrameDetalleFormParametroCompra.jButtonCancelarToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroCompra"));
					
		this.jInternalFrameDetalleFormParametroCompra.jMenuItemCancelarParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroCompra"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormParametroCompra.jMenuItemDetalleCerrarParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroCompra"));		
		
		
		
		this.jInternalFrameDetalleFormParametroCompra.jButtonGuardarCambiosToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroCompra"));
		
		
		
		this.jInternalFrameDetalleFormParametroCompra.jButtonGuardarCambiosToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroCompra"));
		
		
		
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxTiposAccionesFormularioParametroCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroCompra"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonidParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"idParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_empresaParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_empresaParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonsecuencial_pedidoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"secuencial_pedidoParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonsecuencial_cotizacionParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"secuencial_cotizacionParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonsecuencial_produccionParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"secuencial_produccionParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_documentoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documentoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_documentoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documentoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_movimientoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_movimientoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_bodegaParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_bodegaParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_bodega_reservaParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_reservaParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_bodega_reservaParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_reservaParametroCompraBusqueda"));
		//jButtonid_empleadoParametroCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoParametroCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_empleadoParametroCompra.addActionListener(new ButtonActionListener(this,"id_empleadoParametroCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_empleadoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_empleadoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_embarcadorParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_embarcadorParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_embarcadorParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_embarcadorParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtoncon_centro_costoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"con_centro_costoParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtontexto_mailParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"texto_mailParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_moduloParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_moduloParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_movimiento_moduloParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimiento_moduloParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_movimiento_moduloParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimiento_moduloParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtondescripcionParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_pedidoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formato_pedidoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_pedidoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_pedidoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_pendienteParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_pendienteParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_pendienteParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_pendienteParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_cotizacionParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formato_cotizacionParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_cotizacionParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_cotizacionParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_cotizadoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_cotizadoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_cotizadoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_cotizadoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_autorizacionParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formato_autorizacionParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_autorizacionParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_autorizacionParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_autorizadoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_autorizadoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_autorizadoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_autorizadoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_itemParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formato_itemParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_itemParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_itemParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_anuladoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_anuladoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_anuladoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_anuladoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_prioridad_pedidoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_prioridad_pedidoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_prioridad_pedidoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_prioridad_pedidoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_suspendidoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_suspendidoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_suspendidoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_suspendidoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_regularizadoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_regularizadoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_regularizadoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_regularizadoParametroCompraBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormParametroCompra.jTabbedPaneRelacionesParametroCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroCompra"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameParametroCompra"));
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroCompra"));
		}
		
		this.jTableDatosParametroCompra.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarParametroCompra"));
		
		this.jTableDatosParametroCompra.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarParametroCompra"));
		
		this.jButtonNuevoParametroCompra.addActionListener(new ButtonActionListener(this,"NuevoParametroCompra"));
		
		this.jButtonDuplicarParametroCompra.addActionListener(new ButtonActionListener(this,"DuplicarParametroCompra"));
		
		this.jButtonCopiarParametroCompra.addActionListener(new ButtonActionListener(this,"CopiarParametroCompra"));
		
		this.jButtonVerFormParametroCompra.addActionListener(new ButtonActionListener(this,"VerFormParametroCompra"));
		
		
		this.jButtonNuevoToolBarParametroCompra.addActionListener(new ButtonActionListener(this,"NuevoToolBarParametroCompra"));
			
		this.jButtonDuplicarToolBarParametroCompra.addActionListener(new ButtonActionListener(this,"DuplicarToolBarParametroCompra"));
			
		this.jMenuItemNuevoParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoParametroCompra"));
			
		this.jMenuItemDuplicarParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarParametroCompra"));		
		
		
		this.jButtonNuevoRelacionesParametroCompra.addActionListener (new ButtonActionListener(this,"NuevoRelacionesParametroCompra"));
		
		
		this.jButtonNuevoRelacionesToolBarParametroCompra.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarParametroCompra"));
			
		this.jMenuItemNuevoRelacionesParametroCompra.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesParametroCompra"));		
		
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCompra.jButtonModificarParametroCompra.addActionListener(new ButtonActionListener(this,"ModificarParametroCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCompra.jButtonModificarToolBarParametroCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroCompra"));
			
			this.jInternalFrameDetalleFormParametroCompra.jMenuItemModificarParametroCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormParametroCompra.jButtonActualizarParametroCompra.addActionListener (new ButtonActionListener(this,"ActualizarParametroCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCompra.jButtonActualizarToolBarParametroCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroCompra"));
				
			this.jInternalFrameDetalleFormParametroCompra.jMenuItemActualizarParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCompra.jButtonEliminarParametroCompra.addActionListener (new ButtonActionListener(this,"EliminarParametroCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCompra.jButtonEliminarToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroCompra"));
						
			this.jInternalFrameDetalleFormParametroCompra.jMenuItemEliminarParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCompra.jButtonCancelarParametroCompra.addActionListener (new ButtonActionListener(this,"CancelarParametroCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCompra.jButtonCancelarToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroCompra"));
			
			this.jInternalFrameDetalleFormParametroCompra.jMenuItemCancelarParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroCompra"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarParametroCompra"));		
		
		
		this.jButtonCerrarParametroCompra.addActionListener (new ButtonActionListener(this,"CerrarParametroCompra"));
		
		
		this.jButtonCerrarToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"CerrarToolBarParametroCompra"));
			
		this.jMenuItemCerrarParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemCerrarParametroCompra"));
			
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCompra.jMenuItemDetalleCerrarParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCompra.jButtonGuardarCambiosParametroCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosParametroCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCompra.jButtonGuardarCambiosToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroCompra"));
		}
		
		this.jButtonCopiarToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"CopiarToolBarParametroCompra"));
			
		this.jButtonVerFormToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"VerFormToolBarParametroCompra"));
		
		this.jMenuItemGuardarCambiosParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosParametroCompra"));
			
		this.jMenuItemCopiarParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemCopiarParametroCompra"));		
		
		this.jMenuItemVerFormParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemVerFormParametroCompra"));		
		
		
		this.jButtonGuardarCambiosTablaParametroCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroCompra"));
		
		
		this.jButtonGuardarCambiosTablaToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarParametroCompra"));
			
		this.jMenuItemGuardarCambiosTablaParametroCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroCompra"));		
		
		
		
		this.jButtonRecargarInformacionParametroCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionParametroCompra"));
					
		this.jButtonRecargarInformacionToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarParametroCompra"));
		
		this.jMenuItemRecargarInformacionParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionParametroCompra"));		
		
		
		
		this.jButtonAnterioresParametroCompra.addActionListener (new ButtonActionListener(this,"AnterioresParametroCompra"));
		
		
		this.jButtonAnterioresToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"AnterioresToolBarParametroCompra"));
		
		this.jMenuItemAnterioresParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresParametroCompra"));		
		
		
		this.jButtonSiguientesParametroCompra.addActionListener (new ButtonActionListener(this,"SiguientesParametroCompra"));
		
		
		this.jButtonSiguientesToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"SiguientesToolBarParametroCompra"));
			
		this.jMenuItemSiguientesParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesParametroCompra"));
			
		this.jMenuItemAbrirOrderByParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByParametroCompra"));
			
		this.jMenuItemMostrarOcultarParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarParametroCompra"));
			
		this.jMenuItemDetalleAbrirOrderByParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByParametroCompra"));
			
		this.jMenuItemDetalleMostarOcultarParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarParametroCompra"));		
		
		
		this.jButtonNuevoGuardarCambiosParametroCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosParametroCompra"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarParametroCompra"));
			
		this.jMenuItemNuevoGuardarCambiosParametroCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosParametroCompra"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosParametroCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosParametroCompra"));

		this.jCheckBoxSeleccionadosParametroCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionadosParametroCompra"));
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCompra.jComboBoxTiposAccionesFormularioParametroCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroCompra"));
		}
		
		
		this.jComboBoxTiposRelacionesParametroCompra.addActionListener (new ButtonActionListener(this,"TiposRelacionesParametroCompra"));
			
		this.jComboBoxTiposAccionesParametroCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesParametroCompra"));
					
		this.jComboBoxTiposSeleccionarParametroCompra.addActionListener (new ButtonActionListener(this,"TiposSeleccionarParametroCompra"));
			
		this.jTextFieldValorCampoGeneralParametroCompra.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralParametroCompra"));		
		
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonidParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"idParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_empresaParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_empresaParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonsecuencial_pedidoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"secuencial_pedidoParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonsecuencial_cotizacionParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"secuencial_cotizacionParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonsecuencial_produccionParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"secuencial_produccionParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_documentoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documentoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_documentoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documentoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_movimientoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_movimientoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_bodegaParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_bodegaParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_bodega_reservaParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_reservaParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_bodega_reservaParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_reservaParametroCompraBusqueda"));
		//jButtonid_empleadoParametroCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoParametroCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_empleadoParametroCompra.addActionListener(new ButtonActionListener(this,"id_empleadoParametroCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_empleadoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_empleadoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_embarcadorParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_embarcadorParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_embarcadorParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_embarcadorParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtoncon_centro_costoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"con_centro_costoParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtontexto_mailParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"texto_mailParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_moduloParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_moduloParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_movimiento_moduloParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimiento_moduloParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_movimiento_moduloParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimiento_moduloParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtondescripcionParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_pedidoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formato_pedidoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_pedidoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_pedidoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_pendienteParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_pendienteParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_pendienteParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_pendienteParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_cotizacionParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formato_cotizacionParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_cotizacionParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_cotizacionParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_cotizadoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_cotizadoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_cotizadoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_cotizadoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_autorizacionParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formato_autorizacionParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_autorizacionParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_autorizacionParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_autorizadoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_autorizadoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_autorizadoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_autorizadoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_itemParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formato_itemParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_itemParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_itemParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_anuladoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_anuladoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_anuladoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_anuladoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_prioridad_pedidoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_prioridad_pedidoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_prioridad_pedidoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_prioridad_pedidoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_suspendidoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_suspendidoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_suspendidoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_suspendidoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_regularizadoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_regularizadoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_regularizadoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_regularizadoParametroCompraBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdBodegaParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdBodegaParametroCompra"));

			this.jButtonFK_IdBodegaReservaParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdBodegaReservaParametroCompra"));

			this.jButtonFK_IdEmbarcadorParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEmbarcadorParametroCompra"));

			this.jButtonFK_IdEmpleadoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoParametroCompra"));

			this.jButtonBuscarFK_IdEmpleadoid_empleadoParametroCompra.addActionListener(new ButtonActionListener(this,"id_empleadoParametroCompra"));

			this.jButtonFK_IdEstadoPedidoAnuladoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoAnuladoParametroCompra"));

			this.jButtonFK_IdEstadoPedidoAutorizadoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoAutorizadoParametroCompra"));

			this.jButtonFK_IdEstadoPedidoCotizadoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoCotizadoParametroCompra"));

			this.jButtonFK_IdEstadoPedidoPendienteParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoPendienteParametroCompra"));

			this.jButtonFK_IdEstadoPedidoRegularizadoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoRegularizadoParametroCompra"));

			this.jButtonFK_IdEstadoPedidoSuspendoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoSuspendoParametroCompra"));

			this.jButtonFK_IdFormatoAutorizacionParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdFormatoAutorizacionParametroCompra"));

			this.jButtonFK_IdFormatoCotizacionParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdFormatoCotizacionParametroCompra"));

			this.jButtonFK_IdFormatoItemParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdFormatoItemParametroCompra"));

			this.jButtonFK_IdFormatoPedidoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdFormatoPedidoParametroCompra"));

			this.jButtonFK_IdPrioridadPedidoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdPrioridadPedidoParametroCompra"));

			this.jButtonFK_IdTipoDocumentoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoParametroCompra"));

			this.jButtonFK_IdTipoMovimientoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdTipoMovimientoParametroCompra"));

			this.jButtonFK_IdTipoMovimientoModuloParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdTipoMovimientoModuloParametroCompra"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoParametroCompra!=null) {
				this.jInternalFrameReporteDinamicoParametroCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroCompra"));
				this.jInternalFrameReporteDinamicoParametroCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroCompra"));
				this.jInternalFrameReporteDinamicoParametroCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroCompra"));
			}
			
			//this.jButtonCerrarReporteDinamicoParametroCompra.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroCompra"));				
			//this.jButtonGenerarReporteDinamicoParametroCompra.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroCompra"));
			//this.jButtonGenerarExcelReporteDinamicoParametroCompra.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroCompra"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionParametroCompra!=null) {
				this.jInternalFrameImportacionParametroCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroCompra"));
				this.jInternalFrameImportacionParametroCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroCompra"));
				this.jInternalFrameImportacionParametroCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroCompra"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByParametroCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByParametroCompra"));
			
			this.jButtonAbrirOrderByToolBarParametroCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarParametroCompra"));			
			
			if(this.jInternalFrameOrderByParametroCompra!=null) {
				this.jInternalFrameOrderByParametroCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroCompra"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormParametroCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCompra.jTabbedPaneRelacionesParametroCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroCompra"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameParametroCompra();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormParametroCompra.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormParametroCompra = (JInternalFrameBase)event.getSource();
	            	
	            ParametroCompraBeanSwingJInternalFrame jInternalFrameParent=(ParametroCompraBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroCompra.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarParametroCompraActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosParametroCompra.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosParametroCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosParametroCompra.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosParametroCompra.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoParametroCompra";
		inputMap = this.jButtonNuevoParametroCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoParametroCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroCompraActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesParametroCompra";
		inputMap = this.jButtonNuevoRelacionesParametroCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesParametroCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroCompraActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarParametroCompra";
		inputMap = this.jButtonModificarParametroCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarParametroCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarParametroCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarParametroCompra";
		inputMap = this.jButtonActualizarParametroCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarParametroCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarParametroCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarParametroCompra";
		inputMap = this.jButtonEliminarParametroCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarParametroCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarParametroCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarParametroCompra";
		inputMap = this.jButtonCancelarParametroCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarParametroCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarParametroCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarParametroCompra";
		inputMap = this.jButtonCerrarParametroCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarParametroCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarParametroCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormParametroCompra.jButtonGuardarCambiosParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosParametroCompra";
		inputMap = this.jInternalFrameDetalleFormParametroCompra.jButtonGuardarCambiosParametroCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormParametroCompra.jButtonGuardarCambiosParametroCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosParametroCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosParametroCompra.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosParametroCompraItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesParametroCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesParametroCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarParametroCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarParametroCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralParametroCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralParametroCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonidParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"idParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_empresaParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_empresaParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonsecuencial_pedidoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"secuencial_pedidoParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonsecuencial_cotizacionParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"secuencial_cotizacionParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonsecuencial_produccionParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"secuencial_produccionParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_documentoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documentoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_documentoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documentoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_movimientoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_movimientoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_bodegaParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_bodegaParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_bodega_reservaParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_reservaParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_bodega_reservaParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_reservaParametroCompraBusqueda"));
		//jButtonid_empleadoParametroCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoParametroCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_empleadoParametroCompra.addActionListener(new ButtonActionListener(this,"id_empleadoParametroCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_empleadoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_empleadoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_embarcadorParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_embarcadorParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_embarcadorParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_embarcadorParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtoncon_centro_costoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"con_centro_costoParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtontexto_mailParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"texto_mailParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_moduloParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_moduloParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_movimiento_moduloParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimiento_moduloParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_tipo_movimiento_moduloParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimiento_moduloParametroCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtondescripcionParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_pedidoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formato_pedidoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_pedidoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_pedidoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_pendienteParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_pendienteParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_pendienteParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_pendienteParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_cotizacionParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formato_cotizacionParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_cotizacionParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_cotizacionParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_cotizadoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_cotizadoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_cotizadoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_cotizadoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_autorizacionParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formato_autorizacionParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_autorizacionParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_autorizacionParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_autorizadoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_autorizadoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_autorizadoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_autorizadoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_itemParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formato_itemParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_formato_itemParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_itemParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_anuladoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_anuladoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_anuladoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_anuladoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_prioridad_pedidoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_prioridad_pedidoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_prioridad_pedidoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_prioridad_pedidoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_suspendidoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_suspendidoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_suspendidoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_suspendidoParametroCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_regularizadoParametroCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_regularizadoParametroCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCompra.jButtonid_estado_pedido_regularizadoParametroCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_regularizadoParametroCompraBusqueda"));
		
		
		this.jButtonFK_IdBodegaParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdBodegaParametroCompra"));

		this.jButtonFK_IdBodegaReservaParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdBodegaReservaParametroCompra"));

		this.jButtonFK_IdEmbarcadorParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEmbarcadorParametroCompra"));

		this.jButtonFK_IdEmpleadoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoParametroCompra"));

		this.jButtonBuscarFK_IdEmpleadoid_empleadoParametroCompra.addActionListener(new ButtonActionListener(this,"id_empleadoParametroCompra"));

		this.jButtonFK_IdEstadoPedidoAnuladoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoAnuladoParametroCompra"));

		this.jButtonFK_IdEstadoPedidoAutorizadoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoAutorizadoParametroCompra"));

		this.jButtonFK_IdEstadoPedidoCotizadoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoCotizadoParametroCompra"));

		this.jButtonFK_IdEstadoPedidoPendienteParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoPendienteParametroCompra"));

		this.jButtonFK_IdEstadoPedidoRegularizadoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoRegularizadoParametroCompra"));

		this.jButtonFK_IdEstadoPedidoSuspendoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoSuspendoParametroCompra"));

		this.jButtonFK_IdFormatoAutorizacionParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdFormatoAutorizacionParametroCompra"));

		this.jButtonFK_IdFormatoCotizacionParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdFormatoCotizacionParametroCompra"));

		this.jButtonFK_IdFormatoItemParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdFormatoItemParametroCompra"));

		this.jButtonFK_IdFormatoPedidoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdFormatoPedidoParametroCompra"));

		this.jButtonFK_IdPrioridadPedidoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdPrioridadPedidoParametroCompra"));

		this.jButtonFK_IdTipoDocumentoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoParametroCompra"));

		this.jButtonFK_IdTipoMovimientoParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdTipoMovimientoParametroCompra"));

		this.jButtonFK_IdTipoMovimientoModuloParametroCompra.addActionListener(new ButtonActionListener(this,"FK_IdTipoMovimientoModuloParametroCompra"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionParametroCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionParametroCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarParametroCompraActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarParametroCompra.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosParametroCompra(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(ParametroCompra parametrocompraAux:this.parametrocompraLogic.getParametroCompras()) {
					parametrocompraAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroCompra parametrocompraAux:parametrocompras) {
					parametrocompraAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosParametroCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroCompra parametrocompraAux:this.parametrocompraLogic.getParametroCompras()) {
						parametrocompraAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroCompra parametrocompraAux:parametrocompras) {
						parametrocompraAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(ParametroCompra parametrocompraAux:this.parametrocompraLogic.getParametroCompras()) {
					
						if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO)) {
							existe=true;
							parametrocompraAux.setcon_centro_costo(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroCompra parametrocompraAux:parametrocompras) {
						
						if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO)) {
							existe=true;
							parametrocompraAux.setcon_centro_costo(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaParametroCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosParametroCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosParametroCompra.getSelectedRows();
			
			ParametroCompra parametrocompraLocal=new ParametroCompra();
			
			//this.seleccionarTodosParametroCompra(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocompraLocal =(ParametroCompra) this.parametrocompraLogic.getParametroCompras().toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					parametrocompraLocal =(ParametroCompra) this.parametrocompras.toArray()[this.jTableDatosParametroCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				parametrocompraLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroCompra parametrocompraAux:this.parametrocompraLogic.getParametroCompras()) {
						parametrocompraAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroCompra parametrocompraAux:parametrocompras) {
						parametrocompraAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaParametroCompra(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualParametroCompraItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarParametroCompraParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralParametroCompraActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingParametroCompra(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralParametroCompra.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroCompra parametrocompraAux:this.parametrocompraLogic.getParametroCompras()) {
				
						if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO)) {
							existe=true;
							parametrocompraAux.setsecuencial_pedido(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION)) {
							existe=true;
							parametrocompraAux.setsecuencial_cotizacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION)) {
							existe=true;
							parametrocompraAux.setsecuencial_produccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL)) {
							existe=true;
							parametrocompraAux.settexto_mail(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							parametrocompraAux.setdescripcion(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroCompra parametrocompraAux:parametrocompras) {
					
						if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO)) {
							existe=true;
							parametrocompraAux.setsecuencial_pedido(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION)) {
							existe=true;
							parametrocompraAux.setsecuencial_cotizacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION)) {
							existe=true;
							parametrocompraAux.setsecuencial_produccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL)) {
							existe=true;
							parametrocompraAux.settexto_mail(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							parametrocompraAux.setdescripcion(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaParametroCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesParametroCompraActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingParametroCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioParametroCompra=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesParametroCompra.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormParametroCompra.jComboBoxTiposAccionesFormularioParametroCompra.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteParametroCompra) {				
					conSplash=true;//false;										
					
					//this.startProcessParametroCompra(conSplash);
				
					this.generarReporteParametroComprasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroCompra.jComboBoxTiposAccionesFormularioParametroCompra.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoParametroComprasSeleccionados();
				//this.jComboBoxTiposAccionesParametroCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroComprasSeleccionados(false);
				//this.jComboBoxTiposAccionesParametroCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroComprasSeleccionados(true);
				//this.jComboBoxTiposAccionesParametroCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroCompra();
				
				this.exportarParametroComprasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroCompra.jComboBoxTiposAccionesFormularioParametroCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionParametroCompras();
				//this.importarParametroCompras();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroCompra.jComboBoxTiposAccionesFormularioParametroCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroCompra();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelParametroComprasSeleccionados();
				//this.jComboBoxTiposAccionesParametroCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Parametro Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessParametroCompra();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoParametroCompra)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyParametroCompra(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Parametro Compra",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroCompra.jComboBoxTiposAccionesFormularioParametroCompra.setSelectedIndex(0);					
				}	
			} 			
			else if(ParametroCompraBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteParametroCompra) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessParametroCompra(conSplash);
					
						//this.actualizarParametrosGeneralParametroCompra();
						
						this.generarReporteProcesoAccionParametroComprasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesParametroCompra.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormParametroCompra.jComboBoxTiposAccionesFormularioParametroCompra.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(ParametroCompraBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Parametro CompraES SELECCIONADOS?", "MANTENIMIENTO DE Parametro Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessParametroCompra();
				
						this.actualizarParametrosGeneralParametroCompra();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.parametrocompraReturnGeneral=parametrocompraLogic.procesarAccionParametroComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.parametrocompraLogic.getParametroCompras(),this.parametrocompraParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarParametroCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroCompra.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxTiposAccionesFormularioParametroCompra.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralParametroCompra();
					
					ParametroCompraBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarParametroCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroCompra.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroCompra.jComboBoxTiposAccionesFormularioParametroCompra.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessParametroCompra(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesParametroCompraActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessParametroCompra();
			
			if(this.jInternalFrameDetalleFormParametroCompra==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<ParametroCompra> parametrocomprasSeleccionados=new ArrayList<ParametroCompra>();		
			ParametroCompra parametrocompra=new ParametroCompra();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingParametroCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesParametroCompra.getSelectedItem();
			
			
			
			
			parametrocomprasSeleccionados=this.getParametroComprasSeleccionados(true);
			//this.sTipoAccion;
			
			if(parametrocomprasSeleccionados.size()==1) {
				for(ParametroCompra parametrocompraAux:parametrocomprasSeleccionados) {
					parametrocompra=parametrocompraAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessParametroCompra();
			
      		//this.finishProcessParametroCompra(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarParametroCompraReturnGeneral() throws Exception {
		if(this.parametrocompraReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.parametrocompraReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.parametrocompraReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.parametrocompraReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.parametrocompraReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.parametrocompraReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingParametroCompra(false);
		}
		
		if(this.parametrocompraReturnGeneral.getConRetornoLista() || this.parametrocompraReturnGeneral.getConRetornoObjeto()) {
			if(this.parametrocompraReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrocompraLogic.setParametroCompras(this.parametrocompraReturnGeneral.getParametroCompras());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.parametrocompraReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrocompraLogic.setParametroCompra(this.parametrocompraReturnGeneral.getParametroCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingParametroCompra(false);
		}
	}
	
	public void actualizarParametrosGeneralParametroCompra() throws Exception {
		
		
	}
	
	public ArrayList<ParametroCompra> getParametroComprasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<ParametroCompra> parametrocomprasSeleccionados=new ArrayList<ParametroCompra>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioParametroCompra) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(ParametroCompra parametrocompraAux:parametrocompraLogic.getParametroCompras()) {
					if(parametrocompraAux.getIsSelected()) {
						parametrocomprasSeleccionados.add(parametrocompraAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroCompra parametrocompraAux:this.parametrocompras) {
					if(parametrocompraAux.getIsSelected()) {
						parametrocomprasSeleccionados.add(parametrocompraAux);				
					}
				}
			}
			
			if(parametrocomprasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						parametrocomprasSeleccionados.addAll(this.parametrocompraLogic.getParametroCompras());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						parametrocomprasSeleccionados.addAll(this.parametrocompras);				
					}
				}
			}
		} else {
			parametrocomprasSeleccionados.add(this.parametrocompra);
		}
		
		return parametrocomprasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteParametroComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalParametroComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoParametroComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroComprasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroComprasSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Parametro Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesParametroComprasSeleccionados() throws Exception {
		ArrayList<ParametroCompra> parametrocomprasSeleccionados=new ArrayList<ParametroCompra>();		
		
		parametrocomprasSeleccionados=this.getParametroComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteParametroCompras("Todos",parametrocomprasSeleccionados);
		
	}	
	
	public void generarReporteNormalParametroComprasSeleccionados() throws Exception {
		ArrayList<ParametroCompra> parametrocomprasSeleccionados=new ArrayList<ParametroCompra>();		
		
		parametrocomprasSeleccionados=this.getParametroComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteParametroCompras("Todos",parametrocomprasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionParametroComprasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<ParametroCompra> parametrocomprasSeleccionados=new ArrayList<ParametroCompra>();
		
		parametrocomprasSeleccionados=this.getParametroComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteParametroCompras("Todos",parametrocomprasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoParametroComprasSeleccionados() throws Exception {
		ArrayList<ParametroCompra> parametrocomprasSeleccionados=new ArrayList<ParametroCompra>();		
		
		
		this.abrirInicializarFrameReporteDinamicoParametroCompra();
		
		
		parametrocomprasSeleccionados=this.getParametroComprasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoParametroCompra();
		
		
		//this.generarReporteParametroCompras("Todos",parametrocomprasSeleccionados ,parametrocompraImplementable,parametrocompraImplementableHome);
	}
	
	public void mostrarImportacionParametroCompras() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionParametroCompra();
		
		this.abrirFrameImportacionParametroCompra();		
		
			
		//this.generarReporteParametroCompras("Todos",parametrocomprasSeleccionados ,parametrocompraImplementable,parametrocompraImplementableHome);
	}
	
	public void importarParametroCompras() throws Exception {		
	
	}
	
	public void exportarParametroComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelParametroComprasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoParametroComprasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlParametroComprasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Parametro Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoParametroComprasSeleccionados() throws Exception {
		ArrayList<ParametroCompra> parametrocomprasSeleccionados=new ArrayList<ParametroCompra>();		
		
		parametrocomprasSeleccionados=this.getParametroComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrocompra."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarParametroCompra(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(ParametroCompra parametrocompraAux:parametrocomprasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarParametroCompra(parametrocompraAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//parametrocompraAux.setsDetalleGeneralEntityReporte(parametrocompraAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarParametroCompra(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDTIPODOCUMENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDBODEGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDBODEGARESERVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDEMBARCADOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDFORMATOPEDIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOPENDIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDFORMATOCOTIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOTIZADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDFORMATOAUTORIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOAUTORIZADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDFORMATOITEM;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOANULADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDPRIORIDADPEDIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOSUSPENDIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOREGULARIZADO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarParametroCompra(ParametroCompra parametrocompra,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=parametrocompra.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getsecuencial_pedido();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getsecuencial_cotizacion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getsecuencial_produccion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.gettipodocumento_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.gettipomovimiento_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getbodega_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getbodegareserva_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getembarcador_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getcon_centro_costo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.gettexto_mail();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.gettipomovimientomodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getformatopedido_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getestadopedidopendiente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getformatocotizacion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getestadopedidocotizado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getformatoautorizacion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getestadopedidoautorizado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getformatoitem_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getestadopedidoanulado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getprioridadpedido_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getestadopedidosuspendido_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocompra.getestadopedidoregularizado_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelParametroComprasSeleccionados() throws Exception {
		ArrayList<ParametroCompra> parametrocomprasSeleccionados=new ArrayList<ParametroCompra>();		
		
		parametrocomprasSeleccionados=this.getParametroComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrocompra.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("ParametroCompras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelParametroCompra(row);				
				iRow++;
			}				
			
			for(ParametroCompra parametrocompraAux:parametrocomprasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelParametroCompra(parametrocompraAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlParametroComprasSeleccionados() throws Exception {
		ArrayList<ParametroCompra> parametrocomprasSeleccionados=new ArrayList<ParametroCompra>();		
		
		parametrocomprasSeleccionados=this.getParametroComprasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrocompra.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("parametrocompras");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("parametrocompra");
			//elementRoot.appendChild(element);
		
			for(ParametroCompra parametrocompraAux:parametrocomprasSeleccionados) {
				element = document.createElement("parametrocompra");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlParametroCompra(parametrocompraAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelParametroCompra(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDTIPODOCUMENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDBODEGA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDBODEGARESERVA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDEMBARCADOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDFORMATOPEDIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOPENDIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDFORMATOCOTIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOTIZADO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDFORMATOAUTORIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOAUTORIZADO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDFORMATOITEM);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOANULADO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDPRIORIDADPEDIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOSUSPENDIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOREGULARIZADO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelParametroCompra(ParametroCompra parametrocompra,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getsecuencial_pedido());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getsecuencial_cotizacion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getsecuencial_produccion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.gettipodocumento_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.gettipomovimiento_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getbodega_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getbodegareserva_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getembarcador_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getcon_centro_costo());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.gettexto_mail());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.gettipomovimientomodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getformatopedido_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getestadopedidopendiente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getformatocotizacion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getestadopedidocotizado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getformatoautorizacion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getestadopedidoautorizado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getformatoitem_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getestadopedidoanulado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getprioridadpedido_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getestadopedidosuspendido_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocompra.getestadopedidoregularizado_descripcion());				
	}
	
	public void setFilaDatosExportarXmlParametroCompra(ParametroCompra parametrocompra,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(ParametroCompraConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(parametrocompra.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(ParametroCompraConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(parametrocompra.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(parametrocompra.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsecuencial_pedido = document.createElement(ParametroCompraConstantesFunciones.SECUENCIALPEDIDO);
		elementsecuencial_pedido.appendChild(document.createTextNode(parametrocompra.getsecuencial_pedido().trim()));
		element.appendChild(elementsecuencial_pedido);

		Element elementsecuencial_cotizacion = document.createElement(ParametroCompraConstantesFunciones.SECUENCIALCOTIZACION);
		elementsecuencial_cotizacion.appendChild(document.createTextNode(parametrocompra.getsecuencial_cotizacion().trim()));
		element.appendChild(elementsecuencial_cotizacion);

		Element elementsecuencial_produccion = document.createElement(ParametroCompraConstantesFunciones.SECUENCIALPRODUCCION);
		elementsecuencial_produccion.appendChild(document.createTextNode(parametrocompra.getsecuencial_produccion().trim()));
		element.appendChild(elementsecuencial_produccion);

		Element elementtipodocumento_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDTIPODOCUMENTO);
		elementtipodocumento_descripcion.appendChild(document.createTextNode(parametrocompra.gettipodocumento_descripcion()));
		element.appendChild(elementtipodocumento_descripcion);

		Element elementtipomovimiento_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDTIPOMOVIMIENTO);
		elementtipomovimiento_descripcion.appendChild(document.createTextNode(parametrocompra.gettipomovimiento_descripcion()));
		element.appendChild(elementtipomovimiento_descripcion);

		Element elementbodega_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDBODEGA);
		elementbodega_descripcion.appendChild(document.createTextNode(parametrocompra.getbodega_descripcion()));
		element.appendChild(elementbodega_descripcion);

		Element elementbodegareserva_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDBODEGARESERVA);
		elementbodegareserva_descripcion.appendChild(document.createTextNode(parametrocompra.getbodegareserva_descripcion()));
		element.appendChild(elementbodegareserva_descripcion);

		Element elementempleado_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDEMPLEADO);
		elementempleado_descripcion.appendChild(document.createTextNode(parametrocompra.getempleado_descripcion()));
		element.appendChild(elementempleado_descripcion);

		Element elementembarcador_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDEMBARCADOR);
		elementembarcador_descripcion.appendChild(document.createTextNode(parametrocompra.getembarcador_descripcion()));
		element.appendChild(elementembarcador_descripcion);

		Element elementcon_centro_costo = document.createElement(ParametroCompraConstantesFunciones.CONCENTROCOSTO);
		elementcon_centro_costo.appendChild(document.createTextNode(parametrocompra.getcon_centro_costo().toString().trim()));
		element.appendChild(elementcon_centro_costo);

		Element elementtexto_mail = document.createElement(ParametroCompraConstantesFunciones.TEXTOMAIL);
		elementtexto_mail.appendChild(document.createTextNode(parametrocompra.gettexto_mail().trim()));
		element.appendChild(elementtexto_mail);

		Element elementmodulo_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDMODULO);
		elementmodulo_descripcion.appendChild(document.createTextNode(parametrocompra.getmodulo_descripcion()));
		element.appendChild(elementmodulo_descripcion);

		Element elementtipomovimientomodulo_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDTIPOMOVIMIENTOMODULO);
		elementtipomovimientomodulo_descripcion.appendChild(document.createTextNode(parametrocompra.gettipomovimientomodulo_descripcion()));
		element.appendChild(elementtipomovimientomodulo_descripcion);

		Element elementdescripcion = document.createElement(ParametroCompraConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(parametrocompra.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementformatopedido_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDFORMATOPEDIDO);
		elementformatopedido_descripcion.appendChild(document.createTextNode(parametrocompra.getformatopedido_descripcion()));
		element.appendChild(elementformatopedido_descripcion);

		Element elementestadopedidopendiente_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDESTADOPEDIDOPENDIENTE);
		elementestadopedidopendiente_descripcion.appendChild(document.createTextNode(parametrocompra.getestadopedidopendiente_descripcion()));
		element.appendChild(elementestadopedidopendiente_descripcion);

		Element elementformatocotizacion_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDFORMATOCOTIZACION);
		elementformatocotizacion_descripcion.appendChild(document.createTextNode(parametrocompra.getformatocotizacion_descripcion()));
		element.appendChild(elementformatocotizacion_descripcion);

		Element elementestadopedidocotizado_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDESTADOPEDIDOCOTIZADO);
		elementestadopedidocotizado_descripcion.appendChild(document.createTextNode(parametrocompra.getestadopedidocotizado_descripcion()));
		element.appendChild(elementestadopedidocotizado_descripcion);

		Element elementformatoautorizacion_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDFORMATOAUTORIZACION);
		elementformatoautorizacion_descripcion.appendChild(document.createTextNode(parametrocompra.getformatoautorizacion_descripcion()));
		element.appendChild(elementformatoautorizacion_descripcion);

		Element elementestadopedidoautorizado_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDESTADOPEDIDOAUTORIZADO);
		elementestadopedidoautorizado_descripcion.appendChild(document.createTextNode(parametrocompra.getestadopedidoautorizado_descripcion()));
		element.appendChild(elementestadopedidoautorizado_descripcion);

		Element elementformatoitem_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDFORMATOITEM);
		elementformatoitem_descripcion.appendChild(document.createTextNode(parametrocompra.getformatoitem_descripcion()));
		element.appendChild(elementformatoitem_descripcion);

		Element elementestadopedidoanulado_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDESTADOPEDIDOANULADO);
		elementestadopedidoanulado_descripcion.appendChild(document.createTextNode(parametrocompra.getestadopedidoanulado_descripcion()));
		element.appendChild(elementestadopedidoanulado_descripcion);

		Element elementprioridadpedido_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDPRIORIDADPEDIDO);
		elementprioridadpedido_descripcion.appendChild(document.createTextNode(parametrocompra.getprioridadpedido_descripcion()));
		element.appendChild(elementprioridadpedido_descripcion);

		Element elementestadopedidosuspendido_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDESTADOPEDIDOSUSPENDIDO);
		elementestadopedidosuspendido_descripcion.appendChild(document.createTextNode(parametrocompra.getestadopedidosuspendido_descripcion()));
		element.appendChild(elementestadopedidosuspendido_descripcion);

		Element elementestadopedidoregularizado_descripcion = document.createElement(ParametroCompraConstantesFunciones.IDESTADOPEDIDOREGULARIZADO);
		elementestadopedidoregularizado_descripcion.appendChild(document.createTextNode(parametrocompra.getestadopedidoregularizado_descripcion()));
		element.appendChild(elementestadopedidoregularizado_descripcion);
	}
	
	public void generarReporteGroupGenericoParametroComprasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<ParametroCompra> parametrocomprasSeleccionados=new ArrayList<ParametroCompra>();
		
		parametrocomprasSeleccionados=this.getParametroComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoParametroCompra(parametrocomprasSeleccionados);
		
		this.generarReporteParametroCompras("Todos",parametrocomprasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoParametroCompra(ArrayList<ParametroCompra> parametrocomprasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(ParametroCompra parametrocompraAux:parametrocomprasSeleccionados) {
				parametrocompraAux.setsDetalleGeneralEntityReporte(parametrocompraAux.toString());
			
				if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_SECUENCIALPEDIDO)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getsecuencial_pedido());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_SECUENCIALCOTIZACION)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getsecuencial_cotizacion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_SECUENCIALPRODUCCION)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getsecuencial_produccion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDTIPODOCUMENTO)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.gettipodocumento_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTO)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.gettipomovimiento_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDBODEGA)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getbodega_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDBODEGARESERVA)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getbodegareserva_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDEMPLEADO)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDEMBARCADOR)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getembarcador_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_CONCENTROCOSTO)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrocompraAux.getcon_centro_costo()));
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_TEXTOMAIL)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.gettexto_mail());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDMODULO)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.gettipomovimientomodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDFORMATOPEDIDO)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getformatopedido_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOPENDIENTE)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getestadopedidopendiente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDFORMATOCOTIZACION)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getformatocotizacion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOTIZADO)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getestadopedidocotizado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDFORMATOAUTORIZACION)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getformatoautorizacion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOAUTORIZADO)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getestadopedidoautorizado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDFORMATOITEM)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getformatoitem_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOANULADO)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getestadopedidoanulado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDPRIORIDADPEDIDO)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getprioridadpedido_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOSUSPENDIDO)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getestadopedidosuspendido_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCompraConstantesFunciones.LABEL_IDESTADOPEDIDOREGULARIZADO)) {
					existe=true;
					parametrocompraAux.setsDescripcionGeneralEntityReporte1(parametrocompraAux.getestadopedidoregularizado_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesParametroCompra(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoParametroCompra=true;
				this.isVisibilidadCeldaNuevoRelacionesParametroCompra=true;
				this.isVisibilidadCeldaGuardarCambiosParametroCompra=true;
			}
			
			this.isVisibilidadCeldaModificarParametroCompra=false;
			this.isVisibilidadCeldaActualizarParametroCompra=false;
			this.isVisibilidadCeldaEliminarParametroCompra=false;
			this.isVisibilidadCeldaCancelarParametroCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroCompra=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoParametroCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroCompra=false;
			this.isVisibilidadCeldaGuardarCambiosParametroCompra=false;
			this.isVisibilidadCeldaModificarParametroCompra=false;
			this.isVisibilidadCeldaActualizarParametroCompra=true;
			this.isVisibilidadCeldaEliminarParametroCompra=false;
			this.isVisibilidadCeldaCancelarParametroCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroCompra=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoParametroCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroCompra=false;
			this.isVisibilidadCeldaGuardarCambiosParametroCompra=false;
			this.isVisibilidadCeldaModificarParametroCompra=false;
			this.isVisibilidadCeldaActualizarParametroCompra=true;
			this.isVisibilidadCeldaEliminarParametroCompra=true;
			this.isVisibilidadCeldaCancelarParametroCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroCompra=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoParametroCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroCompra=false;
			this.isVisibilidadCeldaGuardarCambiosParametroCompra=false;
			this.isVisibilidadCeldaModificarParametroCompra=false;
			this.isVisibilidadCeldaActualizarParametroCompra=true;
			this.isVisibilidadCeldaEliminarParametroCompra=false;
			this.isVisibilidadCeldaCancelarParametroCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroCompra=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoParametroCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroCompra=true;
			this.isVisibilidadCeldaGuardarCambiosParametroCompra=true;
			this.isVisibilidadCeldaModificarParametroCompra=false;
			this.isVisibilidadCeldaActualizarParametroCompra=false;
			this.isVisibilidadCeldaEliminarParametroCompra=false;
			this.isVisibilidadCeldaCancelarParametroCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroCompra=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoParametroCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroCompra=false;
			this.isVisibilidadCeldaGuardarCambiosParametroCompra=false;
			this.isVisibilidadCeldaActualizarParametroCompra=false;
			this.isVisibilidadCeldaEliminarParametroCompra=false;
			this.isVisibilidadCeldaCancelarParametroCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroCompra=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoParametroCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroCompra=false;
			this.isVisibilidadCeldaGuardarCambiosParametroCompra=false;
			this.isVisibilidadCeldaModificarParametroCompra=true;
			this.isVisibilidadCeldaActualizarParametroCompra=false;
			this.isVisibilidadCeldaEliminarParametroCompra=false;
			this.isVisibilidadCeldaCancelarParametroCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroCompra=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(ParametroCompraJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoParametroCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroCompra=true;
			this.isVisibilidadCeldaGuardarCambiosParametroCompra=true;
		} else {
			this.actualizarEstadoPanelsParametroCompra(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarParametroCompra=false;
			//this.isVisibilidadCeldaVerFormParametroCompra=false;
			this.isVisibilidadCeldaDuplicarParametroCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!parametrocompraSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesParametroCompra=false;
		} else {
			this.isVisibilidadCeldaNuevoParametroCompra=false;
			this.isVisibilidadCeldaGuardarCambiosParametroCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(parametrocompraSessionBean.getEsGuardarRelacionado()) {
			if(!parametrocompraSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesParametroCompra=false;												
			}
			
			this.jButtonCerrarParametroCompra.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesParametroCompra=false;
		}
		
		if(!this.permiteMantenimiento(this.parametrocompra)) {
			this.isVisibilidadCeldaActualizarParametroCompra=false;
			this.isVisibilidadCeldaEliminarParametroCompra=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesParametroCompra() {
	}
	
	public void actualizarEstadoPanelsParametroCompra(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionParametroCompra!=null) {
				this.jScrollPanelDatosEdicionParametroCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCompra!=null) {
				this.jTabbedPaneBusquedasParametroCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroCompra!=null) {
				this.jScrollPanelDatosParametroCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroCompra!=null) {
				this.jPanelPaginacionParametroCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroCompra!=null) {
				this.jPanelParametrosReportesParametroCompra.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionParametroCompra!=null) {
				this.jScrollPanelDatosEdicionParametroCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCompra!=null) {
				this.jTabbedPaneBusquedasParametroCompra.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosParametroCompra!=null) {
				this.jScrollPanelDatosParametroCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroCompra!=null) {
				this.jPanelPaginacionParametroCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroCompra!=null) {
				this.jPanelParametrosReportesParametroCompra.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionParametroCompra!=null) {
				this.jScrollPanelDatosEdicionParametroCompra.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCompra!=null) {
				this.jTabbedPaneBusquedasParametroCompra.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroCompra!=null) {
				this.jScrollPanelDatosParametroCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroCompra!=null) {
				this.jPanelPaginacionParametroCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroCompra!=null) {
				this.jPanelParametrosReportesParametroCompra.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionParametroCompra!=null) {
				this.jScrollPanelDatosEdicionParametroCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCompra!=null) {
				this.jTabbedPaneBusquedasParametroCompra.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroCompra!=null) {
				this.jScrollPanelDatosParametroCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroCompra!=null) {
				this.jPanelPaginacionParametroCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroCompra!=null) {
				this.jPanelParametrosReportesParametroCompra.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionParametroCompra!=null) {
				this.jScrollPanelDatosEdicionParametroCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCompra!=null) {
				this.jTabbedPaneBusquedasParametroCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroCompra!=null) {
				this.jScrollPanelDatosParametroCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroCompra!=null) {
				this.jPanelPaginacionParametroCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroCompra!=null) {
				this.jPanelParametrosReportesParametroCompra.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionParametroCompra!=null) {
				this.jScrollPanelDatosEdicionParametroCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCompra!=null) {
				this.jTabbedPaneBusquedasParametroCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroCompra!=null) {
				this.jScrollPanelDatosParametroCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroCompra!=null) {
				this.jPanelPaginacionParametroCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroCompra!=null) {
				this.jPanelParametrosReportesParametroCompra.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionParametroCompra!=null) {
				this.jScrollPanelDatosEdicionParametroCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCompra!=null) {
				this.jTabbedPaneBusquedasParametroCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroCompra!=null) {
				this.jScrollPanelDatosParametroCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroCompra!=null) {
				this.jPanelPaginacionParametroCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroCompra!=null) {
				this.jPanelParametrosReportesParametroCompra.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasParametroCompra!=null) {
					this.jTabbedPaneBusquedasParametroCompra.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesParametroCompra!=null) {
				this.jPanelParametrosReportesParametroCompra.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.parametrocompraSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCompra!=null) {
				this.jTabbedPaneBusquedasParametroCompra.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesParametroCompra!=null) {
				this.jPanelParametrosReportesParametroCompra.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdBodega=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDocumento(Boolean isParaTipoDocumento){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDocumentoNegation=!isParaTipoDocumento;

			this.isVisibilidadFK_IdBodega=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaTipoDocumento;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoMovimiento(Boolean isParaTipoMovimiento){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoMovimientoNegation=!isParaTipoMovimiento;

			this.isVisibilidadFK_IdBodega=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaTipoMovimiento;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodega(Boolean isParaBodega){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaNegation=!isParaBodega;

			this.isVisibilidadFK_IdBodega=isParaBodega;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodegaReserva(Boolean isParaBodegaReserva){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaReservaNegation=!isParaBodegaReserva;

			this.isVisibilidadFK_IdBodega=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaBodegaReserva;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaBodegaReservaNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleado(Boolean isParaEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoNegation=!isParaEmpleado;

			this.isVisibilidadFK_IdBodega=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpleado;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmbarcador(Boolean isParaEmbarcador){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmbarcadorNegation=!isParaEmbarcador;

			this.isVisibilidadFK_IdBodega=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaEmbarcador;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaEmbarcadorNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaModulo(Boolean isParaModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaModuloNegation=!isParaModulo;

			this.isVisibilidadFK_IdBodega=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoMovimientoModulo(Boolean isParaTipoMovimientoModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoMovimientoModuloNegation=!isParaTipoMovimientoModulo;

			this.isVisibilidadFK_IdBodega=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaTipoMovimientoModulo;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormatoPedido(Boolean isParaFormatoPedido){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoPedidoNegation=!isParaFormatoPedido;

			this.isVisibilidadFK_IdBodega=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaFormatoPedido;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaFormatoPedidoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoPedidoPendiente(Boolean isParaEstadoPedidoPendiente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoPedidoPendienteNegation=!isParaEstadoPedidoPendiente;

			this.isVisibilidadFK_IdBodega=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaEstadoPedidoPendiente;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaEstadoPedidoPendienteNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormatoCotizacion(Boolean isParaFormatoCotizacion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoCotizacionNegation=!isParaFormatoCotizacion;

			this.isVisibilidadFK_IdBodega=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaFormatoCotizacion;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaFormatoCotizacionNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoPedidoCotizado(Boolean isParaEstadoPedidoCotizado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoPedidoCotizadoNegation=!isParaEstadoPedidoCotizado;

			this.isVisibilidadFK_IdBodega=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaEstadoPedidoCotizado;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaEstadoPedidoCotizadoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormatoAutorizacion(Boolean isParaFormatoAutorizacion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoAutorizacionNegation=!isParaFormatoAutorizacion;

			this.isVisibilidadFK_IdBodega=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaFormatoAutorizacion;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaFormatoAutorizacionNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoPedidoAutorizado(Boolean isParaEstadoPedidoAutorizado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoPedidoAutorizadoNegation=!isParaEstadoPedidoAutorizado;

			this.isVisibilidadFK_IdBodega=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaEstadoPedidoAutorizado;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaEstadoPedidoAutorizadoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormatoItem(Boolean isParaFormatoItem){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoItemNegation=!isParaFormatoItem;

			this.isVisibilidadFK_IdBodega=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaFormatoItem;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaFormatoItemNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoPedidoAnulado(Boolean isParaEstadoPedidoAnulado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoPedidoAnuladoNegation=!isParaEstadoPedidoAnulado;

			this.isVisibilidadFK_IdBodega=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaEstadoPedidoAnulado;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaEstadoPedidoAnuladoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaPrioridadPedido(Boolean isParaPrioridadPedido){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPrioridadPedidoNegation=!isParaPrioridadPedido;

			this.isVisibilidadFK_IdBodega=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaPrioridadPedido;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaPrioridadPedidoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoPedidoSuspendido(Boolean isParaEstadoPedidoSuspendido){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoPedidoSuspendidoNegation=!isParaEstadoPedidoSuspendido;

			this.isVisibilidadFK_IdBodega=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaEstadoPedidoSuspendido;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaEstadoPedidoSuspendidoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoPedidoRegularizado(Boolean isParaEstadoPedidoRegularizado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoPedidoRegularizadoNegation=!isParaEstadoPedidoRegularizado;

			this.isVisibilidadFK_IdBodega=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaParametroCompra);}

			this.isVisibilidadFK_IdBodegaReserva=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdBodegaReserva) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdBodegaReservaParametroCompra);}

			this.isVisibilidadFK_IdEmbarcador=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdEmbarcador) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmbarcadorParametroCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEmpleadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAnulado=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAnulado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAnuladoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoAutorizado=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoAutorizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCotizado=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCotizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoCotizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoPendiente=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoPendiente) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoPendienteParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoRegularizado=isParaEstadoPedidoRegularizado;
			if(!this.isVisibilidadFK_IdEstadoPedidoRegularizado) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);}

			this.isVisibilidadFK_IdEstadoPedidoSuspendo=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoSuspendo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdEstadoPedidoSuspendoParametroCompra);}

			this.isVisibilidadFK_IdFormatoAutorizacion=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdFormatoAutorizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoAutorizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoCotizacion=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdFormatoCotizacion) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoCotizacionParametroCompra);}

			this.isVisibilidadFK_IdFormatoItem=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdFormatoItem) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoItemParametroCompra);}

			this.isVisibilidadFK_IdFormatoPedido=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdFormatoPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdFormatoPedidoParametroCompra);}

			this.isVisibilidadFK_IdPrioridadPedido=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdPrioridadPedido) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdPrioridadPedidoParametroCompra);}

			this.isVisibilidadFK_IdTipoDocumento=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoDocumentoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoParametroCompra);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaEstadoPedidoRegularizadoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasParametroCompra.remove(jPanelFK_IdTipoMovimientoModuloParametroCompra);}
		}
		
	}
	
	
	
	

	public String registrarSesionParametroCompraParaBusquedaEmpleados() throws Exception {
		Boolean isPaginaPopupEmpleado=false;

		try {

			if(parametrocompraSessionBean==null) {
				parametrocompraSessionBean=new ParametroCompraSessionBean();
			}

			if(empleadoSessionBean==null) {
				empleadoSessionBean=new EmpleadoSessionBean();
			}

			empleadoSessionBean.setsPathNavegacionActual(parametrocompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoConstantesFunciones.SCLASSWEBTITULO);
			empleadoSessionBean.setisPermiteRecargarInformacion(false);
			empleadoSessionBean.setisPaginaPopup(true);
			isPaginaPopupEmpleado=empleadoSessionBean.getisPaginaPopup();
			empleadoSessionBean.setisPaginaPopup(false);
			empleadoSessionBean.setEstaModoBusqueda(true);
			empleadoSessionBean.setsFuncionBusquedaRapida("window.opener.parametrocompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_empleado(TO_REPLACE);");
			empleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleado(true);
			empleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleado(ParametroCompraConstantesFunciones.SNOMBREOPCION);
			//empleadoSessionBean.setisBusquedaDesdeForeignKeySesionParametroCompra(true);
			//empleadoSessionBean.setlidParametroCompraActual(this.idParametroCompraActual);

			parametrocompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroCompra(true);
			parametrocompraSessionBean.setlIdParametroCompraActualForeignKey(this.idParametroCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//ParametroCompraSessionBean parametrocompraSessionBean=new ParametroCompraSessionBean();
		
		if(this.parametrocompraSessionBean==null) {
			this.parametrocompraSessionBean=new ParametroCompraSessionBean();
		}
		
		this.parametrocompraSessionBean.setsUltimaBusquedaParametroCompra(this.getsAccionBusqueda());
		this.parametrocompraSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.parametrocompraSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
			parametrocompraSessionBean.setid_bodega(this.getid_bodegaFK_IdBodega());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdBodegaReserva")) {
			parametrocompraSessionBean.setid_bodega_reserva(this.getid_bodega_reservaFK_IdBodegaReserva());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmbarcador")) {
			parametrocompraSessionBean.setid_embarcador(this.getid_embarcadorFK_IdEmbarcador());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
			parametrocompraSessionBean.setid_empleado(this.getid_empleadoFK_IdEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			parametrocompraSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoAnulado")) {
			parametrocompraSessionBean.setid_estado_pedido_anulado(this.getid_estado_pedido_anuladoFK_IdEstadoPedidoAnulado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoAutorizado")) {
			parametrocompraSessionBean.setid_estado_pedido_autorizado(this.getid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoCotizado")) {
			parametrocompraSessionBean.setid_estado_pedido_cotizado(this.getid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoPendiente")) {
			parametrocompraSessionBean.setid_estado_pedido_pendiente(this.getid_estado_pedido_pendienteFK_IdEstadoPedidoPendiente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoRegularizado")) {
			parametrocompraSessionBean.setid_estado_pedido_regularizado(this.getid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoSuspendo")) {
			parametrocompraSessionBean.setid_estado_pedido_suspendido(this.getid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFormatoAutorizacion")) {
			parametrocompraSessionBean.setid_formato_autorizacion(this.getid_formato_autorizacionFK_IdFormatoAutorizacion());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFormatoCotizacion")) {
			parametrocompraSessionBean.setid_formato_cotizacion(this.getid_formato_cotizacionFK_IdFormatoCotizacion());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFormatoItem")) {
			parametrocompraSessionBean.setid_formato_item(this.getid_formato_itemFK_IdFormatoItem());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFormatoPedido")) {
			parametrocompraSessionBean.setid_formato_pedido(this.getid_formato_pedidoFK_IdFormatoPedido());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
			parametrocompraSessionBean.setid_modulo(this.getid_moduloFK_IdModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPrioridadPedido")) {
			parametrocompraSessionBean.setid_prioridad_pedido(this.getid_prioridad_pedidoFK_IdPrioridadPedido());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumento")) {
			parametrocompraSessionBean.setid_tipo_documento(this.getid_tipo_documentoFK_IdTipoDocumento());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoMovimiento")) {
			parametrocompraSessionBean.setid_tipo_movimiento(this.getid_tipo_movimientoFK_IdTipoMovimiento());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoMovimientoModulo")) {
			parametrocompraSessionBean.setid_tipo_movimiento_modulo(this.getid_tipo_movimiento_moduloFK_IdTipoMovimientoModulo());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//ParametroCompraSessionBean parametrocompraSessionBean=new ParametroCompraSessionBean();
		
		if(this.parametrocompraSessionBean==null) {
			this.parametrocompraSessionBean=new ParametroCompraSessionBean();
		}
		
		if(this.parametrocompraSessionBean.getsUltimaBusquedaParametroCompra()!=null&&!this.parametrocompraSessionBean.getsUltimaBusquedaParametroCompra().equals("")) {
			this.setsAccionBusqueda(parametrocompraSessionBean.getsUltimaBusquedaParametroCompra());
			this.setiNumeroPaginacion(parametrocompraSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(parametrocompraSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
				this.setid_bodegaFK_IdBodega(parametrocompraSessionBean.getid_bodega());
				parametrocompraSessionBean.setid_bodega(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdBodegaReserva")) {
				this.setid_bodega_reservaFK_IdBodegaReserva(parametrocompraSessionBean.getid_bodega_reserva());
				parametrocompraSessionBean.setid_bodega_reserva(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmbarcador")) {
				this.setid_embarcadorFK_IdEmbarcador(parametrocompraSessionBean.getid_embarcador());
				parametrocompraSessionBean.setid_embarcador(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
				this.setid_empleadoFK_IdEmpleado(parametrocompraSessionBean.getid_empleado());
				parametrocompraSessionBean.setid_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(parametrocompraSessionBean.getid_empresa());
				parametrocompraSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoAnulado")) {
				this.setid_estado_pedido_anuladoFK_IdEstadoPedidoAnulado(parametrocompraSessionBean.getid_estado_pedido_anulado());
				parametrocompraSessionBean.setid_estado_pedido_anulado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoAutorizado")) {
				this.setid_estado_pedido_autorizadoFK_IdEstadoPedidoAutorizado(parametrocompraSessionBean.getid_estado_pedido_autorizado());
				parametrocompraSessionBean.setid_estado_pedido_autorizado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoCotizado")) {
				this.setid_estado_pedido_cotizadoFK_IdEstadoPedidoCotizado(parametrocompraSessionBean.getid_estado_pedido_cotizado());
				parametrocompraSessionBean.setid_estado_pedido_cotizado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoPendiente")) {
				this.setid_estado_pedido_pendienteFK_IdEstadoPedidoPendiente(parametrocompraSessionBean.getid_estado_pedido_pendiente());
				parametrocompraSessionBean.setid_estado_pedido_pendiente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoRegularizado")) {
				this.setid_estado_pedido_regularizadoFK_IdEstadoPedidoRegularizado(parametrocompraSessionBean.getid_estado_pedido_regularizado());
				parametrocompraSessionBean.setid_estado_pedido_regularizado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoSuspendo")) {
				this.setid_estado_pedido_suspendidoFK_IdEstadoPedidoSuspendo(parametrocompraSessionBean.getid_estado_pedido_suspendido());
				parametrocompraSessionBean.setid_estado_pedido_suspendido(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFormatoAutorizacion")) {
				this.setid_formato_autorizacionFK_IdFormatoAutorizacion(parametrocompraSessionBean.getid_formato_autorizacion());
				parametrocompraSessionBean.setid_formato_autorizacion(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFormatoCotizacion")) {
				this.setid_formato_cotizacionFK_IdFormatoCotizacion(parametrocompraSessionBean.getid_formato_cotizacion());
				parametrocompraSessionBean.setid_formato_cotizacion(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFormatoItem")) {
				this.setid_formato_itemFK_IdFormatoItem(parametrocompraSessionBean.getid_formato_item());
				parametrocompraSessionBean.setid_formato_item(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFormatoPedido")) {
				this.setid_formato_pedidoFK_IdFormatoPedido(parametrocompraSessionBean.getid_formato_pedido());
				parametrocompraSessionBean.setid_formato_pedido(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
				this.setid_moduloFK_IdModulo(parametrocompraSessionBean.getid_modulo());
				parametrocompraSessionBean.setid_modulo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPrioridadPedido")) {
				this.setid_prioridad_pedidoFK_IdPrioridadPedido(parametrocompraSessionBean.getid_prioridad_pedido());
				parametrocompraSessionBean.setid_prioridad_pedido(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumento")) {
				this.setid_tipo_documentoFK_IdTipoDocumento(parametrocompraSessionBean.getid_tipo_documento());
				parametrocompraSessionBean.setid_tipo_documento(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoMovimiento")) {
				this.setid_tipo_movimientoFK_IdTipoMovimiento(parametrocompraSessionBean.getid_tipo_movimiento());
				parametrocompraSessionBean.setid_tipo_movimiento(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoMovimientoModulo")) {
				this.setid_tipo_movimiento_moduloFK_IdTipoMovimientoModulo(parametrocompraSessionBean.getid_tipo_movimiento_modulo());
				parametrocompraSessionBean.setid_tipo_movimiento_modulo(-1L);
			}
		}
		
		this.parametrocompraSessionBean.setsUltimaBusquedaParametroCompra("");
		this.parametrocompraSessionBean.setiNumeroPaginacion(ParametroCompraConstantesFunciones.INUMEROPAGINACION);
		this.parametrocompraSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaParametroCompra(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioParametroCompra() {
		this.updateBorderResaltarBusquedasFormularioParametroCompra();
		this.updateVisibilidadBusquedasFormularioParametroCompra();
		this.updateHabilitarBusquedasFormularioParametroCompra();
	}
	
	public void updateBorderResaltarBusquedasFormularioParametroCompra() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasParametroCompra.getComponents().length>0) {
	

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdBodegaParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdBodegaParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdBodegaParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdBodegaReservaParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdBodegaReservaParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdBodegaReservaParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdEmbarcadorParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEmbarcadorParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEmbarcadorParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdEmpleadoParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEmpleadoParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEmpleadoParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoAnuladoParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoAnuladoParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoAnuladoParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoAutorizadoParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoAutorizadoParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoCotizadoParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoCotizadoParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoCotizadoParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoPendienteParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoPendienteParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoPendienteParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoRegularizadoParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoRegularizadoParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoSuspendoParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoSuspendoParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoSuspendoParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdFormatoAutorizacionParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoAutorizacionParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdFormatoAutorizacionParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdFormatoCotizacionParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoCotizacionParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdFormatoCotizacionParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdFormatoItemParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoItemParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdFormatoItemParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdFormatoPedidoParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoPedidoParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdFormatoPedidoParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdPrioridadPedidoParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdPrioridadPedidoParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdPrioridadPedidoParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdTipoDocumentoParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdTipoDocumentoParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdTipoDocumentoParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdTipoMovimientoParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdTipoMovimientoParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdTipoMovimientoParametroCompra);
			}
		}

		if(this.parametrocompraConstantesFunciones.resaltarFK_IdTipoMovimientoModuloParametroCompra!=null) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdTipoMovimientoModuloParametroCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdTipoMovimientoModuloParametroCompra);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioParametroCompra() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasParametroCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdBodegaParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdBodegaParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdBodegaParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdBodegaReservaParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdBodegaReservaParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdBodegaReservaParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEmbarcadorParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdEmbarcadorParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdEmbarcadorParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEmpleadoParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdEmpleadoParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdEmpleadoParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoAnuladoParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdEstadoPedidoAnuladoParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdEstadoPedidoAnuladoParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdEstadoPedidoAutorizadoParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdEstadoPedidoAutorizadoParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoCotizadoParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdEstadoPedidoCotizadoParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdEstadoPedidoCotizadoParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoPendienteParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdEstadoPedidoPendienteParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdEstadoPedidoPendienteParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdEstadoPedidoRegularizadoParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdEstadoPedidoRegularizadoParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoSuspendoParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdEstadoPedidoSuspendoParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdEstadoPedidoSuspendoParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoAutorizacionParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdFormatoAutorizacionParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdFormatoAutorizacionParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoCotizacionParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdFormatoCotizacionParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdFormatoCotizacionParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoItemParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdFormatoItemParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdFormatoItemParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoPedidoParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdFormatoPedidoParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdFormatoPedidoParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdPrioridadPedidoParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdPrioridadPedidoParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdPrioridadPedidoParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdTipoDocumentoParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdTipoDocumentoParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdTipoDocumentoParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdTipoMovimientoParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdTipoMovimientoParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdTipoMovimientoParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdTipoMovimientoModuloParametroCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocompraConstantesFunciones.mostrarFK_IdTipoMovimientoModuloParametroCompra);
			if(!this.parametrocompraConstantesFunciones.mostrarFK_IdTipoMovimientoModuloParametroCompra && index>-1) {
				this.jTabbedPaneBusquedasParametroCompra.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioParametroCompra() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasParametroCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdBodegaParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdBodegaParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdBodegaParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdBodegaReservaParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdBodegaReservaParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdBodegaReservaParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEmbarcadorParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdEmbarcadorParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdEmbarcadorParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEmpleadoParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdEmpleadoParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdEmpleadoParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoAnuladoParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdEstadoPedidoAnuladoParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdEstadoPedidoAnuladoParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdEstadoPedidoAutorizadoParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdEstadoPedidoAutorizadoParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoCotizadoParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdEstadoPedidoCotizadoParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdEstadoPedidoCotizadoParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoPendienteParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdEstadoPedidoPendienteParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdEstadoPedidoPendienteParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdEstadoPedidoRegularizadoParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdEstadoPedidoRegularizadoParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoSuspendoParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdEstadoPedidoSuspendoParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdEstadoPedidoSuspendoParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoAutorizacionParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdFormatoAutorizacionParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdFormatoAutorizacionParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoCotizacionParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdFormatoCotizacionParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdFormatoCotizacionParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoItemParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdFormatoItemParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdFormatoItemParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoPedidoParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdFormatoPedidoParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdFormatoPedidoParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdPrioridadPedidoParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdPrioridadPedidoParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdPrioridadPedidoParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdTipoDocumentoParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdTipoDocumentoParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdTipoDocumentoParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdTipoMovimientoParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdTipoMovimientoParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdTipoMovimientoParametroCompra);
			}

			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdTipoMovimientoModuloParametroCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocompraConstantesFunciones.activarFK_IdTipoMovimientoModuloParametroCompra);
				this.jTabbedPaneBusquedasParametroCompra.setEnabledAt(index,this.parametrocompraConstantesFunciones.activarFK_IdTipoMovimientoModuloParametroCompra);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaParametroCompra(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdBodega")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdBodegaParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdBodegaParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdBodegaParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdBodegaReserva")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdBodegaReservaParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdBodegaReservaParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdBodegaReservaParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmbarcador")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEmbarcadorParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdEmbarcadorParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEmbarcadorParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpleado")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEmpleadoParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdEmpleadoParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEmpleadoParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoPedidoAnulado")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoAnuladoParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdEstadoPedidoAnuladoParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoAnuladoParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoPedidoAutorizado")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoAutorizadoParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdEstadoPedidoAutorizadoParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoAutorizadoParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoPedidoCotizado")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoCotizadoParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdEstadoPedidoCotizadoParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoCotizadoParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoPedidoPendiente")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoPendienteParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdEstadoPedidoPendienteParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoPendienteParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoPedidoRegularizado")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoRegularizadoParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdEstadoPedidoRegularizadoParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoRegularizadoParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoPedidoSuspendo")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoSuspendoParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdEstadoPedidoSuspendoParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdEstadoPedidoSuspendoParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFormatoAutorizacion")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoAutorizacionParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdFormatoAutorizacionParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdFormatoAutorizacionParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFormatoCotizacion")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoCotizacionParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdFormatoCotizacionParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdFormatoCotizacionParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFormatoItem")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoItemParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdFormatoItemParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdFormatoItemParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFormatoPedido")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdFormatoPedidoParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdFormatoPedidoParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdFormatoPedidoParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdPrioridadPedido")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdPrioridadPedidoParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdPrioridadPedidoParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdPrioridadPedidoParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDocumento")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdTipoDocumentoParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdTipoDocumentoParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdTipoDocumentoParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoMovimiento")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdTipoMovimientoParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdTipoMovimientoParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdTipoMovimientoParametroCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoMovimientoModulo")) {
			index= this.jTabbedPaneBusquedasParametroCompra.indexOfComponent(this.jPanelFK_IdTipoMovimientoModuloParametroCompra);

			this.jTabbedPaneBusquedasParametroCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCompra.getComponent(index);

			this.parametrocompraConstantesFunciones.setResaltarFK_IdTipoMovimientoModuloParametroCompra(resaltar);

			jPanel.setBorder(this.parametrocompraConstantesFunciones.resaltarFK_IdTipoMovimientoModuloParametroCompra);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarParametroCompra.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioParametroCompra() throws Exception {

		if(this.jInternalFrameDetalleFormParametroCompra==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioParametroCompra();
		this.updateVisibilidadResaltarControlesFormularioParametroCompra();
		this.updateHabilitarResaltarControlesFormularioParametroCompra();
		
	}
	
	public void updateBorderResaltarControlesFormularioParametroCompra() throws Exception {
		if(this.jInternalFrameDetalleFormParametroCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.parametrocompraConstantesFunciones.resaltaridParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jLabelidParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltaridParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_empresaParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empresaParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_empresaParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarsecuencial_pedidoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_pedidoParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarsecuencial_pedidoParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarsecuencial_cotizacionParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_cotizacionParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarsecuencial_cotizacionParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarsecuencial_produccionParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_produccionParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarsecuencial_produccionParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_tipo_documentoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_documentoParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_tipo_documentoParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_tipo_movimientoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimientoParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_tipo_movimientoParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_bodegaParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodegaParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_bodegaParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_bodega_reservaParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodega_reservaParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_bodega_reservaParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_empleadoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empleadoParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_empleadoParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_embarcadorParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_embarcadorParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_embarcadorParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarcon_centro_costoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jCheckBoxcon_centro_costoParametroCompra.setBorderPainted(true);this.jInternalFrameDetalleFormParametroCompra.jCheckBoxcon_centro_costoParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarcon_centro_costoParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltartexto_mailParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jTextAreatexto_mailParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltartexto_mailParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_moduloParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_moduloParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_moduloParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_tipo_movimiento_moduloParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimiento_moduloParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_tipo_movimiento_moduloParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltardescripcionParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jTextAreadescripcionParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltardescripcionParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_formato_pedidoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_pedidoParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_formato_pedidoParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_pendienteParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_pendienteParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_pendienteParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_formato_cotizacionParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_cotizacionParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_formato_cotizacionParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_cotizadoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_cotizadoParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_cotizadoParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_formato_autorizacionParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_autorizacionParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_formato_autorizacionParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_autorizadoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_autorizadoParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_autorizadoParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_formato_itemParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_itemParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_formato_itemParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_anuladoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_anuladoParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_anuladoParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_prioridad_pedidoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_prioridad_pedidoParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_prioridad_pedidoParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_suspendidoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_suspendidoParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_suspendidoParametroCompra);}
		if(this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_regularizadoParametroCompra!=null && this.jInternalFrameDetalleFormParametroCompra!=null) {this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_regularizadoParametroCompra.setBorder(this.parametrocompraConstantesFunciones.resaltarid_estado_pedido_regularizadoParametroCompra);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioParametroCompra() throws Exception {		
		if(this.jInternalFrameDetalleFormParametroCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) {
	
		//this.jInternalFrameDetalleFormParametroCompra.jLabelidParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostraridParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelidParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostraridParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empresaParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_empresaParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_empresaParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_empresaParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_pedidoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarsecuencial_pedidoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelsecuencial_pedidoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarsecuencial_pedidoParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_cotizacionParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarsecuencial_cotizacionParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelsecuencial_cotizacionParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarsecuencial_cotizacionParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_produccionParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarsecuencial_produccionParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelsecuencial_produccionParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarsecuencial_produccionParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_documentoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_tipo_documentoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_tipo_documentoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_tipo_documentoParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimientoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_tipo_movimientoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_tipo_movimientoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_tipo_movimientoParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodegaParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_bodegaParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_bodegaParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_bodegaParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodega_reservaParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_bodega_reservaParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_bodega_reservaParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_bodega_reservaParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empleadoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_empleadoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_empleadoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_empleadoParametroCompra);
			this.jInternalFrameDetalleFormParametroCompra.jButtonid_empleadoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_empleadoParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_embarcadorParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_embarcadorParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_embarcadorParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_embarcadorParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jCheckBoxcon_centro_costoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarcon_centro_costoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelcon_centro_costoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarcon_centro_costoParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jTextAreatexto_mailParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrartexto_mailParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPaneltexto_mailParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrartexto_mailParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_moduloParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_moduloParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_moduloParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_moduloParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimiento_moduloParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_tipo_movimiento_moduloParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_tipo_movimiento_moduloParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_tipo_movimiento_moduloParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jTextAreadescripcionParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrardescripcionParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPaneldescripcionParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrardescripcionParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_pedidoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_formato_pedidoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_formato_pedidoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_formato_pedidoParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_pendienteParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_pendienteParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_estado_pedido_pendienteParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_pendienteParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_cotizacionParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_formato_cotizacionParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_formato_cotizacionParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_formato_cotizacionParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_cotizadoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_cotizadoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_estado_pedido_cotizadoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_cotizadoParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_autorizacionParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_formato_autorizacionParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_formato_autorizacionParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_formato_autorizacionParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_autorizadoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_autorizadoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_estado_pedido_autorizadoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_autorizadoParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_itemParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_formato_itemParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_formato_itemParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_formato_itemParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_anuladoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_anuladoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_estado_pedido_anuladoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_anuladoParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_prioridad_pedidoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_prioridad_pedidoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_prioridad_pedidoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_prioridad_pedidoParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_suspendidoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_suspendidoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_estado_pedido_suspendidoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_suspendidoParametroCompra);
		//this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_regularizadoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_regularizadoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jPanelid_estado_pedido_regularizadoParametroCompra.setVisible(this.parametrocompraConstantesFunciones.mostrarid_estado_pedido_regularizadoParametroCompra);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioParametroCompra() throws Exception {
		if(this.jInternalFrameDetalleFormParametroCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroCompra!=null) {
	
		this.jInternalFrameDetalleFormParametroCompra.jLabelidParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activaridParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empresaParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_empresaParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_pedidoParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarsecuencial_pedidoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_cotizacionParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarsecuencial_cotizacionParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jTextFieldsecuencial_produccionParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarsecuencial_produccionParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_documentoParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_tipo_documentoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimientoParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_tipo_movimientoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodegaParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_bodegaParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_bodega_reservaParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_bodega_reservaParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_empleadoParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_empleadoParametroCompra);
			this.jInternalFrameDetalleFormParametroCompra.jButtonid_empleadoParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_empleadoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_embarcadorParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_embarcadorParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jCheckBoxcon_centro_costoParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarcon_centro_costoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jTextAreatexto_mailParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activartexto_mailParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_moduloParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_moduloParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_tipo_movimiento_moduloParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_tipo_movimiento_moduloParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jTextAreadescripcionParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activardescripcionParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_pedidoParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_formato_pedidoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_pendienteParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_estado_pedido_pendienteParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_cotizacionParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_formato_cotizacionParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_cotizadoParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_estado_pedido_cotizadoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_autorizacionParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_formato_autorizacionParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_autorizadoParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_estado_pedido_autorizadoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_formato_itemParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_formato_itemParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_anuladoParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_estado_pedido_anuladoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_prioridad_pedidoParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_prioridad_pedidoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_suspendidoParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_estado_pedido_suspendidoParametroCompra);
		this.jInternalFrameDetalleFormParametroCompra.jComboBoxid_estado_pedido_regularizadoParametroCompra.setEnabled(this.parametrocompraConstantesFunciones.activarid_estado_pedido_regularizadoParametroCompra);
		}
	}
	
		
}